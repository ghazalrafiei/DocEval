['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Register information about a new language.
 ','line_number':29,'multiline':True]['text':' Intentionally using the `ModesRegistry` here to avoid','line_number':33,'multiline':False]['text':' instantiating services too quickly in the standalone editor.','line_number':34,'multiline':False]['text':'*
 * Get the information of all the registered languages.
 ','line_number':38,'multiline':True]['text':'*
 * An event emitted when a language is associated for the first time with a text model.
 * @event
 ','line_number':52,'multiline':True]['text':' stop listening','line_number':61,'multiline':False]['text':' invoke actual listener','line_number':63,'multiline':False]['text':'*
 * An event emitted when a language is associated for the first time with a text model or
 * when a language is encountered during the tokenization of another language.
 * @event
 ','line_number':71,'multiline':True]['text':' stop listening','line_number':81,'multiline':False]['text':' invoke actual listener','line_number':83,'multiline':False]['text':'*
 * Set the editing configuration for a language.
 ','line_number':91,'multiline':True]['text':'*
 * @internal
 ','line_number':103,'multiline':True]['text':' NOOP','line_number':117,'multiline':False]['text':'*
 * @internal
 ','line_number':137,'multiline':True]['text':' NOOP','line_number':151,'multiline':False]['text':' Prevent issues stemming from a buggy external tokenizer.','line_number':165,'multiline':False]['text':' Force first token to start at first index!','line_number':167,'multiline':False]['text':' Force tokens to be after one another!','line_number':170,'multiline':False]['text':' try to save an object if possible','line_number':186,'multiline':False]['text':' same metadata','line_number':211,'multiline':False]['text':' Prevent issues stemming from a buggy external tokenizer.','line_number':217,'multiline':False]['text':' Force first token to start at first index!','line_number':219,'multiline':False]['text':' Force tokens to be after one another!','line_number':222,'multiline':False]['text':' try to save an object if possible','line_number':244,'multiline':False]['text':'*
 * A token.
 ','line_number':255,'multiline':True]['text':'*
 * The result of a line tokenization.
 ','line_number':263,'multiline':True]['text':'*
	 * The list of tokens on the line.
	 ','line_number':267,'multiline':True]['text':'*
	 * The tokenization end state.
	 * A pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned.
	 ','line_number':271,'multiline':True]['text':'*
 * The result of a line tokenization.
 ','line_number':278,'multiline':True]['text':'*
	 * The tokens on the line in a binary, encoded format. Each token occupies two array indices. For token i:
	 *  - at offset 2*i => startIndex
	 *  - at offset 2*i + 1 => metadata
	 * Meta data is in binary format:
	 * - -------------------------------------------
	 *     3322 2222 2222 1111 1111 1100 0000 0000
	 *     1098 7654 3210 9876 5432 1098 7654 3210
	 * - -------------------------------------------
	 *     bbbb bbbb bfff ffff ffFF FFTT LLLL LLLL
	 * - -------------------------------------------
	 *  - L = EncodedLanguageId (8 bits): Use `getEncodedLanguageId` to get the encoded ID of a language.
	 *  - T = StandardTokenType (2 bits): Other = 0, Comment = 1, String = 2, RegEx = 3.
	 *  - F = FontStyle (4 bits): None = 0, Italic = 1, Bold = 2, Underline = 4, Strikethrough = 8.
	 *  - f = foreground ColorId (9 bits)
	 *  - b = background ColorId (9 bits)
	 *  - The color value for each colorId is defined in IStandaloneThemeData.customTokenColors:
	 * e.g. colorId = 1 is stored in IStandaloneThemeData.customTokenColors[1]. Color id = 0 means no color,
	 * id = 1 is for the default foreground color, id = 2 for the default background.
	 ','line_number':282,'multiline':True]['text':'*
	 * The tokenization end state.
	 * A pointer will be held to this and the object should not be modified by the tokenizer after the pointer is returned.
	 ','line_number':303,'multiline':True]['text':'*
 * A factory for token providers.
 ','line_number':310,'multiline':True]['text':'*
 * A "manual" provider of tokens.
 ','line_number':317,'multiline':True]['text':'*
	 * The initial state of a language. Will be the state passed in to tokenize the first line.
	 ','line_number':321,'multiline':True]['text':'*
	 * Tokenize a line given the state at the beginning of the line.
	 ','line_number':325,'multiline':True]['text':'*
 * A "manual" provider of tokens, returning tokens in a binary form.
 ','line_number':331,'multiline':True]['text':'*
	 * The initial state of a language. Will be the state passed in to tokenize the first line.
	 ','line_number':335,'multiline':True]['text':'*
	 * Tokenize a line given the state at the beginning of the line.
	 ','line_number':339,'multiline':True]['text':'*
	 * Tokenize a line given the state at the beginning of the line.
	 ','line_number':343,'multiline':True]['text':'*
 * Change the color map that is used for token colors.
 * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA
 ','line_number':361,'multiline':True]['text':'*
 * @internal
 ','line_number':378,'multiline':True]['text':'*
 * Register a tokens provider factory for a language. This tokenizer will be exclusive with a tokenizer
 * set using `setTokensProvider` or one created using `setMonarchTokensProvider`, but will work together
 * with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`.
 ','line_number':394,'multiline':True]['text':'*
 * Set the tokens provider for a language (manual implementation). This tokenizer will be exclusive
 * with a tokenizer created using `setMonarchTokensProvider`, or with `registerTokensProviderFactory`,
 * but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider`
 * or `registerDocumentRangeSemanticTokensProvider`.
 ','line_number':413,'multiline':True]['text':'*
 * Set the tokens provider for a language (monarch implementation). This tokenizer will be exclusive
 * with a tokenizer set using `setTokensProvider`, or with `registerTokensProviderFactory`, but will
 * work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or
 * `registerDocumentRangeSemanticTokensProvider`.
 ','line_number':430,'multiline':True]['text':'*
 * Register a reference provider (used by e.g. reference search).
 ','line_number':446,'multiline':True]['text':'*
 * Register a rename provider (used by e.g. rename symbol).
 ','line_number':454,'multiline':True]['text':'*
 * Register a signature help provider (used by e.g. parameter hints).
 ','line_number':462,'multiline':True]['text':'*
 * Register a hover provider (used by e.g. editor hover).
 ','line_number':470,'multiline':True]['text':'*
 * Register a document symbol provider (used by e.g. outline).
 ','line_number':495,'multiline':True]['text':'*
 * Register a document highlight provider (used by e.g. highlight occurrences).
 ','line_number':503,'multiline':True]['text':'*
 * Register an linked editing range provider.
 ','line_number':511,'multiline':True]['text':'*
 * Register a definition provider (used by e.g. go to definition).
 ','line_number':519,'multiline':True]['text':'*
 * Register a implementation provider (used by e.g. go to implementation).
 ','line_number':527,'multiline':True]['text':'*
 * Register a type definition provider (used by e.g. go to type definition).
 ','line_number':535,'multiline':True]['text':'*
 * Register a code lens provider (used by e.g. inline code lenses).
 ','line_number':543,'multiline':True]['text':'*
 * Register a code action provider (used by e.g. quick fix).
 ','line_number':551,'multiline':True]['text':'*
 * Register a formatter that can handle only entire models.
 ','line_number':570,'multiline':True]['text':'*
 * Register a formatter that can handle a range inside a model.
 ','line_number':578,'multiline':True]['text':'*
 * Register a formatter than can do formatting as the user types.
 ','line_number':586,'multiline':True]['text':'*
 * Register a link provider that can find links in text.
 ','line_number':594,'multiline':True]['text':'*
 * Register a completion item provider (use by e.g. suggestions).
 ','line_number':602,'multiline':True]['text':'*
 * Register a document color provider (used by Color Picker, Color Decorator).
 ','line_number':610,'multiline':True]['text':'*
 * Register a folding range provider
 ','line_number':618,'multiline':True]['text':'*
 * Register a declaration provider
 ','line_number':626,'multiline':True]['text':'*
 * Register a selection range provider
 ','line_number':634,'multiline':True]['text':'*
 * Register a document semantic tokens provider. A semantic tokens provider will complement and enhance a
 * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`
 * or `setTokensProvider`.
 *
 * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.
 ','line_number':642,'multiline':True]['text':'*
 * Register a document range semantic tokens provider. A semantic tokens provider will complement and enhance a
 * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`
 * or `setTokensProvider`.
 *
 * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.
 ','line_number':654,'multiline':True]['text':'*
 * Register an inline completions provider.
 ','line_number':666,'multiline':True]['text':'*
 * Register an inlay hints provider.
 ','line_number':674,'multiline':True]['text':'*
 * Contains additional diagnostic information about the context in which
 * a [code action](#CodeActionProvider.provideCodeActions) is run.
 ','line_number':682,'multiline':True]['text':'*
	 * An array of diagnostics.
	 ','line_number':688,'multiline':True]['text':'*
	 * Requested kind of actions to return.
	 ','line_number':693,'multiline':True]['text':'*
	 * The reason why code actions were requested.
	 ','line_number':698,'multiline':True]['text':'*
 * The code action interface defines the contract between extensions and
 * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.
 ','line_number':704,'multiline':True]['text':'*
	 * Provide commands for the given document and range.
	 ','line_number':709,'multiline':True]['text':'*
	 * Given a code action fill in the edit. Will only invoked when missing.
	 ','line_number':714,'multiline':True]['text':'*
 * Metadata about the type of code actions that a {@link CodeActionProvider} provides.
 ','line_number':722,'multiline':True]['text':'*
	 * List of code action kinds that a {@link CodeActionProvider} may return.
	 *
	 * This list is used to determine if a given `CodeActionProvider` should be invoked or not.
	 * To avoid unnecessary computation, every `CodeActionProvider` should list use `providedCodeActionKinds`. The
	 * list of kinds may either be generic, such as `["quickfix", "refactor", "source"]`, or list out every kind provided,
	 * such as `["quickfix.removeLine", "source.fixAll" ...]`.
	 ','line_number':726,'multiline':True]['text':'*
 * @internal
 ','line_number':739,'multiline':True]['text':' provider methods','line_number':750,'multiline':False]['text':' enums','line_number':782,'multiline':False]['text':' classes','line_number':796,'multiline':False]