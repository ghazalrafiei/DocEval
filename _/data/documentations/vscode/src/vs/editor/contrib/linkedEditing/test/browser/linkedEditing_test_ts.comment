['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * Simple insertion
	 ','line_number':148,'multiline':True]['text':'*
	 * Simple insertion - end
	 ','line_number':169,'multiline':True]['text':'*
	 * Boundary insertion
	 ','line_number':190,'multiline':True]['text':'*
	 * Insert + Move
	 ','line_number':217,'multiline':True]['text':'*
	 * Selection insert
	 ','line_number':243,'multiline':True]['text':'*
	 * @todo
	 * Undefined behavior
	 ','line_number':267,'multiline':True]['text':' testCase('Selection insert - across two boundary', state, async (editor) => {','line_number':271,'multiline':False]['text':' 	const pos = new Position(1, 2);','line_number':272,'multiline':False]['text':' 	await editor.setPosition(pos);','line_number':273,'multiline':False]['text':' 	await linkedEditingContribution.updateLinkedUI(pos);','line_number':274,'multiline':False]['text':' 	await editor.setSelection(new Range(1, 4, 1, 9));','line_number':275,'multiline':False]['text':' 	await editor.trigger('keyboard', Handler.Type, { text: 'i' });','line_number':276,'multiline':False]['text':' }, '<ooioo>');','line_number':277,'multiline':False]['text':'*
	 * Break out behavior
	 ','line_number':279,'multiline':True]['text':'*
	 * Break out with custom provider wordPattern
	 ','line_number':320,'multiline':True]['text':'*
	 * Delete
	 ','line_number':370,'multiline':True]['text':'*
	 * Todo: Fix test
	 ','line_number':400,'multiline':True]['text':' testCase('Delete - left all', state, async (editor) => {','line_number':403,'multiline':False]['text':' 	const pos = new Position(1, 3);','line_number':404,'multiline':False]['text':' 	await editor.setPosition(pos);','line_number':405,'multiline':False]['text':' 	await linkedEditingContribution.updateLinkedUI(pos);','line_number':406,'multiline':False]['text':' 	await editor.trigger('keyboard', 'deleteAllLeft', {});','line_number':407,'multiline':False]['text':' }, '></>');','line_number':408,'multiline':False]['text':'*
	 * Todo: Fix test
	 ','line_number':410,'multiline':True]['text':' testCase('Delete - left all then undo', state, async (editor) => {','line_number':413,'multiline':False]['text':' 	const pos = new Position(1, 5);','line_number':414,'multiline':False]['text':' 	await editor.setPosition(pos);','line_number':415,'multiline':False]['text':' 	await linkedEditingContribution.updateLinkedUI(pos);','line_number':416,'multiline':False]['text':' 	await editor.trigger('keyboard', 'deleteAllLeft', {});','line_number':417,'multiline':False]['text':' 	editor.undo();','line_number':418,'multiline':False]['text':' }, '></ooo>');','line_number':419,'multiline':False]['text':'*
	 * Undo / redo
	 ','line_number':443,'multiline':True]['text':'*
	 * Multi line
	 ','line_number':462,'multiline':True]