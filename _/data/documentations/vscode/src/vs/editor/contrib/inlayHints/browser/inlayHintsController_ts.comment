['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' --- hint caching service (per session)','line_number':39,'multiline':False]['text':' --- rendered label','line_number':66,'multiline':False]['text':' --- controller','line_number':96,'multiline':False]['text':' different "on" modes: always','line_number':160,'multiline':False]['text':' different "on" modes: offUnlessPressed, or onUnlessPressed','line_number':163,'multiline':False]['text':' iff possible, quickly update from cache','line_number':190,'multiline':False]['text':' cache items when switching files etc','line_number':196,'multiline':False]['text':' listen to provider changes','line_number':221,'multiline':False]['text':' ignore event when request is already scheduled','line_number':226,'multiline':False]['text':' update when scroll position changes','line_number':252,'multiline':False]['text':' uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to','line_number':253,'multiline':False]['text':' typing or due to "actual" scrolling','line_number':254,'multiline':False]['text':' update less aggressive when typing','line_number':262,'multiline':False]['text':' mouse gestures','line_number':267,'multiline':False]['text':' let removeHighlight = () => { };','line_number':278,'multiline':False]['text':' resolve the item','line_number':293,'multiline':False]['text':' render link => when the modifier is pressed and when there is a command or location','line_number':298,'multiline':False]['text':' location -> execute go to def','line_number':318,'multiline':False]['text':' command -> execute it','line_number':321,'multiline':False]['text':' return inlay hints but with an anchor that reflects "updates"','line_number':398,'multiline':False]['text':' that happened after receiving them, e.g adding new lines before a hint','line_number':399,'multiline':False]['text':' an inlay item can be rendered as multiple decorations','line_number':404,'multiline':False]['text':' but they will all uses the same range','line_number':405,'multiline':False]['text':' update range with whatever the editor has tweaked it to','line_number':410,'multiline':False]['text':' utils to collect/create injected text decorations','line_number':437,'multiline':False]['text':' className: "rangeHighlight", // DEBUG highlight to see to what range a hint is attached','line_number':453,'multiline':False]['text':' "original" range is empty','line_number':455,'multiline':False]['text':'','line_number':473,'multiline':False]['text':' whitespace leading the actual label','line_number':480,'multiline':False]['text':' the label with its parts','line_number':485,'multiline':False]['text':' active link!','line_number':510,'multiline':False]['text':' only element','line_number':520,'multiline':False]['text':' first element','line_number':524,'multiline':False]['text':' last element','line_number':528,'multiline':False]['text':' whitespace trailing the actual label','line_number':545,'multiline':False]['text':' collect all decoration ids that are affected by the ranges','line_number':555,'multiline':False]['text':' and only update those decorations','line_number':556,'multiline':False]['text':' --- accessibility','line_number':626,'multiline':False]['text':' Prevents the view from potentially visible whitespace','line_number':646,'multiline':False]['text':' dispose after sending to ext host','line_number':664,'multiline':False]