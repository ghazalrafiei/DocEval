['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * Assigned when the replace pattern is entirely static.
 ','line_number':14,'multiline':True]['text':'*
 * Assigned when the replace pattern has replacement patterns.
 ','line_number':22,'multiline':True]['text':' static value ReplacePiece','line_number':65,'multiline':False]['text':' match index ReplacePiece','line_number':70,'multiline':False]['text':' A match can be undefined','line_number':119,'multiline':False]['text':'*
 * A replace piece can either be a static string or an index to a specific match.
 ','line_number':130,'multiline':True]['text':'*
 * \n			=> inserts a LF
 * \t			=> inserts a TAB
 * \\			=> inserts a "\".
 * \u			=> upper-cases one character in a match.
 * \U			=> upper-cases ALL remaining characters in a match.
 * \l			=> lower-cases one character in a match.
 * \L			=> lower-cases ALL remaining characters in a match.
 * $$			=> inserts a "$".
 * $& and $0	=> inserts the matched substring.
 * $n			=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string
 * everything else stays untouched
 *
 * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter
 ','line_number':215,'multiline':True]['text':' move to next char','line_number':243,'multiline':False]['text':' string ends with a \','line_number':247,'multiline':False]['text':' let replaceWithCharacter: string | null = null;','line_number':252,'multiline':False]['text':' \\ => inserts a "\"','line_number':256,'multiline':False]['text':' \n => inserts a LF','line_number':261,'multiline':False]['text':' \t => inserts a TAB','line_number':266,'multiline':False]['text':' Case modification of string replacements, patterned after Boost, but only applied','line_number':270,'multiline':False]['text':' to the replacement text, not subsequent content.','line_number':271,'multiline':False]['text':' \u => upper-cases one character.','line_number':273,'multiline':False]['text':' \U => upper-cases ALL following characters.','line_number':275,'multiline':False]['text':' \l => lower-cases one character.','line_number':277,'multiline':False]['text':' \L => lower-cases ALL following characters.','line_number':279,'multiline':False]['text':' move to next char','line_number':291,'multiline':False]['text':' string ends with a $','line_number':295,'multiline':False]['text':' $$ => inserts a "$"','line_number':302,'multiline':False]['text':' $& and $0 => inserts the matched substring.','line_number':309,'multiline':False]['text':' $n','line_number':317,'multiline':False]['text':' peek next char to probe for $nn','line_number':321,'multiline':False]['text':' $nn','line_number':325,'multiline':False]['text':' move to next char','line_number':327,'multiline':False]