['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' static types','line_number':82,'multiline':False]['text':' number','line_number':89,'multiline':False]['text':' variable name','line_number':101,'multiline':False]['text':' format','line_number':113,'multiline':False]['text':' not static token','line_number':120,'multiline':False]['text':' not number','line_number':121,'multiline':False]['text':' not variable','line_number':122,'multiline':False]['text':' this and previous child are text -> merge them','line_number':139,'multiline':False]['text':' normal adoption of child','line_number':142,'multiline':False]['text':' when the regex didn't match and when the transform has','line_number':329,'multiline':False]['text':' else branches, then run those','line_number':330,'multiline':False]['text':' fill in placeholders','line_number':509,'multiline':False]['text':'*
	 * Takes a snippet and returns the insertable string, e.g return the snippet-string
	 * without any placeholder, tabstop, variables etc...
	 ','line_number':611,'multiline':True]['text':' nothing','line_number':639,'multiline':False]['text':' fill in values for placeholders. the first placeholder of an index','line_number':642,'multiline':False]['text':' that has a value defines the value for all placeholders with that index','line_number':643,'multiline':False]['text':' "recurse" on children that are again placeholders','line_number':670,'multiline':False]['text':' the snippet uses placeholders but has no','line_number':693,'multiline':False]['text':' final tabstop defined -> insert at the end','line_number':694,'multiline':False]['text':' \$, \\, \} -> just text','line_number':746,'multiline':False]['text':' saw a backslash, append escaped token or that backslash','line_number':750,'multiline':False]['text':' $foo -> variable, $1 -> tabstop','line_number':762,'multiline':False]['text':' ${1:<children>}, ${1} -> placeholder','line_number':780,'multiline':False]['text':' ${1:<children>}','line_number':795,'multiline':False]['text':' ...} -> done','line_number':798,'multiline':False]['text':' fallback','line_number':808,'multiline':False]['text':' ${1|one,two,three|}','line_number':814,'multiline':False]['text':' opt, -> more','line_number':821,'multiline':False]['text':' ..|} -> done','line_number':828,'multiline':False]['text':' ${1/<regex>/<format>/<options>}','line_number':840,'multiline':False]['text':' ${1}','line_number':850,'multiline':False]['text':' ${1 <- missing curly or colon','line_number':855,'multiline':False]['text':' \, \|, or \\','line_number':870,'multiline':False]['text':' EOF','line_number':879,'multiline':False]['text':' ${foo:<children>}, ${foo} -> variable','line_number':895,'multiline':False]['text':' ${foo:<children>}','line_number':910,'multiline':False]['text':' ...} -> done','line_number':913,'multiline':False]['text':' fallback','line_number':923,'multiline':False]['text':' ${foo/<regex>/<format>/<options>}','line_number':930,'multiline':False]['text':' ${foo}','line_number':940,'multiline':False]['text':' ${foo <- missing curly or colon','line_number':945,'multiline':False]['text':' ...<regex>/<format>/<options>}','line_number':951,'multiline':False]['text':' (1) /regex','line_number':957,'multiline':False]['text':' (2) /format','line_number':977,'multiline':False]['text':' (3) /option','line_number':996,'multiline':False]['text':' invalid regexp','line_number':1011,'multiline':False]['text':' $1','line_number':1038,'multiline':False]['text':' ${1}','line_number':1043,'multiline':False]['text':' ${1:/upcase}','line_number':1053,'multiline':False]['text':' ${1:+<if>}','line_number':1064,'multiline':False]['text':' ${2:-<else>}','line_number':1072,'multiline':False]['text':' ${2:?<if>:<else>}','line_number':1080,'multiline':False]['text':' ${1:<else>}','line_number':1091,'multiline':False]