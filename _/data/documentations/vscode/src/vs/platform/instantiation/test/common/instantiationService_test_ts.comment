['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' we made this a warning','line_number':184,'multiline':False]['text':' test('@Param - too many args', function () {','line_number':185,'multiline':False]['text':' 	let service = instantiationService.create(Object.create(null));','line_number':186,'multiline':False]['text':' 	service.addSingleton(IService1, new Service1());','line_number':187,'multiline':False]['text':' 	service.addSingleton(IService2, new Service2());','line_number':188,'multiline':False]['text':' 	service.addSingleton(IService3, new Service3());','line_number':189,'multiline':False]['text':' 	assert.throws(() => service.createInstance(ParameterTarget2, true, 2));','line_number':191,'multiline':False]['text':' });','line_number':192,'multiline':False]['text':' test('@Param - too few args', function () {','line_number':194,'multiline':False]['text':' 	let service = instantiationService.create(Object.create(null));','line_number':195,'multiline':False]['text':' 	service.addSingleton(IService1, new Service1());','line_number':196,'multiline':False]['text':' 	service.addSingleton(IService2, new Service2());','line_number':197,'multiline':False]['text':' 	service.addSingleton(IService3, new Service3());','line_number':198,'multiline':False]['text':' 	assert.throws(() => service.createInstance(ParameterTarget2));','line_number':200,'multiline':False]['text':' });','line_number':201,'multiline':False]['text':' creating the service instance BEFORE the child service','line_number':345,'multiline':False]['text':' second instance must be earlier ONE','line_number':349,'multiline':False]['text':' creating the service instance AFTER the child service','line_number':355,'multiline':False]['text':' second instance must be earlier ONE','line_number':360,'multiline':False]['text':' THIS is the recursive call','line_number':372,'multiline':False]['text':' This service depends on Service1 and Service2 BUT creating Service1 creates Service2 (via recursive invocation)','line_number':381,'multiline':False]['text':' and then Servce2 should not be created a second time','line_number':382,'multiline':False]['text':' SYNC -> explodes AImpl -> [insta:BConsumer] -> BImpl -> AImpl','line_number':433,'multiline':False]['text':' ASYNC -> doesn't explode but cycle is tracked','line_number':450,'multiline':False]['text':' eager subscribe -> NO service instance','line_number':497,'multiline':False]['text':' subscribing to event doesn't trigger instantiation','line_number':504,'multiline':False]['text':' instantiation happens on first call','line_number':515,'multiline':False]