['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * A server implementation for a IPC based file system provider client.
 ','line_number':24,'multiline':True]['text':'#region File Metadata Resolving','line_number':75,'multiline':False]['text':'#endregion','line_number':89,'multiline':False]['text':'#region File Reading/Writing','line_number':91,'multiline':False]['text':' Ensure to cancel the read operation when there is no more','line_number':107,'multiline':False]['text':' listener on the other side to prevent unneeded work.','line_number':108,'multiline':False]['text':' Forward event','line_number':119,'multiline':False]['text':' Cleanup','line_number':122,'multiline':False]['text':' offset is 0 because we create a buffer to read into for each call','line_number':149,'multiline':False]['text':'#endregion','line_number':159,'multiline':False]['text':'#region Move/Copy/Delete/Create Folder','line_number':161,'multiline':False]['text':'#endregion','line_number':189,'multiline':False]['text':'#region Clone File','line_number':191,'multiline':False]['text':'#endregion','line_number':200,'multiline':False]['text':'#region File Watching','line_number':202,'multiline':False]['text':' session ID ','line_number':204,'multiline':True]['text':' session ID + request ID ','line_number':205,'multiline':True]['text':' We want a specific emitter for the given session so that events','line_number':209,'multiline':False]['text':' from the one session do not end up on the other session. As such','line_number':210,'multiline':False]['text':' we create a `SessionFileWatcher` and a `Emitter` for that session.','line_number':211,'multiline':False]['text':'#endregion','line_number':246,'multiline':False]['text':' To ensure we use one file watcher per session, we keep a','line_number':267,'multiline':False]['text':' disk file system provider instantiated for this session.','line_number':268,'multiline':False]['text':' The provider is cheap and only stateful when file watching','line_number':269,'multiline':False]['text':' starts.','line_number':270,'multiline':False]['text':'','line_number':271,'multiline':False]['text':' This is important because we want to ensure that we only','line_number':272,'multiline':False]['text':' forward events from the watched paths for this session and','line_number':273,'multiline':False]['text':' not other clients that asked to watch other paths.','line_number':274,'multiline':False]['text':' subclasses can override','line_number':306,'multiline':False]['text':' subclasses can override','line_number':310,'multiline':False]