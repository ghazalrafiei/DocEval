['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' for https://github.com/microsoft/vscode/issues/72909','line_number':105,'multiline':False]['text':' speed up all unit tests by disabling flush on write','line_number':132,'multiline':False]['text':' windows: cannot create file symbolic link without elevated context ','line_number':440,'multiline':True]['text':' trash is unreliable on Linux ','line_number':499,'multiline':True]['text':' windows: cannot create file symbolic link without elevated context ','line_number':530,'multiline':True]['text':' target the link pointed to is never deleted','line_number':549,'multiline':False]['text':' windows: cannot create file symbolic link without elevated context ','line_number':552,'multiline':True]['text':' trash is unreliable on Linux ','line_number':578,'multiline':True]['text':' same path is a no-op','line_number':1220,'multiline':False]['text':' simple clone to existing parent folder path','line_number':1223,'multiline':False]['text':' clone to same path overwrites','line_number':1235,'multiline':False]['text':' clone creates missing folders ad-hoc','line_number':1243,'multiline':False]['text':' load in sequence and keep data','line_number':1390,'multiline':False]['text':' load in parallel in expect the same result','line_number':1394,'multiline':False]['text':' error code does not seem to be supported on windows ','line_number':1560,'multiline':True]['text':' Also test when the stat size is wrong','line_number':1671,'multiline':False]['text':' windows: cannot create file symbolic link without elevated context ','line_number':1693,'multiline':True]['text':' create file','line_number':1742,'multiline':False]['text':' create file','line_number':1763,'multiline':False]['text':' windows: cannot create file symbolic link without elevated context ','line_number':1834,'multiline':True]['text':' `atomic: true` ensures we never read a truncated file','line_number':1982,'multiline':False]['text':' Here since `close` is not called, all other writes are','line_number':2006,'multiline':False]['text':' waiting on the barrier to release, so doing a readFile','line_number':2007,'multiline':False]['text':' should give us a consistent view of the file contents','line_number':2008,'multiline':False]['text':' expected because `new-folder` does not exist','line_number':2060,'multiline':False]['text':' Start reading while write is pending','line_number':2094,'multiline':False]['text':' Simulate a slow write, giving the read','line_number':2097,'multiline':False]['text':' a chance to succeed if it were not atomic','line_number':2098,'multiline':False]['text':' same content','line_number':2391,'multiline':False]['text':' writing the same content should be OK','line_number':2394,'multiline':False]['text':' this essentially verifies that the mkdirp logic implemented','line_number':2416,'multiline':False]['text':' in the file service is able to receive multiple requests for','line_number':2417,'multiline':False]['text':' the same folder and will not throw errors if another racing','line_number':2418,'multiline':False]['text':' call succeeded first.','line_number':2419,'multiline':False]['text':' read multiple times from position 0','line_number':2453,'multiline':False]['text':' read multiple times at various locations','line_number':2462,'multiline':False]['text':' no longer in sequence of posInFile ','line_number':2480,'multiline':True]['text':' back in sequence ','line_number':2492,'multiline':True]