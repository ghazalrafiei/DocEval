['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'#region Events (unsupported)','line_number':24,'multiline':False]['text':'#endregion','line_number':29,'multiline':False]['text':'#region File Capabilities','line_number':31,'multiline':False]['text':'#endregion','line_number':50,'multiline':False]['text':'#region File Metadata Resolving','line_number':59,'multiline':False]['text':'#endregion','line_number':109,'multiline':False]['text':'#region File Reading/Writing','line_number':111,'multiline':False]['text':' Set a highWaterMark to prevent the stream','line_number':115,'multiline':False]['text':' for file upload to produce large buffers','line_number':116,'multiline':False]['text':' in-memory','line_number':117,'multiline':False]['text':' Partial file: implemented simply via `readFile`','line_number':130,'multiline':False]['text':' Entire file','line_number':145,'multiline':False]['text':' Write buffer into stream but make sure to wait','line_number':155,'multiline':False]['text':' in case the `highWaterMark` is reached','line_number':156,'multiline':False]['text':' Validate target unless { create: true, overwrite: true }','line_number':195,'multiline':False]['text':' Create target as needed','line_number':208,'multiline':False]['text':' Write to target overwriting any existing contents','line_number':221,'multiline':False]['text':'#endregion','line_number':230,'multiline':False]['text':'#region Move/Copy/Delete/Create Folder','line_number':232,'multiline':False]['text':' no-op if the paths are the same','line_number':263,'multiline':False]['text':' Implement file rename by write + delete','line_number':266,'multiline':False]['text':' File API does not support any real rename otherwise','line_number':276,'multiline':False]['text':'#endregion','line_number':285,'multiline':False]['text':'#region File Watching (unsupported)','line_number':287,'multiline':False]['text':'#endregion','line_number':293,'multiline':False]['text':'#region File/Directoy Handle Registry','line_number':295,'multiline':False]['text':' Compute a valid handle ID in case this exists already','line_number':315,'multiline':False]['text':' Remember in IndexDB for future lookup','line_number':328,'multiline':False]['text':' First: try to find a well known handle first','line_number':340,'multiline':False]['text':' Second: walk up parent directories and resolve handle if possible','line_number':343,'multiline':False]['text':' Ignore','line_number':354,'multiline':False]['text':' guard against possible DOMException','line_number':374,'multiline':False]['text':' return when root is reached to prevent infinite recursion','line_number':386,'multiline':False]['text':' guard against possible DOMException','line_number':394,'multiline':False]['text':' We store file system handles with the `handle.name`','line_number':400,'multiline':False]['text':' and as such require the resource to be on the root','line_number':401,'multiline':False]['text':' remove potential slash from the end of the path','line_number':406,'multiline':False]['text':' First: check if we have a known handle stored in memory','line_number':408,'multiline':False]['text':' Second: check if we have a persisted handle in IndexedDB','line_number':414,'multiline':False]['text':' this can fail with a DOMException','line_number':423,'multiline':False]['text':' Third: fail with an error','line_number':437,'multiline':False]['text':'#endregion','line_number':441,'multiline':False]['text':' avoid double conversion','line_number':445,'multiline':False]