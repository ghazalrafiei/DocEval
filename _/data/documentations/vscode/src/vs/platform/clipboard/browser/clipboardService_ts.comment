['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' unsupported in web (only in-memory)','line_number':20,'multiline':False]['text':' In Safari, it has the following note:','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' "The request to write to the clipboard must be triggered during a user gesture.','line_number':35,'multiline':False]['text':' A call to clipboard.write or clipboard.writeText outside the scope of a user','line_number':36,'multiline':False]['text':' gesture(such as "click" or "touch" event handlers) will result in the immediate','line_number':37,'multiline':False]['text':' rejection of the promise returned by the API call."','line_number':38,'multiline':False]['text':' From: https://webkit.org/blog/10855/async-clipboard-api/','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':' Since extensions run in a web worker, and handle gestures in an asynchronous way,','line_number':41,'multiline':False]['text':' they are not classified by Safari as "in response to a user gesture" and will reject.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' This function sets up some handlers to work around that behavior.','line_number':44,'multiline':False]['text':' Cancel the previous promise since we just created a new one in response to this new event','line_number':49,'multiline':False]['text':' The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.','line_number':55,'multiline':False]['text':' This allows us to pass in a Promise that will either be cancelled by another event or','line_number':56,'multiline':False]['text':' resolved with the contents of the first call to this.writeText.','line_number':57,'multiline':False]['text':' see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters','line_number':58,'multiline':False]['text':' With type: only in-memory is supported','line_number':76,'multiline':False]['text':' For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`','line_number':84,'multiline':False]['text':' above to resolve and successfully copy to the clipboard. If we let this continue, Safari','line_number':85,'multiline':False]['text':' would throw an error because this call stack doesn't appear to originate from a user gesture.','line_number':86,'multiline':False]['text':' Guard access to navigator.clipboard with try/catch','line_number':90,'multiline':False]['text':' as we have seen DOMExceptions in certain browsers','line_number':91,'multiline':False]['text':' due to security policies.','line_number':92,'multiline':False]['text':' Fallback to textarea and execCommand solution','line_number':99,'multiline':False]['text':' With type: only in-memory is supported','line_number':125,'multiline':False]['text':' Guard access to navigator.clipboard with try/catch','line_number':130,'multiline':False]['text':' as we have seen DOMExceptions in certain browsers','line_number':131,'multiline':False]['text':' due to security policies.','line_number':132,'multiline':False]['text':' unsupported in web (only in-memory)','line_number':142,'multiline':False]['text':' unsupported in web (only in-memory)','line_number':152,'multiline':False]