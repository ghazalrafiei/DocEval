['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' This is the session used run the tunnel access.','line_number':43,'multiline':False]['text':' if set, the remote tunnel access is currently enabled.','line_number':44,'multiline':False]['text':' if not set, the remote tunnel access is currently disabled.','line_number':45,'multiline':False]['text':' Boolean indicating whether the tunnel should be installed as a service.','line_number':47,'multiline':False]['text':'*
 * This service runs on the shared service. It is running the `code-tunnel` command
 * to make the current machine available for remote access.
 ','line_number':50,'multiline':True]['text':'*
	 * "Mode" in the terminal state we want to get to -- started, stopped, and
	 * the attributes associated with each.
	 *
	 * At any given time, work may be ongoing to get `_tunnelStatus` into a
	 * state that reflects the desired `mode`.
	 ','line_number':69,'multiline':True]['text':' appRoot = /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app','line_number':175,'multiline':False]['text':' bin = /Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin','line_number':176,'multiline':False]['text':' appRoot = C:\Users\<name>\AppData\Local\Programs\Microsoft VS Code Insiders\resources\app','line_number':179,'multiline':False]['text':' bin = C:\Users\<name>\AppData\Local\Programs\Microsoft VS Code Insiders\bin','line_number':180,'multiline':False]['text':' appRoot = /usr/share/code-insiders/resources/app','line_number':181,'multiline':False]['text':' bin = /usr/share/code-insiders/bin','line_number':182,'multiline':False]['text':' Be careful to only uninstall the service if we're the ones who installed it:','line_number':216,'multiline':False]['text':' split and find the line, since in dev builds additional noise is','line_number':269,'multiline':False]['text':' added by cargo to the output.','line_number':270,'multiline':False]['text':' If a tunnel is running but the mode isn't "active", we'll still attach','line_number':287,'multiline':False]['text':' to the tunnel to show its state in the UI. If neither are true, disconnect','line_number':288,'multiline':False]['text':' I thought about calling `code tunnel kill` here, but having multiple','line_number':342,'multiline':False]['text':' tunnel processes running is pretty much idempotent. If there's','line_number':343,'multiline':False]['text':' another tunnel process running, the service process will','line_number':344,'multiline':False]['text':' take over when it exits, no hard feelings.','line_number':345,'multiline':False]['text':' process exited unexpectedly','line_number':403,'multiline':False]