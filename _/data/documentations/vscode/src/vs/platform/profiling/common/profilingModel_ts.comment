['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' #region','line_number':8,'multiline':False]['text':' https://github.com/microsoft/vscode-js-profile-visualizer/blob/6e7401128ee860be113a916f80fcfe20ac99418e/packages/vscode-js-profile-core/src/cpu/model.ts#L4','line_number':9,'multiline':False]['text':'   source: Dap.Source;','line_number':32,'multiline':False]['text':'   category: Category;','line_number':51,'multiline':False]['text':'   $vscode?: IJsDebugAnnotations;','line_number':76,'multiline':False]['text':'*
 * Recursive function that computes and caches the aggregate time for the
 * children of the computed now.
 ','line_number':81,'multiline':True]['text':' source: {','line_number':124,'multiline':False]['text':' 	name: maybeFileUrlToPath(callFrame.url),','line_number':125,'multiline':False]['text':' 	path: maybeFileUrlToPath(callFrame.url),','line_number':126,'multiline':False]['text':' 	sourceReference: 0,','line_number':127,'multiline':False]['text':' },','line_number':128,'multiline':False]['text':' weirdly, line numbers here are 1-based, not 0-based. The position tick','line_number':139,'multiline':False]['text':' only gives line-level granularity, so 'mark' the entire range of source','line_number':140,'multiline':False]['text':' code the tick refers to','line_number':141,'multiline':False]['text':'*
 * Computes the model for the given profile.
 ','line_number':160,'multiline':True]['text':' rootPath: profile.$vscode?.rootPath,','line_number':170,'multiline':False]['text':'getBestLocation(profile, l.locations);','line_number':178,'multiline':False]['text':' category: categorize(l.callFrame, src),','line_number':185,'multiline':False]['text':' id in profile ','line_number':191,'multiline':True]['text':' incrementing ID ','line_number':191,'multiline':True]['text':' 1. Created a sorted list of nodes. It seems that the profile always has','line_number':202,'multiline':False]['text':' incrementing IDs, although they are just not initially sorted.','line_number':203,'multiline':False]['text':' make them 0-based:','line_number':208,'multiline':False]['text':' 2. The profile samples are the 'bottom-most' node, the currently running','line_number':231,'multiline':False]['text':' code. Sum of these in the self time.','line_number':232,'multiline':False]['text':' Add in an extra time delta for the last sample. `timeDeltas[0]` is the','line_number':241,'multiline':False]['text':' time before the first sample, and the time of the last sample is only','line_number':242,'multiline':False]['text':' derived (approximately) by the missing time in the sum of deltas. Save','line_number':243,'multiline':False]['text':' some work by calculating it here.','line_number':244,'multiline':False]['text':' 3. Add the aggregate times for all node children and locations','line_number':250,'multiline':False]['text':' rootPath: profile.$vscode?.rootPath,','line_number':263,'multiline':False]['text':'#endregion','line_number':327,'multiline':False]