['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * An operation to flush the contents. Can be synchronous.
	 ','line_number':52,'multiline':True]['text':' do nothing ','line_number':65,'multiline':True]['text':'*
	 * Id of the logger.
	 ','line_number':98,'multiline':True]['text':'*
	 * Name of the logger.
	 ','line_number':103,'multiline':True]['text':'*
	 * Do not create rotating files if max size exceeds.
	 ','line_number':108,'multiline':True]['text':'*
	 * Do not use formatters.
	 ','line_number':113,'multiline':True]['text':'*
	 * When to log. Set to `always` to log always.
	 ','line_number':118,'multiline':True]['text':'*
	 * Whether the log should be hidden from the user.
	 ','line_number':123,'multiline':True]['text':'*
	 * Condition which must be true to show this logger
	 ','line_number':128,'multiline':True]['text':'*
	 * Id of the extension that created this logger.
	 ','line_number':133,'multiline':True]['text':'*
	 * Creates a logger for the given resource, or gets one if it already exists.
	 *
	 * This will also register the logger with the logger service.
	 ','line_number':158,'multiline':True]['text':'*
	 * Creates a logger with the given id in the logs folder, or gets one if it already exists.
	 *
	 * This will also register the logger with the logger service.
	 ','line_number':165,'multiline':True]['text':'*
	 * Gets an existing logger, if any.
	 ','line_number':172,'multiline':True]['text':'*
	 * An event which fires when the log level of a logger has changed
	 ','line_number':177,'multiline':True]['text':'*
	 * Set default log level.
	 ','line_number':182,'multiline':True]['text':'*
	 * Set log level for a logger.
	 ','line_number':187,'multiline':True]['text':'*
	 * Get log level for a logger or the default log level.
	 ','line_number':192,'multiline':True]['text':'*
	 * An event which fires when the visibility of a logger has changed
	 ','line_number':197,'multiline':True]['text':'*
	 * Set the visibility of a logger.
	 ','line_number':202,'multiline':True]['text':'*
	 * An event which fires when the logger resources are changed
	 ','line_number':207,'multiline':True]['text':'*
	 * Register a logger with the logger service.
	 *
	 * Note that this will not create a logger, but only register it.
	 *
	 * Use `createLogger` to create a logger and register it.
	 *
	 * Use it when you want to register a logger that is not created by the logger service.
	 ','line_number':212,'multiline':True]['text':'*
	 * Deregister the logger for the given resource.
	 ','line_number':223,'multiline':True]['text':'*
	 * Get all registered loggers
	 ','line_number':228,'multiline':True]['text':'*
	 * Get the registered logger for the given resource.
	 ','line_number':233,'multiline':True]['text':' noop','line_number':382,'multiline':False]['text':' noop','line_number':446,'multiline':False]['text':' noop','line_number':496,'multiline':False]['text':' TODO: @sandy081 Remove this once registerLogger can take ILogger','line_number':614,'multiline':False]['text':' Contexts','line_number':768,'multiline':False]