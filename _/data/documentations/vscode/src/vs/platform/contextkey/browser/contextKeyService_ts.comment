['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);','line_number':40,'multiline':False]['text':' console.log('REMOVE ' + key + ' FROM ' + this._id);','line_number':49,'multiline':False]['text':' new setting, reset everything','line_number':117,'multiline':False]['text':' console.group(rules.serialize() + ' -> ' + result);','line_number':323,'multiline':False]['text':' rules.keys().forEach(key => { console.log(key, ctx[key]); });','line_number':324,'multiline':False]['text':' console.groupEnd();','line_number':325,'multiline':False]['text':' Uncomment this to see the contexts continuously logged','line_number':388,'multiline':False]['text':' let lastLoggedValue: string | null = null;','line_number':389,'multiline':False]['text':' setInterval(() => {','line_number':390,'multiline':False]['text':' 	let values = Object.keys(this._contexts).map((key) => this._contexts[key]);','line_number':391,'multiline':False]['text':' 	let logValue = values.map(v => JSON.stringify(v._value, null, '\t')).join('\n');','line_number':392,'multiline':False]['text':' 	if (lastLoggedValue !== logValue) {','line_number':393,'multiline':False]['text':' 		lastLoggedValue = logValue;','line_number':394,'multiline':False]['text':' 		console.log(lastLoggedValue);','line_number':395,'multiline':False]['text':' 	}','line_number':396,'multiline':False]['text':' }, 2000);','line_number':397,'multiline':False]['text':' Forward parent events to this listener. Parent will change.','line_number':452,'multiline':False]