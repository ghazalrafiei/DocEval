['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * Allows to enforce use of custom dialog even in native environments.
	 ','line_number':36,'multiline':True]['text':'*
	 * If not provided, defaults to `Yes`.
	 ','line_number':48,'multiline':True]['text':'*
	 * If not provided, defaults to `Cancel`.
	 ','line_number':53,'multiline':True]['text':'*
	 * Will be true if the dialog was confirmed with the primary button pressed.
	 ','line_number':61,'multiline':True]['text':'*
	 * If not provided, defaults to `Ok`.
	 ','line_number':74,'multiline':True]['text':'*
	 * Values for the input fields as provided by the user or `undefined` if none.
	 ','line_number':88,'multiline':True]['text':'*
	 * @returns the result of the prompt button will be returned
	 * as result from the `prompt()` call.
	 ','line_number':100,'multiline':True]['text':'*
	 * The cancel button to show in the prompt. Defaults to
	 * `Cancel` if not provided.
	 ','line_number':113,'multiline':True]['text':'*
	 * The buttons to show in the prompt. Defaults to `OK`
	 * if no buttons or cancel button is provided.
	 ','line_number':122,'multiline':True]['text':'*
	 * The cancel button to show in the prompt. Defaults to
	 * `Cancel` if set to `true`.
	 ','line_number':128,'multiline':True]['text':'*
	 * The result of the `IPromptButton` that was pressed or `undefined` if none.
	 ','line_number':145,'multiline':True]['text':'*
	 * The result of the `IPromptButton` that was pressed or `undefined` if none.
	 ','line_number':157,'multiline':True]['text':'*
	 * This will only be defined if the confirmation was created
	 * with the checkbox option defined.
	 ','line_number':178,'multiline':True]['text':'*
	 * A human-readable string for the dialog title
	 ','line_number':200,'multiline':True]['text':'*
	 * The resource the dialog shows when opened.
	 ','line_number':205,'multiline':True]['text':'*
	 * A set of file filters that are used by the dialog. Each entry is a human readable label,
	 * like "TypeScript", and an array of extensions.
	 ','line_number':210,'multiline':True]['text':'*
	 * A human-readable string for the ok button
	 ','line_number':216,'multiline':True]['text':'*
	 * Specifies a list of schemas for the file systems the user can save to. If not specified, uses the schema of the defaultURI or, if also not specified,
	 * the schema of the current window.
	 ','line_number':221,'multiline':True]['text':'*
	 * A human-readable string for the dialog title
	 ','line_number':230,'multiline':True]['text':'*
	 * The resource the dialog shows when opened.
	 ','line_number':235,'multiline':True]['text':'*
	 * A human-readable string for the open button.
	 ','line_number':240,'multiline':True]['text':'*
	 * Allow to select files, defaults to `true`.
	 ','line_number':245,'multiline':True]['text':'*
	 * Allow to select folders, defaults to `false`.
	 ','line_number':250,'multiline':True]['text':'*
	 * Allow to select many files or folders.
	 ','line_number':255,'multiline':True]['text':'*
	 * A set of file filters that are used by the dialog. Each entry is a human readable label,
	 * like "TypeScript", and an array of extensions.
	 ','line_number':260,'multiline':True]['text':'*
	 * Specifies a list of schemas for the file systems the user can load from. If not specified, uses the schema of the defaultURI or, if also not available,
	 * the schema of the current window.
	 ','line_number':266,'multiline':True]['text':'*
 * A handler to bring up modal dialogs.
 ','line_number':288,'multiline':True]['text':'*
	 * Ask the user for confirmation with a modal dialog.
	 ','line_number':293,'multiline':True]['text':'*
	 * Prompt the user with a modal dialog.
	 ','line_number':298,'multiline':True]['text':'*
	 * Present a modal dialog to the user asking for input.
	 ','line_number':303,'multiline':True]['text':'*
	 * Present the about dialog to the user.
	 ','line_number':308,'multiline':True]['text':' We put buttons in the order of "default" button first and "cancel"','line_number':339,'multiline':False]['text':' button last. There maybe later processing when presenting the buttons','line_number':340,'multiline':False]['text':' based on OS standards.','line_number':341,'multiline':False]['text':'*
 * A service to bring up modal dialogs.
 *
 * Note: use the `INotificationService.prompt()` method for a non-modal way to ask
 * the user for input.
 ','line_number':444,'multiline':True]['text':'*
	 * An event that fires when a dialog is about to show.
	 ','line_number':454,'multiline':True]['text':'*
	 * An event that fires when a dialog did show (closed).
	 ','line_number':459,'multiline':True]['text':'*
	 * Ask the user for confirmation with a modal dialog.
	 ','line_number':464,'multiline':True]['text':'*
	 * Prompt the user with a modal dialog. Provides a bit
	 * more control over the dialog compared to the simpler
	 * `confirm` method. Specifically, allows to show more
	 * than 2 buttons and makes it easier to just show a
	 * message to the user.
	 *
	 * @returns a promise that resolves to the `T` result
	 * from the provided `IPromptButton<T>` or `undefined`.
	 ','line_number':469,'multiline':True]['text':'*
	 * Present a modal dialog to the user asking for input.
	 ','line_number':483,'multiline':True]['text':'*
	 * Show a modal info dialog.
	 ','line_number':488,'multiline':True]['text':'*
	 * Show a modal warning dialog.
	 ','line_number':493,'multiline':True]['text':'*
	 * Show a modal error dialog.
	 ','line_number':498,'multiline':True]['text':'*
	 * Present the about dialog to the user.
	 ','line_number':503,'multiline':True]['text':'*
 * A service to bring up file dialogs.
 ','line_number':511,'multiline':True]['text':'*
	 * The default path for a new file based on previously used files.
	 * @param schemeFilter The scheme of the file path. If no filter given, the scheme of the current window is used.
	 * Falls back to user home in the absence of enough information to find a better URI.
	 ','line_number':518,'multiline':True]['text':'*
	 * The default path for a new folder based on previously used folders.
	 * @param schemeFilter The scheme of the folder path. If no filter given, the scheme of the current window is used.
	 * Falls back to user home in the absence of enough information to find a better URI.
	 ','line_number':525,'multiline':True]['text':'*
	 * The default path for a new workspace based on previously used workspaces.
	 * @param schemeFilter The scheme of the workspace path. If no filter given, the scheme of the current window is used.
	 * Falls back to user home in the absence of enough information to find a better URI.
	 ','line_number':532,'multiline':True]['text':'*
	 * Shows a file-folder selection dialog and opens the selected entry.
	 ','line_number':539,'multiline':True]['text':'*
	 * Shows a file selection dialog and opens the selected entry.
	 ','line_number':544,'multiline':True]['text':'*
	 * Shows a folder selection dialog and opens the selected entry.
	 ','line_number':549,'multiline':True]['text':'*
	 * Shows a workspace selection dialog and opens the selected entry.
	 ','line_number':554,'multiline':True]['text':'*
	 * Shows a save file dialog and save the file at the chosen file URI.
	 ','line_number':559,'multiline':True]['text':'*
	 * The preferred folder path to open the dialog at.
	 * @param schemeFilter The scheme of the file path. If no filter given, the scheme of the current window is used.
	 * Falls back to user home in the absence of a setting.
	 ','line_number':564,'multiline':True]['text':'*
	 * Shows a save file dialog and returns the chosen file URI.
	 ','line_number':571,'multiline':True]['text':'*
	 * Shows a confirm dialog for saving 1-N files.
	 ','line_number':576,'multiline':True]['text':'*
	 * Shows a open file dialog and returns the chosen file URI.
	 ','line_number':581,'multiline':True]['text':'*
	 * OS massaged message box options.
	 ','line_number':621,'multiline':True]['text':'*
	 * Since the massaged result of the message box options potentially
	 * changes the order of buttons, we have to keep a map of these
	 * changes so that we can still return the correct index to the caller.
	 ','line_number':626,'multiline':True]['text':'*
 * A utility method to ensure the options for the message box dialog
 * are using properties that are consistent across all platforms and
 * specific to the platform where necessary.
 ','line_number':634,'multiline':True]['text':' by default the first button is default button','line_number':645,'multiline':False]['text':' by default the last button is cancel button','line_number':646,'multiline':False]['text':' Apply HIG per OS when more than one button is used','line_number':648,'multiline':False]['text':' Linux: the GNOME HIG (https://developer.gnome.org/hig/patterns/feedback/dialogs.html?highlight=dialog)','line_number':654,'multiline':False]['text':' recommend the following:','line_number':655,'multiline':False]['text':' "Always ensure that the cancel button appears first, before the affirmative button. In left-to-right','line_number':656,'multiline':False]['text':'  locales, this is on the left. This button order ensures that users become aware of, and are reminded','line_number':657,'multiline':False]['text':'  of, the ability to cancel prior to encountering the affirmative button."','line_number':658,'multiline':False]['text':'','line_number':659,'multiline':False]['text':' Electron APIs do not reorder buttons for us, so we ensure a reverse order of buttons and a position','line_number':660,'multiline':False]['text':' of the cancel button (if provided) that matches the HIG','line_number':661,'multiline':False]['text':' macOS: the HIG (https://developer.apple.com/design/human-interface-guidelines/components/presentation/alerts)','line_number':663,'multiline':False]['text':' recommend the following:','line_number':664,'multiline':False]['text':' "Place buttons where people expect. In general, place the button people are most likely to choose on the trailing side in a','line_number':665,'multiline':False]['text':'  row of buttons or at the top in a stack of buttons. Always place the default button on the trailing side of a row or at the','line_number':666,'multiline':False]['text':'  top of a stack. Cancel buttons are typically on the leading side of a row or at the bottom of a stack."','line_number':667,'multiline':False]['text':'','line_number':668,'multiline':False]['text':' However: it seems that older macOS versions where 3 buttons were presented in a row differ from this','line_number':669,'multiline':False]['text':' recommendation. In fact, cancel buttons were placed to the left of the default button and secondary','line_number':670,'multiline':False]['text':' buttons on the far left. To support these older macOS versions we have to manually shuffle the cancel','line_number':671,'multiline':False]['text':' button in the same way as we do on Linux. This will not have any impact on newer macOS versions where','line_number':672,'multiline':False]['text':' shuffling is done for us.','line_number':673,'multiline':False]['text':' Windows: the HIG (https://learn.microsoft.com/en-us/windows/win32/uxguide/win-dialog-box)','line_number':697,'multiline':False]['text':' recommend the following:','line_number':698,'multiline':False]['text':' "One of the following sets of concise commands: Yes/No, Yes/No/Cancel, [Do it]/Cancel,','line_number':699,'multiline':False]['text':'  [Do it]/[Don't do it], [Do it]/[Don't do it]/Cancel."','line_number':700,'multiline':False]['text':'','line_number':701,'multiline':False]['text':' Electron APIs do not reorder buttons for us, so we ensure the position of the cancel button','line_number':702,'multiline':False]['text':' (if provided) that matches the HIG','line_number':703,'multiline':False]['text':' last action ','line_number':705,'multiline':True]