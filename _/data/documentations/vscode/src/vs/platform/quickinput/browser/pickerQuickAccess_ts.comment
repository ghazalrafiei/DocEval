['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * Do nothing after the button was clicked.
	 ','line_number':15,'multiline':True]['text':'*
	 * Close the picker.
	 ','line_number':20,'multiline':True]['text':'*
	 * Update the results of the picker.
	 ','line_number':25,'multiline':True]['text':'*
	 * Remove the item from the picker.
	 ','line_number':30,'multiline':True]['text':'*
	* A method that will be executed when the pick item is accepted from
	* the picker. The picker will close automatically before running this.
	*
	* @param keyMods the state of modifier keys when the item was accepted.
	* @param event the underlying event that caused the accept to trigger.
	','line_number':38,'multiline':True]['text':'*
	 * A method that will be executed when a button of the pick item was
	 * clicked on.
	 *
	 * @param buttonIndex index of the button of the item that
	 * was clicked.
	 *
	 * @param the state of modifier keys when the button was triggered.
	 *
	 * @returns a value that indicates what should happen after the trigger
	 * which can be a `Promise` for long running operations.
	 ','line_number':47,'multiline':True]['text':'*
	 * Enables support for opening picks in the background via gesture.
	 ','line_number':64,'multiline':True]['text':'*
	 * Enables to show a pick entry when no results are returned from a search.
	 ','line_number':69,'multiline':True]['text':'*
	 * Picks that will show instantly or after a short delay
	 * based on the `mergeDelay` property to reduce flicker.
	 ','line_number':80,'multiline':True]['text':'*
	 * Picks that will show after they have been resolved.
	 ','line_number':86,'multiline':True]['text':'*
	 * A delay in milliseconds to wait before showing the
	 * `picks` to give a chance to merge with `additionalPicks`
	 * for reduced flicker.
	 ','line_number':91,'multiline':True]['text':' Apply options if any','line_number':120,'multiline':False]['text':' Disable filtering & sorting, we control the results','line_number':123,'multiline':False]['text':' Set initial picks and update on type','line_number':126,'multiline':False]['text':' Cancel any previous ask for picks and busy','line_number':132,'multiline':False]['text':' Create new cancellation source for this run','line_number':136,'multiline':False]['text':' Collect picks and support both long running and short or combined','line_number':139,'multiline':False]['text':' We show the no results pick if we have no input to prevent completely empty pickers #172613','line_number':160,'multiline':False]['text':' Fast Picks: if `mergeDelay` is configured, in order to reduce','line_number':184,'multiline':False]['text':' amount of flicker, we race against the slow picks over some delay','line_number':185,'multiline':False]['text':' and then set the fast picks.','line_number':186,'multiline':False]['text':' If the slow picks are faster, we reduce the flicker by only','line_number':187,'multiline':False]['text':' setting the items once.','line_number':188,'multiline':False]['text':' skip over empty to reduce flicker ','line_number':199,'multiline':True]['text':' Slow Picks: we await the slow picks and then set them at','line_number':203,'multiline':False]['text':' once together with the fast picks, but only if we actually','line_number':204,'multiline':False]['text':' have additional results.','line_number':205,'multiline':False]['text':' If we do not have any activePick or additionalActivePick','line_number':234,'multiline':False]['text':' we try to preserve the currently active pick from the','line_number':235,'multiline':False]['text':' fast results. This fixes an issue where the user might','line_number':236,'multiline':False]['text':' have made a pick active before the additional results','line_number':237,'multiline':False]['text':' kick in.','line_number':238,'multiline':False]['text':' See https://github.com/microsoft/vscode/issues/102480','line_number':239,'multiline':False]['text':' No Picks','line_number':264,'multiline':False]['text':' Ignore','line_number':266,'multiline':False]['text':' Fast and Slow Picks','line_number':269,'multiline':False]['text':' Fast Picks','line_number':274,'multiline':False]['text':' Slow Picks','line_number':279,'multiline':False]['text':' Accept the pick on accept and hide picker','line_number':303,'multiline':False]['text':' hide picker unless we accept in background','line_number':308,'multiline':False]['text':' Trigger the pick with button index if button triggered','line_number':315,'multiline':False]['text':'*
	 * Returns an array of picks and separators as needed. If the picks are resolved
	 * long running, the provided cancellation token should be used to cancel the
	 * operation when the token signals this.
	 *
	 * The implementor is responsible for filtering and sorting the picks given the
	 * provided `filter`.
	 *
	 * @param filter a filter to apply to the picks.
	 * @param disposables can be used to register disposables that should be cleaned
	 * up when the picker closes.
	 * @param token for long running tasks, implementors need to check on cancellation
	 * through this token.
	 * @returns the picks either directly, as promise or combined fast and slow results.
	 * Pickers can return `null` to signal that no change in picks is needed.
	 ','line_number':360,'multiline':True]