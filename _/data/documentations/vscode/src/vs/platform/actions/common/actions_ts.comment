['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' for dropdown menu: if true the last executed action is remembered as the default action','line_number':35,'multiline':False]['text':'*
	 * Create or reuse a `MenuId` with the given identifier
	 ','line_number':203,'multiline':True]['text':'*
	 * Create a new `MenuId` with the unique identifier. Will throw if a menu
	 * with the identifier already exists, use `MenuId.for(ident)` or a unique
	 * identifier
	 ','line_number':212,'multiline':True]['text':'*
	 * Create a new menu for the given menu identifier. A menu sends events when it's entries
	 * have changed (placement, enablement, checked-state). By default it does not send events for
	 * submenu entries. That is more expensive and must be explicitly enabled with the
	 * `emitEventsForSubmenuChanges` flag.
	 ','line_number':255,'multiline':True]['text':'*
	 * Reset **all** menu item hidden states.
	 ','line_number':263,'multiline':True]['text':'*
	 * Reset the menu's hidden states.
	 ','line_number':268,'multiline':True]['text':'*
	 * @deprecated Use `appendMenuItem` or most likely use `registerAction2` instead. There should be no strong
	 * reason to use this directly.
	 ','line_number':316,'multiline':True]['text':' CommandPalette is special because it shows','line_number':386,'multiline':False]['text':' all commands by default','line_number':387,'multiline':False]['text':' implements IAction, does NOT extend Action, so that no one','line_number':429,'multiline':False]['text':' subscribes to events of Action or modified properties','line_number':430,'multiline':False]['text':'#region --- IAction2','line_number':511,'multiline':False]['text':'*
	 * One or many menu items.
	 ','line_number':516,'multiline':True]['text':'*
	 * One keybinding.
	 ','line_number':521,'multiline':True]['text':'*
	 * This type is used when an action is not going to show up in the command palette.
	 * In that case, it's able to use a string for the `title` and `category` properties.
	 ','line_number':529,'multiline':True]['text':'*
	 * The title of the command that will be displayed in the command palette after the category.
	 *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title
	 *  includes the localized value and the original value for users using language packs.
	 ','line_number':538,'multiline':True]['text':'*
	 * The category of the command that will be displayed in the command palette before the title suffixed.
	 * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that
	 * the title includes the localized value and the original value for users using language packs.
	 ','line_number':545,'multiline':True]['text':'*
	 * Shorthand to add this command to the command palette. Note: this is not the only way to declare that
	 * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios
	 * is much more challenging and this gets us most of the way there.
	 ','line_number':552,'multiline':True]['text':' command','line_number':578,'multiline':False]['text':' menu','line_number':585,'multiline':False]['text':' keybinding','line_number':599,'multiline':False]['text':'#endregion','line_number':618,'multiline':False]