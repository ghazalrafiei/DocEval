['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' 5mb','line_number':76,'multiline':False]['text':' New input contains separator, multiple resources will get created workaround for #68204','line_number':88,'multiline':False]['text':' Handle dirty','line_number':101,'multiline':False]['text':' Check if file is dirty in editor and save it to avoid data loss','line_number':138,'multiline':False]['text':' We do not support undo of folders, so in that case the delete action is irreversible','line_number':144,'multiline':False]['text':' Check if we need to ask for confirmation at all','line_number':148,'multiline':False]['text':' Confirm for moving to trash','line_number':153,'multiline':False]['text':' Confirm for deleting permanently','line_number':173,'multiline':False]['text':' Check for confirmation checkbox','line_number':186,'multiline':False]['text':' Check for confirmation','line_number':191,'multiline':False]['text':' Call function','line_number':196,'multiline':False]['text':' Handle error to delete file(s) from a modal confirmation dialog','line_number':206,'multiline':False]['text':' Delete Permanently','line_number':228,'multiline':False]['text':' In the disabled case we must ask if it's ok to overwrite the file if it exists','line_number':317,'multiline':False]['text':' name copy 5(.txt) => name copy 6(.txt)','line_number':348,'multiline':False]['text':' name copy(.txt) => name copy 2(.txt)','line_number':349,'multiline':False]['text':' name(.txt) => name copy(.txt)','line_number':362,'multiline':False]['text':' file.1.txt=>file.2.txt','line_number':369,'multiline':False]['text':' 1.file.txt=>2.file.txt','line_number':380,'multiline':False]['text':' 1.txt=>2.txt','line_number':391,'multiline':False]['text':' file.txt=>file.1.txt','line_number':402,'multiline':False]['text':' 123 => 124','line_number':408,'multiline':False]['text':' file => file1','line_number':419,'multiline':False]['text':' file1 => file2','line_number':420,'multiline':False]['text':' folder.1=>folder.2','line_number':434,'multiline':False]['text':' 1.folder=>2.folder','line_number':444,'multiline':False]['text':' file/folder=>file.1/folder.1','line_number':454,'multiline':False]['text':'*
 * Checks to see if the resource already exists, if so prompts the user if they would be ok with it being overwritten
 * @param fileService The file service
 * @param dialogService The dialog service
 * @param targetResource The resource to be overwritten
 * @return A boolean indicating if the user is ok with resource being overwritten, if the resource does not exist it returns true.
 ','line_number':458,'multiline':True]['text':' Ask for overwrite confirmation','line_number':470,'multiline':False]['text':' Global Compare with','line_number':479,'multiline':False]['text':' update enablement based on working copy changes','line_number':559,'multiline':False]['text':' Produce a well formed file name','line_number':687,'multiline':False]['text':' Name not provided','line_number':690,'multiline':False]['text':' Relative paths only','line_number':698,'multiline':False]['text':' Do not allow to overwrite existing file','line_number':710,'multiline':False]['text':' Check for invalid file name.','line_number':720,'multiline':False]['text':' Escape * characters','line_number':722,'multiline':False]['text':' CodeQL [SM02383] This only processes filenames which are enforced against having backslashes in them farther up in the stack.','line_number':723,'multiline':False]['text':' Trim tabs','line_number':753,'multiline':False]['text':' Remove trailing slashes','line_number':756,'multiline':False]['text':' Give explorer some time to resolve itself #111218','line_number':880,'multiline':False]['text':' Can happen in empty workspace case (https://github.com/microsoft/vscode/issues/100604)','line_number':884,'multiline':False]['text':' Check for confirmation checkbox','line_number':1119,'multiline':False]['text':' If it's an editable item, just do nothing','line_number':1128,'multiline':False]['text':' Check if target is ancestor of pasted folder','line_number':1134,'multiline':False]['text':' Find target','line_number':1142,'multiline':False]['text':' Move/Copy File','line_number':1167,'multiline':False]['text':' Cut is done. Make sure to clear cut state.','line_number':1204,'multiline':False]['text':' with a `fileList` we support natively pasting files from clipboard','line_number':1213,'multiline':False]['text':' otherwise we fallback to reading resources from our clipboard service','line_number':1216,'multiline':False]