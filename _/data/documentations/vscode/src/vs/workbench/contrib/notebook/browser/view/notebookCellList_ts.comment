['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' Cursor Boundary context','line_number':216,'multiline':False]['text':' we only validate the first focused element','line_number':219,'multiline':False]['text':' reset context','line_number':238,'multiline':False]['text':' scroll the cell into view if out of viewport','line_number':246,'multiline':False]['text':' update visibleRanges','line_number':257,'multiline':False]['text':' convert model selections to view selections','line_number':376,'multiline':False]['text':' delete old tracking ranges','line_number':435,'multiline':False]['text':' they call 'setHiddenAreas' for a reason, even if the ranges are still the same, it's possible that the hiddenRangeSum is not update to date','line_number':447,'multiline':False]['text':' set hidden ranges prefix sum','line_number':458,'multiline':False]['text':'*
	 * oldRanges and newRanges are all reduced and sorted.
	 ','line_number':495,'multiline':True]['text':' we need to convert start and delete count based on hidden ranges','line_number':515,'multiline':False]['text':' after splice, the selected cells are deleted','line_number':534,'multiline':False]['text':' it's already after the last hidden range','line_number':567,'multiline':False]['text':' there are hidden ranges','line_number':579,'multiline':False]['text':' no hidden area after it','line_number':586,'multiline':False]['text':' there are hidden ranges after it','line_number':599,'multiline':False]['text':' update view model first, which will update both `focus` and `selection` in a single transaction','line_number':687,'multiline':False]['text':' update the view as previous model update will not trigger event','line_number':695,'multiline':False]['text':' Don't allow clearing focus, #121129','line_number':734,'multiline':False]['text':'*
	 * The range will be revealed with as little scrolling as possible.
	 ','line_number':785,'multiline':True]['text':' start element is visible','line_number':802,'multiline':False]['text':' check end','line_number':803,'multiline':False]['text':' fully visible','line_number':809,'multiline':False]['text':' end element partially visible','line_number':818,'multiline':False]['text':' there is enough space to just scroll up a little bit to make the end element visible','line_number':820,'multiline':False]['text':' don't even try it','line_number':823,'multiline':False]['text':'*
	 * Reveals the given cell in the notebook cell list. The cell will come into view syncronously
	 * but the cell's editor will be attached asyncronously if it was previously out of view.
	 * @returns The promise to await for the cell editor to be attached
	 ','line_number':851,'multiline':True]['text':' wait for the editor to be created only if the cell is in editing mode (meaning it has an editor and will focus the editor)','line_number':884,'multiline':False]['text':' element is already fully visible','line_number':904,'multiline':False]['text':' reveal the cell top in the viewport center initially','line_number':917,'multiline':False]['text':' cell rendered already, we now have a more accurate cell height','line_number':919,'multiline':False]['text':' cell is larger than viewport, reveal top','line_number':924,'multiline':False]['text':' first line is already visible','line_number':939,'multiline':False]['text':'#region Reveal Cell Editor Range asynchronously','line_number':954,'multiline':False]['text':' List items have real dynamic heights, which means after we set `scrollTop` based on the `elementTop(index)`, the element at `index` might still be removed from the view once all relayouting tasks are done.','line_number':972,'multiline':False]['text':' For example, we scroll item 10 into the view upwards, in the first round, items 7, 8, 9, 10 are all in the viewport. Then item 7 and 8 resize themselves to be larger and finally item 10 is removed from the view.','line_number':973,'multiline':False]['text':' To ensure that item 10 is always there, we need to scroll item 10 to the top edge of the viewport.','line_number':974,'multiline':False]['text':' scroll downwards','line_number':988,'multiline':False]['text':' scroll upwards','line_number':992,'multiline':False]['text':' let it render','line_number':1048,'multiline':False]['text':' after rendering, it might be pushed down due to markdown cell dynamic height','line_number':1051,'multiline':False]['text':' reveal editor','line_number':1055,'multiline':False]['text':' for example markdown','line_number':1059,'multiline':False]['text':' for example, markdown cell in preview mode','line_number':1065,'multiline':False]['text':' we are revealing a range that is beyond current element height','line_number':1078,'multiline':False]['text':' if we don't update the element height now, and directly `setTop` to reveal the range','line_number':1079,'multiline':False]['text':' the element might be scrolled out of view','line_number':1080,'multiline':False]['text':' next frame, when we update the element height, the element will never be scrolled back into view','line_number':1081,'multiline':False]['text':' TODO@rebornix 30 ---> line height * 1.5','line_number':1088,'multiline':False]['text':' newly scrolled into view','line_number':1094,'multiline':False]['text':' align to the bottom','line_number':1096,'multiline':False]['text':' align to to top','line_number':1099,'multiline':False]['text':'#endregion','line_number':1106,'multiline':False]['text':'*
	 * Reveals the specified offset of the given cell in the center of the viewport.
	 * This enables revealing locations in the output as well as the input.
	 ','line_number':1110,'multiline':True]['text':' update element above viewport','line_number':1169,'multiline':False]['text':' When the webview top boundary is below the list view scrollable element top boundary, then we can't insert a markdown cell at the top','line_number':1178,'multiline':False]['text':' or when its bottom boundary is above the list view bottom boundary, then we can't insert a markdown cell at the end','line_number':1179,'multiline':False]['text':' thus we have to revert the webview element position to initial state `-NOTEBOOK_WEBVIEW_BOUNDARY`.','line_number':1180,'multiline':False]['text':' this will trigger one visual flicker (as we need to update element offsets in the webview)','line_number':1181,'multiline':False]['text':' but as long as NOTEBOOK_WEBVIEW_BOUNDARY is large enough, it will happen less often','line_number':1182,'multiline':False]['text':' If the cell is growing, we should favor anchoring to the focused cell','line_number':1199,'multiline':False]['text':' override','line_number':1210,'multiline':False]['text':' for example, when focus goes into monaco editor, if we refocus the list view, the editor will lose focus.','line_number':1216,'multiline':False]['text':' overwrite :hover style in this case!','line_number':1262,'multiline':False]['text':' overwrite :hover style in this case!','line_number':1271,'multiline':False]['text':' overwrite :hover style in this case!','line_number':1294,'multiline':False]['text':' overwrite :hover style in this case!','line_number':1299,'multiline':False]['text':' un-ref','line_number':1373,'multiline':False]['text':' it's the end','line_number':1413,'multiline':False]