['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'#region Browser File Upload (drag and drop, input element)','line_number':40,'multiline':False]['text':' Indicate progress globally','line_number':89,'multiline':False]['text':' Also indicate progress in the files view','line_number':101,'multiline':False]['text':' We want to reuse the same code for uploading from','line_number':114,'multiline':False]['text':' Drag & Drop as well as input element based upload','line_number':115,'multiline':False]['text':' so we convert into webkit data transfer when the','line_number':116,'multiline':False]['text':' input element approach is used (simplified).','line_number':117,'multiline':False]['text':' Somehow the items thing is being modified at random, maybe as a security','line_number':138,'multiline':False]['text':' measure since this is a DND operation. As such, we copy the items into','line_number':139,'multiline':False]['text':' an array we own as early as possible before using it.','line_number':140,'multiline':False]['text':' Upload all entries in parallel up to a','line_number':157,'multiline':False]['text':' certain maximum leveraging the `Limiter`','line_number':158,'multiline':False]['text':' Confirm overwrite as needed','line_number':166,'multiline':False]['text':' Upload entry','line_number':183,'multiline':False]['text':' Open uploaded file in editor only if we upload just one','line_number':193,'multiline':False]['text':' Report progress','line_number':205,'multiline':False]['text':' Small file','line_number':213,'multiline':False]['text':' Large file','line_number':223,'multiline':False]['text':' Report progress but limit to update only once per second','line_number':228,'multiline':False]['text':' Handle file upload','line_number':234,'multiline':False]['text':' Chrome/Edge/Firefox support stream method, but only use it for','line_number':243,'multiline':False]['text':' larger files to reduce the overhead of the streaming approach','line_number':244,'multiline':False]['text':' Fallback to unbuffered upload for other browsers or small files','line_number':249,'multiline':False]['text':' Handle folder upload','line_number':257,'multiline':False]['text':' Create target folder','line_number':260,'multiline':False]['text':' Recursive upload files in this directory','line_number':267,'multiline':False]['text':' an empty array is a signal that all entries have been read','line_number':276,'multiline':False]['text':' Update operation total based on new counts','line_number':280,'multiline':False]['text':' Split up files from folders to upload','line_number':283,'multiline':False]['text':' Upload files (up to `MAX_PARALLEL_UPLOADS` in parallel)','line_number':295,'multiline':False]['text':' Upload folders (sequentially give we don't know their sizes)','line_number':301,'multiline':False]['text':' Set a highWaterMark to prevent the stream','line_number':312,'multiline':False]['text':' for file upload to produce large buffers','line_number':313,'multiline':False]['text':' in-memory','line_number':314,'multiline':False]['text':' Read the file in chunks using File.stream() web APIs','line_number':319,'multiline':False]['text':' Write buffer into stream but make sure to wait','line_number':329,'multiline':False]['text':' in case the `highWaterMark` is reached','line_number':330,'multiline':False]['text':' Report progress','line_number':338,'multiline':False]['text':' Wait for file being written to target','line_number':353,'multiline':False]['text':' Report progress','line_number':366,'multiline':False]['text':' Start reading the file to trigger `onload`','line_number':378,'multiline':False]['text':'#endregion','line_number':384,'multiline':False]['text':'#region External File Import (drag and drop)','line_number':386,'multiline':False]['text':' Indicate progress globally','line_number':408,'multiline':False]['text':' Also indicate progress in the files view','line_number':420,'multiline':False]['text':' Activate all providers for the resources dropped','line_number':428,'multiline':False]['text':' Check for dropped external files to be folders','line_number':432,'multiline':False]['text':' Pass focus to window','line_number':440,'multiline':False]['text':' Handle folders by adding to workspace if we are in workspace context and if dropped on top','line_number':443,'multiline':False]['text':' We only allow to add a folder to the workspace if there is already a workspace folder with that scheme','line_number':462,'multiline':False]['text':' Add folders','line_number':487,'multiline':False]['text':' Copy resources','line_number':492,'multiline':False]['text':' Handle dropped files (only support FileStat as target)','line_number':498,'multiline':False]['text':' Resolve target to check for name collisions and ask user','line_number':507,'multiline':False]['text':' Check for name collisions','line_number':514,'multiline':False]['text':' Copy resources through bulk edit API','line_number':546,'multiline':False]['text':' if we only add one file, just open it directly','line_number':566,'multiline':False]['text':'#endregion','line_number':577,'multiline':False]['text':'#region Download (web, native)','line_number':579,'multiline':False]['text':' Indicate progress globally','line_number':609,'multiline':False]['text':' Also indicate progress in the files view','line_number':621,'multiline':False]['text':' Web: use DOM APIs to download files with optional support','line_number':633,'multiline':False]['text':' for folders and large files','line_number':634,'multiline':False]['text':' Native: use working copy file service to get at the contents','line_number':639,'multiline':False]['text':' avoid to download via blob-trick >32MB to avoid memory pressure','line_number':653,'multiline':False]['text':' Folder: use FS APIs to download files and folders if available and preferred','line_number':656,'multiline':False]['text':' folders increment filesTotal within downloadFolder method','line_number':665,'multiline':False]['text':' `showDirectoryPicker` will throw an error when the user cancels','line_number':682,'multiline':False]['text':' File: use traditional download to circumvent browser limitations','line_number':686,'multiline':False]['text':' Report progress','line_number':748,'multiline':False]['text':' reset for this file','line_number':750,'multiline':False]['text':' Start to download','line_number':753,'multiline':False]['text':' For large files, write buffered using streams','line_number':757,'multiline':False]['text':' For small files prefer to write unbuffered to reduce overhead','line_number':762,'multiline':False]['text':' Small file','line_number':793,'multiline':False]['text':' Large file','line_number':803,'multiline':False]['text':' Report progress but limit to update only once per second','line_number':808,'multiline':False]['text':' Remember as last used download folder','line_number':837,'multiline':False]['text':' Perform download','line_number':840,'multiline':False]['text':' User canceled a download. In case there were multiple files selected we should cancel the remainder of the prompts #86100','line_number':847,'multiline':False]['text':'#endregion','line_number':852,'multiline':False]['text':'#region Helpers','line_number':854,'multiline':False]['text':'#endregion','line_number':878,'multiline':False]