['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
 * A workbench contribution that will be loaded when the workbench starts and disposed when the workbench shuts down.
 ','line_number':14,'multiline':True]['text':' Marker Interface','line_number':18,'multiline':False]['text':'*
	 * Registers a workbench contribution to the platform that will
	 * be loaded when the workbench starts and disposed when the
	 * workbench shuts down.
	 *
	 * The parameter `phase` controls when the contribution is instantiated.
	 * Phases `Starting` and `Ready` are synchronous, all other phases are
	 * delayed until the workbench is idle. Contributions are guaranteed to
	 * be created in the order of their phases, even when delayed to idle.
	 *
	 * @param phase the lifecycle phase when to instantiate the contribution.
	 ','line_number':29,'multiline':True]['text':'*
	 * Starts the registry by providing the required services.
	 ','line_number':43,'multiline':True]['text':'*
	 * A promise that resolves when all contributions up to the `Restored`
	 * phase have been instantiated.
	 ','line_number':48,'multiline':True]['text':' Instantiate directly if we are already matching the provided phase','line_number':69,'multiline':False]['text':' Otherwise keep contributions by lifecycle phase','line_number':74,'multiline':False]['text':' Instantiate contributions directly when phase is already reached','line_number':99,'multiline':False]['text':' Otherwise wait for phase to be reached','line_number':104,'multiline':False]['text':' instantiate everything synchronously and blocking','line_number':119,'multiline':False]['text':' measure the time it takes as perf marks for diagnosis','line_number':120,'multiline':False]['text':' for the Restored/Eventually-phase we instantiate contributions','line_number':136,'multiline':False]['text':' only when idle. this might take a few idle-busy-cycles but will','line_number':137,'multiline':False]['text':' finish within the timeouts','line_number':138,'multiline':False]['text':' given that, we must ensure to await the contributions from the','line_number':139,'multiline':False]['text':' Restored-phase before we instantiate the Eventually-phase','line_number':140,'multiline':False]['text':' time is up -> reschedule','line_number':165,'multiline':False]['text':' only log out of sources where we have good ctor names ','line_number':192,'multiline':True]