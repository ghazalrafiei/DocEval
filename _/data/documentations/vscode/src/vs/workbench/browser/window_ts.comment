['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' try to not compete with the IDs of native `setTimeout`','line_number':35,'multiline':False]['text':' for testing ','line_number':38,'multiline':True]['text':'#region focus handling in multi-window applications','line_number':45,'multiline':False]['text':' If the active focused window is not the same as the','line_number':52,'multiline':False]['text':' window of the element to focus, make sure to focus','line_number':53,'multiline':False]['text':' that window first before focusing the element.','line_number':54,'multiline':False]['text':' Pass to original focus() method','line_number':63,'multiline':False]['text':'#endregion','line_number':68,'multiline':False]['text':'#region timeout handling in multi-window applications','line_number':70,'multiline':False]['text':'*
	 * Override `setTimeout` and `clearTimeout` on the provided window to make
	 * sure timeouts are dispatched to all opened windows. Some browsers may decide
	 * to throttle timeouts in minimized windows, so with this we can ensure the
	 * timeout is scheduled without being throttled (unless all windows are minimized).
	 ','line_number':72,'multiline':True]['text':' immediates are never throttled ','line_number':86,'multiline':True]['text':' skip over hidden windows (but never over main window)','line_number':101,'multiline':False]['text':'#endregion','line_number':129,'multiline':False]['text':' Lifecycle','line_number':154,'multiline':False]['text':' Layout','line_number':157,'multiline':False]['text':'* Visual viewport ','line_number':158,'multiline':True]['text':'* Layout viewport ','line_number':158,'multiline':True]['text':' Sometimes the keyboard appearing scrolls the whole workbench out of view, as a workaround scroll back into view #121206','line_number':162,'multiline':False]['text':' Prevent the back/forward gestures in macOS','line_number':168,'multiline':False]['text':' Prevent native context menus in web','line_number':171,'multiline':False]['text':' Prevent default navigation on drop','line_number':174,'multiline':False]['text':' Fullscreen (Browser)','line_number':177,'multiline':False]['text':' Fullscreen (Native)','line_number':182,'multiline':False]['text':' adjust for macOS animation ','line_number':185,'multiline':True]['text':' can be throttled ','line_number':185,'multiline':True]['text':' Try to detect some user interaction with the workbench','line_number':190,'multiline':False]['text':' when shutdown has happened to not show the dialog e.g.','line_number':191,'multiline':False]['text':' when navigation takes a longer time.','line_number':192,'multiline':False]['text':' Delay the dialog in case the user interacted','line_number':198,'multiline':False]['text':' with the page before it transitioned away','line_number':199,'multiline':False]['text':' This should normally not happen, but if for some reason','line_number':202,'multiline':False]['text':' the workbench was shutdown while the page is still there,','line_number':203,'multiline':False]['text':' inform the user that only a reload can bring back a working','line_number':204,'multiline':False]['text':' state.','line_number':205,'multiline':False]['text':' do not use any services at this point since they are likely not functional at this point','line_number':213,'multiline':False]['text':' Handle open calls','line_number':222,'multiline':False]['text':' Label formatting','line_number':225,'multiline':False]['text':' Commands','line_number':228,'multiline':False]['text':' Smoke Test Driver','line_number':231,'multiline':False]['text':' We need to ignore the `beforeunload` event while','line_number':243,'multiline':False]['text':' we handle external links to open specifically for','line_number':244,'multiline':False]['text':' the case of application protocols that e.g. invoke','line_number':245,'multiline':False]['text':' vscode itself. We do not want to open these links','line_number':246,'multiline':False]['text':' in a new window because that would leave a blank','line_number':247,'multiline':False]['text':' window to the user, but using `window.location.href`','line_number':248,'multiline':False]['text':' will trigger the `beforeunload`.','line_number':249,'multiline':False]['text':' HTTP(s): open in new window and deal with potential popup blockers','line_number':262,'multiline':False]['text':' Anything else: set location to trigger protocol handler in the browser','line_number':291,'multiline':False]['text':' but make sure to signal this as an expected unload and disable unload','line_number':292,'multiline':False]['text':' handling explicitly to prevent the workbench from going down.','line_number':293,'multiline':False]['text':' Re-show the dialog so that the user can come back after installing and try again','line_number':325,'multiline':False]['text':' While this dialog shows, closing the tab will not display a confirmation dialog','line_number':338,'multiline':False]['text':' to avoid showing the user two dialogs at once','line_number':339,'multiline':False]['text':' We cannot know whether the protocol handler succeeded.','line_number':349,'multiline':False]['text':' Display guidance in case it did not, e.g. the app is not installed locally.','line_number':350,'multiline':False]['text':' Allow extensions to request USB devices in Web','line_number':374,'multiline':False]['text':' Allow extensions to request Serial devices in Web','line_number':379,'multiline':False]['text':' Allow extensions to request HID devices in Web','line_number':384,'multiline':False]