['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * Provides access to the manager for stored file working copies.
	 ','line_number':44,'multiline':True]['text':'*
	 * Provides access to the manager for untitled file working copies.
	 ','line_number':49,'multiline':True]['text':'*
	 * Allows to resolve a stored file working copy. If the manager already knows
	 * about a stored file working copy with the same `URI`, it will return that
	 * existing stored file working copy. There will never be more than one
	 * stored file working copy per `URI` until the stored file working copy is
	 * disposed.
	 *
	 * Use the `IStoredFileWorkingCopyResolveOptions.reload` option to control the
	 * behaviour for when a stored file working copy was previously already resolved
	 * with regards to resolving it again from the underlying file resource
	 * or not.
	 *
	 * Note: Callers must `dispose` the working copy when no longer needed.
	 *
	 * @param resource used as unique identifier of the stored file working copy in
	 * case one is already known for this `URI`.
	 * @param options
	 ','line_number':54,'multiline':True]['text':'*
	 * Create a new untitled file working copy with optional initial contents.
	 *
	 * Note: Callers must `dispose` the working copy when no longer needed.
	 ','line_number':74,'multiline':True]['text':'*
	 * Create a new untitled file working copy with optional initial contents
	 * and associated resource. The associated resource will be used when
	 * saving and will not require to ask the user for a file path.
	 *
	 * Note: Callers must `dispose` the working copy when no longer needed.
	 ','line_number':81,'multiline':True]['text':'*
	 * Creates a new untitled file working copy with optional initial contents
	 * with the provided resource or return an existing untitled file working
	 * copy otherwise.
	 *
	 * Note: Callers must `dispose` the working copy when no longer needed.
	 ','line_number':90,'multiline':True]['text':'*
	 * Implements "Save As" for file based working copies. The API is `URI` based
	 * because it works even without resolved file working copies. If a file working
	 * copy exists for any given `URI`, the implementation will deal with them properly
	 * (e.g. dirty contents of the source will be written to the target and the source
	 * will be reverted).
	 *
	 * Note: it is possible that the returned file working copy has a different `URI`
	 * than the `target` that was passed in. Based on URI identity, the file working
	 * copy may chose to return an existing file working copy with different casing
	 * to respect file systems that are case insensitive.
	 *
	 * Note: Callers must `dispose` the working copy when no longer needed.
	 *
	 * Note: Untitled file working copies are being disposed when saved.
	 *
	 * @param source the source resource to save as
	 * @param target the optional target resource to save to. if not defined, the user
	 * will be asked for input
	 * @returns the target stored working copy that was saved to or `undefined` in case of
	 * cancellation
	 ','line_number':99,'multiline':True]['text':'*
	 * Optional target resource to suggest to the user in case
	 * no target resource is provided to save to.
	 ','line_number':127,'multiline':True]['text':' Stored file working copies manager','line_number':169,'multiline':False]['text':' Untitled file working copies manager','line_number':178,'multiline':False]['text':' Events','line_number':190,'multiline':False]['text':' Decorations','line_number':193,'multiline':False]['text':'#region decorations','line_number':197,'multiline':False]['text':' File working copy decorations','line_number':201,'multiline':False]['text':' Creates','line_number':217,'multiline':False]['text':' Removals: once a stored working copy is no longer','line_number':224,'multiline':False]['text':' under our control, make sure to signal this as','line_number':225,'multiline':False]['text':' decoration change because from this point on we','line_number':226,'multiline':False]['text':' have no way of updating the decoration anymore.','line_number':227,'multiline':False]['text':' Changes','line_number':230,'multiline':False]['text':' Readonly + Orphaned','line_number':244,'multiline':False]['text':' Readonly','line_number':254,'multiline':False]['text':' Orphaned','line_number':262,'multiline':False]['text':'#endregin','line_number':278,'multiline':False]['text':'#region get / get all','line_number':280,'multiline':False]['text':'#endregion','line_number':290,'multiline':False]['text':'#region resolve','line_number':292,'multiline':False]['text':' Untitled: via untitled manager','line_number':301,'multiline':False]['text':' else: via stored file manager','line_number':306,'multiline':False]['text':'#endregion','line_number':315,'multiline':False]['text':'#region Save','line_number':317,'multiline':False]['text':' Get to target resource','line_number':321,'multiline':False]['text':' user canceled','line_number':332,'multiline':False]['text':' Ensure target is not marked as readonly and prompt otherwise','line_number':335,'multiline':False]['text':' Just save if target is same as working copies own resource','line_number':345,'multiline':False]['text':' and we are not saving an untitled file working copy','line_number':346,'multiline':False]['text':' force to save, even if not dirty (https://github.com/microsoft/vscode/issues/99619) ','line_number':348,'multiline':True]['text':' If the target is different but of same identity, we','line_number':351,'multiline':False]['text':' move the source to the target, knowing that the','line_number':352,'multiline':False]['text':' underlying file system cannot have both and then save.','line_number':353,'multiline':False]['text':' However, this will only work if the source exists','line_number':354,'multiline':False]['text':' and is not orphaned, so we need to check that too.','line_number':355,'multiline':False]['text':' Move via working copy file service to enable participants','line_number':358,'multiline':False]['text':' At this point we don't know whether we have a','line_number':361,'multiline':False]['text':' working copy for the source or the target URI so we','line_number':362,'multiline':False]['text':' simply try to save with both resources.','line_number':363,'multiline':False]['text':' Perform normal "Save As"','line_number':367,'multiline':False]['text':' Save is only possible with stored file working copies,','line_number':373,'multiline':False]['text':' any other have to go via `saveAs` flow.','line_number':374,'multiline':False]['text':' If the source is an existing file working copy, we can directly','line_number':389,'multiline':False]['text':' use that to copy the contents to the target destination','line_number':390,'multiline':False]['text':' Otherwise we resolve the contents from the underlying file','line_number':396,'multiline':False]['text':' Resolve target','line_number':401,'multiline':False]['text':' Confirm to overwrite if we have an untitled file working copy with associated path where','line_number':404,'multiline':False]['text':' the file actually exists on disk and we are instructed to save to that file path.','line_number':405,'multiline':False]['text':' This can happen if the file was created after the untitled file was opened.','line_number':406,'multiline':False]['text':' See https://github.com/microsoft/vscode/issues/67946','line_number':407,'multiline':False]['text':' Take over content from source to target','line_number':420,'multiline':False]['text':' Set source options depending on target exists or not','line_number':423,'multiline':False]['text':' Save target','line_number':431,'multiline':False]['text':' force to save, even if not dirty (https://github.com/microsoft/vscode/issues/99619) ','line_number':432,'multiline':True]['text':' Revert the source','line_number':437,'multiline':False]['text':' It is possible that reverting the source fails, for example','line_number':442,'multiline':False]['text':' when a remote is disconnected and we cannot read it anymore.','line_number':443,'multiline':False]['text':' However, this should not interrupt the "Save As" flow, so','line_number':444,'multiline':False]['text':' we gracefully catch the error and just log it.','line_number':445,'multiline':False]['text':' Prefer an existing stored file working copy if it is already resolved','line_number':455,'multiline':False]['text':' for the given target resource','line_number':456,'multiline':False]['text':' Otherwise create the target working copy empty if','line_number':463,'multiline':False]['text':' it does not exist already and resolve it from there','line_number':464,'multiline':False]['text':' Create target file adhoc if it does not exist yet','line_number':468,'multiline':False]['text':' At this point we need to resolve the target working copy','line_number':473,'multiline':False]['text':' and we have to do an explicit check if the source URI','line_number':474,'multiline':False]['text':' equals the target via URI identity. If they match and we','line_number':475,'multiline':False]['text':' have had an existing working copy with the source, we','line_number':476,'multiline':False]['text':' prefer that one over resolving the target. Otherwise we','line_number':477,'multiline':False]['text':' would potentially introduce a','line_number':478,'multiline':False]['text':' 1.) Just take the resource as is if the file service can handle it','line_number':513,'multiline':False]['text':' 2.) Pick the associated file path for untitled working copies if any','line_number':518,'multiline':False]['text':' 3.) Pick the working copy name if valid joined with default path','line_number':526,'multiline':False]['text':' 4.) Finally fallback to the name of the resource joined with default path','line_number':534,'multiline':False]['text':'#endregion','line_number':538,'multiline':False]['text':'#region Lifecycle','line_number':540,'multiline':False]['text':'#endregion','line_number':549,'multiline':False]