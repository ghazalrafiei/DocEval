['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' Events','line_number':44,'multiline':False]['text':' Constants','line_number':48,'multiline':False]['text':' Data Stores','line_number':53,'multiline':False]['text':' Read in the cache on statup','line_number':71,'multiline':False]['text':' We want to store the glob patterns we would activate on, this allows us to know if we need to await the ext host on startup for opening a resource','line_number':76,'multiline':False]['text':' When extensions have registered we no longer need the cache','line_number':80,'multiline':False]['text':' Use the untyped editor to find a group','line_number':89,'multiline':False]['text':' Update the flattened editors','line_number':100,'multiline':False]['text':' Special case: side by side editors requires us to','line_number':103,'multiline':False]['text':' independently resolve both sides and then build','line_number':104,'multiline':False]['text':' a side by side editor with the result','line_number':105,'multiline':False]['text':' Get the resolved untyped editor, group, and activation','line_number':121,'multiline':False]['text':' If it was resolved before we await for the extensions to activate and then proceed with resolution or else the backing extensions won't be registered','line_number':129,'multiline':False]['text':' Undefined resource -> untilted. Other malformed URI's are unresolvable','line_number':134,'multiline':False]['text':' If the picker was cancelled we will stop resolving the editor','line_number':143,'multiline':False]['text':' Populate the options with the new ones','line_number':147,'multiline':False]['text':' Resolved the editor ID as much as possible, now find a given editor (cast here is ok because we resolve down to a string above)','line_number':151,'multiline':False]['text':' If no editor was found and this was a typed editor or an editor with an explicit override we could not resolve it','line_number':153,'multiline':False]['text':' Simple untyped editors that we could not resolve will be resolved to the default editor','line_number':157,'multiline':False]['text':' In the special case of diff editors we do some more work to determine the correct editor for both sides','line_number':166,'multiline':False]['text':' If no override we take the selected editor id so that matches works with the isActive check','line_number':183,'multiline':False]['text':' Check if diff can be created based on prescene of factory function','line_number':186,'multiline':False]['text':' Show the conflicting default dialog','line_number':193,'multiline':False]['text':' Sort matching associations based on glob length as a longer glob will be more specific','line_number':270,'multiline':False]['text':' Ensure that the settings are valid editors','line_number':273,'multiline':False]['text':' We want to apply the default associations and user associations on top of the workspace associations but ignore duplicate keys.','line_number':283,'multiline':False]['text':'*
	 * Given the nested nature of the editors map, we merge factories of the same glob and id to make it flat
	 * and easier to work with
	 ','line_number':300,'multiline':True]['text':' If we shouldn't be re-flattening (due to lack of update) then return early','line_number':305,'multiline':False]['text':' Merge all editors with the same id and glob pattern together','line_number':315,'multiline':False]['text':' Merge options and factories','line_number':325,'multiline':False]['text':'*
	 * Returns all editors as an array. Possible to contain duplicates
	 ','line_number':338,'multiline':True]['text':' Form the new setting object including the newest associations','line_number':349,'multiline':False]['text':' The user setting should be respected even if the editor doesn't specify that resource in package.json','line_number':359,'multiline':False]['text':' Then all glob patterns','line_number':362,'multiline':False]['text':' Return the editors sorted by their priority','line_number':371,'multiline':False]['text':' Very crude if priorities match longer glob wins as longer globs are normally more specific','line_number':373,'multiline':False]['text':' By resource','line_number':384,'multiline':False]['text':' All','line_number':393,'multiline':False]['text':'*
	 * Given a resource and an editorId selects the best possible editor
	 * @returns The editor and whether there was another default which conflicted with it
	 ','line_number':397,'multiline':True]['text':' Specific id passed in doesn't have to match the resource, it can be anything','line_number':413,'multiline':False]['text':' We only want minPriority+ if no user defined setting is found, else we won't resolve an editor','line_number':424,'multiline':False]['text':' If the editor is exclusive we use that, else use the user setting, else use the built-in+ editor','line_number':433,'multiline':False]['text':' Filter out exclusive before we check for conflicts as exclusive editors cannot be manually chosen','line_number':440,'multiline':False]['text':' If no activation option is provided, populate it.','line_number':455,'multiline':False]['text':' If it's a merge editor we trigger the create merge editor input','line_number':460,'multiline':False]['text':' If it's a diff editor we trigger the create diff editor input','line_number':469,'multiline':False]['text':' If it's a diff list editor we trigger the create diff list editor input','line_number':478,'multiline':False]['text':' Should no longer have an undefined resource so lets throw an error if that's somehow the case','line_number':499,'multiline':False]['text':' If the editor states it can only be opened once per resource we must close all existing ones except one and move the new one into the group','line_number':504,'multiline':False]['text':' If no factory is above, return flow back to caller letting them know we could not resolve it','line_number':513,'multiline':False]['text':' Respect options passed back','line_number':518,'multiline':False]['text':'*
	 * Moves an editor with the resource and viewtype to target group if one exists
	 * Additionally will close any other editors that are open for that resource and viewtype besides the first one found
	 * @param resource The resource of the editor
	 * @param viewType the viewtype of the editor
	 * @param targetGroup The group to move it to
	 * @returns An editor input if one exists, else undefined
	 ','line_number':526,'multiline':True]['text':' We should only have one editor but if there are multiple we close the others','line_number':546,'multiline':False]['text':' Move the editor already opened to the target group','line_number':556,'multiline':False]['text':'*
	 * Given a resource and an editorId, returns all editors open for that resource and editorId.
	 * @param resource The resource specified
	 * @param editorId The editorID
	 * @returns A list of editors
	 ','line_number':564,'multiline':True]['text':' Writes to the storage service that a choice has been made for the currently installed editors','line_number':596,'multiline':False]['text':' If the user has already made a choice for this editor we don't want to ask them again','line_number':603,'multiline':False]['text':' Show the picker and tell it to update the setting to whatever the user selected','line_number':613,'multiline':False]['text':' Replace the current editor with the picked one','line_number':623,'multiline':False]['text':' If the user pressed X we assume they want to keep the current editor as default','line_number':638,'multiline':False]['text':' If untitled, we want all registered editors','line_number':647,'multiline':False]['text':' We don't want duplicate Id entries','line_number':649,'multiline':False]['text':' Not the most efficient way to do this, but we want to ensure the text editor is at the top of the quickpick','line_number':652,'multiline':False]['text':' Default order = setting -> highest priority -> text','line_number':666,'multiline':False]['text':' Map the editors to quickpick entries','line_number':674,'multiline':False]['text':' Get all the editors for the resource as quickpick entries','line_number':713,'multiline':False]['text':' Create the editor picker','line_number':716,'multiline':False]['text':' Prompt the user to select an editor','line_number':729,'multiline':False]['text':' If asked to always update the setting then update it even if the gear isn't clicked','line_number':742,'multiline':False]['text':' Trigger opening and close picker','line_number':754,'multiline':False]['text':' Persist setting','line_number':757,'multiline':False]['text':' Close picker','line_number':766,'multiline':False]['text':' If the user picked an editor, look at how the picker was','line_number':769,'multiline':False]['text':' used (e.g. modifier keys, open in background) and create the','line_number':770,'multiline':False]['text':' options and group to use accordingly','line_number':771,'multiline':False]['text':' If the user selected to configure default we trigger this picker again and tell it to show the default picker','line_number':774,'multiline':False]['text':' Figure out options','line_number':779,'multiline':False]['text':' Create a set to store glob patterns','line_number':807,'multiline':False]['text':' Store just the relative pattern pieces without any path info','line_number':810,'multiline':False]['text':' Don't keep a cache of the optional ones as those wouldn't be opened on start anyways','line_number':813,'multiline':False]['text':' Also store the users settings as those would have to activate on startup as well','line_number':824,'multiline':False]