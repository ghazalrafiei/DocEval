['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' Update models from file change events','line_number':96,'multiline':False]['text':' File system provider changes','line_number':99,'multiline':False]['text':' Working copy operations','line_number':103,'multiline':False]['text':' never reload dirty models','line_number':112,'multiline':False]['text':' Trigger a model resolve for any update or add event that impacts','line_number':115,'multiline':False]['text':' the model. We also consider the added event because it could','line_number':116,'multiline':False]['text':' be that a file was added and updated right after.','line_number':117,'multiline':False]['text':' Resolve models again for file systems that changed','line_number':126,'multiline':False]['text':' capabilities to fetch latest metadata (e.g. readonly)','line_number':127,'multiline':False]['text':' into all models.','line_number':128,'multiline':False]['text':' only if added','line_number':134,'multiline':False]['text':' Resolve models again for file systems that registered','line_number':137,'multiline':False]['text':' to account for capability changes: extensions may','line_number':138,'multiline':False]['text':' unregister and register the same provider with different','line_number':139,'multiline':False]['text':' capabilities, so we want to ensure to fetch latest','line_number':140,'multiline':False]['text':' metadata (e.g. readonly) into all models.','line_number':141,'multiline':False]['text':' never reload dirty models','line_number':148,'multiline':False]['text':' Resolve model to update (use a queue to prevent accumulation of resolves','line_number':159,'multiline':False]['text':' when the resolve actually takes long. At most we only want the queue','line_number':160,'multiline':False]['text':' to have a size of 2 (1 running resolve and 1 queued resolve).','line_number':161,'multiline':False]['text':' Move / Copy: remember models to restore after the operation','line_number':178,'multiline':False]['text':' ignore if resources are considered equal','line_number':185,'multiline':False]['text':' find all models that related to source (can be many if resource is a folder)','line_number':188,'multiline':False]['text':' remember each source model to resolve again after move is done','line_number':196,'multiline':False]['text':' with optional content to restore if it was dirty','line_number':197,'multiline':False]['text':' If the source is the actual model, just use target as new resource','line_number':201,'multiline':False]['text':' Otherwise a parent folder of the source is being moved, so we need','line_number':207,'multiline':False]['text':' to compute the target resource based on that','line_number':208,'multiline':False]['text':' Move / Copy: restore dirty flag on models to restore that were dirty','line_number':230,'multiline':False]['text':' snapshot presence means this model used to be dirty and so we restore that','line_number':237,'multiline':False]['text':' flag. we do NOT have to restore the content because the model was only soft','line_number':238,'multiline':False]['text':' reverted and did not loose its original dirty contents.','line_number':239,'multiline':False]['text':' Create: Revert existing models','line_number':251,'multiline':False]['text':' Move/Copy: restore models that were resolved before the operation took place','line_number':263,'multiline':False]['text':' restore the model at the target. if we have previous dirty content, we pass it','line_number':273,'multiline':False]['text':' over to be used, otherwise we force a reload from disk. this is important','line_number':274,'multiline':False]['text':' because we know the file has changed on disk after the move and the model might','line_number':275,'multiline':False]['text':' have still existed with the previous state. this ensures that the model is not','line_number':276,'multiline':False]['text':' tracking a stale state.','line_number':277,'multiline':False]['text':' enforce a reload','line_number':279,'multiline':False]['text':' restore previous language only if the language is now unspecified and it was specified','line_number':284,'multiline':False]['text':' but not when the file was explicitly stored with the plain text extension','line_number':285,'multiline':False]['text':' (https://github.com/microsoft/vscode/issues/125795)','line_number':286,'multiline':False]['text':' Await a pending model resolve first before proceeding','line_number':312,'multiline':False]['text':' to ensure that we never resolve a model more than once','line_number':313,'multiline':False]['text':' in parallel.','line_number':314,'multiline':False]['text':' the model possibly got dirty or disposed, so return early then','line_number':318,'multiline':False]['text':' Trigger reload','line_number':321,'multiline':False]['text':' Await a pending model resolve first before proceeding','line_number':327,'multiline':False]['text':' to ensure that we never resolve a model more than once','line_number':328,'multiline':False]['text':' in parallel.','line_number':329,'multiline':False]['text':' Trigger resolve','line_number':335,'multiline':False]['text':' Model exists','line_number':353,'multiline':False]['text':' Always reload if contents are provided','line_number':356,'multiline':False]['text':' Reload async or sync based on options','line_number':361,'multiline':False]['text':' async reload: trigger a reload but return immediately','line_number':364,'multiline':False]['text':' sync reload: do not return until model reloaded','line_number':376,'multiline':False]['text':' Do not reload','line_number':382,'multiline':False]['text':' Model does not exist','line_number':388,'multiline':False]['text':' Store pending resolves to avoid race conditions','line_number':398,'multiline':False]['text':' Make known to manager (if not already known)','line_number':401,'multiline':False]['text':' Emit some events if we created the model','line_number':404,'multiline':False]['text':' If the model is dirty right from the beginning,','line_number':408,'multiline':False]['text':' make sure to emit this as an event','line_number':409,'multiline':False]['text':' Automatically dispose the model if we created it','line_number':419,'multiline':False]['text':' because we cannot dispose a model we do not own','line_number':420,'multiline':False]['text':' https://github.com/microsoft/vscode/issues/138850','line_number':421,'multiline':False]['text':' Remove from pending resolves','line_number':429,'multiline':False]['text':' Apply language if provided','line_number':433,'multiline':False]['text':' Model can be dirty if a backup was restored, so we make sure to','line_number':438,'multiline':False]['text':' have this event delivered if we created the model here','line_number':439,'multiline':False]['text':' While we have pending model resolves, ensure','line_number':458,'multiline':False]['text':' to await the last one finishing before returning.','line_number':459,'multiline':False]['text':' This prevents a race when multiple clients await','line_number':460,'multiline':False]['text':' the pending resolve and then all trigger the resolve','line_number':461,'multiline':False]['text':' at the same time.','line_number':462,'multiline':False]['text':' already awaited on - return','line_number':467,'multiline':False]['text':' ignore any error here, it will bubble to the original requestor','line_number':474,'multiline':False]['text':' Install model listeners','line_number':481,'multiline':False]['text':' Keep for disposal','line_number':492,'multiline':False]['text':' already cached','line_number':499,'multiline':False]['text':' dispose any previously stored dispose listener for this resource','line_number':502,'multiline':False]['text':' store in cache but remove when model gets disposed','line_number':506,'multiline':False]['text':'#region Save participants','line_number':531,'multiline':False]['text':'#endregion','line_number':543,'multiline':False]['text':' quick return if model already disposed or not dirty and not resolving','line_number':547,'multiline':False]['text':' promise based return in all other cases','line_number':555,'multiline':False]['text':' Await any pending resolves first before proceeding','line_number':561,'multiline':False]['text':' dirty model: we do not allow to dispose dirty models to prevent','line_number':569,'multiline':False]['text':' data loss cases. dirty models can only be disposed when they are','line_number':570,'multiline':False]['text':' either saved or reverted','line_number':571,'multiline':False]['text':' model caches','line_number':584,'multiline':False]['text':' dispose the dispose listeners','line_number':588,'multiline':False]['text':' dispose the model change listeners','line_number':592,'multiline':False]