['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	* Returns the replace string for the first match in the given text.
	* If text has no matches then returns null.
	','line_number':57,'multiline':True]['text':'*
	 * replaceWithCaseOperations applies case operations to relevant replacement strings and applies
	 * the affected $N arguments. It then passes unaffected $N arguments through to string.replace().
	 *
	 * \u			=> upper-cases one character in a match.
	 * \U			=> upper-cases ALL remaining characters in a match.
	 * \l			=> lower-cases one character in a match.
	 * \L			=> lower-cases ALL remaining characters in a match.
	 ','line_number':78,'multiline':True]['text':' Short-circuit the common path.','line_number':88,'multiline':False]['text':' Store the values of the search parameters.','line_number':92,'multiline':False]['text':' For each annotated $N, perform text processing on the parameters and perform the substitution.','line_number':102,'multiline':False]['text':' \u, \l\u, etc.','line_number':107,'multiline':False]['text':' $1, $2, etc.','line_number':108,'multiline':False]['text':' prefix','line_number':121,'multiline':False]['text':' Append any remaining replacement string content not covered by case operations.','line_number':142,'multiline':False]['text':' suffix','line_number':147,'multiline':False]['text':' Append any remaining trailing content after the final regex match.','line_number':150,'multiline':False]['text':'*
	 * \n => LF
	 * \t => TAB
	 * \\ => \
	 * $0 => $& (see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter)
	 * everything else stays untouched
	 ','line_number':164,'multiline':True]['text':' move to next char','line_number':182,'multiline':False]['text':' string ends with a \','line_number':186,'multiline':False]['text':' \\ => \','line_number':195,'multiline':False]['text':' \n => LF','line_number':199,'multiline':False]['text':' \t => TAB','line_number':203,'multiline':False]['text':' move to next char','line_number':216,'multiline':False]['text':' string ends with a $','line_number':220,'multiline':False]['text':' $0 => $&','line_number':229,'multiline':False]['text':' check if it is a valid string parameter $n (0 <= n <= 99). $0 is already handled by now.','line_number':238,'multiline':False]['text':' no replacement occurred','line_number':274,'multiline':False]