['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' if the service is created late enough that an editor is already opened','line_number':66,'multiline':False]['text':' make sure to trigger the onActiveEditorChanged() to track the editor','line_number':67,'multiline':False]['text':' properly (fixes https://github.com/microsoft/vscode/issues/59908)','line_number':68,'multiline':False]['text':' Mouse back/forward support','line_number':76,'multiline':False]['text':' Editor changes','line_number':79,'multiline':False]['text':' Editor group changes','line_number':85,'multiline':False]['text':' File changes','line_number':88,'multiline':False]['text':' Storage','line_number':92,'multiline':False]['text':' Configuration','line_number':95,'multiline':False]['text':' Context keys','line_number':98,'multiline':False]['text':' Support to navigate in history when mouse buttons 4/5 are pressed','line_number':135,'multiline':False]['text':' We want to trigger this on mouse down for a faster experience','line_number':136,'multiline':False]['text':' but we also need to prevent mouse up from triggering the default','line_number':137,'multiline':False]['text':' which is to navigate in the browser history.','line_number':138,'multiline':False]['text':' return if the active editor is still the same','line_number':165,'multiline':False]['text':' Remember as last active editor (can be undefined if none opened)','line_number':168,'multiline':False]['text':' Dispose old listeners','line_number':171,'multiline':False]['text':' Handle editor change','line_number':174,'multiline':False]['text':' Listen to selection changes if the editor pane','line_number':177,'multiline':False]['text':' is having a selection concept.','line_number':178,'multiline':False]['text':' Context keys','line_number':183,'multiline':False]['text':' External file changes (watcher)','line_number':189,'multiline':False]['text':' Internal file changes (e.g. explorer)','line_number':196,'multiline':False]['text':' Delete','line_number':199,'multiline':False]['text':' Move','line_number':204,'multiline':False]['text':' Ignore for now (recently opened are most often out of workspace files anyway for which there are no file events)','line_number':240,'multiline':False]['text':' History','line_number':252,'multiline':False]['text':' Navigation (next, previous)','line_number':255,'multiline':False]['text':' Recently closed editors','line_number':258,'multiline':False]['text':' Context Keys','line_number':261,'multiline':False]['text':'#region History Context Keys','line_number':265,'multiline':False]['text':'#endregion','line_number':299,'multiline':False]['text':'#region Editor History Navigation (limit: 50)','line_number':301,'multiline':False]['text':' Ensure to start fresh when setting changes','line_number':315,'multiline':False]['text':' Update scope','line_number':318,'multiline':False]['text':' Per Editor','line_number':341,'multiline':False]['text':' Per Editor Group','line_number':366,'multiline':False]['text':' Global','line_number':381,'multiline':False]['text':' Global','line_number':435,'multiline':False]['text':' Editor groups','line_number':438,'multiline':False]['text':' Global','line_number':460,'multiline':False]['text':' Per editor group','line_number':465,'multiline':False]['text':' Per editor','line_number':470,'multiline':False]['text':' Global','line_number':480,'multiline':False]['text':' Per Editor group','line_number':484,'multiline':False]['text':' Per Editor','line_number':490,'multiline':False]['text':'#endregion','line_number':499,'multiline':False]['text':'#region Navigation: Next/Previous Used Editor','line_number':501,'multiline':False]['text':' Across groups','line_number':553,'multiline':False]['text':' Within group','line_number':559,'multiline':False]['text':' Adjust index','line_number':565,'multiline':False]['text':' Remember index and editors','line_number':573,'multiline':False]['text':' Drop all-editors stack unless navigating in all editors','line_number':587,'multiline':False]['text':' Drop in-group-editors stack unless navigating in group','line_number':593,'multiline':False]['text':'#endregion','line_number':600,'multiline':False]['text':'#region File: Reopen Closed Editor (limit: 20)','line_number':602,'multiline':False]['text':' blocked','line_number':611,'multiline':False]['text':' ignore if editor was replaced or moved','line_number':616,'multiline':False]['text':' we need a untyped editor to restore from going forward','line_number':621,'multiline':False]['text':' Remove from list of recently closed before...','line_number':632,'multiline':False]['text':' ...adding it as last recently closed','line_number':635,'multiline':False]['text':' Bounding','line_number':645,'multiline':False]['text':' Context','line_number':650,'multiline':False]['text':' Open editor if we have one','line_number':656,'multiline':False]['text':' Update context','line_number':663,'multiline':False]['text':' Special sticky handling: remove the index property from options','line_number':672,'multiline':False]['text':' if that would result in sticky state to not preserve or apply','line_number':673,'multiline':False]['text':' wrongly.','line_number':674,'multiline':False]['text':' Re-open editor unless already opened','line_number':682,'multiline':False]['text':' Fix for https://github.com/microsoft/vscode/issues/107850','line_number':686,'multiline':False]['text':' If opening an editor fails, it is possible that we get','line_number':687,'multiline':False]['text':' another editor-close event as a result. But we really do','line_number':688,'multiline':False]['text':' want to ignore that in our list of recently closed editors','line_number':689,'multiline':False]['text':'  to prevent endless loops.','line_number':690,'multiline':False]['text':' If no editor was opened, try with the next one','line_number':706,'multiline':False]['text':' Fix for https://github.com/microsoft/vscode/issues/67882','line_number':709,'multiline':False]['text':' If opening of the editor fails, make sure to try the next one','line_number':710,'multiline':False]['text':' but make sure to remove this one from the list to prevent','line_number':711,'multiline':False]['text':' endless loops.','line_number':712,'multiline':False]['text':' Try with next one','line_number':715,'multiline':False]['text':' keep: different editor identifiers','line_number':723,'multiline':False]['text':' remove: editor matches directly','line_number':727,'multiline':False]['text':' remove: an associated resource matches','line_number':731,'multiline':False]['text':' keep','line_number':734,'multiline':False]['text':' Update context','line_number':737,'multiline':False]['text':'#endregion','line_number':741,'multiline':False]['text':'#region Go to: Recently Opened Editor (limit: 200, persisted)','line_number':743,'multiline':False]['text':' Ensure we have not configured to exclude input and don't track invalid inputs','line_number':766,'multiline':False]['text':' Remove any existing entry and add to the beginning','line_number':772,'multiline':False]['text':' Insert based on preference','line_number':785,'multiline':False]['text':' Respect max entries setting','line_number':792,'multiline':False]['text':' React to editor input disposing if this is a typed editor','line_number':797,'multiline':False]['text':' Any non side-by-side editor input gets removed directly on dispose','line_number':805,'multiline':False]['text':' Side-by-side editors get special treatment: we try to distill the','line_number':810,'multiline':False]['text':' possibly untyped resource inputs from both sides to be able to','line_number':811,'multiline':False]['text':' offer these entries from the history to the user still.','line_number':812,'multiline':False]['text':' Insert the untyped resource inputs where our disposed','line_number':823,'multiline':False]['text':' side-by-side editor input is in the history stack','line_number':824,'multiline':False]['text':' include any non files','line_number':831,'multiline':False]['text':' Cleanup any listeners associated with the input when removing from history','line_number':843,'multiline':False]['text':' Cleanup any listeners associated with the input when removing from history','line_number':869,'multiline':False]['text':' Entry matches and is going to be disposed + replaced','line_number':889,'multiline':False]['text':' Cleanup any listeners associated with the input when replacing from history','line_number':892,'multiline':False]['text':' Insert replacements but only once','line_number':895,'multiline':False]['text':' Entry does not match, but only add it if it didn't match','line_number':902,'multiline':False]['text':' our replacements already','line_number':903,'multiline':False]['text':' If the target editor to replace was not found, make sure to','line_number':909,'multiline':False]['text':' insert the replacements to the end to ensure we got them','line_number':910,'multiline':False]['text':' Until history is loaded, it is just empty','line_number':936,'multiline':False]['text':' We want to seed history from opened editors','line_number':939,'multiline':False]['text':' too as well as previous stored state, so we','line_number':940,'multiline':False]['text':' need to wait for the editor groups being ready','line_number':941,'multiline':False]['text':' Init as empty before adding - since we are about to','line_number':956,'multiline':False]['text':' populate the history from opened editors, we capture','line_number':957,'multiline':False]['text':' the right order here.','line_number':958,'multiline':False]['text':' All stored editors from previous session','line_number':961,'multiline':False]['text':' All restored editors from previous session','line_number':964,'multiline':False]['text':' in reverse editor from least to most recently','line_number':965,'multiline':False]['text':' used.','line_number':966,'multiline':False]['text':' We want to merge the opened editors from the last','line_number':969,'multiline':False]['text':' session with the stored editors from the last','line_number':970,'multiline':False]['text':' session. Because not all editors can be serialised','line_number':971,'multiline':False]['text':' we want to make sure to include all opened editors','line_number':972,'multiline':False]['text':' too.','line_number':973,'multiline':False]['text':' Opened editors should always be first in the history','line_number':974,'multiline':False]['text':' resource + editorId ','line_number':976,'multiline':True]['text':' Add all opened editors first','line_number':978,'multiline':False]['text':' Add into history','line_number':984,'multiline':False]['text':' Remember as added','line_number':987,'multiline':False]['text':' Add remaining from storage if not there already','line_number':993,'multiline':False]['text':' We check on resource and `editorId` (from `override`)','line_number':994,'multiline':False]['text':' to figure out if the editor has been already added.','line_number':995,'multiline':False]['text':' at the end ','line_number':998,'multiline':True]['text':' unexpected data format','line_number':1012,'multiline':False]['text':'  from 1.67.x: URI is stored efficiently as URI.toString()','line_number':1019,'multiline':False]['text':' until 1.66.x: URI was stored very verbose as URI.toJSON()','line_number':1020,'multiline':False]['text':' do not fail entire history when one entry fails','line_number':1023,'multiline':False]['text':' https://github.com/microsoft/vscode/issues/99075','line_number':1027,'multiline':False]['text':' nothing to save because history was not used','line_number':1036,'multiline':False]['text':' only save resource editor inputs','line_number':1042,'multiline':False]['text':'#endregion','line_number':1056,'multiline':False]['text':'#region Last Active Workspace/File','line_number':1058,'multiline':False]['text':' No Folder: return early','line_number':1062,'multiline':False]['text':' Single Folder: return early','line_number':1068,'multiline':False]['text':' Multiple folders: find the last active one','line_number':1078,'multiline':False]['text':' Fallback to first workspace matching scheme filter if any','line_number':1098,'multiline':False]['text':'#endregion','line_number':1126,'multiline':False]['text':' different group','line_number':1155,'multiline':False]['text':' different editor','line_number':1159,'multiline':False]['text':' unknown selections','line_number':1163,'multiline':False]['text':' let navigation sources win even if the selection is `SIMILAR`','line_number':1169,'multiline':False]['text':' (e.g. "Go to definition" should add a history entry)','line_number':1170,'multiline':False]['text':' Always send to selections navigation stack','line_number':1260,'multiline':False]['text':' Always send to selections navigation stack','line_number':1267,'multiline':False]['text':' Check for edits','line_number':1270,'multiline':False]['text':' Check for navigations','line_number':1275,'multiline':False]['text':'','line_number':1276,'multiline':False]['text':' Note: ignore if selections navigation stack is navigating because','line_number':1277,'multiline':False]['text':' in that case we do not want to receive repeated entries in','line_number':1278,'multiline':False]['text':' the navigation stack.','line_number':1279,'multiline':False]['text':' A "JUMP" navigation selection change always has a source and','line_number':1285,'multiline':False]['text':' target. As such, we add the previous entry of the selections','line_number':1286,'multiline':False]['text':' navigation stack so that our navigation stack receives both','line_number':1287,'multiline':False]['text':' entries unless the user is currently navigating.','line_number':1288,'multiline':False]['text':' ignore move events if our scope is group based','line_number':1477,'multiline':False]['text':' not in the group that reported the event','line_number':1482,'multiline':False]['text':' not the editor this event is about','line_number':1486,'multiline':False]['text':' Update to target group','line_number':1489,'multiline':False]['text':'#region Stack Mutation','line_number':1494,'multiline':False]['text':' Treat editor changes that happen as part of stack navigation specially','line_number':1502,'multiline':False]['text':' we do not want to add a new stack entry as a matter of navigating the','line_number':1503,'multiline':False]['text':' stack but we need to keep our currentEditorSelectionState up to date','line_number':1504,'multiline':False]['text':' with the navigtion that occurs.','line_number':1505,'multiline':False]['text':' we navigated to a non-selection aware or disposed editor','line_number':1516,'multiline':False]['text':' Normal navigation not part of stack navigation','line_number':1520,'multiline':False]['text':' Navigation inside selection aware editor','line_number':1524,'multiline':False]['text':' Navigation to non-selection aware or disposed editor','line_number':1529,'multiline':False]['text':' at this time we have no active selection aware editor','line_number':1531,'multiline':False]['text':' do not push same editor input again of same group if we have no valid selection','line_number':1542,'multiline':False]['text':' Add to stack if we dont have a current state or this new state justifies a push','line_number':1549,'multiline':False]['text':' Otherwise we replace the current stack entry with this one','line_number':1554,'multiline':False]['text':' Update our current navigation editor state','line_number':1559,'multiline':False]['text':' do not push same editor input again of same group','line_number':1565,'multiline':False]['text':' force replace ','line_number':1581,'multiline':True]['text':' Ensure we listen to changes in group','line_number':1587,'multiline':False]['text':' Check whether to replace an existing entry or not','line_number':1590,'multiline':False]['text':' replace if we are forced to','line_number':1594,'multiline':False]['text':' replace if the group & input is the same and selection indicates as such','line_number':1596,'multiline':False]['text':' Replace at current position','line_number':1613,'multiline':False]['text':' Add to stack at current position','line_number':1622,'multiline':False]['text':' If we are not at the end of history, we remove anything after','line_number':1625,'multiline':False]['text':' Insert entry at index','line_number':1634,'multiline':False]['text':' Check for limit','line_number':1637,'multiline':False]['text':' remove first','line_number':1639,'multiline':False]['text':' skip event, we fire it later ','line_number':1644,'multiline':True]['text':' Clear editor listeners from removed entries','line_number':1648,'multiline':False]['text':' Remove this from the stack unless the stack input is a resource','line_number':1653,'multiline':False]['text':' that can easily be restored even when the input gets disposed','line_number':1654,'multiline':False]['text':' Event','line_number':1659,'multiline':False]['text':' different group','line_number':1665,'multiline':False]['text':' different editor','line_number':1669,'multiline':False]['text':' always replace when we have no specific selection yet','line_number':1673,'multiline':False]['text':' otherwise, prefer to keep existing specific selection over new unspecific one','line_number':1677,'multiline':False]['text':' Finally, replace when selections are considered identical','line_number':1680,'multiline':False]['text':' Remove all stack entries that match `arg1`','line_number':1696,'multiline':False]['text':' Cleanup any listeners associated with the input when removing','line_number':1700,'multiline':False]['text':' Given we just removed entries, we need to make sure','line_number':1708,'multiline':False]['text':' to remove entries that are now identical and next','line_number':1709,'multiline':False]['text':' to each other to prevent no-op navigations.','line_number':1710,'multiline':False]['text':' Reset indeces','line_number':1713,'multiline':False]['text':' Clear group listener','line_number':1717,'multiline':False]['text':' Event','line_number':1723,'multiline':False]['text':' skip over entry when it is considered the same','line_number':1733,'multiline':False]['text':'#endregion','line_number':1765,'multiline':False]['text':'#region Navigation','line_number':1767,'multiline':False]['text':' If we never navigated, just go back','line_number':1811,'multiline':False]['text':' Otherwise jump to previous stack entry','line_number':1816,'multiline':False]['text':' When this navigation stack works with a specific','line_number':1836,'multiline':False]['text':' filter where not every selection change is added','line_number':1837,'multiline':False]['text':' to the stack, we want to first reveal the current','line_number':1838,'multiline':False]['text':' selection before attempting to navigate in the','line_number':1839,'multiline':False]['text':' stack.','line_number':1840,'multiline':False]['text':' only applies when  we are a filterd stack','line_number':1843,'multiline':False]['text':' we are at the current navigation stop','line_number':1847,'multiline':False]['text':' Go to current selection','line_number':1850,'multiline':False]['text':' we need a current selection','line_number':1858,'multiline':False]['text':' we need an active editor pane with selection support','line_number':1863,'multiline':False]['text':' we need matching groups','line_number':1867,'multiline':False]['text':' we need matching editors','line_number':1871,'multiline':False]['text':' we need a selection to compare with','line_number':1876,'multiline':False]['text':' Event','line_number':1886,'multiline':False]['text':' Apply selection if any','line_number':1907,'multiline':False]['text':'#endregion','line_number':1929,'multiline':False]['text':' For now, only prefer well known schemes that we control to prevent','line_number':1947,'multiline':False]['text':' issues such as https://github.com/microsoft/vscode/issues/85204','line_number':1948,'multiline':False]['text':' from being used as resource inputs','line_number':1949,'multiline':False]['text':' resource inputs survive editor disposal and as such are a lot more','line_number':1950,'multiline':False]['text':' durable across editor changes and restarts','line_number':1951,'multiline':False]['text':' Scheme is valid: prefer the untyped input','line_number':1958,'multiline':False]['text':' over the typed input if possible to keep','line_number':1959,'multiline':False]['text':' the entry across restarts','line_number':1960,'multiline':False]['text':' Scheme is invalid: allow the editor input','line_number':1972,'multiline':False]['text':' for as long as it is not disposed','line_number':1973,'multiline':False]['text':' we only support this for `IResourceEditorInputs` that are file based','line_number':1982,'multiline':False]['text':' make sure to only check this when workbench has restored (for https://github.com/microsoft/vscode/issues/48275)','line_number':2023,'multiline':False]['text':' only supported when passing in an actual editor input','line_number':2058,'multiline':False]