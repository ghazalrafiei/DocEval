['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' Read backup directory for backups','line_number':46,'multiline':False]['text':' Remember known backups in our caches','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':' Note: this does NOT account for resolving','line_number':51,'multiline':False]['text':' associated meta data because that requires','line_number':52,'multiline':False]['text':' opening the backup and reading the meta','line_number':53,'multiline':False]['text':' preamble. Instead, when backups are actually','line_number':54,'multiline':False]['text':' resolved, the meta data will be added via','line_number':55,'multiline':False]['text':' additional `update` calls.','line_number':56,'multiline':False]['text':' ignore any errors','line_number':67,'multiline':False]['text':' unknown resource','line_number':92,'multiline':False]['text':' different versionId','line_number':96,'multiline':False]['text':' different metadata','line_number':100,'multiline':False]['text':' Re-init implementation (unless we are running in-memory)','line_number':145,'multiline':False]['text':' using a character that is know to be escaped in a URI as separator','line_number':196,'multiline':False]['text':' queue IO operations to ensure write/delete file order','line_number':201,'multiline':False]['text':' Create backup model','line_number':224,'multiline':False]['text':' Ensure to await any pending backup operations','line_number':233,'multiline':False]['text':' return early if backup version id matches requested one','line_number':257,'multiline':False]['text':' return early if backup version id matches requested one','line_number':267,'multiline':False]['text':' this can happen when multiple backup IO operations got','line_number':268,'multiline':False]['text':' scheduled, racing against each other.','line_number':269,'multiline':False]['text':' Encode as: Resource + META-START + Meta + END','line_number':273,'multiline':False]['text':' and respect max length restrictions in case','line_number':274,'multiline':False]['text':' meta is too large.','line_number':275,'multiline':False]['text':' Update backup with value','line_number':281,'multiline':False]['text':' Write backup via file service','line_number':292,'multiline':False]['text':'','line_number':295,'multiline':False]['text':' Update model','line_number':296,'multiline':False]['text':'','line_number':297,'multiline':False]['text':' Note: not checking for cancellation here because a successful','line_number':298,'multiline':False]['text':' write into the backup file should be noted in the model to','line_number':299,'multiline':False]['text':' prevent the model being out of sync with the backup file','line_number':300,'multiline':False]['text':' Discard all but some backups','line_number':312,'multiline':False]['text':' Discard all backups','line_number':327,'multiline':False]['text':' Delete backup file ignoring any file not found errors','line_number':352,'multiline':False]['text':'','line_number':355,'multiline':False]['text':' Update model','line_number':356,'multiline':False]['text':'','line_number':357,'multiline':False]['text':' Note: not checking for cancellation here because a successful','line_number':358,'multiline':False]['text':' delete of the backup file should be noted in the model to','line_number':359,'multiline':False]['text':' prevent the model being out of sync with the backup file','line_number':360,'multiline':False]['text':' re-throw any other error than file not found which is OK','line_number':370,'multiline':False]['text':' Ensure to await any pending backup operations','line_number':378,'multiline':False]['text':' require backup to be present','line_number':391,'multiline':False]['text':' Read the entire backup preamble by reading up to','line_number':394,'multiline':False]['text':' `PREAMBLE_MAX_LENGTH` in the backup file until','line_number':395,'multiline':False]['text':' the `PREAMBLE_END_MARKER` is found','line_number':396,'multiline':False]['text':' Figure out the offset in the preamble where meta','line_number':402,'multiline':False]['text':' information possibly starts. This can be `-1` for','line_number':403,'multiline':False]['text':' older backups without meta.','line_number':404,'multiline':False]['text':' Extract the preamble content for resource and meta','line_number':407,'multiline':False]['text':' Try to parse the meta preamble for figuring out','line_number':418,'multiline':False]['text':' `typeId` and `meta` if defined.','line_number':419,'multiline':False]['text':' Update model entry with now resolved meta','line_number':422,'multiline':False]['text':' Unable to find matching string in file','line_number':442,'multiline':False]['text':' require backup to be present','line_number':455,'multiline':False]['text':' Load the backup content and peek into the first chunk','line_number':458,'multiline':False]['text':' to be able to resolve the meta data','line_number':459,'multiline':False]['text':' We have seen reports (e.g. https://github.com/microsoft/vscode/issues/78500) where','line_number':464,'multiline':False]['text':' if VSCode goes down while writing the backup file, the file can turn empty because','line_number':465,'multiline':False]['text':' it always first gets truncated and then written to. In this case, we will not find','line_number':466,'multiline':False]['text':' the meta-end marker ('\n') and as such the backup can only be invalid. We bail out','line_number':467,'multiline':False]['text':' here if that is the case.','line_number':468,'multiline':False]['text':' Extract meta data (if any)','line_number':478,'multiline':False]['text':' Update model entry with now resolved meta','line_number':485,'multiline':False]['text':' Build a new stream without the preamble','line_number':488,'multiline':False]['text':' `typeId` is a property that we add so we','line_number':512,'multiline':False]['text':' remove it when returning to clients.','line_number':513,'multiline':False]['text':' ignore JSON parse errors','line_number':522,'multiline':False]['text':'
 * Exported only for testing
 ','line_number':612,'multiline':True]['text':' IMPORTANT: for backwards compatibility, ensure that','line_number':617,'multiline':False]['text':' we ignore the `typeId` unless a value is provided.','line_number':618,'multiline':False]['text':' To preserve previous backups without type id, we','line_number':619,'multiline':False]['text':' need to just hash the resource. Otherwise we use','line_number':620,'multiline':False]['text':' the type id as a seed to the resource path.','line_number':621,'multiline':False]