['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':'*
	 * Updates the contents of the ignorefile. Preservering the location and parent
	 * @param contents The new contents of the gitignore file
	 ','line_number':26,'multiline':True]['text':'*
	 * Returns true if a path in a traversable directory has not been ignored.
	 *
	 * Note: For performance reasons this does not check if the parent directories have been ignored,
	 * so it should always be used in tandem with `shouldTraverseDir` when walking a directory.
	 *
	 * In cases where a path must be tested in isolation, `isArbitraryPathIncluded` should be used.
	 ','line_number':34,'multiline':True]['text':'*
	 * Returns true if an arbitrary path has not been ignored.
	 * This is an expensive operation and should only be used ouside of traversals.
	 ','line_number':52,'multiline':True]['text':' Pull out all the lines that end with `/`, those only apply to directories','line_number':99,'multiline':False]['text':' TODO: Slight hack... this naieve approach may reintroduce too many files in cases of weirdly complex .gitignores','line_number':105,'multiline':False]['text':' When checking if a dir is ignored we can use all lines','line_number':109,'multiline':False]['text':' Same hack.','line_number':113,'multiline':False]