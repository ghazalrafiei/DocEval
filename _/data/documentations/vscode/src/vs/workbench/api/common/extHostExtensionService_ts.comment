['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' eslint-disable local/code-no-native-private ','line_number':6,'multiline':True]['text':'* Old test runner API, as exported from `vscode/lib/testrunner` ','line_number':52,'multiline':True]['text':'* New test runner API, as explained in the extension test doc ','line_number':57,'multiline':True]['text':' TODO: write to log once we have one','line_number':242,'multiline':False]['text':' we are already shutting down...','line_number':249,'multiline':False]['text':' Invalidate all proxies','line_number':263,'multiline':False]['text':' Give extensions at most 5 seconds to wrap up any async deactivate, then exit','line_number':268,'multiline':False]['text':' activation failed => bubble up the error as the promise result','line_number':309,'multiline':False]['text':'*
	 * Applies realpath to file-uris and returns all others uris unmodified
	 ','line_number':332,'multiline':True]['text':' create trie to enable fast 'filename -> extension id' look up','line_number':343,'multiline':False]['text':'*
	 * create trie to enable fast 'filename -> extension id' look up
	 ','line_number':353,'multiline':True]['text':' using the default/biased extUri-util because the IExtHostFileSystemInfo-service','line_number':358,'multiline':False]['text':' isn't ready to be used yet, e.g the knowledge about `file` protocol and others','line_number':359,'multiline':False]['text':' comes in while this code runs','line_number':360,'multiline':False]['text':' const tst = TernarySearchTree.forUris<IExtensionDescription>(key => true);','line_number':363,'multiline':False]['text':' call deactivate if available','line_number':389,'multiline':False]['text':' clean up subscriptions','line_number':402,'multiline':False]['text':' --- impl','line_number':413,'multiline':False]['text':' local extension host process','line_number':417,'multiline':False]['text':' remote extension host process','line_number':420,'multiline':False]['text':' do not wait for renderer confirmation','line_number':421,'multiline':False]['text':' Treat the extension as being empty => NOT AN ERROR CASE','line_number':470,'multiline':False]['text':' Make sure the extension's surface is not undefined','line_number':562,'multiline':False]['text':' `global` is nodejs while `self` is for workers','line_number':578,'multiline':False]['text':' No activate found => the module is the extension's exports','line_number':591,'multiline':False]['text':' -- eager activation','line_number':596,'multiline':False]['text':' 50 milliseconds','line_number':609,'multiline':False]['text':' time budget for current task has been exceeded','line_number':618,'multiline':False]['text':' set a new task to activate current and remaining extensions','line_number':619,'multiline':False]['text':' startup is considered finished','line_number':632,'multiline':False]['text':' Handle "eager" activation extensions','line_number':654,'multiline':False]['text':' ensure any error message makes it onto the console','line_number':721,'multiline':False]['text':' Require the test runner via node require from the provided path','line_number':732,'multiline':False]['text':' Execute the runner if it follows the old `run` spec','line_number':739,'multiline':False]['text':' ERROR ','line_number':755,'multiline':True]['text':' OK ','line_number':755,'multiline':True]['text':' for the old test runner API','line_number':759,'multiline':False]['text':' Using the new API `run(): Promise<void>`','line_number':763,'multiline':False]['text':' wait for all activation events that came in during workbench startup, but at maximum 1s','line_number':791,'multiline':False]['text':' -- called by extensions','line_number':801,'multiline':False]['text':' -- called by main thread','line_number':815,'multiline':False]['text':' we did, in fact, break the chain :(','line_number':896,'multiline':False]['text':' Split merged API result into separate authority/options','line_number':915,'multiline':False]['text':' extension are not required to return an instance of ResolvedAuthority or ManagedResolvedAuthority, so don't use `instanceof`','line_number':922,'multiline':False]['text':' The socket factory is identified by the `resolveAttempt`, since that is a number which','line_number':927,'multiline':False]['text':' always increments and is unique over all resolve() calls in a workbench session.','line_number':928,'multiline':False]['text':' There is only on managed socket factory at a time, so we can just overwrite the old one.','line_number':931,'multiline':False]['text':' Return `null` if no resolver for `remoteAuthority` is found.','line_number':962,'multiline':False]['text':' resolver cannot compute canonical URI','line_number':969,'multiline':False]['text':' unknown extension => ignore','line_number':1011,'multiline':False]['text':' First build up and update the trie and only afterwards apply the delta','line_number':1021,'multiline':False]['text':' TODO@alexdima support this','line_number':1157,'multiline':False]['text':' Strict nulloverride - Public api','line_number':1163,'multiline':False]['text':' TODO@alexdima support this','line_number':1170,'multiline':False]['text':'*
 * This mirrors the activation events as seen by the renderer. The renderer
 * is the only one which can have a reliable view of activation events because
 * implicit activation events are generated via extension points, and they
 * are registered only on the renderer side.
 ','line_number':1202,'multiline':True]