['text':'---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------','line_number':1,'multiline':True]['text':' List of all groups and their corresponding tabs, this is **the** model','line_number':40,'multiline':False]['text':' Lookup table for finding group by id','line_number':42,'multiline':False]['text':' Lookup table for finding tab by id','line_number':44,'multiline':False]['text':' Main listener which responds to events from the editor service','line_number':57,'multiline':False]['text':' Structural group changes (add, remove, move, etc) are difficult to patch.','line_number':67,'multiline':False]['text':' Since they happen infrequently we just rebuild the entire model','line_number':68,'multiline':False]['text':' Once everything is read go ahead and initialize the model','line_number':72,'multiline':False]['text':'*
	 * Creates a tab object with the correct properties
	 * @param editor The editor input represented by the tab
	 * @param group The group the tab is in
	 * @returns A tab object
	 ','line_number':82,'multiline':True]['text':' If side by side editor with same resource on both sides treat it as a singular tab kind','line_number':125,'multiline':False]['text':'*
	 * Generates a unique id for a tab
	 * @param editor The editor input
	 * @param groupId The group id
	 * @returns A unique identifier for a specific tab
	 ','line_number':205,'multiline':True]['text':' Properly get the resource and account for side by side editors','line_number':213,'multiline':False]['text':'*
	 * Called whenever a group activates, updates the model by marking the group as active an notifies the extension host
	 ','line_number':223,'multiline':True]['text':' Ok not to loop as exthost accepts last active group','line_number':230,'multiline':False]['text':'*
	 * Called when the tab label changes
	 * @param groupId The id of the group the tab exists in
	 * @param editorInput The editor input represented by the tab
	 ','line_number':236,'multiline':True]['text':' If tab is found patch, else rebuild','line_number':244,'multiline':False]['text':'*
	 * Called when a new tab is opened
	 * @param groupId The id of the group the tab is being created in
	 * @param editorInput The editor input being opened
	 * @param editorIndex The index of the editor within that group
	 ','line_number':259,'multiline':True]['text':' Even if the editor service knows about the group the group might not exist yet in our model','line_number':267,'multiline':False]['text':' Means a new group was likely created so we rebuild the model','line_number':269,'multiline':False]['text':' Splice tab into group at index editorIndex','line_number':278,'multiline':False]['text':' Update lookup','line_number':281,'multiline':False]['text':'*
	 * Called when a tab is closed
	 * @param groupId The id of the group the tab is being removed from
	 * @param editorIndex The index of the editor within that group
	 ','line_number':292,'multiline':True]['text':' Something is wrong with the model state so we rebuild','line_number':300,'multiline':False]['text':' Splice tab into group at index editorIndex','line_number':305,'multiline':False]['text':' Index must no longer be valid so we return prematurely','line_number':308,'multiline':False]['text':' Update lookup','line_number':313,'multiline':False]['text':'*
	 * Called when the active tab changes
	 * @param groupId The id of the group the tab is contained in
	 * @param editorIndex The index of the tab
	 ','line_number':324,'multiline':True]['text':' TODO @lramos15 use the tab lookup here if possible. Do we have an editor input?!','line_number':330,'multiline':False]['text':' No need to loop over as the exthost uses the most recently marked active tab','line_number':336,'multiline':False]['text':' Send DTO update to the exthost','line_number':338,'multiline':False]['text':'*
	 * Called when the dirty indicator on the tab changes
	 * @param groupId The id of the group the tab is in
	 * @param editorIndex The index of the tab
	 * @param editor The editor input represented by the tab
	 ','line_number':348,'multiline':True]['text':' Something wrong with the model state so we rebuild','line_number':357,'multiline':False]['text':'*
	 * Called when the tab is pinned/unpinned
	 * @param groupId The id of the group the tab is in
	 * @param editorIndex The index of the tab
	 * @param editor The editor input represented by the tab
	 ','line_number':372,'multiline':True]['text':' Something wrong with the model state so we rebuild','line_number':383,'multiline':False]['text':' Whether or not the tab has the pin icon (internally it's called sticky)','line_number':389,'multiline':False]['text':'*
 * Called when the tab is preview / unpreviewed
 * @param groupId The id of the group the tab is in
 * @param editorIndex The index of the tab
 * @param editor The editor input represented by the tab
 ','line_number':399,'multiline':True]['text':' Something wrong with the model state so we rebuild','line_number':410,'multiline':False]['text':' Whether or not the tab has the pin icon (internally it's called pinned)','line_number':416,'multiline':False]['text':' Something wrong with the model state so we rebuild','line_number':428,'multiline':False]['text':' Move tab from old index to new index','line_number':435,'multiline':False]['text':' Notify exthost of move','line_number':442,'multiline':False]['text':'*
	 * Builds the model from scratch based on the current state of the editor service.
	 ','line_number':452,'multiline':True]['text':' Add information about the tab to the lookup','line_number':470,'multiline':False]['text':' notify the ext host of the new model','line_number':482,'multiline':False]['text':' TODOD @lramos15 Remove this after done finishing the tab model code','line_number':486,'multiline':False]['text':' private _eventToString(event: IEditorsChangeEvent | IEditorsMoveEvent): string {','line_number':487,'multiline':False]['text':' 	let eventString = '';','line_number':488,'multiline':False]['text':' 	switch (event.kind) {','line_number':489,'multiline':False]['text':' 		case GroupModelChangeKind.GROUP_INDEX: eventString += 'GROUP_INDEX'; break;','line_number':490,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_ACTIVE: eventString += 'EDITOR_ACTIVE'; break;','line_number':491,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_PIN: eventString += 'EDITOR_PIN'; break;','line_number':492,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_OPEN: eventString += 'EDITOR_OPEN'; break;','line_number':493,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_CLOSE: eventString += 'EDITOR_CLOSE'; break;','line_number':494,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_MOVE: eventString += 'EDITOR_MOVE'; break;','line_number':495,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_LABEL: eventString += 'EDITOR_LABEL'; break;','line_number':496,'multiline':False]['text':' 		case GroupModelChangeKind.GROUP_ACTIVE: eventString += 'GROUP_ACTIVE'; break;','line_number':497,'multiline':False]['text':' 		case GroupModelChangeKind.GROUP_LOCKED: eventString += 'GROUP_LOCKED'; break;','line_number':498,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_DIRTY: eventString += 'EDITOR_DIRTY'; break;','line_number':499,'multiline':False]['text':' 		case GroupModelChangeKind.EDITOR_STICKY: eventString += 'EDITOR_STICKY'; break;','line_number':500,'multiline':False]['text':' 		default: eventString += `UNKNOWN: ${event.kind}`; break;','line_number':501,'multiline':False]['text':' 	}','line_number':502,'multiline':False]['text':' 	return eventString;','line_number':503,'multiline':False]['text':' }','line_number':504,'multiline':False]['text':'*
	 * The main handler for the tab events
	 * @param events The list of events to process
	 ','line_number':506,'multiline':True]['text':' If it's not an optimized case we rebuild the tabs model from scratch','line_number':562,'multiline':False]['text':'#region Messages received from Ext Host','line_number':566,'multiline':False]['text':' If group index is out of bounds then we make a new one that's to the right of the last group','line_number':579,'multiline':False]['text':' Make sure we respect the user's preferred side direction','line_number':582,'multiline':False]['text':' Similar logic to if index is out of bounds we place it at the end','line_number':594,'multiline':False]['text':' Find the correct EditorInput using the tab info','line_number':598,'multiline':False]['text':' Move the editor to the target group','line_number':603,'multiline':False]['text':' If not found skip','line_number':615,'multiline':False]['text':' Loop over keys of the groups map and call closeEditors','line_number':626,'multiline':False]['text':' TODO @jrieken This isn't quite right how can we say true for some but not others?','line_number':631,'multiline':False]['text':' Make sure group is empty but still there before removing it','line_number':641,'multiline':False]['text':'#endregion','line_number':649,'multiline':False]