['text':' import boto3','line_number':7,'multiline':False]['text':' s3 = boto3.client('s3')','line_number':13,'multiline':False]['text':' its the default anyway','line_number':60,'multiline':False]['text':' force an update in this case','line_number':98,'multiline':False]['text':' Cheap clean check','line_number':148,'multiline':False]['text':' URL for cloning','line_number':153,'multiline':False]['text':' File for json','line_number':166,'multiline':False]['text':' Need path','line_number':171,'multiline':False]['text':' EstimateEffort calculate the effort applied using generic COCOMO2 weighted values','line_number':213,'multiline':False]['text':' EstimateCost calculates the cost in dollars applied using generic COCOMO2 weighted values based','line_number':218,'multiline':False]['text':' on the average yearly wage','line_number':219,'multiline':False]['text':' last_modified = '2019-06-22 07:13:19+00:00'','line_number':226,'multiline':False]['text':' unixtime = s3time_to_unix(last_modified)','line_number':227,'multiline':False]['text':' diff = int(time.time() - unixtime)','line_number':229,'multiline':False]['text':' print(diff > 86400)','line_number':230,'multiline':False]['text':' if diff < 86400:','line_number':231,'multiline':False]['text':'     print('pull from s3 and return')','line_number':232,'multiline':False]['text':' else:','line_number':233,'multiline':False]['text':'     print('clone him and reprocess')','line_number':234,'multiline':False]['text':' with open('/home/bboyter/Projects/scc-lambda/tmp.json', encoding='utf-8') as f:','line_number':255,'multiline':False]['text':'     content = f.read()','line_number':256,'multiline':False]['text':' j = json.loads(content)','line_number':258,'multiline':False]['text':' print('lines: ' + format_count(sum([x['Lines'] for x in j])))','line_number':259,'multiline':False]['text':' print('code: ' + format_count(sum([x['Code'] for x in j])))','line_number':260,'multiline':False]['text':' print('comment: ' + format_count(sum([x['Comment'] for x in j])))','line_number':261,'multiline':False]['text':' print('blank: ' + format_count(sum([x['Blank'] for x in j])))','line_number':262,'multiline':False]['text':' print('complexity: ' + format_count(sum([x['Complexity'] for x in j])))','line_number':263,'multiline':False]['text':' s3 = boto3.resource('s3')','line_number':267,'multiline':False]['text':' o = s3.Object('sloccloccode','github.boyter.really-cheap-chatbot.json')','line_number':268,'multiline':False]['text':' print(o.last_modified)','line_number':269,'multiline':False]['text':' o.download_file('/tmp/github.boyter.really-cheap-chatbot.json')','line_number':270,'multiline':False]