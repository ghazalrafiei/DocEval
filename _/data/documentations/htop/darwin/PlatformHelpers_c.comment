['text':'
htop - darwin/PlatformHelpers.c
(C) 2018 Pierre Malhaire, 2020-2021 htop dev team, 2021 Alexander Momchilov
Released under the GNU GPLv2+, see the COPYING file
in the source distribution for its full text.
','line_number':1,'multiline':True]['text':' just in case it fails someday','line_number':27,'multiline':False]['text':' Adapted from https://developer.apple.com/documentation/apple-silicon/about-the-rosetta-translation-environment','line_number':71,'multiline':False]['text':' Check if we can determine the timebase used on this system.','line_number':91,'multiline':False]['text':' If the API is unavailable assume we get our timebase in nanoseconds.','line_number':92,'multiline':False]['text':' WORKAROUND for `mach_timebase_info` giving incorrect values on M1 under Rosetta 2.
    *    rdar://FB9546856 https://openradar.appspot.com/radar?id=5055988478509056
    *
    *    We don't know exactly what feature/attribute of the M1 chip causes this mistake under Rosetta 2.
    *    Until we have more Apple ARM chips to compare against, the best we can do is special-case
    *    the "Apple M1" chip specifically when running under Rosetta 2.
    ','line_number':98,'multiline':True]['text':' Kernel version 20.0.0 is macOS 11.0 (Big Sur)','line_number':111,'multiline':False]['text':' In this case `mach_timebase_info` provides the wrong value, so we hard-code the correct factor,','line_number':115,'multiline':False]['text':' as determined from `mach_timebase_info` when the process running natively.','line_number':116,'multiline':False]['text':' No workarounds needed, use the OS-provided value.','line_number':119,'multiline':False]