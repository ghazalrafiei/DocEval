['text':'
htop - Macros.h
(C) 2020-2023 htop dev team
Released under the GNU GPLv2+, see the COPYING file
in the source distribution for its full text.
','line_number':3,'multiline':True]['text':' IWYU pragma: keep','line_number':10,'multiline':False]['text':' defined by GCC and Clang','line_number':42,'multiline':False]['text':' __GNUC__ ','line_number':49,'multiline':True]['text':' __GNUC__ ','line_number':56,'multiline':True]['text':' HAVE_ATTR_NONNULL ','line_number':68,'multiline':True]['text':' HAVE_ATTR_ALLOC_SIZE ','line_number':80,'multiline':True]['text':' HAVE_ATTR_ACCESS ','line_number':92,'multiline':True]['text':' ignore casts discarding const specifier, e.g.','line_number':103,'multiline':False]['text':'     const char []     ->  char * / void *','line_number':104,'multiline':False]['text':'     const char *[2]'  ->  char *const *','line_number':105,'multiline':False]['text':' Cheaper function for checking NaNs. Unlike the standard isnan(), this may
   throw an FP exception on a "signaling" NaN.
   (ISO/IEC TS 18661-1 and the C23 standard stated that isnan() throws no
   exceptions even with a "signaling" NaN) ','line_number':119,'multiline':True]['text':' Checks if x is nonnegative. Returns false if x is NaN. ','line_number':127,'multiline':True]['text':' Checks if x is positive. Returns false if x is NaN. ','line_number':132,'multiline':True]['text':' This subtraction is used by Linux / NetBSD / OpenBSD for calculation of CPU usage items. ','line_number':137,'multiline':True]