['text':'
htop - Vector.c
(C) 2004-2011 Hisham H. Muhammad
Released under the GNU GPLv2+, see the COPYING file
in the source distribution for its full text.
','line_number':1,'multiline':True]['text':' NDEBUG ','line_number':90,'multiline':True]['text':'static int comparisons = 0;','line_number':107,'multiline':False]['text':'comparisons++;','line_number':122,'multiline':False]['text':' If I were to use only one sorting algorithm for both cases, it would probably be this one:','line_number':142,'multiline':False]['text':'

static void combSort(Object** array, int left, int right, Object_Compare compare) {
   int gap = right - left;
   bool swapped = true;
   while ((gap > 1) || swapped) {
      if (gap > 1) {
         gap = (int)((double)gap / 1.247330950103979);
      }
      swapped = false;
      for (int i = left; gap + i <= right; i++) {
         comparisons++;
         if (compare(array[i], array[i+gap]) > 0) {
            swap(array, i, i+gap);
            swapped = true;
         }
      }
   }
}

','line_number':143,'multiline':True]['text':'comparisons++;','line_number':170,'multiline':False]['text':'assert(this->array[this->items] == NULL);','line_number':217,'multiline':False]['text':' one deletion: use memmove, which should be faster','line_number':283,'multiline':False]['text':' multiple deletions','line_number':288,'multiline':False]['text':' idx is now at the end of the vector and on the first index which should be set to NULL','line_number':294,'multiline':False]['text':'

static void Vector_merge(Vector* this, Vector* v2) {
   int i;
   assert(Vector_isConsistent(this));

   for (i = 0; i < v2->items; i++)
      Vector_add(this, v2->array[i]);
   v2->items = 0;
   Vector_delete(v2);
   assert(Vector_isConsistent(this));
}

','line_number':350,'multiline':True]