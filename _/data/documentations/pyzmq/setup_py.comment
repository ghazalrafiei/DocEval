['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':3,'multiline':False]['text':'  Copyright (C) PyZMQ Developers','line_number':4,'multiline':False]['text':'  Distributed under the terms of the Modified BSD License.','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'  The `configure` subcommand is copied and adapted from h5py','line_number':7,'multiline':False]['text':'  h5py source used under the New BSD license','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'  h5py: <http://code.google.com/p/h5py/>','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':'  The code to bundle libzmq as an Extension is from pyzmq-static','line_number':12,'multiline':False]['text':'  pyzmq-static source used under the New BSD license','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':'  pyzmq-static: <https://github.com/brandon-rhodes/pyzmq-static>','line_number':15,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':16,'multiline':False]['text':' local script imports:','line_number':43,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':69,'multiline':False]['text':' Flags','line_number':70,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':71,'multiline':False]['text':' name of the libzmq library - can be changed by --libzmq <name>','line_number':74,'multiline':False]['text':' reference points for zmq compatibility','line_number':80,'multiline':False]['text':' set dylib ext:','line_number':87,'multiline':False]['text':' allow `--zmq=foo` to be passed at any point,','line_number':95,'multiline':False]['text':' but always assign it to configure','line_number':96,'multiline':False]['text':' track index of configure and fetch_libzmq','line_number':101,'multiline':False]['text':' distutils doesn't support $CXXFLAGS','line_number':133,'multiline':False]['text':' get_config_var is broken on some old versions of pypy, add a fallback','line_number':135,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':140,'multiline':False]['text':' Configuration (adapted from h5py: https://www.h5py.org/)','line_number':141,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':142,'multiline':False]['text':' --- compiler settings -------------------------------------------------','line_number':144,'multiline':False]['text':' add pthread on freebsd','line_number':154,'multiline':False]['text':' is this necessary?','line_number':155,'multiline':False]['text':' link against libzmq in build dir:','line_number':159,'multiline':False]['text':' bpo-39825: EXT_SUFFIX is wrong from sysconfig prior to 3.9.2 / 3.8.7','line_number':161,'multiline':False]['text':' this would arguably be better with --variable=libdir /','line_number':183,'multiline':False]['text':' --variable=includedir, but would require multiple calls','line_number':184,'multiline':False]['text':' add prefix itself as well, for e.g. libzmq Windows releases','line_number':237,'multiline':False]['text':' add pthread on freebsd','line_number':262,'multiline':False]['text':' If prefix is not explicitly set, pull it from pkg-config by default.','line_number':283,'multiline':False]['text':' this is probably applicable across platforms, but i don't have','line_number':284,'multiline':False]['text':' sufficient test environments to confirm','line_number':285,'multiline':False]['text':' we can get all the zmq-specific values from pkgconfg','line_number':288,'multiline':False]['text':' allow macports default','line_number':295,'multiline':False]['text':' find libzmq installed in virtualenv','line_number':299,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':315,'multiline':False]['text':' Extra commands','line_number':316,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':317,'multiline':False]['text':' build_base from build','line_number':344,'multiline':False]['text':' ensure vcredist is on PATH in MSVC toolchain','line_number':360,'multiline':False]['text':' need a dummy extension for run to set up a compiler','line_number':363,'multiline':False]['text':' write to zmq.utils.[name].json','line_number':369,'multiline':False]['text':' also write to build_lib, because we might be run after copying to','line_number':371,'multiline':False]['text':' build_lib has already happened.','line_number':372,'multiline':False]['text':' don't link against anything when checking for sys/un.h','line_number':387,'multiline':False]['text':' set target minimum Windows version','line_number':413,'multiline':False]['text':' include internal directories','line_number':431,'multiline':False]['text':' Explicitly link dependencies, not necessary if zmq is dynamic','line_number':436,'multiline':False]['text':' build test program','line_number':470,'multiline':False]['text':' now check the libzmq version','line_number':473,'multiline':False]['text':' fetch libzmq.dll into local dir','line_number':520,'multiline':False]['text':' I've already been run','line_number':532,'multiline':False]['text':' fetch sources for libzmq extension:','line_number':538,'multiline':False]['text':' exclude draft ws transport files','line_number':559,'multiline':False]['text':' only compile wepoll on windows...','line_number':564,'multiline':False]['text':' >= 4.2 and <= 4.3.4','line_number':582,'multiline':False]['text':' construct the Extensions:','line_number':585,'multiline':False]['text':' register the extension:','line_number':592,'multiline':False]['text':' doing this here means we must be run','line_number':593,'multiline':False]['text':' before finalize_options in build_ext','line_number':594,'multiline':False]['text':' use tweetnacl to provide CURVE support','line_number':598,'multiline':False]['text':' set draft flag','line_number':605,'multiline':False]['text':' select polling subsystem based on platform','line_number':609,'multiline':False]['text':' this may not be sufficiently precise','line_number':623,'multiline':False]['text':' include defines from zeromq msvc project:','line_number':629,'multiline':False]['text':' When compiling the C++ code inside of libzmq itself, we want to','line_number':634,'multiline':False]['text':' avoid "warning C4530: C++ exception handler used, but unwind','line_number':635,'multiline':False]['text':' semantics are not enabled. Specify /EHsc".','line_number':636,'multiline':False]['text':' And things like sockets come from libraries that must be named.','line_number':642,'multiline':False]['text':' check if we need to link against Realtime Extensions library','line_number':648,'multiline':False]['text':' copy the header files to the source tree.','line_number':658,'multiline':False]['text':' update other extensions, with bundled settings','line_number':671,'multiline':False]['text':' super().run() is what sets up self.compiler','line_number':749,'multiline':False]['text':' When cross-compiling and zmq is given explicitly, we can't testbuild','line_number':760,'multiline':False]['text':' (as we can't testrun the binary), we assume things are alright.','line_number':761,'multiline':False]['text':' There is no available default on Windows, so start with fallback unless','line_number':768,'multiline':False]['text':' zmq was given explicitly, or libzmq extension was explicitly prohibited.','line_number':769,'multiline':False]['text':' first try with given config or defaults','line_number':779,'multiline':False]['text':' print the error as setuptools would if we let it raise:','line_number':785,'multiline':False]['text':' try fallback on /usr/local on *ix if no prefix is given','line_number':791,'multiline':False]['text':' print the error as setuptools would if we let it raise:','line_number':802,'multiline':False]['text':' if we get here the second run succeeded, so we need to update compiler','line_number':805,'multiline':False]['text':' settings for the extensions with /usr/local prefix','line_number':806,'multiline':False]['text':' finally, fallback on bundled','line_number':810,'multiline':False]['text':' fetch sources for libzmq extension:','line_number':839,'multiline':False]['text':' crude check for inplace build:','line_number':883,'multiline':False]['text':' now that we have the git revision, we can apply it to version.py','line_number':934,'multiline':False]['text':' remove generated cython files','line_number':990,'multiline':False]['text':' actually use CXX compiler','line_number':1057,'multiline':False]['text':' restore original state','line_number':1062,'multiline':False]['text':' no c++, nothing to do','line_number':1074,'multiline':False]['text':' this is normally done by super().finalize_options() but it','line_number':1126,'multiline':False]['text':' needs to be done *before* we call configure if cython,','line_number':1127,'multiline':False]['text':' numpy and pythran are all installed; and we can't call it','line_number':1128,'multiline':False]['text':' after finalize_options() because that breaks pypy builds','line_number':1129,'multiline':False]['text':' on Windows; logic copied from distutils/command/build_ext.py','line_number':1130,'multiline':False]['text':' https://github.com/zeromq/pyzmq/pull/1872','line_number':1131,'multiline':False]['text':' check version, to prevent confusing undefined constant errors','line_number':1138,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':1174,'multiline':False]['text':' Extensions','line_number':1175,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':1176,'multiline':False]['text':' require cython 3','line_number':1194,'multiline':False]['text':' this is normally done by super().finalize_options() but it','line_number':1268,'multiline':False]['text':' needs to be done *before* we call configure if cython,','line_number':1269,'multiline':False]['text':' numpy and pythran are all installed; and we can't call it','line_number':1270,'multiline':False]['text':' after finalize_options() because that breaks pypy builds','line_number':1271,'multiline':False]['text':' on Windows; logic copied from distutils/command/build_ext.py','line_number':1272,'multiline':False]['text':' https://github.com/zeromq/pyzmq/pull/1872','line_number':1273,'multiline':False]['text':' set binding so that compiled methods can be inspected','line_number':1299,'multiline':False]['text':' set language-level to 3str, requires Cython 0.29','line_number':1300,'multiline':False]['text':' not a package','line_number':1332,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':1338,'multiline':False]['text':' Main setup','line_number':1339,'multiline':False]['text':' -----------------------------------------------------------------------------','line_number':1340,'multiline':False]