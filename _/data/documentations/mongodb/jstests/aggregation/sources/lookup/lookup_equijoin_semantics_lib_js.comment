['text':'*
 * Tests for $lookup with localField/foreignField syntax.
 *
 * This file only specifies the tests. The tests are run for specific join algorithms via the three
 * `lookup_equijoin_semantics_*.js" files.
 *
 * In the classic engine these are NLJ and INLJ, and in SBE we also have HJ.
 *
 * The choice between indexed vs non-indexed joins is done based on the presence of an index on the
 * 'foreignField'. We test with three different types of indexes: sorted ascending, sorted
 * descending and hashed.
 *
 * The choice between HJ and NLJ is made based on the value of 'allowDiskUse' setting (because all
 * data in these tests is small and that enables HJ as long as 'allowDiskUse' is 'true').
 ','line_number':1,'multiline':True]['text':' For NLJ and HJ do not create an index.','line_number':40,'multiline':False]['text':'*
 * Checks that the expected join algorithm has been used (to sanity check that the tests do provide
 * the intended coverage).
 ','line_number':43,'multiline':True]['text':' The $lookup stage has been lowered. Check that it's using the expected join strategy.','line_number':52,'multiline':False]['text':' In some suites, the tests cannot be lowered to SBE for reasons outside of our','line_number':55,'multiline':False]['text':' control (e.g. sharding or pipeline being wrapped into other stages). We test the fact','line_number':56,'multiline':False]['text':' that $lookup is lowered when we expect it to in lookup_pushdown.js.','line_number':57,'multiline':False]['text':'*
 * Executes $lookup with exactly one record in the foreign collection, so we don't need to check the
 * content of the "as" field but only that it's not empty for local records with ids in
 * 'idsExpectToMatch'.
 ','line_number':64,'multiline':True]['text':' The foreign record should never duplicate in the results (e.g. see SERVER-66119). That is,','line_number':92,'multiline':False]['text':' the "matched" field should either be an empty array or contain a single element.','line_number':93,'multiline':False]['text':' Build the array of ids for the results that have non-empty array in the "matched" field.','line_number':99,'multiline':False]['text':' Order of the elements within the arrays is not significant for 'assertArrayEq'.','line_number':106,'multiline':False]['text':'*
 * Executes $lookup with exactly one record in the local collection and checks that the "as" field
 * for it contains documents with ids from `idsExpectedToMatch`.
 ','line_number':114,'multiline':True]['text':' Extract matched foreign ids from the "matched" field.','line_number':143,'multiline':False]['text':' Order of the elements within the arrays is not significant for 'assertArrayEq'.','line_number':146,'multiline':False]['text':'*
 * Executes $lookup and expects it to fail with the specified 'expectedErrorCode`.
 ','line_number':154,'multiline':True]['text':'*
 * Tests.
 ','line_number':182,'multiline':True]['text':' Sanity-test that the join is configured correctly.','line_number':188,'multiline':False]['text':' Some test suites execute these tests in a way that prevents $lookup from being lowered','line_number':196,'multiline':False]['text':' into SBE (e.g. due to sharding, or wrapping the pipeline into $facet). We'll get coverage','line_number':197,'multiline':False]['text':' for $lookup in the classic engine from running these tests in classic build variant so no','line_number':198,'multiline':False]['text':' point running them multiple times.','line_number':199,'multiline':False]['text':' When lowered to SBE, "undefined" should only match "undefined".','line_number':268,'multiline':False]['text':' Due to legacy reasons, in the classic engine "undefined" either matches to null or','line_number':303,'multiline':False]['text':' triggers an error.','line_number':304,'multiline':False]['text':' If the left-hand side collection has a value of undefined for "localField", then the','line_number':314,'multiline':False]['text':' query will fail. This is a consequence of the fact that queries which explicitly','line_number':315,'multiline':False]['text':' compare to undefined, such as {$eq:undefined}, are banned. Arguably this behavior','line_number':316,'multiline':False]['text':' could be improved, but we are unlikely to change it given that the undefined BSON','line_number':317,'multiline':False]['text':' type has been deprecated for many years.','line_number':318,'multiline':False]['text':' NOTE: There is no shell equivalent for the following BSON types:','line_number':360,'multiline':False]['text':' - Code (13)','line_number':361,'multiline':False]['text':' - Symbol (14)','line_number':362,'multiline':False]['text':' - CodeWScope (15)','line_number':363,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that contains value "1".','line_number':420,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that does _not_ contain value "1".','line_number':430,'multiline':False]['text':' When matching a scalar, local and foreign collections are fully symmetric.','line_number':438,'multiline':False]['text':' For these docs "a.x" resolves to a (logical) set that contains value "1".','line_number':459,'multiline':False]['text':' For these docs "a.x" should resolve to a (logical) set that does _not_ contain value','line_number':469,'multiline':False]['text':' "1".','line_number':470,'multiline':False]['text':' When matching a scalar, local and foreign collections are fully symmetric.','line_number':479,'multiline':False]['text':' For these docs "a.b.c" resolves to a (logical) set that contains value "1" (and','line_number':500,'multiline':False]['text':' possibly other values)','line_number':501,'multiline':False]['text':' For these docs "a.b.c" should resolve to a (logical) set that does _not_ contain','line_number':529,'multiline':False]['text':' value "1" (but might contain other values).','line_number':530,'multiline':False]['text':' When matching a scalar, local and foreign collections are fully symmetric.','line_number':537,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that contains [1,2] array as a value.','line_number':562,'multiline':False]['text':' For these docs "a.x" contains [1,2], 1 and 2 values when in foreign, but in local','line_number':566,'multiline':False]['text':' the contained values are 1 and 2 (no array).','line_number':567,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that does _not_ contain [1,2] as a','line_number':570,'multiline':False]['text':' value in neither local nor foreign but might contain "1" and/or "2".','line_number':571,'multiline':False]['text':'match on [1, 2]: ','line_number':586,'multiline':True]['text':'match on 1: ','line_number':586,'multiline':True]['text':'match on 1: ','line_number':594,'multiline':True]['text':'match on [1, 2]: ','line_number':603,'multiline':True]['text':'match on [1, 2]: ','line_number':611,'multiline':True]['text':' For these docs "a.x" resolves to a (logical) set that contains [1,2] array as a','line_number':617,'multiline':False]['text':' value.','line_number':618,'multiline':False]['text':' For these docs "a.x" contains [1,2], 1 and 2 values when in foreign, but in local','line_number':624,'multiline':False]['text':' the contained values are 1 and 2 (no array).','line_number':625,'multiline':False]['text':' For these docs "a.x" resolves to a (logical) set that doesn't contain [1,2] as a','line_number':631,'multiline':False]['text':' value in neither local nor foreign but might contain "1" and/or "2".','line_number':632,'multiline':False]['text':'match on [1, 2]: ','line_number':648,'multiline':True]['text':'match on 1: ','line_number':648,'multiline':True]['text':'match on 1: ','line_number':656,'multiline':True]['text':'match on [1, 2]: ','line_number':665,'multiline':True]['text':'match on [1, 2]: ','line_number':673,'multiline':True]['text':' "a.x" does not exist.','line_number':679,'multiline':False]['text':' "a.x" exists.','line_number':694,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that contains empty array as a value.','line_number':768,'multiline':False]['text':' For these docs "a" resolves to a (logical) set that contains empty array as a value','line_number':773,'multiline':False]['text':' in foreign collection only.','line_number':774,'multiline':False]['text':' For these docs "a" key is either missing or contains null.','line_number':777,'multiline':False]['text':' "a" contains neither empty array nor null.','line_number':783,'multiline':False]['text':' For these docs "a.x" resolves to a (logical) set that contains empty array as a','line_number':861,'multiline':False]['text':' value.','line_number':862,'multiline':False]['text':' For these docs "a.x" resolves to a (logical) set that contains empty array as a value','line_number':870,'multiline':False]['text':' in foreign collection only.','line_number':871,'multiline':False]['text':' For these docs "a.x" key is either missing or contains null.','line_number':877,'multiline':False]['text':' "a.x" doesn't contain neither empty array nor null.','line_number':889,'multiline':False]['text':' For these docs "a.0.x" resolves to a (logical) set that contains value "1".','line_number':937,'multiline':False]['text':' For these docs "a.0.x" resolves to a (logical) set that does _not_ contain value "1".','line_number':942,'multiline':False]['text':' For these docs "a.0.x" resolves to a (logical) set that contains value "null".','line_number':970,'multiline':False]['text':' For these docs "a.0.x" resolves to a (logical) set that does _not_ contain value','line_number':978,'multiline':False]['text':' "null".','line_number':979,'multiline':False]['text':' SERVER-64221/SERVER-27442: matching to null isn't consistent.','line_number':992,'multiline':False]['text':'*
     * Executes $lookup with non existent foreign collection and checks that the "as" field for it
     * contains empty arrays.
     ','line_number':1007,'multiline':True]['text':' Local record should have no match.','line_number':1029,'multiline':False]