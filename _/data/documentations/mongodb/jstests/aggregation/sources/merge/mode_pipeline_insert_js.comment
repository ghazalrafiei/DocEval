['text':' Tests the behaviour of the $merge stage with whenMatched=[<pipeline>] and whenNotMatched=insert.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Cannot implicitly shard accessed collections because a collection can be implictly created and','line_number':3,'multiline':False]['text':' exists when none is expected.','line_number':4,'multiline':False]['text':' A helper function to create a pipeline with a $merge stage using a custom 'updatePipeline'','line_number':9,'multiline':False]['text':' for the whenMatched mode. If 'initialStages' array is specified, the $merge stage will be','line_number':10,'multiline':False]['text':' appended to this array and the result returned to the caller, otherwise an array with a','line_number':11,'multiline':False]['text':' single $merge stage is returned. An output collection for the $merge stage is specified','line_number':12,'multiline':False]['text':' in the 'target', and the $merge stage 'on' fields in the 'on' parameter. The 'letVars'','line_number':13,'multiline':False]['text':' parameter describes the 'let' argument of the $merge stage and holds variables that can be','line_number':14,'multiline':False]['text':' referenced in the pipeline.','line_number':15,'multiline':False]['text':' Test $merge inserts the original source document into an existing target collection if no','line_number':42,'multiline':False]['text':' matching document is found.','line_number':43,'multiline':False]['text':' Test $merge updates an existing document in the target collection by applying a','line_number':52,'multiline':False]['text':' pipeline-style update.','line_number':53,'multiline':False]['text':' Test $merge with various pipeline stages which are currently supported by the pipeline-style','line_number':63,'multiline':False]['text':' update.','line_number':64,'multiline':False]['text':' Test $addFields stage.','line_number':72,'multiline':False]['text':' Test $project stage.','line_number':79,'multiline':False]['text':' Test $replaceWith stage.','line_number':87,'multiline':False]['text':' Test $replaceRoot stage.','line_number':96,'multiline':False]['text':' Test $merge inserts a new document into the target collection if no matching document is','line_number':107,'multiline':False]['text':' found by applying a pipeline-style update with upsert=true and upsertSupplied=true.','line_number':108,'multiline':False]['text':' Test $merge doesn't modify the target collection if a document has been removed from the','line_number':119,'multiline':False]['text':' source collection.','line_number':120,'multiline':False]['text':' Test $merge fails if a unique index constraint in the target collection is violated.','line_number':136,'multiline':False]['text':' Skip this test if the collection sharded, because an implicitly created sharded','line_number':139,'multiline':False]['text':' key of {_id: 1} will not be covered by a unique index created in this test, which','line_number':140,'multiline':False]['text':' is not allowed.','line_number':141,'multiline':False]['text':' Test $merge fails if it cannot find an index to verify that the 'on' fields will be unique.','line_number':164,'multiline':False]['text':' The 'on' fields contains a single document field.','line_number':166,'multiline':False]['text':' The 'on' fields contains multiple document fields.','line_number':174,'multiline':False]['text':' Test $merge with an explicit 'on' field over a single or multiple document fields which','line_number':183,'multiline':False]['text':' differ from the _id field.','line_number':184,'multiline':False]['text':' Skip this test if the collection is sharded, because an implicitly created sharded','line_number':187,'multiline':False]['text':' key of {_id: 1} will not be covered by a unique index created in this test, which','line_number':188,'multiline':False]['text':' is not allowed.','line_number':189,'multiline':False]['text':' The 'on' fields contains a single document field.','line_number':193,'multiline':False]['text':' The 'on' fields contains multiple document fields.','line_number':212,'multiline':False]['text':' Test $merge with a dotted path in the 'on' field.','line_number':235,'multiline':False]['text':' Skip this test if the collection sharded, because an implicitly created sharded','line_number':238,'multiline':False]['text':' key of {_id: 1} will not be covered by a unique index created in this test, which','line_number':239,'multiline':False]['text':' is not allowed.','line_number':240,'multiline':False]['text':' Test $merge fails if the value of the 'on' field in a document is invalid, e.g. missing,','line_number':266,'multiline':False]['text':' null or an array.','line_number':267,'multiline':False]['text':' Skip this test if the collection sharded, because an implicitly created sharded','line_number':270,'multiline':False]['text':' key of {_id: 1} will not be covered by a unique index created in this test, which','line_number':271,'multiline':False]['text':' is not allowed.','line_number':272,'multiline':False]['text':' The 'on' field is missing.','line_number':288,'multiline':False]['text':' The 'on' field is null.','line_number':293,'multiline':False]['text':' The 'on' field is an array.','line_number':298,'multiline':False]['text':' Test $merge when the _id field is removed from the aggregate projection but is used in the','line_number':304,'multiline':False]['text':' $merge's 'on' field. When the _id is missing, the $merge stage will create a new ObjectId in','line_number':305,'multiline':False]['text':' its place before performing the insert or update.','line_number':306,'multiline':False]['text':' The _id is a single 'on' field (a default one).','line_number':314,'multiline':False]['text':' There is a matching document in the target with {_id: 1}, but since we cannot match','line_number':322,'multiline':False]['text':' it (no _id in projection), we insert the two documents from the source collection.','line_number':323,'multiline':False]['text':' The _id is part of the compound 'on' field.','line_number':334,'multiline':False]['text':' Test $merge preserves indexes and options of the existing target collection.','line_number':348,'multiline':False]['text':' Test that $merge implicitly creates a new database when the target collection's db doesn't exist.','line_number':365,'multiline':False]['text':' Implicit database creation is prohibited in a cluster.','line_number':385,'multiline':False]['text':' Force creation of the database and collection, then fall through the test below.','line_number':389,'multiline':False]['text':' Test that $merge can reference the default 'let' variable 'new' which holds the entire','line_number':401,'multiline':False]['text':' document from the source collection.','line_number':402,'multiline':False]['text':' Test that the default 'let' variable 'new' is always available even when the 'let' argument to','line_number':418,'multiline':False]['text':' the $merge stage is specified explicitly.','line_number':419,'multiline':False]['text':' Test that $merge can accept an empty object holding no variables and the default 'new'','line_number':435,'multiline':False]['text':' variable is still available.','line_number':436,'multiline':False]['text':' Can use an empty object.','line_number':443,'multiline':False]['text':' No default variable 'new' is available.','line_number':452,'multiline':False]['text':' Test that $merge will reject a 'let' specification which attempts to redefine 'new'.','line_number':462,'multiline':False]['text':' Cannot override 'new' with an arbitrary value.','line_number':469,'multiline':False]['text':' If the user's 'let' explicitly sets 'new' to "$$ROOT", we allow it.','line_number':477,'multiline':False]['text':' Test that $merge can accept a null value as the 'let' argument and the default variable 'new'','line_number':487,'multiline':False]['text':' can be used.','line_number':488,'multiline':False]['text':' Note that this is not a desirable behaviour but rather a limitation in the IDL parser which','line_number':489,'multiline':False]['text':' cannot differentiate between an optional field specified explicitly as 'null', or not','line_number':490,'multiline':False]['text':' specified at all. In both cases it will treat the field like it wasn't specified. So, this','line_number':491,'multiline':False]['text':' test ensures that we're aware of this limitation. Once the limitation is addressed in','line_number':492,'multiline':False]['text':' SERVER-41272, this test should be updated accordingly.','line_number':493,'multiline':False]['text':' Can use a null 'let' argument.','line_number':500,'multiline':False]['text':' Can use the default 'new' variable.','line_number':509,'multiline':False]['text':' Test that constant values can be specified in the 'let' argument and referenced in the update','line_number':519,'multiline':False]['text':' pipeline.','line_number':520,'multiline':False]['text':' Non-array constants.','line_number':522,'multiline':False]['text':' Constant array.','line_number':538,'multiline':False]['text':' Test that variables referencing the fields in the source document can be specified in the','line_number':551,'multiline':False]['text':' 'let' argument and referenced in the update pipeline.','line_number':552,'multiline':False]['text':' Non-array fields.','line_number':554,'multiline':False]['text':' Array field with expressions in the pipeline.','line_number':568,'multiline':False]['text':' Array field with expressions in the 'let' argument.','line_number':584,'multiline':False]['text':' Test that variables using the dotted path can be specified in the 'let' argument and','line_number':599,'multiline':False]['text':' referenced in the update pipeline.','line_number':600,'multiline':False]['text':' Test that 'let' variables are referred to the computed document in the aggregation pipeline,','line_number':618,'multiline':False]['text':' not the original document in the source collection.','line_number':619,'multiline':False]['text':' Test the default 'new' variable.','line_number':621,'multiline':False]['text':' In the $group stage the total field 'a' uses the same name as in the source collection','line_number':628,'multiline':False]['text':' intentionally, to make sure that even when a referenced field is present in the source','line_number':629,'multiline':False]['text':' collection under the same name, the actual value for the variable will be picked up from','line_number':630,'multiline':False]['text':' the computed document.','line_number':631,'multiline':False]['text':' Test custom 'let' variables.','line_number':642,'multiline':False]