['text':' test short-circuiting of $and and $or in','line_number':1,'multiline':False]['text':' $project stages to a $const boolean','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Cannot implicitly shard accessed collections because the explain output from a mongod when run','line_number':4,'multiline':False]['text':' against a sharded collection is wrapped in a "shards" object with keys for each shard.','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' This test makes assumptions about how the explain output will be formatted, so cannot be','line_number':7,'multiline':False]['text':' transformed to be put inside a $facet stage or when pipeline optimization is disabled.','line_number':8,'multiline':False]['text':' @tags: [','line_number':9,'multiline':False]['text':'   assumes_unsharded_collection,','line_number':10,'multiline':False]['text':'   do_not_wrap_aggregations_in_facets,','line_number':11,'multiline':False]['text':'   requires_pipeline_optimization,','line_number':12,'multiline':False]['text':' ]','line_number':13,'multiline':False]['text':' This inhibit optimization prevents the expression being pushed down into the .find()','line_number':22,'multiline':False]['text':' layer, to make assertions simpler. But it doesn't prevent the $project stage itself','line_number':23,'multiline':False]['text':' from being optimized.','line_number':24,'multiline':False]['text':' 'optimized' may be simpler than 'expression', but we assert it did not optimize to a','line_number':42,'multiline':False]['text':' constant.','line_number':43,'multiline':False]['text':' short-circuiting for $and','line_number':47,'multiline':False]['text':' short-circuiting for $or','line_number':56,'multiline':False]['text':' examples that should not short-circuit','line_number':65,'multiline':False]