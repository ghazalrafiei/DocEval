['text':'*
 * Basic tests for the $top/$bottom/$topN/$bottomN accumulators.
 ','line_number':1,'multiline':True]['text':' This is max int64 which is supported as N.','line_number':10,'multiline':False]['text':' Adding 1 puts it over the edge.','line_number':11,'multiline':False]['text':' Makes a string for a unique sales associate name that looks like 'Jim the 4 from CA'.','line_number':13,'multiline':False]['text':' Basic correctness tests.','line_number':17,'multiline':False]['text':' Record the lowest/highest 'n' values.','line_number':36,'multiline':False]['text':' The lowest values will be present in the output for topN ascending and bottomN descending.','line_number':45,'multiline':False]['text':' The highest values will be present in the output for bottomN ascending and topN descending.','line_number':49,'multiline':False]['text':' Helper to construct a valid $topN/$bottomN specification.','line_number':56,'multiline':False]['text':'*
 * Helper that verifies that 'op' and 'sortSpec' produce 'expectedResults'.
 ','line_number':61,'multiline':True]['text':' Basic correctness test for $top/$topN/$bottom/$bottomN used in $bucketAuto. Though','line_number':78,'multiline':False]['text':' $bucketAuto uses accumulators in the same way that $group does, the test below verifies that','line_number':79,'multiline':False]['text':' everything works properly with serialization and reporting results. Note that the $project','line_number':80,'multiline':False]['text':' allows us to compare the $bucketAuto results to the expected $group results (because there','line_number':81,'multiline':False]['text':' are more buckets than groups, it will always be the case that the min value of each bucket','line_number':82,'multiline':False]['text':' corresponds to the group key).','line_number':83,'multiline':False]['text':' Using a computed projection will put the fields out of order. As such, we re-order them','line_number':99,'multiline':False]['text':' below.','line_number':100,'multiline':False]['text':' Note that the output documents are sorted by '_id' so that we can compare actual groups against','line_number':108,'multiline':False]['text':' expected groups (we cannot perform unordered comparison because order matters for $topN/bottomN).','line_number':109,'multiline':False]['text':' Verify that we can compute multiple topN/bottomN groupings in the same $group.','line_number':115,'multiline':False]['text':' Verify that we can dynamically compute 'n' based on the group key for $group.','line_number':150,'multiline':False]['text':' Verify that the 'CA' group has 10 results, while all others have only 4.','line_number':164,'multiline':False]['text':' When output evaluates to missing for the single version, it should be promoted to null like in','line_number':179,'multiline':False]['text':' $first.','line_number':180,'multiline':False]['text':' Error cases.','line_number':192,'multiline':False]['text':' Cannot reference the group key in $bottomN when using $bucketAuto.','line_number':194,'multiline':False]['text':' Verify that 'n' cannot be greater than the largest signed 64 bit int.','line_number':210,'multiline':False]['text':' Verify that $topN/$bottomN respects the specified sort order.','line_number':224,'multiline':False]['text':' Verify that 'nVal' is greater or equal to the number of results returned.','line_number':274,'multiline':False]['text':' Note that we upconvert to NumberDecimal to account for 'largestInt' being a','line_number':275,'multiline':False]['text':' NumberDecimal.','line_number':276,'multiline':False]['text':' Reject non-integral/negative values of n.','line_number':302,'multiline':False]['text':' Missing arguments.','line_number':307,'multiline':False]['text':' Invalid sort spec.','line_number':312,'multiline':False]['text':' Extra field.','line_number':317,'multiline':False]['text':' Rejects n for non-n version.','line_number':319,'multiline':False]['text':' Sort on embedded field.','line_number':322,'multiline':False]['text':' Compound Sorting.','line_number':331,'multiline':False]['text':' $meta sort specification.','line_number':361,'multiline':False]['text':' Note that $topN and $bottomN will return the same results because $meta sort always returns the','line_number':390,'multiline':False]['text':' most relevant results first.','line_number':391,'multiline':False]['text':' Test constant output and sortBy.','line_number':395,'multiline':False]