['text':'*
 * Create a collection of tickers and prices.
 ','line_number':4,'multiline':True]['text':' Add a few combinations that test 3+ bounds.','line_number':52,'multiline':False]['text':'*
 * Runs a pipeline containing a $group that computes the window-function equivalent using the
 * given partition key, accumulator, index in the current partition, and bounds.
 *
 * The bounds are an inclusive range [lower, upper], specified as values relative to the current
 * offset in the partition. They can be numeric, "current", or "unbounded".
 *
 * The skip/limit values are calculated from the given bounds and the current index.
 *
 * 'accumSpec' is the specification of accumulator being tested and is an object of the form
 * {accumulatorName: <accumulator arguments>}.
 *
 * 'defaultValue' is used in cases when the skip/limit combination result in $group not getting any
 * documents. The most likely scenario is that the window has gone off the side of the partition.
 *
 * Note that this function assumes that the data in 'coll' has been seeded with the documents from
 * the seedWithTickerData() method above.
 ','line_number':59,'multiline':True]['text':' Only attach a $limit if there's a numeric upper bound (or "current"), since "unbounded"','line_number':91,'multiline':False]['text':' implies an infinite limit.','line_number':92,'multiline':False]['text':' If the window is completely off the edge of the right side of the partition, return null.','line_number':98,'multiline':False]['text':'*
 * Helper to calculate the correct skip based on the lowerBound given.
 ','line_number':105,'multiline':True]['text':'*
 * Helper to calculate the correct limit based on the bounds given.
 ','line_number':123,'multiline':True]['text':' Keep unbounded as is to not add a limit stage at all later.','line_number':137,'multiline':False]['text':' If we don't have a full window in this partition yet.','line_number':139,'multiline':False]['text':' Either take all documents we've seen if our right bound is also negative, or only','line_number':141,'multiline':False]['text':' do look ahead.','line_number':142,'multiline':False]['text':' Only base upper limit on look ahead.','line_number':150,'multiline':False]['text':' Sliding window uses both bounds for limit.','line_number':155,'multiline':False]['text':' On DEBUG builds, the computed $group may be slightly different due to precision','line_number':164,'multiline':False]['text':' loss when spilling to disk.','line_number':165,'multiline':False]['text':' TODO SERVER-42616: Enable the exact check for $stdDevPop/Samp.','line_number':166,'multiline':False]['text':' 10 decimal places ','line_number':171,'multiline':True]['text':' Order doesn't matter for $addToSet.','line_number':173,'multiline':False]['text':' No test should be using more than 1GB of memory. This is mostly a sanity check that','line_number':197,'multiline':False]['text':' integer underflow doesn't occur.','line_number':198,'multiline':False]['text':'*
 * Runs the given 'accum' as both a window function and its equivalent accumulator in $group across
 * various combinations of partitioning and window bounds. Asserts that the results are consistent.
 *
 * Note that this function assumes that the documents in 'coll' were initialized using the
 * seedWithTickerData() method above.
 ','line_number':205,'multiline':True]['text':' Run the same pipeline with explain verbosity "executionStats" and verify that the','line_number':256,'multiline':False]['text':' reported metrics are sensible.','line_number':257,'multiline':False]['text':' To get additional coverage, specifically regarding the expiration policy, test','line_number':264,'multiline':False]['text':' combinations of various window types in the same $setWindowFields stage. This is more of','line_number':265,'multiline':False]['text':' a fuzz test so no need to check results.','line_number':266,'multiline':False]