['text':' Test change streams related shell helpers and options passed to them. Note that, while we only','line_number':1,'multiline':False]['text':' call the DBCollection.watch helper in this file, it will be redirected to the DB.watch or','line_number':2,'multiline':False]['text':' Mongo.watch equivalents in the whole_db and whole_cluster passthroughs.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' This test expects each change stream result to have an operationTime based on the clusterTime in','line_number':5,'multiline':False]['text':' the oplog entry. When operations get bundled into a transaction, their operationTime is instead','line_number':6,'multiline':False]['text':' based on the commit oplog entry, which would cause this test to fail.','line_number':7,'multiline':False]['text':' @tags: [change_stream_does_not_expect_txns]','line_number':8,'multiline':False]['text':' Write the first document into the collection. We will save the resume token from this change.','line_number':56,'multiline':False]['text':' Test that each of the change stream cursors picks up the change.','line_number':60,'multiline':False]['text':' Remember the _id of the first op to resume the stream.','line_number':71,'multiline':False]['text':' Remove the fields we cannot predict, then test that the change is as expected.','line_number':73,'multiline':False]['text':' Store the cluster time of the insert as the timestamp to start from.','line_number':82,'multiline':False]['text':' We expect the clusterTime returned by the change stream event and the operationTime returned','line_number':92,'multiline':False]['text':' by the insert to be the same.','line_number':93,'multiline':False]['text':' Only test mongod because mongos uses batch size 0 for aggregate commands internally to','line_number':125,'multiline':False]['text':' establish cursors quickly. GetMore on mongos doesn't respect batch size due to SERVER-31992.','line_number':126,'multiline':False]['text':' Increase a field by 5 times and verify the batch size is respected.','line_number':128,'multiline':False]['text':' Only watch the "update" changes of the specific doc since the beginning.','line_number':133,'multiline':False]['text':' Check the first batch.','line_number':138,'multiline':False]['text':' Consume the first batch.','line_number':140,'multiline':False]['text':' Confirm that the batch is empty.','line_number':145,'multiline':False]['text':' Check the batch returned by getMore.','line_number':148,'multiline':False]['text':' There are more changes coming, just not in the batch.','line_number':155,'multiline':False]['text':' Dropping the collection should trigger a drop notification.','line_number':182,'multiline':False]['text':' For single collection change streams, the drop should invalidate the stream.','line_number':191,'multiline':False]['text':' We should see the new insert after starting over. However, in sharded cluster','line_number':200,'multiline':False]['text':' passthroughs we may see more drop and invalidate notifications before we see the insert.','line_number':201,'multiline':False]['text':' Start again!','line_number':209,'multiline':False]['text':' THIS is the change we wanted.','line_number':217,'multiline':False]