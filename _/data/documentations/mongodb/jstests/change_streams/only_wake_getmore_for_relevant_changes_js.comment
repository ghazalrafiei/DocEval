['text':' Test that an insert to an unrelated collection will not cause a $changeStream getMore to','line_number':1,'multiline':False]['text':' @tags: [','line_number':2,'multiline':False]['text':'   uses_multiple_connections,','line_number':3,'multiline':False]['text':' ]','line_number':4,'multiline':False]['text':'*
 * Uses a parallel shell to execute the javascript function 'event' at the same time as an
 * awaitData getMore on the cursor with id 'awaitDataCursorId'. Returns the result of the
 * getMore, and the time it took to complete.
 *
 * Note that 'event' will not have access to any local variables, since it will be executed in a
 * different scope.
 ','line_number':11,'multiline':True]['text':' In some extreme cases, the parallel shell can take longer to start up than it takes for','line_number':21,'multiline':False]['text':' the getMore to run. To prevent this from happening, the main thread waits for an insert','line_number':22,'multiline':False]['text':' into "sentinel", to signal that the parallel shell has started and is waiting for the','line_number':23,'multiline':False]['text':' getMore to appear in currentOp.','line_number':24,'multiline':False]['text':' Signal that the parallel shell has started.','line_number':32,'multiline':False]['text':' Wait for the getMore to appear in currentOp.','line_number':35,'multiline':False]['text':' Wait for the shell to start.','line_number':47,'multiline':False]['text':' Run and time the getMore.','line_number':50,'multiline':False]['text':'*
 * Asserts that a getMore of the cursor given by 'awaitDataCursorId' will not return after
 * 'event' is called, and will instead keep waiting until its maxTimeMS is expired.
 *
 * @param [Collection] collection - the collection to use in the getMore command.
 * @param [NumberLong] awaitDataCursorId - the id of the cursor to use in the getMore command.
 * @param [Function] event - the event that should be run during the getMore.
 ','line_number':58,'multiline':True]['text':' Should have waited for at least 'maxTimeMS'.','line_number':74,'multiline':False]['text':' Cursor should be valid with no data.','line_number':77,'multiline':False]['text':'*
 * Asserts that a getMore of the cursor given by 'awaitDataCursorId' will return soon after
 * 'event' is called, and returns the response from the getMore command.
 *
 * @param [Collection] collection - the collection to use in the getMore command.
 * @param [NumberLong] awaitDataCursorId - the id of the cursor to use in the getMore command.
 * @param [Function] event - the event that should be run during the getMore.
 ','line_number':82,'multiline':True]['text':' Run the original event, then (while still in the parallel shell) assert that the getMore','line_number':91,'multiline':False]['text':' finishes soon after. This will be run in a parallel shell, which will not have a variable','line_number':92,'multiline':False]['text':' 'event' in scope, so we'll have to stringify it here.','line_number':93,'multiline':False]['text':' Refresh all collections which will be required in the course of this test.','line_number':109,'multiline':False]['text':' Start a change stream cursor.','line_number':113,'multiline':False]['text':' Project out the resume token, since that's subject to change unpredictably.','line_number':117,'multiline':False]['text':' Test that an insert during a getMore will wake up the cursor and immediately return with the','line_number':126,'multiline':False]['text':' new result.','line_number':127,'multiline':False]['text':' Test that an insert to an unrelated collection will not cause the change stream to wake up','line_number':142,'multiline':False]['text':' and return an empty batch before reaching the maxTimeMS.','line_number':143,'multiline':False]['text':' Test that changes ignored by filtering in later stages of the pipeline will not cause the','line_number':153,'multiline':False]['text':' cursor to return before the getMore has exceeded maxTimeMS.','line_number':154,'multiline':False]['text':' This pipeline filters changes to only invalidates, so regular inserts should not cause','line_number':158,'multiline':False]['text':' the awaitData to end early.','line_number':159,'multiline':False]