['text':' Tests that each change in the stream will include the cluster time at which it happened.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' This test expects each change stream result to have an operationTime based on the clusterTime in','line_number':3,'multiline':False]['text':' the oplog entry. When operations get bundled into a transaction, their operationTime is instead','line_number':4,'multiline':False]['text':' based on the commit oplog entry, which would cause this test to fail.','line_number':5,'multiline':False]['text':' @tags: [change_stream_does_not_expect_txns]','line_number':6,'multiline':False]['text':' Drop and recreate the collections to be used in this set of tests.','line_number':10,'multiline':False]['text':' Make sure each operation has a reasonable cluster time. Note that we should not assert','line_number':29,'multiline':False]['text':' that the cluster times are equal, because the cluster time returned from the command is','line_number':30,'multiline':False]['text':' generated by a second, independent read of the logical clock than the one used to','line_number':31,'multiline':False]['text':' generate the oplog entry. It's possible that the system did something to advance the time','line_number':32,'multiline':False]['text':' between the two reads of the clock.','line_number':33,'multiline':False]