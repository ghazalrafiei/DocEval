['text':'*
 * Tests that a change stream will correctly unwind applyOps entries generated by a transaction.
 * @tags: [
 *   uses_transactions,
 *   requires_fcv_61, # Pre-6.1 builds do not emit change stream events for applyOps.
 *   requires_majority_read_concern,
 *   requires_snapshot_read,
 * ]
 ','line_number':1,'multiline':True]['text':' Insert a document that gets deleted as part of the transaction.','line_number':24,'multiline':False]['text':' Record the clusterTime of the insert, and increment it to give the test start time.','line_number':31,'multiline':False]['text':' A collection drop only invalidates single-collection change streams.','line_number':40,'multiline':False]['text':' Create these variables before starting the transaction. In sharded passthroughs, accessing','line_number':53,'multiline':False]['text':' db[collname] may attempt to implicitly shard the collection, which is not allowed in a txn.','line_number':54,'multiline':False]['text':' Two inserts on the main test collection.','line_number':61,'multiline':False]['text':' One insert on a collection that we're not watching. This should be skipped by the','line_number':65,'multiline':False]['text':' single-collection changestream.','line_number':66,'multiline':False]['text':' One insert on a collection in a different database. This should be skipped by the single','line_number':69,'multiline':False]['text':' collection and single-db changestreams.','line_number':70,'multiline':False]['text':' Do applyOps on the collection that we care about. This is an "external" applyOps, though (not run','line_number':78,'multiline':False]['text':' as part of a transaction). This checks that although this applyOps doesn't have an 'lsid' and','line_number':79,'multiline':False]['text':' 'txnNumber', the field gets unwound and a change stream event is emitted. Skip if running in a','line_number':80,'multiline':False]['text':' sharded passthrough, since the applyOps command does not exist on mongoS.','line_number':81,'multiline':False]['text':' Drop the collection. This will trigger an "invalidate" event at the end of the stream.','line_number':90,'multiline':False]['text':' Define the set of changes expected for the single-collection case per the operations above.','line_number':93,'multiline':False]['text':' If we are running in a sharded passthrough, then this may have been a multi-shard transaction.','line_number':141,'multiline':False]['text':' Change streams will interleave the txn events from across the shards in (clusterTime, txnOpIndex)','line_number':142,'multiline':False]['text':' order, and so may not reflect the ordering of writes in the test. We thus verify that exactly the','line_number':143,'multiline':False]['text':' expected set of events are observed, but we relax the ordering requirements.','line_number':144,'multiline':False]['text':'','line_number':152,'multiline':False]['text':' Test behavior of single-collection change streams with apply ops.','line_number':153,'multiline':False]['text':'','line_number':154,'multiline':False]['text':' Verify that the stream returns the expected sequence of changes.','line_number':156,'multiline':False]['text':' Single collection change stream should also be invalidated by the drop.','line_number':159,'multiline':False]['text':'','line_number':166,'multiline':False]['text':' Test behavior of whole-db change streams with apply ops.','line_number':167,'multiline':False]['text':'','line_number':168,'multiline':False]['text':' In a sharded cluster, whole-db-or-cluster streams will see a collection drop from each shard.','line_number':170,'multiline':False]['text':' Add an entry for the insert on db.otherColl into expectedChanges.','line_number':175,'multiline':False]['text':' Verify that a whole-db stream returns the expected sequence of changes, including the insert','line_number':185,'multiline':False]['text':' on the other collection but NOT the changes on the other DB or the manual applyOps.','line_number':186,'multiline':False]['text':'','line_number':193,'multiline':False]['text':' Test behavior of whole-cluster change streams with apply ops.','line_number':194,'multiline':False]['text':'','line_number':195,'multiline':False]['text':' Add an entry for the insert on otherDb.otherDbColl into expectedChanges.','line_number':197,'multiline':False]['text':' Verify that a whole-cluster stream returns the expected sequence of changes, including the','line_number':207,'multiline':False]['text':' inserts on the other collection and the other database, but NOT the manual applyOps.','line_number':208,'multiline':False]