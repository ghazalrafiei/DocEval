['text':' Test that a pipeline of the form [{$changeStream: {}}, {$match: ...}] can rewrite the $match and','line_number':1,'multiline':False]['text':' apply it to oplog-format documents in order to filter out results as early as possible.','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   requires_fcv_51,','line_number':4,'multiline':False]['text':'   requires_pipeline_optimization,','line_number':5,'multiline':False]['text':'   requires_sharding,','line_number':6,'multiline':False]['text':'   uses_change_streams,','line_number':7,'multiline':False]['text':'   change_stream_does_not_expect_txns,','line_number':8,'multiline':False]['text':'   assumes_unsharded_collection,','line_number':9,'multiline':False]['text':'   assumes_read_preference_unchanged','line_number':10,'multiline':False]['text':' ]','line_number':11,'multiline':False]['text':' Create a sharded collection.','line_number':32,'multiline':False]['text':' shardKey ','line_number':33,'multiline':True]['text':' splitAt ','line_number':33,'multiline':True]['text':' Create a second (unsharded) test collection for validating transactions that insert into multiple','line_number':35,'multiline':False]['text':' collections.','line_number':36,'multiline':False]['text':' Store a resume token that can be used to start the change stream from the beginning.','line_number':41,'multiline':False]['text':' These commands will result in 6 oplog events, with all but 2 will be filtered out by the','line_number':44,'multiline':False]['text':' $match.','line_number':45,'multiline':False]['text':' Verify correct operation of the change stream.','line_number':53,'multiline':False]['text':' Run the same change stream again, this time with "executionStats" to get more detailed','line_number':67,'multiline':False]['text':' information about how many documents are processed by each stage. Note that 'event1' will not','line_number':68,'multiline':False]['text':' be included in the results set this time, because we are using it as the resume point, but','line_number':69,'multiline':False]['text':' will still be returned from the shard and get processed on the mongoS.','line_number':70,'multiline':False]['text':' Verify the number of documents seen from each shard by the mongoS pipeline. Because we expect','line_number':76,'multiline':False]['text':' the $match to be pushed down to the shards, we expect to only see the 1 "insert" operation on','line_number':77,'multiline':False]['text':' each shard. All other operations should be filtered out on the shards.','line_number':78,'multiline':False]['text':' Because it is possible to rewrite the {operationType: "insert"} predicate so that it applies','line_number':82,'multiline':False]['text':' to the oplog entry, we expect the $match to get pushed all the way to the initial oplog','line_number':83,'multiline':False]['text':' query. This query executes in an internal "$cursor" stage, and we expect to see exactly 1','line_number':84,'multiline':False]['text':' document from this stage on each shard.','line_number':85,'multiline':False]['text':' Generate another 7 oplog events, this time within a transaction. One of the events is in a','line_number':89,'multiline':False]['text':' different collection, to validate that events from outside the watched namespace get filtered','line_number':90,'multiline':False]['text':' out even when within a transaction.','line_number':91,'multiline':False]['text':' Repeat the change stream from before, using a resume token to pick up from where the previous','line_number':108,'multiline':False]['text':' change stream left off. This change stream will only observe the 6 operations that occur in the','line_number':109,'multiline':False]['text':' transaction and will filter out everything except the 2 inserts.','line_number':110,'multiline':False]['text':' Verify correct operation of the change stream.','line_number':114,'multiline':False]['text':' Note that the stream may output the two inserts in either order. Because they are within a','line_number':123,'multiline':False]['text':' transaction, they effectively occur at exactly the same time.','line_number':124,'multiline':False]['text':' Run explain on the change stream to get more detailed execution information.','line_number':130,'multiline':False]['text':' Verify the number of documents seen from each shard by the mongoS pipeline. As before, we expect','line_number':136,'multiline':False]['text':' that everything except the inserts will be filtered on the shard, limiting the number of events','line_number':137,'multiline':False]['text':' the mongoS needs to retrieve.','line_number':138,'multiline':False]['text':' Note that the event we are resuming from is sent to the mongoS from shard 2, even though it gets','line_number':141,'multiline':False]['text':' filtered out, which is why we see 2 events here.','line_number':142,'multiline':False]['text':' Generate a second transaction.','line_number':145,'multiline':False]['text':' This change stream targets transactions from this session but filters out the first transaction.','line_number':157,'multiline':False]['text':' The "lsid" and "txnNumber" filters should get pushed all the way to the initial oplog query','line_number':163,'multiline':False]['text':' in the $cursor stage, meaning that every oplog entry gets filtered out except the','line_number':164,'multiline':False]['text':' 'commitTransaction' on each shard for the one transaction we select with our filter.','line_number':165,'multiline':False]['text':' If endOfTransaction change event is enabled, then there is also endOfTransaction','line_number':171,'multiline':False]['text':' oplog entry on one of the shards that is written asynchronously.','line_number':172,'multiline':False]['text':' Ensure that optimization does not attempt to create a filter that disregards the collation.','line_number':189,'multiline':False]['text':' Again, the stream may output these two inserts in either order. Because they are within a','line_number':204,'multiline':False]['text':' transaction, they effectively occur at exactly the same time.','line_number':205,'multiline':False]