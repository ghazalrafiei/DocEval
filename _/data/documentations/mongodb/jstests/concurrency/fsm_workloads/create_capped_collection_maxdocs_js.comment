['text':'*
 * create_capped_collection_maxdocs.js
 *
 * Repeatedly creates a capped collection. Also verifies that truncation
 * occurs once the collection reaches a certain size or contains a
 * certain number of documents.
 *
 * As of SERVER-16049, capped deletes are replicated. This means that capped deletes can be rolled
 * back without rolling back the insert that caused the capped collection to trigger the delete.
 * This makes it possible for the capped collection to exceed its capped limit temporarily until
 * the next insert is performed successfully without rolling back.
 *
 * @tags: [does_not_support_stepdowns, requires_capped]
 ','line_number':1,'multiline':True]['text':' Use the workload name as a prefix for the collection name,','line_number':21,'multiline':False]['text':' since the workload name is assumed to be unique.','line_number':22,'multiline':False]['text':' multiple of 256; larger than 4096 default','line_number':27,'multiline':False]['text':' TODO: how to avoid having too many files open?','line_number':35,'multiline':False]['text':' Define a small document to be an eighth the size of the capped collection.','line_number':40,'multiline':False]['text':' Verify size functionality still works as we expect','line_number':43,'multiline':False]['text':' Insert multiple small documents and verify that at least one truncation has occurred.','line_number':46,'multiline':False]['text':' There should never be more than 3 documents in the collection, regardless of the','line_number':47,'multiline':False]['text':' storage engine. They should always be the most recently inserted documents.','line_number':48,'multiline':False]