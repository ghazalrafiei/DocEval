['text':'*
 * findAndModify_remove_queue.js
 *
 * A large number of documents are inserted during the workload setup. Each thread repeated removes
 * a document from the collection using the findAndModify command, and stores the _id field of that
 * document in another database. At the end of the workload, the contents of the other database are
 * checked for whether one thread removed the same document as another thread.
 *
 * This workload was designed to reproduce SERVER-18304.
 ','line_number':1,'multiline':True]['text':' Use the workload name as the database name, since the workload name is assumed to be','line_number':16,'multiline':False]['text':' unique.','line_number':17,'multiline':False]['text':' Use a separate database to avoid conflicts with other FSM workloads.','line_number':31,'multiline':False]['text':' Storage engines should automatically retry the operation, and thus should never','line_number':59,'multiline':False]['text':' return null.','line_number':60,'multiline':False]['text':' Each thread should remove exactly one document per iteration.','line_number':75,'multiline':False]['text':' Require that documents inserted by this workload use _id values that can be compared','line_number':81,'multiline':False]['text':' using the default JS comparator.','line_number':82,'multiline':False]['text':' Each findAndModify should be internally retried until it removes exactly one','line_number':103,'multiline':False]['text':' document. Since this.numDocs == this.iterations * this.threadCount, there should','line_number':104,'multiline':False]['text':' not be any documents remaining.','line_number':105,'multiline':False]