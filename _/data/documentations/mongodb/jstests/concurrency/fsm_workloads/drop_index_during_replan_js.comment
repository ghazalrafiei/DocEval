['text':'*
 * drop_index_during_replan.js
 *
 * Sets up a situation where there is a plan cache entry for an index scan plan using {a: 1}. Then,
 * provokes a replan by running a query of the same shape which should use index {b: 1}. At the same
 * time, other threads may be dropping {b: 1}. This tests that the replanning process is robust to
 * index drops.
 ','line_number':1,'multiline':True]['text':' By running this query multiple times, we expect to create an active plan cache','line_number':22,'multiline':False]['text':' entry whose plan uses index {a: 1}.','line_number':23,'multiline':False]['text':' Run a query with the same shape, but with different parameters. For this query,','line_number':28,'multiline':False]['text':' we expect the {a: 1} plan to be evicted during replanning, in favor of {b: 1}.','line_number':29,'multiline':False]['text':' The query may fail due to a concurrent index drop.','line_number':30,'multiline':False]['text':' We expect any errors to be due to the query getting killed.','line_number':33,'multiline':False]['text':' Drop the index which we expect to be selected after replanning completes We don't','line_number':39,'multiline':False]['text':' assert that the command succeeded when dropping an index because it's possible','line_number':40,'multiline':False]['text':' another thread has already dropped this index.','line_number':41,'multiline':False]['text':' Recreate the index that was dropped.','line_number':44,'multiline':False]