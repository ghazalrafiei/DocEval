['text':'*
 * Transactions with local (and majority) readConcern perform untimestamped reads and do not check
 * the min visible snapshot for collections, so they can access collections whose catalog
 * information does not match the state of the collection in the transaction's snapshot. This test
 * exercises this behavior by starting a transaction on one collection, then performing an operation
 * on a second collection, where another thread may have performed a DDL operation on the second
 * collection since the transaction started. The goal of the test is to ensure the server does not
 * crash in this scenario.
 *
 * Do not run in sharding suites because the first transaction statement is expect to succeed
 * unconditionally, which need not be true in a sharded cluster.
 * @tags: [uses_transactions, requires_replication]
 ','line_number':1,'multiline':True]['text':' Start the transaction and run an operation on 'startColl'.','line_number':26,'multiline':False]['text':' Run the specified operation on 'ddlColl'. Another thread may have performed a DDL','line_number':29,'multiline':False]['text':' operation on 'ddlColl' since the transaction started. The operation may fail with one','line_number':30,'multiline':False]['text':' of the allowed error codes, but it must not crash the server.','line_number':31,'multiline':False]['text':' Commit or abort the transaction.','line_number':48,'multiline':False]['text':' As of SERVER-45405, inserts that implicitly create collections inside of','line_number':53,'multiline':False]['text':' multi- document transactions can fail at commit time with WriteConflict','line_number':54,'multiline':False]['text':' errors, if a conflicting collection does not get created until commit time.','line_number':55,'multiline':False]['text':' The failed operation already aborted the transaction. Run abortTransaction to','line_number':61,'multiline':False]['text':' update the transaction state in the shell.','line_number':62,'multiline':False]['text':' Record whether the operation succeeded or failed.','line_number':67,'multiline':False]['text':'*
         * The following functions will be run by threads performing transaction operations.
         ','line_number':71,'multiline':True]['text':'*
         * The following functions will be run by threads performing DDL operations.
         ','line_number':220,'multiline':True]['text':' Insert a document to ensure the collection exists and provide data that can be','line_number':225,'multiline':False]['text':' accessed in the transaction states.','line_number':226,'multiline':False]['text':' Report the number of successful and failed transaction operations of each type. This test','line_number':277,'multiline':False]['text':' does not provide value if all transaction operations fail with LockTimeout, since then we','line_number':278,'multiline':False]['text':' are not accessing the DDL collection.','line_number':279,'multiline':False]['text':' 80% of threads perform transaction operations, and 20% perform DDL operations.','line_number':308,'multiline':False]['text':' Transaction states.','line_number':311,'multiline':False]['text':' DDL states.','line_number':323,'multiline':False]