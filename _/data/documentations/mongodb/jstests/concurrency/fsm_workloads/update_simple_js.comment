['text':'*
 * update_simple.js
 *
 * Creates several docs. On each iteration, each thread chooses:
 *  - a random doc
 *  - whether to $set or $unset its field
 *  - what value to $set the field to
 ','line_number':1,'multiline':True]['text':' index on 'value', the field being updated','line_number':26,'multiline':False]['text':' numDocs should be much less than threadCount, to make more threads use the same docs.','line_number':29,'multiline':False]['text':' make sure the inserted docs have a 'value' field, so they won't need','line_number':34,'multiline':False]['text':' to grow when this workload runs against a capped collection','line_number':35,'multiline':False]['text':' explicitly pass db to avoid accidentally using the global `db`','line_number':49,'multiline':False]['text':' Storage engines will automatically retry any operations when there are','line_number':54,'multiline':False]['text':' conflicts, so we should always see a matching document.','line_number':55,'multiline':False]['text':' On storage engines that do not support document-level concurrency, it is','line_number':58,'multiline':False]['text':' possible that the query will not find the document. This can happen if','line_number':59,'multiline':False]['text':' another thread updated the target document during a yield, triggering an','line_number':60,'multiline':False]['text':' invalidation.','line_number':61,'multiline':False]['text':' We can't be sure nModified will be non-zero because we may have just set a key to','line_number':65,'multiline':False]['text':' its existing value','line_number':66,'multiline':False]['text':' choose a doc and value to use in the update','line_number':71,'multiline':False]