['text':'*
 * rename_collection_droptarget.js
 *
 * Creates a collection and then repeatedly executes the renameCollection
 * command against it. Inserts documents into the "to" namespace and specifies
 * dropTarget=true.
 *
 * @tags: [
 *   assumes_unsharded_collection,
 * ]
 ','line_number':1,'multiline':True]['text':' Use the workload name as a prefix for the collection name,','line_number':14,'multiline':False]['text':' since the workload name is assumed to be unique.','line_number':15,'multiline':False]['text':' Clear out the "from" collection and insert 'fromCollCount' documents','line_number':41,'multiline':False]['text':' Verify that 'fromCollCount' documents exist in the "to" collection','line_number':51,'multiline':False]['text':' after the rename occurs','line_number':52,'multiline':False]['text':' dropTarget ','line_number':54,'multiline':True]['text':' SERVER-57128: NamespaceNotFound is an acceptable error if the mongos retries','line_number':56,'multiline':False]['text':' the rename after the coordinator has already fulfilled the original request','line_number':57,'multiline':False]['text':' Swap "to" and "from" collections for next execution','line_number':63,'multiline':False]