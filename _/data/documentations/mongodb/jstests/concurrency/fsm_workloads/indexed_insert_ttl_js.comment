['text':'*
 * indexed_insert_ttl.js
 *
 * Creates a TTL index with a short expireAfterSeconds value (5 seconds). Each
 * thread does an insert on each iteration. The first insert done by each
 * thread is marked with an extra field. At the end, we assert that the first
 * doc inserted by each thread is no longer in the collection.
 * @tags: [uses_ttl]
 ','line_number':1,'multiline':True]['text':' Disallow balancing 'ns' so that it does not cause the TTLMonitor to fail rounds due','line_number':38,'multiline':False]['text':' to ongoing migration critical sections. TTLMonitor will retry on the next round, but','line_number':39,'multiline':False]['text':' it might not converge in time for the following assertion to pass.','line_number':40,'multiline':False]['text':' By default, the TTL monitor thread runs every 60 seconds.','line_number':45,'multiline':False]['text':' We need to wait for the initial documents to expire. It's possible for this code to run','line_number':48,'multiline':False]['text':' right after the TTL thread has started to sleep, which requires us to wait at least ~60','line_number':49,'multiline':False]['text':' seconds for it to wake up and delete the expired documents. We wait at least another','line_number':50,'multiline':False]['text':' minute just to avoid race-prone tests on overloaded test hosts.','line_number':51,'multiline':False]['text':' All initial documents should be removed by the end of the workload.','line_number':56,'multiline':False]