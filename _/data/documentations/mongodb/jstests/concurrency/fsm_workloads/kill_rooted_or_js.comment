['text':'*
 * kill_rooted_or.js
 *
 * Queries using a rooted $or predicate to cause plan selection to use the subplanner. Tests that
 * the subplanner correctly halts plan execution when the collection is dropped or a candidate index
 * is dropped.
 *
 * This workload was designed to reproduce SERVER-24761.
 ','line_number':1,'multiline':True]['text':' Use the workload name as the collection name, since the workload name is assumed to be','line_number':15,'multiline':False]['text':' unique. Note that we choose our own collection name instead of using the collection provided','line_number':16,'multiline':False]['text':' by the concurrency framework, because this workload drops its collection.','line_number':17,'multiline':False]['text':' We don't know exactly how many documents will be in the collection at the time of','line_number':35,'multiline':False]['text':' the query, so we can't verify this value.','line_number':36,'multiline':False]['text':' We expect to see errors caused by the plan executor being killed, because of the','line_number':39,'multiline':False]['text':' collection getting dropped on another thread.','line_number':40,'multiline':False]['text':' Restore the collection.','line_number':52,'multiline':False]['text':' We don't assert that the command succeeded when dropping an index because it's','line_number':60,'multiline':False]['text':' possible another thread has already dropped this index.','line_number':61,'multiline':False]['text':' Recreate the index that was dropped. (See populateIndexes() for why we ignore the','line_number':64,'multiline':False]['text':' CannotImplicitlyCreateCollection error.)','line_number':65,'multiline':False]['text':' In sharded configurations, there's a limit to how many times mongos can retry an','line_number':90,'multiline':False]['text':' operation that fails because it wants to implicitly create a collection that is','line_number':91,'multiline':False]['text':' concurrently dropped. Normally, that's fine, but if some jerk keeps dropping our','line_number':92,'multiline':False]['text':' collection (as in the 'dropCollection' state of this test), then we run out of','line_number':93,'multiline':False]['text':' retries and get a CannotImplicitlyCreateCollection error once in a while, which we','line_number':94,'multiline':False]['text':' have to ignore.','line_number':95,'multiline':False]['text':' See populateIndexes() for why we ignore CannotImplicitlyCreateCollection errors.','line_number':112,'multiline':False]['text':' Similarly, this bulk insert can also give up with a NoProgressMade error after repeated','line_number':113,'multiline':False]['text':' attempts in the sharded causal consistency configuration. We also ignore that error.','line_number':114,'multiline':False]