['text':'*
 * Runs insert, update, delete and findAndModify commands in internal transactions using all the
 * available client session settings, and occasionally kills a random session.
 *
 * @tags: [
 *  requires_fcv_60,
 *  uses_transactions,
 *  kills_random_sessions,
 * ]
 ','line_number':1,'multiline':True]['text':' Insert initial documents during setup instead of the init state, otherwise the insert could','line_number':23,'multiline':False]['text':' get interrupted by the killSession state.','line_number':24,'multiline':False]['text':' The transaction API does not abort internal transactions that are interrupted after they','line_number':27,'multiline':False]['text':' have started to commit. The first retry of that transaction will abort the open transaction,','line_number':28,'multiline':False]['text':' but will block if it happens again on that retry, so we lower the','line_number':29,'multiline':False]['text':' transactionLifetimeLimitSeconds so subsequent retries do not block indefinitely (24 hours).','line_number':30,'multiline':False]['text':' The client is either not using a session or is using a session without retryable writes','line_number':34,'multiline':False]['text':' enabled. Therefore, when a write is interrupted, they cannot retry the write to verify if','line_number':35,'multiline':False]['text':' it has been executed or not.','line_number':36,'multiline':False]['text':' retry_on_killed_session.js handles retrying retryable writes upon interrupt errors.','line_number':39,'multiline':False]['text':' The withTxnAndAutoRetry wrapper handles retrying transactions upon interrupt errors (by','line_number':41,'multiline':False]['text':' retrying just the commit or the entire transaction).','line_number':42,'multiline':False]['text':' For the client retryable write case, interrupt errors should be handled by','line_number':52,'multiline':False]['text':' retry_on_killed_session.js.','line_number':53,'multiline':False]['text':' For the client transaction case, interrupt errors should be handled by the','line_number':55,'multiline':False]['text':' withTxnAndAutoRetry wrapper.','line_number':56,'multiline':False]['text':' For an unprepared transaction, the race between commitTransaction with','line_number':61,'multiline':False]['text':' non-default write concern and killSessions can lead to a NoSuchTransaction','line_number':62,'multiline':False]['text':' error.','line_number':63,'multiline':False]['text':' - The killSessions command aborts all unprepared transaction on that replica set','line_number':64,'multiline':False]['text':'   including the transaction above.','line_number':65,'multiline':False]['text':' - The commitTransaction command starts and fails with NoSuchTransaction. To obey','line_number':66,'multiline':False]['text':'   the write concern, it starts writing a NoSuchTransaction noop oplog entry.','line_number':67,'multiline':False]['text':' - The killSessions command kills all local operations on that session. The','line_number':68,'multiline':False]['text':'   NoSuchTransaction noop write is interrupted and so the commitTransaction','line_number':69,'multiline':False]['text':'   command fails with an Interrupted error as the write concern error. The','line_number':70,'multiline':False]['text':'   NoSuchTransaction is is returned without a TransientTransactionError label, and','line_number':71,'multiline':False]['text':'   so the transaction does not get retried by the transaction API.','line_number':72,'multiline':False]['text':' If a client session is killed and the transaction API is running a non-retryable','line_number':87,'multiline':False]['text':' transaction on that session, the API may be killed and unable to abort the transaction,','line_number':88,'multiline':False]['text':' leaving it open, which can block later tasks like CheckReplDBHash.','line_number':89,'multiline':False]