['text':'*
 * secondary_reads.js
 *
 * One thread (tid 0) is dedicated to writing documents with field 'x' in ascending order into the
 * collection. This thread is also responsible for ensuring the required index on 'x' exists.
 *
 * Other threads do one of the following operations each iteration.
 * 1) Retrieve first 50 documents in descending order with local readConcern from a secondary node.
 * 2) Retrieve first 50 documents in descending order with available readConcern from a secondary
 * node.
 * 3) Retrieve first 50 documents in descending order with majority readConcern from a secondary
 * node.
 *
 * For each read, we perform a reverse index scan on 'x' and check if there are any 'holes' in the
 * returned batch. There should not be any 'holes' because despite the secondary applying operations
 * out of order, the scan on the ordered field 'x' guarantees we will see all inserts in-order.
 *
 * @tags: [requires_replication, uses_write_concern]
 ','line_number':1,'multiline':True]['text':' Use the workload name as the collection name.','line_number':23,'multiline':False]['text':' This index is required to ensure secondary reads do not see "holes" between documents.','line_number':39,'multiline':False]['text':' Because documents are applied out-of-order on the secondary, we cannot perform a natural','line_number':40,'multiline':False]['text':' collection scan and expect to see all documents in-order, specifically if we read at a','line_number':41,'multiline':False]['text':' timestamp that falls in the middle of an already-completed batch. The property of not','line_number':42,'multiline':False]['text':' seeing "holes" between documents can only be guaranteed by scanning on an ordered index.','line_number':43,'multiline':False]['text':' We propagate TransientTransactionErrors to allow the state function to','line_number':71,'multiline':False]['text':' automatically be retried when TestData.runInsideTransaction=true','line_number':72,'multiline':False]['text':' Make sure there is no hole in the result.','line_number':82,'multiline':False]['text':' One thread is dedicated to writing and other threads perform reads on','line_number':100,'multiline':False]['text':' secondaries with a randomly chosen readConcern level.','line_number':101,'multiline':False]['text':' Start write workloads to activate oplog application on secondaries','line_number':117,'multiline':False]['text':' before any reads.','line_number':118,'multiline':False]