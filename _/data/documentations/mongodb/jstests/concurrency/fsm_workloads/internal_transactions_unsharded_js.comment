['text':'*
 * Runs insert, update, delete and findAndModify commands in internal transactions using all the
 * available client session settings. This workload works on both standalone replica sets and
 * sharded clusters since by default the FSM runner shards every collection used by a workload that
 * runs against a sharded cluster using the shard key {_id: hashed}. However, the workload is only
 * run on standalone replica sets since there is already a sharded workload for this
 * (internal_transactions_sharded.js) that sets up its own range-sharded collection.
 *
 * @tags: [
 *  requires_fcv_60,
 *  uses_transactions,
 *  assumes_unsharded_collection,
 * ]
 ','line_number':1,'multiline':True]['text':' This workload involves running commands outside a session.','line_number':24,'multiline':False]['text':' The number of documents assigned to a thread when the workload starts.','line_number':35,'multiline':False]['text':' The batch size for the find command used for looking up the documents assigned to a thread.','line_number':37,'multiline':False]['text':' Use a large batch size so that a getMore command is never needed since getMore is not','line_number':38,'multiline':False]['text':' retryable after network errors.','line_number':39,'multiline':False]['text':' The counter values for the documents assigned to a thread. The map is populated during','line_number':41,'multiline':False]['text':' the init state and is updated after every write in the other states. Used to verify that','line_number':42,'multiline':False]['text':' updates aren't double applied.','line_number':43,'multiline':False]['text':' Keep track of the documents that a thread has started writing to but does not know if the','line_number':45,'multiline':False]['text':' write has succeeded, for example, because the write is interrupted. The key of the inner map','line_number':46,'multiline':False]['text':' is the document id, and the value is command name for the write against that document (i.e.','line_number':47,'multiline':False]['text':' "insert", "update", "delete" or "findAndModify").','line_number':48,'multiline':False]['text':' The reap threshold is overriden to get coverage for when it schedules reaps during an active','line_number':62,'multiline':False]['text':' workload.','line_number':63,'multiline':False]['text':' This workload supports setting the 'transactionLifetimeLimitSeconds' to 45 seconds','line_number':66,'multiline':False]['text':' (configurable) during setup() and restoring the original value during teardown().','line_number':67,'multiline':False]['text':' Determine if this workload needs to use causally consistent sessions.','line_number':72,'multiline':False]['text':' Use the causal consistency setting on TestData.','line_number':75,'multiline':False]['text':' Use causal consistency since it is running with stepdown/kill/terminate and "read','line_number':79,'multiline':False]['text':' your own writes" against the primary is only guaranteed outside a casually consistent','line_number':80,'multiline':False]['text':' session when the primary is stable.','line_number':81,'multiline':False]['text':' Don't use causal consistency in other cases since it should not be necessary.','line_number':84,'multiline':False]['text':'*
     * Returns a random boolean.
     ','line_number':88,'multiline':True]['text':'*
     * Returns a random integer between min (inclusive) and max (inclusive).
     ','line_number':95,'multiline':True]['text':' Exclude kNoClientSession since a (casually consistent) session is required.','line_number':104,'multiline':False]['text':'*
     * Returns true if 'res' contains an acceptable error for the aggregate command used to look up
     * a random document.
     ','line_number':181,'multiline':True]['text':' The aggregate command is expected to involve running getMore commands which are not','line_number':186,'multiline':False]['text':' retryable after network errors.','line_number':187,'multiline':False]['text':' The linearizable read has a 15s timeout, then a LinearizableReadConcernError will be','line_number':188,'multiline':False]['text':' thrown, so we retry on this error in test','line_number':189,'multiline':False]['text':' Use linearizable read concern to guarantee any subsequent transaction snapshot will','line_number':201,'multiline':False]['text':' include the found document. Skip if the test has a default read concern or requires','line_number':202,'multiline':False]['text':' casual consistency because in both cases the default read concern should provide this','line_number':203,'multiline':False]['text':' guarantee already.','line_number':204,'multiline':False]['text':'*
     * Returns true if 'res' contains an acceptable retry error for a retryable write command.
     ','line_number':362,'multiline':True]['text':' This workload does not involve data placement changes so retries should always succeed.','line_number':366,'multiline':False]['text':' Workloads that extend this workload should override this method accordingly.','line_number':367,'multiline':False]['text':'*
     * Runs the command specified by 'crudOp.cmdObj' inside an internal transaction using the
     * specified client 'executionCtxType'.
     ','line_number':371,'multiline':True]['text':' The testInternalTransactions command below runs with the session setting defined by','line_number':377,'multiline':False]['text':' 'executionCtxType'.','line_number':378,'multiline':False]['text':' Add an insert command to each transaction so that when this workload is running on a','line_number':381,'multiline':False]['text':' sharded cluster there can be a mix of single-shard and cross-shard transactions.','line_number':382,'multiline':False]['text':' Check responses.','line_number':419,'multiline':False]['text':' If the command was retried, 'responses' would only contain the response for','line_number':424,'multiline':False]['text':' 'crudOp.cmdObj'.','line_number':425,'multiline':False]['text':' Check documents.','line_number':449,'multiline':False]['text':' There isn't a way to determine what the thread ids are in setup phase so just assume','line_number':521,'multiline':False]['text':' that they are [0, 1, ..., this.threadCount-1].','line_number':522,'multiline':False]['text':'*
     * Starts a retryable-write session and non-retryable write session, inserts the documents for
     * this thread, and populates the 'expectedCounters' map.
     ','line_number':540,'multiline':True]['text':'*
     * Asserts that the counter values for all documents assigned to this thread match their
     * expected values.
     ','line_number':603,'multiline':True]['text':' The read below should not be done inside a transaction (and use readConcern level','line_number':625,'multiline':False]['text':' "snapshot").','line_number':626,'multiline':False]['text':' If 'passConnectionCache' is true, every state function must accept 3 parameters: db,','line_number':661,'multiline':False]['text':' collName and connCache. This workload does not set 'passConnectionCache' since it doesn't','line_number':662,'multiline':False]['text':' use 'connCache' but it may extend a sharding workload that uses it.','line_number':663,'multiline':False]