['text':'*
 * map_reduce_merge.js
 *
 * Generates some random data and inserts it into a collection. Runs a
 * map-reduce command over the collection that computes the frequency
 * counts of the 'value' field and stores the results in an existing
 * collection on a separate database.
 *
 * Uses the "merge" action to combine the results with the contents
 * of the output collection.
 *
 * Writes the results of each thread to the same collection.
 * @tags: [
 *   # mapReduce does not support afterClusterTime.
 *   does_not_support_causal_consistency,
 *   # Use mapReduce.
 *   requires_scripting,
 * ]
 ','line_number':1,'multiline':True]['text':' Use the workload name as the database name,','line_number':24,'multiline':False]['text':' since the workload name is assumed to be unique.','line_number':25,'multiline':False]['text':' Have all threads combine their results into the same collection','line_number':40,'multiline':False]