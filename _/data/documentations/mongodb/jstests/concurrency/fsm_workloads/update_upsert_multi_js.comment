['text':'*
 * update_upsert_multi.js
 *
 * Tests updates that specify both multi=true and upsert=true.
 * The 'insert' state uses a query that will match no documents, causing an upsert.
 * The 'update' state uses a query that will match one or more documents, causing a multi-update.
 * Both states use { multi: true, upsert: true }, but only one option will ever take effect,
 * depending on whether 0 or more than 0 documents match the query.
 *
 * @tags: [requires_non_retryable_writes]
 ','line_number':1,'multiline':True]['text':' The counter ensures that the query will not match any existing document.','line_number':18,'multiline':False]['text':' This query will match an existing document, since the 'insert' state','line_number':30,'multiline':False]['text':' always runs first.','line_number':31,'multiline':False]['text':' Since each update operation either:','line_number':42,'multiline':False]['text':'  - inserts a new doc { tid: tid, i: counter++, n: 0 }','line_number':43,'multiline':False]['text':'  - updates any doc matching { tid: tid } with { $inc: { n: 1 } }','line_number':44,'multiline':False]['text':' Then within each tid, as you walk from lower to higher values of i,','line_number':45,'multiline':False]['text':' the value of n should be non-increasing. (This should be true','line_number':46,'multiline':False]['text':' because docs with lower i are newer, so they have had fewer','line_number':47,'multiline':False]['text':' opportunities to have n incremented.)','line_number':48,'multiline':False]['text':' Shard by tid when run in a sharded cluster because upserts require the shard key.','line_number':73,'multiline':False]