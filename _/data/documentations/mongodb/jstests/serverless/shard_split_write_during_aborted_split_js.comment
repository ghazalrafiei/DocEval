['text':'*
 * Test that starts a shard split and abort it while doing a write.
 * @tags: [requires_fcv_63, serverless]
 ','line_number':1,'multiline':True]['text':' Set a short timeout to test that the operation times out waiting for replication','line_number':13,'multiline':False]['text':' Start the shard split and wait until we enter the kBlocking state','line_number':25,'multiline':False]['text':' Assert there are no blocked writes for tenants so we can confirm there were blocks later','line_number':29,'multiline':False]['text':' Now perform one write for each tenantId being split and wait for the writes to become blocked','line_number':33,'multiline':False]['text':' Verify that we have blocked the expected number of writes to tenant data','line_number':47,'multiline':False]['text':' There are two writes for each insert. The function insertBatchAndHandleErrors first try','line_number':50,'multiline':False]['text':' to acquire the collection lock and create the collection as it doesn't exist. This result','line_number':51,'multiline':False]['text':' in an error that is recorded. However insertBatchAndHandleErrors still try to process the','line_number':52,'multiline':False]['text':' insert, which leads to a second write error.','line_number':53,'multiline':False]['text':' Then abort the operation, disable the failpoint, and assert the operation was aborted','line_number':60,'multiline':False]['text':' Assert all writes were completed with a TenantMigrationAborted error','line_number':65,'multiline':False]