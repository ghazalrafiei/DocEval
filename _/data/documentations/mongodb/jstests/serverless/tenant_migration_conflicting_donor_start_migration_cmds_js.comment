['text':'*
 * Test that tenant migration donors correctly join retried donorStartMigration commands and reject
 * conflicting donorStartMigration commands.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]['text':'*
 * Asserts that the number of recipientDataSync commands executed on the given recipient primary is
 * equal to the given number.
 ','line_number':25,'multiline':True]['text':'*
 * Returns an array of currentOp entries for the TenantMigrationDonorService instances that match
 * the given query.
 ','line_number':35,'multiline':True]['text':' Test that a retry of a donorStartMigration command joins the existing migration that has','line_number':66,'multiline':False]['text':' completed but has not been garbage-collected.','line_number':67,'multiline':False]['text':' If the second donorStartMigration had started a duplicate migration, the recipient would have','line_number':83,'multiline':False]['text':' received four recipientSyncData commands instead of two.','line_number':84,'multiline':False]['text':' Test that a retry of a donorStartMigration command joins the ongoing migration.','line_number':91,'multiline':False]['text':' If the second donorStartMigration had started a duplicate migration, the recipient would have','line_number':110,'multiline':False]['text':' received four recipientSyncData commands instead of two.','line_number':111,'multiline':False]['text':'*
 * Tests that the donor throws a ConflictingOperationInProgress error if the client runs a
 * donorStartMigration command to start a migration that conflicts with an existing migration that
 * has committed but not garbage-collected (i.e. the donor has not received donorForgetMigration).
 ','line_number':118,'multiline':True]['text':' If the second donorStartMigration had started a duplicate migration, there would be two donor','line_number':139,'multiline':False]['text':' state docs and TenantMigrationDonorService instances.','line_number':140,'multiline':False]['text':'*
 * Tests that if the client runs multiple donorStartMigration commands that would start conflicting
 * migrations, only one of the migrations will start and succeed.
 ','line_number':162,'multiline':True]['text':' Verify that exactly one migration succeeded.','line_number':181,'multiline':False]['text':' Test migrations with different migrationIds but identical settings.','line_number':234,'multiline':False]['text':' Test reusing a migrationId for different migration settings.','line_number':256,'multiline':False]['text':' Test different tenantIds.','line_number':258,'multiline':False]['text':' Test different recipient connection strings.','line_number':286,'multiline':False]['text':' The recipient connection string will be populated by the TenantMigrationTest fixture, so','line_number':295,'multiline':False]['text':' no need to set it here.','line_number':296,'multiline':False]['text':' Test different cloning read preference.','line_number':313,'multiline':False]