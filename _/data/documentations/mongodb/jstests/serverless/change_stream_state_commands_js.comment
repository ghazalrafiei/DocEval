['text':' Test that the 'setChangeStreamState' and 'getChangeStreamState' commands work as expected in the','line_number':1,'multiline':False]['text':' multi-tenant replica sets environment for various cases.','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   requires_fcv_62,','line_number':4,'multiline':False]['text':' ]','line_number':5,'multiline':False]['text':' Disable implicit sessions since dropping "config" database for a tenant must be done not in a','line_number':9,'multiline':False]['text':' session.','line_number':10,'multiline':False]['text':' Sets the change stream state for the provided tenant id.','line_number':26,'multiline':False]['text':' The 'setChangeStreamState' will throw 'ConflictingOperationInProgress' if the','line_number':34,'multiline':False]['text':' previous request was not completed. The conflict should get resolved eventually.','line_number':35,'multiline':False]['text':' Verifies that the required change stream state is set for the provided tenant id both in the','line_number':42,'multiline':False]['text':' primary and the secondary and the command 'getChangeStreamState' returns the same state.','line_number':43,'multiline':False]['text':' Verify that the change collection exists both in the primary and the secondary.','line_number':59,'multiline':False]['text':' Verify that the pre-images collection exists both in the primary and the secondary.','line_number':63,'multiline':False]['text':' Used to set security token on primary and secondary node. Run this when you want to change the','line_number':68,'multiline':False]['text':' tenant that can interact with the repl set','line_number':69,'multiline':False]['text':' Tests that the 'setChangeStreamState' command works for the basic cases.','line_number':88,'multiline':False]['text':' Verify that the 'setChangeStreamState' command cannot be run with db other than the','line_number':92,'multiline':False]['text':' 'admin' db.','line_number':93,'multiline':False]['text':' Verify that the 'getChangeStreamState' command cannot be run with db other than the','line_number':98,'multiline':False]['text':' 'admin' db.','line_number':99,'multiline':False]['text':' Verify that the change stream is enabled for the tenant.','line_number':104,'multiline':False]['text':' Verify that the change stream is disabled for the tenant.','line_number':108,'multiline':False]['text':' Verify that enabling change stream multiple times has not side-effects.','line_number':112,'multiline':False]['text':' Verify that disabling change stream multiple times has not side-effects.','line_number':117,'multiline':False]['text':' Verify that dropping "config" database works and effectively disables change streams.','line_number':122,'multiline':False]['text':' Tests that the 'setChangeStreamState' command tolerates the primary step-down and can','line_number':128,'multiline':False]['text':' successfully resume after the new primary comes up.','line_number':129,'multiline':False]['text':' Reset the change stream state to disabled before starting the test case.','line_number':133,'multiline':False]['text':' Hang the 'SetChangeStreamStateCoordinator' before processing the command request.','line_number':140,'multiline':False]['text':' While the failpoint is active, issue a request to enable change stream. This command will','line_number':144,'multiline':False]['text':' hang at the fail point.','line_number':145,'multiline':False]['text':' Wait until the fail point is hit.','line_number':153,'multiline':False]['text':' Verify that the change stream is still disabled at this point.','line_number':156,'multiline':False]['text':' Force primary to step down such that the secondary gets elected as a new leader.','line_number':159,'multiline':False]['text':' The hung command at the point must have been interrupted and shell must have returned the','line_number':162,'multiline':False]['text':' error code.','line_number':163,'multiline':False]['text':' Wait until the secondary becomes the new primary.','line_number':166,'multiline':False]['text':' Disable the fail point as it is no longer needed.','line_number':169,'multiline':False]['text':' Wait until the new primary has enabled the change stream.','line_number':172,'multiline':False]['text':' Wait until the change collection and the pre-images collection have been replicated to the','line_number':180,'multiline':False]['text':' secondary.','line_number':181,'multiline':False]['text':' Tests that the 'setChangeStreamState' command does not allow parallel non-identical requests from','line_number':190,'multiline':False]['text':' the same tenant.','line_number':191,'multiline':False]['text':' Reset the change stream state to disabled before starting the test case.','line_number':195,'multiline':False]['text':' Hang the 'SetChangeStreamStateCoordinator' before processing the command request.','line_number':201,'multiline':False]['text':' While the failpoint is active, issue a request to enable change stream for the tenant. This','line_number':205,'multiline':False]['text':' command will hang at the fail point.','line_number':206,'multiline':False]['text':' Wait until the fail point is hit.','line_number':215,'multiline':False]['text':' While the first command is still hung, issue a request to disable the change stream for the','line_number':218,'multiline':False]['text':' same tenants. This request should bail out with 'ConflictingOperationInProgress' exception.','line_number':219,'multiline':False]['text':' Turn off the fail point.','line_number':225,'multiline':False]['text':' Wait for the shell to return.','line_number':228,'multiline':False]['text':' Verify that the first command has enabled the change stream now.','line_number':231,'multiline':False]['text':' Tests that the 'setChangeStreamState' command allows parallel identical requests from the same','line_number':235,'multiline':False]['text':' tenant.','line_number':236,'multiline':False]['text':' Reset the change stream state to disabled before starting the test case.','line_number':241,'multiline':False]['text':' Hang the 'SetChangeStreamStateCoordinator' before processing the command request.','line_number':247,'multiline':False]['text':' While the failpoint is active, issue a request to enable change stream for the tenant. This','line_number':258,'multiline':False]['text':' command will hang at the fail point.','line_number':259,'multiline':False]['text':' Wait for the fail point to be hit.','line_number':262,'multiline':False]['text':' Issue another request to enable the change stream from the same tenant. This should not throw','line_number':265,'multiline':False]['text':' any exception. We will not wait for the fail point because the execution of the same request','line_number':266,'multiline':False]['text':' is already in progress and this request will wait on the completion of the previous','line_number':267,'multiline':False]['text':' enablement request.','line_number':268,'multiline':False]['text':' Turn off the fail point.','line_number':271,'multiline':False]['text':' Wait for shells to return.','line_number':274,'multiline':False]['text':' Verify that the first command has enabled the change stream now.','line_number':278,'multiline':False]['text':' Tests that parallel requests from different tenants do not interfere with each other and can','line_number':282,'multiline':False]['text':' complete successfully.','line_number':283,'multiline':False]['text':' Reset the change stream state to disable before starting the test case.','line_number':287,'multiline':False]['text':' Hang the 'SetChangeStreamStateCoordinator' before processing the command request.','line_number':299,'multiline':False]['text':' Enable the change stream for the tenant 'firstOrgTenantId' in parallel.','line_number':303,'multiline':False]['text':' Wait until the above request hits the fail point.','line_number':312,'multiline':False]['text':' While the first request from the tenant 'firstOrgTenantId' is hung, issue another request but','line_number':315,'multiline':False]['text':' with the tenant 'secondOrgTenantId'.','line_number':316,'multiline':False]['text':' The request from the 'secondOrgTenantId' will also hang.','line_number':325,'multiline':False]['text':' Now that both the request have hit the fail point, disable it.','line_number':328,'multiline':False]['text':' Wait for both shells to return.','line_number':331,'multiline':False]['text':' Verify that the change stream state for both tenants is now enabled.','line_number':335,'multiline':False]