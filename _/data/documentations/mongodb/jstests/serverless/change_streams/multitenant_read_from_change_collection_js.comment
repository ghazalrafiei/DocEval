['text':' Tests the behaviour of change streams on change collections in an environment with more than one','line_number':1,'multiline':False]['text':' active tenant.','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   requires_fcv_62,','line_number':4,'multiline':False]['text':'   assumes_against_mongod_not_mongos,','line_number':5,'multiline':False]['text':' ]','line_number':6,'multiline':False]['text':' Hard code tenants ids such that a particular tenant can be identified deterministically.','line_number':16,'multiline':False]['text':' Connections to the replica set primary that are stamped with their respective tenant ids.','line_number':20,'multiline':False]['text':' Verify that the change stream observes expected events. The method also collects resume tokens','line_number':26,'multiline':False]['text':' for each expected change collection and returns those on successful assertion.','line_number':27,'multiline':False]['text':' Get the 'test' db for both tenants.','line_number':52,'multiline':False]['text':' Recreate the 'stockPrice' collections to delete any old documents and enable pre-images','line_number':56,'multiline':False]['text':' collections for them.','line_number':57,'multiline':False]['text':' Verify that while the change streams are disabled for the tenant, performing update and delete','line_number':67,'multiline':False]['text':' operations on a collection with change stream pre- and post-images enabled succeeds. The','line_number':68,'multiline':False]['text':' pre-images collection shouldn't be affected either.','line_number':69,'multiline':False]['text':' Create a new incarnation of the change collection for the first tenant.','line_number':76,'multiline':False]['text':' These documents will be inserted in tenants 'stockPrice' collections.','line_number':80,'multiline':False]['text':' Open the change stream cursor for the first tenant.','line_number':86,'multiline':False]['text':' Fetch the latest timestamp before enabling the change stream for the second tenant.','line_number':89,'multiline':False]['text':' Now create the change collection for the second tenant. The oplog timestamp associated with the','line_number':94,'multiline':False]['text':' second tenant's create change collection will be greater than the 'startAtOperationTime'.','line_number':95,'multiline':False]['text':' Open the change stream cursor for the second tenant.','line_number':99,'multiline':False]['text':' Insert documents to both change collections in jumbled fashion.','line_number':102,'multiline':False]['text':' Verify that each change stream emits only the required tenant's change events and that there','line_number':110,'multiline':False]['text':' is no leak of events amongst the change streams. Do not consume all events for the first','line_number':111,'multiline':False]['text':' tenant as it will be consumed later.','line_number':112,'multiline':False]['text':' Verify that change streams from both tenants can be resumed using their respective resume token.','line_number':121,'multiline':False]['text':' Verify that resume tokens cannot be exchanged between tenants change streams.','line_number':129,'multiline':False]['text':' Verify that the first tenant's change stream can be resumed using the timestamp','line_number':137,'multiline':False]['text':' 'startAtOperationTime'.','line_number':138,'multiline':False]['text':' Verify that the second tenant's change stream cannot be resumed with the timestamp','line_number':146,'multiline':False]['text':' 'startAtOperationTime' and should throw change stream history lost.','line_number':147,'multiline':False]['text':' Ensure that disabling the change stream for the second tenant does not impact the change','line_number':152,'multiline':False]['text':' stream of the first tenant.','line_number':153,'multiline':False]['text':' The next on the change stream for the second tenant should now throw exception.','line_number':156,'multiline':False]['text':' The next of the change stream for the first tenant should continue to work. Since we have','line_number':160,'multiline':False]['text':' still not consumed all event from the first tenant, the change stream should emit the','line_number':161,'multiline':False]['text':' remaining ones.','line_number':162,'multiline':False]['text':' Re-enable the change stream for the second tenant and verify that the change stream cannot be','line_number':165,'multiline':False]['text':' resumed using the resume token of previous incarnation of the change stream.','line_number':166,'multiline':False]