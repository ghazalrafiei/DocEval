['text':' Tests that entries are written to the change collection for collection create, drop and document','line_number':1,'multiline':False]['text':' modification operations.','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   requires_fcv_62,','line_number':4,'multiline':False]['text':' ]','line_number':5,'multiline':False]['text':' Hard code tenants ids such that a particular tenant can be identified deterministically.','line_number':17,'multiline':False]['text':' Create tokens for each tenant','line_number':21,'multiline':False]['text':' Connections to the replica set primary that are stamped with their respective tenant ids.','line_number':25,'multiline':False]['text':' Enable the change stream state such that change collections are created for both tenants.','line_number':31,'multiline':False]['text':' Performs writes on the specified collection 'coll' such that the corresponding oplog entries are','line_number':35,'multiline':False]['text':' captured by the tenant's change collection.','line_number':36,'multiline':False]['text':' Retrieve the last timestamp from the oplog.','line_number':43,'multiline':False]['text':' Clear token on primary and secondary connections','line_number':51,'multiline':False]['text':' Test that writes to two different change collections are isolated and that each change collection','line_number':57,'multiline':False]['text':' captures only the relevant oplog entries associated with the corresponding tenant.','line_number':58,'multiline':False]['text':' A helper shell function to perform write for the specified 'tenantId'.','line_number':62,'multiline':False]['text':' Perform writes for the first tenant in a different shell.','line_number':78,'multiline':False]['text':' Perform writes to the second tenant parallely with the first tenant.','line_number':87,'multiline':False]['text':' Wait for both shells to return.','line_number':96,'multiline':False]['text':' Verify that both change collections captured their respective tenant's oplog entries in','line_number':103,'multiline':False]['text':' the primary.','line_number':104,'multiline':False]['text':' Wait for the replication to finish.','line_number':111,'multiline':False]['text':' Verify that both change collections captured their respective tenant's oplog entries in','line_number':114,'multiline':False]['text':' the secondary.','line_number':115,'multiline':False]['text':' Test that transactional writes to two different change collections are isolated and that each','line_number':123,'multiline':False]['text':' change collection captures only the relevant 'applyOps' oplog entries associated with the','line_number':124,'multiline':False]['text':' corresponding tenant.','line_number':125,'multiline':False]['text':' A helper shell function to perform transactional write for the specified 'tenantId'.','line_number':129,'multiline':False]['text':' Perform writes within a transaction for the first tenant.','line_number':150,'multiline':False]['text':' Perform parallel writes within a transaction for the second tenant.','line_number':159,'multiline':False]['text':' Wait for shells to return.','line_number':168,'multiline':False]['text':' Verify that both change collections captured their respective tenant's 'applyOps' oplog','line_number':175,'multiline':False]['text':' entries in the primary.','line_number':176,'multiline':False]['text':' Wait for the replication to finish.','line_number':183,'multiline':False]['text':' Verify that both change collections captured their respective tenant's 'applyOps' oplog','line_number':186,'multiline':False]['text':' entries in the secondary.','line_number':187,'multiline':False]