['text':'*
 * Test that during tenant migration, multi-key indexes on donor collections can be
 * correctly rebuilt on recipient collections, with the right multi-key paths.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]['text':' Allow reads on recipient before migration completes for testing.','line_number':39,'multiline':False]['text':' The first collection on donor side already has the multi-key index.','line_number':56,'multiline':False]['text':' Both "a" and "a.b" are arrays, so the multi-key path on "a.b" is ["a", "a.b"],','line_number':65,'multiline':False]['text':' since "a.c" is scala value, the multi-key path on "a.c" only contains "a".','line_number':66,'multiline':False]['text':' The second collection on donor side is not multi-key index yet, during migration,','line_number':69,'multiline':False]['text':' new entries will be inserted and it will be turned into multi-key index.','line_number':70,'multiline':False]['text':' Since it is not multi-key index yet, both multi-key paths should be empty.','line_number':76,'multiline':False]['text':' Configure a failpoint to hang after recipient data becomes consistent.','line_number':87,'multiline':False]['text':' At this point, recipient data is consistent, so both collections on the recipient','line_number':96,'multiline':False]['text':' side should have the same multi-key state as they were in donor side.','line_number':97,'multiline':False]['text':' Update an entry in collection 1 on donor side, that make "a.c" to be an array as well.','line_number':101,'multiline':False]['text':' The recipient should continue fetching before migration finishes and thus change the','line_number':102,'multiline':False]['text':' multi-key path on "a.c" after it becomes consistent again.','line_number':103,'multiline':False]['text':' Now the index on donor's collection 1 should still be multi-key, but the multi-key path','line_number':106,'multiline':False]['text':' on "a.c" should be changed, recipient should be the same after migration finishes.','line_number':107,'multiline':False]['text':' Insert new entries into collection 2 on donor side, that turns its index into multi-key.','line_number':110,'multiline':False]['text':' The recipient should continue fetching before migration finishes and likewise turn the','line_number':111,'multiline':False]['text':' index on its collection 2 into multi-key after it becomes consistent again.','line_number':112,'multiline':False]['text':' Now the index on donor's collection 2 should be multi-key, recipient should be the same','line_number':115,'multiline':False]['text':' after migration finishes.','line_number':116,'multiline':False]['text':' Wait for tenant migration to finish.','line_number':121,'multiline':False]['text':' Recipient now should have fetched the newly updated data, and changed the multi-key path','line_number':124,'multiline':False]['text':' on "a.c" in collection 1.','line_number':125,'multiline':False]['text':' Recipient now should have fetched newly inserted data, and turned the index on its','line_number':127,'multiline':False]['text':' collection 2 into multi-key, with the same multi-key path as the donor's.','line_number':128,'multiline':False]