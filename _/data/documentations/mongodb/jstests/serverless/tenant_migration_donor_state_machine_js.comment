['text':'*
 * Tests the TenantMigrationAccessBlocker and donor state document are updated correctly at each
 * stage of the migration, and are eventually removed after the donorForgetMigration has returned.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   # Some tenant migration statistics field names were changed in 6.1.
 *   requires_fcv_61,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]['text':'*
 * Runs the donorForgetMigration command and asserts that the TenantMigrationAccessBlocker and donor
 * state document are eventually removed from the donor.
 ','line_number':30,'multiline':True]['text':' Wait for garbage collection on donor.','line_number':49,'multiline':False]['text':' Wait for garbage collection on recipient.','line_number':65,'multiline':False]['text':' Set the delay before a state doc is garbage collected to be short to speed up the test.','line_number':88,'multiline':False]['text':' Wait for the migration to enter the blocking state.','line_number':150,'multiline':False]['text':' Verify that donorForgetMigration fails since the decision has not been made.','line_number':171,'multiline':False]['text':' Allow the migration to complete.','line_number':179,'multiline':False]['text':' Drop the TTL index to make sure that the migration state is still available when the','line_number':292,'multiline':False]['text':' donorForgetMigration command is retried.','line_number':293,'multiline':False]['text':' Verify that donorForgetMigration fails since the migration hasn't started.','line_number':304,'multiline':False]['text':' Verify that the retry succeeds.','line_number':314,'multiline':False]