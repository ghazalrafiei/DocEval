['text':'*
 * Tests that tenant migration donor's in memory state is recovered correctly on startup. This test
 * randomly selects a point during the migration to shutdown the donor.
 *
 * Incompatible with shard merge, which can't handle restart.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_shard_merge,
 *   incompatible_with_windows_tls,
 *   requires_fcv_62,
 *   requires_majority_read_concern,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 * ]
 ','line_number':1,'multiline':True]['text':' In order to deterministically validate that in-memory state is preserved during','line_number':35,'multiline':False]['text':' recovery, this failpoint prevents active migrations from continuing on process','line_number':36,'multiline':False]['text':' restart.','line_number':37,'multiline':False]['text':' Force the migration to pause after entering a randomly selected state.','line_number':58,'multiline':False]['text':' signal ','line_number':77,'multiline':True]['text':'forRestart ','line_number':77,'multiline':True]['text':' Don't run donorForgetMigration because the fail point above prevents instances from','line_number':123,'multiline':False]['text':' being rebuilt on step up.','line_number':124,'multiline':False]['text':' Don't run donorForgetMigration because the fail point above prevents instances from','line_number':141,'multiline':False]['text':' being rebuilt on step up.','line_number':142,'multiline':False]