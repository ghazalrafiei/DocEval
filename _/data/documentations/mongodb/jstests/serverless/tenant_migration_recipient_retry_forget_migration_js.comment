['text':'*
 * Tests that a recipientForgetMigration is received after the recipient state doc has been deleted.
 *
 * @tags: [
 *   incompatible_with_macos,
 *   incompatible_with_windows_tls,
 *   requires_majority_read_concern,
 *   # Shard merge protocol will be tested by
 *   # tenant_migration_shard_merge_recipient_retry_forget_migration.js.
 *   incompatible_with_shard_merge,
 *   requires_persistence,
 *   serverless,
 *   requires_fcv_71,
 *   # The currentOp output field 'state' was changed from an enum value to a string.
 *   requires_fcv_70,
 * ]
 ','line_number':1,'multiline':True]['text':' Not doing a migration before writing to the recipient to mimic that a migration has completed and','line_number':41,'multiline':False]['text':' the state doc has been garbage collected.','line_number':42,'multiline':False]['text':' Run a delayed/retried recipientForgetMigration command after the state doc has been deleted.','line_number':71,'multiline':False]['text':' Block the recipient before it updates the state doc with an expireAt field.','line_number':74,'multiline':False]['text':' Test that we can still read from the recipient.','line_number':84,'multiline':False]['text':' Step up a new recipient primary before the state doc is truly marked as garbage collectable.','line_number':90,'multiline':False]['text':' The new primary should skip all tenant migration steps but wait for another','line_number':94,'multiline':False]['text':' recipientForgetMigration command.','line_number':95,'multiline':False]['text':' Test that we can still read from the recipient.','line_number':101,'multiline':False]['text':' Test that we can retry the recipientForgetMigration on the new primary.','line_number':104,'multiline':False]