['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' pylint: disable=protected-access','line_number':22,'multiline':False]['text':' Newer versions of PyOpenSSL hide OBJ_create, but also seem okay without it.','line_number':24,'multiline':False]['text':' pylint: enable=protected-access','line_number':34,'multiline':False]['text':' tlsfeature = status_request isn't supported by older versions of OpenSSL so we manually define this below','line_number':40,'multiline':False]['text':' 1.3.6.1.5.5.7.1.24: "tls_feature" extension as defined in https://tools.ietf.org/html/rfc7633#section-6','line_number':41,'multiline':False]['text':' status_request extension as defined in https://tools.ietf.org/html/rfc4366#section-2.3','line_number':45,'multiline':False]['text':' ASN.1 value: SEQUENCE { INTEGER 0x05 (5 decimal) }','line_number':46,'multiline':False]['text':' <= 825 in order to abide by https://support.apple.com/en-us/HT210176. ','line_number':49,'multiline':False]['text':' Note that ECDSA keys are generated in the','line_number':62,'multiline':False]['text':' process_csdsa_*() functions below.','line_number':63,'multiline':False]['text':' Externally sourced certifiate, try by path. Hopefully unencrypted.','line_number':110,'multiline':False]['text':' pylint: disable=bare-except','line_number':111,'multiline':False]['text':' do nothing if an empty subject is explicitly provided','line_number':126,'multiline':False]['text':' TODO: Parse human readable dates and/or datedeltas','line_number':141,'multiline':False]['text':' Default last week.','line_number':144,'multiline':False]['text':' TODO: Parse human readable dates and/or datedeltas','line_number':150,'multiline':False]['text':' "The OCSP No Check extension is a string extension but its value is ignored." https://www.openssl.org/docs/man1.1.1/man5/x509v3_config.html','line_number':217,'multiline':False]['text':' Other things can live here, but this is all we use.','line_number':242,'multiline':False]['text':' Simplified sequence which always expects two string, a key and a value.','line_number':308,'multiline':False]['text':' Signed by a CA, find the key...','line_number':383,'multiline':False]['text':' Serial numbers 0..999 are reserved for fixed serial numbers.','line_number':444,'multiline':False]['text':' Other will be assigned randomly.','line_number':445,'multiline':False]['text':' The OCSP responder certificate needs to have the key and the pem file separated.','line_number':461,'multiline':False]['text':' Since there are only a few cases where we need split key and crt files, and since we','line_number':462,'multiline':False]['text':' sometimes need the unified pem file as well, we can always generate the pem file.','line_number':463,'multiline':False]['text':' wrap the PEM-encoded EC key with explicit text header into a PEM-encoded PKCS#8 object','line_number':545,'multiline':False]['text':' copy the public key to a temp crt file','line_number':553,'multiline':False]['text':' convert and create the temp key file','line_number':558,'multiline':False]['text':' combine public and private key into a .pem file with no comments','line_number':562,'multiline':False]['text':' copy the temp files into .crt + .key files','line_number':565,'multiline':False]['text':' given foo.pem, we'll generate foo.crt and foo.key as well','line_number':607,'multiline':False]['text':' given foo.crt, we'll generate foo.pem and foo.key','line_number':665,'multiline':False]['text':' given foo.pem, we'll regenerate foo.pem and delete foo.crt and foo.key','line_number':669,'multiline':False]['text':' Pure composing certificate. Start with a basic preamble.','line_number':708,'multiline':False]['text':' pylint: disable=global-statement','line_number':724,'multiline':False]['text':' Temporarily treat like dictionary for easy de-duping.','line_number':758,'multiline':False]['text':' Start with the cert(s) explicitly asked for.','line_number':760,'multiline':False]['text':' Add any certs who use our current set as an issuer.','line_number':770,'multiline':False]['text':' Add any certs who are composed of our current set.','line_number':772,'multiline':False]['text':' Repeat until no new names are added.','line_number':774,'multiline':False]['text':' only concern ourselves with prependents in this config file.','line_number':788,'multiline':False]['text':' Self-signed, signed by someone in ret already, or signed externally','line_number':791,'multiline':False]['text':' pylint: disable=global-statement','line_number':803,'multiline':False]