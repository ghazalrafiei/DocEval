['text':'*
 * Confirms that change streams only see committed operations for prepared transactions.
 * @tags: [
 *   requires_majority_read_concern,
 *   uses_change_streams,
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':'*
 * This test sets an internal parameter in order to force transactions with more than 4
 * operations to span multiple oplog entries, making it easier to test that scenario.
 ','line_number':15,'multiline':True]['text':'*
 * Asserts that the expected operation type and documentKey are found on the change stream
 * cursor. Returns the change stream document.
 ','line_number':21,'multiline':True]['text':'*
 * Asserts that the expected operation type and documentKey are found on the change stream
 * cursor. Pushes the corresponding resume token and change stream document to an array.
 ','line_number':33,'multiline':True]['text':'*
 * Asserts that there are no changes waiting on the change stream cursor.
 ','line_number':42,'multiline':True]['text':' Collections must be created outside of any transaction.','line_number':57,'multiline':False]['text':'','line_number':61,'multiline':False]['text':' Start transaction 1.','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':'','line_number':69,'multiline':False]['text':' Start transaction 2.','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' Start transaction 3.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' Open a change stream on the test collection.','line_number':85,'multiline':False]['text':' Insert a document and confirm that the change stream has it.','line_number':88,'multiline':False]['text':' Insert two documents under each transaction and confirm no change stream updates.','line_number':92,'multiline':False]['text':' Update one document under each transaction and confirm no change stream updates.','line_number':97,'multiline':False]['text':' Update and then remove the second doc under each transaction and confirm no change stream','line_number':102,'multiline':False]['text':' events are seen.','line_number':103,'multiline':False]['text':' Perform a write to the 'session1' transaction in a collection that is not being watched','line_number':112,'multiline':False]['text':' by 'changeStreamCursor'. We do not expect to see this write in the change stream either','line_number':113,'multiline':False]['text':' now or on commit.','line_number':114,'multiline':False]['text':' Perform a write to the 'session3' transaction in a collection that is not being watched','line_number':119,'multiline':False]['text':' by 'changeStreamCursor'. We do not expect to see this write in the change stream either','line_number':120,'multiline':False]['text':' now or on commit.','line_number':121,'multiline':False]['text':' Perform a write outside of a transaction and confirm that the change stream sees only','line_number':126,'multiline':False]['text':' this write.','line_number':127,'multiline':False]['text':'','line_number':139,'multiline':False]['text':' Commit first transaction and confirm expected changes.','line_number':140,'multiline':False]['text':'','line_number':141,'multiline':False]['text':' Transition the second transaction to prepared. We skip capturing the prepare','line_number':150,'multiline':False]['text':' timestamp it is not required for abortTransaction_forTesting().','line_number':151,'multiline':False]['text':'','line_number':158,'multiline':False]['text':' Abort second transaction.','line_number':159,'multiline':False]['text':'','line_number':160,'multiline':False]['text':'','line_number':164,'multiline':False]['text':' Start transaction 4.','line_number':165,'multiline':False]['text':'','line_number':166,'multiline':False]['text':' Perform enough writes to fill up one applyOps.','line_number':172,'multiline':False]['text':' Perform enough writes to an unwatched collection to fill up a second applyOps. We','line_number':180,'multiline':False]['text':' specifically want to test the case where a multi-applyOps transaction has no relevant','line_number':181,'multiline':False]['text':' updates in its final applyOps.','line_number':182,'multiline':False]['text':'','line_number':188,'multiline':False]['text':' Start transaction 5.','line_number':189,'multiline':False]['text':'','line_number':190,'multiline':False]['text':' Perform enough writes to span 3 applyOps entries.','line_number':196,'multiline':False]['text':'','line_number':204,'multiline':False]['text':' Prepare and commit transaction 5.','line_number':205,'multiline':False]['text':'','line_number':206,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' Commit transaction 4 without preparing.','line_number':215,'multiline':False]['text':'','line_number':216,'multiline':False]['text':' Test that change stream resume returns the expected set of documents at each point','line_number':225,'multiline':False]['text':' captured by this test.','line_number':226,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' Prepare and commit the third transaction and confirm that there are no visible changes.','line_number':241,'multiline':False]['text':'','line_number':242,'multiline':False]['text':' Configure the replica set to use our value for maxOpsInOplogEntry.','line_number':256,'multiline':False]['text':' The test is executing in a build variant that already defines its own override value for','line_number':261,'multiline':False]['text':' maxNumberOfTransactionOperationsInSingleOplogEntry. Even though the build variant's','line_number':262,'multiline':False]['text':' choice for this override won't test the same edge cases, the test should still succeed.','line_number':263,'multiline':False]