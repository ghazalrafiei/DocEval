['text':'*
 * Confirms that aborting a background index builds on a secondary does not leave node in an
 * inconsistent state.
 * @tags: [
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]['text':' This test triggers an unclean shutdown (an fassert), which may cause inaccurate fast counts.','line_number':11,'multiline':False]['text':' Disallow elections on secondary. This allows the primary to commit without waiting','line_number':18,'multiline':False]['text':' for the secondary.','line_number':19,'multiline':False]['text':' Don't log slow operations on secondary. See SERVER-44821.','line_number':24,'multiline':False]['text':' The arbiter prevents the primary from stepping down due to lack of majority in the','line_number':27,'multiline':False]['text':' case where the secondary is restarting due to the (expected) unclean shutdown. Note','line_number':28,'multiline':False]['text':' that the arbiter doesn't participate in the commitQuorum.','line_number':29,'multiline':False]['text':' When the index build starts, find its op id.','line_number':50,'multiline':False]['text':' Wait for the primary to complete the index build and replicate a commit oplog entry.','line_number':61,'multiline':False]['text':' "Index build: completed successfully"','line_number':62,'multiline':False]['text':' Kill the index build.','line_number':65,'multiline':False]['text':' We expect this to crash the secondary because this error is not recoverable','line_number':70,'multiline':False]['text':' Expect the secondary to crash. Depending on timing, this can be either because the secondary','line_number':75,'multiline':False]['text':' was waiting for a primary abort when a 'commitIndexBuild' is applied, or because the build','line_number':76,'multiline':False]['text':' fails and tries to request an abort while a 'commitIndexBuild' is being applied.','line_number':77,'multiline':False]['text':' After restarting the secondary, expect that the index build completes successfully.','line_number':83,'multiline':False]['text':' restart ','line_number':85,'multiline':True]['text':' Wait for the restarted secondary node to reach SECONDARY state again.','line_number':90,'multiline':False]['text':' Wait for the index build to complete on all nodes.','line_number':93,'multiline':False]['text':' Expect successful createIndex command invocation in parallel shell. A new index should be present','line_number':96,'multiline':False]['text':' on the primary and secondary.','line_number':97,'multiline':False]['text':' Check that index was created on the secondary despite the attempted killOp().','line_number':102,'multiline':False]