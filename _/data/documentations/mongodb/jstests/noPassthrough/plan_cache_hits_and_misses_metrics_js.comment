['text':'*
 * Test that the plan cache hits and misses serverStatus counters are updated correctly when a plan
 * is recovered from the plan cache.
 *
 * @tags: [
 *   # TODO SERVER-67607: Test plan cache with CQF enabled.
 *   cqf_incompatible,
 * ]
 ','line_number':1,'multiline':True]['text':'*
 * Retrieves the "hits" and "misses" serverStatus metrics for the given 'planCacheType' (sbe or
 * classic) and returns them as an object: {hits: <number>, misses: <number>}.
 ','line_number':26,'multiline':True]['text':'*
 * Runs the given command (either find or aggregate) and validates that the "hits" and "misses"
 * serverStatus metrics for the given 'planCacheType' (sbe or classic) have been updated according
 * to our expectations described in the 'hitsShouldChange' argument. This argument is an array of
 * boolean values which provide this function with the following two details:
 *    - how many times to run the given command
 *    - how the "hits" and "misses" values are expected to change after each run (true - we expect
 *      it to increase, false - remain unchanged)
 *    - only the expectations for the "hits" metric is provided, since the "misses" value changes
 *      inversely to the "hits" metric (if "hits" is expected to be changed, than "misses" should
 *      remain unchanged, and vice versa)
 *
 * The 'planCacheType' is derived from the current mongod instance settings (either sbe or classic),
 * if not specified, and can be overwritten by providing a specific value.
 *
 * If the 'indexes' argument is provided, it must be an array of index specifications to be passed
 * to 'coll.createIndexes' command, before executing the given command. All indexes previously
 * defined on the collection will be dropped. An array can be empty, in which case indexes will be
 * dropped and no new indexes will be created.
 ','line_number':37,'multiline':True]['text':' Run test cases.','line_number':82,'multiline':False]['text':' A simple collection scan. We should only recover from plan cache when SBE is on.','line_number':84,'multiline':False]['text':' Same as above but with an aggregate command.','line_number':89,'multiline':False]['text':' Same query but with two indexes on the collection. We should recover from plan cache on','line_number':99,'multiline':False]['text':' third run when a plan cache entry gets activated.','line_number':100,'multiline':False]['text':' Same query shape as above, should always recover from plan cache.','line_number':106,'multiline':False]['text':' Same query as above, but with an aggregate command. Should always recover from plan cache.','line_number':112,'multiline':False]['text':' IdHack queries is always is executed with the classic engine and never get cached.','line_number':122,'multiline':False]['text':' Hinted queries are cached and can be recovered only in SBE. Note that 'hint' changes the','line_number':128,'multiline':False]['text':' query shape, so we expect to recover only on a second run.','line_number':129,'multiline':False]['text':' Min queries never get cached.','line_number':134,'multiline':False]['text':' Max queries never get cached.','line_number':145,'multiline':False]['text':' We don't cache plans for explain.','line_number':156,'multiline':False]['text':' Tailable cursor queries never get cached.','line_number':161,'multiline':False]