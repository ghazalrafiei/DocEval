['text':' Tests that expired pre-images (pre-image timestamp older than oldest oplog entry timestamp) are','line_number':1,'multiline':False]['text':' removed from the pre-images collection via the 'PeriodicChangeStreamExpiredPreImagesRemover'','line_number':2,'multiline':False]['text':' periodic job.','line_number':3,'multiline':False]['text':' @tags: [','line_number':4,'multiline':False]['text':'  requires_fcv_60,','line_number':5,'multiline':False]['text':'  assumes_against_mongod_not_mongos,','line_number':6,'multiline':False]['text':'  change_stream_does_not_expect_txns,','line_number':7,'multiline':False]['text':'  requires_replication,','line_number':8,'multiline':False]['text':'  requires_majority_read_concern,','line_number':9,'multiline':False]['text':' ]','line_number':10,'multiline':False]['text':' Set up the replica set with two nodes and two collections with 'changeStreamPreAndPostImages'','line_number':31,'multiline':False]['text':' enabled and run expired pre-image removal job every second.','line_number':32,'multiline':False]['text':' Returns documents from the pre-images collection from 'node'.','line_number':46,'multiline':False]['text':' Checks if the oplog has been rolled over from the timestamp of','line_number':51,'multiline':False]['text':' 'lastOplogEntryTsToBeRemoved', ie. the timestamp of the first entry in the oplog is greater','line_number':52,'multiline':False]['text':' than the 'lastOplogEntryTsToBeRemoved' on each node of the replica set.','line_number':53,'multiline':False]['text':' Invokes function 'func()' and returns the invocation result. Retries the action if 'func()'','line_number':60,'multiline':False]['text':' throws an exception with error code CappedPositionLost until a timeout - default timeout of','line_number':61,'multiline':False]['text':' 'assert.soon()'. 'message' is returned in case of timeout.','line_number':62,'multiline':False]['text':' Tests that the pre-image removal job deletes only the expired pre-images by performing four','line_number':80,'multiline':False]['text':' updates leading to four pre-images being recorded, then the oplog is rolled over, removing the','line_number':81,'multiline':False]['text':' oplog entries of the previously recorded pre-images. Afterwards two updates are performed and','line_number':82,'multiline':False]['text':' therefore two new pre-images are recorded. The pre-images removal job must remove only the first','line_number':83,'multiline':False]['text':' four recorded pre-images.','line_number':84,'multiline':False]['text':' Roll over the oplog, leading to 'PeriodicChangeStreamExpiredPreImagesRemover' periodic job','line_number':86,'multiline':False]['text':' deleting all pre-images.','line_number':87,'multiline':False]['text':' Drop and recreate the collections with pre-images recording.','line_number':95,'multiline':False]['text':' Perform insert and update operations.','line_number':101,'multiline':False]['text':' Pre-images collection should contain four pre-images.','line_number':108,'multiline':False]['text':' Roll over all current oplog entries.','line_number':113,'multiline':False]['text':' Checks if the oplog has been rolled over from the timestamp of','line_number':117,'multiline':False]['text':' 'lastOplogEntryToBeRemoved', ie. the timestamp of the first entry in the oplog is greater','line_number':118,'multiline':False]['text':' than the timestamp of the 'lastOplogEntryToBeRemoved' on each node of the replica set.','line_number':119,'multiline':False]['text':' Perform update operations that insert new pre-images that are not expired yet.','line_number':124,'multiline':False]['text':' Wait until 'PeriodicChangeStreamExpiredPreImagesRemover' periodic job will delete the expired','line_number':129,'multiline':False]['text':' pre-images.','line_number':130,'multiline':False]['text':' Only two pre-images should still be there, as their timestamp is greater than the oldest','line_number':132,'multiline':False]['text':' oplog entry timestamp.','line_number':133,'multiline':False]['text':' If the feature flag is on, then batched deletes will not be used for deletion. Additionally,','line_number':141,'multiline':False]['text':' since truncates are not replicated, the number of pre-images on the primary may differ from','line_number':142,'multiline':False]['text':' that of the secondary.','line_number':143,'multiline':False]['text':' Because the pre-images collection is implicitly replicated, validate that writes do not','line_number':145,'multiline':False]['text':' generate oplog entries, with the exception of deletions.','line_number':146,'multiline':False]['text':' Multi-deletes are batched base on time before performing the deletion, therefore the','line_number':148,'multiline':False]['text':' deleted pre-images can span through multiple applyOps oplog entries.','line_number':149,'multiline':False]['text':'','line_number':150,'multiline':False]['text':' As pre-images span two collections, the minimum number of batches is 2, as we perform','line_number':151,'multiline':False]['text':' the range-deletion per collection. The maximum number of batches is 4 (one per single','line_number':152,'multiline':False]['text':' pre-image removed).','line_number':153,'multiline':False]['text':' Verify that pre-images collection content on the primary node is the same as on the','line_number':173,'multiline':False]['text':' secondary.','line_number':174,'multiline':False]['text':' Increase oplog size on each node to prevent oplog entries from being deleted which removes a','line_number':180,'multiline':False]['text':' risk of replica set consistency check failure during tear down of the replica set.','line_number':181,'multiline':False]