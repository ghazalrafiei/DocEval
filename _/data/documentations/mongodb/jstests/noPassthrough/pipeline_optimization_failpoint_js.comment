['text':' Tests that pipeline optimization works properly when the failpoint isn't triggered, and is','line_number':1,'multiline':False]['text':' disabled properly when it is triggered.','line_number':2,'multiline':False]['text':' The test-only '$_internalInhibitOptimization' operator prevents the $sort and $limit from','line_number':25,'multiline':False]['text':' being pushed down into the PlanStage layer, thereby ensuring that these two stages remain','line_number':26,'multiline':False]['text':' inside the pipeline layer. We need to make sure that the pipeline does get optimized away,','line_number':27,'multiline':False]['text':' since the "disablePipelineOptimization" failpoint does nothing in the','line_number':28,'multiline':False]['text':' "optimizedPipeline:true" case.','line_number':29,'multiline':False]['text':' Test that sort and the limit were combined.','line_number':36,'multiline':False]['text':' Enable a failpoint that will cause pipeline optimizations to be skipped.','line_number':45,'multiline':False]['text':' Test that the $limit still exists and hasn't been optimized away.','line_number':50,'multiline':False]['text':' Test that the result is the same with and without optimizations enabled.','line_number':59,'multiline':False]