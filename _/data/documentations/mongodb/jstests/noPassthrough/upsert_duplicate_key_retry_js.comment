['text':'*
 * When two concurrent identical upsert operations are performed, for which a unique index exists on
 * the query values, it is possible that they will both attempt to perform an insert with one of
 * the two failing on the unique index constraint. This test confirms that the failed insert will be
 * retried, resulting in an update.
 *
 * @tags: [requires_replication]
 ','line_number':1,'multiline':True]['text':' This function is called from startParallelShell(), so closed-over variables will not be','line_number':24,'multiline':False]['text':' available. We must re-obtain the value of 'testColl' in the function body.','line_number':25,'multiline':False]['text':' Will hang upsert operations just prior to performing an insert.','line_number':32,'multiline':False]['text':' Query current operations until 2 matching operations are found.','line_number':39,'multiline':False]['text':' Confirm that oplog entries exist for both insert and update operation.','line_number':55,'multiline':False]['text':'','line_number':60,'multiline':False]['text':' Confirm DuplicateKey error for cases that should not be retried.','line_number':61,'multiline':False]['text':'','line_number':62,'multiline':False]['text':' DuplicateKey error on replacement-style upsert, where the unique index key value to be','line_number':66,'multiline':False]['text':' written does not match the value of the query predicate.','line_number':67,'multiline':False]['text':' DuplicateKey error on update-style upsert, where the unique index key value to be written','line_number':72,'multiline':False]['text':' does not match the value of the query predicate.','line_number':73,'multiline':False]