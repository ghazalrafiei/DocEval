['text':'*
 * Tests a race condition between a user interrupting an index build and the node stepping-down. The
 * nature of this problem is that the stepping-down node is not able to replicate an abortIndexBuild
 * oplog entry after the user kills the operation. The old primary will rely on the new primary to
 * replicate a commitIndexBuild oplog entry after the takeover.
 *
 * @tags: [
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]['text':' When the index build starts, find its op id. This will be the op id of the client connection, not','line_number':37,'multiline':False]['text':' the thread pool task managed by IndexBuildsCoordinatorMongod.','line_number':38,'multiline':False]['text':' Kill the index build.','line_number':44,'multiline':False]['text':' Wait for the command thread to observe the killOp.','line_number':47,'multiline':False]['text':' Step down the primary, preventing the index build from generating an abort oplog entry.','line_number':54,'multiline':False]['text':' Let the command thread try to abort the index build.','line_number':57,'multiline':False]['text':' Unable to abort index build because we are not primary.','line_number':61,'multiline':False]['text':' Let the index build continue running.','line_number':66,'multiline':False]['text':' Wait for the index build to stop.','line_number':69,'multiline':False]['text':' With two phase index builds, a stepdown will not abort the index build, which should complete','line_number':72,'multiline':False]['text':' after a new node becomes primary.','line_number':73,'multiline':False]['text':' The old primary, now secondary, should process the commitIndexBuild oplog entry.','line_number':76,'multiline':False]