['text':'*
 * Tests the WT prepare conflict behavior of running operations outside of a multi-statement
 * transaction when another operation is being performed concurrently inside of the multi-statement
 * transaction with the "WTSkipPrepareConflictRetries" failpoint is enabled.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':' A non-transactional operation conflicting with a write operation performed inside a','line_number':35,'multiline':False]['text':' multistatement transaction can encounter a WT_PREPARE_CONFLICT in the wiredtiger','line_number':36,'multiline':False]['text':' layer under several circumstances, such as performing an insert, update, or find','line_number':37,'multiline':False]['text':' on a document that is in a prepare statement. The non-transactional operation','line_number':38,'multiline':False]['text':' would then be retried after the prepared transaction commits or aborts. However, with the','line_number':39,'multiline':False]['text':' "WTSkipPrepareConflictRetries"failpoint enabled, the non-transactional operation would','line_number':40,'multiline':False]['text':' instead return with a WT_ROLLBACK error. This would then get bubbled up as a','line_number':41,'multiline':False]['text':' WriteConflictException. Enabling the "skipWriteConflictRetries" failpoint then prevents','line_number':42,'multiline':False]['text':' the higher layers from retrying the entire operation.','line_number':43,'multiline':False]