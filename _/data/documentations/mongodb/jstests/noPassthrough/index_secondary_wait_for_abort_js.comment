['text':'*
 * Confirms that index builds on a secondary are aborted when we encounter a document that cannot be
 * indexed. Since we expect the index build on the primary to fail, the secondary should wait for
 * the primary's abortIndexBuild oplog entry.
 * @tags: [
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]['text':' Disallow elections on secondary.','line_number':15,'multiline':False]['text':' There are two 'a.0' fields in this doc, which prevents us from creating an index on {'a.0': 1}.','line_number':33,'multiline':False]['text':' Inserting this document causes the index build to fail during the collection scan phase.','line_number':34,'multiline':False]['text':' We are using this fail point to pause the index build before it starts the collection scan.','line_number':43,'multiline':False]['text':' This is important for this test because we want to prevent the index build on the primary from','line_number':44,'multiline':False]['text':' observing the invalid document while we block its progress.','line_number':45,'multiline':False]['text':' Wait for the index build to start on the primary.','line_number':54,'multiline':False]['text':' The index build on the secondary will fail on the invalid document but will wait for the','line_number':58,'multiline':False]['text':' abortIndexBuild oplog entry from the primary.','line_number':59,'multiline':False]['text':' Confirm that the index build on the secondary failed because of the invalid document.','line_number':70,'multiline':False]['text':' "Ambiguous field name found in array ..."','line_number':71,'multiline':False]['text':' Wait for the index build to eventually disappear. Due to an external abort thread doing the','line_number':74,'multiline':False]['text':' cleanup, we can't rely on waitForIndexBuildToStop as it checks for the opId of the builder','line_number':75,'multiline':False]['text':' thread.','line_number':76,'multiline':False]['text':' Check that index was not created on the secondary.','line_number':79,'multiline':False]