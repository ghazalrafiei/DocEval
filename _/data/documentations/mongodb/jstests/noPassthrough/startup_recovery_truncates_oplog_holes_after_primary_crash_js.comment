['text':'*
 * Test that a confirmed write against a primary with oplog holes behind it when a crash occurs will
 * be truncated on startup recovery.
 *
 * There must be more than 1 voting node, otherwise the write concern behavior changes to waiting
 * for no holes for writes with {j: true} write concern, and no confirmed writes will be truncated.
 *
 * @tags: [
 *   requires_replication,
 *   # The primary is restarted and must retain its data.
 *   requires_persistence,
 * ]
 ','line_number':1,'multiline':True]['text':' Make sure there are no election timeouts. This should prevent primary stepdown. Normally we would','line_number':19,'multiline':False]['text':' set the secondary node votes to 0, but that would affect the feature that is being tested.','line_number':20,'multiline':False]['text':' Hold back the durable timestamp by leaving an uncommitted transaction hanging.','line_number':36,'multiline':False]['text':' Crashing the server while this command is running may cause the parallel shell code to','line_number':43,'multiline':False]['text':' error and stop executing. We will therefore ignore the result of this command and','line_number':44,'multiline':False]['text':' parallel shell. Test correctness is guaranteed by waiting for the failpoint this command','line_number':45,'multiline':False]['text':' hits.','line_number':46,'multiline':False]['text':' Execute an insert with confirmation that it made it to disk ({j: true});','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':' The primary's durable timestamp should be pinned by the prior hanging uncommitted write. So','line_number':55,'multiline':False]['text':' this second write will have an oplog hole behind it and will be truncated after a crash.','line_number':56,'multiline':False]['text':' Crash and restart the primary, which should truncate the second successful write, because','line_number':66,'multiline':False]['text':' the first write never committed and left a hole in the oplog.','line_number':67,'multiline':False]['text':' Turn off the failpoint before allowing the test to end, so nothing hangs while the server','line_number':70,'multiline':False]['text':' shuts down or in post-test hooks.','line_number':71,'multiline':False]['text':' Wait for the restarted node to complete startup recovery and start accepting user requests.','line_number':82,'multiline':False]['text':' Note: no new primary will be elected because of the high election timeout set on the replica set.','line_number':83,'multiline':False]['text':' Confirm that the write with the oplog hold behind it is now gone (truncated) as expected.','line_number':89,'multiline':False]