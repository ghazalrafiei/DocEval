['text':' This test verifies that particular code paths exit early (I.e. are killed) or not by:','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' 1. Set a fail point that will hang the code path','line_number':3,'multiline':False]['text':' 2. Open a new client with sockettimeoutms set (to force the disconnect) and a special appname','line_number':4,'multiline':False]['text':'    (to allow easy checking for the specific connection)','line_number':5,'multiline':False]['text':' 3. Run the tested command on the special connection and wait for it to timeout','line_number':6,'multiline':False]['text':' 4. Use an existing client to check current op for that special appname.  Return true if it's','line_number':7,'multiline':False]['text':'    still there at the end of a timeout','line_number':8,'multiline':False]['text':' 5. Disable the fail point','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' It also ensures that we correctly record metrics counting the number of operations killed','line_number':11,'multiline':False]['text':' due to client disconnect, and the number of completed operations that couldn't return data','line_number':12,'multiline':False]['text':' due to client disconnect.','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' @tags: [requires_sharding]','line_number':15,'multiline':False]['text':' Used to generate unique appnames','line_number':21,'multiline':False]['text':' client - A client connection for curop (and that holds the hostname)','line_number':24,'multiline':False]['text':' pre - A callback to run with the timing out socket','line_number':25,'multiline':False]['text':' post - A callback to run after everything else has resolved (cleanup)','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' Returns false if the op was gone from current op','line_number':28,'multiline':False]['text':' Make a socket which will timeout','line_number':36,'multiline':False]['text':'${host}/?socketTimeoutMS=${socketTimeout}&appName=${testName}${id}`);','line_number':39,'multiline':False]['text':' Make sure it works at all','line_number':41,'multiline':False]['text':' Make sure that whatever operation we ran had a network error','line_number':45,'multiline':False]['text':' Spin until the op leaves currentop, or timeout passes','line_number':56,'multiline':False]['text':' Test that an operation that completes but whose client disconnects before the','line_number':134,'multiline':False]['text':' response is sent is recorded properly.','line_number':135,'multiline':False]['text':'${host}/?appName=${testName}${id}`);','line_number':141,'multiline':False]['text':' Make sure the new connection works.','line_number':142,'multiline':False]['text':' Ensure that after the next command completes, the server fails to send the response.','line_number':145,'multiline':False]['text':' Should fail because the server will close the connection after receiving a simulated network','line_number':149,'multiline':False]['text':' error sinking the response to the client.','line_number':150,'multiline':False]['text':' Ensure we counted the unsendable completed response.','line_number':154,'multiline':False]['text':' set timeout for js function execution to 100 ms to speed up tests that run inf loop.','line_number':164,'multiline':False]['text':' After SERVER-39475, re-enable these tests and add negative testing for $out cursors.','line_number':197,'multiline':False]['text':' Just counts the # of commands we send in an exection of runTests that should be','line_number':226,'multiline':False]['text':' killed due to disconnected client.','line_number':227,'multiline':False]['text':' Ensure that we report the operations killed due to client disconnect in serverStatus.','line_number':237,'multiline':False]['text':' Ensure that we report the operations killed due to client disconnect in serverStatus on','line_number':250,'multiline':False]['text':' mongos.','line_number':251,'multiline':False]