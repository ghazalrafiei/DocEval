['text':'*
 * Tests the write conflict behavior while the "skipWriteConflictRetries" failpoint is enabled
 * between operations performed outside of a multi-statement transaction when another operation is
 * being performed concurrently inside of a multi-statement transaction.
 *
 * Note that jstests/core/txns/write_conflicts_with_non_txns.js tests the write conflict behavior
 * while the "skipWriteConflictRetries" failpoint isn't enabled.
 *
 * @tags: [uses_transactions, uses_prepare_transaction]
 ','line_number':1,'multiline':True]['text':' A non-transactional insert would ordinarily keep retrying if it conflicts with a write','line_number':32,'multiline':False]['text':' operation performed inside a multi-statement transaction. However, with the','line_number':33,'multiline':False]['text':' "skipWriteConflictRetries" failpoint enabled, the non-transactional insert should immediately','line_number':34,'multiline':False]['text':' fail with a WriteConflict error response.','line_number':35,'multiline':False]['text':' A non-transactional update would ordinarily keep retrying if it conflicts with a write','line_number':45,'multiline':False]['text':' operation performed inside a multi-statement transaction. However, with the','line_number':46,'multiline':False]['text':' "skipWriteConflictRetries" failpoint enabled, the non-transactional insert should immediately','line_number':47,'multiline':False]['text':' fail with a WriteConflict error response.','line_number':48,'multiline':False]