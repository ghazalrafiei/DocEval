['text':'*
 * Tests that running collStats against a time-series collection includes statistics specific to
 * time-series collections.
 *
 * @tags: [
 *   does_not_support_stepdowns,
 *   requires_getmore,
 * ]
 ','line_number':1,'multiline':True]['text':' Idle bucket expiration behavior will be non-deterministic since buckets are hashed','line_number':85,'multiline':False]['text':' into shards within the catalog based on metadata, and expiration is done on a','line_number':86,'multiline':False]['text':' per-shard basis. We just want to make sure that if we are expecting the number to be','line_number':87,'multiline':False]['text':' sufficiently large under a global-expiry regime, that it is at least greater than 0,','line_number':88,'multiline':False]['text':' signifying we have expired something from some shard.','line_number':89,'multiline':False]['text':'','line_number':90,'multiline':False]['text':' The value 33 was chosen as "sufficiently large" simply because we use 32 shards in','line_number':91,'multiline':False]['text':' the BucketCatalog and so we can apply the pigeon-hole principle to conclude that at','line_number':92,'multiline':False]['text':' least one of those inserted buckets that we expect to have triggered an expiration','line_number':93,'multiline':False]['text':' did in fact land in a shard with an existing idle bucket that it could expire.','line_number':94,'multiline':False]['text':' Assumes each bucket has a limit of 1000 measurements.','line_number':177,'multiline':False]['text':' Assumes each bucket has a limit of 1000 measurements. We change the order twice of fields in the','line_number':196,'multiline':False]['text':' subobj we are storing. Should be 2 'numSubObjCompressionRestart' if bucket compression is','line_number':197,'multiline':False]['text':' enabled.','line_number':198,'multiline':False]['text':' Assumes each bucket has a limit of 125kB on the measurements stored in the 'data' field.','line_number':221,'multiline':False]['text':' The measurement data should not take up all of the 'bucketMaxSizeKB' limit because we need','line_number':224,'multiline':False]['text':' to leave a little room for the _id and the time fields.','line_number':225,'multiline':False]['text':' This test leaves the bucket with a single measurement which will cause compression to be','line_number':226,'multiline':False]['text':' by-passed. The stats tracking of compressed buckets will thus also be by-passed.','line_number':227,'multiline':False]['text':' Assumes the measurements in each bucket span at most one hour (based on the time field).','line_number':243,'multiline':False]['text':' This test leaves just one measurement per bucket which will cause compression to be','line_number':244,'multiline':False]['text':' by-passed. The stats tracking of compressed buckets will thus also be by-passed.','line_number':245,'multiline':False]['text':' Ensure that creating a non-time-series collection on a system.buckets namespace doesn't confuse','line_number':304,'multiline':False]['text':' the stats collector.','line_number':305,'multiline':False]