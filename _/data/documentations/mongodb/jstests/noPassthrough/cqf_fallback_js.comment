['text':'*
 * Verify that expressions and operators are correctly routed to CQF where eligible. This decision
 * is based on several factors including the query text, collection metadata, etc..
 ','line_number':1,'multiline':True]['text':' This test relies on the bonsai optimizer being enabled.','line_number':14,'multiline':False]['text':' 'runWithParams' as defined in 'optimizer_utils.js' doesn't have access to the db defined in this','line_number':25,'multiline':False]['text':' test.','line_number':26,'multiline':False]['text':' A supported stage must use the new optimizer.','line_number':39,'multiline':False]['text':' Experimental features require the knob to be set to "tryBonsaiExperimental" or higher.','line_number':49,'multiline':False]['text':' With "tryBonsai", these features should not use the new optimizer.','line_number':50,'multiline':False]['text':' Non-explain should also work and use the fallback mechanism, but we cannnot verify exactly','line_number':56,'multiline':False]['text':' this without looking at the logs.','line_number':57,'multiline':False]['text':' Enable "experimental" features in bonsai and expect the query to use Bonsai and pass.','line_number':60,'multiline':False]['text':' Non-explain should still work.','line_number':66,'multiline':False]['text':' An unsupported stage should not use the new optimizer.','line_number':71,'multiline':False]['text':' Non-explain should also work and use the fallback mechanism, but we cannnot verify exactly','line_number':77,'multiline':False]['text':' this without looking at the logs.','line_number':78,'multiline':False]['text':' Force the bonsai optimizer and expect the query to either fail if unsupported, or pass if','line_number':81,'multiline':False]['text':' marked as "test only".','line_number':82,'multiline':False]['text':' Forcing the classic engine should not use Bonsai.','line_number':93,'multiline':False]['text':' Sanity check we use bonsai for supported cases.','line_number':104,'multiline':False]['text':' Unsupported aggregation stage.','line_number':107,'multiline':False]['text':' Test-only aggregation stage.','line_number':111,'multiline':False]['text':' Unsupported match expression.','line_number':116,'multiline':False]['text':' Test-only match expression.','line_number':122,'multiline':False]['text':' Test $match against null. When field paths are dotted, these have testOnly support. When the','line_number':127,'multiline':False]['text':' field paths are not dotted, these are fully supported.','line_number':128,'multiline':False]['text':' Test $match on _id; these have only experimental support.','line_number':148,'multiline':False]['text':' Test $project on _id. These are fully supported in bonsai unless the _id index is specifically','line_number':166,'multiline':False]['text':' hinted, which is only experimentally supported.','line_number':167,'multiline':False]['text':' $natural hints are fully supported in Bonsai.','line_number':188,'multiline':False]['text':' $natural hints allow running a predicate on _id.','line_number':196,'multiline':False]['text':' The presence of a $natural hint does not allow an otherwise unsupported query to go through','line_number':204,'multiline':False]['text':' Bonsai.','line_number':205,'multiline':False]['text':' Unsupported projection expression.','line_number':217,'multiline':False]['text':' Numeric path components are not supported, either in a match expression or projection.','line_number':249,'multiline':False]['text':' Positional projection is not supported. Note that this syntax is only possible in the projection','line_number':255,'multiline':False]['text':' of a find command.','line_number':256,'multiline':False]['text':' Test for unsupported expressions within a branching expression such as $or.','line_number':259,'multiline':False]['text':' Unsupported command options.','line_number':263,'multiline':False]['text':' $_requestResumeToken','line_number':265,'multiline':False]['text':' $_requestReshardingResumeToken','line_number':274,'multiline':False]['text':' $_resumeAfter','line_number':283,'multiline':False]['text':' allowPartialResults','line_number':293,'multiline':False]['text':' allowSpeculativeMajorityRead','line_number':295,'multiline':False]['text':' awaitData','line_number':298,'multiline':False]['text':' collation','line_number':301,'multiline':False]['text':' When let variables are used in the query, it is experimentally supported.','line_number':313,'multiline':False]['text':' When let variables are specified but unused in the query, it is eligible for CQF.','line_number':324,'multiline':False]['text':' limit','line_number':328,'multiline':False]['text':' min/max','line_number':331,'multiline':False]['text':' noCursorTimeout','line_number':334,'multiline':False]['text':' readOnce','line_number':336,'multiline':False]['text':' returnKey','line_number':338,'multiline':False]['text':' runtimeConstants','line_number':340,'multiline':False]['text':' showRecordId','line_number':348,'multiline':False]['text':' singleBatch','line_number':350,'multiline':False]['text':' skip','line_number':352,'multiline':False]['text':' sort','line_number':354,'multiline':False]['text':' tailable','line_number':356,'multiline':False]['text':' term','line_number':358,'multiline':False]['text':' Testing the `term` parameter requires a replica set.','line_number':360,'multiline':False]['text':' Unsupported index type (sparse).','line_number':382,'multiline':False]['text':' Fast path implementations assume a collection scan and therefore don't check indexes.','line_number':384,'multiline':False]['text':' Query with $natural on a collection with a sparse index (unsupported) is eligible for CQF.','line_number':390,'multiline':False]['text':' Unsupported index type (wildcard).','line_number':398,'multiline':False]['text':' Fast path implementations assume a collection scan and therefore don't check indexes.','line_number':402,'multiline':False]['text':' Query with $natural on a collection with a wildcard index (unsupported) is eligible for CQF.','line_number':408,'multiline':False]['text':' TTL index is not supported.','line_number':416,'multiline':False]['text':' Fast path implementations assume a collection scan and therefore don't check indexes.','line_number':419,'multiline':False]['text':' Query with $natural on a collection with a TTL index (unsupported) is eligible for CQF.','line_number':425,'multiline':False]['text':' Unsupported index with non-simple collation.','line_number':433,'multiline':False]['text':' Fast path implementations assume a collection scan and therefore don't check indexes.','line_number':436,'multiline':False]['text':' Query with $natural on a collection with a non-simple collation index (unsupported) is eligible','line_number':442,'multiline':False]['text':' for CQF.','line_number':443,'multiline':False]['text':' A simple collation on an index should only have experimental support in CQF.','line_number':451,'multiline':False]['text':' Query with $natural on a collection with a simple collation index (experimental) is eligible for','line_number':457,'multiline':False]['text':' CQF.','line_number':458,'multiline':False]['text':' A query against a collection with a secondary index should be eligible in the presence of a','line_number':466,'multiline':False]['text':' $natural hint.','line_number':467,'multiline':False]['text':' A query against a collection with a hidden index should be eligible for CQF.','line_number':477,'multiline':False]['text':' Unhiding the index means the query only has experimental support in CQF once again.','line_number':483,'multiline':False]['text':' A query against a collection with a hidden index should be eligible for CQF even if the','line_number':488,'multiline':False]['text':' underlying index is not supported.','line_number':489,'multiline':False]['text':' Unhiding the unsupported index means the query is not eligible for CQF.','line_number':495,'multiline':False]['text':' Fast path implementations assume a collection scan and therefore don't check indexes.','line_number':497,'multiline':False]['text':' Test-only index type.','line_number':503,'multiline':False]['text':' Query with $natural on a collection with a partial index (unsupported) is eligible for CQF.','line_number':510,'multiline':False]['text':' Queries on a collection with a hashed index are supported.','line_number':518,'multiline':False]['text':' Queries on a collection with a hashed index that reference _id only experimentally supported,','line_number':524,'multiline':False]['text':' tryBonsai falls back to classic engine','line_number':525,'multiline':False]['text':' Query with $natural on a collection with a hashed index on _id is only eligible for CQF with a','line_number':531,'multiline':False]['text':' $natural hint.','line_number':532,'multiline':False]['text':' Unsupported collection types. Note that a query against the user-facing timeseries collection','line_number':540,'multiline':False]['text':' will fail due to the unsupported $unpackBucket stage.','line_number':541,'multiline':False]['text':' Collection-default collation is not supported if non-simple.','line_number':551,'multiline':False]['text':' Queries against capped collections are not supported.','line_number':557,'multiline':False]['text':' Queries over views are supported as long as the resolved pipeline is valid in CQF.','line_number':563,'multiline':False]['text':' Unsupported expression on top of the view.','line_number':569,'multiline':False]['text':' Supported expression on top of the view.','line_number':572,'multiline':False]['text':' Test-only expression on top of a view.','line_number':577,'multiline':False]['text':' Create a view with an unsupported expression.','line_number':580,'multiline':False]['text':' Any expression, supported or not, should not use CQF over the invalid view.','line_number':584,'multiline':False]['text':' Test only expression should also fail.','line_number':587,'multiline':False]['text':' Unsupported commands.','line_number':590,'multiline':False]['text':' Pipeline with an ineligible stage and an eligible prefix that could be pushed down to the','line_number':608,'multiline':False]['text':' find layer should not use Bonsai.','line_number':609,'multiline':False]['text':' Pipeline with an CQF-eligible sub-pipeline.','line_number':617,'multiline':False]['text':' Note: we have to use a failpoint to determine whether we used the CQF codepath because the','line_number':618,'multiline':False]['text':' explain output does not have enough information to deduce the query framework for the','line_number':619,'multiline':False]['text':' subpipeline.','line_number':620,'multiline':False]['text':' Restart the mongod and verify that we never use the bonsai optimizer if the feature flag is not','line_number':643,'multiline':False]['text':' set.','line_number':644,'multiline':False]['text':' Show that trying to set the framework to tryBonsai is not permitted when the feature flag is off,','line_number':669,'multiline':False]['text':' but tryBonsaiExperimental and forceBonsai are allowed (since test commands are enabled here by','line_number':670,'multiline':False]['text':' default).','line_number':671,'multiline':False]['text':' Show that we can't start a mongod with the framework control set to tryBonsaiExperimental when','line_number':689,'multiline':False]['text':' test commands are off.','line_number':690,'multiline':False]['text':' This is expected.','line_number':702,'multiline':False]['text':' Show that we can't start a mongod with the framework control set to tryBonsai','line_number':708,'multiline':False]['text':' when the feature flag is off.','line_number':709,'multiline':False]['text':' This is expected.','line_number':719,'multiline':False]['text':' Show that finds and aggregations against sharded collections are eligible for bonsai.','line_number':725,'multiline':False]