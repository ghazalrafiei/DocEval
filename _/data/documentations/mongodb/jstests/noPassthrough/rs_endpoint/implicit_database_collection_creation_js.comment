['text':'
 * Tests that implicit database and collection creation works correctly when the replica set
 * endpoint is used. That is:
 * - The implicit creation does not deadlock due to session checkout if the command that triggers
 *   the creation is running inside a session or transaction.
 * - The collection has sharding metadata and the metadata is deleted correctly when the collection
 *   is dropped.
 *
 * @tags: [
 *   requires_fcv_73,
 *   featureFlagEmbeddedRouter,
 *   featureFlagTrackUnshardedCollectionsOnShardingCatalog,
 *   featureFlagSecurityToken,
 *   requires_persistence
 * ]
 ','line_number':1,'multiline':True]['text':' Disable implicit sessions since this test requires testing commands running not in a session.','line_number':31,'multiline':False]['text':' Truncate the uuid string to avoid exceeding the database name length limit when there is a','line_number':67,'multiline':False]['text':' tenant id prefix.','line_number':68,'multiline':False]['text':' Test implicit database and collection creation.','line_number':73,'multiline':False]['text':' Test implicit collection creation.','line_number':84,'multiline':False]['text':' The cluster now contains only one shard (shard0) which acts as also the config server so the','line_number':111,'multiline':False]['text':' commands against shard0 should go through the router code paths.','line_number':112,'multiline':False]['text':' TODO (PM-3364): Uncomment once we start tracking unsharded collections.','line_number':113,'multiline':False]['text':' Currently, sharding isn't supported in serverless.','line_number':115,'multiline':False]['text':' const expectShardingMetadata0 = !isMultitenant;','line_number':116,'multiline':False]['text':' maintenanceMode ','line_number':125,'multiline':True]['text':' The replica set endpoint should not dispatch any commands through the router code paths','line_number':131,'multiline':False]['text':' when the mongod is in maintenance mode.','line_number':132,'multiline':False]['text':' Retryable writes are not supported on a standalone mongod.','line_number':137,'multiline':False]['text':' Transactions are not supported on a standalone mongod.','line_number':143,'multiline':False]['text':' maintenanceMode ','line_number':156,'multiline':True]['text':' Currently, sharding isn't supported in serverless.','line_number':163,'multiline':False]['text':' const expectShardingMetadata2 = !isMultitenant;','line_number':164,'multiline':False]['text':' Currently, sharding isn't supported in serverless. So the cluster cannot become','line_number':171,'multiline':False]['text':' multi-shard.','line_number':172,'multiline':False]['text':' Add a second shard to the cluster.','line_number':177,'multiline':False]['text':' Run the addShard command against shard0's primary mongod instead to verify that','line_number':190,'multiline':False]['text':' replica set endpoint supports router commands.','line_number':191,'multiline':False]['text':' The cluster now contains more than one shard so the commands against shard0 should no longer','line_number':198,'multiline':False]['text':' go through the router code paths.','line_number':199,'multiline':False]['text':' TODO (SERVER-83380): Connect to the router port on a shardsvr mongod instead.','line_number':207,'multiline':False]['text':' The cluster now contains only one shard (shard1) but it is not the config server so','line_number':214,'multiline':False]['text':' commands against shard0 (config server) or shard1 should not go through the router code','line_number':215,'multiline':False]['text':' paths.','line_number':216,'multiline':False]['text':' Unset any existing "maintenanceMode" option.','line_number':237,'multiline':False]['text':' Unset any existing "maintenanceMode" option.','line_number':248,'multiline':False]['text':' TODO (SERVER-83433): Make the replica set have secondaries to get test coverage for','line_number':287,'multiline':False]['text':' running db hash check while the replica set is fsync locked.','line_number':288,'multiline':False]['text':' signal ','line_number':299,'multiline':True]['text':'forRestart ','line_number':299,'multiline':True]['text':' TODO (SERVER-81968): Re-enable single-shard cluster test cases once config shards support','line_number':309,'multiline':False]['text':' embedded routers.','line_number':310,'multiline':False]['text':' {','line_number':311,'multiline':False]['text':'     jsTest.log("Running tests for a single-shard cluster");','line_number':312,'multiline':False]['text':'     const setParameterOpts = {','line_number':313,'multiline':False]['text':'         featureFlagReplicaSetEndpoint: true,','line_number':314,'multiline':False]['text':'     };','line_number':315,'multiline':False]['text':'     const st = new ShardingTest({','line_number':316,'multiline':False]['text':'         shards: 1,','line_number':317,'multiline':False]['text':'         rs: {','line_number':318,'multiline':False]['text':'             // TODO (SERVER-83433): Make the replica set have secondaries to get test coverage','line_number':319,'multiline':False]['text':'             // for running db hash check while the replica set is fsync locked.','line_number':320,'multiline':False]['text':'             nodes: 1,','line_number':321,'multiline':False]['text':'             setParameter: setParameterOpts','line_number':322,'multiline':False]['text':'         },','line_number':323,'multiline':False]['text':'         configShard: true','line_number':324,'multiline':False]['text':'     });','line_number':325,'multiline':False]['text':'     const getShard0PrimaryFunc = () => {','line_number':326,'multiline':False]['text':'         return st.rs0.getPrimary();','line_number':327,'multiline':False]['text':'     };','line_number':328,'multiline':False]['text':'     const restartFunc = (maintenanceMode) => {','line_number':329,'multiline':False]['text':'         st.rs0.stopSet(null /* signal */, true /*forRestart */);','line_number':330,'multiline':False]['text':'         const restartOpts = getReplicaSetRestartOptions(maintenanceMode, setParameterOpts);','line_number':331,'multiline':False]['text':'         st.rs0.startSet(restartOpts);','line_number':332,'multiline':False]['text':'     };','line_number':333,'multiline':False]['text':'     const tearDownFunc = () => st.stop();','line_number':334,'multiline':False]['text':'     // TODO (SERVER-83371): Allow configsvr mongod to be restarted in maintenance mode. Remove','line_number':336,'multiline':False]['text':'     // the 'skipMaintenanceMode' option and its associated code.','line_number':337,'multiline':False]['text':'     runTests(getShard0PrimaryFunc, restartFunc, tearDownFunc, {skipMaintenanceMode: true});','line_number':338,'multiline':False]['text':' }','line_number':339,'multiline':False]['text':' For serverless, commands against user collections require the "$tenant" field and auth.','line_number':343,'multiline':False]['text':' signal ','line_number':394,'multiline':True]['text':'forRestart ','line_number':394,'multiline':True]