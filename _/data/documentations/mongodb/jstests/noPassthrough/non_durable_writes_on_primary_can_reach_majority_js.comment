['text':'*
 * Tests that non-durable writes on the primary can be successfully majority confirmed by the
 * secondaries.
 *
 * Skipping persistence on the primary will hold back its durable timestamp used for cross-replica
 * set write concern confirmation.
 *
 * First tests that writes can be majority confirmed without the primary by two secondaries.
 * Then tests that writes cannot be majority confirmed without the primary and only one secondary.
 *
 * @tags: [
 *   requires_persistence,
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]['text':' Make sure there are no election timeouts. This should prevent primary stepdown. Normally we would','line_number':33,'multiline':False]['text':' set the secondary node votes to 0, but that would affect the feature that is being tested.','line_number':34,'multiline':False]['text':' Do a write and then fetch and save the durable and majority timestamps on the primary.','line_number':45,'multiline':False]['text':' Use {w: 3, j: true} write concern to make sure the timestamps are stable.','line_number':46,'multiline':False]['text':' Configure the primary to stop moving the durable timestamp forward. The primary will no longer be','line_number':60,'multiline':False]['text':' able to contribute to moving the replica set's majority timestamp forward because the replica','line_number':61,'multiline':False]['text':' set's majority timestamp depends upon each member's durable timestamp,','line_number':62,'multiline':False]['text':' Perform some writes with majority write concern. The primary cannot confirm them, so success','line_number':66,'multiline':False]['text':' means that the secondaries have the writes durably.','line_number':67,'multiline':False]['text':' Check that the primary's durable timestamp has not moved forward, but the majority point has.','line_number':74,'multiline':False]['text':' Check that the secondaries' durable timestamps have moved forward.','line_number':82,'multiline':False]['text':' Shutdown a secondary so that there is no longer a majority able to confirm the durability of','line_number':90,'multiline':False]['text':' a write.','line_number':91,'multiline':False]['text':' Now writes cannot reach majority without the primary. We will do {w: 2, j: false} writes to','line_number':99,'multiline':False]['text':' get the writes on both remaining nodes. Then follow up with fsync commands againt the two','line_number':100,'multiline':False]['text':' nodes to make sure the durable timestamps move forward if possible -- this will work only on','line_number':101,'multiline':False]['text':' the secondary, the primary's durable timestamp will not move.','line_number':102,'multiline':False]['text':' Check that the primary's durable and majority timestamps have not moved forward.','line_number':113,'multiline':False]['text':' Check that the secondary's durable timestamp has moved forward, but the majority has not.','line_number':121,'multiline':False]['text':' Durable timestamp is advanced by the journal flusher, not the fsync command. Keep retrying','line_number':122,'multiline':False]['text':' until the secondary's durable timestamp has advanced past the majority timestamp.','line_number':123,'multiline':False]['text':' Turn off the failpoint before allowing the test to end, so nothing hangs while the server','line_number':135,'multiline':False]['text':' shuts down or in post-test hooks.','line_number':136,'multiline':False]