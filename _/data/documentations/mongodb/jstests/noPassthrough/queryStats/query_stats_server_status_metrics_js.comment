['text':'*
 * Test the queryStats related serverStatus metrics.
 * @tags: [requires_fcv_72]
 ','line_number':1,'multiline':True]['text':' Helper to round up to the next highest power of 2 for our estimation.','line_number':18,'multiline':False]['text':' Metrics stored per shape.','line_number':32,'multiline':False]['text':' top-level ','line_number':34,'multiline':True]['text':' those with sum, min, max, sumOfSquares ','line_number':34,'multiline':True]['text':' Just a sample, will change based on where the test is run - shouldn't be off by too much','line_number':36,'multiline':False]['text':' though.','line_number':37,'multiline':False]['text':' This is likely not to be exact - we are probably forgetting something. But we don't need','line_number':46,'multiline':False]['text':' to be exact, just "good enough."','line_number':47,'multiline':False]['text':'*
 * Test serverStatus metric which counts the number of evicted entries.
 *
 * testOptions must include `resetCacheSize` bool field; e.g., { resetCacheSize : true }
 ','line_number':60,'multiline':True]['text':' Make sure number of evicted entries increases when the cache size is reset, which forces out','line_number':74,'multiline':False]['text':' least recently used entries to meet the new, smaller size requirement.','line_number':75,'multiline':False]['text':'*
 * Test serverStatus metric which counts the number of requests for which queryStats is not
 * collected due to rate-limiting.
 *
 * testOptions must include `samplingRate` and `numRequests` number fields;
 *  e.g., { samplingRate: -1, numRequests: 20 }
 ','line_number':83,'multiline':True]['text':' Running numRequests / 2 times since we dispatch two requests per iteration','line_number':97,'multiline':False]['text':' queryStats should not be collected for any requests.','line_number':107,'multiline':False]['text':' queryStats should be collected for all requests.','line_number':110,'multiline':False]['text':' queryStats should be collected for some but not all requests.','line_number':113,'multiline':False]['text':' Only using three digit numbers (eg 100, 101) means the string length will be the same for all','line_number':122,'multiline':False]['text':' entries and therefore the key size will be the same for all entries, which makes predicting','line_number':123,'multiline':False]['text':' the total size of the store clean and easy.','line_number':124,'multiline':False]['text':' Confirm that queryStats store has grown and size is non-zero.','line_number':132,'multiline':False]['text':' Make sure the final queryStats store size is twice as much as the halfway point size (+/- 5%)','line_number':136,'multiline':False]['text':' Command should succeed and record the error.','line_number':151,'multiline':False]['text':' Make sure that we recorded a write error for each run.','line_number':157,'multiline':False]['text':'*
 * Test that running the $queryStats aggregation stage correctly does or does not impact
 * serverStatus counters (whichever is applicable).
 ','line_number':161,'multiline':True]['text':' First, ensure that the query stats store is empty.','line_number':166,'multiline':False]['text':' Insert some query stats data and capture "before" serverStatus metrics.','line_number':170,'multiline':False]['text':' Run a $queryStats pipeline. We should insert a new entry for this query.','line_number':178,'multiline':False]['text':' Now run $queryStats again. The command should be fully read-only.','line_number':190,'multiline':False]['text':'*
 * In this configuration, we insert enough entries into the queryStats store to trigger LRU
 * eviction.
 ','line_number':202,'multiline':True]['text':'*
 * In this configuration, eviction is triggered only when the queryStats store size is reset.
 *
 * Use an 8MB upper limit since our estimated size of the query stats entry is pretty rough and
 * meant to give us some wiggle room so we don't have to keep adjusting this test as we tweak it.
 ','line_number':211,'multiline':True]['text':'*
 * In this configuration, every query is sampled, so no requests should be rate-limited.
 ','line_number':223,'multiline':True]['text':'*
 * In this configuration, the sampling rate is set so that some but not all requests are
 * rate-limited.
 ','line_number':232,'multiline':True]['text':'*
 * Sample all queries and assert that the size of queryStats store is equal to num entries * entry
 * size
 ','line_number':242,'multiline':True]['text':'*
 * Use a very small queryStats store size and assert that errors in writing to the queryStats store
 * are tracked.
 ','line_number':251,'multiline':True]['text':'*
 * Tests that $queryStats has expected effects (or no effect) on counters.
 ','line_number':260,'multiline':True]