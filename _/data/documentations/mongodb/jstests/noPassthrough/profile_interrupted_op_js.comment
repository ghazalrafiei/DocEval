['text':'*
 * Tests that when the profiler (introspect.cpp) wants to log an operation but the
 * 'system.profiler' collection does not yet exist and the operation context is an interrupted
 * state, the collection can still be successfully created on the fly.
 *
 * This test restarts the server and requires that data persists across restarts.
 * @tags: [requires_persistence, requires_profiling]
 ','line_number':1,'multiline':True]['text':'','line_number':9,'multiline':False]['text':' Start mongo with profiling disabled, create an empty database, and populate it with a','line_number':10,'multiline':False]['text':' collection that has one document.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' Stop the mongod and then restart it, this time with profiling enabled. Note that enabling','line_number':23,'multiline':False]['text':' profiling on a running database would create the 'system.profile' collection, which we don't','line_number':24,'multiline':False]['text':' yet want created for this test.','line_number':25,'multiline':False]['text':'','line_number':26,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' Execute a query that will get interrupted for exceeding its 'maxTimeMS' value. The profiler','line_number':32,'multiline':False]['text':' will attempt to create the 'system.profile' collection while the operation context is already','line_number':33,'multiline':False]['text':' marked as interrupted.','line_number':34,'multiline':False]['text':'','line_number':35,'multiline':False]['text':' The mongod should have created the 'system.profile' collection automatically.','line_number':51,'multiline':False]