['text':'*
 * Tests that operation metrics are not increased while waiting for write concern.
 *
 * @tags: [
 *   # j:true requires persistence
 *   requires_persistence,
 *   requires_replication,
 * ]
 ','line_number':1,'multiline':True]['text':' This test reproduces the diagram below, which shows how Writer 1 can end up reading the oplog','line_number':11,'multiline':False]['text':' entry generated by Writer 2 when waiting for write concern. On serverless environments this can','line_number':12,'multiline':False]['text':' cause a user to be billed improperly billed for RPUs caused by reading large entries written by','line_number':13,'multiline':False]['text':' other tenants.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':'  | Writer 1          | Writer 2     |','line_number':16,'multiline':False]['text':'  |-------------------+--------------|','line_number':17,'multiline':False]['text':'  | BeginTxn          |              |','line_number':18,'multiline':False]['text':'  | Timestamp 10      |              |','line_number':19,'multiline':False]['text':'  |                   | BeginTxn     |','line_number':20,'multiline':False]['text':'  | Write A           |              |','line_number':21,'multiline':False]['text':'  |                   | Update B     |','line_number':22,'multiline':False]['text':'  |                   | Timestamp 11 |','line_number':23,'multiline':False]['text':'  | Commit            |              |','line_number':24,'multiline':False]['text':'  | OnCommit hooks    |              |','line_number':25,'multiline':False]['text':'  |                   | Commit       |','line_number':26,'multiline':False]['text':'  | WaitForTopOfOplog |              |','line_number':27,'multiline':False]['text':' Returns metrics aggregated by database name.','line_number':31,'multiline':False]['text':' Remove localTime field as it prevents us from comparing objects since it always changes.','line_number':37,'multiline':False]['text':' Create coll to avoid implicit creation.','line_number':58,'multiline':False]['text':' Insert document to be updated by Writer 2.','line_number':60,'multiline':False]['text':' Write a large record which is going to be the top of the oplog.','line_number':71,'multiline':False]['text':' Ensure Writer 1 has fetched the op time before starting up Writer 2.','line_number':82,'multiline':False]['text':' We want Writer 2 to perform the update after Writer 1 has fetched the oplog.','line_number':85,'multiline':False]['text':' Stop the primary from calling into awaitReplication()','line_number':90,'multiline':False]['text':' Unblock Writer 1 so it performs the insert and then blocks on hangBeforeWaitingForWriteConcern.','line_number':94,'multiline':False]['text':' Unblock Writer 2, which should commit after Writer 1.','line_number':96,'multiline':False]['text':' Waiting for write concern.','line_number':99,'multiline':False]['text':' Make sure waitForWriteConcernDurationMillis exists in the currentOp query.','line_number':103,'multiline':False]['text':' Unblock write concern wait.','line_number':114,'multiline':False]['text':' Check for the existence of waitForWriteConcernDurationMillis field in slow query.','line_number':120,'multiline':False]['text':' docBytesRead should be much smaller than 100kb. A threshold at 10kb should be enough.','line_number':128,'multiline':False]