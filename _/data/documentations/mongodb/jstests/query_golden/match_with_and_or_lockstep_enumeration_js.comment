['text':'*
 * Test a particular nested $and/$or query. This test was designed to reproduce SERVER-83091, a bug
 * in which this query could trigger an infinite loop during plan enumeration.
 ','line_number':2,'multiline':True]['text':' We test running the $and/$or query with both the boolean simplification module enabled and with','line_number':9,'multiline':False]['text':' it disabled.','line_number':10,'multiline':False]['text':' At the time when SERVER-83091 was filed, match expression rewrites would rewrite the {b: 4} and','line_number':15,'multiline':False]['text':' {b: 5} to {b: {$in: [4, 5]}}, resulting in a nested $or predicate which looks like this:','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' $and','line_number':18,'multiline':False]['text':'   a $eq 1','line_number':19,'multiline':False]['text':'   $or','line_number':20,'multiline':False]['text':'     b $in [ 4, 5 ]','line_number':21,'multiline':False]['text':'     $or','line_number':22,'multiline':False]['text':'       $and','line_number':23,'multiline':False]['text':'         b $eq 2','line_number':24,'multiline':False]['text':'         c $eq 3','line_number':25,'multiline':False]['text':'       b $in [ 6, 7 ]','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' The fact that this rewrite could result in an $or with a direct $or child was key to reproducing','line_number':28,'multiline':False]['text':' SERVER-83091. Note that SERVER-83602 improves the system such that it will not unnecessarily','line_number':29,'multiline':False]['text':' generate an $or with a direct $or child.','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' When boolean simplification is off, this nested $or is never simplified later on. (Even without','line_number':32,'multiline':False]['text':' boolean simplification on, if the query is originally expressed with a nested $or it will get','line_number':33,'multiline':False]['text':' simplified; that's why the repro requires an $or containing some predicates that get rewritten to','line_number':34,'multiline':False]['text':' an $in.) The bug related to how lockstep enumeration dealt with nested $or nodes. A very','line_number':35,'multiline':False]['text':' particular query structure was also necessary, because to exercise the bug we needed to get into','line_number':36,'multiline':False]['text':' a state where the inner $or reached its limit on the number of plans it was willing to enumerate','line_number':37,'multiline':False]['text':' before the outer plan did.','line_number':38,'multiline':False]['text':' No "a" field.','line_number':52,'multiline':False]['text':' "a" does not match.','line_number':55,'multiline':False]['text':' No matching "b" or "c" value.','line_number':58,'multiline':False]['text':' Matching values.','line_number':62,'multiline':False]['text':' Get the default parameter value so it can be correctly reset if the test fails. Then run the test','line_number':86,'multiline':False]['text':' with boolean simplification enabled and with it disabled.','line_number':87,'multiline':False]