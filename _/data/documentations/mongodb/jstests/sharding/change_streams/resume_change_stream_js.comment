['text':' Tests resuming change streams on sharded collections.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   requires_majority_read_concern,','line_number':4,'multiline':False]['text':'   uses_change_streams,','line_number':5,'multiline':False]['text':' ]','line_number':6,'multiline':False]['text':' size in MB','line_number':10,'multiline':False]['text':' Use the noop writer with a higher frequency for periodic noops to speed up the test.','line_number':17,'multiline':False]['text':' Enable sharding on the test DB and ensure its primary is st.shard0.shardName.','line_number':30,'multiline':False]['text':' Shard the test collection on _id.','line_number':34,'multiline':False]['text':' Split the collection into 2 chunks: [MinKey, 0), [0, MaxKey].','line_number':38,'multiline':False]['text':' Move the [0, MaxKey] chunk to st.shard1.shardName.','line_number':42,'multiline':False]['text':' Write a document to each chunk.','line_number':46,'multiline':False]['text':' We awaited the replication of the first writes, so the change stream shouldn't return','line_number':53,'multiline':False]['text':' them.','line_number':54,'multiline':False]['text':' Record current time to resume a change stream later in the test.','line_number':57,'multiline':False]['text':' Test that we see the two writes, and remember their resume tokens.','line_number':62,'multiline':False]['text':' Write some additional documents, then test that it's possible to resume after the first','line_number':73,'multiline':False]['text':' update.','line_number':74,'multiline':False]['text':' Test that the stream can't resume if the resume token is no longer present in the oplog.','line_number':87,'multiline':False]['text':' Roll over the entire oplog on the shard with the resume token for the first update.','line_number':89,'multiline':False]['text':' Resume from shard 1.','line_number':90,'multiline':False]['text':' The oplog has rolled over if the op that used to be newest is now older than the','line_number':97,'multiline':False]['text':' oplog's current oldest entry. Said another way, the oplog is rolled over when','line_number':98,'multiline':False]['text':' everything in the oplog is newer than what used to be the newest entry.','line_number':99,'multiline':False]['text':' Test that the change stream can't resume if the resume token *is* present in the oplog,','line_number':126,'multiline':False]['text':' but one of the shards has rolled over its oplog enough that it doesn't have a long enough','line_number':127,'multiline':False]['text':' history to resume. Since we just rolled over the oplog on shard 1, we know that','line_number':128,'multiline':False]['text':' 'resumeTokenFromFirstUpdateOnShard0' is still present on shard 0, but shard 1 doesn't','line_number':129,'multiline':False]['text':' have any changes earlier than that, so won't be able to resume.','line_number':130,'multiline':False]['text':' Drop the collection.','line_number':138,'multiline':False]['text':' Shard the test collection on shardKey.','line_number':141,'multiline':False]['text':' Split the collection into 2 chunks: [MinKey, 50), [50, MaxKey].','line_number':145,'multiline':False]['text':' Move the [50, MaxKey] chunk to st.shard1.shardName.','line_number':149,'multiline':False]['text':' Insert test documents.','line_number':155,'multiline':False]['text':' Perform the multi-update that will induce timestamp collisions','line_number':172,'multiline':False]['text':' Loop over documents and open inner change streams resuming from a specified position.','line_number':175,'multiline':False]['text':' Note we skip the last document as it does not have the next document so we would','line_number':176,'multiline':False]['text':' hang indefinitely.','line_number':177,'multiline':False]['text':' Test change stream on a single collection.','line_number':192,'multiline':False]['text':' Test change stream on all collections.','line_number':195,'multiline':False]