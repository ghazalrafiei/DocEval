['text':'
 * Utilities for testing that internal transactions for retryable writes can be retried.
 ','line_number':1,'multiline':True]['text':' This read from the oplog can fail with CappedPositionLost if the oplog is','line_number':24,'multiline':False]['text':' concurrently truncated, but the test should only need the oplog entries','line_number':25,'multiline':False]['text':' from a recent transaction, which shouldn't be truncated because of the','line_number':26,'multiline':False]['text':' increased oplog size, so it should be safe to retry on this error.','line_number':27,'multiline':False]['text':' Transactions with more than two operations will have the behavior of large transactions and','line_number':43,'multiline':False]['text':' span multiple oplog entries.','line_number':44,'multiline':False]['text':' Set a large oplogSize since this test runs a find command to get the oplog entries for','line_number':47,'multiline':False]['text':' every transaction that it runs including large transactions and with the default oplogSize,','line_number':48,'multiline':False]['text':' oplog reading done by the find command may not be able to keep up with the oplog truncation,','line_number':49,'multiline':False]['text':' causing the command to fail with CappedPositionLost.','line_number':50,'multiline':False]['text':' Used when testing large transactions (i.e. in 'testRetryLargeTxn') for specifying which','line_number':64,'multiline':False]['text':' applyOps oplog entry should contain the entry for retryable write being tested.','line_number':65,'multiline':False]['text':' 'testRetryLargeTxn' runs a large transaction with three applyOps oplog entries.','line_number':66,'multiline':False]['text':' A findAndModify write statement in a non-retryable transaction will not generate a','line_number':137,'multiline':False]['text':' pre/post image.','line_number':138,'multiline':False]['text':' Initial try.','line_number':143,'multiline':False]['text':' Retry.','line_number':164,'multiline':False]['text':' Initial try.','line_number':183,'multiline':False]['text':' Retry in the initial internal transaction. No need to commit since the transaction has','line_number':205,'multiline':False]['text':' already committed.','line_number':206,'multiline':False]['text':' Retry in a different internal transaction (running in an internal session with a','line_number':210,'multiline':False]['text':' different txnUUID) to simulate a retry from a different mongos.','line_number':211,'multiline':False]['text':' isRetry ','line_number':220,'multiline':True]['text':' The retry should not generate any persisted transaction state.','line_number':227,'multiline':False]['text':' Initial try.','line_number':273,'multiline':False]['text':' stmtId is one greater than the total number of statements executed in the transaction.','line_number':305,'multiline':False]['text':' Retry in the initial internal transaction. No need to commit since the transaction has','line_number':317,'multiline':False]['text':' already committed.','line_number':318,'multiline':False]['text':' Retry in a different internal transaction (running in an internal session with a','line_number':322,'multiline':False]['text':' different txnUUID) to simulate a retry from a different mongos.','line_number':323,'multiline':False]['text':' isRetry ','line_number':338,'multiline':True]['text':' The retry should not generate any persisted transaction state.','line_number':345,'multiline':False]['text':' This fixture only supports testing large retryable transactions since when a','line_number':363,'multiline':False]['text':' non-retryable transaction is retried, it fails before the it even starts so','line_number':364,'multiline':False]['text':' testing with a large transaction doesn't add any test coverage.','line_number':365,'multiline':False]['text':' no pre or post image.','line_number':474,'multiline':False]['text':'','line_number':627,'multiline':False]['text':' Test multi updates.','line_number':628,'multiline':False]['text':'','line_number':629,'multiline':False]['text':' Updates with an initialized stmtId should fail.','line_number':631,'multiline':False]['text':' The documents shouldn't have been updated.','line_number':648,'multiline':False]['text':' Updates with the uninitialized stmtId should succeed.','line_number':651,'multiline':False]['text':' The documents should have been updated.','line_number':667,'multiline':False]['text':'','line_number':675,'multiline':False]['text':' Test multi deletes.','line_number':676,'multiline':False]['text':'','line_number':677,'multiline':False]['text':' Deletes with an initialized stmtId should fail.','line_number':679,'multiline':False]['text':' The documents shouldn't have been deleted.','line_number':697,'multiline':False]['text':' Deletes with the uninitialized stmtId should succeed.','line_number':700,'multiline':False]['text':' The documents should have been deleted.','line_number':716,'multiline':False]['text':'','line_number':727,'multiline':False]['text':' Test multi updates.','line_number':728,'multiline':False]['text':'','line_number':729,'multiline':False]['text':' The documents should have been updated.','line_number':743,'multiline':False]['text':'','line_number':747,'multiline':False]['text':' Test multi deletes.','line_number':748,'multiline':False]['text':'','line_number':749,'multiline':False]['text':' The documents should have been deleted.','line_number':768,'multiline':False]