['text':'*
 * Test resuming a change stream on a node other than the one it was started on. Accomplishes this
 * by triggering a stepdown.
 * @tags: [
 *   requires_majority_read_concern,
 *   uses_change_streams,
 * ]
 ','line_number':1,'multiline':True]['text':' Checking UUID consistency uses cached connections, which are not valid across restarts or','line_number':10,'multiline':False]['text':' stepdowns.','line_number':11,'multiline':False]['text':' Split so ids < nDocs / 2 are for one shard, ids >= nDocs / 2 + 1 for another.','line_number':33,'multiline':False]['text':' key','line_number':36,'multiline':False]['text':' split','line_number':37,'multiline':False]['text':' move','line_number':38,'multiline':False]['text':' dbName','line_number':39,'multiline':False]['text':' waitForDelete','line_number':40,'multiline':False]['text':' Be sure we'll only read from the primaries.','line_number':43,'multiline':False]['text':' Open a changeStream.','line_number':46,'multiline':False]['text':' Be sure we can read from the change stream. Write some documents that will end up on','line_number':50,'multiline':False]['text':' each shard. Use a bulk write to increase the chance that two of the writes get the same','line_number':51,'multiline':False]['text':' cluster time on each shard.','line_number':52,'multiline':False]['text':' Interleave elements which will end up on shard 0 with elements that will end up on','line_number':56,'multiline':False]['text':' shard 1.','line_number':57,'multiline':False]['text':' Use {w: "majority"} so that we're still guaranteed to be able to read after the','line_number':63,'multiline':False]['text':' failover.','line_number':64,'multiline':False]['text':' Make one of the primaries step down.','line_number':69,'multiline':False]['text':' Be sure the new primary is not the previous primary.','line_number':76,'multiline':False]['text':' Read the remaining documents from the original stream.','line_number':79,'multiline':False]['text':' Assert that we found the documents we inserted (in any order).','line_number':89,'multiline':False]['text':' Now resume using the resume token from the first change (which was read before the','line_number':92,'multiline':False]['text':' failover). The mongos should talk to the new primary.','line_number':93,'multiline':False]['text':' Be sure we can read the remaining changes in the same order as we read them initially.','line_number':97,'multiline':False]['text':' Reset the original primary's election timeout.','line_number':101,'multiline':False]