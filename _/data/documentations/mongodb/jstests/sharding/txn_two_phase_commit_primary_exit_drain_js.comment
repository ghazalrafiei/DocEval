['text':'*
 * Exercises the coordinator commands logic to test if a primary exits drain mode after the primary
 * steps down during a basic two phase commit.
 *
 * @tags: [uses_transactions, uses_prepare_transaction, uses_multi_shard_transaction,
 * multiversion_incompatible]
 ','line_number':1,'multiline':True]['text':' Create a sharded collection with a chunk on each shard:','line_number':40,'multiline':False]['text':' shard0: [-inf, 0)','line_number':41,'multiline':False]['text':' shard1: [0, 10)','line_number':42,'multiline':False]['text':' shard2: [10, +inf)','line_number':43,'multiline':False]['text':' Start a new transaction by inserting a document onto each shard.','line_number':54,'multiline':False]['text':' Check that the coordinator wrote the decision.','line_number':79,'multiline':False]['text':' The replSetFreeze command will cause the node to run for primary on its own.','line_number':85,'multiline':False]['text':' The primary won't be able to exit drain mode while the','line_number':88,'multiline':False]['text':' hangBeforeWaitingForDecisionWriteConcern failpoint is active.','line_number':89,'multiline':False]['text':' However after the hangBeforeWaitingForDecisionWriteConcern failpoint is disabled the primary','line_number':94,'multiline':False]['text':' is expected to exit drain mode.','line_number':95,'multiline':False]['text':' Check that the coordinator deleted its persisted state.','line_number':99,'multiline':False]['text':' Check that the transaction committed as expected.','line_number':104,'multiline':False]['text':' Use assert.soon(), because although coordinateCommitTransaction currently blocks','line_number':107,'multiline':False]['text':' until the commit process is fully complete, it will eventually be changed to only','line_number':108,'multiline':False]['text':' block until the decision is *written*, so the documents may not be visible','line_number':109,'multiline':False]['text':' immediately.','line_number':110,'multiline':False]