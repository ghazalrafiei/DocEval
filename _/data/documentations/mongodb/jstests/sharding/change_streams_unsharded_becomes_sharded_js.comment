['text':' Tests the behavior of change streams on a collection that was initially unsharded but then','line_number':1,'multiline':False]['text':' becomes sharded. In particular, test that post-shardCollection inserts update their cached','line_number':2,'multiline':False]['text':' 'documentKey' to include the new shard key, and that a resume token obtained prior to the','line_number':3,'multiline':False]['text':' shardCollection command can be used to resume the stream even after the collection has been','line_number':4,'multiline':False]['text':' sharded.','line_number':5,'multiline':False]['text':' @tags: [','line_number':6,'multiline':False]['text':'   requires_majority_read_concern,','line_number':7,'multiline':False]['text':'   uses_change_streams,','line_number':8,'multiline':False]['text':'   # TODO SERVER-30784: Remove 'multiversion_incompatible' tag and','line_number':9,'multiline':False]['text':'   # 'throwChangeStreamTopologyChangeExceptionToClient'.','line_number':10,'multiline':False]['text':'   multiversion_incompatible','line_number':11,'multiline':False]['text':' ]','line_number':12,'multiline':False]['text':' Use a higher frequency for periodic noops to speed up the test.','line_number':22,'multiline':False]['text':' Establish a change stream cursor on the unsharded collection.','line_number':37,'multiline':False]['text':' Create a different collection in the same database, and verify that it doesn't affect the','line_number':40,'multiline':False]['text':' results of the change stream.','line_number':41,'multiline':False]['text':' Verify that the cursor picks up documents inserted while the collection is unsharded. The','line_number':53,'multiline':False]['text':' 'documentKey' at this point is simply the _id field.','line_number':54,'multiline':False]['text':' Record the resume token for this change, before the collection is sharded.','line_number':67,'multiline':False]['text':' Shard the test collection with shard key {x: 1} and split into 2 chunks.','line_number':70,'multiline':False]['text':' Shard the other collection with shard key {y: 1} and split into 2 chunks.','line_number':73,'multiline':False]['text':' List the changes we expect to see for the next two operations on the sharded collection.','line_number':76,'multiline':False]['text':' Later, we will resume the stream using the token generated before the collection was','line_number':77,'multiline':False]['text':' sharded, and will need to confirm that we can still see these two changes.','line_number':78,'multiline':False]['text':' Verify that the cursor on the original shard is still valid and sees new inserted','line_number':94,'multiline':False]['text':' documents. The 'documentKey' field should now include the shard key.','line_number':95,'multiline':False]['text':' Move the [minKey, 0) chunk to shard1.','line_number':100,'multiline':False]['text':' Make sure the change stream cursor sees a document inserted on the recipient shard.','line_number':114,'multiline':False]['text':' Confirm that we can resume the stream on the sharded collection using the token generated','line_number':119,'multiline':False]['text':' while the collection was unsharded, whose documentKey contains the _id field but not the','line_number':120,'multiline':False]['text':' shard key.','line_number':121,'multiline':False]['text':' Verify that we see both of the insertions which occurred after the collection was','line_number':127,'multiline':False]['text':' sharded.','line_number':128,'multiline':False]['text':' Test the behavior of a change stream when a sharded collection is dropped and recreated.','line_number':132,'multiline':False]['text':' Insert a couple documents to shard1, creating a scenario where the getMore to shard0 will','line_number':139,'multiline':False]['text':' indicate that the change stream is invalidated yet shard1 will still have data to return.','line_number':140,'multiline':False]['text':' Drop and recreate the collection.','line_number':144,'multiline':False]['text':' Shard the collection on a different shard key and ensure that each shard has a chunk.','line_number':149,'multiline':False]['text':' Verify that the change stream picks up the inserts. The shard keys are present since they are','line_number':155,'multiline':False]['text':' recorded in the oplog.','line_number':156,'multiline':False]['text':' Verify that the kNewShardDetected event is successfully delivered to mongoS even in cases','line_number':175,'multiline':False]['text':' where the event does not match the user's filter.','line_number':176,'multiline':False]['text':' TODO SERVER-30784: remove this test-case, or rework it without the failpoint, when the','line_number':177,'multiline':False]['text':' kNewShardDetected event is the only way we detect a new shard for the collection.','line_number':178,'multiline':False]['text':' First test against a change stream on a single collection.','line_number':196,'multiline':False]['text':' Test against a change stream on the entire database.','line_number':199,'multiline':False]