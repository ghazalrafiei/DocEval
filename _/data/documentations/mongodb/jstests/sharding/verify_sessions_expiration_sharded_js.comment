['text':' Tests valid coordination of the expiration and vivification of documents between the','line_number':1,'multiline':False]['text':' config.system.sessions collection and the logical session cache.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' 1. Sessions should be removed from the logical session cache when they expire from','line_number':4,'multiline':False]['text':'    the config.system.sessions collection.','line_number':5,'multiline':False]['text':' 2. getMores run on open cursors should update the lastUse field on documents in the','line_number':6,'multiline':False]['text':'    config.system.sessions collection, prolonging the time for expiration on said document','line_number':7,'multiline':False]['text':'    and corresponding session.','line_number':8,'multiline':False]['text':' 3. Open cursors that are not currently in use should be killed when their corresponding sessions','line_number':9,'multiline':False]['text':'    expire from the config.system.sessions collection.','line_number':10,'multiline':False]['text':' 4. Currently running operations corresponding to a session should prevent said session from','line_number':11,'multiline':False]['text':'    expiring from the config.system.sessions collection. If the expiration date has been reached','line_number':12,'multiline':False]['text':'    during a currently running operation, the logical session cache should vivify the session and','line_number':13,'multiline':False]['text':'    replace it in the config.system.sessions collection.','line_number':14,'multiline':False]['text':' This test makes assertions about the number of logical session records.','line_number':16,'multiline':False]['text':'
 * Refresh logical session cache on mongos and shard and check that each one of the session IDs in
 * the 'expectedSessionIDs' array exist. If 'expectToExist' is false, checks that they don't exist.
 ','line_number':29,'multiline':True]['text':' Assert that 'expectedSessionIDs' is a subset of 'sessionIDs'','line_number':40,'multiline':False]['text':' Explicitly create the test db before clearing config.system.sessions (the DDL is committed','line_number':68,'multiline':False]['text':' through an internal transaction).','line_number':69,'multiline':False]['text':' 1. Verify that sessions expire from config.system.sessions after the timeout has passed.','line_number':72,'multiline':False]['text':' Manually delete entries in config.system.sessions to simulate TTL expiration.','line_number':81,'multiline':False]['text':' expectToExist ','line_number':83,'multiline':True]['text':' 2. Verify that getMores after finds will update the 'lastUse' field on documents in the','line_number':85,'multiline':False]['text':' config.system.sessions collection.','line_number':86,'multiline':False]['text':' 3. Verify that letting sessions expire (simulated by manual deletion) will kill their','line_number':129,'multiline':False]['text':' cursors.','line_number':130,'multiline':False]['text':' expectToExist ','line_number':133,'multiline':True]['text':' 4. Verify that an expired session (simulated by manual deletion) that has a currently','line_number':143,'multiline':False]['text':' running operation will be vivified during the logical session cache refresh.','line_number':144,'multiline':False]