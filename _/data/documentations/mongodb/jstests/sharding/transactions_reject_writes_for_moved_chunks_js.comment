['text':' Verify shards reject writes in a transaction to chunks that have moved since the transaction's','line_number':1,'multiline':False]['text':' read timestamp.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' @tags: [','line_number':4,'multiline':False]['text':'   requires_sharding,','line_number':5,'multiline':False]['text':'   uses_multi_shard_transaction,','line_number':6,'multiline':False]['text':'   uses_transactions,','line_number':7,'multiline':False]['text':' ]','line_number':8,'multiline':False]['text':' hashed ns','line_number':30,'multiline':False]['text':' Start a transaction on Shard0 which will select and pin a global read timestamp.','line_number':42,'multiline':False]['text':' Move a chunk from Shard1 to Shard2 outside of the transaction. This will happen at a','line_number':45,'multiline':False]['text':' later logical time than the transaction's read timestamp.','line_number':46,'multiline':False]['text':' If the chunk is moved back to the shard that owned it at the transaction's read','line_number':50,'multiline':False]['text':' timestamp the later write should still be rejected because conflicting operations may','line_number':51,'multiline':False]['text':' have occurred while the chunk was moved away, which otherwise may not be detected','line_number':52,'multiline':False]['text':' when the shard prepares the transaction.','line_number':53,'multiline':False]['text':' Flush metadata on the destination shard so the next request doesn't encounter','line_number':56,'multiline':False]['text':' StaleConfig. The router refreshes after moving a chunk, so it will already be fresh.','line_number':57,'multiline':False]['text':' The find should target shard0 and find the doc. If it targets shard1, it will not be able to','line_number':64,'multiline':False]['text':' find the doc because it is using the snapshot for the pinned global read timestamp.','line_number':65,'multiline':False]['text':' The write should always fail, but the particular error varies.','line_number':70,'multiline':False]['text':' On slow hosts, this request can always fail with SnapshotTooOld or StaleChunkHistory if','line_number':80,'multiline':False]['text':' a migration takes long enough.','line_number':81,'multiline':False]['text':' Insert always inserts a new document, so the only typical error is MigrationConflict.','line_number':85,'multiline':False]['text':' The other commands modify an existing document so they may also fail with','line_number':89,'multiline':False]['text':' WriteConflict, depending on when orphaned documents are modified.','line_number':90,'multiline':False]['text':' Orphans from the first migration must have been deleted before the chunk was','line_number':93,'multiline':False]['text':' moved back, so the only typical error is WriteConflict.','line_number':94,'multiline':False]['text':' If the chunk wasn't moved back, the write races with the range deleter. If the','line_number':97,'multiline':False]['text':' range deleter has not run, the write should fail with MigrationConflict,','line_number':98,'multiline':False]['text':' otherwise with WriteConflict, so both codes are acceptable.','line_number':99,'multiline':False]['text':' The commit should fail because the earlier write failed.','line_number':106,'multiline':False]['text':' Move the chunk back to Shard1, if necessary, and reset the database state for the next','line_number':110,'multiline':False]['text':' iteration.','line_number':111,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////////////////////////','line_number':135,'multiline':False]['text':'','line_number':136,'multiline':False]['text':' Ranged Sharding Test','line_number':137,'multiline':False]['text':' Set up one sharded collection with 2 chunks, both on the primary shard.','line_number':142,'multiline':False]['text':' Force a routing table refresh on Shard2, to avoid picking a global read timestamp before the','line_number':155,'multiline':False]['text':' sharding metadata cache collections are created.','line_number':156,'multiline':False]['text':' The command should target only the second chunk.','line_number':165,'multiline':False]['text':'moveChunkBack','line_number':207,'multiline':True]['text':'hashed','line_number':208,'multiline':True]['text':'moveChunkBack','line_number':215,'multiline':True]['text':'hashed','line_number':216,'multiline':True]['text':'////////////////////////////////////////////////////////////////////////////////////////////////','line_number':222,'multiline':False]['text':'','line_number':223,'multiline':False]['text':' Hashed sharding test','line_number':224,'multiline':False]['text':' Setup:','line_number':225,'multiline':False]['text':' - Command test cases all touch docs that belong to the same chunk that is being moved that','line_number':226,'multiline':False]['text':'   originally reside in shard1.','line_number':227,'multiline':False]['text':' - The unhashed keys of the docs being touched all map to a chunk in shard1 that never gets','line_number':228,'multiline':False]['text':'   moved.','line_number':229,'multiline':False]['text':' TODO SERVER-81884: update once 8.0 becomes last LTS.','line_number':236,'multiline':False]['text':' Make sure there two chunks on each shard','line_number':239,'multiline':False]['text':' Setup a predictable chunk distribution:','line_number':247,'multiline':False]['text':' Use hard coded bounds since the insert and updates in the test case depends on it and','line_number':291,'multiline':False]['text':' we can catch it if the assumption is longer true.','line_number':292,'multiline':False]['text':' The "insert_into_multiple_chunks" test case depends on the first document targeting the chunk on','line_number':302,'multiline':False]['text':' the second shard which isn't being moved.','line_number':303,'multiline':False]['text':' The command should target only the second shard.','line_number':308,'multiline':False]['text':'moveChunkBack','line_number':347,'multiline':True]['text':'hashed','line_number':348,'multiline':True]['text':'moveChunkBack','line_number':355,'multiline':True]['text':'hashed','line_number':356,'multiline':True]