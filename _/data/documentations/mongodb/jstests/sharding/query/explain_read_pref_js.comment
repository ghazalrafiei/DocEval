['text':'*
 * Tests read preference for explain command.
 *
 * Test is loosely based from read_pref_cmd.js.
 ','line_number':1,'multiline':True]['text':' The primary is tagged with { tag: 'one' } and the secondary with','line_number':30,'multiline':False]['text':' { tag: 'two' } so we can test the interaction of modes and tags. Test','line_number':31,'multiline':False]['text':' a bunch of combinations.','line_number':32,'multiline':False]['text':' mode, tagSets, expectedHost','line_number':34,'multiline':False]['text':' Correctly uses primary and ignores the tag','line_number':40,'multiline':False]['text':' We don't have a way to alter ping times so we can't predict where an','line_number':52,'multiline':False]['text':' untagged 'nearest' command should go, hence only test with tags.','line_number':53,'multiline':False]['text':' purely rely on readPref','line_number':61,'multiline':False]['text':' .explain().find()','line_number':64,'multiline':False]['text':' Set read pref on the connection.','line_number':70,'multiline':False]['text':' .explain().count();','line_number':76,'multiline':False]['text':' .explain().distinct()','line_number':80,'multiline':False]['text':' Restore old read pref.','line_number':85,'multiline':False]['text':' Tag primary with { dc: 'ny', tag: 'one' }, secondary with { dc: 'ny', tag: 'two' }','line_number':96,'multiline':False]['text':' Force mongos to reconnect after our reconfig and also create the test database','line_number':124,'multiline':False]['text':' Intentionally caused an error that forces mongos's monitor to refresh.','line_number':130,'multiline':False]['text':' Make sure replica set connection is ready','line_number':144,'multiline':False]