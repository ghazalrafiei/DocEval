['text':'*
 * Tests that split aggregations whose merge pipelines are eligible to run on mongoS do so, and
 * produce the expected results. Stages which are eligible to merge on mongoS include:
 *
 * - Splitpoints whose merge components are non-blocking, e.g. $skip, $limit, $sort, $sample.
 * - Non-splittable streaming stages, e.g. $match, $project, $unwind.
 * - Blocking stages in cases where 'allowDiskUse' is false, e.g. $group, $bucketAuto.
 *
 * Shard targeting logic for $lookup changed in 7.3 and may not match the expected behavior in a
 * multiversion environment.
 * @tags: [
 *   requires_fcv_73,
 * ]
 ','line_number':1,'multiline':True]['text':' Always merge pipelines which cannot merge on mongoS on the primary shard instead, so we know','line_number':28,'multiline':False]['text':' where to check for $mergeCursors.','line_number':29,'multiline':False]['text':' Enable sharding on the test DB and ensure its primary is shard0.','line_number':33,'multiline':False]['text':' Shard the test collection on _id.','line_number':37,'multiline':False]['text':' We will need to test $geoNear on this collection, so create a 2dsphere index.','line_number':41,'multiline':False]['text':' We will test that $textScore metadata is not propagated to the user, so create a text index.','line_number':44,'multiline':False]['text':' Split the collection into 4 chunks: [MinKey, -100), [-100, 0), [0, 100), [100, MaxKey).','line_number':47,'multiline':False]['text':' Move the [0, 100) and [100, MaxKey) chunks to shard1.','line_number':52,'multiline':False]['text':' Create a random geo co-ord generator for testing.','line_number':58,'multiline':False]['text':' Write 400 documents across the 4 chunks.','line_number':61,'multiline':False]['text':' Clears system.profile and restarts the profiler on the primary shard. We enable profiling to','line_number':70,'multiline':False]['text':' verify that no $mergeCursors occur during tests where we expect the merge to run on mongoS.','line_number':71,'multiline':False]['text':'*
 * Runs the aggregation specified by 'pipeline', verifying that:
 * - The number of documents returned by the aggregation matches 'expectedCount'.
 * - The merge was performed on a mongoS if 'mergeType' is 'mongos', and on a shard otherwise.
 ','line_number':80,'multiline':True]['text':' Ensure that this test has a unique name.','line_number':87,'multiline':False]['text':' Create the aggregation options from the given arguments.','line_number':91,'multiline':False]['text':' Verify that the explain() output's 'mergeType' field matches our expectation.','line_number':101,'multiline':False]['text':' Verify that the aggregation returns the expected number of results.','line_number':107,'multiline':False]['text':'*
 * Throws an assertion if the aggregation specified by 'pipeline' does not produce
 * 'expectedCount' results, or if the merge phase is not performed on the mongoS.
 ','line_number':147,'multiline':True]['text':'*
 * Throws an assertion if the aggregation specified by 'pipeline' does not produce
 * 'expectedCount' results, or if the merge phase was not performed on a shard.
 ','line_number':162,'multiline':True]['text':'*
 * Runs a series of test cases which will consistently merge on mongoS or mongoD regardless of
 * whether 'allowDiskUse' is true, false or omitted.
 ','line_number':178,'multiline':True]['text':' Test that a $match pipeline with an empty merge stage is merged on mongoS.','line_number':183,'multiline':False]['text':' Test that a $sort stage which merges pre-sorted streams is run on mongoS.','line_number':191,'multiline':False]['text':' Test that $skip is merged on mongoS.','line_number':199,'multiline':False]['text':' Test that $limit is merged on mongoS.','line_number':207,'multiline':False]['text':' Test that $sample is merged on mongoS if it is the splitpoint, since this will result in','line_number':215,'multiline':False]['text':' a merging $sort of presorted streams in the merge pipeline.','line_number':216,'multiline':False]['text':' Test that $geoNear is merged on mongoS.','line_number':224,'multiline':False]['text':' Test that $facet is merged on mongoS if all pipelines are mongoS-mergeable regardless of','line_number':233,'multiline':False]['text':' 'allowDiskUse'.','line_number':234,'multiline':False]['text':' Test that $facet is merged on mongoS if no pipeline has a specific host type requirement,','line_number':250,'multiline':False]['text':' regardless of 'allowDiskUse'.','line_number':251,'multiline':False]['text':' Test that $facet is merged on a specific mongoD if a facet pipeline requests a specific','line_number':277,'multiline':False]['text':' merging shard. Here, the inner collection of the $lookup in the second facet pipeline is','line_number':278,'multiline':False]['text':' unsplittable, so the $lookup will request to merge on the shard which owns said collection.','line_number':279,'multiline':False]['text':' Test that a pipeline whose merging half can be run on mongos using only the mongos','line_number':306,'multiline':False]['text':' execution machinery returns the correct results.','line_number':307,'multiline':False]['text':' TODO SERVER-30882 Find a way to assert that all stages get absorbed by mongos.','line_number':308,'multiline':False]['text':' Test that a merge pipeline which needs to run on a shard is NOT merged on mongoS','line_number':323,'multiline':False]['text':' regardless of 'allowDiskUse'.','line_number':324,'multiline':False]['text':' Test that equality $lookup continues to be merged on the primary shard when the foreign','line_number':336,'multiline':False]['text':' collection is unsharded.','line_number':337,'multiline':False]['text':' $lookup is now allowed on the shards pipeline, but we should force it to be part','line_number':342,'multiline':False]['text':' of the merge pipeline for this test.','line_number':343,'multiline':False]['text':' Test that equality $lookup is merged on mongoS when the foreign collection is sharded.','line_number':359,'multiline':False]['text':' $lookup is now allowed on the shards pipeline, but we should force it to be part','line_number':364,'multiline':False]['text':' of the merge pipeline for this test.','line_number':365,'multiline':False]['text':'*
 * Runs a series of test cases which will always merge on mongoD when 'allowDiskUse' is true,
 * and on mongoS when 'allowDiskUse' is false or omitted.
 ','line_number':382,'multiline':True]['text':' All test cases should merge on mongoD if allowDiskUse is true, mongoS otherwise.','line_number':387,'multiline':False]['text':' Test that $group is only merged on mongoS if 'allowDiskUse' is not set.','line_number':390,'multiline':False]['text':' Adjacent $sort stages will be coalesced and merge sort will occur on anyShard when disk use','line_number':399,'multiline':False]['text':' is allowed, and on mongos otherwise.','line_number':400,'multiline':False]['text':' Test that a blocking $sample is only merged on mongoS if 'allowDiskUse' is not set.','line_number':413,'multiline':False]['text':' Test that $facet is only merged on mongoS if all pipelines are mongoS-mergeable when','line_number':425,'multiline':False]['text':' 'allowDiskUse' is not set.','line_number':426,'multiline':False]['text':' Test that $bucketAuto is only merged on mongoS if 'allowDiskUse' is not set.','line_number':442,'multiline':False]['text':' Test that $lookup with a subpipeline containing a spillable stage is only merged on','line_number':453,'multiline':False]['text':' mongoS when 'allowDiskUse' is not set.','line_number':454,'multiline':False]['text':' $lookup is now allowed on the shards pipeline, but we should force it to be part','line_number':459,'multiline':False]['text':' of the merge pipeline for this test.','line_number':460,'multiline':False]['text':'','line_number':475,'multiline':False]['text':' Test composite stages.','line_number':476,'multiline':False]['text':'','line_number':477,'multiline':False]['text':' Test that $bucket ($group->$sort) is merged on mongoS iff 'allowDiskUse' is not set.','line_number':479,'multiline':False]['text':' Test that $sortByCount ($group->$sort) is merged on mongoS iff 'allowDiskUse' isn't set.','line_number':490,'multiline':False]['text':' Test that $count ($group->$project) is merged on mongoS iff 'allowDiskUse' is not set.','line_number':498,'multiline':False]['text':' Run all test cases for each potential value of 'allowDiskUse'.','line_number':507,'multiline':False]['text':' Reset the profiler and clear the list of tests that ran on the previous iteration.','line_number':509,'multiline':False]['text':' Run all test cases.','line_number':513,'multiline':False]['text':' Start a new profiling session before running the final few tests.','line_number':518,'multiline':False]['text':' Test that merge pipelines containing all mongos-runnable stages produce the expected output.','line_number':521,'multiline':False]['text':' Test that metadata is not propagated to the user when a pipeline which produces metadata','line_number':559,'multiline':False]['text':' fields merges on mongoS.','line_number':560,'multiline':False]