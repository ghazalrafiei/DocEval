['text':' Tests that $unionWith can successfully read from a view that is backed by a sharded collection.','line_number':1,'multiline':False]['text':' Shard a backing collection and distribute amongst the two shards.','line_number':22,'multiline':False]['text':' Test that we can query the backing collection normally.','line_number':41,'multiline':False]['text':' Now create an identity view on top of each collection and expect to get the same results.','line_number':49,'multiline':False]['text':' Now create some views with some actual definitions.','line_number':65,'multiline':False]['text':' Now test that $unionWith can be stored in a view that is backed by a sharded collection.','line_number':144,'multiline':False]['text':'*
 * Assuming 'unionedView' is a union of two collections containing 'shardedData' and
 * 'unshardedData', runs a couple queries to confirm all the expected results show up.
 ','line_number':146,'multiline':True]['text':' Now test that $unionWith can be stored in a view that is backed by an unsharded collection, but','line_number':170,'multiline':False]['text':' the $unionWith is targeting a sharded collection.','line_number':171,'multiline':False]