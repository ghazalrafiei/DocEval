['text':'*
 * Tests that the $currentOp aggregation stage behaves as expected. Specifically:
 * - It must be the first stage in the pipeline.
 * - It can only be run on admin, and the "aggregate" field must be 1.
 * - Only active connections are shown unless {idleConnections: true} is specified.
 * - Specifying {localOps: true} shows the local ops on mongoS rather than shard ops.
 * - A user without the inprog privilege can see their own ops, but no-one else's.
 * - A user with the inprog privilege can see all ops.
 * - Non-local readConcerns are rejected.
 * - Collation rules are respected.
 *
 * Also verifies that the aggregation-backed currentOp command obeys the same rules, where
 * applicable.
 *
 * This test requires replica set configuration and user credentials to persist across a restart.
 * @tags: [requires_persistence, uses_transactions, uses_prepare_transaction, requires_fcv_70]
 ','line_number':1,'multiline':True]['text':' Restarts cause issues with authentication for awaiting replication.','line_number':19,'multiline':False]['text':' Restarts shard nodes with no keyFile.','line_number':21,'multiline':False]['text':' Replica set nodes started with --shardsvr do not enable key generation until they are added','line_number':28,'multiline':False]['text':' to a sharded cluster and reject commands with gossiped clusterTime from users without the','line_number':29,'multiline':False]['text':' advanceClusterTime privilege. This causes ShardingTest setup to fail because the shell','line_number':30,'multiline':False]['text':' briefly authenticates as __system and receives clusterTime metadata then will fail trying to','line_number':31,'multiline':False]['text':' gossip that time later in setup.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' Parameters used to establish the sharded cluster.','line_number':37,'multiline':False]['text':' Create a new sharded cluster for testing. We set the internalQueryExecYieldIterations','line_number':49,'multiline':False]['text':' parameter so that plan execution yields on every iteration. For some tests, we will','line_number':50,'multiline':False]['text':' temporarily set yields to hang the mongod so we can capture particular operations in the','line_number':51,'multiline':False]['text':' currentOp output.','line_number':52,'multiline':False]['text':' Assign various elements of the cluster. We will use shard rs0 to test replica-set level','line_number':55,'multiline':False]['text':' $currentOp behaviour.','line_number':56,'multiline':False]['text':' Create an admin user, one user with the inprog privilege, and one without.','line_number':69,'multiline':False]['text':' Create necessary users at both cluster and shard-local level.','line_number':93,'multiline':False]['text':' In config shard mode, the first shard is the config server, so creating the users via mongos','line_number':95,'multiline':False]['text':' below will also create them on the shard.','line_number':96,'multiline':False]['text':' grantDirectShardOperationsRole ','line_number':97,'multiline':True]['text':' grantDirectShardOperationsRole ','line_number':98,'multiline':True]['text':' Since this is making the user on both the config server and the shard, grant it direct shard','line_number':100,'multiline':False]['text':' operations role.','line_number':101,'multiline':False]['text':' grantDirectShardOperationsRole ','line_number':102,'multiline':True]['text':' Create a test database and some dummy data on rs0.','line_number':105,'multiline':False]['text':' Restarts a replset with a different set of parameters. Explicitly set the keyFile to null,','line_number':114,'multiline':False]['text':' since if ReplSetTest#stopSet sees a keyFile property, it attempts to auth before dbhash','line_number':115,'multiline':False]['text':' checks.','line_number':116,'multiline':False]['text':' Restarts a cluster with a different set of parameters.','line_number':125,'multiline':False]['text':' Re-link the cluster components.','line_number':133,'multiline':False]['text':' Functions to support running an operation in a parallel shell for testing allUsers behaviour.','line_number':150,'multiline':False]['text':' Generic function for running getMore on a $currentOp aggregation cursor and returning the','line_number':206,'multiline':False]['text':' command response.','line_number':207,'multiline':False]['text':' Ensure that there are some other connections present so that the result set is larger','line_number':209,'multiline':False]['text':' than 1 $currentOp entry.','line_number':210,'multiline':False]['text':' Log the other connections in as user_no_inprog so that they will show up for user_inprog','line_number':214,'multiline':False]['text':' with {allUsers: true} and user_no_inprog with {allUsers: false}.','line_number':215,'multiline':False]['text':'','line_number':233,'multiline':False]['text':' Common tests.','line_number':234,'multiline':False]['text':'','line_number':235,'multiline':False]['text':' Runs a suite of tests for behaviour common to both the replica set and cluster levels.','line_number':237,'multiline':False]['text':' Test that an unauthenticated connection cannot run $currentOp even with {allUsers:','line_number':250,'multiline':False]['text':' false}.','line_number':251,'multiline':False]['text':' Test that an unauthenticated connection cannot run the currentOp command even with','line_number':259,'multiline':False]['text':' {$ownOps: true}.','line_number':260,'multiline':False]['text':'','line_number':263,'multiline':False]['text':' Authenticate as user_no_inprog.','line_number':264,'multiline':False]['text':'','line_number':265,'multiline':False]['text':' Test that $currentOp fails with {allUsers: true} for a user without the "inprog"','line_number':269,'multiline':False]['text':' privilege.','line_number':270,'multiline':False]['text':' Test that the currentOp command fails with {ownOps: false} for a user without the','line_number':276,'multiline':False]['text':' "inprog" privilege.','line_number':277,'multiline':False]['text':' Test that {aggregate: 1} fails when the first stage in the pipeline is not $currentOp.','line_number':280,'multiline':False]['text':'','line_number':285,'multiline':False]['text':' Authenticate as user_inprog.','line_number':286,'multiline':False]['text':'','line_number':287,'multiline':False]['text':' Test that $currentOp fails when it is not the first stage in the pipeline. We use two','line_number':291,'multiline':False]['text':' $currentOp stages since any other stage in the initial position will trip the {aggregate:','line_number':292,'multiline':False]['text':' 1} namespace check.','line_number':293,'multiline':False]['text':' Test that $currentOp fails when run on admin without {aggregate: 1}.','line_number':299,'multiline':False]['text':' Test that $currentOp fails when run as {aggregate: 1} on a database other than admin.','line_number':305,'multiline':False]['text':' Test that the currentOp command fails when run directly on a database other than admin.','line_number':310,'multiline':False]['text':' Test that the currentOp command helper succeeds when run on a database other than admin.','line_number':313,'multiline':False]['text':' This is because the currentOp shell helper redirects the command to the admin database.','line_number':314,'multiline':False]['text':' Test that $currentOp and the currentOp command accept all numeric types.','line_number':317,'multiline':False]['text':' Test that $currentOp with {allUsers: true} succeeds for a user with the "inprog"','line_number':327,'multiline':False]['text':' privilege.','line_number':328,'multiline':False]['text':' Test that the currentOp command with {$ownOps: false} succeeds for a user with the','line_number':332,'multiline':False]['text':' "inprog" privilege.','line_number':333,'multiline':False]['text':' Test that $currentOp succeeds if local readConcern is specified.','line_number':336,'multiline':False]['text':' Test that $currentOp fails if a non-local readConcern is specified for any data-bearing','line_number':344,'multiline':False]['text':' target.','line_number':345,'multiline':False]['text':' Test that {idleConnections: false} returns only active connections.','line_number':354,'multiline':False]['text':' Test that the currentOp command with {$all: false} returns only active connections.','line_number':367,'multiline':False]['text':' Test that {idleConnections: true} returns inactive connections.','line_number':371,'multiline':False]['text':' Test that the currentOp command with {$all: true} returns inactive connections.','line_number':380,'multiline':False]['text':' Test that collation rules apply to matches on $currentOp output.','line_number':383,'multiline':False]['text':' Case and diacritic insensitive.','line_number':392,'multiline':False]['text':' Test that $currentOp output can be processed by $facet subpipelines.','line_number':398,'multiline':False]['text':' Test that $currentOp is explainable.','line_number':419,'multiline':False]['text':' Test that a user with the inprog privilege can run getMore on a $currentOp aggregation','line_number':445,'multiline':False]['text':' cursor which they created with {allUsers: true}.','line_number':446,'multiline':False]['text':' Test that a user without the inprog privilege cannot run getMore on a $currentOp','line_number':450,'multiline':False]['text':' aggregation cursor created by a user with {allUsers: true}.','line_number':451,'multiline':False]['text':' Run the common tests on a shard, through mongoS, and on mongoS with 'localOps' enabled.','line_number':464,'multiline':False]['text':'','line_number':469,'multiline':False]['text':' mongoS specific tests.','line_number':470,'multiline':False]['text':'','line_number':471,'multiline':False]['text':' Test that a user without the inprog privilege cannot run non-local $currentOp via mongoS even','line_number':473,'multiline':False]['text':' if allUsers is false.','line_number':474,'multiline':False]['text':' Test that a user without the inprog privilege cannot run non-local currentOp command via','line_number':483,'multiline':False]['text':' mongoS even if $ownOps is true.','line_number':484,'multiline':False]['text':' Test that a non-local $currentOp pipeline via mongoS returns results from all shards, and','line_number':487,'multiline':False]['text':' includes both the shard and host names.','line_number':488,'multiline':False]['text':' Test that a $currentOp pipeline with {localOps:true} returns operations from the mongoS','line_number':506,'multiline':False]['text':' itself rather than the shards.','line_number':507,'multiline':False]['text':'','line_number':523,'multiline':False]['text':' localOps tests.','line_number':524,'multiline':False]['text':'','line_number':525,'multiline':False]['text':' Runs a suite of tests for behaviour common to both replica sets and mongoS with','line_number':527,'multiline':False]['text':' {localOps:true}.','line_number':528,'multiline':False]['text':' The 'localOps' parameter is not supported by the currentOp command, so we limit its','line_number':530,'multiline':False]['text':' testing to the replica set in certain cases.','line_number':531,'multiline':False]['text':' Test that a user with the inprog privilege can see another user's ops with','line_number':535,'multiline':False]['text':' {allUsers:true}.','line_number':536,'multiline':False]['text':' Test that the currentOp command can see another user's operations with {$ownOps: false}.','line_number':559,'multiline':False]['text':' Only test on a replica set since 'localOps' isn't supported by the currentOp command.','line_number':560,'multiline':False]['text':' Test that $currentOp succeeds with {allUsers: false} for a user without the "inprog"','line_number':569,'multiline':False]['text':' privilege.','line_number':570,'multiline':False]['text':' Test that the currentOp command succeeds with {$ownOps: true} for a user without the','line_number':577,'multiline':False]['text':' "inprog" privilege. Because currentOp does not support the 'localOps' parameter, we only','line_number':578,'multiline':False]['text':' perform this test in the replica set case.','line_number':579,'multiline':False]['text':' Test that a user without the inprog privilege cannot see another user's operations.','line_number':584,'multiline':False]['text':' Test that a user without the inprog privilege cannot see another user's operations via','line_number':593,'multiline':False]['text':' the currentOp command. Limit this test to the replica set case due to the absence of a','line_number':594,'multiline':False]['text':' 'localOps' parameter for the currentOp command.','line_number':595,'multiline':False]['text':' Release the failpoint and wait for the parallel shell to complete.','line_number':603,'multiline':False]['text':' Test that a user without the inprog privilege can run getMore on a $currentOp cursor','line_number':606,'multiline':False]['text':' which they created with {allUsers: false}.','line_number':607,'multiline':False]['text':' Run the localOps tests for both replset and mongoS.','line_number':611,'multiline':False]['text':' Returns a set of predicates that filter $currentOp for all stashed transactions.','line_number':618,'multiline':False]['text':'','line_number':630,'multiline':False]['text':' Idle sessions tests','line_number':631,'multiline':False]['text':'','line_number':632,'multiline':False]['text':' Runs a suite of tests to verify idle session behavior with transactions.','line_number':634,'multiline':False]['text':' 1. For the mongos connection, verifies that idle transactions are only shown with','line_number':635,'multiline':False]['text':' 'idleSessions' and 'localOps' set to true.','line_number':636,'multiline':False]['text':' 2. For the shard connection, verifies that stashed transaction locks are displayed only if','line_number':637,'multiline':False]['text':' 'idleSessions' is set to true.','line_number':638,'multiline':False]['text':' Test that $currentOp will display idle transactions if 'idleSessions' is true, and will','line_number':640,'multiline':False]['text':' only permit a user to view other users' sessions if the caller possesses the 'inprog'','line_number':641,'multiline':False]['text':' privilege and 'allUsers' is true.','line_number':642,'multiline':False]['text':' Create a session for this user.','line_number':652,'multiline':False]['text':' For each session, start but do not complete a transaction.','line_number':655,'multiline':False]['text':' Use $currentOp to confirm that each user can only view their own sessions with','line_number':667,'multiline':False]['text':' 'allUsers:false'.','line_number':668,'multiline':False]['text':' Log in as 'user_no_inprog' to verify that the user cannot view other users' sessions via','line_number':679,'multiline':False]['text':' 'allUsers:true'.','line_number':680,'multiline':False]['text':' Log in as 'user_inprog' to confirm that a user with the 'inprog' privilege can see all','line_number':694,'multiline':False]['text':' three idle/stashed transactions with 'allUsers:true'.','line_number':695,'multiline':False]['text':' Confirm that the 'idleSessions' parameter defaults to true.','line_number':707,'multiline':False]['text':' Confirm that idleSessions:false omits the idle/stashed transactions from the report.','line_number':715,'multiline':False]['text':' Cancel all transactions and close the associated sessions.','line_number':725,'multiline':False]['text':'','line_number':742,'multiline':False]['text':' No-auth tests.','line_number':743,'multiline':False]['text':'','line_number':744,'multiline':False]['text':' Restart the cluster with auth disabled.','line_number':746,'multiline':False]['text':' Test that $currentOp will display all stashed transaction locks by default if auth is','line_number':749,'multiline':False]['text':' disabled, even with 'allUsers:false'.','line_number':750,'multiline':False]['text':' Run an operation prior to starting the transaction and save its operation time.','line_number':753,'multiline':False]['text':' Set and save the transaction's lifetime. We will use this later to assert that our','line_number':762,'multiline':False]['text':' transaction's expiry time is equal to its start time + lifetime.','line_number':763,'multiline':False]['text':' Start but do not complete a transaction.','line_number':768,'multiline':False]['text':' Use $currentOp to confirm that the incomplete transaction has stashed its locks.','line_number':782,'multiline':False]['text':' Confirm that idleSessions:false omits the stashed locks from the report.','line_number':787,'multiline':False]['text':' Prepare the transaction and ensure the prepareTimestamp is valid.','line_number':794,'multiline':False]['text':' Check that the currentOp's transaction subdocument's fields align with our expectations.','line_number':811,'multiline':False]['text':' We round timeOpenMicros up to the nearest multiple of 1000 to avoid occasional assertion','line_number':818,'multiline':False]['text':' failures caused by timeOpenMicros having microsecond precision while','line_number':819,'multiline':False]['text':' timeBeforeCurrentOp/timeAfterTransactionStarts only have millisecond precision.','line_number':820,'multiline':False]['text':' Not worried about its specific value, validate that in general we return some non-zero &','line_number':826,'multiline':False]['text':' valid time greater than epoch time.','line_number':827,'multiline':False]['text':' Allow the transactions to complete and close the session. We must commit prepared','line_number':832,'multiline':False]['text':' transactions at a timestamp greater than the prepare timestamp.','line_number':833,'multiline':False]['text':' Run a set of tests of behaviour common to replset and mongoS when auth is disabled.','line_number':845,'multiline':False]['text':' Test that the allUsers parameter is ignored when authentication is disabled.','line_number':847,'multiline':False]['text':' Ensure that there is at least one other connection present.','line_number':848,'multiline':False]['text':' Verify that $currentOp displays all operations when auth is disabled regardless of the','line_number':853,'multiline':False]['text':' allUsers parameter, by confirming that we can see non-client system operations when','line_number':854,'multiline':False]['text':' {allUsers: false} is specified.','line_number':855,'multiline':False]['text':' Verify that the currentOp command displays all operations when auth is disabled','line_number':868,'multiline':False]['text':' regardless of','line_number':869,'multiline':False]['text':' the $ownOps parameter, by confirming that we can see non-client system operations when','line_number':870,'multiline':False]['text':' {$ownOps: true} is specified.','line_number':871,'multiline':False]['text':' Test that a user can run getMore on a $currentOp cursor when authentication is disabled.','line_number':876,'multiline':False]['text':' TODO: SERVER-80318 Delete tests below','line_number':885,'multiline':False]['text':'','line_number':890,'multiline':False]['text':' Replset specific tests.','line_number':891,'multiline':False]['text':'','line_number':892,'multiline':False]['text':' Take the replica set out of the cluster.','line_number':894,'multiline':False]['text':' Test that the host field is present and the shard field is absent when run on mongoD.','line_number':899,'multiline':False]['text':' Test that attempting to 'spoof' a sharded request on non-shardsvr mongoD fails.','line_number':910,'multiline':False]['text':' Test that an operation which is at the BSON user size limit does not throw an error when the','line_number':916,'multiline':False]['text':' currentOp metadata is added to the output document.','line_number':917,'multiline':False]['text':' Test that $currentOp can run while the mongoD is write-locked.','line_number':942,'multiline':False]['text':' Add the shard back into the replset so that it can be validated by st.stop().','line_number':955,'multiline':False]