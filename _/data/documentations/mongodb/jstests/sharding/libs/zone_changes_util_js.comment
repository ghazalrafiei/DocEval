['text':'*
 * Asserts that the given shards have the given chunks.
 *
 * @param shardChunkBounds {Object} a map from each shard name to an array of the bounds for all
 *                                  the chunks on the shard. Each pair of chunk bounds is an array
 *                                  of the form [minKey, maxKey].
 ','line_number':4,'multiline':True]['text':'*
 * Asserts that the docs are on the shards that own their corresponding chunks.
 *
 * @param shardChunkBounds {Object} a map from each shard name to an array of the bounds for all
 *                                  the chunks on the shard. Each pair of chunk bounds is an array
 *                                  of the form [minKey, maxKey].
 * @param shardKey         {Object} a map from each shard key field to 1 if the collection uses
 *                                  range based sharding and "hashed" if the collection uses
 *                                  hashed sharding. (i.e. equivalent to the value passed for the
 *                                  "key" field for the shardCollection command).
 ','line_number':23,'multiline':True]['text':'*
 * Asserts that the given shards have the given tags.
 *
 * @param shardTags {Object} a map from each shard name to an array of strings representing the zone
 *                           names that the shard owns.
 ','line_number':47,'multiline':True]['text':'*
 * Adds toShard to zone and removes fromShard from zone.
 ','line_number':61,'multiline':True]['text':'*
 * Starts the balancer, lets it run for at least the given number of rounds,
 * then stops the balancer.
 ','line_number':70,'multiline':True]['text':' We add 1 to the number of rounds to avoid a race condition','line_number':77,'multiline':False]['text':' where the first round is a no-op round','line_number':78,'multiline':False]['text':'*
 * Updates the zone key range for the given namespace.
 ','line_number':85,'multiline':True]