['text':'
 * Utilities for dealing with chunk bounds.
 ','line_number':1,'multiline':True]['text':'
     * Combines chunk bounds chunkBoundsA and chunkBoundsB. Assumes that the bounds
     * overlap.
     ','line_number':34,'multiline':True]['text':'
     * Computes the range that the given chunk bounds are in by combining the given chunk
     * bounds into bounds for one chunk. Assumes the chunk bounds are contiguous and in
     * nondescending order.
     ','line_number':44,'multiline':True]['text':'
     * Returns a object mapping each shard name to an array of chunk bounds
     * that it owns.
     *
     * @param chunkDocs {Array} an array of chunk documents in the config database.
     ','line_number':58,'multiline':True]['text':'
     * Returns the corresponding shard object for the given shard name.
     ','line_number':78,'multiline':True]['text':'
     * Returns the shard object for the shard that owns the chunk that contains
     * the given shard key value and the bounds of the chunk.
     *
     * @param shardChunkBounds {Object} a map from each shard name to an array of the bounds
     *                                  for all the chunks on the shard. Each pair of chunk
     *                                  bounds is an array of the form [minKey, maxKey].
     ','line_number':90,'multiline':True]['text':'
     * Returns the shard object for the shard that owns the chunk that contains
     * the given shard key value.
     *
     * @param shardChunkBounds {Object} a map from each shard name to an array of the bounds
     *                                  for all the chunks on the shard. Each pair of chunk
     *                                  bounds is an array of the form [minKey, maxKey].
     ','line_number':108,'multiline':True]