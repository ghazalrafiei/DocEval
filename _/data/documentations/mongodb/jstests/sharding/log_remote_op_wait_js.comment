['text':'*
 * Test that aggregation log lines include remoteOpWaitMillis: the amount of time the merger spent
 * waiting for results from shards.
 *
 * @tags: [
 * # $mergeCursors was added to explain output in 5.3.
 * requires_fcv_53
 * ]
 *
 ','line_number':1,'multiline':True]['text':' Shard the test collection and split it into two chunks: one that contains all {shard: 1}','line_number':22,'multiline':False]['text':' documents and one that contains all {shard: 2} documents.','line_number':23,'multiline':False]['text':' shard key ','line_number':25,'multiline':True]['text':' split at ','line_number':26,'multiline':True]['text':' move the chunk containing {shard: 2} to its own shard ','line_number':27,'multiline':True]['text':' We want a pipeline that:','line_number':34,'multiline':False]['text':' 1. Requires a mergerPart. Otherwise, the entire query might get passed through to one shard, and','line_number':35,'multiline':False]['text':'    we wouldn't spend time waiting for other nodes.','line_number':36,'multiline':False]['text':' 2. Is streaming. Otherwise, the merger would have to consume its entire input before returning','line_number':37,'multiline':False]['text':'    the first batch, meaning subsequent getMores wouldn't do any waiting.','line_number':38,'multiline':False]['text':' A merge-sort stage should satisfy both of these requirements.','line_number':39,'multiline':False]['text':' The mergerPart will only have a $mergeCursors stage that merge-sorts the results from each','line_number':48,'multiline':False]['text':' shard.','line_number':49,'multiline':False]['text':' Set the slow query logging threshold (slowMS) to -1 to ensure every query gets logged.','line_number':55,'multiline':False]['text':' Run the pipeline and check mongos for the log line.','line_number':76,'multiline':False]['text':' Run a getMore and check again for the log line: .next() empties the current 1-document batch, and','line_number':87,'multiline':False]['text':' .hasNext() fetches a new batch.','line_number':88,'multiline':False]['text':' A changestream is a type of aggregation, so it reports remoteOpWait. The initial $changeStream','line_number':102,'multiline':False]['text':' 'aggregate' command never pauses execution while awaiting data, and so we expect the remoteOpWait','line_number':103,'multiline':False]['text':' time to be less than or equal to the total execution duration.','line_number':104,'multiline':False]['text':' A $changeStream getMore may pause execution while awaiting data if no results are currently','line_number':116,'multiline':False]['text':' available. In this case, it is possible for the total execution time to be less than the','line_number':117,'multiline':False]['text':' remoteOpWait time.','line_number':118,'multiline':False]['text':' A query that merges on a shard logs remoteOpWaitMillis on the shard.','line_number':131,'multiline':False]['text':' The line we want is whichever had a $mergeCursors stage.','line_number':147,'multiline':False]