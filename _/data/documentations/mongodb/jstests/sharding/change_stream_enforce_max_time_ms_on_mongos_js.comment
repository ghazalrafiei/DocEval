['text':' Test that a $changeStream pipeline on a sharded cluster always enforces the user-specified','line_number':1,'multiline':False]['text':' maxTimeMS on mongoS, but caps the maxTimeMS of getMores sent to the shards at one second. Doing','line_number':2,'multiline':False]['text':' so allows the shards to regularly report their advancing optimes in the absence of any new data,','line_number':3,'multiline':False]['text':' which in turn allows the AsyncResultsMerger to return sorted results retrieved from the other','line_number':4,'multiline':False]['text':' shards.','line_number':5,'multiline':False]['text':' @tags: [','line_number':6,'multiline':False]['text':'   requires_majority_read_concern,','line_number':7,'multiline':False]['text':'   uses_change_streams,','line_number':8,'multiline':False]['text':' ]','line_number':9,'multiline':False]['text':' Create a 2-shard cluster. Enable 'writePeriodicNoops' and set 'periodicNoopIntervalSecs' to 1','line_number':10,'multiline':False]['text':' second so that each shard is continually advancing its optime, allowing the','line_number':11,'multiline':False]['text':' AsyncResultsMerger to return sorted results even if some shards have not yet produced any','line_number':12,'multiline':False]['text':' data.','line_number':13,'multiline':False]['text':' Enable sharding on the test DB and ensure its primary is st.shard0.shardName.','line_number':25,'multiline':False]['text':' Shard the test collection on _id.','line_number':29,'multiline':False]['text':' Split the collection into 2 chunks: [MinKey, 0), [0, MaxKey].','line_number':33,'multiline':False]['text':' Move the [0, MaxKey] chunk to st.shard1.shardName.','line_number':36,'multiline':False]['text':' Start the profiler on each shard so that we can examine the getMores' maxTimeMS.','line_number':40,'multiline':False]['text':' Returns 'true' if there is at least one getMore profile entry matching the given namespace,','line_number':47,'multiline':False]['text':' identifying comment and maxTimeMS.','line_number':48,'multiline':False]['text':' Asserts that there is at least one getMore profile entry matching the given namespace and','line_number':58,'multiline':False]['text':' identifying comment, and that all such entries have the given maxTimeMS.','line_number':59,'multiline':False]['text':' Kills the cursor with the given cursor id (if provided). Then opens a new change stream','line_number':72,'multiline':False]['text':' against 'mongosColl' and returns the new change stream's cursor id.','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' We re-open the change stream in between each test case with a batchSize if 0. This is done to','line_number':75,'multiline':False]['text':' ensure that mongos delivers getMores to the shards for the first getMore against the mongos','line_number':76,'multiline':False]['text':' change stream cursor (thus avoiding issues such as SERVER-35084).','line_number':77,'multiline':False]['text':' Timeout values used in the subsequent getMore tests.','line_number':95,'multiline':False]['text':' Open a $changeStream on the empty, inactive collection.','line_number':104,'multiline':False]['text':' Confirm that getMores without an explicit maxTimeMS default to one second on the shards.','line_number':107,'multiline':False]['text':' The mongos is guaranteed to have already delivered getMores to each of the shards.','line_number':110,'multiline':False]['text':' However, the mongos await time can expire prior to the await time on the shards.','line_number':111,'multiline':False]['text':' Therefore, the getMore on mongos succeeding doesn't guarantee that the getMores on the','line_number':112,'multiline':False]['text':' shards have already been profiled. We use an assert.soon() here to wait for the maxTimeMS','line_number':113,'multiline':False]['text':' on the shards to expire, at which point the getMores will appear in the profile','line_number':114,'multiline':False]['text':' collection.','line_number':115,'multiline':False]['text':' Verify that with no activity on the shards, a $changeStream with maxTimeMS waits for the full','line_number':120,'multiline':False]['text':' duration on mongoS. Allow some leniency since the server-side wait may wake spuriously.','line_number':121,'multiline':False]['text':' Confirm that each getMore dispatched to the shards during this period had a maxTimeMS of 1s.','line_number':128,'multiline':False]['text':' Issue a getMore with a sub-second maxTimeMS. This should propagate to the shards as-is.','line_number':133,'multiline':False]['text':' The mongos is guaranteed to have already delivered getMores to each of the shards.','line_number':139,'multiline':False]['text':' However, the mongos await time can expire prior to the await time on the shards.','line_number':140,'multiline':False]['text':' Therefore, the getMore on mongos succeeding doesn't guarantee that the getMores on the','line_number':141,'multiline':False]['text':' shards have already been profiled. We use an assert.soon() here to wait for the maxTimeMS','line_number':142,'multiline':False]['text':' on the shards to expire, at which point the getMores will appear in the profile','line_number':143,'multiline':False]['text':' collection.','line_number':144,'multiline':False]['text':' Write a document to shard0, and confirm that - despite the fact that shard1 is still idle - a','line_number':149,'multiline':False]['text':' getMore with a high maxTimeMS returns the document before this timeout expires.','line_number':150,'multiline':False]['text':' Open a change stream with the default maxTimeMS. Then verify that if the client starts','line_number':159,'multiline':False]['text':' issuing getMores with a subsecond maxTimeMS, that mongos eventually schedules getMores on the','line_number':160,'multiline':False]['text':' shards with this subsecond maxTimeMS value.','line_number':161,'multiline':False]['text':' Run a getMore with a 250ms maxTimeMS against mongos.','line_number':165,'multiline':False]['text':' Check whether all shards now have a getMore with 250ms maxTimeMS recorded in their','line_number':168,'multiline':False]['text':' profile collections.','line_number':169,'multiline':False]