['text':' Test resuming a change stream on a mongos other than the one the change stream was started on.','line_number':1,'multiline':False]['text':' @tags: [','line_number':2,'multiline':False]['text':'   requires_majority_read_concern,','line_number':3,'multiline':False]['text':'   uses_change_streams,','line_number':4,'multiline':False]['text':' ]','line_number':5,'multiline':False]['text':' Split so ids < nDocs / 2 are for one shard, ids >= nDocs / 2 + 1 for another.','line_number':25,'multiline':False]['text':' key','line_number':28,'multiline':False]['text':' split','line_number':29,'multiline':False]['text':' move','line_number':30,'multiline':False]['text':' dbName','line_number':31,'multiline':False]['text':' waitForDelete','line_number':32,'multiline':False]['text':' Open a change stream.','line_number':35,'multiline':False]['text':' Be sure we can read from the change stream. Write some documents that will end up on','line_number':39,'multiline':False]['text':' each shard. Use a bulk write to increase the chance that two of the writes get the same','line_number':40,'multiline':False]['text':' cluster time on each shard.','line_number':41,'multiline':False]['text':' Interleave elements which will end up on shard 0 with elements that will end up on','line_number':45,'multiline':False]['text':' shard 1.','line_number':46,'multiline':False]['text':' Read from the change stream. The order of the documents isn't guaranteed because we','line_number':54,'multiline':False]['text':' performed a bulk write.','line_number':55,'multiline':False]['text':' Assert that we found the documents we inserted (in any order).','line_number':66,'multiline':False]['text':' Now resume using the resume token from the first change on a different mongos.','line_number':70,'multiline':False]['text':' Get the resume tokens for each change that occurred.','line_number':76,'multiline':False]['text':' Check that resuming from each possible resume token works.','line_number':82,'multiline':False]