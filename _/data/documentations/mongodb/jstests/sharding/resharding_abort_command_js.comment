['text':'*
 * Test to make sure that the abort command interrupts a resharding operation that has not yet
 * persisted a decision.
 *
 * @tags: [uses_atclustertime]
 ','line_number':1,'multiline':True]['text':'','line_number':41,'multiline':False]['text':' data ','line_number':65,'multiline':True]['text':' coordinator document could be in either of the two specified states,','line_number':136,'multiline':False]['text':' or will have been completely deleted. Await any of these conditions','line_number':137,'multiline':False]['text':' in order to test the abort command's inability to abort after a','line_number':138,'multiline':False]['text':' persisted decision.','line_number':139,'multiline':False]['text':' If the abort is going to happen after the decision is persisted, it's expected that the','line_number':179,'multiline':False]['text':' resharding operation will have finished without error, and that the abort itself will','line_number':180,'multiline':False]['text':' error.','line_number':181,'multiline':False]['text':' Rely on the resharding_test_fixture's built-in failpoint that hangs before switching to','line_number':318,'multiline':False]['text':' the blocking writes state.','line_number':319,'multiline':False]['text':' Test that the resharding operation can successfully be aborted even when the commit monitor won't','line_number':327,'multiline':False]['text':' ever signal to the coordinator the resharding operation is ready to commit.','line_number':328,'multiline':False]['text':' The resharding test fixture uses its own set of coordinator failpoints for resharding','line_number':341,'multiline':False]['text':' checkpoints. It may not be possible to insert documents once the second checkpoint is reached.','line_number':342,'multiline':False]['text':' Because of this, we cannot rely on the failpoint mechanism set up in this test file. Instead, we','line_number':343,'multiline':False]['text':' must manually activate and unactivate the failpoints across a checkpoint threshold.','line_number':344,'multiline':False]['text':'','line_number':345,'multiline':False]['text':' executeAtStartOfReshardingFn runs while the coordinator is in steady state (checkpoint 1), and','line_number':346,'multiline':False]['text':' executeAfterWaitingOnFailpointsFn will run while the coordinator is blocking writes (checkpoint','line_number':347,'multiline':False]['text':' 2).','line_number':348,'multiline':False]