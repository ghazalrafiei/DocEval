['text':'*
 * Tests the unshardCollection recipient shard handles config.transactions entries from the source
 * shards.
 *
 * @tags: [
 *  uses_atclustertime,
 *  requires_fcv_72,
 *  featureFlagReshardingImprovements,
 *  featureFlagUnshardCollection,
 *  featureFlagTrackUnshardedCollectionsOnShardingCatalog,
 *  multiversion_incompatible,
 *  assumes_balancer_off,
 * ]
 ','line_number':1,'multiline':True]['text':' If we don't refresh mongos, writes will be targetted based on the chunk distribution before','line_number':56,'multiline':False]['text':' resharding. Even though the shard versions don't match, it will not cause a stale config','line_number':57,'multiline':False]['text':' exception because the write was already executed on the shard being targetted, resulting in a','line_number':58,'multiline':False]['text':' no-op write, and thus, no shard version checking. This behavior is not wrong, but since we','line_number':59,'multiline':False]['text':' want to test the retry behavior after resharding, we force the mongos to refresh.','line_number':60,'multiline':False]['text':' Since we are doing a reshardInPlace operation, the recipient is one of the donors and','line_number':69,'multiline':False]['text':' this insert is targetted to the same donor, which has already executed the write and','line_number':70,'multiline':False]['text':' thus won't error.','line_number':71,'multiline':False]