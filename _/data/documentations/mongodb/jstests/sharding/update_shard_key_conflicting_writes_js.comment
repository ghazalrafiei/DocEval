['text':'*
 * Test the write conflict behavior between updates to a document's shard key and other
 * updates/deletes.
 *
 * @tags: [
 *   uses_multi_shard_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':' Shards the collection "db.foo" on shard key {"x" : 1} such that negative "x" values are on','line_number':27,'multiline':False]['text':' shard0 and positive on shard1','line_number':28,'multiline':False]['text':' Returns true if the command "cmdName" has started running on the server.','line_number':52,'multiline':False]['text':' Send update that will change the shard key causing the document to move shards. Wait to hit','line_number':59,'multiline':False]['text':' failpoint specified.','line_number':60,'multiline':False]['text':'*
 * Test that an in-transaction update to the shard key and a non-transactional update to the
 * same document will conflict and the non-transactional update will retry indefinitely. Once
 * the transaction will conflict and the non-transactional update will retry indefinitely. Once
 * the transaction commits, the non-transactional update should complete. When 'maxTimeMS' is
 * specified, the non-transactional write will timeout.
 ','line_number':70,'multiline':True]['text':' Attempt to update the same doc not in a transaction, this update should timeout.','line_number':84,'multiline':False]['text':' Run the non-transactional update again in a separate thread and wait for it to start.','line_number':91,'multiline':False]['text':' We check both update and bulkWrite since this test is run in bulk_write_targeted_override','line_number':99,'multiline':False]['text':' which rewrites the updates as bulkWrites.','line_number':100,'multiline':False]['text':' Once we commit the transaction, the non-transaction update should finish, but it should','line_number':102,'multiline':False]['text':' not actually modify any documents since the transaction commited first.','line_number':103,'multiline':False]['text':'*
 * When the non-transactional update or delete runs before the transactional update to the shard
 * key, the update to the shard key should fail with WriteConflict.
 ','line_number':112,'multiline':True]['text':' Run a non-transactional update before updating the shard key.','line_number':122,'multiline':False]['text':' Run transactional update to change the shard key for the same doc as updated above','line_number':124,'multiline':False]['text':' Run a non-transactional delete before updating the shard key.','line_number':133,'multiline':False]['text':' Run transactional update to change the shard key for the same doc as updated above','line_number':138,'multiline':False]['text':'*
 * Test scenarios where a concurrent update/delete that mutates the same document that a user is
 * updating the shard key for completes just before the update to the shard key throws
 * WouldChangeOwningShard.
 ','line_number':148,'multiline':True]['text':' Assert that if the concurrent update mutates the same document as the original update to the','line_number':154,'multiline':False]['text':' shard key, we get a write conflict.','line_number':155,'multiline':False]['text':' Send update that changes "a" so that the original update will no longer match this doc.','line_number':169,'multiline':False]['text':' Turn off the failpoint so the server stops hanging.','line_number':170,'multiline':False]['text':' Assert that if a concurrent delete removes the same document that the original update','line_number':182,'multiline':False]['text':' attempts to modify the shard key for, we get a write conflict.','line_number':183,'multiline':False]['text':' Send update that changes "a" so that the original update will no longer match this doc.','line_number':197,'multiline':False]['text':' Turn off the failpoint so the server stops hanging.','line_number':198,'multiline':False]['text':' Assert that if the concurrent update also mutates the shard key (and remains on the same','line_number':209,'multiline':False]['text':' shard), the original update to the shard key will get a write conflict.','line_number':210,'multiline':False]['text':' Send update that changes the shard key so that the original update will no longer match','line_number':224,'multiline':False]['text':' this doc. This doc will still remain on its original shard. Turn off the failpoint so the','line_number':225,'multiline':False]['text':' server stops hanging.','line_number':226,'multiline':False]['text':'*
 * Test scenario where a concurrent update/delete that mutates the same document that a user is
 * updating the shard key for is sent just after the update to the shard key has deleted the
 * original document but before it has inserted the new one. The second update should not match
 * any documents.
 ','line_number':238,'multiline':True]['text':' Assert that if the concurrent update mutates the same document as the original update to the','line_number':245,'multiline':False]['text':' shard key, it does not match and documents.','line_number':246,'multiline':False]['text':' We check both update and bulkWrite since this test is run in bulk_write_targeted_override','line_number':271,'multiline':False]['text':' which rewrites the updates as bulkWrites.','line_number':272,'multiline':False]['text':' Assert that if a concurrent delete removes the same document that the original update','line_number':286,'multiline':False]['text':' attempts to modify the shard key for, we get a write conflict.','line_number':287,'multiline':False]['text':' We check both remove and bulkWrite since this test is run in bulk_write_targeted_override','line_number':312,'multiline':False]['text':' which rewrites the removes as bulkWrites.','line_number':313,'multiline':False]['text':'*
 * Attempt to update the shard key in two different transactions. The second transaction should
 * fail with WriteConflict.
 ','line_number':325,'multiline':True]['text':' Start transactions on both sessions and then run the two change shard key updates for the','line_number':332,'multiline':False]['text':' same document','line_number':333,'multiline':False]['text':' The first update will complete and the second should get a write conflict','line_number':337,'multiline':False]['text':'*
 * Test scenarios where a user sends an update as a retryable write that changes the shard key
 * and there is a concurrent update/delete that mutates the same document which completes after
 * the change to the shard key throws WouldChangeOwningShard the first time, but before mongos
 * starts a transaction to change the shard key.
 *
 * The scenario looks like:
 * 1. user sends db.foo.update({shardKey: x}, {shardKey: new x})
 * 2. shard throws WCOS for this update
 * 3. user sends db.foo.update({shardKey: x}, {otherFieldInDoc: y}) on a different thread, this
 * write completes successfully
 * 4. mongos starts a transaction and resends the update on line 1
 * 5. mongos deletes the old doc, inserts a doc with the updated shard key, and commits the txn
 ','line_number':349,'multiline':True]['text':' Assert that if the concurrent update modifies the document so that the update which changes','line_number':364,'multiline':False]['text':' the shard key no longer matches the doc, it does not modify the doc.','line_number':365,'multiline':False]['text':' Send update that changes "a" so that the original update will no longer match this doc.','line_number':381,'multiline':False]['text':' Turn off the failpoint so the server stops hanging.','line_number':382,'multiline':False]['text':' Assert that if the concurrent update modifies the document and the update which changes the','line_number':394,'multiline':False]['text':' shard key still matches the doc, the final document reflects both updates.','line_number':395,'multiline':False]['text':' Send update that changes "a". The original update will still match this doc because it','line_number':411,'multiline':False]['text':' queries only on the shard key. Turn off the failpoint so the server stops hanging.','line_number':412,'multiline':False]['text':' Assert that if a concurrent delete removes the same document that the original update','line_number':424,'multiline':False]['text':' attempts to modify the shard key for, we don't match any docs.','line_number':425,'multiline':False]['text':' Remove this doc so that the original update will no longer match any doc.','line_number':441,'multiline':False]['text':' Turn off the failpoint so the server stops hanging.','line_number':442,'multiline':False]