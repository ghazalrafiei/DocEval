['text':'*
 * Tests that commands that can be sent to secondaries for sharded collections can be "safe":
 * - When non-'available' read concern is specified (local in this case), the secondary participates
 *   in the shard versioning protocol and filters returned documents using its routing table cache.
 * - When 'available' read concern is specified, the secondary does not check shard version nor
 *   filters results.
 * - When no read concern is specified, the secondary defaults to 'available' read concern.
 *
 * If versioned secondary reads do not apply to a command, it should specify "skip" with the reason.
 *
 * The following fields are required for each command that is not skipped:
 *
 * - setUp: A function that does any set up (inserts, etc.) needed to check the command's results.
 * - command: The command to run, with all required options. Note, this field is also used to
 *            identify the operation in the system profiler.
 * - filter: [OPTIONAL] When specified, used instead of 'command' to identify the operation in the
 *           system profiler.
 * - checkResults: A function that asserts whether the command should succeed or fail. If the
 *                 command is expected to succeed, the function should assert the expected results.
 *                 *when the range has not been deleted from the donor.*
 * - checkAvailableReadConcernResults: Same as checkResults above, except asserts the expected
 *                                     results for the command run with read concern 'available'.
 * - behavior: Must be one of "unshardedOnly", "targetsPrimaryUsesConnectionVersioning" or
 * "versioned". Determines what system profiler checks are performed.
 ','line_number':1,'multiline':True]['text':' Check that a test case is well-formed.','line_number':39,'multiline':False]['text':' The command should work and return correct results.','line_number':125,'multiline':False]['text':' The command should work and return orphaned results.','line_number':130,'multiline':False]['text':' The command should work and return correct results.','line_number':189,'multiline':False]['text':' The command should work and return orphaned results.','line_number':194,'multiline':False]['text':' The command should work and return orphaned results.','line_number':223,'multiline':False]['text':' The command should work and return correct results.','line_number':251,'multiline':False]['text':' The command should work and return orphaned results.','line_number':256,'multiline':False]['text':' Set the secondaries to priority 0 to prevent the primaries from stepping down.','line_number':473,'multiline':False]['text':' We do this because we expect staleMongos to see that the collection is sharded, which','line_number':506,'multiline':False]['text':' it may not if the "nearest" config server it contacts has not replicated the','line_number':507,'multiline':False]['text':' shardCollection writes (or has not heard that they have reached a majority).','line_number':508,'multiline':False]['text':' Do dummy read from the stale mongos so it loads the routing table into memory once.','line_number':513,'multiline':False]['text':' Additionally, do a secondary read to ensure that the secondary has loaded the initial','line_number':514,'multiline':False]['text':' routing table -- the first read to the primary will refresh the mongos' shardVersion,','line_number':515,'multiline':False]['text':' which will then be used against the secondary to ensure the secondary is fresh.','line_number':516,'multiline':False]['text':' Do any test-specific setup.','line_number':521,'multiline':False]['text':' Wait for replication as a safety net, in case the individual setup function for a test','line_number':524,'multiline':False]['text':' case did not specify writeConcern itself','line_number':525,'multiline':False]['text':' Suspend range deletion on the donor shard.','line_number':533,'multiline':False]['text':' Do a moveChunk from the fresh mongos to make the other mongos stale.','line_number':536,'multiline':False]['text':' Use {w:2} (all) write concern so the metadata change gets persisted to the secondary','line_number':537,'multiline':False]['text':' before stalely versioned commands are sent against the secondary.','line_number':538,'multiline':False]['text':' Secondaries default to 'local' readConcern','line_number':558,'multiline':False]['text':' Build the query to identify the operation in the system profiler.','line_number':565,'multiline':False]['text':' sharded ','line_number':571,'multiline':True]['text':' Check that neither the donor nor recipient shard secondaries received either request.','line_number':574,'multiline':False]['text':' Check that the recipient shard primary received the request without a shardVersion','line_number':580,'multiline':False]['text':' field and returned success.','line_number':581,'multiline':False]['text':' Check that the donor shard secondary received the 'available' read concern','line_number':593,'multiline':False]['text':' request and returned success, despite the mongos' stale routing table.','line_number':594,'multiline':False]['text':' Check that the donor shard secondary then returned stale shardVersion for the request','line_number':606,'multiline':False]['text':' that did not specify read concern, so used the implicit default of local.','line_number':607,'multiline':False]['text':' Check that the recipient shard secondary received the request with local read concern','line_number':622,'multiline':False]['text':' and returned success, since the previous command refreshed the metadata.','line_number':623,'multiline':False]['text':' Clean up the collection by dropping the DB. This also drops all associated indexes and','line_number':638,'multiline':False]['text':' clears the profiler collection.','line_number':639,'multiline':False]['text':' Do this from staleMongos, so staleMongos purges the database entry from its cache.','line_number':640,'multiline':False]