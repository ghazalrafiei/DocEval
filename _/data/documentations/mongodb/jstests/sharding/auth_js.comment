['text':'*
 * Tests administrative sharding operations and map-reduce work or fail as expected, when key-based
 * authentication is used
 *
 * This test is labeled resource intensive because its total io_write is 30MB compared to a median
 * of 5MB across all sharding tests in wiredTiger.
 * @tags: [resource_intensive]
 ','line_number':1,'multiline':True]['text':' Replica set nodes started with --shardsvr do not enable key generation until they are added','line_number':12,'multiline':False]['text':' to a sharded cluster and reject commands with gossiped clusterTime from users without the','line_number':13,'multiline':False]['text':' advanceClusterTime privilege. This causes ShardingTest setup to fail because the shell','line_number':14,'multiline':False]['text':' briefly authenticates as __system and receives clusterTime metadata then will fail trying to','line_number':15,'multiline':False]['text':' gossip that time later in setup.','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' Set the chunk size, disable the secondary throttle (so the test doesn't run so slow)','line_number':66,'multiline':False]['text':' 1MB','line_number':177,'multiline':False]['text':' SERVER-33753: count() without predicate can be wrong on sharded collections.','line_number':186,'multiline':False]['text':' assert.eq(s.getDB("test").foo.count(), num+1);','line_number':187,'multiline':False]['text':' Missing documents. At this point we're already in a failure mode, the code in this','line_number':190,'multiline':False]['text':' statement','line_number':191,'multiline':False]['text':' is to get a better idea how/why it's failing.','line_number':192,'multiline':False]['text':' We're only sure we aren't duplicating documents iff there's no balancing going on here','line_number':220,'multiline':False]['text':' This call also waits for any ongoing balancing to stop','line_number':221,'multiline':False]['text':' add admin on shard itself, hack to prevent localhost auth bypass','line_number':246,'multiline':False]['text':' Sharded map reduce can be tricky since all components talk to each other. For example','line_number':259,'multiline':False]['text':' SERVER-4114 is triggered when 1 mongod connects to another for final reduce it's not','line_number':260,'multiline':False]['text':' properly tested here since addresses are localhost, which is more permissive.','line_number':261,'multiline':False]['text':' Test read only users','line_number':275,'multiline':False]['text':' fsyncUnlock doesn't work in mongos anyway, so no need check authorization for it','line_number':302,'multiline':False]['text':'
broken because of SERVER-4156
print( "   testing write command (should fail)" );
assert.commandFailed(readOnlyDB.runCommand(
    {mapreduce : "foo",
     map : function() { emit(this.y, 1); },
     reduce : function(key, values) { return values.length; },
     out:"blarg"
    }));
','line_number':303,'multiline':True]