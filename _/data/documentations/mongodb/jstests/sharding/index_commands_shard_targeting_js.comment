['text':'
 * Test that the index commands send and check shard versions, and only target the shards
 * that have chunks for the collection. Also test that the commands fail if they are run
 * when the critical section is in progress, and block until the critical section is over.
 ','line_number':1,'multiline':True]['text':' Test deliberately inserts orphans outside of migration.','line_number':16,'multiline':False]['text':' This test connects directly to shards and creates collections.','line_number':19,'multiline':False]['text':' Do not check metadata consistency as collections on non-primary shards are created for testing','line_number':22,'multiline':False]['text':' purposes.','line_number':23,'multiline':False]['text':'
 * Runs the command after performing chunk operations to make the primary shard (shard0) not own
 * any chunks for the collection, and the subset of non-primary shards (shard1 and shard2) that
 * own chunks for the collection have stale catalog cache.
 *
 * Asserts that the command checks shard versions by checking that the shards to refresh their
 * cache after the command is run.
 ','line_number':26,'multiline':True]['text':' Move the initial chunk out of the primary shard.','line_number':37,'multiline':False]['text':' Split the chunk to create two chunks on shard1. Move one of the chunks to shard2.','line_number':40,'multiline':False]['text':' Assert that primary shard does not have any chunks for the collection.','line_number':44,'multiline':False]['text':' The donor shard for the last moveChunk will have the latest collection version.','line_number':47,'multiline':False]['text':' Assert that besides the latest donor shard (shard1), all shards have stale collection','line_number':51,'multiline':False]['text':' version.','line_number':52,'multiline':False]['text':' Assert that primary shard still has stale collection version after the command is run','line_number':61,'multiline':False]['text':' because both the shard version in the command and in the shard's cache are UNSHARDED','line_number':62,'multiline':False]['text':' (no chunks).','line_number':63,'multiline':False]['text':' Assert that the targeted shards have the latest collection version after the command is','line_number':66,'multiline':False]['text':' run.','line_number':67,'multiline':False]['text':'
 * Runs moveChunk to move one chunk from the primary shard (shard0) to shard1. Pauses the
 * migration after shard0 enters the read-only phase of the critical section, and runs
 * the given command function. Asserts that the command is blocked behind the critical section.
 ','line_number':72,'multiline':True]['text':' Split the initial chunk.','line_number':87,'multiline':False]['text':' Turn on the fail point, and move one of the chunks to shard1 so that there are two','line_number':90,'multiline':False]['text':' shards that own chunks for the collection. Wait for moveChunk to hit the fail point.','line_number':91,'multiline':False]['text':' Run the command with maxTimeMS.','line_number':97,'multiline':False]['text':' Assert that the command reached the shard and then timed out.','line_number':101,'multiline':False]['text':' It could be possible that the following check fails on slow clusters because the request','line_number':102,'multiline':False]['text':' expired its maxTimeMS on the mongos before to reach the shard.','line_number':103,'multiline':False]['text':' Turn off the fail point and wait for moveChunk to complete.','line_number':110,'multiline':False]['text':' Disable checking for index consistency to ensure that the config server doesn't trigger a','line_number':115,'multiline':False]['text':' StaleShardVersion exception on shards and cause them to refresh their sharding metadata.','line_number':116,'multiline':False]['text':' Create the index directly on all the shards. Note that this will not cause stale','line_number':162,'multiline':False]['text':' shards to refresh their shard versions.','line_number':163,'multiline':False]['text':' Move the initial chunk from the shard0 (primary shard) to shard1 and then move it','line_number':167,'multiline':False]['text':' from shard1 back to shard0. This is just to make the collection also exist on','line_number':168,'multiline':False]['text':' shard1 so that the createIndexes command below won't create the collection on','line_number':169,'multiline':False]['text':' shard1 with a different UUID which will cause the moveChunk command in the test','line_number':170,'multiline':False]['text':' to fail.','line_number':171,'multiline':False]['text':' Create the index directly on all the shards so shards.','line_number':185,'multiline':False]['text':' Test that the index commands send and check shard vesions, and only target the shards','line_number':201,'multiline':False]['text':' that own chunks for the collection.','line_number':202,'multiline':False]['text':' Test that the index commands are blocked behind the critical section.','line_number':224,'multiline':False]