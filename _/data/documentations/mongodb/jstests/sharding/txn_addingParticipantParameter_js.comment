['text':'*
 * Tests that additional participants can be added to an existing transaction when the
 * 'featureFlagAdditionalParticipants' is enabled.
 ','line_number':1,'multiline':True]['text':' SERVER-67748','line_number':56,'multiline':False]['text':' Turn on failpoint so that the shard1 writes the participant paramenter in its','line_number':75,'multiline':False]['text':' response body to transaction router.','line_number':76,'multiline':False]['text':' Create a sharded collection with a chunk on each shard:','line_number':81,'multiline':False]['text':' shard0: [-inf, 0)','line_number':82,'multiline':False]['text':' shard1: [0, 10)','line_number':83,'multiline':False]['text':' shard2: [10, +inf)','line_number':84,'multiline':False]['text':' These forced refreshes are not strictly necessary; they just prevent extra TXN log lines','line_number':94,'multiline':False]['text':' from the shards starting, aborting, and restarting the transaction due to needing to','line_number':95,'multiline':False]['text':' refresh after the transaction has started.','line_number':96,'multiline':False]['text':' Start a new transaction by inserting a document onto shard0 and shard1.','line_number':102,'multiline':False]['text':' Since feature flag was enabled, we expect shard2 was added to the list of participants','line_number':115,'multiline':False]['text':' stored on the coordinator and the commit to fail because of this new participant.','line_number':116,'multiline':False]['text':' Turn on failpoints so that the coordinator hangs after each write it does, so that the','line_number':122,'multiline':False]['text':' test can check that the write happened correctly.','line_number':123,'multiline':False]['text':' Check that the coordinator wrote the participant list.','line_number':127,'multiline':False]['text':' Check that the transaction aborted as expected.','line_number':138,'multiline':False]