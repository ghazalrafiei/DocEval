['text':'*
 * Tests shard key updates on a sharded timeseries collection.
 *
 * @tags: [
 *   # We need a timeseries collection.
 *   requires_timeseries,
 *   # To avoid burn-in tests in in-memory build variants
 *   requires_persistence,
 *   featureFlagTimeseriesUpdatesSupport,
 *   # TODO SERVER-76583: Remove following two tags.
 *   does_not_support_retryable_writes,
 *   requires_non_retryable_writes,
 * ]
 ','line_number':1,'multiline':True]['text':' This will create a sharded collection with 2 chunks: (MinKey, meta: "A"] and [meta: "B",','line_number':47,'multiline':False]['text':' MaxKey).','line_number':48,'multiline':False]['text':' This update command tries to update doc5_b_f104 into {_id: 5, meta: "A", f: 104}. The owning','line_number':52,'multiline':False]['text':' shard would be the shard that owns [MinKey, meta: "A"].','line_number':53,'multiline':False]['text':' We don't allow update multi to modify the shard key at all.','line_number':64,'multiline':False]['text':' This will create a sharded collection with 2 chunks: (MinKey, meta: "A"] and [meta: "B",','line_number':72,'multiline':False]['text':' MaxKey).','line_number':73,'multiline':False]['text':' Update one command as retryable write can modify the shard key.','line_number':77,'multiline':False]['text':' This update command tries to update doc5_b_f104 into {_id: 5, meta: "A", f: 104}. The owning','line_number':81,'multiline':False]['text':' shard would be the shard that owns (MinKey, meta: "A"].','line_number':82,'multiline':False]['text':' This will create a sharded collection with 2 chunks: (MinKey, meta: "A"] and [meta: "B",','line_number':102,'multiline':False]['text':' MaxKey).','line_number':103,'multiline':False]['text':' This findAndModify command tries to update doc5_b_f104 into {_id: 5, meta: "A", f: 104}. The','line_number':107,'multiline':False]['text':' owning shard would be the shard that owns (MinKey, meta: "A"].','line_number':108,'multiline':False]['text':' As of now, shard key update is only allowed in retryable writes or transactions when','line_number':117,'multiline':False]['text':' 'featureFlagUpdateDocumentShardKeyUsingTransactionApi' is turned off and findAndModify on','line_number':118,'multiline':False]['text':' timeseries collections does not support retryable writes. So we should use transaction here.','line_number':119,'multiline':False]['text':'','line_number':120,'multiline':False]['text':' TODO SERVER-67429 or SERVER-76583 Relax this restriction.','line_number':121,'multiline':False]['text':' This will create a sharded collection with 2 chunks: [MinKey,','line_number':141,'multiline':False]['text':' 'splitTimePointBetweenTwoShards') and ['splitTimePointBetweenTwoShards', MaxKey).','line_number':142,'multiline':False]['text':' This findAndModify command tries to update doc1_a_nofields into {_id: 1, tag: "A",','line_number':146,'multiline':False]['text':' time: generateTimeValue(8)}. The owning shard would be the shard that owns [MinKey,','line_number':147,'multiline':False]['text':' 'splitTimePointBetweenTwoShards').','line_number':148,'multiline':False]['text':' As of now, shard key update is allowed in retryable writes or transactions when 'featureFlag-','line_number':156,'multiline':False]['text':' UpdateDocumentShardKeyUsingTransactionApi' is turned off and findAndModify on timeseries','line_number':157,'multiline':False]['text':' collections does not support retryable writes. So we should use transaction here.','line_number':158,'multiline':False]['text':'','line_number':159,'multiline':False]['text':' TODO SERVER-67429 or SERVER-76583 Relax this restriction.','line_number':160,'multiline':False]