['text':'*
 * Test to verify the covering behaviour of compound hashed index on a cluster sharded with compound
 * hashed shard key.
 ','line_number':1,'multiline':True]['text':'*
 * Runs find command with the 'filter', 'projection' and 'hint' parameters. Then validates that the
 * output returned matches 'expectedOutput'. Also runs explain() command on the same find command
 * and validates that all the 'expectedStages' are present and all the 'stagesNotExpected' are not
 * present in the plan returned.
 ','line_number':13,'multiline':True]['text':' We ignore the order since hashed index order is not predictable.','line_number':34,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' Test to validate that the orphan documents are correctly rejected during shard filter analysis.','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':' Postive hashed values of 'b' should go to 'shard1DB' and negative value should go to 'shard0DB'','line_number':47,'multiline':False]['text':' Make sure that we have at least one valid document and one orphan document. The hashed value of 0','line_number':54,'multiline':False]['text':' is postive and hence this document should belong to shard1.','line_number':55,'multiline':False]['text':' The hashed value of 3 is negative and hence should be an orphan on shard1.','line_number':59,'multiline':False]['text':' Generate 100 more documents and distribute them between 'validDocs' and 'orphanDocs' based on the','line_number':63,'multiline':False]['text':' hashed value of 'b'.','line_number':64,'multiline':False]['text':' Generate a random number between 0 and 1000000.','line_number':66,'multiline':False]['text':' Insert documents by directly connecting to the shard1 so that we can explicity create orphan','line_number':75,'multiline':False]['text':' documents. We then run a 'find' command by connecting to mongos and validate that the orphan','line_number':76,'multiline':False]['text':' documents are correctly rejected.','line_number':77,'multiline':False]['text':' We do not project 'b' so that the query can be covered.','line_number':81,'multiline':False]['text':' Ophan documents are not returned.','line_number':88,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' Tests to validate covering behaviour in the presense of various indexes.','line_number':95,'multiline':False]['text':'','line_number':96,'multiline':False]['text':' Postive numbers of 'a' should go to 'shard1DB' and negative numbers should go to 'shard0DB'','line_number':102,'multiline':False]['text':' Verify that the query can be covered if neither the query nor the project uses hashed field.','line_number':115,'multiline':False]['text':' Verify that a query on hashed field is always fetched, even if the projection does not include','line_number':131,'multiline':False]['text':' the hashed field.','line_number':132,'multiline':False]['text':' Verify that the query cannot be covered if the project includes hashed field.','line_number':140,'multiline':False]['text':' Create an index which doesn't include one of the shard key fields and verify that the query is','line_number':152,'multiline':False]['text':' fetched.','line_number':153,'multiline':False]['text':' Verify that the query cannot be covered if index provides hashed value for a field ('c'), but the','line_number':163,'multiline':False]['text':' corresponding shard key field is a range field.','line_number':164,'multiline':False]['text':' Verify that the query can be covered when index provides range value for a field, but the','line_number':174,'multiline':False]['text':' corresponding shard key field is hashed.','line_number':175,'multiline':False]['text':' Verify that the query can be covered if all the shard key fields are provided by the index, even','line_number':186,'multiline':False]['text':' if the order is different.','line_number':187,'multiline':False]