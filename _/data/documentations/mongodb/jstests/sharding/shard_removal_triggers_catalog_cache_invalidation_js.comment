['text':'*
 * Tests that shard removal triggers an update of the catalog cache so that routers don't continue
 * to target shards that have been removed.
 ','line_number':1,'multiline':True]['text':' Checking UUID consistency involves talking to shards, but this test shuts down shards.','line_number':7,'multiline':False]['text':' TODO SERVER-50144 Remove this and allow orphan checking.','line_number':12,'multiline':False]['text':' This test calls removeShard which can leave docs in config.rangeDeletions in state "pending",','line_number':13,'multiline':False]['text':' therefore preventing orphans from being cleaned up.','line_number':14,'multiline':False]['text':'*
 * Test that sharded collections with data on a shard that gets removed are correctly invalidated in
 * a router's catalog cache.
 *
 * 1. Create 2 shards and 2 routers. Make shard0 the primary shard for a database.
 * 2. Put data for a sharded collection on shard0.
 * 3. Ensure both routers have up-to-date routing info.
 * 4. Remove shard0 by sending removeShard through router 0. All data will be migrated to shard1.
 * 5. Send a query through router 1 to target the sharded collection. This should correctly target
 *    shard1.
 ','line_number':19,'multiline':True]['text':' Make sure data is inserted into shard0','line_number':45,'multiline':False]['text':' Insert some documents into the sharded collection on shard0.','line_number':53,'multiline':False]['text':' Force s0 and s1 to load the database and collection cache entries for the sharded collection.','line_number':57,'multiline':False]['text':' Start the balancer here so that it can drain shard0 when it's removed but also won't conflict','line_number':61,'multiline':False]['text':' with the above moveChunk command.','line_number':62,'multiline':False]['text':' Remove shard0.','line_number':65,'multiline':False]['text':' Stop the replica set so that future requests to this shard will be unsuccessful. Skip this','line_number':68,'multiline':False]['text':' step for a config shard, since the config server must be up for the second router to','line_number':69,'multiline':False]['text':' refresh. The default read concern is local, so the router should eventually target a shard','line_number':70,'multiline':False]['text':' with chunks.','line_number':71,'multiline':False]['text':' Ensure that s1, the router which did not run removeShard, eventually stops targeting chunks','line_number':76,'multiline':False]['text':' for the sharded collection which previously resided on a shard that no longer exists.','line_number':77,'multiline':False]['text':'*
 * Test that entries for a database whose original primary shard gets removed are correctly
 * invalidated in a router's catalog cache.
 *
 * 1. Create 2 shards and 2 routers. Make shard0 the primary shard for a database.
 * 2. Put data for an unsharded collection on shard0.
 * 3. Ensure both routers have up-to-date routing info.
 * 4. movePrimary for the database to shard1.
 * 4. Remove shard0 by sending removeShard through router 0.
 * 5. Send a query through router 1 to target the sharded and unsharded collections. This should
 *    correctly target shard1.
 ','line_number':91,'multiline':True]['text':' Insert some documents into the unsharded collection whose primary is the to-be-removed','line_number':117,'multiline':False]['text':' shard0.','line_number':118,'multiline':False]['text':' Force s0 and s1 to load the database and collection cache entries for the unsharded','line_number':121,'multiline':False]['text':' collection.','line_number':122,'multiline':False]['text':' Call movePrimary for the database so that shard0 can be removed.','line_number':126,'multiline':False]['text':' Remove shard0. We need assert.soon since chunks in the sessions collection may need to be','line_number':129,'multiline':False]['text':' migrated off by the balancer.','line_number':130,'multiline':False]['text':' Stop the replica set so that future requests to this shard will be unsuccessful. Skip this','line_number':133,'multiline':False]['text':' step for a config shard, since the config server must be up for the second router to','line_number':134,'multiline':False]['text':' refresh. The default read concern is local, so the router should eventually target a shard','line_number':135,'multiline':False]['text':' with chunks.','line_number':136,'multiline':False]['text':' Ensure that s1, the router which did not run removeShard, eventually stops targeting data for','line_number':141,'multiline':False]['text':' the unsharded collection which previously had as primary a shard that no longer exists.','line_number':142,'multiline':False]