['text':'*
 * This test does full rollovers of the X509 auth for cluster membership using configurable
 * attributes and extensions. It ensures that it is possible to change the attributes and/or
 * extensions used to determine cluster membership while rotating cluster certificates.
 *
 * @tags: [requires_persistence, requires_replication, requires_fcv_70]
 ','line_number':1,'multiline':True]['text':'*
 * This is the path of the original certificate and the CA cert used in all configurations.
 ','line_number':16,'multiline':True]['text':' Subject: C=US, ST=New York, L=New York, O=MongoDB, OU=Kernel, CN=server','line_number':19,'multiline':False]['text':'*
 * This is the tlsClusterAuthX509Attributes and path of the certificate which is rolled over to
 * after switching to custom attributes.
 ','line_number':26,'multiline':True]['text':' Subject: C=US, ST=New York, L=New York City, CN=server, title=foo','line_number':30,'multiline':False]['text':'*
 * This is the DN of the certificate which is rolled over to after switching the custom attribute
 * value.
 ','line_number':36,'multiline':True]['text':' Subject: C=US, ST=New York, L=New York City, O=MongoDB, OU=Kernel, CN=server, title=bar','line_number':40,'multiline':False]['text':'*
 * This is the path of the certificate containing the cluster membership extension set to 'foo'.
 ','line_number':46,'multiline':True]['text':'*
 * This is the path of the certificate containing the cluster membership extension set to 'bar'.
 ','line_number':53,'multiline':True]['text':' Create a user to login as when auth is enabled later','line_number':77,'multiline':False]['text':' Future connections should authenticate immediately on connecting so that replSet actions succeed.','line_number':83,'multiline':False]['text':' This will rollover the cluster to a new config in a rolling fashion. It will return when','line_number':91,'multiline':False]['text':' there is a primary and we are able to write to it.','line_number':92,'multiline':False]['text':' Scenario 1: From no tlsClusterAuthX509 to tlsClusterAuthX509Attributes.','line_number':116,'multiline':False]['text':' Scenario 2: From tlsClusterAuthX509Attributes: 'title=foo' to tlsClusterAuthX509Attributes:','line_number':156,'multiline':False]['text':' 'title=bar'','line_number':157,'multiline':False]['text':' Scenario 3: From tlsClusterAuthX509Attributes to tlsClusterAuthX509ExtensionValue.','line_number':197,'multiline':False]['text':' Scenario 4: From tlsClusterAuthX509ExtensionValue: 'foo' to tlsClusterAuthX509ExtensionValue:','line_number':237,'multiline':False]['text':' 'bar'','line_number':238,'multiline':False]['text':' Scenario 5: From tlsClusterAuthExtensionValue back to default.','line_number':277,'multiline':False]['text':' This works because the original cert meets the default DC/O/OU criteria.','line_number':302,'multiline':False]