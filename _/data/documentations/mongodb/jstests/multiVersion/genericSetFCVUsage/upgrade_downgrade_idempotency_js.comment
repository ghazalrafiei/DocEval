['text':'*
 * Tests the idempotency of the 'setFeatureCompatibilityVersion' command.
 * We execute the following steps for both upgrade and downgrade:
 * 1. Enable a failpoint to fail upgrading/downgrading.
 * 2. Issue a setFeatureCompatibilityVersion command, which upgrades/downgrades
 *    the replica set to a kUpgrading/kDowngrading intermediary state.
 * 3. The setFeatureCompatibilityVersion command fails without completing all
 *    upgrade/downgrade behavior.
 * 4. Disable the failpoint, and issue a succesful setFeatureCompatibilityVersion
 *    to finish upgrading/downgrading.
 ','line_number':1,'multiline':True]['text':' Enable failpoint to fail downgrading.','line_number':21,'multiline':False]['text':' Verify the node is in an intermediary state. If the response object has the 'targetVersion'','line_number':26,'multiline':False]['text':' field, we are in a partially upgraded or downgraded state.','line_number':27,'multiline':False]['text':' Verify the feature compatibility version transition is complete.','line_number':35,'multiline':False]['text':' Enable failpoint to fail upgrading.','line_number':39,'multiline':False]['text':' Verify the node is in an intermediary state. If the response object has the 'targetVersion'','line_number':44,'multiline':False]['text':' field, we are in a partially upgraded or downgraded state.','line_number':45,'multiline':False]['text':' Verify the feature compatibility version transition is complete.','line_number':52,'multiline':False]