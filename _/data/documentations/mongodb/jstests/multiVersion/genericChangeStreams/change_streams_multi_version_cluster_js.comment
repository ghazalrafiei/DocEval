['text':' Verify that we can successfully resume a change stream during several different stages of a','line_number':1,'multiline':False]['text':' cluster upgrade.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' @tags: [uses_change_streams, requires_replication]','line_number':4,'multiline':False]['text':' Checking UUID consistency uses cached connections, which are not valid across restarts or','line_number':6,'multiline':False]['text':' stepdowns.','line_number':7,'multiline':False]['text':' Start a sharded cluster in which all mongod and mongos processes are of the downgraded','line_number':19,'multiline':False]['text':' binVersion. We set "writePeriodicNoops" to write to the oplog every 1 second, which ensures','line_number':20,'multiline':False]['text':' that test change streams do not wait for longer than 1 second if one of the shards has no','line_number':21,'multiline':False]['text':' changes to report.','line_number':22,'multiline':False]['text':' Shard the test collection and split it into two chunks: one that contains all {shard: 1}','line_number':39,'multiline':False]['text':' documents and one that contains all {shard: 2} documents.','line_number':40,'multiline':False]['text':' Shard key ','line_number':42,'multiline':True]['text':' Split at ','line_number':43,'multiline':True]['text':' Move the chunk containing {shard: 2} to its own shard ','line_number':44,'multiline':True]['text':' Wait until documents orphaned by the move get deleted ','line_number':46,'multiline':True]['text':' Insert new documents on both shards, verify that each insertion outputs a result from the','line_number':48,'multiline':False]['text':' 'changeStream' cursor, verify that the change stream results have monotonically increasing','line_number':49,'multiline':False]['text':' timestamps, and return the resume token.','line_number':50,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' Open and read a change stream on the downgrade version cluster.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' Upgrade the config db and the shards to the "latest" binVersion.','line_number':84,'multiline':False]['text':'','line_number':85,'multiline':False]['text':'','line_number':90,'multiline':False]['text':' Open and read a change stream on the upgraded cluster but still using a downgraded version of','line_number':91,'multiline':False]['text':' mongos and downgraded version for the FCV.','line_number':92,'multiline':False]['text':'','line_number':93,'multiline':False]['text':'','line_number':96,'multiline':False]['text':' Upgrade mongos to the "latest" binVersion and then open and read a change stream, this time','line_number':97,'multiline':False]['text':' with all cluster nodes upgraded but still in downgraded FCV.','line_number':98,'multiline':False]['text':'','line_number':99,'multiline':False]['text':'','line_number':108,'multiline':False]['text':' Set the FCV to the "latest" version, and then open and read a change stream on the completely','line_number':109,'multiline':False]['text':' upgraded cluster.','line_number':110,'multiline':False]['text':'','line_number':111,'multiline':False]['text':'','line_number':118,'multiline':False]['text':' Open and read a change stream on the upgraded cluster.','line_number':119,'multiline':False]['text':'','line_number':120,'multiline':False]