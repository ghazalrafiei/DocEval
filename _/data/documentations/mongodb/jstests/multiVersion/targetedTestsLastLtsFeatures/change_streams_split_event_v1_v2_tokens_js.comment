['text':'*
 * Tests the compatibility of v1 and v2 resume tokens across server version upgrade / downgrade.
 * @tags: [uses_change_streams]
 ','line_number':1,'multiline':True]['text':' Helper function to retrieve high-watermark change stream tokens.','line_number':32,'multiline':False]['text':' Record a high-watermark resume token marking the start point of the test.','line_number':40,'multiline':False]['text':' An array which will list the expected sequence of change events generated by the test.','line_number':43,'multiline':False]['text':'','line_number':46,'multiline':False]['text':' Below, we generate one of each type of change event so that we can later test resuming from a v1','line_number':47,'multiline':False]['text':' token representing each such event.','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':' The 'modify' event has to come before sharding the collection, otherwise we get different number','line_number':58,'multiline':False]['text':' of events on 'last-lts' and on 'latest'.','line_number':59,'multiline':False]['text':' Shard the test collection and split it into two chunks: one that contains all {shard: 1}','line_number':64,'multiline':False]['text':' documents and one that contains all {shard: 2} documents.','line_number':65,'multiline':False]['text':' shard key ','line_number':66,'multiline':True]['text':' split at ','line_number':66,'multiline':True]['text':' This high watermark token will be at the same clusterTime as the subsequent update event that','line_number':78,'multiline':False]['text':' needs to be split.','line_number':79,'multiline':False]['text':' A whole-DB stream will be invalidated by the dropDatabase event. We include a second dropDatabase','line_number':123,'multiline':False]['text':' event because one such event is generated on each shard, and will be reported if we resume after','line_number':124,'multiline':False]['text':' the invalidate. This second dropDatabase acts as a sentinel here, signifying that we have reached','line_number':125,'multiline':False]['text':' the end of the test stream.','line_number':126,'multiline':False]['text':' Helper function to assert on the given event fields.','line_number':131,'multiline':False]['text':' Asserts the next change event with the given pipeline and options matches the expected event.','line_number':138,'multiline':False]['text':' Returns the resume token of the matched event on success.','line_number':139,'multiline':False]['text':' When using '$_generateV2ResumeTokens: false', the change stream will additionally','line_number':147,'multiline':False]['text':' emit non-public 'kNewShardDetected' event. Unfortunately, it cannot be filtered out','line_number':148,'multiline':False]['text':' by adding a '$match' stage, so we fast-forward all these events.','line_number':149,'multiline':False]['text':' Helper function to retrieve change event tokens for all events referred by 'expectedEvents'.','line_number':156,'multiline':False]['text':' Generate v1 resume tokens for all expected events on 'last-lts'.','line_number':170,'multiline':False]['text':' TODO SERVER-82330: Validate that these tokens are indeed all v1 tokens.','line_number':173,'multiline':False]['text':' Upgrade the cluster to 'latest' to allow testing v1 - v2 resume behaviour.','line_number':175,'multiline':False]['text':' Verify that we can resume from each of the v1 tokens on the new binary version and with the','line_number':181,'multiline':False]['text':' $changeStreamSplitLargeEvent stage in the pipeline. When resuming from (i-1)-th event's token we','line_number':182,'multiline':False]['text':' expect to get the i-th event. We do not need to test the last token, because it is simply a','line_number':183,'multiline':False]['text':' sentinel value that signifies the end of the test.','line_number':184,'multiline':False]['text':' Test that we can split the update events after 'v1HwmTokenBeforeUpdateWithSplit'.','line_number':191,'multiline':False]['text':' Generate a set of v2 resume tokens for each of the entries in 'expectedSplitEvents'.','line_number':199,'multiline':False]['text':' Downgrade back to the original version.','line_number':205,'multiline':False]['text':' Test the v2 split 'update' event tokens on the downgraded binary version. When resuming from','line_number':212,'multiline':False]['text':' (i-1)-th event token we expect to get the i-th event. This means, after the last 'update' event','line_number':213,'multiline':False]['text':' we expect the first 'replace' event.','line_number':214,'multiline':False]