['text':'*
 * Test that queries containing $elemMatch correctly use an index if each child expression is
 * compatible with the index.
 * @tags: [
 *   assumes_balancer_off,
 *   assumes_read_concern_local,
 * ]
 ','line_number':1,'multiline':True]['text':' Assert the plan is using an index scan.','line_number':25,'multiline':False]['text':' TODO SERVER-77719: Ensure that the decision for using the scan lines up with CQF','line_number':31,'multiline':False]['text':' optimizer. M2: allow only collscans, M4: check bonsai behavior for index scan.','line_number':32,'multiline':False]['text':' An $elemMatch predicate is treated as nested, and the index should be used for $exists:true.','line_number':40,'multiline':False]['text':' $not within $elemMatch should not attempt to use a sparse index for $exists:false.','line_number':43,'multiline':False]['text':' $geo within $elemMatch should not attempt to use a non-geo index.','line_number':47,'multiline':False]['text':' $in with a null value within $elemMatch should use a sparse index.','line_number':64,'multiline':False]['text':' $eq with a null value within $elemMatch should use a sparse index.','line_number':67,'multiline':False]['text':' A negated regex within $elemMatch should not use an index, sparse or not.','line_number':70,'multiline':False]['text':' Tests $elemMatch with path components that are empty strings. The system should not attempt to','line_number':82,'multiline':False]['text':' use the index for these queries.','line_number':83,'multiline':False]['text':' Tests $elemMatch with supporting index and no path components that are empty strings.','line_number':88,'multiline':False]['text':' TODO SERVER-77719: Ensure that the decision for using the collection scan lines up with','line_number':127,'multiline':False]['text':' CQF optimizer. M2: allow only collscans, M4: check bonsai behavior for index scan.','line_number':128,'multiline':False]