['text':'*
 * This test ensures that geo indexes can be defined using very large and very small bounds.
 * Additionally, this test also randomizes the precision for the geo index specified in
 * 'bits' index option. See SERVER-2386.
 ','line_number':1,'multiline':True]['text':' Do some random tests (for near queries) with very large and small ranges','line_number':8,'multiline':False]['text':' Check that our box and circle queries also work','line_number':41,'multiline':False]['text':' Put a point slightly inside and outside our range','line_number':63,'multiline':False]['text':' randoms[j].randX','line_number':82,'multiline':False]['text':' randoms[j].randY','line_number':83,'multiline':False]['text':' print( "out point ");','line_number':93,'multiline':False]['text':' printjson({ x : x, y : y })','line_number':94,'multiline':False]['text':' print( "in point ");','line_number':97,'multiline':False]['text':' printjson({ x : x, y : y })','line_number':98,'multiline':False]['text':'
    function printDiff( didFind, shouldFind ){

        for( let i = 0; i < shouldFind.length; i++ ){
            let beenFound = false;
            for( let j = 0; j < didFind.length && !beenFound ; j++ ){
                beenFound = shouldFind[i].x == didFind[j].x &&
                            shouldFind[i].y == didFind[j].y
            }

            if( !beenFound ){
                print( "Could not find: " )
                shouldFind[i].inRadius = ( radius - shouldFind[i].radius >= 0 )
                printjson( shouldFind[i] )
            }
        }
    }

    print( "Finding random pts... ")
    let found = t.find( { p : { $within : { $center : [[0, 0], radius ] } } } ).toArray()
    let didFind = []
    for( let f = 0; f < found.length; f++ ){
        //printjson( found[f] )
        let x = found[f].p.x != undefined ? found[f].p.x : found[f].p[0]
        let y = found[f].p.y != undefined ? found[f].p.y : found[f].p[1]
        didFind.push({ x : x, y : y, radius : Math.sqrt( x * x + y * y ) })
    }

    print( "Did not find but should: ")
    printDiff( didFind, shouldFind )
    print( "Found but should not have: ")
    printDiff( shouldFind, didFind )
    ','line_number':104,'multiline':True]