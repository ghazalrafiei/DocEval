['text':'*Test boundary conditions for $minDistance option for $near and $nearSphere
 * queries. SERVER-9395.
 ','line_number':1,'multiline':True]['text':' 1 degree of longitude from origin.','line_number':6,'multiline':False]['text':' $minDistance is supported for 2dsphere index only, not 2d ','line_number':8,'multiline':True]['text':'','line_number':11,'multiline':False]['text':' Useful constants.','line_number':12,'multiline':False]['text':'','line_number':13,'multiline':False]['text':' One degree of longitude at the equator, about 111 km.','line_number':16,'multiline':False]['text':' Grow epsilon's exponent until epsilon exceeds the margin of error for the
 * representation of degreeInMeters. The server uses 64-bit math, too, so we'll
 * find the smallest epsilon the server can detect.
 ','line_number':19,'multiline':True]['text':'','line_number':27,'multiline':False]['text':' Test boundary conditions for $near and GeoJSON, in meters.','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' minDistance must be within the args to $near, not on the side.','line_number':31,'multiline':False]['text':'','line_number':52,'multiline':False]['text':' Test boundary conditions for $nearSphere and GeoJSON, in meters.','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':'','line_number':73,'multiline':False]['text':' Test boundary conditions for $nearSphere and a legacy point, in radians.','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' $minDistance with legacy point requires $nearSphere; $near not','line_number':76,'multiline':False]['text':' supported.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]