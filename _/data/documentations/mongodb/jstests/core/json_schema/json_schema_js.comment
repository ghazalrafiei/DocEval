['text':' listCollections tests expect that a collection is not implicitly created after a drop.','line_number':1,'multiline':False]['text':' @tags: [','line_number':2,'multiline':False]['text':'   assumes_no_implicit_collection_creation_after_drop,','line_number':3,'multiline':False]['text':'   requires_non_retryable_commands','line_number':4,'multiline':False]['text':' ]','line_number':5,'multiline':False]['text':'*
 * Tests for JSON Schema document validation.
 ','line_number':7,'multiline':True]['text':' Test that $jsonSchema fails to parse if its argument is not an object.','line_number':29,'multiline':False]['text':' Test that $jsonSchema fails to parse if the value for the "type" keyword is not a string.','line_number':37,'multiline':False]['text':' Test that $jsonSchema fails to parse if the value for the "type" keyword is an unsupported','line_number':45,'multiline':False]['text':' alias.','line_number':46,'multiline':False]['text':' Test that $jsonSchema fails to parse if the value for the properties keyword is not an','line_number':51,'multiline':False]['text':' object.','line_number':52,'multiline':False]['text':' Test that $jsonSchema fails to parse if one of the properties named inside the argument for','line_number':60,'multiline':False]['text':' the properties keyword is not an object.','line_number':61,'multiline':False]['text':' Test that $jsonSchema fails to parse if the values for the maximum, maxLength, and','line_number':66,'multiline':False]['text':' minlength keywords are not numbers.','line_number':67,'multiline':False]['text':' Test that the empty schema matches everything.','line_number':87,'multiline':False]['text':' Test that a schema just checking that the type of stored documents is "object" is legal and','line_number':90,'multiline':False]['text':' matches everything.','line_number':91,'multiline':False]['text':' Test that schemas whose top-level type is not object matches nothing.','line_number':94,'multiline':False]['text':' Test that type:"number" only matches numbers, or documents where the field is missing.','line_number':99,'multiline':False]['text':' Test that maximum restriction is enforced correctly.','line_number':105,'multiline':False]['text':' Repeat the test, but include an explicit top-level type:"object".','line_number':111,'multiline':False]['text':' Test that type:"long" only matches longs, or documents where the field is missing.','line_number':119,'multiline':False]['text':' Test that maximum restriction is enforced correctly with type:"long".','line_number':125,'multiline':False]['text':' Test that maximum restriction without a numeric type specified only applies to numbers.','line_number':131,'multiline':False]['text':' Test that maximum restriction does nothing if a non-numeric type is also specified.','line_number':136,'multiline':False]['text':' Test that maxLength restriction doesn't return strings with length greater than maxLength.','line_number':142,'multiline':False]['text':' Test that maxLength restriction returns strings with length less than or equal to maxLength.','line_number':148,'multiline':False]['text':' Test that minLength restriction doesn't return strings with length less than minLength.','line_number':154,'multiline':False]['text':' Test that minLength restriction returns strings with length greater than or equal to','line_number':160,'multiline':False]['text':' minLength.','line_number':161,'multiline':False]['text':' Test that $jsonSchema fails to parse if the values for the pattern keyword is not a string.','line_number':167,'multiline':False]['text':' Tests that the pattern keyword only returns strings that match the regex pattern.','line_number':175,'multiline':False]['text':' Test that properties keyword can be used recursively, and that it does not apply when the','line_number':187,'multiline':False]['text':' field does not contain on object.','line_number':188,'multiline':False]['text':' Test that $jsonSchema can be combined with other operators in the match language.','line_number':206,'multiline':False]['text':' Test that the type:"array" restriction works as expected.','line_number':236,'multiline':False]['text':' Test that type:"number" works correctly in the presence of arrays.','line_number':242,'multiline':False]['text':' Test that the following keywords fail to parse although present in the spec:','line_number':248,'multiline':False]['text':' - default','line_number':249,'multiline':False]['text':' - definitions','line_number':250,'multiline':False]['text':' - format','line_number':251,'multiline':False]['text':' - id','line_number':252,'multiline':False]['text':' - $ref','line_number':253,'multiline':False]['text':' - $schema','line_number':254,'multiline':False]['text':' Test that the following allowlisted keywords are verified as strings but otherwise ignored','line_number':283,'multiline':False]['text':' in a top-level schema:','line_number':284,'multiline':False]['text':' - description','line_number':285,'multiline':False]['text':' - title','line_number':286,'multiline':False]['text':' Repeat the test above with nested schema.','line_number':290,'multiline':False]['text':' Test that the $jsonSchema validator is correctly stored in the collection catalog.','line_number':294,'multiline':False]['text':' Repeat the test above using the allowlisted metadata keywords.','line_number':303,'multiline':False]['text':' Repeat again with a nested schema.','line_number':315,'multiline':False]['text':' Test that $jsonSchema and various internal match expressions work correctly with sibling','line_number':326,'multiline':False]['text':' predicates.','line_number':327,'multiline':False]