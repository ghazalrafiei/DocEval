['text':'*
 * Helper functions for testing write conflicts between concurrent, multi-document transactions.
 ','line_number':1,'multiline':True]['text':'*
     * Write conflict test cases.
     *
     * Each test case starts two transactions, T1 and T2, and runs the two given operations,
     * 'txn1Op' and 'txn2Op' in each respective transaction in an ordering defined by that
     * particular test case. A write conflict test case function expects the given operations to
     * produce a write conflict if executed in separate, concurrent transactions, given the initial
     * state of the test collection. The initial state can be can be specified with 'initOp', which
     * will be executed before either transaction is started. Each test case expects that the test
     * collection is empty before the test case is executed.
     *
     * Transaction events:
     *
     * c - commit
     * a - abort due to write conflict
     * w - conflicting write operation
     *
     ','line_number':7,'multiline':True]['text':' Skip running commands not allowed with security token.','line_number':27,'multiline':False]['text':' mongod older than 7.3 would not increment WCE metric in transactions.','line_number':43,'multiline':False]['text':' Errors such as "operation was interrupted" have been seen.','line_number':53,'multiline':False]['text':' Transactions on sharded collections can land on multiple shards and increment the','line_number':61,'multiline':False]['text':' total WCE metric by the number of shards involved. Similarly, BulkWriteOverride turns','line_number':62,'multiline':False]['text':' a single op into multiple writes and causes multiple WCEs.','line_number':63,'multiline':False]['text':'*
     * Write conflict test case, ordering 1.
     *
     * Transactional lifetimes:
     *
     * T1: |-------w------c
     * T2:    |--------a
     *
     ','line_number':72,'multiline':True]['text':' Initialize the collection state.','line_number':82,'multiline':False]['text':' Not a writeError but a total command failure','line_number':97,'multiline':False]['text':' Start finalizing transaction with a no-op.','line_number':111,'multiline':False]['text':'*
     * Write conflict test case, ordering 2.
     *
     * Transactional lifetimes:
     *
     * T1: |--------------a
     * T2:    |---w---c
     *
     ','line_number':115,'multiline':True]['text':' Initialize the collection state.','line_number':125,'multiline':False]['text':' Start T1 with a no-op.','line_number':137,'multiline':False]['text':' Not a writeError but a total command failure','line_number':143,'multiline':False]['text':' Start finalizing transaction with a no-op.','line_number':155,'multiline':False]['text':'*
     * Runs a specific write conflict test case.
     *
     * See the documentation above for further explanation of these test cases. After running the
     * test case, this function checks the final expected state of the collection, and then removes
     * all documents from the test collection.
     *
     * @param coll - a collection object that represents which collection to execute the test
     * operations against.
     * @param txn1Op - the command object to execute on transaction 1.
     * @param txn2Op - the command object to execute on transaction 2.
     * @param expectedDocs - an array of documents that is the expected state of the test collection
     * after both transactions are committed/aborted.
     * @param writeConflictTestCase - the write conflict test case to execute. it should be one of
     * the test case functions defined above in 'WriteConflictsTestCases'.
     * @param initOp (optional) - an operation to execute against the test collection before
     * starting either transaction.
     ','line_number':159,'multiline':True]['text':' Make sure the collection is empty.','line_number':178,'multiline':False]['text':' Initiate two sessions.','line_number':184,'multiline':False]['text':' Run the specified write conflict test.','line_number':193,'multiline':False]['text':' We make sure to abort any idle transactions.','line_number':198,'multiline':False]['text':' Check the final state of the collection.','line_number':208,'multiline':False]['text':' Clean up the collection.','line_number':211,'multiline':False]