['text':'*
 * Helper functions for testing prepared transactions.
 ','line_number':1,'multiline':True]['text':'*
     * Prepares the active transaction on the session. This expects the 'prepareTransaction' command
     * to succeed and return a non-null 'prepareTimestamp'.
     *
     * @return {Timestamp} the transaction's prepareTimestamp
     ','line_number':6,'multiline':True]['text':'*
     * Commits the active transaction on the session.
     *
     * @return {object} the response to the 'commitTransaction' command.
     ','line_number':27,'multiline':True]['text':' End the transaction on the shell session.','line_number':43,'multiline':False]['text':'*
     * Creates a session object on the given connection with the provided 'lsid'.
     *
     * @return {session} the session created.
     ','line_number':53,'multiline':True]['text':'*
     * Writes until the oplog exceeds its configured maximum, proving that the node keeps as much
     * oplog as necessary to preserve entries for the oldest active transaction.
     ','line_number':72,'multiline':True]['text':'*
     * Waits for the oplog to be truncated, proving that once a transaction finishes its oplog
     * entries can be reclaimed.
     ','line_number':89,'multiline':True]['text':' Old entries are reclaimed when oplog size reaches new milestone. With a 1MB oplog,','line_number':100,'multiline':False]['text':' milestones are every 0.1 MB (see WiredTigerRecordStore::OplogTruncateMarkers) so write','line_number':101,'multiline':False]['text':' about 0.2 MB to be certain.','line_number':102,'multiline':False]['text':' The oplog milestone system allows the oplog to grow to 110% its max size.','line_number':118,'multiline':False]['text':'*
     * Waits for the oplog entry of the given timestamp to be majority committed.
     ','line_number':129,'multiline':True]