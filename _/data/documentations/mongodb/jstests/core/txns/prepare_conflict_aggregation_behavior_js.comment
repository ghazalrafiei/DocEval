['text':'*
 * Test the behavior of aggregation with prepare conflicts. Reads from an aggregate pipeline
 * should not block on prepare conflicts, but writing out to a collection as a part of an aggregate
 * pipeline should block on prepare conflicts.
 *
 * @tags: [
 *   # The test runs commands that are not allowed with security token: endSession,
 *   # prepareTransaction.
 *   not_allowed_with_signed_security_token,
 *   references_foreign_collection,
 *   uses_transactions,
 *   uses_prepare_transaction,
 * ]
 ','line_number':1,'multiline':True]['text':' 5 seconds.','line_number':18,'multiline':False]['text':' Make sure that we can see the inserts from the aggregation but not the updates from the','line_number':51,'multiline':False]['text':' prepared transaction.','line_number':52,'multiline':False]['text':' Make sure that we can't see the update from the aggregation or the prepared transaction.','line_number':73,'multiline':False]['text':' Make sure that the $merge pipeline works once the transaction is committed.','line_number':78,'multiline':False]['text':' At the time of this writing, change streams can sometimes adjust the readConcern to','line_number':82,'multiline':False]['text':' 'majority' after receiving the command and thus need to wait for read concern again. When','line_number':83,'multiline':False]['text':' doing this, we assume that a change stream with a stage which performs writes is not allowed.','line_number':84,'multiline':False]['text':' Test that this is true.','line_number':85,'multiline':False]