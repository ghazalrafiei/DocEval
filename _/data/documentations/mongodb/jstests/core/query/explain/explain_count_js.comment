['text':' Test running explains on count commands.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' @tags: [requires_fastcount]','line_number':3,'multiline':False]['text':'*
 * Given an explain output from a COUNT_SCAN stage, check that a indexBounds field is present.
 ','line_number':12,'multiline':True]['text':'*
 * Ensure that the SHARDING_FILTER's child stage is an IXSCAN (and not a fetch). This is to ensure
 * sharded clusters can still run the count command with a predicate on indexed fields reasonably
 * fast. Assumes that the shard key is part of the index.
 ','line_number':26,'multiline':True]['text':'*
 * Check that the explain from a count command run on a collection with a usable index for the
 * predicate produces a reasonable plan. On sharded collections, we expect to have an IXSCAN
 * followed by a SHARDING_FILTER. Otherwise, the COUNT_SCAN stage should be used.
 ','line_number':44,'multiline':True]['text':' On sharded collections we have a SHARDING_FILTER with a child that's an IXSCAN.','line_number':52,'multiline':False]['text':' On a standalone we just do a COUNT_SCAN over the {a: 1, _id: 1} index.','line_number':55,'multiline':False]['text':' TODO SERVER-82095 remove creation of database once','line_number':62,'multiline':False]['text':' explain behavior will be equal in both standalone and sharded cluster','line_number':63,'multiline':False]['text':' Create database','line_number':65,'multiline':False]['text':' Collection does not exist.','line_number':69,'multiline':False]['text':' Collection does not exist with skip, limit, and/or query.','line_number':75,'multiline':False]['text':' Now add a bit of data to the collection.','line_number':106,'multiline':False]['text':' On sharded clusters, we'll want the shard key to be indexed, so we make _id part of the index.','line_number':107,'multiline':False]['text':' This means counts will not have to fetch from the document in order to get the shard key.','line_number':108,'multiline':False]['text':' Trivial count with no skip, limit, or query.','line_number':114,'multiline':False]['text':' Trivial count with skip.','line_number':120,'multiline':False]['text':' Trivial count with limit.','line_number':127,'multiline':False]['text':' Trivial count with negative limit.','line_number':134,'multiline':False]['text':' Trivial count with both limit and skip.','line_number':141,'multiline':False]['text':' With a query.','line_number':148,'multiline':False]['text':' With a query and skip.','line_number':156,'multiline':False]['text':' With a query and limit.','line_number':164,'multiline':False]['text':' Insert one more doc for the last few tests.','line_number':172,'multiline':False]['text':' Case where all results are skipped.','line_number':175,'multiline':False]['text':' Case where we have a limit, but we don't hit it.','line_number':183,'multiline':False]