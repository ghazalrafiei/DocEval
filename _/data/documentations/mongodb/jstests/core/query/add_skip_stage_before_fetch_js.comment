['text':' SERVER-13946: When possible, place skip stages before fetch stages to avoid unnecessarily','line_number':1,'multiline':False]['text':' fetching documents that will be immediately discarded.','line_number':2,'multiline':False]['text':' The skip operation in a sharded query always occurs in the mongoS, so this test doesn't make','line_number':4,'multiline':False]['text':' sense on a sharded collection.','line_number':5,'multiline':False]['text':' @tags: [','line_number':6,'multiline':False]['text':'   assumes_unsharded_collection,','line_number':7,'multiline':False]['text':'   operations_longer_than_stepdown_interval_in_txns,','line_number':8,'multiline':False]['text':' ]','line_number':9,'multiline':False]['text':' The {a: 0, b: 2} query will match exactly one quarter of the documents in the collection:','line_number':34,'multiline':False]['text':' 2500 in total. In the test queries below, we skip the first 2400, returning exactly 100','line_number':35,'multiline':False]['text':' documents.','line_number':36,'multiline':False]['text':' This find can be computed using the index, so we should only need to fetch the 100 documents','line_number':38,'multiline':False]['text':' that get returned to the client after skipping the first 2400.','line_number':39,'multiline':False]['text':' This sort can also be computed using the index.','line_number':44,'multiline':False]['text':' This query is covered by the index, so there should be no fetch at all.','line_number':50,'multiline':False]['text':' This sort requires a field that is not in the index, so we should be fetching all 2500','line_number':60,'multiline':False]['text':' documents that match the find predicate.','line_number':61,'multiline':False]