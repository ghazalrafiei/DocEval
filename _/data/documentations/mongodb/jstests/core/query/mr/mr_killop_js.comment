['text':' Test killop applied to m/r operations and child ops of m/r operations.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   # The test runs commands that are not allowed with security token: mapreduce.','line_number':4,'multiline':False]['text':'   not_allowed_with_signed_security_token,','line_number':5,'multiline':False]['text':'   # mapReduce does not support afterClusterTime.','line_number':6,'multiline':False]['text':'   does_not_support_causal_consistency,','line_number':7,'multiline':False]['text':'   does_not_support_stepdowns,','line_number':8,'multiline':False]['text':'   uses_map_reduce_with_temp_collections,','line_number':9,'multiline':False]['text':'   uses_multiple_connections,','line_number':10,'multiline':False]['text':'   uses_parallel_shell,','line_number':11,'multiline':False]['text':'   no_selinux,','line_number':12,'multiline':False]['text':'   requires_scripting,','line_number':13,'multiline':False]['text':' ]','line_number':14,'multiline':False]['text':'* @return op code for map reduce op created by spawned shell. ','line_number':21,'multiline':True]['text':' Identify a map/reduce operation by its collection, whether or not it is currently active.','line_number':44,'multiline':False]['text':'*
 * Run one mapReduce with the specified parameters in a parallel shell. Kill the map reduce op and
 * wait for the map reduce op to terminate.
 ','line_number':51,'multiline':True]['text':' Ensure we have 2 documents for the reduce to run.','line_number':58,'multiline':False]['text':' Windows shell strips all double quotes from command line, so use single quotes.','line_number':70,'multiline':False]['text':' printed.','line_number':74,'multiline':False]['text':' When the map reduce op is killed, the spawned shell will exit','line_number':90,'multiline':False]['text':'* Test using wait and non wait modes. ','line_number':98,'multiline':True]['text':'* Test looping in map function. ','line_number':104,'multiline':True]['text':' Without scope.','line_number':106,'multiline':False]['text':' map','line_number':108,'multiline':False]['text':' reduce','line_number':111,'multiline':False]['text':' finalize','line_number':112,'multiline':False]['text':' scope','line_number':113,'multiline':False]['text':' With scope.','line_number':116,'multiline':False]['text':' map','line_number':120,'multiline':False]['text':' reduce','line_number':123,'multiline':False]['text':' finalize','line_number':124,'multiline':False]['text':' scope','line_number':125,'multiline':False]['text':'* Test looping in reduce function. ','line_number':129,'multiline':True]['text':' Without scope.','line_number':131,'multiline':False]['text':' map','line_number':135,'multiline':False]['text':' reduce','line_number':136,'multiline':False]['text':' finalize','line_number':137,'multiline':False]['text':' scope','line_number':138,'multiline':False]['text':' With scope.','line_number':141,'multiline':False]['text':' map','line_number':145,'multiline':False]['text':' reduce','line_number':148,'multiline':False]['text':' finalize','line_number':149,'multiline':False]['text':' scope','line_number':150,'multiline':False]['text':'* Test looping in finalize function. ','line_number':154,'multiline':True]['text':' Without scope.','line_number':156,'multiline':False]['text':' map','line_number':160,'multiline':False]['text':' reduce','line_number':163,'multiline':False]['text':' finalize','line_number':164,'multiline':False]['text':' scope','line_number':165,'multiline':False]['text':' With scope.','line_number':168,'multiline':False]['text':' map','line_number':172,'multiline':False]['text':' reduce','line_number':175,'multiline':False]['text':' finalize','line_number':178,'multiline':False]['text':' scope','line_number':179,'multiline':False]