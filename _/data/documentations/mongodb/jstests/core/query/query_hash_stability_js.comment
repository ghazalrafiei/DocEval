['text':'*
 * Test that 'queryHash' and 'planCacheKey' from explain() output have sensible values
 * across catalog changes.
 * @tags: [
 *   assumes_read_concern_local,
 *   # This test expects query shapes and plans to stay the same at the beginning and
 *   # at the end of test run. That's just wrong expectation when chunks are moving
 *   # randomly across shards.
 *   assumes_balancer_off,
 *   requires_fcv_51,
 *   # The test expects the plan cache key on a given node to remain stable. However, the plan
 *   # cache key is allowed to change between versions. Therefore, this test cannot run in
 *   # passthroughs that do upgrade/downgrade.
 *   cannot_run_during_upgrade_downgrade,
 *   # This test expects stable query plans, creating unanticipated indexes can lead to variations
 *   # in the plans.
 *   assumes_no_implicit_index_creation,
 * ]
 ','line_number':1,'multiline':True]['text':' Be sure the collection exists.','line_number':27,'multiline':False]['text':'*
 * Given two explain plans (firstExplain, secondExplain), this function makes assertions about their
 * 'planCacheField' values (in particular, whether they are 'expectedToMatch').
 ','line_number':30,'multiline':True]['text':' TODO SERVER-77719: Ensure that the test is valid for different combinations of optimizer used','line_number':45,'multiline':False]['text':' for with/without index cases.','line_number':46,'multiline':False]['text':' SERVER-56980: When running in a sharded environment, we group the values for 'planCacheField'','line_number':51,'multiline':False]['text':' by shard. This is because in a multi-version environment, we want to ensure that we are','line_number':52,'multiline':False]['text':' comparing the results produced by the same shard in the event that the planCacheKey format','line_number':53,'multiline':False]['text':' changed in between versions.','line_number':54,'multiline':False]['text':' Should have the same number of elements.','line_number':67,'multiline':False]['text':' Match the values for 'planCacheField' for each shard.','line_number':73,'multiline':False]['text':' Add a sparse index.','line_number':92,'multiline':False]['text':' 'queryHash' shouldn't change across catalog changes.','line_number':97,'multiline':False]['text':' We added an index so the plan cache key changed.','line_number':105,'multiline':False]['text':' Drop the index.','line_number':113,'multiline':False]['text':' 'queryHash' shouldn't change across catalog changes.','line_number':117,'multiline':False]['text':' SBE's planCacheKey encoding encodes "collection version" which will be increased after dropping','line_number':125,'multiline':False]['text':' an index.','line_number':126,'multiline':False]['text':' The 'planCacheKey' should be the same as what it was before we dropped the index.','line_number':128,'multiline':False]