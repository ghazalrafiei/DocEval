['text':' Test that indexKey $meta projection works in find and aggregate commands and produces correct','line_number':1,'multiline':False]['text':' result depending on whether index key metadata is available or not.','line_number':2,'multiline':False]['text':' Appends the given projection 'projSpec' with the {$meta: "indexKey"} expression and ensures','line_number':11,'multiline':False]['text':' that it can be applied both in find and aggregate commands. The 'matchSpec' parameters defines','line_number':12,'multiline':False]['text':' a query filter to be used in the find command, or in the $match stage of the pipeline. The','line_number':13,'multiline':False]['text':' 'indexSpec' is used as a hint to selection of a specific plan. The result of the find command','line_number':14,'multiline':False]['text':' is compared against 'expectedResult' parameter, whilst the result of the aggregate against','line_number':15,'multiline':False]['text':' 'aggExpectedResult'.','line_number':16,'multiline':False]['text':' $meta with an inclusion projection.','line_number':48,'multiline':False]['text':' $meta with an exclusion projection.','line_number':56,'multiline':False]['text':' $meta with _id only (inclusion).','line_number':64,'multiline':False]['text':' $meta with _id only (exclusion). Note that this type of projection is equivalent to a','line_number':72,'multiline':False]['text':' $meta-only projection, which is treated differently in find and aggregate (it's an','line_number':73,'multiline':False]['text':' inclusion projection in find, and exclusion in aggregate).','line_number':74,'multiline':False]['text':' $meta only (see comment above regarding $meta-only projection in find and aggregate).','line_number':84,'multiline':False]['text':' $meta with sort (when an index is available this should result in a non-blocking sort','line_number':94,'multiline':False]['text':' and the index key metadata should be available).','line_number':95,'multiline':False]['text':'','line_number':96,'multiline':False]['text':' If a collection is sharded, we will split the pipeline and dispatch only a $project','line_number':97,'multiline':False]['text':' stage, containing inclusion projection, to each shard, and apply the $meta projection on','line_number':98,'multiline':False]['text':' mongos. However, given than no information has been passed to the shard to request to','line_number':99,'multiline':False]['text':' include indexKey metadata to a document, the $meta expression won't be able to extract','line_number':100,'multiline':False]['text':' the indexKey. So, this scenario currently is not supported and we need to make sure that','line_number':101,'multiline':False]['text':' we run this test on an unsharded collection only.','line_number':102,'multiline':False]