['text':'*
 * Tests to verify that the queries return correct results in the presence of partial hashed
 * index and sparse index. The test verifies compound hashed index with hashed prefix and non-hashed
 * prefix.
 * @tags: [
 *   assumes_read_concern_local,
 * ]
 ','line_number':1,'multiline':True]['text':'*
 * Runs find command with the 'filter' and validates that the output returned matches
 * 'expectedOutput'. Also runs explain() command on the same find command and validates that all
 * the 'expectedStages' are present in the plan returned.
 ','line_number':20,'multiline':True]['text':' We ignore the order since hashed index order is not predictable.','line_number':31,'multiline':False]['text':' Verify index not used for null/missing queries with sparse index.','line_number':41,'multiline':False]['text':' Verify index can be used for non-null queries with sparse index.','line_number':45,'multiline':False]['text':' Test {$exists: false} when hashed field is not a prefix and index is sparse.','line_number':58,'multiline':False]['text':'*
 * Tests sparse indexes with non-hashed prefix.
 ','line_number':67,'multiline':True]['text':'*
 * Test sparse indexes with hashed prefix.
 ','line_number':72,'multiline':True]['text':'*
 * Tests for partial indexes.
 ','line_number':77,'multiline':True]['text':' Verify that index is not used if the query predicate doesn't match the','line_number':84,'multiline':False]['text':' 'partialFilterExpression'.','line_number':85,'multiline':False]['text':' Verify that index is used if the query predicate matches the 'partialFilterExpression'.','line_number':88,'multiline':False]