['text':' Confirms that profile entries for find commands contain the appropriate query hash.','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' @tags: [','line_number':3,'multiline':False]['text':'   # The test runs commands that are not allowed with security token: setProfilingLevel.','line_number':4,'multiline':False]['text':'   not_allowed_with_signed_security_token,','line_number':5,'multiline':False]['text':'   assumes_against_mongod_not_mongos,','line_number':6,'multiline':False]['text':'   assumes_read_concern_unchanged,','line_number':7,'multiline':False]['text':'   does_not_support_stepdowns,','line_number':8,'multiline':False]['text':'   requires_profiling,','line_number':9,'multiline':False]['text':'   # TODO SERVER-67607: Test plan cache with CQF enabled.','line_number':10,'multiline':False]['text':'   cqf_experimental_incompatible,','line_number':11,'multiline':False]['text':' ]','line_number':12,'multiline':False]['text':' Utility function to list query shapes in cache. The length of the list of query shapes','line_number':21,'multiline':False]['text':' returned is used to validate the number of query hashes accumulated.','line_number':22,'multiline':False]['text':' We need two indices since we do not currently create cache entries for queries with a single','line_number':28,'multiline':False]['text':' candidate plan.','line_number':29,'multiline':False]['text':' Don't profile the setFCV command, which could be run during this test in the','line_number':33,'multiline':False]['text':' fcv_upgrade_downgrade_replica_sets_jscore_passthrough suite.','line_number':34,'multiline':False]['text':' Executes query0 and gets the corresponding system.profile entry.','line_number':38,'multiline':False]['text':' Executes query1 and gets the corresponding system.profile entry.','line_number':48,'multiline':False]['text':' Since the query shapes are the same, we only expect there to be one query shape present in','line_number':56,'multiline':False]['text':' the plan cache commands output.','line_number':57,'multiline':False]['text':' Test that the planCacheKey is the same in explain output for query0 and query1 as it was','line_number':63,'multiline':False]['text':' in system.profile output.','line_number':64,'multiline':False]['text':' Check that the 'planCacheKey' is the same for both query 0 and query 1.','line_number':76,'multiline':False]['text':' Executes query2 and gets the corresponding system.profile entry.','line_number':79,'multiline':False]['text':' Query0 and query1 should both have the same query hash for the given indexes. Whereas, query2','line_number':87,'multiline':False]['text':' should have a unique hash. Asserts that a total of two distinct hashes results in two query','line_number':88,'multiline':False]['text':' shapes.','line_number':89,'multiline':False]['text':' The planCacheKey in explain should be different for query2 than the hash from query0 and','line_number':94,'multiline':False]['text':' query1.','line_number':95,'multiline':False]['text':' Now drop an index. This should change the 'planCacheKey' value for queries, but not the','line_number':102,'multiline':False]['text':' 'queryHash'.','line_number':103,'multiline':False]