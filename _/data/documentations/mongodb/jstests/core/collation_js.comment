['text':' Cannot implicitly shard accessed collections because of collection existing when none','line_number':1,'multiline':False]['text':' expected.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' @tags: [','line_number':4,'multiline':False]['text':'   # The test runs commands that are not allowed with security token: applyOps,','line_number':5,'multiline':False]['text':'   # cloneCollectionAsCapped, mapReduce, reIndex.','line_number':6,'multiline':False]['text':'   not_allowed_with_signed_security_token,','line_number':7,'multiline':False]['text':'   assumes_no_implicit_collection_creation_after_drop,','line_number':8,'multiline':False]['text':'   # Asserts that some queries use a collection scan.','line_number':9,'multiline':False]['text':'   assumes_no_implicit_index_creation,','line_number':10,'multiline':False]['text':'   does_not_support_stepdowns,','line_number':11,'multiline':False]['text':'   requires_capped,','line_number':12,'multiline':False]['text':'   requires_non_retryable_commands,','line_number':13,'multiline':False]['text':'   requires_non_retryable_writes,','line_number':14,'multiline':False]['text':'   requires_scripting,','line_number':15,'multiline':False]['text':'   # Tenant migrations don't support applyOps.','line_number':16,'multiline':False]['text':'   tenant_migration_incompatible,','line_number':17,'multiline':False]['text':'   # This test has statements that do not support non-local read concern.','line_number':18,'multiline':False]['text':'   does_not_support_causal_consistency,','line_number':19,'multiline':False]['text':' ]','line_number':20,'multiline':False]['text':' Integration tests for the collation feature.','line_number':22,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' Test using testDb.createCollection() to make a collection with a default collation.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' Attempting to create a collection with an invalid collation should fail.','line_number':78,'multiline':False]['text':' Attempting to create a collection whose collation version does not match the collator version','line_number':89,'multiline':False]['text':' produced by ICU should result in failure with a special error code.','line_number':90,'multiline':False]['text':' Ensure we can create a collection with the "simple" collation as the collection default.','line_number':95,'multiline':False]['text':' Ensure that we populate all collation-related fields when we create a collection with a valid','line_number':101,'multiline':False]['text':' collation.','line_number':102,'multiline':False]['text':' Ensure that an index with no collation inherits the collection-default collation.','line_number':121,'multiline':False]['text':' Ensure that an index which specifies an overriding collation does not use the collection','line_number':136,'multiline':False]['text':' default.','line_number':137,'multiline':False]['text':' Ensure that an index which specifies the "simple" collation as an overriding collation still','line_number':152,'multiline':False]['text':' does not use the collection default.','line_number':153,'multiline':False]['text':' Ensure that a v=1 index doesn't inherit the collection-default collation.','line_number':157,'multiline':False]['text':' Test that all indexes retain their current collation when the collection is re-indexed. (Only','line_number':161,'multiline':False]['text':' standalone mode supports the reIndex command.)','line_number':162,'multiline':False]['text':'','line_number':195,'multiline':False]['text':' Creating an index with a collation.','line_number':196,'multiline':False]['text':'','line_number':197,'multiline':False]['text':' Attempting to build an index with an invalid collation should fail.','line_number':199,'multiline':False]['text':' Attempting to create an index whose collation version does not match the collator version','line_number':207,'multiline':False]['text':' produced by ICU should result in failure with a special error code.','line_number':208,'multiline':False]['text':' Test that an index with a non-simple collation contains collator-generated comparison keys','line_number':270,'multiline':False]['text':' rather than the verbatim indexed strings.','line_number':271,'multiline':False]['text':' Test that a query with a string comparison can use an index with a non-simple collation if it','line_number':282,'multiline':False]['text':' has a matching collation.','line_number':283,'multiline':False]['text':' Query has simple collation, but index has fr_CA collation.','line_number':288,'multiline':False]['text':' Query has en_US collation, but index has fr_CA collation.','line_number':294,'multiline':False]['text':' Matching collations.','line_number':300,'multiline':False]['text':' Should not be possible to create a text index with an explicit non-simple collation.','line_number':306,'multiline':False]['text':' Text index builds which inherit a non-simple default collation should fail.','line_number':311,'multiline':False]['text':' Text index build should succeed on a collection with a non-simple default collation if it','line_number':317,'multiline':False]['text':' explicitly overrides the default with {locale: "simple"}.','line_number':318,'multiline':False]['text':'','line_number':324,'multiline':False]['text':' Collation tests for aggregation.','line_number':325,'multiline':False]['text':'','line_number':326,'multiline':False]['text':' Aggregation should return correct results when collation specified and collection does not','line_number':328,'multiline':False]['text':' exist.','line_number':329,'multiline':False]['text':' Aggregation should return correct results when collation specified and collection does exist.','line_number':334,'multiline':False]['text':' Aggregation should return correct results when no collation specified and collection has a','line_number':344,'multiline':False]['text':' default collation.','line_number':345,'multiline':False]['text':' Aggregation should return correct results when "simple" collation specified and collection','line_number':353,'multiline':False]['text':' has a default collation.','line_number':354,'multiline':False]['text':' Aggregation should select compatible index when no collation specified and collection has a','line_number':362,'multiline':False]['text':' default collation.','line_number':363,'multiline':False]['text':' Aggregation should not use index when no collation specified and collection default','line_number':372,'multiline':False]['text':' collation is incompatible with index collation.','line_number':373,'multiline':False]['text':' Explain of aggregation with collation should succeed.','line_number':382,'multiline':False]['text':'','line_number':385,'multiline':False]['text':' Collation tests for count.','line_number':386,'multiline':False]['text':'','line_number':387,'multiline':False]['text':' Count should return correct results when collation specified and collection does not exist.','line_number':389,'multiline':False]['text':' Count should return correct results when collation specified and collection does exist.','line_number':394,'multiline':False]['text':' Count should return correct results when no collation specified and collection has a default','line_number':406,'multiline':False]['text':' collation.','line_number':407,'multiline':False]['text':' Count should return correct results when "simple" collation specified and collection has a','line_number':415,'multiline':False]['text':' default collation.','line_number':416,'multiline':False]['text':' Count should return correct results when collation specified and when run with explain.','line_number':424,'multiline':False]['text':' Explain of COUNT_SCAN stage should include index collation.','line_number':443,'multiline':False]['text':' Explain of COUNT_SCAN stage should include index collation when index collation is','line_number':464,'multiline':False]['text':' inherited from collection default.','line_number':465,'multiline':False]['text':' Should be able to use COUNT_SCAN for queries over strings.','line_number':487,'multiline':False]['text':'','line_number':497,'multiline':False]['text':' Collation tests for distinct.','line_number':498,'multiline':False]['text':'','line_number':499,'multiline':False]['text':' Distinct should return correct results when collation specified and collection does not','line_number':501,'multiline':False]['text':' exist.','line_number':502,'multiline':False]['text':' Distinct should return correct results when collation specified and no indexes exist.','line_number':507,'multiline':False]['text':' Distinct should return correct results when collation specified and compatible index exists.','line_number':519,'multiline':False]['text':' Distinct should return correct results when no collation specified and collection has a','line_number':526,'multiline':False]['text':' default collation.','line_number':527,'multiline':False]['text':' Distinct should return correct results when "simple" collation specified and collection has a','line_number':537,'multiline':False]['text':' default collation.','line_number':538,'multiline':False]['text':' Distinct should select compatible index when no collation specified and collection has a','line_number':548,'multiline':False]['text':' default collation.','line_number':549,'multiline':False]['text':' Distinct scan on strings can be used over an index with a collation when the predicate has','line_number':558,'multiline':False]['text':' exact bounds.','line_number':559,'multiline':False]['text':' Distinct scan cannot be used over an index with a collation when the predicate has inexact','line_number':565,'multiline':False]['text':' bounds.','line_number':566,'multiline':False]['text':' Distinct scan can be used without a fetch when predicate has exact non-string bounds.','line_number':572,'multiline':False]['text':' Distinct should not use index when no collation specified and collection default collation is','line_number':578,'multiline':False]['text':' incompatible with index collation.','line_number':579,'multiline':False]['text':' Explain of DISTINCT_SCAN stage should include index collation.','line_number':587,'multiline':False]['text':' Explain of DISTINCT_SCAN stage should include index collation when index collation is','line_number':608,'multiline':False]['text':' inherited from collection default.','line_number':609,'multiline':False]['text':'','line_number':631,'multiline':False]['text':' Collation tests for find.','line_number':632,'multiline':False]['text':'','line_number':633,'multiline':False]['text':' Find should return correct results when collation specified and collection does not','line_number':635,'multiline':False]['text':' exist.','line_number':636,'multiline':False]['text':' Find should return correct results when collation specified and filter is a match on _id.','line_number':641,'multiline':False]['text':' Find should return correct results when collation specified and no indexes exist.','line_number':652,'multiline':False]['text':' Find should return correct results when collation specified and compatible index exists.','line_number':658,'multiline':False]['text':' Find should return correct results when collation specified and compatible partial index','line_number':671,'multiline':False]['text':' exists.','line_number':672,'multiline':False]['text':' Queries that use a index with a non-matching collation should add a sort','line_number':684,'multiline':False]['text':' stage if needed.','line_number':685,'multiline':False]['text':' Ensure results from an index that doesn't match the query collation are sorted to match','line_number':690,'multiline':False]['text':' the requested collation.','line_number':691,'multiline':False]['text':' Find should return correct results when collation specified and query contains $expr.','line_number':698,'multiline':False]['text':' Find should return correct results when no collation specified and collection has a default','line_number':705,'multiline':False]['text':' collation.','line_number':706,'multiline':False]['text':' Find with idhack should return correct results when no collation specified and collection has','line_number':720,'multiline':False]['text':' a default collation.','line_number':721,'multiline':False]['text':' Find should return correct results for query containing $expr when no collation specified and','line_number':729,'multiline':False]['text':' collection has a default collation.','line_number':730,'multiline':False]['text':' Find should return correct results when "simple" collation specified and collection has a','line_number':738,'multiline':False]['text':' default collation.','line_number':739,'multiline':False]['text':' Find on _id should return correct results when query collation differs from collection','line_number':752,'multiline':False]['text':' default collation.','line_number':753,'multiline':False]['text':' Find on _id should use idhack stage when query inherits collection default collation.','line_number':763,'multiline':False]['text':' Find on _id should use idhack stage when explicitly given query collation matches','line_number':771,'multiline':False]['text':' collection default.','line_number':772,'multiline':False]['text':' Find on _id should not use idhack stage when query collation does not match collection','line_number':781,'multiline':False]['text':' default.','line_number':782,'multiline':False]['text':' Find should select compatible index when no collation specified and collection has a default','line_number':793,'multiline':False]['text':' collation.','line_number':794,'multiline':False]['text':' Assert the plan is using an index scan.','line_number':801,'multiline':False]['text':' TODO SERVER-77719: Ensure that the decision for using the scan lines up with CQF','line_number':807,'multiline':False]['text':' optimizer. M2: allow only collscans, M4: check bonsai behavior for index scan.','line_number':808,'multiline':False]['text':' Find should select compatible index when no collation specified and collection default','line_number':815,'multiline':False]['text':' collation is "simple".','line_number':816,'multiline':False]['text':' Assert the plan is using an index scan.','line_number':823,'multiline':False]['text':' TODO SERVER-77719: Ensure that the decision for using the scan lines up with CQF','line_number':829,'multiline':False]['text':' optimizer. M2: allow only collscans, M4: check bonsai behavior for index scan.','line_number':830,'multiline':False]['text':' Find should not use index when no collation specified, index collation is "simple", and','line_number':837,'multiline':False]['text':' collection has a non-"simple" default collation.','line_number':838,'multiline':False]['text':' Find should select compatible index when "simple" collation specified and collection has a','line_number':846,'multiline':False]['text':' non-"simple" default collation.','line_number':847,'multiline':False]['text':' Find should return correct results when collation specified and run with explain.','line_number':855,'multiline':False]['text':' Explain of find should include query collation.','line_number':870,'multiline':False]['text':' Explain of find should include query collation when inherited from collection default.','line_number':889,'multiline':False]['text':' Explain of IXSCAN stage should include index collation.','line_number':908,'multiline':False]['text':' Explain of IXSCAN stage should include index collation when index collation is inherited from','line_number':930,'multiline':False]['text':' collection default.','line_number':931,'multiline':False]['text':'','line_number':953,'multiline':False]['text':' Collation tests for findAndModify.','line_number':954,'multiline':False]['text':'','line_number':955,'multiline':False]['text':' findAndModify should return correct results when collation specified and collection does not','line_number':957,'multiline':False]['text':' exist.','line_number':958,'multiline':False]['text':' Update-findAndModify should return correct results when collation specified.','line_number':966,'multiline':False]['text':' Explain of update-findAndModify should return correct results when collation specified.','line_number':978,'multiline':False]['text':' Delete-findAndModify should return correct results when collation specified.','line_number':990,'multiline':False]['text':' Explain of delete-findAndModify should return correct results when collation specified.','line_number':999,'multiline':False]['text':' findAndModify should return correct results when no collation specified and collection has a','line_number':1010,'multiline':False]['text':' default collation.','line_number':1011,'multiline':False]['text':' Case of _id lookup and projection on a collection with collection-default collation. Note that','line_number':1019,'multiline':False]['text':' retryable writes do not always respect the 'fields' option (SERVER-31242) so we must include','line_number':1020,'multiline':False]['text':' all fields in the document.','line_number':1021,'multiline':False]['text':' Case of _id lookup and hint on a collection with collection-default collation.','line_number':1024,'multiline':False]['text':' Remove the document.','line_number':1031,'multiline':False]['text':' findAndModify should return correct results when "simple" collation specified and collection','line_number':1034,'multiline':False]['text':' has a default collation.','line_number':1035,'multiline':False]['text':'','line_number':1047,'multiline':False]['text':' Collation tests for mapReduce.','line_number':1048,'multiline':False]['text':'','line_number':1049,'multiline':False]['text':' mapReduce should return correct results when collation specified and no indexes exist.','line_number':1051,'multiline':False]['text':' mapReduce should return correct results when no collation specified and collection has a','line_number':1067,'multiline':False]['text':' default collation.','line_number':1068,'multiline':False]['text':' mapReduce should return correct results when "simple" collation specified and collection has','line_number':1085,'multiline':False]['text':' a default collation.','line_number':1086,'multiline':False]['text':'','line_number':1103,'multiline':False]['text':' Collation tests for remove.','line_number':1104,'multiline':False]['text':'','line_number':1105,'multiline':False]['text':' Remove should succeed when collation specified and collection does not exist.','line_number':1107,'multiline':False]['text':' Remove should return correct results when collation specified.','line_number':1112,'multiline':False]['text':' Explain of remove should return correct results when collation specified.','line_number':1121,'multiline':False]['text':' Remove should return correct results when no collation specified and collection has a default','line_number':1133,'multiline':False]['text':' collation.','line_number':1134,'multiline':False]['text':' Remove with idhack should return correct results when no collation specified and collection','line_number':1144,'multiline':False]['text':' has a default collation.','line_number':1145,'multiline':False]['text':' Remove should return correct results for an IDHACK eligible query when no collation is specified','line_number':1155,'multiline':False]['text':' but a hint is specified.','line_number':1156,'multiline':False]['text':' Remove on _id should use idhack stage when query inherits collection default collation.','line_number':1164,'multiline':False]['text':' Remove should return correct results when "simple" collation specified and collection has','line_number':1174,'multiline':False]['text':' a default collation.','line_number':1175,'multiline':False]['text':' Remove on _id should return correct results when "simple" collation specified and','line_number':1185,'multiline':False]['text':' collection has a default collation.','line_number':1186,'multiline':False]['text':' Remove on _id should use idhack stage when explicit query collation matches collection','line_number':1197,'multiline':False]['text':' default.','line_number':1198,'multiline':False]['text':' Remove on _id should not use idhack stage when query collation does not match collection','line_number':1208,'multiline':False]['text':' default.','line_number':1209,'multiline':False]['text':'','line_number':1220,'multiline':False]['text':' Collation tests for update.','line_number':1221,'multiline':False]['text':'','line_number':1222,'multiline':False]['text':' Update should succeed when collation specified and collection does not exist.','line_number':1224,'multiline':False]['text':' Update should return correct results when collation specified.','line_number':1230,'multiline':False]['text':' Explain of update should return correct results when collation specified.','line_number':1239,'multiline':False]['text':' Update should return correct results when no collation specified and collection has a default','line_number':1253,'multiline':False]['text':' collation.','line_number':1254,'multiline':False]['text':' Update with idhack should return correct results when no collation specified and collection','line_number':1264,'multiline':False]['text':' has a default collation.','line_number':1265,'multiline':False]['text':' Update on _id should use idhack stage when query inherits collection default collation.','line_number':1276,'multiline':False]['text':' Update should return correct results when "simple" collation specified and collection has','line_number':1286,'multiline':False]['text':' a default collation.','line_number':1287,'multiline':False]['text':' Update on _id should return correct results when "simple" collation specified and','line_number':1297,'multiline':False]['text':' collection has a default collation.','line_number':1298,'multiline':False]['text':' Update on _id should use idhack stage when explicitly given query collation matches','line_number':1309,'multiline':False]['text':' collection default.','line_number':1310,'multiline':False]['text':' Update on _id should not use idhack stage when query collation does not match collection','line_number':1321,'multiline':False]['text':' default.','line_number':1322,'multiline':False]['text':'','line_number':1334,'multiline':False]['text':' Collation tests for the $geoNear aggregation stage.','line_number':1335,'multiline':False]['text':'','line_number':1336,'multiline':False]['text':' $geoNear should fail when collation is specified but the collection does not exist.','line_number':1338,'multiline':False]['text':' $geoNear rejects the now-deprecated "collation" option.','line_number':1354,'multiline':False]['text':' $geoNear should return correct results when collation specified and string predicate not','line_number':1380,'multiline':False]['text':' indexed.','line_number':1381,'multiline':False]['text':' $geoNear should return correct results when no collation specified and string predicate','line_number':1386,'multiline':False]['text':' indexed.','line_number':1387,'multiline':False]['text':' $geoNear should return correct results when collation specified and collation on index is','line_number':1393,'multiline':False]['text':' incompatible with string predicate.','line_number':1394,'multiline':False]['text':' $geoNear should return correct results when collation specified and collation on index is','line_number':1401,'multiline':False]['text':' compatible with string predicate.','line_number':1402,'multiline':False]['text':' $geoNear should return correct results when no collation specified and collection has a','line_number':1409,'multiline':False]['text':' default collation.','line_number':1410,'multiline':False]['text':' $geoNear should return correct results when "simple" collation specified and collection has','line_number':1419,'multiline':False]['text':' a default collation.','line_number':1420,'multiline':False]['text':'','line_number':1429,'multiline':False]['text':' Collation tests for find with $nearSphere.','line_number':1430,'multiline':False]['text':'','line_number':1431,'multiline':False]['text':' Find with $nearSphere should return correct results when collation specified and','line_number':1433,'multiline':False]['text':' collection does not exist.','line_number':1434,'multiline':False]['text':' Find with $nearSphere should return correct results when collation specified and string','line_number':1443,'multiline':False]['text':' predicate not indexed.','line_number':1444,'multiline':False]['text':' Find with $nearSphere should return correct results when no collation specified and','line_number':1459,'multiline':False]['text':' string predicate indexed.','line_number':1460,'multiline':False]['text':' Find with $nearSphere should return correct results when collation specified and','line_number':1473,'multiline':False]['text':' collation on index is incompatible with string predicate.','line_number':1474,'multiline':False]['text':' Find with $nearSphere should return correct results when collation specified and','line_number':1488,'multiline':False]['text':' collation on index is compatible with string predicate.','line_number':1489,'multiline':False]['text':'','line_number':1503,'multiline':False]['text':' Tests for the bulk API.','line_number':1504,'multiline':False]['text':'','line_number':1505,'multiline':False]['text':' update().','line_number':1509,'multiline':False]['text':' updateOne().','line_number':1520,'multiline':False]['text':' replaceOne().','line_number':1531,'multiline':False]['text':' replaceOne() with upsert().','line_number':1542,'multiline':False]['text':' removeOne().','line_number':1561,'multiline':False]['text':' remove().','line_number':1572,'multiline':False]['text':'','line_number':1583,'multiline':False]['text':' Tests for the CRUD API.','line_number':1584,'multiline':False]['text':'','line_number':1585,'multiline':False]['text':' deleteOne().','line_number':1587,'multiline':False]['text':' deleteMany().','line_number':1595,'multiline':False]['text':' findOneAndDelete().','line_number':1603,'multiline':False]['text':' findOneAndReplace().','line_number':1611,'multiline':False]['text':' findOneAndUpdate().','line_number':1620,'multiline':False]['text':' replaceOne().','line_number':1629,'multiline':False]['text':' updateOne().','line_number':1637,'multiline':False]['text':' updateMany().','line_number':1646,'multiline':False]['text':' updateOne with bulkWrite().','line_number':1655,'multiline':False]['text':' updateOne with undefined/null collation.backwards parameter (SERVER-54482).','line_number':1669,'multiline':False]['text':' updateMany with bulkWrite().','line_number':1682,'multiline':False]['text':' replaceOne with bulkWrite().','line_number':1696,'multiline':False]['text':' deleteOne with bulkWrite().','line_number':1707,'multiline':False]['text':' deleteMany with bulkWrite().','line_number':1716,'multiline':False]['text':' Two deleteOne ops with bulkWrite using different collations.','line_number':1725,'multiline':False]['text':' applyOps.','line_number':1736,'multiline':False]['text':' <operation>.o2 respects collection default collation.','line_number':1744,'multiline':False]['text':' Test that the collection created with the "cloneCollectionAsCapped" command inherits the','line_number':1752,'multiline':False]['text':' default collation of the corresponding collection. We skip running this command in a sharded','line_number':1753,'multiline':False]['text':' cluster because it isn't supported by mongos.','line_number':1754,'multiline':False]['text':' Create a collection with a non-simple default collation.','line_number':1762,'multiline':False]['text':' Test that the find command's min/max options respect the collation.','line_number':1784,'multiline':False]['text':' This query should fail, since there is no index to support the min/max.','line_number':1796,'multiline':False]['text':' Even after building an index with the right key pattern, the query should fail since the','line_number':1804,'multiline':False]['text':' collations don't match.','line_number':1805,'multiline':False]['text':' This query should fail, because the hinted index does not match the requested','line_number':1815,'multiline':False]['text':' collation, and the 'max' value is a string, which means we cannot ignore the','line_number':1816,'multiline':False]['text':' collation.','line_number':1817,'multiline':False]['text':' After building an index with the case-insensitive US English collation, the query should','line_number':1832,'multiline':False]['text':' work. Furthermore, the bounds defined by the min and max should respect the','line_number':1833,'multiline':False]['text':' case-insensitive collation.','line_number':1834,'multiline':False]['text':' Ensure results from index with min/max query are sorted to match requested collation.','line_number':1845,'multiline':False]['text':' A min/max query that can use an index whose collation doesn't match should require a sort','line_number':1872,'multiline':False]['text':' stage if there are any in-bounds strings. Verify this using explain.','line_number':1873,'multiline':False]['text':' This query should fail since min has a string as one of it's boundaries, and the','line_number':1883,'multiline':False]['text':' collation doesn't match that of the index.','line_number':1884,'multiline':False]['text':' Ensure that attempting to create the same view namespace twice, but with different collations,','line_number':1893,'multiline':False]['text':' fails with NamespaceExists.','line_number':1894,'multiline':False]