['text':' Test that the privilege system works to separate tenants, but allows a privileged-enough','line_number':1,'multiline':False]['text':' non-tenanted user to access tenant collections.','line_number':2,'multiline':False]['text':' @tags: [requires_replication, serverless, featureFlagSecurityToken]','line_number':3,'multiline':False]['text':' List of tests. Each test specifies a role which the created user should have, whether we','line_number':11,'multiline':False]['text':' should be testing with a tenant ID, and the list of authorization checks to run and their','line_number':12,'multiline':False]['text':' expected result. isTenantedUser tests have a shorter list of authz checks to run because we can't','line_number':13,'multiline':False]['text':' pass $tenant and the security token on the same request, so we are limited to tests which','line_number':14,'multiline':False]['text':' pass no tenant ID.','line_number':15,'multiline':False]['text':' Role specifying a specific namespace should allow user to write to that exact namespace','line_number':17,'multiline':False]['text':' with their own tenant ID and nothing else','line_number':18,'multiline':False]['text':' Role specifying a specific DB should allow user to write to that exact DB with their own','line_number':40,'multiline':False]['text':' tenant ID and nothing else','line_number':41,'multiline':False]['text':' readWriteAny, which confers read/write on anyNormalResource, should allow a tenanted user','line_number':63,'multiline':False]['text':' to write to any normal collections with their own tenant ID, but should allow a','line_number':64,'multiline':False]['text':' non-tenanted user to write to any normal collections, even those with tenant IDs.','line_number':65,'multiline':False]['text':' If we skip adding useTenant, we should now only be authorized for the no-tenant collections.','line_number':86,'multiline':False]['text':' read/write on anyResource should allow a tenanted user to write to any collections with','line_number':101,'multiline':False]['text':' their own tenant ID, and should allow a non-tenanted user to write to any collection','line_number':102,'multiline':False]['text':' regardless of tenant ID.','line_number':103,'multiline':False]['text':' If we skip adding useTenant, we should now be able to read/write any collection with no','line_number':124,'multiline':False]['text':' tenant, and no others.','line_number':125,'multiline':False]['text':' We use the admin DB for normal collection tests, and the local DB for non-normal collection','line_number':141,'multiline':False]['text':' tests, mainly because the admin and local DBs are allowed to be read/written to even when','line_number':142,'multiline':False]['text':' featureFlagRequireTenantID is enabled.','line_number':143,'multiline':False]['text':' Make specific roles for testing.','line_number':159,'multiline':False]['text':' Unless skipUseTenant is set, we want to always allow non-tenanted users to pass $tenant,','line_number':202,'multiline':False]['text':' so for non-tenanted users, give them a special subrole with useTenant','line_number':203,'multiline':False]['text':' Create a user for this test, with the given role and tenant ID.','line_number':214,'multiline':False]['text':' We use security token to auth tenant users, and the mongo.auth method to auth non-tenant','line_number':222,'multiline':False]['text':' users.','line_number':223,'multiline':False]['text':' Test a find and insert operation on each collection; whether they work should match','line_number':235,'multiline':False]['text':' our expectation.','line_number':236,'multiline':False]['text':' Test on standalone and replset.','line_number':270,'multiline':False]['text':' Do not test sharding since mongos must have an authenticated connection to','line_number':284,'multiline':False]['text':' all mongod nodes, and this conflicts with proxying tokens which we'll be','line_number':285,'multiline':False]['text':' performing in mongoq.','line_number':286,'multiline':False]