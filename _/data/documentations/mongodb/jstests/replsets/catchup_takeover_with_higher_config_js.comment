['text':'*
 * Test that when a primary is blocked in drain mode, catchup takeover can work even
 * if the primary has a lower config than the takeover node. The test starts a 3-node
 * replica set and then steps up node1 but blocks it in drain mode before it can bump
 * the config term. Next it steps up node2 and also blocks it in drain mode and later
 * unblocks node1 to let it finish config term bump so that it has higher config than
 * node2. Eventually after catchUpTakeoverDelayMillis has passed, node1 should be able
 * get the vote from node2 which has a lower config, and finish the catchup takeover.
 ','line_number':1,'multiline':True]['text':' Get the current config from the node and compare it with the provided config.','line_number':15,'multiline':False]['text':' Wait for all nodes to acknowledge that the node at nodeIndex is in the specified state.','line_number':31,'multiline':False]['text':' Prevent nodes from syncing from other secondaries.','line_number':47,'multiline':False]['text':' Disable nodes from fasserting due to RSTL timeout','line_number':59,'multiline':False]['text':' Failpoint to hang node1 before the automatic reconfig on stepup bumps the config term.','line_number':63,'multiline':False]['text':' Stepup node1 and wait to hang before bumping the config term.','line_number':67,'multiline':False]['text':' Wait for all nodes to acknowledge that node1 has become primary.','line_number':71,'multiline':False]['text':' Check that the failpoint worked and the config has not changed.','line_number':75,'multiline':False]['text':' Stepup node2 and wait to hang before bumping the config term as well.','line_number':78,'multiline':False]['text':' Wait for all nodes to acknowledge that node2 has become primary. Cannot use','line_number':83,'multiline':False]['text':' awaitNodesAgreeOnPrimary() or getPrimary() here which do not allow a node to','line_number':84,'multiline':False]['text':' see multiple primaries.','line_number':85,'multiline':False]['text':' Wait for node0 to change its sync source to node2. Later when the failpoint on node 1','line_number':89,'multiline':False]['text':' is lifted, it will do a no-op write and finish the stepup process, so its lastApplied','line_number':90,'multiline':False]['text':' opTime will be greater than the other two nodes. By waiting for sync source change we','line_number':91,'multiline':False]['text':' make sure node0 will not pull new entries from node1, making node1 the only eligible','line_number':92,'multiline':False]['text':' candidate to catchup takeover node2.','line_number':93,'multiline':False]['text':' Lift the failpoint on node1 to let it finish reconfig and bump the config term.','line_number':99,'multiline':False]['text':' Check that node2 is still in catchup mode, so it cannot install a new config.','line_number':109,'multiline':False]['text':' Wait for node1 to catchup takeover node2 after the default catchup takeover delay.','line_number':112,'multiline':False]['text':' Check again that node2 is still in catchup mode and has not installed a new config.','line_number':116,'multiline':False]['text':' Lift the failpoint on node2 and wait for all nodes to see node1 as the only primary.','line_number':119,'multiline':False]['text':' Check that election metrics has been updated with the new reason counter.','line_number':123,'multiline':False]['text':' This test produces a rollback and the above is expected to be robust to the network error','line_number':131,'multiline':False]['text':' it causes, but stopSet below is not so we await before it is called.','line_number':132,'multiline':False]