['text':'*
 * Verify that a non force replica set reconfig waits for all oplog entries committed in the
 * previous config to be committed in the current config even if we are exiting a config that was
 * installed via a 'force' reconfig.
 ','line_number':1,'multiline':True]['text':' Make the secondary unelectable.','line_number':11,'multiline':False]['text':' The default WC is majority and stopServerReplication will prevent satisfying any majority writes.','line_number':20,'multiline':False]['text':' This makes the test run faster.','line_number':24,'multiline':False]['text':' Create collection.','line_number':28,'multiline':False]['text':' Stop replication on the secondary.','line_number':32,'multiline':False]['text':' Force reconfig down to a 1 node replica set.','line_number':35,'multiline':False]['text':' Remove the second node.','line_number':38,'multiline':False]['text':' We expect this to succeed but the last committed op from the previous config','line_number':49,'multiline':False]['text':' isn't committed in the current config yet.','line_number':50,'multiline':False]['text':' Wait until the config has propagated to the secondary and the primary has learned of it, so that','line_number':54,'multiline':False]['text':' the config replication check is satisfied.','line_number':55,'multiline':False]['text':' Reconfig should succeed even if we have not committed the last committed op in the current','line_number':58,'multiline':False]['text':' config because the current config is from a force reconfig.','line_number':59,'multiline':False]['text':' Make sure we can connect to the secondary after it was REMOVED.','line_number':64,'multiline':False]['text':' Let the last committed op from the original 1 node config become committed in the current config.','line_number':67,'multiline':False]['text':' Now that we can commit the op in the new config, reconfig should succeed.','line_number':72,'multiline':False]