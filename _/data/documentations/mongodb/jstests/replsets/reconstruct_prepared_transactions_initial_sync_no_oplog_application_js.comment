['text':'*
 * Tests that initial sync successfully reconstructs multiple prepared transactions and that we can
 * commit or abort the transactions afterwards. It also tests that after reconstructing a prepared
 * transaction at the end of initial sync, we can successfully apply a commitTransaction oplog entry
 * during secondary oplog application. During initial sync, there will be no oplog entries that
 * need to be applied other than the prepare transaction oplog entries.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':' Increase the election timeout so that we do not accidentally trigger an election while the','line_number':20,'multiline':False]['text':' secondary is restarting.','line_number':21,'multiline':False]['text':' Restart the secondary with startClean set to true so that it goes through initial sync.','line_number':73,'multiline':False]['text':' signal ','line_number':74,'multiline':True]['text':' wait ','line_number':76,'multiline':True]['text':' Wait for the secondary to complete initial sync.','line_number':78,'multiline':False]['text':' Make sure that while reading from the node that went through initial sync, we can't read','line_number':86,'multiline':False]['text':' changes to the documents from any of the prepared transactions after initial sync.','line_number':87,'multiline':False]['text':' Make sure that we can't read changes to the document from the first prepared transaction','line_number':93,'multiline':False]['text':' after initial sync.','line_number':94,'multiline':False]['text':' Make sure that we can see the data from a committed transaction on the secondary if it was','line_number':102,'multiline':False]['text':' applied during secondary oplog application.','line_number':103,'multiline':False]['text':' Step up the secondary after initial sync is done and make sure the other two transactions are','line_number':108,'multiline':False]['text':' properly prepared.','line_number':109,'multiline':False]['text':' Force the second session to use the same lsid and txnNumber as from before the restart. This','line_number':116,'multiline':False]['text':' ensures that we're working with the same session and transaction.','line_number':117,'multiline':False]['text':' Make sure that we can't read changes to the document from the second prepared transaction','line_number':124,'multiline':False]['text':' after initial sync.','line_number':125,'multiline':False]['text':' Make sure that another write on the same document from the second transaction causes a write','line_number':128,'multiline':False]['text':' conflict.','line_number':129,'multiline':False]['text':' Make sure that we cannot add other operations to the second transaction since it is prepared.','line_number':135,'multiline':False]['text':' Make sure we can successfully commit the second transaction after recovery.','line_number':147,'multiline':False]['text':' Make sure that we can run another conflicting transaction without any problems.','line_number':158,'multiline':False]['text':' Force the third session to use the same lsid and txnNumber as from before the restart. This','line_number':165,'multiline':False]['text':' ensures that we're working with the same session and transaction.','line_number':166,'multiline':False]['text':' Make sure that we can't read changes to the document from the third prepared transaction','line_number':173,'multiline':False]['text':' after initial sync.','line_number':174,'multiline':False]['text':' Make sure that another write on the same document from the third transaction causes a write','line_number':177,'multiline':False]['text':' conflict.','line_number':178,'multiline':False]['text':' Make sure that we cannot add other operations to the third transaction since it is prepared.','line_number':184,'multiline':False]['text':' Make sure we can successfully abort the third transaction after recovery.','line_number':196,'multiline':False]