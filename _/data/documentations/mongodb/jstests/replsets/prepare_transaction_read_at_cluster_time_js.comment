['text':'*
 * Ensures that performing a write in a prepared transaction, followed by a write outside of a
 * transaction, it is possible to specify either '$_internalReadAtClusterTime' or snapshot read
 * concern with 'atClusterTime' as the timestamp of the second write for 'dbHash'. The
 * commands should block until the prepared transaction is committed or aborted.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':' This code will execute once the prepared transaction is committed as the call above will','line_number':27,'multiline':False]['text':' be blocked until an abort or commit happens. Ensure that running dbHash here yields the','line_number':28,'multiline':False]['text':' same result as above.','line_number':29,'multiline':False]['text':' We prevent the replica set from advancing oldest_timestamp. This ensures that the snapshot','line_number':64,'multiline':False]['text':' associated with 'clusterTime' is retained for the duration of this test.','line_number':65,'multiline':False]['text':' Perform a write inside of a prepared transaction.','line_number':83,'multiline':False]['text':' Perform a write outside of a prepared transaction. We wait for the write to have replication','line_number':88,'multiline':False]['text':' to the secondary because we're going to read from it at the returned operationTime.','line_number':89,'multiline':False]['text':' It should be possible to specify either '$_internalReadAtClusterTime' or snapshot read','line_number':92,'multiline':False]['text':' concern with 'atClusterTime' as the timestamp of the','line_number':93,'multiline':False]['text':' second write without an error for dbHash and find.','line_number':94,'multiline':False]['text':' Run dbHash and find while the prepared transaction has not commit or aborted yet.','line_number':97,'multiline':False]['text':' These should block until the prepared transaction commits or aborts if we specify','line_number':98,'multiline':False]['text':' $_internalReadAtClusterTime or snapshot read concern with 'atClusterTime' to be the timestamp of','line_number':99,'multiline':False]['text':' the second write we did, outside of the transaction.','line_number':100,'multiline':False]['text':' Run a series of DDL operations which shouldn't block before committing the prepared','line_number':134,'multiline':False]['text':' transaction.','line_number':135,'multiline':False]['text':' Committing or aborting the transaction should unblock the parallel tasks.','line_number':147,'multiline':False]['text':' Ensure the dbHashes across the replica set match.','line_number':157,'multiline':False]