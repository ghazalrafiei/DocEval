['text':'*
 * It was previously possible during initial sync for the oplog fetcher to miss a drop that the
 * cloner observed, specifically when it happens during a not-yet-finalized batch on the sync
 * source. This tests that this is no longer possible.
 *
 * @tags: [requires_replication]
 ','line_number':1,'multiline':True]['text':' timeout ','line_number':63,'multiline':True]['text':'secondaryOpTimeType ','line_number':63,'multiline':True]['text':' Enable this so we too can see the drop entry.','line_number':74,'multiline':False]['text':' Is actually the 'stopTimestamp'.','line_number':103,'multiline':False]['text':' We reached the stopTs we wanted.','line_number':112,'multiline':False]['text':' We should never not exceed that timestamp.','line_number':116,'multiline':False]['text':' The above checks required that the node stays in initial sync, but that failpoint can','line_number':122,'multiline':False]['text':' be turned off now.','line_number':123,'multiline':False]['text':' Now that the stopTimestamp is far enough to include the drop, we also need to allow','line_number':126,'multiline':False]['text':' the fetcher to actually replicate those entries.','line_number':127,'multiline':False]['text':' will time out on error','line_number':132,'multiline':False]