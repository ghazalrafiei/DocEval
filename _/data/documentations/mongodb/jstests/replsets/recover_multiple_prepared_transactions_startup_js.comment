['text':'*
 * Test that startup recovery successfully recovers multiple prepared transactions and that we can
 * commit or abort the transaction afterwards.
 *
 * @tags: [requires_persistence, uses_transactions, uses_prepare_transaction]
 ','line_number':1,'multiline':True]['text':' The default WC is majority and disableSnapshotting failpoint will prevent satisfying any majority','line_number':15,'multiline':False]['text':' writes.','line_number':16,'multiline':False]['text':' Disable snapshotting so that future operations do not enter the majority snapshot.','line_number':41,'multiline':False]['text':' Perform a clean shutdown and restart. Note that the 'disableSnapshotting' failpoint will be','line_number':61,'multiline':False]['text':' unset on the node following the restart.','line_number':62,'multiline':False]['text':' Force the first session to use the same lsid and txnNumber as from before the restart. This','line_number':77,'multiline':False]['text':' ensures that we're working with the same session and transaction.','line_number':78,'multiline':False]['text':' Make sure that we can't read changes to the document from the first transaction after','line_number':84,'multiline':False]['text':' recovery.','line_number':85,'multiline':False]['text':' Make sure that another write on the same document from the first transaction causes a write','line_number':88,'multiline':False]['text':' conflict.','line_number':89,'multiline':False]['text':' Make sure that we cannot add other operations to the first transaction since it is prepared.','line_number':95,'multiline':False]['text':' Wait for the prepared transaction oplog entry to be majority committed before committing the','line_number':106,'multiline':False]['text':' transaction. This is needed after restarting the node in a single-node replica set because the','line_number':107,'multiline':False]['text':' lastCommitted is not set until it flushes its first oplog entry after the restart. We need to','line_number':108,'multiline':False]['text':' wait for the lastCommitted OpTime to be past the prepareTimestamp before committing the prepared','line_number':109,'multiline':False]['text':' transaction.','line_number':110,'multiline':False]['text':' Make sure we can successfully commit the first transaction after recovery.','line_number':112,'multiline':False]['text':' Force the second session to use the same lsid and txnNumber as from before the restart.','line_number':121,'multiline':False]['text':' This ensures that we're working with the same session and transaction.','line_number':122,'multiline':False]['text':' Make sure that we can't read changes to the document from the second transaction after','line_number':128,'multiline':False]['text':' recovery.','line_number':129,'multiline':False]['text':' Make sure that another write on the same document from the second transaction causes a write','line_number':132,'multiline':False]['text':' conflict.','line_number':133,'multiline':False]['text':' Make sure that we cannot add other operations to the second transaction since it is prepared.','line_number':139,'multiline':False]['text':' Make sure we can successfully abort the second transaction after recovery.','line_number':151,'multiline':False]['text':' Make sure that we can run another conflicting transaction after recovery without any','line_number':157,'multiline':False]['text':' problems.','line_number':158,'multiline':False]