['text':'*
 * Tests that initial sync will abort an attempt if the sync source enters and completes initial
 * sync during cloning (i.e. the source is resynced during an outage).
 ','line_number':1,'multiline':True]['text':' Add some data to be cloned.','line_number':17,'multiline':False]['text':' This test is specifically testing that the cloners detect the source going into initial','line_number':26,'multiline':False]['text':' sync mode, so we turn off the oplog fetcher to ensure that we don't inadvertently test','line_number':27,'multiline':False]['text':' that instead.','line_number':28,'multiline':False]['text':' The code handling this case is common to all cloners, so run it only for the stage most likely','line_number':38,'multiline':False]['text':' to see an error.','line_number':39,'multiline':False]['text':' Set us up to hang before finish so we can check status.','line_number':43,'multiline':False]['text':' Set us up to stop right before the given stage.','line_number':51,'multiline':False]['text':' Release the initial failpoint.','line_number':54,'multiline':False]['text':' Wait for the source to reach SECONDARY','line_number':62,'multiline':False]['text':' The initial sync should have failed.','line_number':71,'multiline':False]['text':' Release the initial sync source and sync node oplog fetcher so the test completes.','line_number':74,'multiline':False]['text':' We need to turn off the above failpoints before this one, otherwise the server may already have','line_number':80,'multiline':False]['text':' shutdown before we turn the failpoints off, causing the above commands to fail.','line_number':81,'multiline':False]['text':' We want to ensure the initialSyncNode encounters the InitialSyncFailure error and shuts down.','line_number':84,'multiline':False]['text':' We skip validation and dbhashes because the initial sync failed so the initial sync node is','line_number':94,'multiline':False]['text':' invalid and unreachable.','line_number':95,'multiline':False]