['text':'*
 * Test that oplog (on both primary and secondary) rolls over when its size exceeds the configured
 * maximum, with parameters for setting the initial sync method and the storage engine.
 ','line_number':1,'multiline':True]['text':' Pause the oplog cap maintainer thread for this test until oplog truncation is needed. The','line_number':13,'multiline':False]['text':' truncation thread can hold a mutex for a short period of time which prevents new oplog','line_number':14,'multiline':False]['text':' truncate markers from being created during an insertion if the mutex cannot be obtained','line_number':15,'multiline':False]['text':' immediately. Instead, the next insertion will attempt to create a new oplog truncate marker,','line_number':16,'multiline':False]['text':' which this test does not do.','line_number':17,'multiline':False]['text':' Set the syncdelay to 1s to speed up checkpointing.','line_number':27,'multiline':False]['text':' Set max oplog size to 1MB.','line_number':39,'multiline':False]['text':' Verify that the oplog cap maintainer thread is paused.','line_number':48,'multiline':False]['text':' 400KB each so that oplog can keep at most two insert oplog entries.','line_number':61,'multiline':False]['text':' Insert the first document.','line_number':70,'multiline':False]['text':' Test that oplog entry of the first insert exists on both primary and secondary.','line_number':78,'multiline':False]['text':' Insert the second document.','line_number':82,'multiline':False]['text':' Test that oplog entries of both inserts exist on both primary and secondary.','line_number':90,'multiline':False]['text':' Have a more fine-grained test for enableMajorityReadConcern=true to also test oplog','line_number':94,'multiline':False]['text':' truncation happens at the time we expect it to happen. When','line_number':95,'multiline':False]['text':' enableMajorityReadConcern=false the lastStableRecoveryTimestamp is not available, so','line_number':96,'multiline':False]['text':' switch to a coarser-grained mode to only test that oplog truncation will eventually','line_number':97,'multiline':False]['text':' happen when oplog size exceeds the configured maximum.','line_number':98,'multiline':False]['text':' Wait for checkpointing/stable timestamp to catch up with the second insert so oplog','line_number':131,'multiline':False]['text':' entry of the first insert is allowed to be deleted by the oplog cap maintainer thread','line_number':132,'multiline':False]['text':' when a new oplog truncate marker is created. "inMemory" WT engine does not run checkpoint','line_number':133,'multiline':False]['text':' thread and lastStableRecoveryTimestamp is the stable timestamp in this case.','line_number':134,'multiline':False]['text':' Insert the third document which will trigger a new oplog truncate marker to be created.','line_number':137,'multiline':False]['text':' The oplog cap maintainer thread will then be unblocked on the creation of the new oplog','line_number':138,'multiline':False]['text':' marker and will start truncating oplog entries. The oplog entry for the first','line_number':139,'multiline':False]['text':' insert will be truncated after the oplog cap maintainer thread finishes.','line_number':140,'multiline':False]['text':' There is a race between how we calculate the pinnedOplog and checkpointing. The timestamp','line_number':149,'multiline':False]['text':' of the pinnedOplog could be less than the actual stable timestamp used in a checkpoint.','line_number':150,'multiline':False]['text':' Wait for the checkpointer to run for another round to make sure the first insert oplog is','line_number':151,'multiline':False]['text':' not pinned.','line_number':152,'multiline':False]['text':' Verify that there are three oplog entries while the oplog cap maintainer thread is','line_number':155,'multiline':False]['text':' paused.','line_number':156,'multiline':False]['text':' Let the oplog cap maintainer thread start truncating the oplog.','line_number':160,'multiline':False]['text':' Test that oplog entry of the initial insert rolls over on both primary and secondary.','line_number':166,'multiline':False]['text':' Use assert.soon to wait for oplog cap maintainer thread to run.','line_number':167,'multiline':False]['text':' Let the oplog cap maintainer thread start truncating the oplog.','line_number':180,'multiline':False]['text':' Only test that oplog truncation will eventually happen.','line_number':186,'multiline':False]['text':' Insert more documents.','line_number':189,'multiline':False]['text':' Oplog has been truncated if the number of insert oplog entries is less than','line_number':194,'multiline':False]['text':' number of inserted.','line_number':195,'multiline':False]