['text':'*
 * Tests that initial sync successfully applies the commitTransaction oplog entry. To be able to
 * test this, we have to pause collection cloning and run commitTransaction so that the oplog entry
 * is applied during the oplog application phase of initial sync.
 *
 * @tags: [
 *   uses_prepare_transaction,
 *   uses_transactions,
 * ]
 ','line_number':1,'multiline':True]['text':' Increase the election timeout so that we do not accidentally trigger an election while the','line_number':19,'multiline':False]['text':' secondary is restarting.','line_number':20,'multiline':False]['text':' The default WC is majority and this test can't satisfy majority writes.','line_number':29,'multiline':False]['text':' Prepare a transaction so that there is an active transaction with an oplog entry. The prepare','line_number':42,'multiline':False]['text':' timestamp will become the beginFetchingTimestamp during initial sync.','line_number':43,'multiline':False]['text':' Do another operation so that the beginFetchingTimestamp will be different from the','line_number':51,'multiline':False]['text':' beginApplyingTimestamp.','line_number':52,'multiline':False]['text':' Restart the secondary with startClean set to true so that it goes through initial sync. Also','line_number':57,'multiline':False]['text':' restart the node with a failpoint turned on that will pause initial sync after the secondary','line_number':58,'multiline':False]['text':' has copied {_id: 1} and {_id: 3}. This way we can try to commit the prepared transaction','line_number':59,'multiline':False]['text':' while initial sync is paused and know that its operations won't be copied during collection','line_number':60,'multiline':False]['text':' cloning. Instead, the commitTransaction oplog entry must be applied during oplog application.','line_number':61,'multiline':False]['text':' signal','line_number':63,'multiline':False]['text':' Validation would encounter a prepare conflict on the open transaction.','line_number':65,'multiline':False]['text':' wait ','line_number':77,'multiline':True]['text':' Wait for failpoint to be reached so we know that collection cloning is paused.','line_number':79,'multiline':False]['text':' Commit a transaction on the sync source while collection cloning is paused so that we know','line_number':88,'multiline':False]['text':' they must be applied during the oplog application stage of initial sync.','line_number':89,'multiline':False]['text':' Resume initial sync.','line_number':94,'multiline':False]['text':' Wait for the secondary to complete initial sync.','line_number':98,'multiline':False]['text':' Make sure the transaction committed properly and is reflected after the initial sync.','line_number':103,'multiline':False]['text':' Step up the secondary after initial sync is done and make sure we can successfully run','line_number':107,'multiline':False]['text':' another transaction.','line_number':108,'multiline':False]