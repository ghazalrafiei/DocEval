['text':'*
 * This file tests that if a user initiates a bulk write where the last write is a noop, either
 * due to being a duplicate operation or due to an error based on data we read, that we
 * still wait for write concern.
 * The intended behavior for a no-op write is that we advance the repl client's last optime to the
 * optime of the newest entry in the oplog (also referred as the "system optime"), and wait for
 * write concern for that optime. This ensures that any writes we may have possibly read that caused
 * the operation to be a noop have also been replicated. For all of these tests, the optime fixing
 * behavior should be handled by LastOpFixer.
 *
 * @tags: [featureFlagBulkWriteCommand] // TODO SERVER-52419: Remove this tag.
 ','line_number':1,'multiline':True]['text':' Prevent inserts from being batched together. This allows','line_number':23,'multiline':False]['text':' us to hang between consecutive insert operations without','line_number':24,'multiline':False]['text':' blocking the ones we already processed from executing.','line_number':25,'multiline':False]['text':' Each entry in this array contains a bulkWrite command noop write case we want to test.','line_number':44,'multiline':False]['text':' Entries have the following structure:','line_number':45,'multiline':False]['text':' {','line_number':46,'multiline':False]['text':'','line_number':47,'multiline':False]['text':'      bulkReq: <object>,              // Bulk write request object containing multiple writes','line_number':48,'multiline':False]['text':'                                       // where the last write will result in a noop','line_number':49,'multiline':False]['text':'                                       // write if it is run after noopMakerReq.','line_number':50,'multiline':False]['text':'','line_number':51,'multiline':False]['text':'     bulkConfirmFunc: <function(bulkRes)>,   // Function to run after bulkReq and to ensure','line_number':52,'multiline':False]['text':'                                             // it executed as expected. Accepts the result','line_number':53,'multiline':False]['text':'                                             // of the bulkWrite request.','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':'     noopMakerReq: <object>            // Command request object containing a single non-bulk','line_number':56,'multiline':False]['text':'                                       //  write that, if run before the final write in bulkReq,','line_number':57,'multiline':False]['text':'                                       // will make that write a noop.','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':'     noopMakerConfirmFunc: <function(noopMakerRes)>,  // Function to run after noopMakerReq to','line_number':60,'multiline':False]['text':'                                                      // ensure it executed as expected. Accepts','line_number':61,'multiline':False]['text':'                                                      // the result of the request.','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':'     confirmFunc: <function()>   // Function to run at the end of the test to make any general','line_number':64,'multiline':False]['text':'                                 // assertions that are not on either of the command responses.','line_number':65,'multiline':False]['text':' }','line_number':66,'multiline':False]['text':' 'bulkWrite' where the last op is an insert where the document with the same _id has','line_number':69,'multiline':False]['text':' already been inserted.','line_number':70,'multiline':False]['text':' The first insert succeeded','line_number':81,'multiline':False]['text':' The second insert errored','line_number':85,'multiline':False]['text':' 'bulkWrite' where we are doing a mix of local and non-local writes and the last op is an insert','line_number':100,'multiline':False]['text':' of a non-local doc with the _id of an existing doc.','line_number':101,'multiline':False]['text':' the local insert succeeded','line_number':117,'multiline':False]['text':' the non-local insert failed','line_number':121,'multiline':False]['text':' 'bulkWrite' where the last op is an update that has already been performed.','line_number':136,'multiline':False]['text':' The insert succeeded.','line_number':151,'multiline':False]['text':' The update was a noop.','line_number':155,'multiline':False]['text':' 'bulkWrite' where the last op is an update where the document to update does not exist.','line_number':170,'multiline':False]['text':' the insert succeeded','line_number':184,'multiline':False]['text':' the update was a no-op','line_number':188,'multiline':False]['text':' 'bulkWrite' where the last op is an update that generates an immutable field error.','line_number':205,'multiline':False]['text':' the insert succeeded','line_number':219,'multiline':False]['text':' the update failed','line_number':223,'multiline':False]['text':' 'bulkWrite' where the last op is a delete where the document to delete does not exist.','line_number':240,'multiline':False]['text':' the insert op succeeded','line_number':251,'multiline':False]['text':' the delete was a no-op','line_number':256,'multiline':False]['text':' Provide a small wtimeout that we expect to time out.','line_number':272,'multiline':False]['text':' Tests that the command receives a write concern error. If we don't properly advance','line_number':283,'multiline':False]['text':' the client's last optime to the latest oplog entry and wait for that optime to','line_number':284,'multiline':False]['text':' satisfy our write concern, then we won't see an error, since all writes up to but not','line_number':285,'multiline':False]['text':' not including the latest one in `noopMakerReq` have been replicated.','line_number':286,'multiline':False]['text':' Since we run this on a separate connection from the noopMakerReq, there is no way','line_number':288,'multiline':False]['text':' that the client's last op time would get advanced by that operation, so if we pass','line_number':289,'multiline':False]['text':' this test it means we are correctly advancing this client's optime after the last','line_number':290,'multiline':False]['text':' operation in the batch no-ops.','line_number':291,'multiline':False]['text':' Make sure that we print out the response.','line_number':297,'multiline':False]['text':' Run in a parallel shell as we expect this to hang.','line_number':303,'multiline':False]['text':' Wait to see that the bulkWrite has hit the failpoint.','line_number':307,'multiline':False]['text':' Wait until all of the nodes have seen the first write from the bulkWrite.','line_number':310,'multiline':False]['text':' Stop a node so that all w:3 write concerns time out.','line_number':313,'multiline':False]['text':' Run the function that makes the final bulk write op a no-op.','line_number':316,'multiline':False]['text':' Provide a small wtimeout that we expect to time out.','line_number':317,'multiline':False]['text':' Disable the failpoint, allowing the bulkWrite to proceed.','line_number':322,'multiline':False]