['text':'*
 * This test causes node 2 to enter rollback and then fail with a SocketException before updating
 * MinValid or altering durable state in any way. It will then choose a sync source from which it
 * is able to stitch the oplog and therefore doesn't need to roll back. Prior to SERVER-27282, the
 * node would be "stuck" with state=ROLLBACK while it was doing steady-state replication, with no
 * way to reach SECONDARY without restarting the process.
 *
 * @tags: [requires_fcv_53]
 ','line_number':1,'multiline':True]['text':' Primary flops between nodes 0 and 1.','line_number':20,'multiline':False]['text':' Node 2 is the node under test.','line_number':23,'multiline':False]['text':' Arbiters to sway elections.','line_number':25,'multiline':False]['text':' The default WC is majority and stopServerReplication could prevent satisfying any majority','line_number':34,'multiline':False]['text':' writes.','line_number':35,'multiline':False]['text':' Wait for all data bearing nodes to get up to date.','line_number':51,'multiline':False]['text':' Turn on failpoint on node 2 to pause rollback before doing anything.','line_number':81,'multiline':False]['text':' Since nodes 1 and 2 have now diverged, node 2 should go into rollback. The failpoint will','line_number':91,'multiline':False]['text':' stop it from actually transitioning to rollback, so the wait bellow will ensure that we','line_number':92,'multiline':False]['text':' have decided to rollback, but haven't actually started yet.','line_number':93,'multiline':False]['text':' Wait for fail point message to be logged.','line_number':97,'multiline':False]['text':' Turn off failpoint on node 2 to allow rollback against node 1 to fail with a network error.','line_number':110,'multiline':False]['text':' Make node 0 ahead of node 2 again so node 2 will pick it as a sync source.','line_number':113,'multiline':False]['text':' At this point node 2 has failed rollback before making any durable changes, including writing','line_number':124,'multiline':False]['text':' to minValid. That means that it is free to pick any sync source and will pick node 0 where it','line_number':125,'multiline':False]['text':' can pick up where it left off without rolling back. Ensure that it is able to reach SECONDARY','line_number':126,'multiline':False]['text':' and doesn't do steady-state replication in ROLLBACK state.','line_number':127,'multiline':False]['text':' Re-connect all nodes and await secondary nodes so we can check data consistency.','line_number':134,'multiline':False]['text':' Verify data consistency between nodes.','line_number':138,'multiline':False]