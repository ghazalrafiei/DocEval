['text':'*
 * Test that startup recovery can recover multiple prepared transactions and that the node starting
 * up can then successfully apply commit or abort transaction oplog entries during secondary oplog
 * application.
 *
 * @tags: [requires_persistence, uses_transactions, uses_prepare_transaction]
 ','line_number':1,'multiline':True]['text':' Increase the election timeout to 24 hours so that we do not accidentally trigger an election','line_number':14,'multiline':False]['text':' while the secondary is restarting.','line_number':15,'multiline':False]['text':' The default WC is majority and disableSnapshotting failpoint will prevent satisfying any majority','line_number':20,'multiline':False]['text':' writes.','line_number':21,'multiline':False]['text':' Disable snapshotting on all members of the replica set so that further operations do not','line_number':47,'multiline':False]['text':' enter the majority snapshot.','line_number':48,'multiline':False]['text':' Perform a clean shutdown and restart. Note that the 'disableSnapshotting' failpoint will be','line_number':70,'multiline':False]['text':' unset on the node following the restart.','line_number':71,'multiline':False]['text':' It's illegal to commit a prepared transaction before its prepare oplog entry has been','line_number':80,'multiline':False]['text':' majority committed. So wait for prepare oplog entry to be majority committed before issuing','line_number':81,'multiline':False]['text':' the commitTransaction command.','line_number':82,'multiline':False]['text':' Wait for the node to complete recovery before trying to read from it.','line_number':85,'multiline':False]['text':' Make sure that we can't read changes to the document from either transaction after recovery.','line_number':91,'multiline':False]['text':' Make sure we can successfully commit the first transaction after recovery and that we can see','line_number':98,'multiline':False]['text':' all its changes when we read from the secondary.','line_number':99,'multiline':False]['text':' Make sure we can successfully abort the second transaction after recovery and that we can't','line_number':106,'multiline':False]['text':' see any of its operations when we read from the secondary.','line_number':107,'multiline':False]['text':' Make sure that we can run another conflicting transaction after recovery without any','line_number':114,'multiline':False]['text':' problems and that we can see its changes when we read from the secondary.','line_number':115,'multiline':False]