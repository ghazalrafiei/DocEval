['text':'*
 * Test to ensure that a primary does not erroneously commit a two phase collection drop if it
 * steps down and back up again before the drop has been committed.
 *
 * Test steps:
 *
 * 1. Pause oplog application on secondary.
 * 2. Drop collection 'collToDrop' on the primary.
 * 3. Force primary to step down.
 * 4. Wait for primary to step up again.
 * 5. Make sure that collection 'collToDrop' has not been physically dropped on the primary.
 * 6. Resume oplog application on secondary and make sure collection drop is eventually committed.
 ','line_number':1,'multiline':True]['text':' Set up a two phase drop test.','line_number':17,'multiline':False]['text':' Initialize replica set.','line_number':23,'multiline':False]['text':' Check for 'system.drop' two phase drop support.','line_number':26,'multiline':False]['text':' Create the collection that will be dropped.','line_number':33,'multiline':False]['text':' PREPARE collection drop.','line_number':36,'multiline':False]['text':' Step primary down using {force: true} and wait for the same node to become primary again.','line_number':39,'multiline':False]['text':' We use {force: true} because the current secondary has oplog application disabled and will','line_number':40,'multiline':False]['text':' not be able to take over as primary.','line_number':41,'multiline':False]['text':' Force step down primary.','line_number':46,'multiline':False]['text':' The amount of time the node has to wait before becoming primary again.','line_number':48,'multiline':False]['text':' Wait for the node that stepped down to regain PRIMARY status.','line_number':52,'multiline':False]['text':' COMMIT collection drop.','line_number':62,'multiline':False]