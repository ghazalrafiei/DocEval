['text':'*
 * Tests that if the writing of the 'commitTransaction' oplog entry advances the 'lastApplied'
 * OpTime before the 'commitTransaction' oplog entry's oplog hole is released, we still move
 * the stable timestamp forward.
 *
 * @tags: [uses_transactions, uses_prepare_transaction]
 ','line_number':1,'multiline':True]['text':' Create collection before running the transaction.','line_number':22,'multiline':False]['text':' Run a transaction in a parallel shell. The transaction will be configured to hang on commit.','line_number':25,'multiline':False]['text':' Rather than setting a timeout on commit and forfeiting our ability to check commit for','line_number':26,'multiline':False]['text':' success, we use a separate thread to disable the failpoint and allow the server to finish','line_number':27,'multiline':False]['text':' committing successfully.','line_number':28,'multiline':False]['text':' Hang before releasing the 'commitTransaction' oplog entry hole.','line_number':42,'multiline':False]['text':' A w:majority drop on a non-existent collection will not do a write, but will still wait for','line_number':66,'multiline':False]['text':' write concern. We double check that that still succeeds.','line_number':67,'multiline':False]