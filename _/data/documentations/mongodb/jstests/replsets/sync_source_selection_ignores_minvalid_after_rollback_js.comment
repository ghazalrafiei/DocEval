['text':'*
 * Tests that the minValid optime being on a divergent branch of history does not impact sync source
 * selection after rollback. See SERVER-59721 for more details.
 *
 * TODO SERVER-49738: remove this test.
 ','line_number':1,'multiline':True]['text':' Disable primary catchup since this test relies on new primaries not catching up to other nodes.','line_number':10,'multiline':False]['text':' The default WC is majority and various failpoints used in this test are incompatible with that.','line_number':24,'multiline':False]['text':' Make sure node 1 syncs from node 0 so that it will replicate entries that be rolled back.','line_number':28,'multiline':False]['text':' Disable snapshotting on all members of the replica set so that further operations do not','line_number':39,'multiline':False]['text':' enter the majority snapshot.','line_number':40,'multiline':False]['text':' Stop replication on all nodes. We do this on node 0 and 1 so that they will vote for other nodes','line_number':44,'multiline':False]['text':' in future elections. We use a different failpoint for node 1 so that it won't switch sync sources','line_number':45,'multiline':False]['text':' when replication is unpaused. We stop replication on node 2 so that it doesn't receive any oplog','line_number':46,'multiline':False]['text':' entries from the diverging branch of history.','line_number':47,'multiline':False]['text':' Make sure id:5972100 debug log is enabled.','line_number':64,'multiline':False]['text':' Node 2 runs for election. This is needed before node 1 steps up because otherwise it will always','line_number':67,'multiline':False]['text':' lose future elections and will not be considered the proper branch of history.','line_number':68,'multiline':False]['text':' Wait for parallelShell to exit. This means that node 2 has successfully transitioned to primary.','line_number':80,'multiline':False]['text':' Disconnect node 1 from node 2 so that node 1 won't switch sync sources from node 0 to node 2.','line_number':85,'multiline':False]['text':' It's okay if node 1 doesn't have a sync source since it should have already received the batch','line_number':86,'multiline':False]['text':' from node 0 by the time we stopped replication.','line_number':87,'multiline':False]['text':' Node 0 won't replicate node 2's new primary oplog entry, so it can elect node 1 again.','line_number':96,'multiline':False]['text':' Step up node 1, which causes an untimestamped write to the minValid collection.','line_number':100,'multiline':False]['text':' Node 0 votes for node 2 in this eleciton. Node 2 is ahead of node 0 because of the previous','line_number':105,'multiline':False]['text':' election that it won.','line_number':106,'multiline':False]['text':' awaitReplication will only succeed if node 1 was able to successfully choose a sync source.','line_number':122,'multiline':False]