['text':'*
 * Util functions used by cluster server parameter tests.
 *
 * When adding new cluster server parameter, do the following:
 *   If it's test-only, add its definition to kTestOnlyClusterParameters.
 *   Otherwise, add to kNonTestOnlyClusterParameters.
 * The keyname will be the name of the cluster-wide server parameter,
 * it's value will be an object with at least three keys named:
 *   * 'default': Properties to expect on an unset CWSP
 *   * 'testValues': List of two other valid values of the CWSP to set for testing purposes
 * An additional property 'featureFlag' may also be set if the
 *   parameter depends on a featureFlag.
 * Use the name of the featureFlag if it is required in
 *   order to consider the parameter.
 * Prefix the name with a bang '!' if it is only considered
 *   when the featureFlag is disabled.
 ','line_number':1,'multiline':True]['text':' { featureFlag: 'name' } indicates that the CWSP should only be considered with the FF','line_number':80,'multiline':False]['text':' enabled. { featureFlag: '!name' } indicates that the CWSP should only be considered with the','line_number':81,'multiline':False]['text':' FF disabled.','line_number':82,'multiline':False]['text':' A dictionary of 'setParameters' that should be validated while considering the current CWSP.','line_number':92,'multiline':False]['text':' Check if the current CWSP should be run in the serverless.','line_number':106,'multiline':False]['text':' Check if the current CWSP should be run in standalone.','line_number':117,'multiline':False]['text':' Set the log level for get/setClusterParameter logging to appear.','line_number':140,'multiline':False]['text':' Wait for FCV to fully replicate on all shards before performing test commands.','line_number':162,'multiline':False]['text':' Upserts config.clusterParameters document with w:majority via setClusterParameter.','line_number':166,'multiline':False]['text':' Runs getClusterParameter on a specific mongod or mongos node and returns true/false depending','line_number':184,'multiline':False]['text':' on whether the expected values were returned.','line_number':185,'multiline':False]['text':' Filter out parameters that we don't care about.','line_number':190,'multiline':False]['text':' Reindex actual based on name, and remove irrelevant field.','line_number':205,'multiline':False]['text':' Runs getClusterParameter on each replica set node and asserts that the response matches the','line_number':234,'multiline':False]['text':' expected parameter objects on at least a majority of nodes.','line_number':235,'multiline':False]['text':' Runs getClusterParameter on mongos, each mongod in each shard replica set, and each mongod in','line_number':255,'multiline':False]['text':' the config server replica set.','line_number':256,'multiline':False]['text':' Tests valid usages of set/getClusterParameter and verifies that the expected values are returned.','line_number':271,'multiline':False]['text':' Run getClusterParameter in list format and '*' and ensure it returns all default values','line_number':274,'multiline':False]['text':' on all nodes in the replica set.','line_number':275,'multiline':False]['text':' For each parameter, run setClusterParameter and verify that getClusterParameter','line_number':280,'multiline':False]['text':' returns the updated value on all nodes in the replica set.','line_number':281,'multiline':False]['text':' Verify that document updates are also handled properly.','line_number':287,'multiline':False]['text':' Finally, run getClusterParameter in list format and '*' and ensure that they now all','line_number':293,'multiline':False]['text':' return updated values.','line_number':294,'multiline':False]['text':' Run getClusterParameter in list format and '*' and ensure it returns all default values','line_number':299,'multiline':False]['text':' on all nodes in the sharded cluster.','line_number':300,'multiline':False]['text':' For each parameter, simulate setClusterParameter and verify that getClusterParameter','line_number':305,'multiline':False]['text':' returns the updated value on all nodes in the sharded cluster.','line_number':306,'multiline':False]['text':' Verify that document updates are also handled properly.','line_number':312,'multiline':False]['text':' Finally, run getClusterParameter in list format and '*' and ensure that they now all','line_number':318,'multiline':False]['text':' return updated values.','line_number':319,'multiline':False]['text':' Standalone','line_number':322,'multiline':False]['text':' Run getClusterParameter in list format and '*' and ensure it returns all default values.','line_number':323,'multiline':False]['text':' For each parameter, run setClusterParameter and verify that getClusterParameter','line_number':328,'multiline':False]['text':' returns the updated value.','line_number':329,'multiline':False]['text':' Verify that document updates are also handled properly.','line_number':335,'multiline':False]['text':' Finally, run getClusterParameter in list format and '*' and ensure that they now return','line_number':341,'multiline':False]['text':' updated values.','line_number':342,'multiline':False]['text':' Tests valid usages of set/getClusterParameter on a serverless replica set and verifies that the','line_number':352,'multiline':False]['text':' expected values are returned.','line_number':353,'multiline':False]['text':' TODO SERVER-69663 Add serverless sharded cluster tests once supported.','line_number':355,'multiline':False]['text':' Run getClusterParameter in list format and '*' and ensure it returns all default values','line_number':361,'multiline':False]['text':' on all nodes in the replica set, with and without tenantId set.','line_number':362,'multiline':False]['text':' For each parameter, run setClusterParameter and verify that getClusterParameter','line_number':369,'multiline':False]['text':' returns the updated value on all nodes in the replica set for the tenant it was set on.','line_number':370,'multiline':False]['text':' Test inserts for tenant1 and default tenant.','line_number':372,'multiline':False]['text':' Test updates for tenant1 and default tenant.','line_number':389,'multiline':False]['text':' Finally, run getClusterParameter in list format and '*' and ensure that they now all','line_number':407,'multiline':False]['text':' return updated values.','line_number':408,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter fails on a node.','line_number':419,'multiline':False]['text':' Tests that disabled cluster server parameters return errors or are filtered out as appropriate','line_number':431,'multiline':False]['text':' by get/setClusterParameter.','line_number':432,'multiline':False]['text':' Assert that explicitly setting a disabled cluster server parameter fails.','line_number':435,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter fails on the primary.','line_number':442,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter fails on secondaries.','line_number':445,'multiline':False]['text':' Assert that getClusterParameter: '*' succeeds but only returns enabled cluster','line_number':450,'multiline':False]['text':' parameters.','line_number':451,'multiline':False]['text':' Assert that explicitly setting a disabled cluster server parameter fails.','line_number':454,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter fails on mongos.','line_number':461,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter on each shard replica','line_number':464,'multiline':False]['text':' set and the config replica set fails.','line_number':465,'multiline':False]['text':' Assert that getClusterParameter: '*' succeeds but only returns enabled cluster','line_number':480,'multiline':False]['text':' parameters.','line_number':481,'multiline':False]['text':' Standalone','line_number':483,'multiline':False]['text':' Assert that explicitly setting a disabled cluster server parameter fails.','line_number':484,'multiline':False]['text':' Assert that explicitly getting a disabled cluster server parameter fails.','line_number':491,'multiline':False]['text':' Assert that getClusterParameter: '*' succeeds but only returns enabled cluster','line_number':494,'multiline':False]['text':' parameters.','line_number':495,'multiline':False]['text':' Tests that invalid uses of getClusterParameter fails on a given node.','line_number':501,'multiline':False]['text':' Assert that specifying a nonexistent parameter returns an error.','line_number':504,'multiline':False]['text':' Tests that invalid uses of set/getClusterParameter fail with the appropriate errors.','line_number':520,'multiline':False]['text':' Assert that invalid uses of getClusterParameter fail on the primary.','line_number':525,'multiline':False]['text':' Assert that setting a nonexistent parameter on the primary returns an error.','line_number':528,'multiline':False]['text':' Assert that running setClusterParameter with a scalar value fails.','line_number':532,'multiline':False]['text':' Assert that setClusterParameter cannot be run on a secondary.','line_number':537,'multiline':False]['text':' Assert that invalid uses of getClusterParameter fail on secondaries.','line_number':543,'multiline':False]['text':' Assert that invalid direct writes to <tenantId>_config.clusterParameters fail.','line_number':547,'multiline':False]['text':' Assert that invalid uses of getClusterParameter fail on mongos.','line_number':556,'multiline':False]['text':' Assert that setting a nonexistent parameter on the mongos returns an error.','line_number':559,'multiline':False]['text':' Assert that running setClusterParameter with a scalar value fails.','line_number':563,'multiline':False]['text':' Assert that setClusterParameter cannot be run directly on a shard primary.','line_number':569,'multiline':False]['text':' Assert that invalid forms of getClusterParameter fail on the shard primary.','line_number':575,'multiline':False]['text':' Assert that setClusterParameter cannot be run on a shard secondary.','line_number':578,'multiline':False]['text':' Assert that invalid forms of getClusterParameter fail on shard secondaries.','line_number':584,'multiline':False]['text':' Assert that setClusterParameter cannot be run directly on the configsvr primary.','line_number':589,'multiline':False]['text':' Assert that invalid forms of getClusterParameter fail on the configsvr primary.','line_number':596,'multiline':False]['text':' Assert that setClusterParameter cannot be run on a configsvr secondary.','line_number':599,'multiline':False]['text':' Assert that invalid forms of getClusterParameter fail on configsvr secondaries.','line_number':605,'multiline':False]['text':' Assert that invalid direct writes to <tenantId>_config.clusterParameters fail.','line_number':608,'multiline':False]['text':' Standalone','line_number':621,'multiline':False]['text':' Assert that invalid uses of getClusterParameter fail.','line_number':624,'multiline':False]['text':' Assert that setting a nonexistent parameter returns an error.','line_number':627,'multiline':False]['text':' Assert that running setClusterParameter with a scalar value fails.','line_number':631,'multiline':False]['text':' Assert that invalid direct writes to <tenantId>_config.clusterParameters fail.','line_number':635,'multiline':False]