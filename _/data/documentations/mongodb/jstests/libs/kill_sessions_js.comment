['text':'*
 * Implements a kill session test helper
 ','line_number':3,'multiline':True]['text':'*
     * We start hanging ops by running the test command sleep with a special number of secs that's
     * meant to be universal per test run.  In mongos, we multicast it out (to guarantee it's on all
     * of the random accessory nodes).
     ','line_number':74,'multiline':True]['text':' When creating a hanging op, we have to use a background thread (because the command will','line_number':81,'multiline':False]['text':' hang).','line_number':82,'multiline':False]['text':' We verify that our hanging op is up by looking for it in current op on the required','line_number':116,'multiline':False]['text':' hosts.  We identify particular ops by secs sleeping.','line_number':117,'multiline':False]['text':'*
     * passes the lsid of each running op into our callback.  Makes it easy to ensure that a session
     * is well and truly dead
     ','line_number':139,'multiline':True]['text':'*
     * Asserts that there are no sessions in any live cursors.
     ','line_number':177,'multiline':True]['text':'*
     * Asserts that one subset of sessions is alive in active cursors and that another set is not.
     ','line_number':193,'multiline':True]['text':'*
     * We start cursors on all nodes in a very artificial way.  In particular, we run currentOp
     * (because it's a data source that's always there) and use an agg pipeline to get enough
     * records that we can't return it in one batch.  In sharding, we use multicast to force open
     * cursors on all nodes at once.
     ','line_number':259,'multiline':True]['text':'*
     * A suite of tests verifying that various forms of no argument kill work.  Outside of auth
     ','line_number':304,'multiline':True]['text':' Verify that we can invoke cmd','line_number':311,'multiline':False]['text':' Verify that we can start a session and kill it with cmd','line_number':316,'multiline':False]['text':' Verify that we can kill two sessions','line_number':324,'multiline':False]['text':' Verify that we can start a session with a cursor and kill it with cmd','line_number':334,'multiline':False]['text':' Verify that we can kill two sessions with cursors','line_number':344,'multiline':False]['text':'*
     * Verifies that various argument taking kills work.  Outside of auth
     ','line_number':358,'multiline':True]['text':' Verify that we can kill two of three sessions, and that the other stays alive','line_number':363,'multiline':False]['text':' Verify that we can kill two of three sessions, and that the other stays (with','line_number':387,'multiline':False]['text':' cursors)','line_number':388,'multiline':False]['text':' Verify that we can kill two sessions with the kill all args from killAllSessionsByPattern','line_number':418,'multiline':False]['text':' Runs our noarg suite for all commands','line_number':429,'multiline':False]['text':' Verifies that we can killSessions by lsid','line_number':435,'multiline':False]['text':' Verifies that we can kill by pattern by lsid','line_number':449,'multiline':False]['text':' Run tests for a command that takes no args in auth','line_number':476,'multiline':False]['text':' Verify that we can invoke cmd','line_number':481,'multiline':False]['text':' Verify that we can start a session and kill it with cmd','line_number':488,'multiline':False]['text':' Run tests for a command that takes args in auth.','line_number':500,'multiline':False]['text':'','line_number':501,'multiline':False]['text':' The genArg argument is a function which returns another function given a username.  It's','line_number':502,'multiline':False]['text':' meant to adapt various lsid's from ops/cursors to various commands.','line_number':503,'multiline':False]['text':' Run 3 ops, 2 under 1 user, 1 under another.  Then kill, making sure that the 3rd op','line_number':506,'multiline':False]['text':' stays up','line_number':507,'multiline':False]['text':' Repeat for cursors','line_number':537,'multiline':False]['text':' Verify that we can start a session and kill it with the universal pattern','line_number':575,'multiline':False]['text':' Verify that we can impersonate, with that permission','line_number':584,'multiline':False]['text':' Tests for makeAuthNoArgKill','line_number':595,'multiline':False]['text':' We can kill our own sessions','line_number':597,'multiline':False]['text':' We can kill all sessions','line_number':603,'multiline':False]['text':' We can kill all sessions by pattern','line_number':609,'multiline':False]['text':' Tests for makeAuthArgKill','line_number':617,'multiline':False]['text':' We can kill our own sessions by id (spoofing our own id)','line_number':619,'multiline':False]['text':' We can kill our own sessions without spoofing','line_number':638,'multiline':False]['text':' We can kill by pattern by id','line_number':650,'multiline':False]['text':' We can kill any by user','line_number':671,'multiline':False]['text':' We can kill any by pattern by user','line_number':683,'multiline':False]['text':' Ensures that illegal things fail','line_number':697,'multiline':False]['text':' Tests for makeAuthArgKillFailure','line_number':714,'multiline':False]['text':' We can't kill another users sessions','line_number':716,'multiline':False]['text':' We can't impersonate without impersonate','line_number':730,'multiline':False]['text':' Globals','line_number':789,'multiline':False]