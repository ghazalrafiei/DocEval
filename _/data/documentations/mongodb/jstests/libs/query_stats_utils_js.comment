['text':'*
 * Utility for checking that the aggregated queryStats metrics are logical (follows sum >= max >=
 * min, and sum = max = min if only one execution).
 ','line_number':4,'multiline':True]['text':' Skip over fields that aren't aggregated metrics with sum/min/max (execCount,','line_number':12,'multiline':False]['text':' lastExecutionMicros).','line_number':13,'multiline':False]['text':' If there has only been one execution, all metrics should have min, max, and sum','line_number':18,'multiline':False]['text':' equal to each other.','line_number':19,'multiline':False]['text':' Skip over fields that aren't aggregated metrics with sum/min/max (execCount,','line_number':26,'multiline':False]['text':' lastExecutionMicros).','line_number':27,'multiline':False]['text':'*
 * Return the latest query stats entry from the given collection. Only returns query shapes
 * generated by the shell that is running tests.
 *
 * @param conn - connection to database
 * @param {object} options {
 *  {String} collName - name of collection
 *  {object} - extraMatch - optional argument that can be used to filter the pipeline
 * }
 ','line_number':40,'multiline':True]['text':'*
 * Collect query stats from a given collection. Only include query shapes generated by the shell
 * that is running tests.
 *
 * @param conn - connection to database
 * @param {object} options {
 *  {String} collName - name of collection
 *  {object} - extraMatch - optional argument that can be used to filter the pipeline
 *  {object} - customSort - optional custom sort order - otherwise sorted by 'key' just to be
 * deterministic.
 * }
 ','line_number':59,'multiline':True]['text':'*
 * @param {object} conn - connection to database
 * @param {object} options {
 *  {BinData} hmacKey
 *  {String} collName - name of collection
 *  {boolean} transformIdentifiers - whether to include transform identifiers
 * }
 ','line_number':87,'multiline':True]['text':' Filter out agg queries, including $queryStats.','line_number':107,'multiline':False]['text':' Sort on queryStats key so entries are in a deterministic order.','line_number':120,'multiline':False]['text':' Sort on queryStats key so entries are in a deterministic order.','line_number':127,'multiline':False]['text':'*
 * Collects query stats from any aggregate command query shapes (with $queryStats requests filtered
 * out) that were generated by the shell that is running tests.
 *
 * /**
 * @param {object} conn - connection to database
 * @param {object} options {
 *  {BinData} hmacKey
 *  {boolean} transformIdentifiers - whether to include transform identifiers
 * }
 ','line_number':136,'multiline':True]['text':' Filter out find queries and $queryStats aggregations.','line_number':166,'multiline':False]['text':' Sort on key so entries are in a deterministic order.','line_number':174,'multiline':False]['text':' client meta data is environment/machine dependent, so do not','line_number':185,'multiline':False]['text':' assert on fields or specific fields other than the application name.','line_number':186,'multiline':False]['text':' Make sure the resulting key isn't missing any fields.','line_number':198,'multiline':False]['text':' The tests can't predict exact timings, so just assert these three fields have been set (are','line_number':229,'multiline':False]['text':' non-zero).','line_number':230,'multiline':False]['text':' If there are getMore calls, totalExecMicros fields should be greater than or equal to','line_number':241,'multiline':False]['text':' firstResponseExecMicros.','line_number':242,'multiline':False]['text':' In the case that we've executed multiple queries with the same shape, it is','line_number':244,'multiline':False]['text':' possible for the min or max to be equal.','line_number':245,'multiline':False]['text':' If there are no getMore calls, totalExecMicros fields should be equal to','line_number':251,'multiline':False]['text':' firstResponseExecMicros.','line_number':252,'multiline':False]['text':' Set the cache size to 0MB to clear the queryStats store, and then reset to','line_number':267,'multiline':False]['text':' queryStatsStoreSize.','line_number':268,'multiline':False]['text':'*
 *  Checks that the given object contains the dottedPath.
 * @param {object} object
 * @param {string} dottedPath
 ','line_number':274,'multiline':True]['text':'*
 * We run the command on an new database with an empty collection that has an index {v:1}. We then
 * obtain the queryStats key entry that is created and check the following things.
 * 1. The command associated with the key matches the commandName.
 * 2. The fields nested inside of queryShape field of the key exactly matches those given by
 * shapeFields.
 * 3. The list of fields of the key exactly matches those given by keyFields.
 * /**
 * @param {string} commandName -  string name of type of command, ex. "find" or "aggregate"
 * @param {object} commandObj - The command that will be  run
 * @param {object} shapeFields - List of fields that are part of the queryShape and should be nested
 *     inside of Query Shape
 * @param {object} keyFields - List of outer fields not nested inside queryShape but should be part
 *     of the key
 ','line_number':290,'multiline':True]['text':' Have to create an index for hint not to fail.','line_number':315,'multiline':False]['text':' Every path in shapeFields is in the queryShape.','line_number':341,'multiline':False]['text':' Every field in queryShape is in shapeFields or is the base of a path in shapeFields.','line_number':349,'multiline':False]['text':' Every path in keyFields is in the key.','line_number':355,'multiline':False]['text':' Every field in the key is in keyFields or is the base of a path in keyFields.','line_number':363,'multiline':False]['text':' $hint can only be string(index name) or object (index spec).','line_number':369,'multiline':False]