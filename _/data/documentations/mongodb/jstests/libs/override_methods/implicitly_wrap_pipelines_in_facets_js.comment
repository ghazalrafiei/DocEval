['text':'*
 * Loading this file overrides Mongo.prototype.runCommand() with a function that wraps any
 * aggregate command's pipeline inside a $facet stage, then appends an $unwind stage. This will
 * yield the same results, but stress the logic of the $facet stage.
 ','line_number':1,'multiline':True]['text':' Set the batch size of the $facet stage's buffer to be lower. This will further stress the','line_number':7,'multiline':False]['text':' batching logic, since most pipelines will fall below the default size of 100MB.','line_number':8,'multiline':False]['text':' Save a reference to the original runCommand method in the IIFE's scope.','line_number':11,'multiline':False]['text':' This scoping allows the original method to be called by the override below.','line_number':12,'multiline':False]['text':' Skip wrapping the pipeline in a $facet stage if it's not an aggregation, or if it's','line_number':16,'multiline':False]['text':' possibly an invalid one without a pipeline.','line_number':17,'multiline':False]['text':' Skip wrapping the pipeline in a $facet stage if it has an invalid stage','line_number':35,'multiline':False]['text':' specification.','line_number':36,'multiline':False]['text':' A $text search is disallowed within a $facet stage.','line_number':45,'multiline':False]['text':' Skip wrapping an empty $match stage, since it can be optimized out, resulting','line_number':50,'multiline':False]['text':' in an empty pipeline which is disallowed within a $facet stage.','line_number':51,'multiline':False]['text':' Skip wrapping the pipeline in a $facet stage if it contains a stage disallowed inside','line_number':57,'multiline':False]['text':' a $facet.','line_number':58,'multiline':False]