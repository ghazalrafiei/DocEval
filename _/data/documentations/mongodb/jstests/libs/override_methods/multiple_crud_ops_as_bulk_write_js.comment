['text':'*
 * Overrides the runCommand method to convert specified CRUD ops into bulkWrite commands.
 * Converts the bulkWrite responses into the original CRUD response.
 ','line_number':1,'multiline':True]['text':' Check if namespace exists and the stored collectionUUID / encryptionInfo is different','line_number':46,'multiline':False]['text':' If bypassDocumentValidation is not set we can continue. If the stored','line_number':61,'multiline':False]['text':' bypassDocumentValidation and the command bypassDocumentValidation are the same we can','line_number':62,'multiline':False]['text':' continue.','line_number':63,'multiline':False]['text':' If 'letObj' is null then we can always continue. If 'letObj' is not null and cmdObj.let is','line_number':74,'multiline':False]['text':' then we can always continue. If both objects are not null and they are the same we can','line_number':75,'multiline':False]['text':' continue.','line_number':76,'multiline':False]['text':' If saved ordered is false or the incoming ordered is false we must flush the batch.','line_number':82,'multiline':False]['text':' Replace runCommand temporarily to avoid getMores from looping back into this override from','line_number':92,'multiline':False]['text':' the DataConsistencyChecker.','line_number':93,'multiline':False]['text':' Want to check that every namespace we just altered is the same on both clusters.','line_number':97,'multiline':False]['text':' Using originalRunCommand directly to avoid recursing back into this override file.','line_number':102,'multiline':False]['text':' Need to provide session to the find command since it is automatically applied','line_number':103,'multiline':False]['text':' to getMore by DBCommandCursor.','line_number':104,'multiline':False]['text':' We use a very large batch size in this find command because getMore is not retryable','line_number':106,'multiline':False]['text':' so we want to minimize the number of test that need to be disabled from kill/stepdown','line_number':107,'multiline':False]['text':' suites.','line_number':108,'multiline':False]['text':' Data consistency checker failed, this is because the getMore failed due to stepdown','line_number':134,'multiline':False]['text':' timing. Ignore the error Since this is a forEach block need to return instead of','line_number':135,'multiline':False]['text':' continue, the loop will continue executing after this.','line_number':136,'multiline':False]['text':' If a CRUD command has been run without an `_id` then each cluster will generate their','line_number':143,'multiline':False]['text':' own _id and the above assert will have failed. To get around this we remove the _id','line_number':144,'multiline':False]['text':' from any document deemed to be "different" and see if the contents of docsMissingOnFirst','line_number':145,'multiline':False]['text':' and docsMissingOnSecond are the same afterwards.','line_number':146,'multiline':False]['text':' In case of error reset the batch.','line_number':188,'multiline':False]['text':' Remove $clusterTime and readConcern from original request since the timestamp might not match','line_number':218,'multiline':False]['text':' between the original and bulkWrite clusters and cause the test to hang.','line_number':219,'multiline':False]['text':' When we encounter a non-CRUD command, first flush the buffered operations on the bulk write','line_number':233,'multiline':False]['text':' cluster. Then, execute the current non-CRUD command against both the bulkWrite and normal','line_number':234,'multiline':False]['text':' clusters.','line_number':235,'multiline':False]['text':' Execute the command against the bulkWrite cluster.','line_number':240,'multiline':False]['text':' Cannot run enableSharding against normal cluster since we always set it up as a replica set.','line_number':243,'multiline':False]