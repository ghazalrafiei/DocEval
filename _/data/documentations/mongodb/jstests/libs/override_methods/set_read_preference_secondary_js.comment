['text':'*
 * Use prototype overrides to set read preference to "secondary" when running tests.
 ','line_number':1,'multiline':True]['text':' This list of cursor-generating commands is incomplete. For example, both "listCollections" and','line_number':22,'multiline':False]['text':' "listIndexes" are missing from this list. If we ever add tests that attempt to run getMore or','line_number':23,'multiline':False]['text':' killCursors on cursors generated from those commands, then we should update the contents of','line_number':24,'multiline':False]['text':' this list and also handle any differences in the server's response format.','line_number':25,'multiline':False]['text':' When a "getMore" or "killCursors" command is issued on a replica set connection, we','line_number':59,'multiline':False]['text':' attempt to automatically route the command to the server the cursor(s) were','line_number':60,'multiline':False]['text':' originally established on. This makes it possible to use the','line_number':61,'multiline':False]['text':' set_read_preference_secondary.js override without needing to update calls of','line_number':62,'multiline':False]['text':' DB#runCommand() to explicitly track the connection that was used. If the connection','line_number':63,'multiline':False]['text':' is actually a direct connection to a mongod or mongos process, or if the cursor id','line_number':64,'multiline':False]['text':' cannot be found in the CursorTracker, then we'll fall back to using DBClientRS's','line_number':65,'multiline':False]['text':' server selection and send the operation to the current primary. It is possible that','line_number':66,'multiline':False]['text':' the test is trying to exercise the behavior around when an unknown cursor id is sent','line_number':67,'multiline':False]['text':' to the server.','line_number':68,'multiline':False]['text':' We set 'cursorConn' back to undefined and break out of the loop so','line_number':85,'multiline':False]['text':' that we don't attempt to automatically route the "killCursors"','line_number':86,'multiline':False]['text':' command when there are cursors from different servers.','line_number':87,'multiline':False]['text':' A map-reduce operation with non-inline output must be sent to the primary.','line_number':104,'multiline':False]['text':' Avoid overriding the read preference for config server since there may only be one','line_number':107,'multiline':False]['text':' of them.','line_number':108,'multiline':False]['text':' Setting read preference secondary for an aggregation with $currentOp doesn't make','line_number':114,'multiline':False]['text':' much sense, since there's no guarantee *which* secondary you get results from. We','line_number':115,'multiline':False]['text':' will mirror the currentOp server command behavior here and maintain original read','line_number':116,'multiline':False]['text':' preference.','line_number':117,'multiline':False]['text':' Use this TestData flag to allow certain runCommands to be exempted from','line_number':123,'multiline':False]['text':' setting secondary read preference.','line_number':124,'multiline':False]['text':' We associate the cursor id returned by the server with the connection that was used','line_number':142,'multiline':False]['text':' to establish it so that we can attempt to automatically route subsequent "getMore"','line_number':143,'multiline':False]['text':' and "killCursors" commands.','line_number':144,'multiline':False]