['text':'*
 * Analyze all fields and create statistics.
 * Create single-field indexes on the fields with indexed flag.
 ','line_number':1,'multiline':True]['text':'*
 * Load a dataset described in the 'dbMetadata' global variable.
 ','line_number':14,'multiline':True]['text':' Create single-field indexes and analyze each field.','line_number':35,'multiline':False]['text':'*
 * Load a JSON dataset stored as an array of names of data files, where each file contains
 * a variable that holds an object with the properties{collName, collData}.
 * For instance:
 * ce_data_20_1 = {collName: "ce_data_20",
 *                 collData: [{"_id": 0, "uniform_int_0-1000-1": 899, ...}, ...]}
 ','line_number':41,'multiline':True]['text':' TODO: This is better done by the CE-testing script because it knows better what fields to','line_number':65,'multiline':False]['text':' analyze. Create single-field indexes and analyze each field. for (const collMetadata of','line_number':66,'multiline':False]['text':' dbMetadata) {','line_number':67,'multiline':False]['text':'     print(`\nIndexing collection: ${collMetadata.collectionName}`);','line_number':68,'multiline':False]['text':'     coll = db[collMetadata.collectionName];','line_number':69,'multiline':False]['text':'     analyzeAndIndexEnabledFields(db, coll, collMetadata.fields);','line_number':70,'multiline':False]['text':' }','line_number':71,'multiline':False]