['text':'*
 * Get the URI of the wt collection file given the collection name.
 ','line_number':3,'multiline':True]['text':' Collection must exist','line_number':7,'multiline':False]['text':'*
 * Get the URI of the wt index file given the collection name and the index name.
 ','line_number':11,'multiline':True]['text':' Collection must exist','line_number':15,'multiline':False]['text':'*
 * 'Corrupt' the file by replacing it with an empty file.
 ','line_number':20,'multiline':True]['text':'*
 * Starts a mongod on the provided data path without clearing data. Accepts 'options' as parameters
 * to runMongod.
 ','line_number':28,'multiline':True]['text':'*
 * Assert that running MongoDB with --repair on the provided dbpath exits cleanly.
 ','line_number':50,'multiline':True]['text':'*
 * Asserts that running MongoDB with --repair on the provided dbpath fails.
 ','line_number':77,'multiline':True]['text':'*
 * Assert that starting MongoDB with --replSet on an existing data path exits with a specific
 * error.
 ','line_number':86,'multiline':True]['text':'*
 * Assert that starting MongoDB as a standalone on an existing data path exits with a specific
 * error because the previous repair failed.
 ','line_number':102,'multiline':True]['text':'*
 * Assert that starting MongoDB as a standalone on an existing data path succeeds. Uses a provided
 * testFunc to run any caller-provided checks on the started node.
 ','line_number':118,'multiline':True]['text':'*
 * Assert that starting MongoDB with --replSet succeeds. Uses a provided testFunc to run any
 * caller-provided checks on the started node.
 *
 * Returns the started node.
 ','line_number':130,'multiline':True]['text':' Skip clearing initial sync progress after a successful initial sync attempt so that we','line_number':140,'multiline':False]['text':' can check initialSyncStatus fields after initial sync is complete.','line_number':141,'multiline':False]['text':' Ensure that an initial sync attempt was made and succeeded if the data directory was cleaned.','line_number':151,'multiline':False]['text':'*
 * Assert certain error messages are thrown on startup when files are missing or corrupt.
 ','line_number':167,'multiline':True]['text':' Start a MongoDB instance, create the collection file.','line_number':172,'multiline':False]['text':' Stop MongoDB and corrupt/delete certain files.','line_number':178,'multiline':False]['text':' Restart the MongoDB instance and get an expected error message.','line_number':181,'multiline':False]['text':'*
 * Assert certain error messages are thrown on a specific request when files are missing or corrupt.
 ','line_number':188,'multiline':True]['text':' Start a MongoDB instance, create the collection file.','line_number':193,'multiline':False]['text':' Stop MongoDB and corrupt/delete certain files.','line_number':199,'multiline':False]['text':' Restart the MongoDB instance.','line_number':202,'multiline':False]['text':' This request crashes the server.','line_number':206,'multiline':False]['text':' Get an expected error message.','line_number':210,'multiline':False]['text':'*
 * Runs the WiredTiger tool with the provided arguments.
 ','line_number':221,'multiline':True]['text':'*
 * Stops the given mongod, runs the truncate command on the given uri using the WiredTiger tool, and
 * starts mongod again on the same path.
 ','line_number':229,'multiline':True]['text':'*
 * Stops the given mongod and runs the alter command to modify the index table's metadata.
 ','line_number':239,'multiline':True]['text':'*
 * Stops the given mongod, dumps the table with the uri, modifies the content, and loads it back to
 * the table.
 ','line_number':252,'multiline':True]['text':' In WiredTiger table dumps, the first seven lines are the header and key that we don't want to','line_number':279,'multiline':False]['text':' modify. We will skip them and start from the line containing the first value.','line_number':280,'multiline':False]['text':'*
 * Inserts the documents with duplicate field names into the MongoDB server.
 ','line_number':283,'multiline':True]['text':' The format of the BSON documents will be {_id: ObjectId(), a: "aaaaaaa", a: "bbbbbbb"}.','line_number':290,'multiline':False]['text':' The offset of the document's field name 'b' in the hex string dumped by wt tool.','line_number':292,'multiline':False]['text':' Each record takes two lines with a key and a value. We will only modify the values.','line_number':294,'multiline':False]['text':' Switch the field name 'b' to 'a' to create a duplicate field name.','line_number':296,'multiline':False]['text':' The offset of the type of field 'a' in the hex string dumped by wt tool.','line_number':309,'multiline':False]['text':' Each record takes two lines with a key and a value. We will only modify the values.','line_number':311,'multiline':False]['text':' Switch the field type from string to symbol.','line_number':313,'multiline':False]['text':'*
 * Inserts array document with non-sequential indexes into the MongoDB server.
 ','line_number':321,'multiline':True]['text':' The offset of the 0th index of the innermost array in the hex string dumped by wt tool.','line_number':329,'multiline':False]['text':' Each record takes two lines with a key and a value. We will only modify the values.','line_number':331,'multiline':False]['text':'*
 * Inserts documents with invalid regex options into the MongoDB server.
 ','line_number':340,'multiline':True]['text':' First, insert valid expressions which will not be rejected by the JS interpreter.','line_number':347,'multiline':False]['text':' Inserts 4 types of invalid expressions.','line_number':352,'multiline':False]['text':'*
 * Inserts document with invalid UTF-8 string into the MongoDB server.
 ','line_number':374,'multiline':True]['text':' The offset of the first byte of the string, flips \x70 to \x80 (10000000) - invalid','line_number':382,'multiline':False]['text':' because single byte UTF-8 cannot have a leading 1.','line_number':383,'multiline':False]['text':' Each record takes two lines with a key and a value. We will only modify the values.','line_number':385,'multiline':False]