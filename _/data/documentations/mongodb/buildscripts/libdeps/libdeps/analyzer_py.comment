['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright 2020 MongoDB Inc.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':5,'multiline':False]['text':' a copy of this software and associated documentation files (the','line_number':6,'multiline':False]['text':' "Software"), to deal in the Software without restriction, including','line_number':7,'multiline':False]['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':8,'multiline':False]['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':9,'multiline':False]['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':10,'multiline':False]['text':' the following conditions:','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' The above copyright notice and this permission notice shall be included','line_number':13,'multiline':False]['text':' in all copies or substantial portions of the Software.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':16,'multiline':False]['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':17,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':18,'multiline':False]['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':19,'multiline':False]['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':20,'multiline':False]['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':21,'multiline':False]['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' https://stackoverflow.com/a/25959545/1644736','line_number':53,'multiline':False]['text':' fallback to __qualname__ parsing','line_number':65,'multiline':False]['text':' handle special descriptor objects','line_number':72,'multiline':False]['text':' newer pylints contain the fix: https://github.com/PyCQA/pylint/pull/2926/commits/35e1c61026eab90af504806ef9da6241b096e659','line_number':75,'multiline':False]['text':'signature-mutators=buildscripts.libdeps.graph_analyzer.schema_check','line_number':76,'multiline':False]['text':' pylint: disable=no-value-for-parameter','line_number':77,'multiline':False]['text':' Extract a list of all bazel targets from the root of the tree.','line_number':539,'multiline':False]['text':' Note: //... is the bazel catch-all for referencing all targets in that directory. For','line_number':541,'multiline':False]['text':' example, //src/... will expand to include all targets under //src/.','line_number':542,'multiline':False]['text':' TODO(SERVER-81038): remove /tmp/ prefix once bazel/bazelisk is self-hosted.','line_number':543,'multiline':False]['text':' "bazel query" outputs how many packages were loaded in addition to the targets.','line_number':547,'multiline':False]['text':' Ignore lines not starting with // to skip over that line.','line_number':548,'multiline':False]['text':' Remove leading // and "src" to make comparison with scons targets simpler.','line_number':556,'multiline':False]['text':' Remove library extensions, "lib" prefix, and replace final / with : to make it possible','line_number':563,'multiline':False]['text':' to compare scons target strings with bazel target strings.','line_number':564,'multiline':False]['text':' Exclude counting dependencies that already have bazel targets.','line_number':576,'multiline':False]['text':' We can really help out networkx path finding algorithm by striping the graph down to','line_number':610,'multiline':False]['text':' just a graph containing only paths between the source and target node. This is done by','line_number':611,'multiline':False]['text':' getting a subtree from the target down, and then getting a subtree of that tree from the','line_number':612,'multiline':False]['text':' source up.','line_number':613,'multiline':False]['text':' The min cut algorithm will get the min cut nearest the end','line_number':774,'multiline':False]['text':' of the direction of the graph, so we we use the reverse graph','line_number':775,'multiline':False]['text':' so that we get a cut nearest our from_node, or the first cut we','line_number':776,'multiline':False]['text':' would encounter on a given path from the from_node to the to_node.','line_number':777,'multiline':False]['text':' First we will get all the transitive libdeps the dependent node','line_number':869,'multiline':False]['text':' induces, while we are getting those we also check if the depender','line_number':870,'multiline':False]['text':' node has any symbol dependencies to that transitive libdep.','line_number':871,'multiline':False]['text':' If the depender node has no symbol dependencies on the induced libdeps,','line_number':875,'multiline':False]['text':' then we will walk up the tree for the depender node, checking if any of the','line_number':876,'multiline':False]['text':' induced dependencies have symbols. If there are no simples between all transitive','line_number':877,'multiline':False]['text':' edges from this direct public libdep, its safe to change it to public.','line_number':878,'multiline':False]