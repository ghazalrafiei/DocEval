['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' Get relative imports to work when the package is not installed on the PYTHONPATH.','line_number':13,'multiline':False]['text':' pylint: disable=wrong-import-position','line_number':17,'multiline':False]['text':' pylint: enable=wrong-import-position','line_number':27,'multiline':False]['text':' List of supported linters','line_number':29,'multiline':False]['text':' List of supported SCons linters','line_number':37,'multiline':False]['text':' type: (str) -> List[base.LinterBase]','line_number':44,'multiline':False]['text':' type: (str) -> bool','line_number':69,'multiline':False]['text':' type: List[str]','line_number':71,'multiline':False]['text':' type: (str) -> bool','line_number':80,'multiline':False]['text':' type: List[str]','line_number':82,'multiline':False]['text':' pylint: disable=cell-var-from-loop','line_number':105,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':117,'multiline':False]['text':' Patch may have files that we do not want to check which is fine','line_number':121,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':127,'multiline':False]['text':' Patch may have files that we do not want to check which is fine','line_number':131,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':137,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':145,'multiline':False]['text':' pylint: disable=unused-argument','line_number':146,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':154,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':162,'multiline':False]['text':' Get a list of linters which return a valid command for get_fix_cmd()','line_number':166,'multiline':False]['text':' pylint: disable=cell-var-from-loop','line_number':179,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':190,'multiline':False]['text':' type: (str, Dict[str, str], List[str]) -> None','line_number':198,'multiline':False]['text':' type: () -> None','line_number':206,'multiline':False]['text':' No args given? Fall back to usage screen:','line_number':257,'multiline':False]['text':' Create a dictionary of linter locations if the user needs to override the location of a','line_number':263,'multiline':False]['text':' linter. This is common for mypy on Windows for instance.','line_number':264,'multiline':False]