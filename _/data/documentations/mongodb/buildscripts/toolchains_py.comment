['text':'!/usr/bin/env python3','line_number':1,'multiline':False]['text':' pylint: disable=invalid-str-returned','line_number':36,'multiline':False]['text':' pylint: disable=invalid-str-returned','line_number':48,'multiline':False]['text':' pylint: disable=unsubscriptable-object','line_number':93,'multiline':False]['text':' pylint: disable=unsubscriptable-object','line_number':117,'multiline':False]['text':' These two actions are order-dependent!','line_number':138,'multiline':False]['text':' There is no architecture specified in the distro_id','line_number':205,'multiline':False]['text':' The "default" distro is allowed to have a nonexistent arch','line_number':207,'multiline':False]['text':' Successively match the distro and/or platform against available toolchains.','line_number':279,'multiline':False]['text':' If none is found, use the default entry. If the default entry doesn't exist,','line_number':280,'multiline':False]['text':' we want to know about it because that's a misconfiguration.','line_number':281,'multiline':False]['text':' We need to determine if the configured release is a legacy release','line_number':364,'multiline':False]['text':' that only appears in revisions_dir. We can tell the difference','line_number':365,'multiline':False]['text':' because legacy releases are all identified by git commit hashes.','line_number':366,'multiline':False]['text':' We don't know the release ID and are querying by name. This supports use case 1.','line_number':491,'multiline':False]['text':' We know the release ID and want to know whether it's installed. This supports use','line_number':501,'multiline':False]['text':' case 2. This is the "short path" for the method because any string other than a','line_number':502,'multiline':False]['text':' real release ID or release name causes a return.','line_number':503,'multiline':False]['text':' pylint: disable=protected-access','line_number':530,'multiline':False]['text':' pylint: disable=protected-access, redefined-builtin, redefined-outer-name','line_number':607,'multiline':False]['text':' Set up the objects required for each command','line_number':757,'multiline':False]['text':' Get and handle output','line_number':781,'multiline':False]['text':' If there is no output, it should indicate an error to the caller.','line_number':790,'multiline':False]['text':' pylint: disable=invalid-name','line_number':792,'multiline':False]