['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':53,'multiline':False]['text':'*
 *  A handle to a remote database server backed by an individual transport::Session.
 *  This is the main entry point for talking to a simple Mongo setup.
 *
 *  In general, this type is only allowed to be used from one thread at a time. As a special
 *  exception, it is legal to call shutdownAndDisallowReconnect() from any thread as a way to
 *  interrupt the owning thread.
 ','line_number':85,'multiline':True]['text':'*
     * A hook used to validate the reply of a "hello" command during connection. If the hook
     * returns a non-OK Status, the DBClientSession object will disconnect from the remote
     * server. This function must not throw - it can only indicate failure by returning a non-OK
     * status.
     ','line_number':95,'multiline':True]['text':'*
       @param autoReconnect if true, automatically reconnect on a connection failure
       @param soTimeout tcp timeout in seconds - this is for read/write, not connect.
       Connect timeout is fixed, but short, at 5 seconds.
     ','line_number':104,'multiline':True]['text':'*
     * Connect to a Mongo database server.
     *
     * If autoReconnect is true, you can try to use the DBClientSession even when
     * connect fails -- it will try to connect again.
     *
     * @param server The server to connect to.
     ','line_number':117,'multiline':True]['text':'*
     * This version of connect does not run "hello" after establishing a transport::Session with the
     * remote host. This method should be used only when calling "hello" would create a deadlock,
     * such as in 'isSelf'.
     *
     * @param server The server to connect to.
     ','line_number':129,'multiline':True]['text':'*
     * @return true if this client is currently known to be in a failed state.  When
     * autoreconnect is on, the client will transition back to an ok state after reconnecting.
     ','line_number':138,'multiline':True]['text':'*
     * Disconnects the client and interrupts operations if they are currently blocked waiting for
     * the network. If autoreconnect is on, the underlying session will be re-established.
     * Shutting down a connection does not imply that we are shutting down the process, although
     * the two events often happen together.
     ','line_number':148,'multiline':True]['text':'*
     * Causes an error to be reported the next time the client is used. Will interrupt
     * operations if they are currently blocked waiting for the network.
     *
     * This is the only method that is allowed to be called from other threads.
     ','line_number':156,'multiline':True]['text':' Throws a NetworkException if in failed state and not reconnecting or if waiting to reconnect.','line_number':213,'multiline':False]['text':'*
     * The action to take on the underlying session after marking this client as failed.
     ','line_number':248,'multiline':True]['text':'*
         * Just mark the client failed, but do nothing with the session.
         ','line_number':252,'multiline':True]['text':'*
         * End the session after marking the client failed.
         ','line_number':257,'multiline':True]['text':'*
         * Release ownership of the session, possibly triggering its destruction.
         * This will acquire the session lock.
         ','line_number':262,'multiline':True]['text':'*
         * Shut the session down.
         * This potentially differs from simply ending the session, since it may involve cleanup
         * specific to the type of session being shut down.
         ','line_number':268,'multiline':True]['text':' The session mutex must be held to shutdown the _session from a non-owning thread, or to','line_number':282,'multiline':False]['text':' rebind the handle from the owning thread. The thread that owns this DBClientSession is','line_number':283,'multiline':False]['text':' allowed to use the _session without locking the mutex. This mutex also guards writes to','line_number':284,'multiline':False]['text':' _stayFailed, although reads are allowed outside the mutex.','line_number':285,'multiline':False]['text':' Hook that is run on every call to connect()','line_number':311,'multiline':False]['text':' namespace mongo','line_number':320,'multiline':False]