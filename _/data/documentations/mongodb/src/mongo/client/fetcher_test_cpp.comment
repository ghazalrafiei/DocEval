['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Calls scheduleSuccessfulResponse/scheduleErrorResponse + finishProcessingNetworkResponse','line_number':78,'multiline':False]['text':' Called at end of _callback','line_number':107,'multiline':False]['text':' Executor may still invoke fetcher's callback before shutting down.','line_number':140,'multiline':False]['text':' Null executor.','line_number':224,'multiline':False]['text':' Empty source.','line_number':234,'multiline':False]['text':' Empty database name.','line_number':244,'multiline':False]['text':' Empty command object.','line_number':251,'multiline':False]['text':' Callback function cannot be null.','line_number':261,'multiline':False]['text':' Retry policy for first command cannot be null.','line_number':271,'multiline':False]['text':' Used to check that the future continuation was run.','line_number':288,'multiline':False]['text':' Used to check that the future continuation was run.','line_number':321,'multiline':False]['text':' On shutdown, we expect that the async fetcher will not be stuck waiting.','line_number':346,'multiline':False]['text':' Used to check that the future continuation was run.','line_number':357,'multiline':False]['text':' On shutdown, we expect that the async fetcher will not be stuck waiting.','line_number':366,'multiline':False]['text':' Command object can refer to any command that returns a cursor. This','line_number':376,'multiline':False]['text':' includes listIndexes and listCollections.','line_number':377,'multiline':False]['text':' To make this test deterministic, we need the Fetcher to already be shut down so it doesn't','line_number':516,'multiline':False]['text':' attempt to process the scheduled response. Normally Fetcher::join() would be solely','line_number':517,'multiline':False]['text':' responsible for calling Fetcher::shutdown().','line_number':518,'multiline':False]['text':' The finishProcessingNetworkResponseThread is needed to prevent the main test thread from','line_number':521,'multiline':False]['text':' blocking on the NetworkInterfaceMock.','line_number':522,'multiline':False]['text':' We destroy the Fetcher before shutting down the task executor to reflect what would','line_number':528,'multiline':False]['text':' ordinarily happen after Fetcher::join() returns an error Status from the Interruptible being','line_number':529,'multiline':False]['text':' interrupted.','line_number':530,'multiline':False]['text':' killCursors command request will be canceled by executor on shutdown.','line_number':1016,'multiline':False]['text':' Failed killCursors command response should be logged.','line_number':1091,'multiline':False]['text':'*
 * This will be invoked twice before the fetcher returns control to the task executor.
 ','line_number':1104,'multiline':True]['text':' First time during second batch','line_number':1117,'multiline':False]['text':' Fetcher should attempt (unsuccessfully) to schedule a killCursors command.','line_number':1168,'multiline':False]['text':' Retry policy is applied to find command.','line_number':1198,'multiline':False]['text':' No retry policy for subsequent getMore commands.','line_number':1218,'multiline':False]['text':' Fetcher should reset 'Fetcher::_work' after running callback function for the last time','line_number':1262,'multiline':False]['text':' before becoming inactive.','line_number':1263,'multiline':False]['text':' This ensures that we release resources associated with 'Fetcher::_work'.','line_number':1264,'multiline':False]['text':' namespace','line_number':1269,'multiline':False]