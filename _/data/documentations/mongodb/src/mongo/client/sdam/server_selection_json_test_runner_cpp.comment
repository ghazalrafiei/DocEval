['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':37,'multiline':False]['text':' IWYU pragma: keep','line_number':40,'multiline':False]['text':'*
 * This program runs the Server Discover and Monitoring JSON test files located in
 * the src/monogo/client/sdam/json_tests/server_selection_tests sub-directory.
 *
 * The process return code conforms to the UNIX idiom of 0 to indicate success and non-zero to
 * indicate failure. In the case of test failure, the process will return the number of test cases
 * that failed.
 *
 * Example invocation to run all tests:
 *  sdam_json_test --source-dir src/monogo/client/sdam/json_tests/server_selection_tests
 *
 * Example invocation to run a single test:
 *  sdam_json_test --source-dir src/monogo/client/sdam/json_tests/server_selection_tests --filter
 * Nearest_multiple
 ','line_number':87,'multiline':True]['text':' pair of error subject & error description','line_number':120,'multiline':False]['text':'*
 * This class is responsible for parsing and executing a single json test file in the rtt directory.
 ','line_number':140,'multiline':True]['text':' This is mocking the first ServerDescription being created during the handshake','line_number':158,'multiline':False]['text':' Only create the initial server description if the original avg rtt is not "NULL". If it','line_number':194,'multiline':False]['text':' is, the test case is meant to mimic creating the first ServerDescription which we will do','line_number':195,'multiline':False]['text':' above.','line_number':196,'multiline':False]['text':'*
 * This class is responsible for parsing and executing a single json test file in the
 * server_selection directory.
 ','line_number':239,'multiline':True]['text':' Do this first to save the state','line_number':311,'multiline':False]['text':' The json tests pass in capitalized keywords for mode, but the server only accepts','line_number':317,'multiline':False]['text':' lowercased keywords. Also, change the key "tags_set" to "tags".','line_number':318,'multiline':False]['text':' This can throw for test cases that have invalid read preferences.','line_number':319,'multiline':False]['text':' Drivers tests expect no error for invalid maxStaleness values for Unknown, Single,','line_number':346,'multiline':False]['text':' and Sharded topology types. The server code doesn't allow read preferences to be','line_number':347,'multiline':False]['text':' created for invalid values for maxStaleness, so ignore it.','line_number':348,'multiline':False]['text':' Generate an error to pass test cases that set max staleness to zero since the server','line_number':353,'multiline':False]['text':' interprets this as no maxStaleness is specified.','line_number':354,'multiline':False]['text':' Compare the server addresses of each server in the selectedServers and','line_number':444,'multiline':False]['text':' _inLatencyWindow vectors. We do not need to compare the entire server description','line_number':445,'multiline':False]['text':' because we only need to make sure that the correct server was chosen and are not','line_number':446,'multiline':False]['text':' manipulating the ServerDescriptions at all.','line_number':447,'multiline':False]['text':'*
 * This class runs (potentially) multiple json tests and reports their results.
 ','line_number':490,'multiline':True]['text':' clear the errors, so that it's treated as a success','line_number':521,'multiline':False]['text':' use default value of sdamHeartBeatFrequencyMs unless the test explicitly sets it.','line_number':537,'multiline':False]['text':' namespace mongo::sdam','line_number':631,'multiline':False]