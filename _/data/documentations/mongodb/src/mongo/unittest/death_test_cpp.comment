['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':65,'multiline':False]['text':'*
 * Logs an artifact about why a death test might be skipped.
 * As a side effect, defines the DEATH_TEST_ENABLED macro.
 ','line_number':118,'multiline':True]['text':' DEATH_TEST_ENABLED','line_number':151,'multiline':False]['text':'*
 * Reassign `arg0` (obtained from an `argv[0]`) with its full path.
 * This is necessary to self-exec if this program was invoked through a `$PATH`
 * lookup, such that `argv[0]` is just a basename. The `execve` used needs a
 * pathname and does not consult the PATH.
 *
 * If `arg0` contains any '/' characters, then it didn't come from a PATH
 * substitution, and is not changed.
 *
 * This reassignment is only attempted on Linux. This is simply because it's
 * easy there to perform a realpath("/proc/self/exe") and find this
 * program's executable pathname. Support for other OSes can be added as needed.
 *
 * Possibilities:
 *   - "Finding current executable's path without /proc/self/exe"
 *     [link](https://stackoverflow.com/questions/1023306)
 *   - "What is the equivalent of /proc/self/exe on Macintosh OS X Mavericks?"
 *     [link](https://stackoverflow.com/questions/22675457)
 ','line_number':176,'multiline':True]['text':' If it contains slashes, `orig` is already a pathname. It didn't come','line_number':196,'multiline':False]['text':' from a PATH search.','line_number':197,'multiline':False]['text':'* Removes "--opt val" and "--opt=val" argument sequences from `av`. ','line_number':223,'multiline':True]['text':' namespace','line_number':238,'multiline':False]['text':' We're in an execve child process.','line_number':242,'multiline':False]['text':' There are a few reasons to fall back to non-exec death tests.','line_number':246,'multiline':False]['text':' These are mostly unusual tests with a custom main.','line_number':247,'multiline':False]['text':' Go further: fully reboot the child with `execve`.','line_number':277,'multiline':False]['text':' Arrange for the subprocess to execute only this test, exactly once.','line_number':290,'multiline':False]['text':' Remove '--repeat' option. We want to repeat the whole death test not its child.','line_number':291,'multiline':False]['text':' The presence of this flag is how the test body in the child process knows it's in the','line_number':301,'multiline':False]['text':' child process, and therefore to not exec again. Its value is ignored.','line_number':302,'multiline':False]['text':' ignore json parsing errors and dump the whole log line as text','line_number':342,'multiline':False]['text':' Exited with a signal or non-zero code. Validate the expected message.','line_number':360,'multiline':False]['text':' We disable the creation of core dump files in the child process since the child process','line_number':390,'multiline':False]['text':' is expected to exit uncleanly. This avoids unnecessarily creating core dump files when','line_number':391,'multiline':False]['text':' the child process calls std::abort() or std::terminate().','line_number':392,'multiline':False]['text':' Our callback handler exits with the default TSAN exit code so we can check in the death test','line_number':397,'multiline':False]['text':' framework Without this, the use could override the exit code and get a false positive that','line_number':398,'multiline':False]['text':' the test passes in TSAN builds.','line_number':399,'multiline':False]['text':' To fail the test, we must exit with a successful error code, because the parent process','line_number':415,'multiline':False]['text':' is checking for the child to die with an exit code indicating an error.','line_number':416,'multiline':False]['text':' DEATH_TEST_ENABLED','line_number':419,'multiline':False]['text':' namespace unittest','line_number':421,'multiline':False]['text':' namespace mongo','line_number':422,'multiline':False]