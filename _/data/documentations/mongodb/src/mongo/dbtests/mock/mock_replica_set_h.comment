['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This is a helper class for managing a replica set consisting of
 * MockRemoteDBServer instances.
 *
 * Note: Be sure to call ScopedDbConnection::clearPool() after every test
 * when doing tests that involves the ReplicaSetMonitor. This is because
 * it uses ScopedDbConnection which means you can have a residue connections
 * that was created from previous tests and can cause a seg fault if the
 * MockRemoteDBServer instances were already destroyed.
 *
 * Warning: Not thread-safe
 ','line_number':50,'multiline':True]['text':'*
     * Creates a mock replica set and automatically mocks the hello and replSetGetStatus commands
     * based on the default replica set configuration. Either the first node is primary and the
     * others are secondaries, or all are secondaries. By default, hostnames begin with "$", which
     * signals to ReplicaSetMonitor and to ConnectionString::connect that these are mocked hosts.
     *
     * @param setName The name for this replica set
     * @param nodes The initial number of nodes for this replica set
     * @param hasPrimary Whether the first node is primary or all are secondaries
     * @param dollarPrefixHosts Whether hostnames should begin with "$"
     ','line_number':64,'multiline':True]['text':'','line_number':81,'multiline':False]['text':' getters','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':'*
     * Sets the configuration for this replica sets. This also has a side effect of mocking the
     * hello and replSetGetStatus command responses based on the new config.
     *
     * Note: does not automatically select a new primary. Can be done manually by calling
     * setPrimary.
     ','line_number':94,'multiline':True]['text':'*
     * Mark one of the config members as primary. Pass the empty string if all nodes are secondary.
     ','line_number':103,'multiline':True]['text':'*
     * @return pointer to the mocked remote server with the given hostName.
     *     NULL if host doesn't exists.
     ','line_number':108,'multiline':True]['text':'*
     * Kills a node belonging to this set.
     *
     * @param hostName the name of the replica node to kill.
     ','line_number':115,'multiline':True]['text':'*
     * Kills a set of host belonging to this set.
     *
     * @param hostList the list of host names of the servers to kill.
     ','line_number':122,'multiline':True]['text':'*
     * Reboots a node.
     *
     * @param hostName the name of the host to reboot.
     ','line_number':129,'multiline':True]['text':'*
     * Returns a topology description reflecting the current state of this replica set.
     ','line_number':136,'multiline':True]['text':'*
     * Mocks the "hello" command based on the information on the current replica set configuration.
     ','line_number':144,'multiline':True]['text':'*
     * Mock the hello response for the given server.
     ','line_number':149,'multiline':True]['text':'*
     * Mocks the replSetGetStatus command based on the current states of the
     * mocked servers.
     ','line_number':154,'multiline':True]['text':'*
     * @return the replica set state of the given host
     ','line_number':160,'multiline':True]['text':' namespace mongo','line_number':171,'multiline':False]