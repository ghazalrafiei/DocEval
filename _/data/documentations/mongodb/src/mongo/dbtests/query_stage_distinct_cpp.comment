['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':60,'multiline':False]['text':'*
 * This file tests db/exec/distinct.cpp
 ','line_number':66,'multiline':True]['text':'*
     * Returns the projected value from the working set that would
     * be returned in the 'values' field of the distinct command result.
     * Limited to NumberInt BSON types because this is the only
     * BSON type used in this suite of tests.
     ','line_number':92,'multiline':True]['text':' For some reason (at least under OS X clang), we cannot refer to INVALID_ID','line_number':101,'multiline':False]['text':' inside the test assertion macro.','line_number':102,'multiline':False]['text':' Distinct hack execution is always covered.','line_number':108,'multiline':False]['text':' Key value is retrieved from working set key data','line_number':109,'multiline':False]['text':' instead of RecordId.','line_number':110,'multiline':False]['text':' Tests distinct with single key indices.','line_number':129,'multiline':False]['text':' Insert a ton of documents with a: 1','line_number':135,'multiline':False]['text':' Insert a ton of other documents with a: 2','line_number':140,'multiline':False]['text':' Make an index on a:1','line_number':145,'multiline':False]['text':' Set up the distinct stage.','line_number':151,'multiline':False]['text':' Distinct-ing over the 0-th field of the keypattern.','line_number':159,'multiline':False]['text':' We'll look at all values in the bounds.','line_number':161,'multiline':False]['text':' Get our first result.','line_number':171,'multiline':False]['text':' 5 is a bogus number.  There's some amount of setup done by the first few calls but','line_number':176,'multiline':False]['text':' we should return the first result relatively promptly.','line_number':177,'multiline':False]['text':' Getting our second result should be very quick as we just skip','line_number':181,'multiline':False]['text':' over the first result.','line_number':182,'multiline':False]['text':' This is 0 because we don't have to loop for several values; we just skip over','line_number':188,'multiline':False]['text':' all the 'a' values.','line_number':189,'multiline':False]['text':' Tests distinct with multikey indices.','line_number':196,'multiline':False]['text':' Insert a ton of documents with a: [1, 2, 3]','line_number':202,'multiline':False]['text':' Insert a ton of other documents with a: [4, 5, 6]','line_number':207,'multiline':False]['text':' Make an index on a:1','line_number':212,'multiline':False]['text':' Set up the distinct stage.','line_number':218,'multiline':False]['text':' Distinct-ing over the 0-th field of the keypattern.','line_number':228,'multiline':False]['text':' We'll look at all values in the bounds.','line_number':230,'multiline':False]['text':' We should see each number in the range [1, 6] exactly once.','line_number':239,'multiline':False]['text':' Check int value.','line_number':246,'multiline':False]['text':' Should see this number only once.','line_number':251,'multiline':False]['text':' insert documents with a: 1 and b: 1','line_number':264,'multiline':False]['text':' insert documents with a: 1 and b: 2','line_number':268,'multiline':False]['text':' insert documents with a: 2 and b: 1','line_number':272,'multiline':False]['text':' insert documents with a: 2 and b: 3','line_number':276,'multiline':False]['text':' XXX: add a test case with bounds where skipping to the next key gets us a result that's not','line_number':327,'multiline':False]['text':' valid w.r.t. our query.','line_number':328,'multiline':False]['text':' namespace QueryStageDistinct','line_number':343,'multiline':False]