['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':90,'multiline':False]['text':' Check findOne() returning object.','line_number':238,'multiline':False]['text':' Cross check with findOne() returning location.','line_number':241,'multiline':False]['text':' We don't normally allow empty objects in the database, but test that we can find','line_number':251,'multiline':False]['text':' an empty object (one might be allowed inside a reserved namespace at some point).','line_number':252,'multiline':False]['text':' Check that a cursor has been registered with the global cursor manager, and has','line_number':341,'multiline':False]['text':' already returned its first batch of results.','line_number':342,'multiline':False]['text':'*
 * Setting killAllOperations causes further getmores to fail.
 ','line_number':360,'multiline':True]['text':' Create a collection with some data.','line_number':370,'multiline':False]['text':' Create a cursor on the collection, with a batch size of 200.','line_number':375,'multiline':False]['text':' Count 500 results, spanning a few batches of documents.','line_number':380,'multiline':False]['text':' Set the killop kill all flag, forcing the next get more to fail with a kill op','line_number':386,'multiline':False]['text':' exception.','line_number':387,'multiline':False]['text':' Revert the killop kill all flag.','line_number':397,'multiline':False]['text':'*
 * A get more exception caused by an invalid or unauthorized get more request does not cause
 * the get more's ClientCursor to be destroyed.  This prevents an unauthorized user from
 * improperly killing a cursor by issuing an invalid get more request.
 ','line_number':406,'multiline':True]['text':' Create a collection with some data.','line_number':420,'multiline':False]['text':' Create a cursor on the collection, with a batch size of 200.','line_number':425,'multiline':False]['text':' Count 500 results, spanning a few batches of documents.','line_number':431,'multiline':False]['text':' Send a getMore with a namespace that is incorrect ('spoofed') for this cursor id.','line_number':439,'multiline':False]['text':' Check that the cursor still exists.','line_number':447,'multiline':False]['text':' Check that the cursor can be iterated until all documents are returned.','line_number':451,'multiline':False]['text':' The cursor should no longer exist, since we exhausted it.','line_number':458,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':506,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':545,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':579,'multiline':False]['text':' We have overwritten the previous cursor position and should encounter a dead cursor.','line_number':599,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':614,'multiline':False]['text':' We have overwritten the previous cursor position and should encounter a dead cursor.','line_number':635,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':652,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':713,'multiline':False]['text':' SERVER-645','line_number':745,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':762,'multiline':False]['text':' Create a capped collection of size 10.','line_number':767,'multiline':False]['text':' WiredTiger storage engines forbid dropping of the oplog. Evergreen reuses nodes for','line_number':770,'multiline':False]['text':' testing, so the oplog may already exist on the test node; in this case, trying to create','line_number':771,'multiline':False]['text':' the oplog once again would fail.','line_number':772,'multiline':False]['text':'','line_number':773,'multiline':False]['text':' To ensure we are working with a clean oplog (an oplog without entries), we resort','line_number':774,'multiline':False]['text':' to truncating the oplog instead.','line_number':775,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':814,'multiline':False]['text':' Create a capped collection of size 10.','line_number':819,'multiline':False]['text':' WiredTiger storage engines forbid dropping of the oplog. Evergreen reuses nodes for','line_number':822,'multiline':False]['text':' testing, so the oplog may already exist on the test node; in this case, trying to create','line_number':823,'multiline':False]['text':' the oplog once again would fail.','line_number':824,'multiline':False]['text':'','line_number':825,'multiline':False]['text':' To ensure we are working with a clean oplog (an oplog without entries), we resort','line_number':826,'multiline':False]['text':' to truncating the oplog instead.','line_number':827,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':1452,'multiline':False]['text':' note that extents are always at least 4KB now - so this will get rounded up','line_number':1460,'multiline':False]['text':' a bit.','line_number':1461,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':1605,'multiline':False]['text':' Must use local db so that the collection is not replicated, to allow autoIndexId:false.','line_number':1611,'multiline':False]['text':' WiredTiger storage engines forbid dropping of the oplog. Evergreen reuses nodes for','line_number':1617,'multiline':False]['text':' testing, so the oplog may already exist on the test node; in this case, trying to create','line_number':1618,'multiline':False]['text':' the oplog once again would fail.','line_number':1619,'multiline':False]['text':'','line_number':1620,'multiline':False]['text':' To ensure we are working with a clean oplog (an oplog without entries), we resort','line_number':1621,'multiline':False]['text':' to truncating the oplog instead.','line_number':1622,'multiline':False]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':1673,'multiline':False]['text':' Must use local db so that the collection is not replicated, to allow autoIndexId:false.','line_number':1681,'multiline':False]['text':' WiredTiger storage engines forbid dropping of the oplog. Evergreen reuses nodes for','line_number':1687,'multiline':False]['text':' testing, so the oplog may already exist on the test node; in this case, trying to create','line_number':1688,'multiline':False]['text':' the oplog once again would fail.','line_number':1689,'multiline':False]['text':'','line_number':1690,'multiline':False]['text':' To ensure we are working with a clean oplog (an oplog without entries), we resort','line_number':1691,'multiline':False]['text':' to truncating the oplog instead.','line_number':1692,'multiline':False]['text':'*
 * Check oplog replay mode where query timestamp is earlier than the earliest
 * entry in the collection.
 ','line_number':1725,'multiline':True]['text':' Skip the test if the storage engine doesn't support capped collections.','line_number':1737,'multiline':False]['text':' Check oplog replay mode with missing collection.','line_number':1744,'multiline':False]['text':' Must use local db so that the collection is not replicated, to allow autoIndexId:false.','line_number':1752,'multiline':False]['text':' WiredTiger storage engines forbid dropping of the oplog. Evergreen reuses nodes for','line_number':1758,'multiline':False]['text':' testing, so the oplog may already exist on the test node; in this case, trying to create','line_number':1759,'multiline':False]['text':' the oplog once again would fail.','line_number':1760,'multiline':False]['text':'','line_number':1761,'multiline':False]['text':' To ensure we are working with a clean oplog (an oplog without entries), we resort','line_number':1762,'multiline':False]['text':' to truncating the oplog instead.','line_number':1763,'multiline':False]['text':' Check oplog replay mode with empty collection.','line_number':1771,'multiline':False]['text':' Check with some docs in the collection.','line_number':1777,'multiline':False]['text':' Check that no persistent cursors outlast our queries above.','line_number':1784,'multiline':False]['text':'nameOnly','line_number':1916,'multiline':True]['text':'nameOnly','line_number':1930,'multiline':True]['text':'nameOnly','line_number':1944,'multiline':True]['text':' Should not hit this unless we failed to find the database.','line_number':1955,'multiline':False]['text':' With five results and a batch size of 5, a cursor is created since we don't know','line_number':1979,'multiline':False]['text':' there are no more results.','line_number':1980,'multiline':False]['text':' With a batchsize of 6 we know there are no more results so we don't create a','line_number':1993,'multiline':False]['text':' cursor.','line_number':1994,'multiline':False]['text':' namespace','line_number':2093,'multiline':False]['text':' namespace mongo','line_number':2094,'multiline':False]