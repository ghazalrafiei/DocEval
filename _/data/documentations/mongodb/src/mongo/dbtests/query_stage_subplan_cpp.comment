['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':70,'multiline':False]['text':'*
     * Parses the json string 'findCmd', specifying a find command, to a CanonicalQuery.
     ','line_number':129,'multiline':True]['text':' If there is no '$db', append it.','line_number':135,'multiline':False]['text':'*
 * SERVER-15012: test that the subplan stage does not crash when the winning solution
 * for an $or clause uses a '2d' index. We don't produce cache data for '2d'. The subplanner
 * should gracefully fail after finding that no cache data is available, allowing us to fall
 * back to regular planning.
 ','line_number':158,'multiline':True]['text':' Get planner params.','line_number':184,'multiline':False]['text':' Plan selection should succeed due to falling back on regular planning.','line_number':192,'multiline':False]['text':'*
 * Helper function to verify that branches of an $or can be subplanned from the cache. Assumes that
 * the indexes to be tested have already been created for the given WriteContextForTest.
 ','line_number':197,'multiline':True]['text':' This query should result in a plan cache entry for the first $or branch, because','line_number':202,'multiline':False]['text':' there are two competing indices. The second branch has only one relevant index, so','line_number':203,'multiline':False]['text':' its winning plan should not be cached.','line_number':204,'multiline':False]['text':' Get planner params.','line_number':219,'multiline':False]['text':' For the remainder of this test, ensure that cache entries are available immediately, and','line_number':223,'multiline':False]['text':' don't need go through an 'inactive' state before being usable.','line_number':224,'multiline':False]['text':' Nothing is in the cache yet, so neither branch should have been planned from','line_number':234,'multiline':False]['text':' the plan cache.','line_number':235,'multiline':False]['text':' If we repeat the same query, the plan for the first branch should have come from','line_number':239,'multiline':False]['text':' the cache.','line_number':240,'multiline':False]['text':'*
 * Test the SubplanStage's ability to plan an individual branch using the plan cache.
 ','line_number':250,'multiline':True]['text':'*
 * Test that the SubplanStage can plan an individual branch from the cache using a $** index.
 ','line_number':263,'multiline':True]['text':'*
 * Ensure that the subplan stage doesn't create a plan cache entry if there are no query results.
 ','line_number':275,'multiline':True]['text':' Exclude field 'c' from the wildcard index to make sure that the field has only one relevant','line_number':284,'multiline':False]['text':' index.','line_number':285,'multiline':False]['text':' Running this query should not create any cache entries. For the first branch, it's','line_number':293,'multiline':False]['text':' because there are no matching results. For the second branch it's because there is only','line_number':294,'multiline':False]['text':' one relevant index.','line_number':295,'multiline':False]['text':' Get planner params.','line_number':306,'multiline':False]['text':' Nothing is in the cache yet, so neither branch should have been planned from','line_number':317,'multiline':False]['text':' the plan cache.','line_number':318,'multiline':False]['text':' If we run the query again, it should again be the case that neither branch gets planned','line_number':322,'multiline':False]['text':' from the cache (because the first call to pickBestPlan() refrained from creating any','line_number':323,'multiline':False]['text':' cache entries).','line_number':324,'multiline':False]['text':'*
 * Ensure that the subplan stage doesn't create a plan cache entry if the candidate plans tie.
 ','line_number':334,'multiline':True]['text':' Exclude field 'd' from the wildcard index to make sure that the field has only one relevant','line_number':343,'multiline':False]['text':' index.','line_number':344,'multiline':False]['text':' Running this query should not create any cache entries. For the first branch, it's','line_number':351,'multiline':False]['text':' because plans using the {a: 1, b: 1} and {a: 1, c: 1} indices should tie during plan','line_number':352,'multiline':False]['text':' ranking. For the second branch it's because there is only one relevant index.','line_number':353,'multiline':False]['text':' Get planner params.','line_number':364,'multiline':False]['text':' Nothing is in the cache yet, so neither branch should have been planned from','line_number':375,'multiline':False]['text':' the plan cache.','line_number':376,'multiline':False]['text':' If we run the query again, it should again be the case that neither branch gets planned','line_number':380,'multiline':False]['text':' from the cache (because the first call to pickBestPlan() refrained from creating any','line_number':381,'multiline':False]['text':' cache entries).','line_number':382,'multiline':False]['text':'*
 * Unit test the subplan stage's canUseSubplanning() method.
 ','line_number':392,'multiline':True]['text':' We won't try and subplan something that doesn't have an $or.','line_number':396,'multiline':False]['text':' Don't try and subplan if there is no filter.','line_number':403,'multiline':False]['text':' We won't try and subplan two contained ORs.','line_number':410,'multiline':False]['text':' Can't use subplanning if there is a hint.','line_number':419,'multiline':False]['text':' Can't use subplanning with min.','line_number':429,'multiline':False]['text':' Can't use subplanning with max.','line_number':439,'multiline':False]['text':' Can't use subplanning with tailable.','line_number':449,'multiline':False]['text':' Can use subplanning for rooted $or.','line_number':459,'multiline':False]['text':' Can't use subplanning for a single contained $or.','line_number':474,'multiline':False]['text':' Can't use subplanning if the contained $or query has a geo predicate.','line_number':483,'multiline':False]['text':' Can't use subplanning if the contained $or query also has a $text predicate.','line_number':493,'multiline':False]['text':' Can't use subplanning if the contained $or query also has a $near predicate.','line_number':503,'multiline':False]['text':'*
 * Test the subplan stage's ability to answer a rooted $or query with a $ne and a sort.
 *
 * Regression test for SERVER-19388.
 ','line_number':514,'multiline':True]['text':' Every doc matches.','line_number':524,'multiline':False]['text':' Build a query with a rooted $or.','line_number':564,'multiline':False]['text':' Add 4 indices: 2 for each predicate to choose from.','line_number':571,'multiline':False]['text':' Add some data so planning has to do some thinking.','line_number':579,'multiline':False]['text':' Create the SubplanStage.','line_number':587,'multiline':False]['text':' Build a query with a rooted $or.','line_number':599,'multiline':False]['text':' Add 4 indices: 2 for each predicate to choose from.','line_number':606,'multiline':False]['text':' Create the SubplanStage.','line_number':614,'multiline':False]['text':' Build a query with a rooted $or.','line_number':638,'multiline':False]['text':' Add 4 indices: 2 for each predicate to choose from, and one index which is not relevant to','line_number':648,'multiline':False]['text':' the query.','line_number':649,'multiline':False]['text':' Create the SubplanStage.','line_number':653,'multiline':False]['text':' Mimic a yield by saving the state of the subplan stage. Then, drop an index not being used','line_number':658,'multiline':False]['text':' while yielded.','line_number':659,'multiline':False]['text':' Attempt to restore state. This should throw due the index drop. As a future improvement, we','line_number':664,'multiline':False]['text':' may wish to make the subplan stage tolerate drops of indices it is not using.','line_number':665,'multiline':False]['text':' Build a query with a rooted $or.','line_number':686,'multiline':False]['text':' Add 4 indices: 2 for each predicate to choose from, and one index which is not relevant to','line_number':697,'multiline':False]['text':' the query.','line_number':698,'multiline':False]['text':' Create the SubplanStage.','line_number':702,'multiline':False]['text':' Mimic a yield by saving the state of the subplan stage and dropping our lock. Then drop an','line_number':710,'multiline':False]['text':' index not being used while yielded.','line_number':711,'multiline':False]['text':' Restoring state should succeed, since the plan selected by pickBestPlan() does not use the','line_number':716,'multiline':False]['text':' index {irrelevant: 1}.','line_number':717,'multiline':False]['text':' namespace','line_number':722,'multiline':False]['text':' namespace mongo','line_number':723,'multiline':False]