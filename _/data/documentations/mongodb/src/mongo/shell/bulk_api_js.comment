['text':'','line_number':1,'multiline':False]['text':' Scope for the function','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Batch types','line_number':5,'multiline':False]['text':' Error codes','line_number':11,'multiline':False]['text':'*
     * Helper function to define properties
     ','line_number':17,'multiline':True]['text':'*
     * Shell representation of WriteConcern, possibly includes:
     *  j: write waits for journal
     *  w: write waits until replicated to number of servers (including primary), or mode (string)
     *  wtimeout: how long to wait for "w" replication
     *  fsync: waits for data flush (either journal, nor database files depending on server conf)
     *
     * Accepts { w : x, j : x, wtimeout : x, fsync: x } or w, wtimeout, j
     ','line_number':29,'multiline':True]['text':' Do basic validation.','line_number':60,'multiline':False]['text':'*
         * @return {string}
         ','line_number':84,'multiline':True]['text':'*
     * Wraps the result for write commands and presents a convenient api for accessing
     * single results & errors (returns the last one if there are multiple).
     * singleBatchType is passed in on bulk operations consisting of a single batch and
     * are used to filter the WriteResult to only include relevant result fields.
     ','line_number':100,'multiline':True]['text':' Define properties','line_number':110,'multiline':False]['text':'','line_number':122,'multiline':False]['text':' Define access methods','line_number':123,'multiline':False]['text':'*
         * @return {string}
         ','line_number':160,'multiline':True]['text':' Suppress all output for the write concern w:0, since the client doesn't care.','line_number':204,'multiline':False]['text':'*
     * Wraps the result for the commands
     ','line_number':216,'multiline':True]['text':' Define properties','line_number':223,'multiline':False]['text':'','line_number':231,'multiline':False]['text':' Define access methods','line_number':232,'multiline':False]['text':'','line_number':260,'multiline':False]['text':' Get all errors','line_number':261,'multiline':False]['text':' Return the error','line_number':274,'multiline':False]['text':' Combine the errors','line_number':277,'multiline':False]['text':' TODO: Something better','line_number':282,'multiline':False]['text':'*
         * @return {string}
         ','line_number':292,'multiline':True]['text':' Suppress all output for the write concern w:0, since the client doesn't care.','line_number':300,'multiline':False]['text':' Create a combined error message','line_number':317,'multiline':False]['text':'*
         * @return {WriteResult} the simplified results condensed into one.
         ','line_number':342,'multiline':True]['text':'*
     * Represents a bulk write error, identical to a BulkWriteResult but thrown
     ','line_number':352,'multiline':True]['text':' Bulk errors are basically bulk results with additional error information','line_number':362,'multiline':False]['text':' Override some particular methods','line_number':365,'multiline':False]['text':'*
     * Wraps a command error
     ','line_number':394,'multiline':True]['text':' Define properties','line_number':401,'multiline':False]['text':'*
         * @return {string}
         ','line_number':411,'multiline':True]['text':'*
     * Wraps an error for a single write
     ','line_number':431,'multiline':True]['text':' Define properties','line_number':441,'multiline':False]['text':' errInfo field is optional.','line_number':445,'multiline':False]['text':'','line_number':449,'multiline':False]['text':' Define access methods','line_number':450,'multiline':False]['text':'*
         * @return {string}
         ','line_number':455,'multiline':True]['text':'*
     * Wraps a write concern error
     ','line_number':475,'multiline':True]['text':' Define properties','line_number':485,'multiline':False]['text':'*
         * @return {string}
         ','line_number':490,'multiline':True]['text':'*
     * Keeps the state of an unordered batch so we can rewrite the results
     * correctly after command execution
     ','line_number':510,'multiline':True]['text':'**********************************************************
     * Wraps the operations done for the batch
     **********************************************************','line_number':520,'multiline':True]['text':' Set max byte size','line_number':528,'multiline':False]['text':' Final results','line_number':536,'multiline':False]['text':' Current batch','line_number':539,'multiline':False]['text':' Convert bulk into string','line_number':571,'multiline':False]['text':' Save the batch to the execution stack','line_number':590,'multiline':False]['text':' Create a new batch','line_number':593,'multiline':False]['text':' Reset the current size trackers','line_number':596,'multiline':False]['text':' Add to internal list of documents','line_number':601,'multiline':False]['text':' Get the bsonSize','line_number':606,'multiline':False]['text':' If an _id will be added to the insert, adjust the bsonSize','line_number':609,'multiline':False]['text':' Create a new batch object if we don't have a current one','line_number':614,'multiline':False]['text':' Finalize and create a new batch if this op would take us over the','line_number':618,'multiline':False]['text':' limits *or* if this op is of a different type','line_number':619,'multiline':False]['text':' Update current batch size','line_number':628,'multiline':False]['text':'*
         *
         * @param obj {Object} the document to check if an _id is present
         * @returns true if the document needs an _id and false otherwise
         ','line_number':633,'multiline':True]['text':'*
         * @return {Object} a new document with an _id: ObjectId if _id is not present.
         *     Otherwise, returns the same object passed.
         ','line_number':642,'multiline':True]['text':' don't want to modify input','line_number':648,'multiline':False]['text':'*
         * Add the insert document.
         *
         * @param document {Object} the document to insert.
         ','line_number':658,'multiline':True]['text':'','line_number':667,'multiline':False]['text':' Find based operations','line_number':668,'multiline':False]['text':' Set the top value for the update 0 = multi true, 1 = multi false','line_number':671,'multiline':False]['text':' Establish the update command','line_number':673,'multiline':False]['text':' Copy over the hint, if we have one.','line_number':677,'multiline':False]['text':' Copy over the collation, if we have one.','line_number':682,'multiline':False]['text':' Copy over the arrayFilters, if we have them.','line_number':687,'multiline':False]['text':' Clear out current Op','line_number':692,'multiline':False]['text':' Add the update document to the list','line_number':694,'multiline':False]['text':' Set the top value for the update 0 = multi true, 1 = multi false','line_number':699,'multiline':False]['text':' Establish the update command','line_number':701,'multiline':False]['text':' Copy over the hint, if we have one.','line_number':705,'multiline':False]['text':' Copy over the collation, if we have one.','line_number':710,'multiline':False]['text':' Copy over the arrayFilters, if we have them.','line_number':715,'multiline':False]['text':' Clear out current Op','line_number':720,'multiline':False]['text':' Add the update document to the list','line_number':722,'multiline':False]['text':' Cannot use pipeline-style updates in a replacement operation.','line_number':727,'multiline':False]['text':' Return the findOperations','line_number':736,'multiline':False]['text':' Establish the removeOne command','line_number':746,'multiline':False]['text':' Copy over the collation, if we have one.','line_number':749,'multiline':False]['text':' Clear out current Op','line_number':754,'multiline':False]['text':' Add the remove document to the list','line_number':756,'multiline':False]['text':' Establish the remove command','line_number':761,'multiline':False]['text':' Copy over the collation, if we have one.','line_number':764,'multiline':False]['text':' Clear out current Op','line_number':769,'multiline':False]['text':' Add the remove document to the list','line_number':771,'multiline':False]['text':'','line_number':786,'multiline':False]['text':' Start of update and remove operations','line_number':787,'multiline':False]['text':' Save a current selector','line_number':791,'multiline':False]['text':' Return the find Operations','line_number':794,'multiline':False]['text':'','line_number':802,'multiline':False]['text':' Merge write command result into aggregated results object','line_number':803,'multiline':False]['text':' If we have an insert Batch type','line_number':805,'multiline':False]['text':' If we have a remove batch type','line_number':810,'multiline':False]['text':' We have an array of upserted values, we need to rewrite the indexes','line_number':817,'multiline':False]['text':' If we have an update Batch type','line_number':833,'multiline':False]['text':'','line_number':866,'multiline':False]['text':' Constructs the write batch command.','line_number':867,'multiline':False]['text':' Generate the right update','line_number':871,'multiline':False]['text':' If we have a write concern','line_number':886,'multiline':False]['text':' If we have let parameters, add them to the command.','line_number':891,'multiline':False]['text':'','line_number':912,'multiline':False]['text':' Execute the batch','line_number':913,'multiline':False]['text':' Run the command (may throw)','line_number':918,'multiline':False]['text':' Merge the results','line_number':925,'multiline':False]['text':' Execute the batch','line_number':929,'multiline':False]['text':' If writeConcern set, use it, else get from collection (which will inherit from','line_number':934,'multiline':False]['text':' db/mongo)','line_number':935,'multiline':False]['text':' If we have current batch','line_number':940,'multiline':False]['text':' Total number of batches to execute','line_number':944,'multiline':False]['text':' Execute all the batches','line_number':947,'multiline':False]['text':' Execute the batch','line_number':949,'multiline':False]['text':' If we are ordered and have errors and they are','line_number':952,'multiline':False]['text':' not all replication errors terminate the operation','line_number':953,'multiline':False]['text':' Ordered batches can't enforce full-batch write concern if they fail - they','line_number':955,'multiline':False]['text':' fail-fast','line_number':956,'multiline':False]['text':' Set as executed','line_number':962,'multiline':False]['text':' Create final result object','line_number':965,'multiline':False]['text':' Throw on error','line_number':968,'multiline':False]['text':' Generate an explain command for the bulk operation. Currently we only support single','line_number':976,'multiline':False]['text':' batches','line_number':977,'multiline':False]['text':' of size 1, which must be either delete or update.','line_number':978,'multiline':False]['text':' If we have current batch','line_number':980,'multiline':False]['text':' We can only explain singleton batches.','line_number':985,'multiline':False]['text':'','line_number':996,'multiline':False]['text':' Exports','line_number':997,'multiline':False]['text':'','line_number':998,'multiline':False]['text':' Globals','line_number':1017,'multiline':False]['text':' eslint-disable-line','line_number':1019,'multiline':False]['text':' eslint-disable-line','line_number':1020,'multiline':False]['text':'**********************************************************
 * Adds the initializers of bulk operations to the db collection
 **********************************************************','line_number':1025,'multiline':True]