['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'* Reads log lines from programs and optionally log them. All public members are thread safe, so
 *  a single instance can be used to record logs of many concurrently-running programs.
 ','line_number':50,'multiline':True]['text':'*
 * A registry of spawned programs that are identified by a bound port or else a system pid.
 * All public member functions are thread safe. It also owns the global ProgramOutputMultiplexer.
 ','line_number':66,'multiline':True]['text':'* Create a ProgramRunner instance and return a handle to it. ','line_number':78,'multiline':True]['text':'* @return pid for a registered port. ','line_number':82,'multiline':True]['text':'* @return port (-1 if doesn't exist) for a registered pid. ','line_number':84,'multiline':True]['text':'* Register an unregistered program. ','line_number':86,'multiline':True]['text':'* Registers the reader thread for the PID. Must be called before `joinReaderThread`. ','line_number':88,'multiline':True]['text':'* Closes the registered program's write pipe and waits for all of the written output to be
     * consumed by the reader thread, then removes the program from the registry ','line_number':90,'multiline':True]['text':'* platform-agnostic wrapper around waitpid that automatically cleans up
     * the program registry
     * @param pid the processid
     * @param block if true, block the thread until the child has exited
     * @param exit_code[out] if set, and an exit code is available, the code will be stored here
     * @return true if the process has exited, false otherwise ','line_number':95,'multiline':True]['text':'* check if a child process is alive. Never blocks
     * @param pid the processid
     * @param exit_code[out] if set, and an exit code is available, the code will be stored here
     * @return true if the process has exited, false otherwise ','line_number':102,'multiline':True]['text':'* Will uassert with ErrorCodes::BadValue if the pid is unregistered. ','line_number':129,'multiline':True]['text':'* Helper class for launching a program and logging its output. ','line_number':137,'multiline':True]['text':'* Launch the program. ','line_number':140,'multiline':True]['text':'* Reads the program's output into the provided instance of ProgramOutputMultiplexer.
     *  Note that the passed-in multiplexer will typically be the global programOutputLogger so that
     *  all programs' outputs can be logged concurrently. If the multiplexer should not
     *  log this program's output to standard output, then set shouldLogOutput to false.
     ','line_number':143,'multiline':True]['text':'* @param args The program's arguments, including the program name.
     *  @param env Environment to run the program with, which will override any set by the local
     *             environment
     * @param isMongo Indicator variable, true if runs as a mongo process.
     ','line_number':160,'multiline':True]['text':' namespace mongo::shell_utils','line_number':188,'multiline':False]