['text':' @file collection.js - DBCollection support in the mongo shell','line_number':1,'multiline':False]['text':' db.colName is a DBCollection object','line_number':2,'multiline':False]['text':' or db["colName"]','line_number':3,'multiline':False]['text':' print("\tdb." + shortName + ".diskStorageStats({[extent: <num>,] [granularity: <bytes>,]','line_number':127,'multiline':False]['text':' ...}) - analyze record layout on disk");','line_number':128,'multiline':False]['text':' print("\tdb." + shortName + ".pagesInRAM({[extent: <num>,] [granularity: <bytes>,] ...}) -','line_number':129,'multiline':False]['text':' analyze resident memory pages");','line_number':130,'multiline':False]['text':' Like _dbCommand, but applies $readPreference','line_number':190,'multiline':False]['text':' If the string is 24 hex characters, it is most likely an ObjectId.','line_number':218,'multiline':False]['text':' Verify that API version parameters are not supplied via the shell helper.','line_number':230,'multiline':False]['text':' limit ','line_number':264,'multiline':True]['text':' skip','line_number':264,'multiline':True]['text':' batchSize ','line_number':264,'multiline':True]['text':' Returns a WriteResult for a single insert or a BulkWriteResult for a multi-insert if write','line_number':284,'multiline':False]['text':' command succeeded, but may contain write errors.','line_number':285,'multiline':False]['text':' Returns a WriteCommandError if the write command responded with ok:0.','line_number':286,'multiline':False]['text':' do nothing','line_number':297,'multiline':False]['text':' do nothing, like above','line_number':300,'multiline':False]['text':' 1 = continueOnError, which is synonymous with unordered in the write commands/bulk-api','line_number':311,'multiline':False]['text':' Bit 1 of option flag is continueOnError. Bit 0 (stop on error) is the default.','line_number':319,'multiline':False]['text':' Other exceptions rethrown as-is.','line_number':341,'multiline':False]['text':'*
 * Does validation of the remove args. Throws if the parse is not successful, otherwise
 * returns a document {query: <query>, justOne: <limit>, wc: <writeConcern>}.
 ','line_number':348,'multiline':True]['text':' Normalize "justOne" to a bool.','line_number':370,'multiline':False]['text':' Handle write concern.','line_number':373,'multiline':False]['text':' Returns a WriteResult if write command succeeded, but may contain write errors.','line_number':381,'multiline':False]['text':' Returns a WriteCommandError if the write command responded with ok:0.','line_number':382,'multiline':False]['text':' Other exceptions thrown','line_number':417,'multiline':False]['text':'*
 * Does validation of the update args. Throws if the parse is not successful, otherwise returns a
 * document containing fields for query, updateSpec, upsert, multi, wc, collation, and arrayFilters.
 *
 * Throws if the arguments are invalid.
 ','line_number':424,'multiline':True]['text':' can pass options via object for improved readability','line_number':442,'multiline':False]['text':' Normalize 'upsert' and 'multi' to booleans.','line_number':459,'multiline':False]['text':' Returns a WriteResult if write command succeeded, but may contain write errors.','line_number':480,'multiline':False]['text':' Returns a WriteCommandError if the write command responded with ok:0.','line_number':481,'multiline':False]['text':' Other exceptions thrown','line_number':532,'multiline':False]['text':' ns is passed to the first element in the command.','line_number':631,'multiline':False]['text':' old-style format just put everything in a string. Now using proper fields','line_number':730,'multiline':False]['text':' For compatibility, return []','line_number':760,'multiline':False]['text':'*
 * Drop a specified index.
 *
 * "index" is the name or key pattern of the index. For example:
 *    db.collectionName.dropIndex( "myIndexName" );
 *    db.collectionName.dropIndex( { "indexKey" : 1 } );
 *
 * @param {String} name or key object of index to delete.
 * @return A result object.  result.ok will be true if successful.
 ','line_number':788,'multiline':True]['text':' Need an extra check for array because 'Array' is an 'object', but not every 'object' is an','line_number':801,'multiline':False]['text':' 'Array'.','line_number':802,'multiline':False]['text':'*
 * Hide an index from the query planner.
 ','line_number':817,'multiline':True]['text':' Need an extra check for array because 'Array' is an 'object', but not every 'object' is an','line_number':823,'multiline':False]['text':' 'Array'.','line_number':824,'multiline':False]['text':'*
 * scale: The scale at which to deliver results. Unless specified, this command returns all data
 *        in bytes.
 * indexDetails: Includes indexDetails field in results. Default: false.
 * indexDetailsKey: If indexDetails is true, filter contents in indexDetails by this index key.
 * indexDetailsname: If indexDetails is true, filter contents in indexDetails by this index name.
 *
 * It is an error to provide both indexDetailsKey and indexDetailsName.
 ','line_number':850,'multiline':True]['text':' For backwards compatibility with db.collection.stats(scale).','line_number':862,'multiline':False]['text':' collStats can run on a secondary, so we need to apply readPreference','line_number':870,'multiline':False]['text':'','line_number':967,'multiline':False]['text':' CRUD specification aggregation cursor extension','line_number':968,'multiline':False]['text':'','line_number':969,'multiline':False]['text':' Support legacy varargs form. Also handles db.foo.aggregate().','line_number':972,'multiline':False]['text':'*
 * @param optional object of optional fields;
 ','line_number':992,'multiline':True]['text':' if inline output is specified, we need to apply readPreference on the command','line_number':1007,'multiline':False]['text':' as it could be run on a secondary','line_number':1008,'multiline':False]['text':' eslint-disable-line','line_number':1015,'multiline':False]['text':'*
 * Return true if the collection has been sharded.
 *
 * @method
 * @return {boolean}
 ','line_number':1044,'multiline':True]['text':' Checking for 'dropped: {$ne: true}' to ensure mongo shell compatibility with earlier versions','line_number':1051,'multiline':False]['text':' of the server','line_number':1052,'multiline':False]['text':'*
 * Prints statistics related to the collection's data distribution
 ','line_number':1057,'multiline':True]['text':' Extract and store only the relevant subset of the stats for this shard','line_number':1074,'multiline':False]['text':'

Generates split points for all chunks in the collection, based on the default maxChunkSize
> collection.getSplitKeysForChunks()

or alternately a specified chunk size in Mb.
> collection.getSplitKeysForChunks( 10 )

By default, the chunks are not split, the keys are just found. A splitter function is returned which
will actually do the splits.
> var splitter = collection.getSplitKeysForChunks()
> splitter()

','line_number':1125,'multiline':True]['text':' Get most recent migration','line_number':1196,'multiline':False]['text':' Turn off the balancer, just to be safe','line_number':1208,'multiline':False]['text':' inherit this method from DB but use apply so','line_number':1264,'multiline':False]['text':' that secondaryOk will be set if is overridden on this DBCollection','line_number':1265,'multiline':False]['text':'*
 * Returns a PlanCache for the collection.
 ','line_number':1269,'multiline':True]['text':' Overrides connection-level settings.','line_number':1276,'multiline':False]['text':'','line_number':1277,'multiline':False]['text':'','line_number':1301,'multiline':False]['text':' CRUD specification read methods','line_number':1302,'multiline':False]['text':'','line_number':1303,'multiline':False]['text':'*
 * Count number of matching documents in the db to a query.
 *
 * @method
 * @param {object} query The query for the count.
 * @param {object} [options=null] Optional settings.
 * @param {number} [options.limit=null] The limit of documents to count.
 * @param {number} [options.skip=null] The number of documents to skip for the count.
 * @param {string|object} [options.hint=null] An index name hint or specification for the query.
 * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.
 * @param {string} [options.readConcern=null] The level of readConcern passed to the count command
 * @param {object} [options.collation=null] The collation that should be used for string comparisons
 * for this count op.
 * @return {number}
 *
 ','line_number':1305,'multiline':True]['text':'*
 * Count number of matching documents in the db to a query using aggregation.
 *
 * @method
 * @param {object} query The query for the count.
 * @param {object} [options=null] Optional settings.
 * @param {number} [options.limit=null] The limit of documents to count.
 * @param {number} [options.skip=null] The number of documents to skip for the count.
 * @param {string|object} [options.hint=null] An index name hint or specification for the query.
 * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.
 * @param {object} [options.collation=null] The collation that should be used for string comparisons
 * for this count op.
 * @return {number}
 ','line_number':1334,'multiline':True]['text':' Construct an aggregation pipeline stage with sum to calculate the number of all documents.','line_number':1361,'multiline':False]['text':' countDocument options other than filter, skip, and limit, are added to the aggregate command.','line_number':1364,'multiline':False]['text':' Format cursor into an array.','line_number':1377,'multiline':False]['text':'*
 * Estimates the count of documents in a collection using collection metadata.
 *
 * @method
 * @param {object} [options=null] Optional settings.
 * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.
 * @return {number}
 ','line_number':1386,'multiline':True]['text':' Return the 'n' field, which should be the count of documents.','line_number':1410,'multiline':False]['text':'*
 * The distinct command returns returns a list of distinct values for the given key across a
 *collection.
 *
 * @method
 * @param {string} key Field of the document to find distinct values for.
 * @param {object} query The query for filtering the set of documents to which we apply the distinct
 *filter.
 * @param {object} [options=null] Optional settings.
 * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.
 * @return {object}
 ','line_number':1414,'multiline':True]['text':' Distinct command','line_number':1441,'multiline':False]['text':' Set maxTimeMS if provided','line_number':1444,'multiline':False]['text':' Execute distinct command','line_number':1457,'multiline':False]['text':'*
 * PlanCache
 * Holds a reference to the collection.
 * Proxy for planCache* commands.
 ','line_number':1491,'multiline':True]['text':'*
 * Name of PlanCache.
 * Same as collection.
 ','line_number':1502,'multiline':True]['text':'*
 * toString prints the name of the collection
 ','line_number':1510,'multiline':True]['text':'*
 * Displays help for a PlanCache object.
 ','line_number':1519,'multiline':True]['text':'*
 * Internal function to parse query shape.
 ','line_number':1537,'multiline':True]['text':' Accept query shape object as only argument.','line_number':1545,'multiline':False]['text':' Query shape must contain 'query', 'projection', and 'sort', and may optionally contain','line_number':1546,'multiline':False]['text':' 'collation'. 'collation' must be non-empty if present.','line_number':1547,'multiline':False]['text':' Expected keys must be sorted for the comparison to work.','line_number':1551,'multiline':False]['text':' Extract query shape, projection, sort and collation from DBQuery if it is the first','line_number':1563,'multiline':False]['text':' argument. If a sort or projection is provided in addition to DBQuery, do not','line_number':1564,'multiline':False]['text':' overwrite with the DBQuery value.','line_number':1565,'multiline':False]['text':' Overwrite DBQuery with the BSON query.','line_number':1581,'multiline':False]['text':'*
 * Internal function to run command.
 ','line_number':1598,'multiline':True]['text':'*
 * Clears plan cache in a collection.
 ','line_number':1609,'multiline':True]['text':'*
 * Drop query shape from the plan cache.
 ','line_number':1617,'multiline':True]['text':'*
 * Returns an array of plan cache data for the collection, after applying the given optional
 * aggregation pipeline.
 ','line_number':1626,'multiline':True]