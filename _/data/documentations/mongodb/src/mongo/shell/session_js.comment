['text':'*
 * Implements the sessions api for the shell.
 *
 * Roughly follows the driver sessions spec:
 * https://github.com/mongodb/specifications/blob/master/source/sessions/driver-sessions.rst#abstract
 ','line_number':1,'multiline':True]['text':' Intentional use of "==" comparing NumberInt, NumberLong, or plain Number.','line_number':26,'multiline':False]['text':' Causal consistency is implicitly enabled when a session is explicitly started.','line_number':44,'multiline':False]['text':' If the user specified --retryWrites to the mongo shell, then we enable retryable','line_number':48,'multiline':False]['text':' writes automatically.','line_number':49,'multiline':False]['text':' TODO: Update this allowlist, or convert it to a denylist depending on the outcome of','line_number':161,'multiline':False]['text':' SERVER-31743.','line_number':162,'multiline':False]['text':' Always attach the readConcern to the first statement of the transaction, whether it','line_number':174,'multiline':False]['text':' is a read or a write.','line_number':175,'multiline':False]['text':' `driverSession.getOperationTime()` is the smallest time needed for performing a','line_number':206,'multiline':False]['text':' causally consistent read using the current session. Note that','line_number':207,'multiline':False]['text':' `client.getClusterTime()` is no smaller than the operation time and would','line_number':208,'multiline':False]['text':' therefore only be less efficient to wait until.','line_number':209,'multiline':False]['text':' Explain read concerns are on the inner command.','line_number':218,'multiline':False]['text':' Transaction read concerns are handled later in assignTxnInfo().','line_number':225,'multiline':False]['text':' Always attach sessionId from explicit sessions.','line_number':244,'multiline':False]['text':' Check that implicit sessions are not disabled.','line_number':246,'multiline':False]['text':' The `clientClusterTime` is the highest clusterTime observed by any connection','line_number':254,'multiline':False]['text':' within this mongo shell.','line_number':255,'multiline':False]['text':' The `sessionClusterTime` is the highest clusterTime tracked by the','line_number':257,'multiline':False]['text':' `driverSession` session and may lag behind `clientClusterTime` if operations on','line_number':258,'multiline':False]['text':' other sessions or connections are advancing the clusterTime.','line_number':259,'multiline':False]['text':' We gossip the greater of the client's clusterTime and the session's clusterTime.','line_number':262,'multiline':False]['text':' If this is the first command being sent on this connection and/or session, then','line_number':263,'multiline':False]['text':' it's possible that either clusterTime hasn't been initialized yet. Additionally,','line_number':264,'multiline':False]['text':' if the user specified a malformed clusterTime as part of initialClusterTime, then','line_number':265,'multiline':False]['text':' we want the server to be the one to reject it and therefore write our comparisons','line_number':266,'multiline':False]['text':' using bsonWoCompare() accordingly.','line_number':267,'multiline':False]['text':' All commands go through transaction code, which will determine if the command is a','line_number':295,'multiline':False]['text':' part of the current transaction and will assign transaction info accordingly.','line_number':296,'multiline':False]['text':' Retryable writes code should execute only we are not in an active transaction.','line_number':299,'multiline':False]['text':'*
         * Returns true if the error code is retryable, assuming the command is idempotent.
         *
         * The Retryable Writes specification defines a RetryableError as any network error,
         * any of the following error codes, or an error response with a different code
         * containing the phrase "not master" or "node is recovering".
         *
         * https://github.com/mongodb/specifications/blob/5b53e0baca18ba111364d479a37fa9195ef801a6/
         * source/retryable-writes/retryable-writes.rst#terms
         ','line_number':311,'multiline':True]['text':' TODO SERVER-33921: Revisit how the mongo shell decides whether it should','line_number':330,'multiline':False]['text':' retry a command or not.','line_number':331,'multiline':False]['text':' We run a "hello" command explicitly to force the underlying','line_number':354,'multiline':False]['text':' DBClient to reconnect to the server.','line_number':355,'multiline':False]['text':' It's possible that the server we're connected with after','line_number':361,'multiline':False]['text':' re-establishing our connection doesn't support retryable writes. If','line_number':362,'multiline':False]['text':' that happens, then we just return the original network error back to','line_number':363,'multiline':False]['text':' the user.','line_number':364,'multiline':False]['text':' Handle ErrorCodes.Reauthentication first.','line_number':375,'multiline':False]['text':' Could not automatically reauthenticate, return the error response','line_number':385,'multiline':False]['text':' as-is.','line_number':386,'multiline':False]['text':' If any of the write operations in the batch fails with a','line_number':419,'multiline':False]['text':' retryable error, then we retry the entire batch.','line_number':420,'multiline':False]['text':' The server session maintains the state of a transaction, a monotonically increasing txn','line_number':498,'multiline':False]['text':' number, and a transaction's read/write concerns.','line_number':499,'multiline':False]['text':' Keep track of the next available statement id of a transaction.','line_number':503,'multiline':False]['text':' We consider the session to still be in use by the client any time the session id','line_number':559,'multiline':False]['text':' is injected into the command object as part of making a request.','line_number':560,'multiline':False]['text':' We will want to reset the transaction state to 'inactive' if a normal operation','line_number':581,'multiline':False]['text':' follows a committed or aborted transaction.','line_number':582,'multiline':False]['text':' If we're not in an active transaction or performing a retry on commitTransaction,','line_number':588,'multiline':False]['text':' return early.','line_number':589,'multiline':False]['text':' If we reconnect to a 3.6 server in the middle of a transaction, we','line_number':594,'multiline':False]['text':' catch it here.','line_number':595,'multiline':False]['text':' All operations of a multi-statement transaction must specify autocommit=false.','line_number':609,'multiline':False]['text':' Statement Id is required on all transaction operations.','line_number':612,'multiline':False]['text':' 'readConcern' and 'startTransaction' can only be specified on the first statement','line_number':615,'multiline':False]['text':' in a transaction.','line_number':616,'multiline':False]['text':' Override the readConcern with the one specified during startTransaction.','line_number':620,'multiline':False]['text':' Reserve the statement ids for batch writes.','line_number':626,'multiline':False]['text':' If the session is already in a transaction, raise an error. If ignoreActiveTxn','line_number':645,'multiline':False]['text':' is true, don't raise an error. This is to allow multiple threads to try to','line_number':646,'multiline':False]['text':' use the same session in a concurrency workload.','line_number':647,'multiline':False]['text':' If the transaction state is already 'aborted' we cannot try to commit it.','line_number':662,'multiline':False]['text':' If the session has no active transaction, raise an error.','line_number':666,'multiline':False]['text':' run commitTxn command','line_number':670,'multiline':False]['text':' If the transaction state is already 'aborted' we cannot try to abort it again.','line_number':675,'multiline':False]['text':' We cannot attempt to abort a transaction that has already been committed.','line_number':679,'multiline':False]['text':' If the session has no active transaction, raise an error.','line_number':683,'multiline':False]['text':' run abortTxn command','line_number':687,'multiline':False]['text':' If a writeConcern is not specified from the default transaction options, it will be','line_number':692,'multiline':False]['text':' inherited from the session.','line_number':693,'multiline':False]['text':' If commitTransaction or abortTransaction is the first statement in a','line_number':706,'multiline':False]['text':' transaction, it should not send a command to the server and should mark the','line_number':707,'multiline':False]['text':' transaction as 'committed' or 'aborted' accordingly.','line_number':708,'multiline':False]['text':' writeConcern should only be specified on commit or abort.','line_number':719,'multiline':False]['text':' If commit or abort raises an error, the transaction's state should still change.','line_number':725,'multiline':False]['text':' run command against the admin database.','line_number':728,'multiline':False]['text':' The command object is malformed, so we'll just leave it as-is and let the server','line_number':759,'multiline':False]['text':' reject it.','line_number':760,'multiline':False]['text':' Both single-statement operations (e.g. insertOne()) and multi-statement operations','line_number':764,'multiline':False]['text':' (e.g. insertMany()) can be retried regardless of whether they are executed in order','line_number':765,'multiline':False]['text':' by the server.','line_number':766,'multiline':False]['text':' The command object is malformed, so we'll just leave it as-is and let the server','line_number':770,'multiline':False]['text':' reject it.','line_number':771,'multiline':False]['text':' Operations that modify multiple documents (e.g. updateMany()) cannot be retried.','line_number':777,'multiline':False]['text':' Both single-statement operations (e.g. updateOne()) and multi-statement operations','line_number':781,'multiline':False]['text':' (e.g. bulkWrite()) can be retried regardless of whether they are executed in order by','line_number':782,'multiline':False]['text':' the server.','line_number':783,'multiline':False]['text':' The command object is malformed, so we'll just leave it as-is and let the server','line_number':787,'multiline':False]['text':' reject it.','line_number':788,'multiline':False]['text':' We use bsonWoCompare() in order to handle cases where the limit is specified as a','line_number':792,'multiline':False]['text':' NumberInt() or NumberLong() instance.','line_number':793,'multiline':False]['text':' Operations that modify multiple documents (e.g. deleteMany()) cannot be retried.','line_number':797,'multiline':False]['text':' Both single-statement operations (e.g. deleteOne()) and multi-statement operations','line_number':801,'multiline':False]['text':' (e.g. bulkWrite()) can be retried regardless of whether they are executed in order by','line_number':802,'multiline':False]['text':' the server.','line_number':803,'multiline':False]['text':' Operations that modify a single document (e.g. findOneAndUpdate()) can be retried.','line_number':806,'multiline':False]['text':' Intentionally ignore command result.','line_number':944,'multiline':False]['text':' Having a specific Error for when logical sessions aren't supported by the server, allows','line_number':961,'multiline':False]['text':' the correct fallback behavior in this case (while propagating other errors).','line_number':962,'multiline':False]['text':' If the property is defined on the DelegatingDriverSession instance itself, then','line_number':1004,'multiline':False]['text':' return it. Otherwise, get the value of the property from the `originalSession`','line_number':1005,'multiline':False]['text':' instance.','line_number':1006,'multiline':False]['text':' The default session on the Mongo connection object should report that causal consistency','line_number':1015,'multiline':False]['text':' isn't enabled when interrogating the SessionOptions since it must be enabled on the Mongo','line_number':1016,'multiline':False]['text':' connection object.','line_number':1017,'multiline':False]['text':'','line_number':1018,'multiline':False]['text':' The default session on the Mongo connection object should also report that retryable','line_number':1019,'multiline':False]['text':' writes isn't enabled when interrogating the SessionOptions since `DummyDriverSession` won't','line_number':1020,'multiline':False]['text':' ever assign a transaction number.','line_number':1021,'multiline':False]['text':' Force clang-format to break this line.','line_number':1023,'multiline':False]['text':' We don't actually put anything on DriverSession.prototype, but this way','line_number':1076,'multiline':False]['text':' `session instanceof DriverSession` will work for DummyDriverSession instances.','line_number':1077,'multiline':False]