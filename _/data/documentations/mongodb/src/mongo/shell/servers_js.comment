['text':' Record the exit codes of mongod and mongos processes that crashed during startup keyed by','line_number':11,'multiline':False]['text':' port. This map is cleared when MongoRunner._startWithArgs and MongoRunner.stopMongod/s are','line_number':12,'multiline':False]['text':' called.','line_number':13,'multiline':False]['text':' A path.join-like thing for paths that must work','line_number':75,'multiline':False]['text':' on Windows (\-separated) and *nix (/-separated).','line_number':76,'multiline':False]['text':' Hang Analyzer integration.','line_number':118,'multiline':False]['text':' Internal state to determine if the hang analyzer should be enabled or not.','line_number':129,'multiline':False]['text':' Accessible via global setter/getter defined below.','line_number':130,'multiline':False]['text':'*
 * Run `./buildscripts/resmoke.py hang-analyzer`.
 *
 * @param {Number[]} pids
 *     optional pids of processes to pass to the hang analyzer.
 *     If not specified will use `TestData.peerPids` (pids of
 *     "fixture" processes started and passed in by resmoke)
 *     plus `MongoRunner.runningChildPids()` which includes all
 *     child processes started by `MongoRunner.runMongo*()` etc.
 ','line_number':133,'multiline':True]['text':' Result of runningChildPids may be NumberLong(), so','line_number':166,'multiline':False]['text':' add 0 to convert to Number.','line_number':167,'multiline':False]['text':' We are using a raw "python" rather than selecting the approperate python here','line_number':172,'multiline':False]['text':' This is because as part of SERVER-79663 we noticed that servers.js is included in the legacy','line_number':173,'multiline':False]['text':' shell','line_number':174,'multiline':False]['text':' See hang-analyzer argument options here:','line_number':175,'multiline':False]['text':' https://github.com/10gen/mongo/blob/8636ede10bd70b32ff4b6cd115132ab0f22b89c7/buildscripts/resmokelib/hang_analyzer/hang_analyzer.py#L245','line_number':176,'multiline':False]['text':'*
 * Returns an array of version elements from a version string.
 *
 * "3.3.4-fade3783" -> ["3", "3", "4-fade3783" ]
 * "3.2" -> [ "3", "2" ]
 * 3 -> exception: versions must have at least two components.
 ','line_number':209,'multiline':True]['text':'*
 * Returns an integer
 ','line_number':227,'multiline':True]['text':'*
 * Returns the major version string from a version string.
 *
 * 3.3.4-fade3783 -> 3.3
 * 3.2 -> 3.2
 * 3 -> exception: versions must have at least two components.
 ','line_number':235,'multiline':True]['text':' These patterns allow substituting the binary versions used for each version string to support','line_number':246,'multiline':False]['text':' the dev/stable MongoDB release cycle.','line_number':247,'multiline':False]['text':' See if this version is affected by version substitutions','line_number':267,'multiline':False]['text':'*
 * Returns true if two version strings could represent the same version. This is true
 * if, after passing the versions through getBinVersionFor, the versions have the
 * same value for each version component up through the length of the shorter version.
 *
 * That is, 3.2.4 compares equal to 3.2, but 3.2.4 does not compare equal to 3.2.3.
 ','line_number':278,'multiline':True]['text':' Check for invalid version strings first.','line_number':286,'multiline':False]['text':' compareBinVersions() throws an error if two versions differ only by the git hash.','line_number':292,'multiline':False]['text':'*
 * Compares two version strings and returns:
 *      1, if the first is more recent
 *      0, if they are equal
 *     -1, if the first is older
 *
 * Note that this function only compares up to the length of the shorter version.
 * Because of this, minor versions will compare equal to the major versions they stem
 * from, but major-major and minor-minor version pairs will undergo strict comparison.
 ','line_number':297,'multiline':True]['text':' Treat the githash as a separate element, if it's present.','line_number':314,'multiline':False]['text':' Replace all $pathOptions with actual values','line_number':374,'multiline':False]['text':' Relative path','line_number':382,'multiline':False]['text':' Detect Unix and Windows absolute paths','line_number':383,'multiline':False]['text':' as well as Windows drive letters','line_number':384,'multiline':False]['text':' Also captures Windows UNC paths','line_number':385,'multiline':False]['text':'*
 * Returns an iterator object which yields successive versions on calls to advance(), starting
 * from a random initial position, from an array of versions.
 *
 * If passed a single version string or an already-existing version iterator, just returns the
 * object itself, since it will yield correctly on calls to advance().
 *
 * @param {Array.<String>}|{String}|{versionIterator}
 ','line_number':408,'multiline':True]['text':' If this isn't an array of versions, or is already an iterator, just use it','line_number':418,'multiline':False]['text':' Starting pos','line_number':427,'multiline':False]['text':' We define the toString() method as an alias for current() so that concatenating a version','line_number':442,'multiline':False]['text':' iterator with a string returns the next version in the list without introducing any','line_number':443,'multiline':False]['text':' side-effects.','line_number':444,'multiline':False]['text':'*
 * Converts the args object by pairing all keys with their value and appending
 * dash-dash (--) to the keys. The only exception to this rule are keys that
 * are defined in MongoRunner.logicalOptions, of which they will be ignored.
 *
 * @param {string} binaryName
 * @param {Object} args
 *
 * @return {Array.<String>} an array of parameter strings that can be passed
 *   to the binary.
 ','line_number':454,'multiline':True]['text':' isObject returns true even if "args" is an array, so the else branch of this statement is','line_number':468,'multiline':False]['text':' dead code.  See SERVER-14220.','line_number':469,'multiline':False]['text':' If we've specified a particular binary version, use that','line_number':473,'multiline':False]['text':' Manage legacy options','line_number':480,'multiline':False]['text':' Make sure our logical option should be added to the array of options','line_number':500,'multiline':False]['text':' If the value associated with the setParameter option is an object, we want','line_number':516,'multiline':False]['text':' to add all key-value pairs in that object as separate --setParameters.','line_number':517,'multiline':False]['text':' Don't remember waitForConnect','line_number':559,'multiline':False]['text':' If we're a mongo object','line_number':563,'multiline':False]['text':' Initialize and create a copy of the opts','line_number':568,'multiline':False]['text':' RunId can come from a number of places','line_number':574,'multiline':False]['text':' If restart is passed as an old connection','line_number':575,'multiline':False]['text':' If it's the runId itself','line_number':580,'multiline':False]['text':' Remember by default if we're restarting','line_number':590,'multiline':False]['text':' If we passed in restart : <conn> or runId : <conn>','line_number':594,'multiline':False]['text':' Create a new runId','line_number':602,'multiline':False]['text':' Normalize and get the binary version to use','line_number':609,'multiline':False]['text':' Advance the version iterator so that subsequent calls to','line_number':612,'multiline':False]['text':' MongoRunner.mongoOptions() use the next version in the list.','line_number':613,'multiline':False]['text':' Default for waitForConnect is true','line_number':621,'multiline':False]['text':' If gRPC is enabled and we have a TLS configuration, allocate an explicit port for gRPC.','line_number':627,'multiline':False]['text':' We don't want to persist 'waitForConnect' across node restarts.','line_number':642,'multiline':False]['text':' Returns an array of integers representing the version provided.','line_number':657,'multiline':False]['text':' Ex: "3.3.12" => [3, 3, 12]','line_number':658,'multiline':False]['text':' Returns if version2 is equal to, or came after, version 1.','line_number':668,'multiline':False]['text':' Removes a setParameter parameter from mongods or mongoses running a version that won't recognize','line_number':686,'multiline':False]['text':' them.','line_number':687,'multiline':False]['text':'*
 * @option {object} opts
 *
 *   {
 *     dbpath {string}
 *     useLogFiles {boolean}: use with logFile option.
 *     logFile {string}: path to the log file. If not specified and useLogFiles
 *       is true, automatically creates a log file inside dbpath.
 *     keyFile
 *     replSet
 *     oplogSize
 *   }
 ','line_number':701,'multiline':True]['text':' TODO (SERVER-74847): Remove this transition once we remove testing around','line_number':736,'multiline':False]['text':' downgrading from latest to last continuous.','line_number':737,'multiline':False]['text':' opts.enableEncryption, if set, must be an empty string','line_number':779,'multiline':False]['text':' opts.encryptionCipherMode, if set, must be a string','line_number':794,'multiline':False]['text':' opts.encryptionKeyFile, if set, must be a string','line_number':805,'multiline':False]['text':' opts.auditDestination, if set, must be a string','line_number':817,'multiline':False]['text':' We need to reformat the auditPath to include the proper port','line_number':829,'multiline':False]['text':' Normalize configdb option to be host string if currently a host','line_number':852,'multiline':False]['text':' opts.auditDestination, if set, must be a string','line_number':884,'multiline':False]['text':' We need to reformat the auditPath to include the proper port','line_number':900,'multiline':False]['text':' Normalize configdb option to be host string if currently a host','line_number':916,'multiline':False]['text':' opts.auditDestination, if set, must be a string','line_number':948,'multiline':False]['text':' We need to reformat the auditPath to include the proper port','line_number':964,'multiline':False]['text':'*
 * @return {NumberLong[]} Running pids e.g. those started by `MongoRunner.runMongod`.
 ','line_number':970,'multiline':True]['text':'*
 * Starts a mongod instance.
 *
 * @param {Object} opts
 *
 *   {
 *     useHostName {boolean}: Uses hostname of machine if true.
 *     forceLock {boolean}: Deletes the lock file if set to true.
 *     dbpath {string}: location of db files.
 *     cleanData {boolean}: Removes all files in dbpath if true.
 *     startClean {boolean}: same as cleanData.
 *     noCleanData {boolean}: Do not clean files (cleanData takes priority).
 *     binVersion {string}: version for binary (also see MongoRunner.binVersionSubs).
 *
 *     @see MongoRunner.mongodOptions for other options
 *   }
 *
 * @return {Mongo} connection object to the started mongod instance.
 *
 * @see MongoRunner.arrOptions
 ','line_number':977,'multiline':True]['text':' Default to true','line_number':1015,'multiline':False]['text':' `toRealDir` assumes the patterned directory should be under','line_number':1033,'multiline':False]['text':' `MongoRunner.dataPath`. In this case, preserve the user input as is.','line_number':1034,'multiline':False]['text':' Constants for exit codes of MongoDB processes','line_number':1145,'multiline':False]['text':' On Windows, std::abort causes the process to exit with return code 14.','line_number':1146,'multiline':False]['text':' SIGKILL is translated to TerminateProcess() on Windows, which causes the program to','line_number':1153,'multiline':False]['text':' terminate with exit code 1.','line_number':1154,'multiline':False]['text':' OpTime clock skew; deprecated','line_number':1163,'multiline':False]['text':' top level exception that wasn't caught','line_number':1168,'multiline':False]['text':'*
 * Kills a mongod process.
 *
 * @param {Mongo} conn the connection object to the process to kill
 * @param {number} signal The signal number to use for killing
 * @param {Object} opts Additional options. Format:
 *    {
 *      auth: {
 *        user {string}: admin user name
 *        pwd {string}: admin password
 *      },
 *      skipValidation: <bool>,
 *      skipValidatingExitCode: <bool>,
 *      allowedExitCode: <int>
 *    }
 * @param {boolean} waitpid should we wait for the process to terminate after stopping it.
 *
 * Note: The auth option is required in a authenticated mongod running in Windows since
 *  it uses the shutdown command, which requires admin credentials.
 ','line_number':1174,'multiline':True]['text':' If we are executing an unclean shutdown, we want to avoid checking collection counts during','line_number':1209,'multiline':False]['text':' validation, since the counts may be inaccurate.','line_number':1210,'multiline':False]['text':' If the return code is in the serverExitCodeMap, it means the server crashed on startup.','line_number':1223,'multiline':False]['text':' We just use the recorded return code instead of stopping the program.','line_number':1224,'multiline':False]['text':' Invoke callback to validate collections and indexes before shutting down mongod.','line_number':1230,'multiline':False]['text':' We skip calling the callback function when the expected return code of','line_number':1231,'multiline':False]['text':' the mongod process is non-zero since it's likely the process has already exited.','line_number':1232,'multiline':False]['text':' If we are not waiting for shutdown, then there is no exit code to check.','line_number':1246,'multiline':False]['text':' Given a test name figures out a directory for that test to use for dump files and makes sure','line_number':1268,'multiline':False]['text':' that directory exists and is empty.','line_number':1269,'multiline':False]['text':' Start a mongod instance and return a 'Mongo' object connected to it.','line_number':1276,'multiline':False]['text':' This function's arguments are passed as command line arguments to mongod.','line_number':1277,'multiline':False]['text':' The specified 'dbpath' is cleared if it exists, created if not.','line_number':1278,'multiline':False]['text':' var conn = _startMongodEmpty("--port", 30000, "--dbpath", "asdf");','line_number':1279,'multiline':False]['text':'*
 * Returns a new argArray with any test-specific arguments added.
 ','line_number':1294,'multiline':True]['text':' programName includes the version, e.g., mongod-3.2.','line_number':1313,'multiline':False]['text':' baseProgramName is the program name without any version information, e.g., mongod.','line_number':1314,'multiline':False]['text':' Setting programMajorMinorVersion to the maximum value for the latest binary version','line_number':1324,'multiline':False]['text':' simplifies version checks below.','line_number':1325,'multiline':False]['text':' New options in 3.5.x','line_number':1357,'multiline':False]['text':' Disable background cache refreshing to avoid races in tests','line_number':1359,'multiline':False]['text':' Since options may not be backward compatible, mongos options are not','line_number':1365,'multiline':False]['text':' set on older versions, e.g., mongos-3.0.','line_number':1366,'multiline':False]['text':' apply setParameters for mongos','line_number':1368,'multiline':False]['text':' Set storageEngine for mongod. There was no storageEngine parameter before 3.0.','line_number':1392,'multiline':False]['text':' The 'logComponentVerbosity' parameter must be passed in on the last continuous','line_number':1411,'multiline':False]['text':' version and last LTS version as well.','line_number':1412,'multiline':False]['text':' New mongod-specific option in 4.9.x.','line_number':1437,'multiline':False]['text':' New mongod-specific option in 4.5.x.','line_number':1449,'multiline':False]['text':' Allow the parameter to be overridden if set explicitly via TestData.','line_number':1451,'multiline':False]['text':' New mongod-specific option in 4.4.','line_number':1465,'multiline':False]['text':' New mongod-specific option in 4.5.','line_number':1478,'multiline':False]['text':' Allow the parameter to be overridden if set explicitly via TestData.','line_number':1480,'multiline':False]['text':' New mongod-specific options in 4.0.x','line_number':1492,'multiline':False]['text':' Reduce the default value for `orphanCleanupDelaySecs` to 1 sec to speed up jstests.','line_number':1503,'multiline':False]['text':' Increase the default value for `receiveChunkWaitForRangeDeleterTimeoutMS` to 90','line_number':1508,'multiline':False]['text':' seconds to prevent failures due to occasional slow range deletions','line_number':1509,'multiline':False]['text':' Since options may not be backward compatible, mongod options are not','line_number':1523,'multiline':False]['text':' set on older versions, e.g., mongod-3.0.','line_number':1524,'multiline':False]['text':' apply setParameters for mongod. The 'setParameters' field should be given as','line_number':1561,'multiline':False]['text':' a plain JavaScript object, where each key is a parameter name and the value','line_number':1562,'multiline':False]['text':' is the value to set for that parameter.','line_number':1563,'multiline':False]['text':'*
 * Continuously tries to establish a connection to the server on the specified port.
 *
 * If a connection cannot be established within a time limit, or if the process terminated
 * with a non-zero exit code, an exception will be thrown. If the process for the given
 * 'pid' is found to have gracefully terminated, this function will terminate and return
 * null.
 *
 * @param {int} [pid] the process id of the node to connect to.
 * @param {int} [port] the port of the node to connect to.
 * @param {int} [undoLiveRecordPid=null] the process id of the `live-record` process.
 * @returns a new Mongo connection object, or null if the process gracefully terminated.
 ','line_number':1589,'multiline':True]['text':'*
 * Start a mongo process with a particular argument array.
 * If we aren't waiting for connect, return {pid: <pid>}.
 * If we are waiting for connect:
 *     returns connection to process on success;
 *     otherwise returns null if we fail to connect.
 ','line_number':1645,'multiline':True]['text':' TODO: Make there only be one codepath for starting mongo processes','line_number':1653,'multiline':False]['text':'*
 * DEPRECATED
 *
 * Start mongod or mongos and return a Mongo() object connected to there.
 * This function's first argument is "mongod" or "mongos" program name, \
 * and subsequent arguments to this function are passed as
 * command line arguments to the program.
 ','line_number':1682,'multiline':True]['text':' Enable test commands.','line_number':1693,'multiline':False]['text':' TODO: Make this work better with multi-version testing so that we can support','line_number':1694,'multiline':False]['text':' enabling this on 2.4 when testing 2.6','line_number':1695,'multiline':False]['text':' Break out','line_number':1711,'multiline':False]['text':' Non-shell binaries (which are in fact instantiated via `runMongoProgram`) may not support','line_number':1731,'multiline':False]['text':' these command line flags.','line_number':1732,'multiline':False]['text':' Start a mongo program instance.  This function's first argument is the','line_number':1746,'multiline':False]['text':' program name, and subsequent arguments to this function are passed as','line_number':1747,'multiline':False]['text':' command line arguments to the program.  Returns pid of the spawned program.','line_number':1748,'multiline':False]