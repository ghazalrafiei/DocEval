['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':38,'multiline':False]['text':' IWYU pragma: no_include "boost/container/detail/std_fwd.hpp"','line_number':49,'multiline':False]['text':' IWYU pragma: no_include "boost/system/detail/error_code.hpp"','line_number':54,'multiline':False]['text':' IWYU pragma: keep','line_number':73,'multiline':False]['text':' IWYU pragma: keep','line_number':74,'multiline':False]['text':' IWYU pragma: keep','line_number':92,'multiline':False]['text':' IWYU pragma: keep','line_number':93,'multiline':False]['text':'*
 * These utilities are thread safe but do not provide mutually exclusive access to resources
 * identified by the caller.  Resources identified by a pid or port should not be accessed
 * by different threads.  Dependent filesystem paths should not be accessed by different
 * threads.
 ','line_number':112,'multiline':True]['text':' A small sleep allows Windows an opportunity to close locked file','line_number':141,'multiline':False]['text':' handlers, and reduce false errors on remove_all','line_number':142,'multiline':False]['text':' Try one last time. If this still fails, we propagate the error.','line_number':146,'multiline':False]['text':' namespace','line_number':151,'multiline':False]['text':' Output up to BSONObjMaxUserSize characters of the most recent log output in order to','line_number':153,'multiline':False]['text':' avoid hitting the 16MB size limit of a BSONObject.','line_number':154,'multiline':False]['text':' sentinel value','line_number':177,'multiline':False]['text':' sentinel value','line_number':189,'multiline':False]['text':' Calls waitpid on a mongo process specified by a port. If there is no pid registered for the given','line_number':194,'multiline':False]['text':' port, this function returns an exit code of 0 without doing anything. Otherwise, it calls waitpid','line_number':195,'multiline':False]['text':' for the pid associated with the given port and returns its exit code.','line_number':196,'multiline':False]['text':' sentinel value','line_number':200,'multiline':False]['text':' This function starts a program. In its input array it accepts either all commandline tokens','line_number':214,'multiline':False]['text':' which will be executed, or a single Object which must have a field named "args" which contains','line_number':215,'multiline':False]['text':' an array with all commandline tokens. The Object may have a field named "env" which contains an','line_number':216,'multiline':False]['text':' object of Key Value pairs which will be loaded into the environment of the spawned process.','line_number':217,'multiline':False]['text':' shouldLogOutput ','line_number':244,'multiline':True]['text':' shouldLogOutput ','line_number':257,'multiline':True]['text':' sentinel value','line_number':259,'multiline':False]['text':' This function is identical to RunNonMongoProgram except that it enables flags that','line_number':272,'multiline':False]['text':' disable logging of program outputs and vargs in order to prevent sensitive data from','line_number':273,'multiline':False]['text':' inadvertently being output to logs.','line_number':274,'multiline':False]['text':' Removing the directory may take non-zero time since it is executed asynchronously on Windows.','line_number':302,'multiline':False]['text':' If the directory is in process of getting removed, then the CreateDirectory fails with access','line_number':303,'multiline':False]['text':' denied so retry create directory on any error. We only expect to see access denied but we','line_number':304,'multiline':False]['text':' will retry on all errors.','line_number':305,'multiline':False]['text':' Ignore any errors for metrics.interim* files as these may disappear during copy','line_number':339,'multiline':False]['text':'*
 * Called from JS as  `copyDbpath(fromDir, toDir);`
 *
 * The destination dbpath will be cleared first.
 ','line_number':364,'multiline':True]['text':' returns failure for "zombie" processes.','line_number':390,'multiline':False]['text':' Back-off to the old way of shutting down the server on Windows, in case we','line_number':409,'multiline':False]['text':' are managing a pre-2.6.0rc0 service, which did not have the event.','line_number':410,'multiline':False]['text':'','line_number':411,'multiline':False]['text':' Do nothing. This command never returns data to the client and the driver','line_number':436,'multiline':False]['text':' doesn't like that.','line_number':437,'multiline':False]['text':'','line_number':438,'multiline':False]['text':' If we are not waiting for the process to end, then return immediately.','line_number':481,'multiline':False]['text':' allow operating system to reclaim resources','line_number':497,'multiline':False]['text':' Default to wait for pid.','line_number':546,'multiline':False]['text':'* stopMongoProgram(port[, signal]) ','line_number':550,'multiline':True]['text':'*
 * Reads a set of test named pipes. 'args' BSONObj should contain one or more fields like:
 *   "0": string; relative path of the first pipe
 *   "1": string; relative path of the second pipe
 *   ...
 * Any field names not sequentially numbered from 0 will be ignored.
 ','line_number':599,'multiline':True]['text':' next field name in numeric form','line_number':607,'multiline':False]['text':' next pipe relative path','line_number':608,'multiline':False]['text':' all pipe relative paths','line_number':609,'multiline':False]['text':'*
 * Writes a test named pipe of generated BSONobj's. 'args' BSONObj should contain fields:
 *   "0": string; relative path of the pipe
 *   "1": number; number of BSON objects to write to the pipe
 *   "2": OPTIONAL number; lower bound on size of "string" field in generated object (default 0)
 *   "3": OPTIONAL number; upper bound on size of "string" field in generated object (default 2048)
 *     capped at 16,750,000 (slightly less than BSON object maximum of 16 MB)
 *   "4": OPTIONAL string; absolute path to the directory where named pipes exist. If not given,
 *        'kDefaultPipePath' is used.
 ','line_number':628,'multiline':True]['text':' max allowed size for generated object's "string" field','line_number':644,'multiline':False]['text':' default "string" field minimum size','line_number':649,'multiline':False]['text':' default "string" field maximum size','line_number':650,'multiline':False]['text':' optional','line_number':658,'multiline':False]['text':' optional','line_number':667,'multiline':False]['text':'*
 * Attempts to read the requested number of bytes from the given input stream to the given buffer
 * and returns the number of bytes actually read.
 ','line_number':703,'multiline':True]['text':' namespace','line_number':712,'multiline':False]['text':'*
 * Writes a test named pipe of BSONobj's that are first read into memory from a BSON file, then
 * round-robinned into the pipe up to the requested number of objects. This is the same as function
 * WriteTestPipeObjects except the objects are read from a file instead of passed in as a BSONArray.
 *
 * args:
 *   "0": string; relative path of the pipe
 *   "1": number; number of BSON objects to write to the pipe
 *   "2": string; relative path to the file of BSON objects; these must fit in memory
 *   "3": OPTIONAL string; absolute path to the directory where named pipes exist. If not given,
 *        'kDefaultPipePath' is used.
 *
 * async: true, write asynchronously; false, write synchronously
 ','line_number':714,'multiline':True]['text':' Open the BSON object file.','line_number':760,'multiline':False]['text':' Read the BSON object file into a vector of BSONObj.','line_number':767,'multiline':False]['text':' buffer to read size of next BSONObj into','line_number':770,'multiline':False]['text':' buffer for the full BSONObj','line_number':776,'multiline':False]['text':' 0 is normal EOF','line_number':796,'multiline':False]['text':' while !eof','line_number':798,'multiline':False]['text':' Write the pipe.','line_number':800,'multiline':False]['text':'*
 * Asynchronously writes a test named pipe of BSONobj's that are first read into memory from a BSON
 * file. See writeTestPipeBsonFileHelper() header for more info.
 ','line_number':812,'multiline':True]['text':'*
 * Synchronously writes a test named pipe of BSONobj's that are first read into memory from a BSON
 * file. See writeTestPipeBsonFileHelper() header for more info.
 ','line_number':820,'multiline':True]['text':'*
 * Writes a test named pipe by round-robinning caller-provided objects to the pipe. 'args' BSONObj
 * should contain fields:
 *   "0": string; relative path of the pipe
 *   "1": number; number of BSON objects to write to the pipe
 *   "2": BSONArray; array of objects to round-robin write to the pipe
 *   "3": OPTIONAL string; absolute path to the directory where named pipes exist. If not given,
 *        'kDefaultPipePath' is used.
 ','line_number':828,'multiline':True]['text':' Convert bsonElems into bsonObjs as the former are pointers into local stack memory that will','line_number':869,'multiline':False]['text':' become invalid when this method returns, but they are needed by the async writer thread.','line_number':870,'multiline':False]['text':' Write the pipe asynchronously.','line_number':877,'multiline':False]['text':' Only return processes that are still alive. A client may have started a program using a mongo','line_number':888,'multiline':False]['text':' helper but terminated another way. E.g. if a mongod is started with MongoRunner.startMongod','line_number':889,'multiline':False]['text':' but exited with db.shutdownServer.','line_number':890,'multiline':False]['text':' (Generic FCV reference): Propagate generic FCV constants to the shell.','line_number':912,'multiline':False]['text':'*
 * Defines (funcName, CallbackFunction) pairs where funcName becomes the name of a function in the
 * mongo test shell and CallbackFunction is its C++ callback (handler). The callbacks must all have
 * signatures like
 *    BSONObj CallbackFunction(const BSONObj& args, void* data)
 * (contract from injectNative()), though nobody is using the data parameter at time of writing.
 *
 * The BSONObj they return must put the result into field "" such as
 *   return BSON("" << true);
 * or
 *   return BSON("" << BSON("resultInfo1" << resultValue1 << "resultInfo2" << resultValue2));
 *
 * In the shell these are called like
 *   funcName(arg1, arg2, ...)
 * for example
 *   _writeTestPipe("my_pipe_file", 1234)
 * The args will come in as the BSONObj first parameter of the callback with fields named
 * sequentially from "0", e.g. for the above:
 *   {"0": "my_pipe_file", "1": 1234}
 ','line_number':931,'multiline':True]['text':' namespace shell_utils','line_number':977,'multiline':False]['text':' namespace mongo','line_number':978,'multiline':False]