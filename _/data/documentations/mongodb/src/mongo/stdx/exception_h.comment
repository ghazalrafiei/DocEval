['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' This file provides a wrapper over the function registered by `std::set_terminate`.  This','line_number':36,'multiline':False]['text':' facilitates making `stdx::set_terminate` work correctly on windows.  In windows,','line_number':37,'multiline':False]['text':' `std::set_terminate` works on a per-thread basis.  Our `stdx::thread` header registers our','line_number':38,'multiline':False]['text':' handler using the `stdx::terminate_detail::TerminateHandlerInterface::dispatch` as an entry point','line_number':39,'multiline':False]['text':' for `std::set_terminate` when a thread starts on windows.  `stdx::set_terminate` sets the handler','line_number':40,'multiline':False]['text':' globally for all threads.  Our wrapper, which is registered with each thread, calls the global','line_number':41,'multiline':False]['text':' handler.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' NOTE: Our wrapper is not initialization order safe.  It is not safe to set the terminate handler','line_number':44,'multiline':False]['text':' until main has started.','line_number':45,'multiline':False]['text':' In order to grant `mongo::stdx::thread` access to the dispatch method, we need to know this','line_number':49,'multiline':False]['text':' class's name.  A forward-decl header would be overkill for this singular special case.','line_number':50,'multiline':False]['text':' This must be the same as the definition in standard.  Do not alter this alias.','line_number':53,'multiline':False]['text':' NOLINT','line_number':67,'multiline':False]['text':' NOLINT','line_number':68,'multiline':False]['text':' namespace mongo::stdx','line_number':70,'multiline':False]