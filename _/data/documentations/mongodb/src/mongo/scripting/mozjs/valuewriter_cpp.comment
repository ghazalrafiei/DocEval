['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' We could do something more sophisticated here by checking to see if we','line_number':106,'multiline':False]['text':' round trip through int32_t, int64_t and double and picking a type that','line_number':107,'multiline':False]['text':' way, for now just always come back as double for numbers though (it's','line_number':108,'multiline':False]['text':' what we did for v8)','line_number':109,'multiline':False]['text':' Null char should be at the end, not in the string','line_number':350,'multiline':False]['text':' if previous type was integer, attempt to represent 'val' as an integer','line_number':363,'multiline':False]['text':' This makes copying an object of numbers O(n**2) :(','line_number':367,'multiline':False]['text':' We open a block here because it's important that the two rooting types','line_number':395,'multiline':False]['text':' we need (obj and o) go out of scope before we actually open a','line_number':396,'multiline':False]['text':' new WriteFieldFrame (in the emplace at the bottom of the function). If','line_number':397,'multiline':False]['text':' we don't do this, we'll destroy the local roots in this function body','line_number':398,'multiline':False]['text':' before the frame we added, which will break the gc rooting list.','line_number':399,'multiline':False]['text':' CodeWScope','line_number':427,'multiline':False]['text':' Code','line_number':435,'multiline':False]['text':' nested object or array','line_number':547,'multiline':False]['text':' This emplace is effectively a recursive function call, as this code path','line_number':549,'multiline':False]['text':' unwinds back to ObjectWrapper::toBSON. In that function we'll actually','line_number':550,'multiline':False]['text':' write the child we've just pushed onto the frames stack.','line_number':551,'multiline':False]['text':' namespace mozjs','line_number':555,'multiline':False]['text':' namespace mongo','line_number':556,'multiline':False]