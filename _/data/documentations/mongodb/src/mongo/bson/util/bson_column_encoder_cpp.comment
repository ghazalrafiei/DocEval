['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Finalize a BSONColumn and write it to an ofstream, pre-pended with length of encoding ','line_number':54,'multiline':True]['text':' Read a BSONColumn from ifstream into buf, return 0 on stream end, -1 on failure ','line_number':62,'multiline':True]['text':' namespace','line_number':80,'multiline':False]['text':' Handle program options','line_number':90,'multiline':False]['text':' Command line options','line_number':93,'multiline':False]['text':' input / output files for the reader (input defaults to stdin)','line_number':94,'multiline':False]['text':' Size of buffer, filling this with BSONObj results in a dump out to BSONColumn','line_number':95,'multiline':False]['text':' Define the program options','line_number':103,'multiline':False]['text':' Parse the program options','line_number':119,'multiline':False]['text':' User can specify an --input param and it must point to a valid file','line_number':123,'multiline':False]['text':' Open the connection to the input file','line_number':132,'multiline':False]['text':' User can specify an --output param and it does not need to point to a valid file','line_number':140,'multiline':False]['text':' Open the connection to the output file','line_number':144,'multiline':False]['text':' output to cout','line_number':151,'multiline':False]['text':' User can specify a --bufferSize param','line_number':157,'multiline':False]['text':' User can specify --decode to decompress BSONColumn data','line_number':162,'multiline':False]['text':' User can specify --csv to handle CSV data','line_number':167,'multiline':False]['text':' compressing sequence of BSONObj','line_number':182,'multiline':False]['text':' 0 for field count indicates obj sequence','line_number':185,'multiline':False]['text':' compressing comma-separated sequence of scalars','line_number':215,'multiline':False]['text':' field count is written first, all lines expected to have same count','line_number':216,'multiline':False]['text':' parse first line separately and count fields','line_number':218,'multiline':False]['text':' decompressing, works regardless of whether input was obj stream or csv','line_number':264,'multiline':False]['text':' csv will be dumped into a stream of BSONElement','line_number':265,'multiline':False]['text':' discard field count','line_number':266,'multiline':False]['text':' decompressing back to csv, input must have been csv','line_number':280,'multiline':False]