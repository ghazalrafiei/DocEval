['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Creates a status with InvalidBSON code and adds information about _id if available.
 * WARNING: only pass in a non-EOO idElem if it has been fully validated already!
 * 'elemName' should be the known, validated field name of the element containing the error, if it
 * exists. Otherwise, it should be empty.
 ','line_number':45,'multiline':True]['text':'field name=','line_number':66,'multiline':True]['text':'full=','line_number':66,'multiline':True]['text':' Attempts to read a c-string starting at the next position in the buffer, and writes the
     * string into 'out', if non-null.
     * 'elemName' should be the known, validated field name of the BSONElement in which we are
     * reading, if it exists. Otherwise, it should be empty.
     ','line_number':87,'multiline':True]['text':' Attempts to read a UTF8 string starting at the next position in the buffer, and writes the
     * string into 'out', if non-null.
     * 'elemName' should be the known, validated field name of the BSONElement in which we are
     * reading, if it exists. Otherwise, it should be empty.
     ','line_number':107,'multiline':True]['text':' must have NULL at the very least','line_number':118,'multiline':False]['text':'*
     * WARNING: only pass in a non-EOO idElem if it has been fully validated already!
     ','line_number':152,'multiline':True]['text':'*
 * WARNING: only pass in a non-EOO idElem if it has been fully validated already!
 ','line_number':196,'multiline':True]['text':' will become idElem once validated','line_number':312,'multiline':False]['text':' check if we've finished validating idElem and are at start of next element.','line_number':335,'multiline':False]['text':' we've already validated that fieldname is safe to access as long as we aren't','line_number':349,'multiline':False]['text':' at the end of the object, since EOO doesn't have a fieldname.','line_number':350,'multiline':False]['text':' namespace','line_number':413,'multiline':False]['text':' namespace fuzzerOnly','line_number':424,'multiline':False]['text':' namespace mongo','line_number':425,'multiline':False]