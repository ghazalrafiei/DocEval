['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':67,'multiline':False]['text':' storage','line_number':131,'multiline':False]['text':' declare the output size and pointer','line_number':186,'multiline':False]['text':' call the wire protocol','line_number':193,'multiline':False]['text':' convert the shared buffer to a mongo::message and ensure that it is valid','line_number':200,'multiline':False]['text':' convert the message into an OpMessage to examine its BSON','line_number':205,'multiline':False]['text':' Test the setUp() and tearDown() test fixtures','line_number':218,'multiline':False]['text':' This test is to make sure that destroying the db will fail if there's remaining clients left.','line_number':225,'multiline':False]['text':' ensure that each client is unique by making sure that the set size equals the number of','line_number':238,'multiline':False]['text':' clients instantiated','line_number':239,'multiline':False]['text':' create the client object','line_number':244,'multiline':False]['text':' craft the isMaster message','line_number':247,'multiline':False]['text':' create the client object','line_number':255,'multiline':False]['text':' craft the createIndexes message','line_number':258,'multiline':False]['text':' create the client object','line_number':283,'multiline':False]['text':' craft the createIndexes message','line_number':286,'multiline':False]['text':' create the client object','line_number':311,'multiline':False]['text':' craft the createIndexes message','line_number':314,'multiline':False]['text':' Wait for the sleep command to start in the main test thread.','line_number':379,'multiline':False]['text':' See if we find the sleep command among the running commands','line_number':385,'multiline':False]['text':' Sleep command found, kill it.','line_number':396,'multiline':False]['text':' Delete','line_number':537,'multiline':False]['text':' Update','line_number':568,'multiline':False]['text':' This test is temporary to make sure that only one database can be created','line_number':582,'multiline':False]['text':' This restriction may be relaxed at a later time','line_number':583,'multiline':False]['text':' namespace','line_number':593,'multiline':False]['text':' Define main function as an entry to these tests.','line_number':595,'multiline':False]['text':' These test functions cannot use the main() defined for unittests because they','line_number':596,'multiline':False]['text':' call runGlobalInitializers(). The embedded C API calls mongoDbMain() which','line_number':597,'multiline':False]['text':' calls runGlobalInitializers().','line_number':598,'multiline':False]['text':' Allocate an error descriptor for use in non-configured tests','line_number':623,'multiline':False]['text':' Perform one cycle of global initialization/deinitialization before running test. This will','line_number':628,'multiline':False]['text':' make sure everything that is needed is setup for the unittest infrastructure.','line_number':629,'multiline':False]['text':' The reason this works is that the unittest system relies on other systems being initialized','line_number':630,'multiline':False]['text':' through global init and deinitialize just deinitializes systems that explicitly supports','line_number':631,'multiline':False]['text':' deinit leaving the systems unittest needs initialized.','line_number':632,'multiline':False]['text':' Check so we can initialize the library without providing init params','line_number':645,'multiline':False]['text':' Initialize the library with a log callback and test so we receive at least one callback','line_number':661,'multiline':False]['text':' during the lifetime of the test','line_number':662,'multiline':False]['text':' storage','line_number':684,'multiline':False]['text':' Attempt to create an embedded instance to make sure something gets logged. This will probably','line_number':695,'multiline':False]['text':' fail but that's fine.','line_number':696,'multiline':False]