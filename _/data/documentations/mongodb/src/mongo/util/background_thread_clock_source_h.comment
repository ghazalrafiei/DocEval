['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A clock source that reads the Date_t lastNow time and uses a background thread to ensure
 * Date_t::now is called at least every X amount of milliseconds.  If nothing reads the time for a
 * whole granularity, the thread will sleep until it is needed again.
 *
 * Its now() returns Date_t::lastNow(), the passed in clock source is only used to control the
 * sleeps for the background thread.
 ','line_number':49,'multiline':True]['text':' Expected transitions:','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':' Starting the clock source','line_number':78,'multiline':False]['text':'   _ -> kTimerPaused','line_number':79,'multiline':False]['text':'','line_number':80,'multiline':False]['text':' Timer thread has woken from its timed sleep','line_number':81,'multiline':False]['text':'   kTimerPaused','line_number':82,'multiline':False]['text':'   kReaderRead  -> kTimerWillPause','line_number':83,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' Reader reads a time and the timer isn't paused','line_number':85,'multiline':False]['text':'   kTimerWillPause -> kReaderHasRead','line_number':86,'multiline':False]['text':'','line_number':87,'multiline':False]['text':' Reader wakes up the timer thread','line_number':88,'multiline':False]['text':'   kTimerPaused -> kReaderHasRead','line_number':89,'multiline':False]['text':' NOLINT','line_number':99,'multiline':False]['text':' This is used exclusively for tests, to verify when we've actually gone to sleep','line_number':105,'multiline':False]['text':' namespace mongo','line_number':110,'multiline':False]