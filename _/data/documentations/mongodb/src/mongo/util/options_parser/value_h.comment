['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Helper typedefs for the more complex C++ types supported by this Value class
 ','line_number':48,'multiline':True]['text':'* A simple container interface for storing various C++ values.
 *
 *  Usage:
 *
 *  Value intVal(2);
 *  Value stringVal("string");
 *
 *  int intContents = 1;
 *  Status ret = stringVal.get(&intContents);
 *  // ret != Status::OK()
 *  // intContents is still 1
 *
 *  ret = intVal.get(&intContents);
 *  // ret == Status::OK()
 *  // intContents is now 2
 ','line_number':56,'multiline':True]['text':' Constructors','line_number':74,'multiline':False]['text':' Access interface','line_number':88,'multiline':False]['text':' Utility functions','line_number':100,'multiline':False]['text':'*
     *  Return the value's type as a string
     ','line_number':102,'multiline':True]['text':'*
     *  Return true if the value was created with the no argument constructor
     ','line_number':107,'multiline':True]['text':'*
     *  Return true if the other Value equals this value, both in type and in contents
     *
     *  Two empty values are equal
     ','line_number':112,'multiline':True]['text':'*
     *  Return the std::string representation of this Value.  This function is used only for
     *  debugging purposes and does not output data in an easily parseable format.
     ','line_number':119,'multiline':True]['text':'*
     *  The functions below are the legacy interface to be consistent with boost::any during the
     *  transition period
     ','line_number':125,'multiline':True]['text':'*
     *  Returns the contents of this Value as type T.  Throws AssertionException if the type
     *  does not match
     ','line_number':130,'multiline':True]['text':'*
     *  Return the type_info for this value
     ','line_number':137,'multiline':True]['text':' Types currently supported by Value','line_number':155,'multiline':False]['text':' std::vector<std::string>','line_number':157,'multiline':False]['text':' std::map<std::string, std::string>','line_number':158,'multiline':False]['text':' bool','line_number':159,'multiline':False]['text':' double','line_number':160,'multiline':False]['text':' int','line_number':161,'multiline':False]['text':' long','line_number':162,'multiline':False]['text':' std::string','line_number':163,'multiline':False]['text':' unsigned long long','line_number':164,'multiline':False]['text':' unsigned','line_number':165,'multiline':False]['text':' (not set)','line_number':166,'multiline':False]['text':' namespace optionenvironment','line_number':186,'multiline':False]['text':' namespace mongo','line_number':187,'multiline':False]