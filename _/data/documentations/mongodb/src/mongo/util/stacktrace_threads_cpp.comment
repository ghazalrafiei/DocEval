['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include <syscall.h>','line_number':56,'multiline':False]['text':' IWYU pragma: no_include "bits/types/siginfo_t.h"','line_number':57,'multiline':False]['text':' IWYU pragma: keep','line_number':69,'multiline':False]['text':'* Safe to call from a signal handler. Might wake early with EINTR. ','line_number':223,'multiline':True]['text':'* Call `f(tid)` on each thread `tid` in this process except the calling thread. ','line_number':243,'multiline':True]['text':' Ignore non-integer names (e.g. "." or "..").','line_number':251,'multiline':False]['text':' skip the current thread','line_number':253,'multiline':False]['text':'* Cannot yield. AS-Safe. ','line_number':272,'multiline':True]['text':' NOLINT','line_number':291,'multiline':False]['text':' guards _head','line_number':314,'multiline':False]['text':'*
     * We need signals for two purpposes in the stack tracing system.
     *
     * An external process sends a signal to initiate stack tracing.  When that's received,
     * we *also* need a signal to send to each thread to cause to dump its backtrace.
     * The `siginfo` provides enough information to allow one signal to serve both roles.
     *
     * Since all threads are open to receiving this signal, any of them can be selected to
     * receive it when it comes from outside. So we arrange for any thread that receives the
     * undirected stack trace signal to re-issue it directy at the signal processing thread.
     *
     * The signal processing thread will have the signal blocked, and handle it
     * synchronously with sigwaitinfo, so this handler only applies to the other
     * respondents.
     ','line_number':348,'multiline':True]['text':'* An in-flight all-thread stack collection. ','line_number':374,'multiline':True]['text':'* Write several log statements, one per thread. ','line_number':389,'multiline':True]['text':' NOLINT','line_number':403,'multiline':False]['text':' NOLINT','line_number':404,'multiline':False]['text':' Brute sanity check. Should not really happen.','line_number':415,'multiline':False]['text':' A raise(SIGUSR2) could cause it, but we aren't supporting that.','line_number':416,'multiline':False]['text':' Make a StackCollectionOperation and load it with enough ThreadBacktrace buffers to serve','line_number':435,'multiline':False]['text':' every pending thread.','line_number':436,'multiline':False]['text':' Results queue is dry and we haven't napped enough to justify a reap.','line_number':468,'multiline':False]['text':' Prune dead threads from the pendingTids set before retrying.','line_number':473,'multiline':False]['text':'','line_number':527,'multiline':False]['text':' The SignalHandler thread calls printAllThreadStacks.','line_number':544,'multiline':False]['text':' Load all addrs in all threads into the metaGen.','line_number':556,'multiline':False]['text':' Handle 'somap' specially. Pass everything else through.','line_number':574,'multiline':False]['text':' Skip any files that aren't present in the metaGen.','line_number':581,'multiline':False]['text':' Replace "b" with the `file->id()`. Pass everything else through.','line_number':587,'multiline':False]['text':' really a made-up id string','line_number':617,'multiline':False]['text':' Received from outside. Forward to signal processing thread if there is one.','line_number':638,'multiline':False]['text':' Users should call the toplevel printAllThreadStacks function.','line_number':643,'multiline':False]['text':' An SI_TKILL could be a raise(SIGUSR2) call, and we ignore those.','line_number':644,'multiline':False]['text':' Received from the signal processing thread.','line_number':645,'multiline':False]['text':' Submit this thread's backtrace to the results stack.','line_number':646,'multiline':False]['text':'*
 * Called from single-thread init time. The stack tracer will use the specified `signal`.
 ','line_number':661,'multiline':True]['text':' We should never need to add to this lambda because it simply sets up handler','line_number':669,'multiline':False]['text':' execution. Any changes should either be in State::action or in the signal','line_number':670,'multiline':False]['text':' handler itself.','line_number':671,'multiline':False]['text':' namespace','line_number':683,'multiline':False]['text':' namespace stack_trace_detail','line_number':685,'multiline':False]['text':' namespace mongo','line_number':708,'multiline':False]['text':' !defined(MONGO_STACKTRACE_CAN_DUMP_ALL_THREADS)','line_number':709,'multiline':False]