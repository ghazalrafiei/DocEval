['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' null SharedBuffers are never considered "shared", even when copied.','line_number':55,'multiline':False]['text':' The buffer is already at least 1 byte.','line_number':107,'multiline':False]['text':' We copy it anyway.','line_number':110,'multiline':False]['text':' The buffer is already at least 1 byte.','line_number':122,'multiline':False]['text':' We copy it anyway.','line_number':125,'multiline':False]['text':' We can use less than we ask for','line_number':154,'multiline':False]['text':' Buffers should not overlap and be next to each other','line_number':160,'multiline':False]['text':' Verify that anything written is transfered when we grow','line_number':164,'multiline':False]['text':' Write current capacity','line_number':169,'multiline':False]['text':' Write the rest','line_number':172,'multiline':False]['text':' No buffers should have been overwritten by others','line_number':187,'multiline':False]['text':' At a mimimum we will have a buffer of at least one block size in use.','line_number':217,'multiline':False]['text':' This test allocates fragments on a block boundaries.','line_number':227,'multiline':False]['text':' Second buffer is allocated with twice the capacity.','line_number':237,'multiline':False]['text':' Remaining buffer is the last allocated block of 2x block size;','line_number':247,'multiline':False]['text':' This test allocates a fragment that isn't on a block boundary.','line_number':260,'multiline':False]['text':' We will realloc with double the size.','line_number':270,'multiline':False]['text':' We have one buffer of size kBlockSize and another of 2x.','line_number':275,'multiline':False]['text':' The last buffer we allocated was 2x the block size, so this is what remains.','line_number':281,'multiline':False]['text':' We will realloc a buffer of 2x the block size.','line_number':300,'multiline':False]['text':' The last buffer we allocated was 2x the block size, so this is what remains.','line_number':310,'multiline':False]['text':' Expect that there is no increase in memory usage when we allocate a new buffer of the','line_number':330,'multiline':False]['text':' same size.','line_number':331,'multiline':False]['text':' Expect that the memory usage only doubles and no more when we allocate a new buffer','line_number':341,'multiline':False]['text':' greater than the current capacity.','line_number':342,'multiline':False]['text':' Ensure that when we grow and we are the exclusive user of the builder, we don't need to','line_number':358,'multiline':False]['text':' allocate new buffers.','line_number':359,'multiline':False]['text':' We double the buffer size internally every time we realloc.','line_number':370,'multiline':False]['text':' If we start a new fragment, we expect that it's capacity is what remains in the buffer.','line_number':386,'multiline':False]['text':' This has no effect on memory usage since the last allocated buffer is 8x the block size. We','line_number':396,'multiline':False]['text':' can't reclaim the unused space right now, but the next fragment we build should be able to.','line_number':397,'multiline':False]['text':' Since there are no active fragments, we expect to have the full capacity of the','line_number':404,'multiline':False]['text':' underlying buffer.','line_number':405,'multiline':False]['text':' namespace','line_number':422,'multiline':False]['text':' namespace mongo','line_number':423,'multiline':False]