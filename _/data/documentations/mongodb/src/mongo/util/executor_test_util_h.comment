['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * An "OutOfLineExecutor" that actually runs on the same thread of execution
 * This executor is not thread-safe, and accessing it by multiple threads is prohibited.
 * Multi-threaded accesses to instances of "InlineQueuedCountingExecutor" result in undefined
 * behavior.
 ','line_number':35,'multiline':True]['text':' Add the task to our queue','line_number':44,'multiline':False]['text':' Make sure that we are not invocing a Task while invocing a Task. Some OutOfLineExecutors','line_number':47,'multiline':False]['text':' do recursively dispatch Tasks, however, they also carefully monitor stack depth. For the','line_number':48,'multiline':False]['text':' purposes of testing, let's serialize our Tasks. One Task runs at a time.','line_number':49,'multiline':False]['text':' Admit we're not working on the queue anymore','line_number':55,'multiline':False]['text':' Clear out our queue','line_number':59,'multiline':False]['text':' Relaxed to avoid adding synchronization where there otherwise wouldn't be. That would','line_number':63,'multiline':False]['text':' cause a false negative from TSAN.','line_number':64,'multiline':False]['text':' NOLINT','line_number':78,'multiline':False]['text':' Relaxed to avoid adding synchronization where there otherwise wouldn't be. That would','line_number':84,'multiline':False]['text':' cause a false negative from TSAN.','line_number':85,'multiline':False]['text':' NOLINT','line_number':94,'multiline':False]['text':' Relaxed to avoid adding synchronization where there otherwise wouldn't be. That would','line_number':100,'multiline':False]['text':' cause a false negative from TSAN.','line_number':101,'multiline':False]['text':' NOLINT','line_number':110,'multiline':False]['text':' namespace mongo','line_number':113,'multiline':False]