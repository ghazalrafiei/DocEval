['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' The DurationTestSameType Compare* tests server to check the implementation of the comparison','line_number':42,'multiline':False]['text':' operators as well as the compare() method, and so sometimes must explicitly check ASSERT_FALSE(v1','line_number':43,'multiline':False]['text':' OP v2). The DurationTestDifferentTypes Compare* tests rely on the fact that the operators all','line_number':44,'multiline':False]['text':' just call compare(), so if the operators worked in the SameType tests, they can be trusted in the','line_number':45,'multiline':False]['text':' DifferentType tests. As such, the DifferentType tests only use ASSERT_{GT,LT,LTE,GTE,EQ,NE} and','line_number':46,'multiline':False]['text':' never do an ASSERT_FALSE.','line_number':47,'multiline':False]['text':' Since comparison operators are implemented in terms of Duration::compare, we do not need to','line_number':93,'multiline':False]['text':' re-test all of the operators when the duration types are different. It suffices to know that','line_number':94,'multiline':False]['text':' compare works, which can be accomplished with EQ, NE and LT alone.','line_number':95,'multiline':False]['text':' Converting from one Duration period to another is constexpr.','line_number':153,'multiline':False]['text':' Converting from stdx::chrono::duration to Duration is constexpr.','line_number':161,'multiline':False]['text':' Test implicit conversion constructor.','line_number':167,'multiline':False]['text':' Max + 1 should throw','line_number':195,'multiline':False]['text':' Min + -1 should throw','line_number':199,'multiline':False]['text':' Conversion of Seconds::min() to Milliseconds should throw','line_number':203,'multiline':False]['text':' Min - 1 should throw','line_number':218,'multiline':False]['text':' Max + -1 should throw','line_number':222,'multiline':False]['text':' Conversion of Seconds::min() to Milliseconds should throw','line_number':226,'multiline':False]['text':'* Calls `deduceChronoDuration<Period>(in)`, asserts that it returns `equivalent`. ','line_number':253,'multiline':True]['text':' namespace','line_number':287,'multiline':False]['text':' namespace mongo','line_number':288,'multiline':False]