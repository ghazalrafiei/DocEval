['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Simple generator-type iterator
 *
 * This Iterator caches/obscures the underlying data type to allow subclasses to wrap its more()
 * and next() functions.
 ','line_number':42,'multiline':True]['text':'*
     * Return the next element and advance the iterator
     ','line_number':58,'multiline':True]['text':'*
     * Return true if there are more elements available
     ','line_number':69,'multiline':True]['text':'*
 * A synchronized add-only list of elements
 *
 * A RegistryList is intended to allow concurrent iteration, insertion, and access with minimal
 * amounts of resource contention. If each element in the list is a pointer or index, the overhead
 * of "deactivated" elements is minimal.
 *
 * This class does no lifetime management for its elements besides construction and destruction. If
 * you use it to store pointers, the pointed-to memory should be immortal.
 ','line_number':82,'multiline':True]['text':'*
     * Add an element to the list
     *
     * @returns  The index of the new pointer element
     ','line_number':102,'multiline':True]['text':'*
     * Returns an element at the given index within the list
     ','line_number':114,'multiline':True]['text':' If index is past our synchronized end on the deque, then indexing it will be UB.','line_number':121,'multiline':False]['text':'*
     * Return the total number of elements in this list
     ','line_number':128,'multiline':True]['text':'*
     * Return a copy of the underlying data structure
     ','line_number':137,'multiline':True]['text':'*
     * Return an iterator for this list
     *
     * This iterator copies the state of the list at the time of capture. If additional elements are
     * added after this function is invoked, they will not be visible via the Iterator.
     ','line_number':146,'multiline':True]['text':' NOLINT','line_number':157,'multiline':False]['text':'*
 * Wrap the basic RegistryList concept to handle weak_ptrs
 ','line_number':161,'multiline':True]['text':' namespace mongo','line_number':196,'multiline':False]