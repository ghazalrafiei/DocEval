['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':52,'multiline':False]['text':' IWYU pragma: keep','line_number':53,'multiline':False]['text':' From https://msdn.microsoft.com/en-us/library/xcb2z8hs.aspx','line_number':75,'multiline':False]['text':' Note: The thread name is only set for the thread if the debugger is attached.','line_number':76,'multiline':False]['text':' Must be 0x1000.','line_number':81,'multiline':False]['text':' Pointer to name (in user addr space).','line_number':82,'multiline':False]['text':' Thread ID (-1=caller thread).','line_number':83,'multiline':False]['text':' Reserved for future use, must be zero.','line_number':84,'multiline':False]['text':' Naming should not be expensive compared to thread creation and connection set up, but if','line_number':106,'multiline':False]['text':' testing shows otherwise we should make this depend on DEBUG again.','line_number':107,'multiline':False]['text':' Maximum thread name length on OS X is MAXTHREADNAMESIZE (64 characters). This assumes','line_number':110,'multiline':False]['text':' OS X 10.6 or later.','line_number':111,'multiline':False]['text':' Do not set thread name on the main() thread. Setting the name on main thread breaks','line_number':124,'multiline':False]['text':' pgrep/pkill since these programs base this name on /proc/*/status which displays the thread','line_number':125,'multiline':False]['text':' name, not the executable name.','line_number':126,'multiline':False]['text':'  Maximum thread name length supported on Linux is 16 including the null terminator.','line_number':129,'multiline':False]['text':'  Ideally we use short and descriptive thread names that fit: this helps for log','line_number':130,'multiline':False]['text':'  readability as well. Still, as the limit is so low and a few current names exceed the','line_number':131,'multiline':False]['text':'  limit, it's best to shorten long names.','line_number':132,'multiline':False]['text':'*
 * Manages the relationship of our high-level ThreadNameRef strings to
 * the thread local context, and efficiently notifying the OS of name
 * changes. We try to apply temporary names to threads to make them
 * meaningful representations of the kind of work the thread is doing.
 * But sharing these names with the OS is slow and name length is limited.  So
 * ThreadNameInfo is an auxiliary resource to the OS thread name, available to
 * the LOGV2 system and to GDB.
 *
 * ThreadNameInfo are per-thread and managed by thread_local storage.
 *
 * A name is "active" when it has been pushed to the OS by `setHandle`. The
 * association can be abandoned by calling `release`. This doesn't affect the
 * OS, but indicates that the name binding is abandoned and shouldn't be
 * preserved by returning it from subsequent `setHandle` calls. We do however
 * retain the inactive reference in hopes of perhaps identifying redundant
 * `setHandle` calls that would set the OS thread name to the same value it
 * already has.
 *
 * Upon construction, a ThreadNameInfo has an inactive unique name that
 * the OS doesn't know about yet. A push/pop style call sequence of
 * `h=getHandle()` then (eventually) `setHandle(h)` can make this name
 * the active (known to the OS) thread name.
 ','line_number':149,'multiline':True]['text':'* Returns the thread name ref, whether it's active or not. ','line_number':175,'multiline':True]['text':'*
     * Changes the thread name ref to `name`, marking it active,
     * and updating the OS thread name if necessary.
     *
     * If there was a previous active thread name, it is returned so that
     * callers can perhaps restore it and implement a temporary rename.
     * Inactive thread names are considered abandoned and are not returned.
     ','line_number':180,'multiline':True]['text':'*
     * Mark the current ThreadNameRef as inactive. This is only a marking and
     * does not affect the OS thread name. The ThreadNameRef is retained
     * so that redundant setHandle calls can be recognized and elided.
     ','line_number':199,'multiline':True]['text':'*
     * Get a pointer to this thread's ThreadNameInfo.
     * Can return null during thread_local destructors.
     ','line_number':208,'multiline':True]['text':' A pointer has no destructor, so loading it after','line_number':217,'multiline':False]['text':' destruction should be ok.','line_number':218,'multiline':False]['text':'*
     * Main thread always gets "main". Other threads are sequentially
     * named as "thread1", "thread2", etc.
     ','line_number':226,'multiline':True]['text':' namespace','line_number':241,'multiline':False]['text':' namespace mongo','line_number':261,'multiline':False]