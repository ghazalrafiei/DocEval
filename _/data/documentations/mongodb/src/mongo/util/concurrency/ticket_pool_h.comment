['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A ticket waiter represents an operation that queues when no tickets are available.
 ','line_number':46,'multiline':True]['text':' This is the initial state. May transition to only Acquired or TimedOut.','line_number':51,'multiline':False]['text':' A releaser will set the waiter to the Acquired state when a ticket is available. This is','line_number':53,'multiline':False]['text':' a terminal state.','line_number':54,'multiline':False]['text':' The waiter will transition to this state when it times out. Releasers will not give','line_number':56,'multiline':False]['text':' tickets to waiters in the TimedOut state. This is a terminal state.','line_number':57,'multiline':False]['text':' Only valid to dereference when in the Waiting state and while holding the queue lock.','line_number':62,'multiline':False]['text':'*
 * A TicketQueue is an interface that represents a queue of waiters whose ordering is
 * implementation-defined.
 ','line_number':66,'multiline':True]['text':'*
 * The FifoTicketQueue is a simple FIFO queue where new waiters are placed at the end and the oldest
 * waiters are removed first.
 ','line_number':77,'multiline':True]['text':'*
 * This SimplePriorityTicketQueue implements a queue policy that separates normal and low priority
 * operations into separate queues. Normal priority operations are always scheduled ahead of low
 * priority ones, except when a positive lowPriorityBypassThreshold is provided. This parameter
 * specifies how often a waiting low-priority operation should skip the queue and be scheduled ahead
 * of waiting normal priority operations.
 ','line_number':100,'multiline':True]['text':'*
     * Number of times low priority operations are expedited for ticket admission over normal
     * priority operations.
     ','line_number':144,'multiline':True]['text':'*
     * Returns the number of times the low priority queue is bypassed in favor of dequeuing from the
     * normal priority queue when a ticket becomes available.
     ','line_number':152,'multiline':True]['text':'*
     * Limits the number times the low priority queue is non-empty and bypassed in favor of the
     * normal priority queue for the next ticket admission.
     ','line_number':165,'multiline':True]['text':'*
     * Number of times ticket admission is expedited for low priority operations.
     ','line_number':171,'multiline':True]['text':'*
     * Counts the number of times normal operations are dequeued over operations queued in the low
     * priority queue. We explicitly use an unsigned type here because rollover is desired.
     ','line_number':176,'multiline':True]['text':'*
 * A TicketPool holds tickets and queues waiters in the provided TicketQueue. The TicketPool
 * attempts to emulate a semaphore with a custom queueing policy.
 *
 * All public functions are thread-safe except where explicitly stated otherwise.
 ','line_number':187,'multiline':True]['text':'*
     * Attempt to acquire a ticket without blocking. Returns true if a ticket was granted.
     ','line_number':200,'multiline':True]['text':'*
     * Acquire a ticket until the provided deadline. Returns false on timeout, true otherwise.
     ','line_number':205,'multiline':True]['text':'*
     * Releases a ticket to the pool. Will will wake a waiter, if there are any queued operations.
     ','line_number':210,'multiline':True]['text':'*
     * Returns the number of tickets available.
     ','line_number':215,'multiline':True]['text':'*
     * Returns the number of queued waiters.
     ','line_number':222,'multiline':True]['text':'
     * Provides direct access to the underlying queue. Callers must ensure they only use thread-safe
     * functions.
     ','line_number':229,'multiline':True]['text':'*
     * Attempt to give the ticket to a waiter, and otherwise the pool.
     ','line_number':242,'multiline':True]['text':'*
     * Removes the next waiter from the queue. If there are no waiters, adds the ticket to the pool.
     * Ensures that no new waiters queue while this is happening.
     ','line_number':247,'multiline':True]['text':' This counter is redundant with the _waiters queue length, but provides the releaseIfWaiters()','line_number':255,'multiline':False]['text':' a fast-path that avoids taking the queue mutex.','line_number':256,'multiline':False]['text':' This mutex protects the _waiters queue by preventing items from being added and removed, but','line_number':259,'multiline':False]['text':' does not protect the elements of the queue.','line_number':260,'multiline':False]['text':' namespace mongo','line_number':264,'multiline':False]