['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A configurable thread pool, for general use.
 *
 * See the Options struct for information about how to configure an instance.
 ','line_number':45,'multiline':True]['text':'*
     * Contains a subset of the fields from Options related to limiting the number of concurrent
     * threads in the pool. Used in places where we want a way to specify limits to the size of a
     * ThreadPool without overriding the other behaviors of the pool such thread names or onCreate
     * behaviors. Each field of Limits maps directly to the same-named field in Options.
     ','line_number':52,'multiline':True]['text':'*
     * Structure used to configure an instance of ThreadPool.
     ','line_number':64,'multiline':True]['text':' Set maxThreads to this if you don't want to limit the number of threads in the pool.','line_number':68,'multiline':False]['text':' Note: the value used here is high enough that it will never be reached, but low enough','line_number':69,'multiline':False]['text':' that it won't cause overflows if mixed with signed ints or math.','line_number':70,'multiline':False]['text':' Name of the thread pool. If this string is empty, the pool will be assigned a','line_number':80,'multiline':False]['text':' name unique to the current process.','line_number':81,'multiline':False]['text':' Prefix used to name threads for logging purposes.','line_number':84,'multiline':False]['text':'','line_number':85,'multiline':False]['text':' An integer will be appended to this string to create the thread name for each thread in','line_number':86,'multiline':False]['text':' the pool.  Warning, if you create two pools and give them the same threadNamePrefix, you','line_number':87,'multiline':False]['text':' could have multiple threads that report the same name. If you leave this empty, the','line_number':88,'multiline':False]['text':' prefix will be the pool name followed by a hyphen.','line_number':89,'multiline':False]['text':' Minimum number of threads that must be in the pool.','line_number':92,'multiline':False]['text':'','line_number':93,'multiline':False]['text':' At least this many threads will be created at startup, and the pool will not reduce the','line_number':94,'multiline':False]['text':' total number of threads below this threshold before shutdown.','line_number':95,'multiline':False]['text':' The pool will never grow to contain more than this many threads.','line_number':98,'multiline':False]['text':' If the pool has had at least one idle thread for this much time, it may consider reaping','line_number':101,'multiline':False]['text':' a thread.','line_number':102,'multiline':False]['text':'* If callable, called before each worker thread begins consuming tasks. ','line_number':105,'multiline':True]['text':'*
         * If callable, called after joining each retired thread.
         * Since there could be multiple calls to this function in a single critical section,
         * avoid complex logic in the callback.
         ','line_number':108,'multiline':True]['text':'*
     * Structure used to return information about the thread pool via getStats().
     ','line_number':116,'multiline':True]['text':' The options for the instance of the pool returning these stats.','line_number':120,'multiline':False]['text':' The number of threads currently in the pool, idle or active.','line_number':123,'multiline':False]['text':' The number of idle threads currently in the pool.','line_number':126,'multiline':False]['text':' The number of tasks waiting to be executed by the pool.','line_number':129,'multiline':False]['text':' The last time that no threads in the pool were idle.','line_number':132,'multiline':False]['text':'*
     * Constructs a thread pool, configured with the given "options".
     ','line_number':136,'multiline':True]['text':' from OutOfLineExecutor (base of ThreadPoolInterface)','line_number':146,'multiline':False]['text':' from ThreadPoolInterface','line_number':149,'multiline':False]['text':'*
     * Joins all scheduled tasks. Can also spawn a free thread that ignores maxThread options to
     * execute pending tasks.
     ','line_number':153,'multiline':True]['text':'*
     * Blocks the caller until there are no pending tasks on this pool.
     *
     * It is legal to call this whether or not shutdown has been called, but if it is called
     * *before* shutdown() is called, there is no guarantee that there will still be no pending
     * tasks when the function returns.
     *
     * May be called multiple times, by multiple threads. May not be called by a task in the thread
     * pool.
     *
     * Not safe to use when shutdown can be called concurrently.
     ','line_number':159,'multiline':True]['text':'*
     * Returns statistics about the thread pool's utilization.
     ','line_number':173,'multiline':True]['text':' namespace mongo','line_number':183,'multiline':False]