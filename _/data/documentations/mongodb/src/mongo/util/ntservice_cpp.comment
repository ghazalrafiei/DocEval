['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':49,'multiline':False]['text':' namespace','line_number':65,'multiline':False]['text':' This implementation assumes that inputArgv was a valid argv to mongod.  That is, it assumes','line_number':228,'multiline':False]['text':' that options that take arguments received them, and options that do not take arguments did','line_number':229,'multiline':False]['text':' not.','line_number':230,'multiline':False]['text':' Pointer to just past the end of optionsWithoutArgumentsToStrip, for use as an "end"','line_number':235,'multiline':False]['text':' iterator.','line_number':236,'multiline':False]['text':' Pointer to just past the end of optionsWithArgumentsToStrip, for use as an "end"','line_number':251,'multiline':False]['text':' iterator.','line_number':252,'multiline':False]['text':' The current element of inputArgv is an option that we wish to strip, that takes','line_number':262,'multiline':False]['text':' no arguments.  Skip adding it to "result".','line_number':263,'multiline':False]['text':' The current element, and maybe the next one, form an option and its argument.','line_number':274,'multiline':False]['text':' Skip adding them to "result".','line_number':275,'multiline':False]['text':' The next argv value must be the argument to the parameter, so strip it.','line_number':277,'multiline':False]['text':' Service command lines all contain "--service".','line_number':286,'multiline':False]['text':' Make sure service doesn't already exist.','line_number':321,'multiline':False]['text':' TODO: Check to see if service is in "Deleting" status, suggest the user close down','line_number':322,'multiline':False]['text':' Services MMC snap-ins.','line_number':323,'multiline':False]['text':' If we are reinstalling the service, but SCM thinks it is installed, then wait','line_number':332,'multiline':False]['text':' and try again','line_number':333,'multiline':False]['text':' create new service','line_number':348,'multiline':False]['text':' Service Control Manager handle','line_number':349,'multiline':False]['text':' service name','line_number':350,'multiline':False]['text':' service display name','line_number':351,'multiline':False]['text':' desired access','line_number':352,'multiline':False]['text':' service type','line_number':353,'multiline':False]['text':' start type','line_number':354,'multiline':False]['text':' error control','line_number':355,'multiline':False]['text':' command line','line_number':356,'multiline':False]['text':' load order group','line_number':357,'multiline':False]['text':' tag id','line_number':358,'multiline':False]['text':' dependencies','line_number':359,'multiline':False]['text':' user account','line_number':360,'multiline':False]['text':' user account password','line_number':361,'multiline':False]['text':' TODO: If necessary grant user "Login as a Service" permission.','line_number':384,'multiline':False]['text':' service handle','line_number':397,'multiline':False]['text':' service type','line_number':398,'multiline':False]['text':' start type','line_number':399,'multiline':False]['text':' error control','line_number':400,'multiline':False]['text':' path','line_number':401,'multiline':False]['text':' load order group','line_number':402,'multiline':False]['text':' tag id','line_number':403,'multiline':False]['text':' dependencies','line_number':404,'multiline':False]['text':' user account','line_number':405,'multiline':False]['text':' user account password','line_number':406,'multiline':False]['text':' service display name','line_number':407,'multiline':False]['text':' set the service description','line_number':413,'multiline':False]['text':' This code sets the mongod service to auto-restart, forever. This might be a fine thing to do','line_number':422,'multiline':False]['text':' except that when mongod or Windows has a crash, the mongo.lock file is still around, so any','line_number':423,'multiline':False]['text':' attempt at a restart will immediately fail.  With auto-restart, we go into a loop, crashing','line_number':424,'multiline':False]['text':' and restarting, crashing and restarting, until someone comes in and disables the service or','line_number':425,'multiline':False]['text':' deletes the mongod.lock file.','line_number':426,'multiline':False]['text':'','line_number':427,'multiline':False]['text':' I'm leaving the old code here for now in case we solve this and are able to turn','line_number':428,'multiline':False]['text':' SC_ACTION_RESTART','line_number':429,'multiline':False]['text':' back on.','line_number':430,'multiline':False]['text':'','line_number':431,'multiline':False]['text':' set service recovery options','line_number':441,'multiline':False]['text':' Set the pre-shutdown notification with a timeout of 10 minutes.','line_number':451,'multiline':False]['text':' Windows will either wait for us to finish with SERVICE_STOPPED or it will timeout, whichever','line_number':452,'multiline':False]['text':' is first.','line_number':453,'multiline':False]['text':' 10 minutes','line_number':455,'multiline':False]['text':' stop service if its running','line_number':497,'multiline':False]['text':' Only report ERROR_SERVICE_SPECIFIC_ERROR when the exit is not clean','line_number':552,'multiline':False]['text':' Minimum of time we tell Windows to wait before we are guilty of a hung shutdown','line_number':565,'multiline':False]['text':' Run shutdownNoTerminate on a separate thread so we can report progress to Windows','line_number':568,'multiline':False]['text':' Note: Windows may still kill us for taking too long,','line_number':569,'multiline':False]['text':' On client OSes, SERVICE_CONTROL_SHUTDOWN has a 5 second timeout configured in','line_number':570,'multiline':False]['text':' HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control','line_number':571,'multiline':False]['text':' Stop the process','line_number':575,'multiline':False]['text':' Launch the packaged task in a thread. We needn't ever join it,','line_number':581,'multiline':False]['text':' so it doesn't even need a name.','line_number':582,'multiline':False]['text':' We periodically check if we are done exiting by polling at half of each wait interval','line_number':587,'multiline':False]['text':' During clean shutdown, ie NT SCM signals us, _serviceCallback returns here','line_number':603,'multiline':False]['text':' as part of the listener loop terminating.','line_number':604,'multiline':False]['text':' exitCleanly is supposed to return. If it blocks, some other thread must be exiting.','line_number':605,'multiline':False]['text':'','line_number':606,'multiline':False]['text':' Note: This triggers _serviceCallback, ie  ServiceMain,','line_number':622,'multiline':False]['text':' to stop by setting globalInShutdownDeprecated() == true','line_number':623,'multiline':False]['text':' Note: we will report exit status in initService','line_number':626,'multiline':False]['text':' Return NO_ERROR per MSDN even though we do nothing for this control code.','line_number':635,'multiline':False]['text':' Return NO_ERROR since we handle the STOP','line_number':639,'multiline':False]['text':' Return NO_ERROR since we handle the PRESHUTDOWN','line_number':643,'multiline':False]['text':' Return ERROR_CALL_NOT_IMPLEMENTED as the default','line_number':647,'multiline':False]['text':' Remove the Control-C handler so that we properly process SERVICE_CONTROL_SHUTDOWN','line_number':654,'multiline':False]['text':' via the service handler instead of CTRL_SHUTDOWN_EVENT via the Control-C Handler','line_number':655,'multiline':False]['text':' namespace ntservice','line_number':671,'multiline':False]['text':' namespace mongo','line_number':672,'multiline':False]