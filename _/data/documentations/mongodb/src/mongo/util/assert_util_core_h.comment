['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This header is separated from assert_util.h so that the low-level
 * dependencies of assert_util.h (e.g. mongo/base/status_with.h,
 * mongo/base/status.h, mongo/base/string_data.h) can use the `invariant` macro
 * without causing a circular include chain. It should never be included
 * directly in any other files.
 *
 *     [assert_util.h]
 *     |    |
 *     |    v
 *     |    [string_data.h, etc]
 *     |    |
 *     v    v
 *     [assert_util_core.h]
 ','line_number':37,'multiline':True]['text':' This overload is our legacy invariant, which just takes a condition to test.','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' ex)   invariant(!condition);','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':'       Invariant failure !condition some/file.cpp 528','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':' This invariant overload accepts a condition and a message, to be logged if the condition is','line_number':82,'multiline':False]['text':' false.','line_number':83,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' ex)   invariant(!condition, "hello!");','line_number':85,'multiline':False]['text':'','line_number':86,'multiline':False]['text':'       Invariant failure !condition "hello!" some/file.cpp 528','line_number':87,'multiline':False]['text':'','line_number':88,'multiline':False]['text':'*< MSVC workaround ','line_number':101,'multiline':True]['text':' Behaves like invariant in debug builds and is compiled out in release. Use for checks, which can','line_number':107,'multiline':False]['text':' potentially be slow or on a critical path.','line_number':108,'multiline':False]['text':' namespace mongo','line_number':124,'multiline':False]