['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' SChannel implementation','line_number':54,'multiline':False]['text':' #ifdef MONGO_CONFIG_SSL','line_number':59,'multiline':False]['text':'
 * @return the SSL version std::string prefixed with prefix and suffixed with suffix
 ','line_number':63,'multiline':True]['text':'*
 * Validation callback for setParameter 'opensslCipherConfig'.
 ','line_number':68,'multiline':True]['text':'*
 * Validation callback for setParameter 'disableNonTLSConnectionLogging'.
 ','line_number':73,'multiline':True]['text':' namespace mongo','line_number':77,'multiline':False]['text':' namespace transport','line_number':86,'multiline':False]['text':'
 * There are a number of OpenSSL types that we want to be able to use with unique_ptr that have a
 * custom OpenSSL deleter function. This template implements a stateless deleter for types with
 * C free functions:
 * using UniqueX509 = std::unique_ptr<X509, OpenSSLDeleter<decltype(::X509_free), ::X509_free>>;
 ','line_number':103,'multiline':True]['text':'*
 * Maintain per connection SSL state for the Sock class. Used by SSLManagerInterface to perform SSL
 * operations.
 ','line_number':119,'multiline':True]['text':' These represent the ASN.1 type bytes for strings used in an X509 DirectoryString','line_number':128,'multiline':False]['text':'*
 * Stores information about a globally unique OID.
 ','line_number':137,'multiline':True]['text':' An OID','line_number':147,'multiline':False]['text':' A brief description of the entity associated with the OID','line_number':148,'multiline':False]['text':' A long form description of the entity associated with the OID','line_number':149,'multiline':False]['text':'*
 * Counts of negogtiated version used by TLS connections.
 ','line_number':160,'multiline':True]['text':' The human readable 'thumbprint' encoded with 'hexblob::encode'.','line_number':177,'multiline':False]['text':' If the certificate was loaded from file, this is the file name. If empty,','line_number':181,'multiline':False]['text':' it means the certificate came from memory payload.','line_number':182,'multiline':False]['text':' If the certificate targets a particular cluster, this is cluster URI. If empty,','line_number':184,'multiline':False]['text':' it means the certificate is the default one for the local cluster.','line_number':185,'multiline':False]['text':'*
     * Creates an instance of SSLManagerInterface.
     * Note: if 'transientSSLParams' is set, this will create a transient instance of the manager,
     * otherwise, normally, this will be a global instance.
     ','line_number':205,'multiline':True]['text':'*
     * Creates an instance of SSLManagerInterface without transient SSL params.
     ','line_number':215,'multiline':True]['text':'*
     * Initiates a TLS connection.
     * Throws SocketException on failure.
     * @return a pointer to an SSLConnectionInterface. Resources are freed in
     * SSLConnectionInterface's destructor
     ','line_number':222,'multiline':True]['text':'*
     * Waits for the other side to initiate a TLS connection.
     * Throws SocketException on failure.
     * @return a pointer to an SSLConnectionInterface. Resources are freed in
     * SSLConnectionInterface's destructor
     ','line_number':230,'multiline':True]['text':'*
     * Fetches a peer certificate and validates it if it exists
     * Throws NetworkException on failure
     * @return a std::string containing the certificate's subject name.
     *
     * This version of parseAndValidatePeerCertificate is deprecated because it throws a
     * NetworkException upon failure. New code should prefer the version that returns
     * a StatusWith instead.
     ','line_number':238,'multiline':True]['text':'*
     * Gets the SSLConfiguration containing all information about the current SSL setup
     * @return the SSLConfiguration
     ','line_number':252,'multiline':True]['text':'*
     * @return true if this manager was created with 'transientSSLParams' to authenticate with
     * a particular remote cluster.
     ','line_number':258,'multiline':True]['text':'*
     * @return Connection string for the remote cluster if this manager is transient (isTransient()
     * == true), otherwise returns empty string.
     ','line_number':266,'multiline':True]['text':'*
     * Fetches the error text for an error code, in a thread-safe manner.
     ','line_number':276,'multiline':True]['text':' 120 from the SSL documentation for ERR_error_string','line_number':280,'multiline':False]['text':'*
     * Utility class to capture a temporary string with SSL error message in DynamicAttributes.
     ','line_number':288,'multiline':True]['text':'*
     * SSL wrappers
     ','line_number':300,'multiline':True]['text':'*
     * Initializes an OpenSSL context according to the provided settings. Only settings which are
     * acceptable on non-blocking connections are set. "direction" specifies whether the SSL_CTX
     * will be used to make outgoing connections or accept incoming connections.
     ','line_number':311,'multiline':True]['text':'*
     * Registers this SSL context as the owner of this manager.
     ','line_number':320,'multiline':True]['text':'*
     * Fetches a peer certificate and validates it if it exists. If validation fails, but weak
     * validation is enabled, the `subjectName` will be empty. If validation fails, and invalid
     * certificates are not allowed, a non-OK status will be returned. If validation is successful,
     * the `subjectName` will contain  the certificate's subject name, and any roles acquired by
     * X509 authorization will be returned in `roles`.
     * Further, the SNI Name will be captured into the `sni` value, when available.
     * The reactor is there to continue the execution of the chained statements to the Future
     * returned by OCSP validation. Can be a nullptr, but will make this function synchronous and
     * single threaded.
     ','line_number':326,'multiline':True]['text':'*
     * No-op function for SChannel and SecureTransport. Attaches stapled OCSP response to the
     * SSL_CTX obect.
     ','line_number':343,'multiline':True]['text':'*
     * Stop jobs after rotation is complete.
     ','line_number':349,'multiline':True]['text':'*
     * Get information about the certificates and CRL that will be used for outgoing and incoming
     * SSL connecctions.
     ','line_number':354,'multiline':True]['text':'*
 * Manages changes in the SSL configuration, such as certificate rotation, and updates a manager
 * appropriately.
 ','line_number':361,'multiline':True]['text':'*
     * Get the global SSLManagerCoordinator instance.
     ','line_number':369,'multiline':True]['text':'*
     * Access the current SSLManager safely.
     ','line_number':374,'multiline':True]['text':'*
     * Create a transient instance of SSL Manager.
     * Ownership of the new manager is passed to the invoker.
     ','line_number':379,'multiline':True]['text':'*
     * Perform certificate rotation safely.
     ','line_number':386,'multiline':True]['text':'*
 * Returns true if the `nameToMatch` is a valid match against the `certHostName` requirement from an
 * x.509 certificate.  Matches a remote host name to an x.509 host name, including wildcards.
 ','line_number':398,'multiline':True]['text':'*
 * Parse a UTF8 string from a DER encoded ASN.1 DisplayString.
 ','line_number':404,'multiline':True]['text':'*
 * Parse a binary blob of DER encoded ASN.1 into a set of RoleNames.
 ','line_number':409,'multiline':True]['text':'*
 * Parse a binary blob of DER encoded ASN.1 into a list of features (integers).
 * ASN.1 Integers can be very large, so they are stored in a vector of bytes.
 ','line_number':416,'multiline':True]['text':'*
 * Strip the trailing '.' in FQDN.
 ','line_number':422,'multiline':True]['text':'*
 * Escape a string per RFC 2253
 *
 * See "2.4 Converting an AttributeValue from ASN.1 to a String" in RFC 2243
 ','line_number':427,'multiline':True]['text':'*
 * Generates a new SSLX509Name containing only the attributes requested in filteredAttributes.
 * Note that multi-valued RDNs will be preserved if any of the attributes in the RDN are specified
 * in filteredAttributes.
 ','line_number':434,'multiline':True]['text':'*
 * Parse a DN from a string per RFC 4514
 ','line_number':442,'multiline':True]['text':'*
 * These functions map short names for RDN components to numeric OID's and the other way around.
 *
 * The x509ShortNameToOid returns boost::none if no mapping exists for that oid.
 ','line_number':447,'multiline':True]['text':'*
 * Platform neutral TLS version enum
 ','line_number':455,'multiline':True]['text':'*
 * Map SSL version to platform-neutral enum.
 ','line_number':466,'multiline':True]['text':'*
 * Record information about TLS versions and optionally log the TLS version
 ','line_number':471,'multiline':True]['text':'*
 * Emit a warning() explaining that a client certificate is about to expire.
 ','line_number':476,'multiline':True]['text':'*
 * Logs the SSL information by dispatching to either logCert() or logCRL().
 ','line_number':482,'multiline':True]['text':'*
 * Logs the certificate.
 * @param certType human-readable description of the certificate type.
 ','line_number':490,'multiline':True]['text':' namespace mongo','line_number':497,'multiline':False]['text':' #ifdef MONGO_CONFIG_SSL','line_number':498,'multiline':False]