['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Multithreaded Support for SSL.
 *
 * In order to allow OpenSSL to work in a multithreaded environment, you
 * may need to provide some callbacks for it to use for locking. The following code
 * sets up a vector of mutexes and provides a thread unique ID number.
 * The so-called SSLThreadInfo class encapsulates most of the logic required for
 * OpenSSL multithreaded support.
 *
 * OpenSSL before version 1.1.0 requires applications provide a callback which emits a thread
 * identifier. This ID is used to store thread specific ERR information. When a thread is
 * terminated, it must call ERR_remove_state or ERR_remove_thread_state. These functions may
 * themselves invoke the application provided callback. These IDs are stored in a hashtable with
 * a questionable hash function. They must be uniformly distributed to prevent collisions.
 ','line_number':58,'multiline':True]['text':'* A handle for the threadID resource. ','line_number':76,'multiline':True]['text':' The `guard` callback will cause an invocation of `getID`, so it must be destroyed first.','line_number':84,'multiline':False]['text':' Note: see SERVER-8734 for why we are using a recursive mutex here.','line_number':111,'multiline':False]['text':' Once the deadlock fix in OpenSSL is incorporated into most distros of','line_number':112,'multiline':False]['text':' Linux, this can be changed back to a nonrecursive mutex.','line_number':113,'multiline':False]['text':' Keep the static as a pointer to avoid it ever to be destroyed. It is referenced in the','line_number':115,'multiline':False]['text':' CallErrRemoveState thread local above.','line_number':116,'multiline':False]['text':' Machinery for producing IDs that are unique for the life of a thread.','line_number':139,'multiline':False]['text':' Protects _idNext and _idLast.','line_number':141,'multiline':False]['text':' Stores the next thread ID to use, if none already allocated.','line_number':142,'multiline':False]['text':' Stores old thread IDs, for reuse.','line_number':144,'multiline':False]['text':' OpenSSL 3 has a different FIPS design then previous OpenSSL. To load FIPS, we use the FIPS','line_number':160,'multiline':False]['text':' algorithm provider which we load into the "default" library context.','line_number':161,'multiline':False]['text':' Base provide has non-cryptographic algorihms (like encoding/decoding keys)','line_number':170,'multiline':False]['text':' Turn on FIPS mode if requested, OPENSSL_FIPS must be defined by the OpenSSL headers','line_number':195,'multiline':False]['text':' Add all digests and ciphers to OpenSSL's internal table','line_number':214,'multiline':False]['text':' so that encryption/decryption is backwards compatible','line_number':215,'multiline':False]['text':' Setup OpenSSL multithreading callbacks and mutexes','line_number':218,'multiline':False]['text':' namespace','line_number':222,'multiline':False]['text':' namespace mongo','line_number':223,'multiline':False]