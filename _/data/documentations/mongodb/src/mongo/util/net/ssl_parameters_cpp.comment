['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':75,'multiline':False]['text':'*
 * tlsCATrusts takes the form of an array of documents describing
 * a set of roles which a given certificate authority may grant.
 *
 * [
 *   {
 *     "sha256": "0123456789abcdef...",   // SHA256 digest of a CA, as hex.
 *     "roles": [                         // Array of grantable RoleNames
 *       { role: "read", db: "foo" },
 *       { role: "readWrite", "db: "bar" },
 *       // etc...
 *     ],
 *   },
 *   // { "sha256": "...", roles: [...]}, // Additional documents...
 * ]
 *
 * If this list has been set, and a client connects with a certificate
 * containing roles which it has not been authorized to grant,
 * then the connection will be refused.
 *
 * Wilcard roles may be defined by omitting the role and/or db portions:
 *
 *   { role: "", db: "foo" }       // May grant any role on the 'foo' DB.
 *   { role: "read", db: "" }      // May grant 'read' role on any DB.
 *   { role: "", db: "" }          // May grant any role on any DB.
 ','line_number':154,'multiline':True]['text':' Valid override object can contain at most one of attributes or extensionValue.','line_number':243,'multiline':False]['text':' namespace mongo','line_number':269,'multiline':False]['text':' Note that there is very little validation that we can do here.','line_number':277,'multiline':False]['text':' OpenSSL exposes no API to validate a cipher config string. The only way to figure out','line_number':278,'multiline':False]['text':' what a string maps to is to make an SSL_CTX object, set the string on it, then parse the','line_number':279,'multiline':False]['text':' resulting STACK_OF object. If provided an invalid entry in the string, it will silently','line_number':280,'multiline':False]['text':' ignore it. Because an entry in the string may map to multiple ciphers, or remove ciphers','line_number':281,'multiline':False]['text':' from the final set produced by the full string, we can't tell if any entry failed','line_number':282,'multiline':False]['text':' to parse.','line_number':283,'multiline':False]['text':' disableNonSSLConnectionLogging is a write-once setting.','line_number':298,'multiline':False]['text':' Once we've updated it, we're not allowed to specify the set-param again.','line_number':299,'multiline':False]['text':' Record that update in a second bool value.','line_number':300,'multiline':False]