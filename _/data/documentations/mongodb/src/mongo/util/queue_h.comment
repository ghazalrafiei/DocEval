['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Simple blocking queue with optional max size (by count or custom sizing function).
 * A custom sizing function can optionally be given.  By default the getSize function
 * returns 1 for each item, resulting in size equaling the number of items queued.
 *
 * Note that use of this class is deprecated.  This class only works with a single consumer and
 * a single producer.
 ','line_number':44,'multiline':True]['text':'*
     * Returns when enough space is available.
     *
     * NOTE: Should only be used in a single producer case.
     ','line_number':64,'multiline':True]['text':'*
     * Pushes all entries.
     *
     * If enough space is not available, this method will block.
     *
     * NOTE: Should only be used in a single producer case.
     ','line_number':74,'multiline':True]['text':' Block until enough space is available.','line_number':91,'multiline':False]['text':'*
     * The size as measured by the size function. Default to counting each item
     ','line_number':115,'multiline':True]['text':'*
     * The max size for this queue
     ','line_number':123,'multiline':True]['text':'*
     * The number/count of items in the queue ( _queue.size() )
     ','line_number':130,'multiline':True]['text':'*
     * blocks waiting for an object until maxSecondsToWait passes
     * if got one, return true and set in t
     * otherwise return false and t won't be changed
     ','line_number':178,'multiline':True]['text':' Obviously, this should only be used when you have','line_number':203,'multiline':False]['text':' only one consumer','line_number':204,'multiline':False]['text':' Obviously, this should only be used when you have','line_number':221,'multiline':False]['text':' only one consumer','line_number':222,'multiline':False]['text':'*
     * Returns the item most recently added to the queue or nothing if the queue is empty.
     ','line_number':233,'multiline':True]['text':'*
     * Returns when enough space is available.
     ','line_number':246,'multiline':True]['text':' namespace mongo','line_number':265,'multiline':False]