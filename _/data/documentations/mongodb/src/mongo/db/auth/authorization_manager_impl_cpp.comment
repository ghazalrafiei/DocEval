['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':47,'multiline':False]['text':' IWYU pragma: keep','line_number':52,'multiline':False]['text':' tenantId ','line_number':92,'multiline':True]['text':' NOLINT','line_number':106,'multiline':False]['text':' Mark the context as should expect tenant prefix for auth to signify that the NS string we','line_number':169,'multiline':False]['text':' are passing in may be prefixed with a tenantId.','line_number':170,'multiline':False]['text':' "db" op type','line_number':202,'multiline':False]['text':' Since we do not have notifications from both the user cache and the fail point itself,','line_number':237,'multiline':False]['text':' loop until our condition is satisfied. To avoid this loop, we would need a way to union','line_number':238,'multiline':False]['text':' notifications from both. This may be possible with a CancellationToken and a condition','line_number':239,'multiline':False]['text':' variable or with some novel Notifiable/Waitable-like type that synthesizes multiple','line_number':240,'multiline':False]['text':' notifications.','line_number':241,'multiline':False]['text':' Not yet finished.','line_number':254,'multiline':False]['text':' namespace','line_number':259,'multiline':False]['text':' If we know that a user exists, don't re-check.','line_number':323,'multiline':False]['text':' namespace','line_number':420,'multiline':False]['text':' X.509 will give us our roles for initial acquire, but we have to lose them during','line_number':436,'multiline':False]['text':' reacquire (for now) so reparse those roles into the request if not already present.','line_number':437,'multiline':False]['text':' Bypass cache and force a fresh load of the user.','line_number':446,'multiline':False]['text':' We have to inject into the cache in order to get a UserHandle.','line_number':449,'multiline':False]['text':' Track wait time and user cache access statistics for the current op for logging. An extra','line_number':457,'multiline':False]['text':' second of delay is added via the failpoint for testing.','line_number':458,'multiline':False]['text':' Make a good faith effort to acquire an up-to-date user object, since the one','line_number':487,'multiline':False]['text':' we've cached is marked "out-of-date."','line_number':488,'multiline':False]['text':' TODO SERVER-72678 avoid this edge case hack when rearchitecting user acquisition. This is','line_number':489,'multiline':False]['text':' necessary now to preserve the mechanismData from the original UserRequest while eliminating','line_number':490,'multiline':False]['text':' the roles. If the roles aren't reset to none, it will cause LDAP acquisition to be bypassed','line_number':491,'multiline':False]['text':' in favor of reusing the ones from before.','line_number':492,'multiline':False]['text':' Invalidate the named User, assuming no externally provided roles. When roles are defined','line_number':520,'multiline':False]['text':' externally, there exists no user document which may become invalid.','line_number':521,'multiline':False]['text':' First, get a snapshot of the UserHandles in the cache.','line_number':558,'multiline':False]['text':' Then, retrieve the corresponding Users from the backing store for users in the $external','line_number':564,'multiline':False]['text':' database. Compare each of these user objects with the cached user object and call','line_number':565,'multiline':False]['text':' insertOrAssign if they differ.','line_number':566,'multiline':False]['text':' If the user simply is not found, then just invalidate the cached user and continue.','line_number':573,'multiline':False]['text':' If any entries were refreshed, then the cache generation must be bumped for mongos to refresh','line_number':589,'multiline':False]['text':' its cache.','line_number':590,'multiline':False]['text':' cacheSize ','line_number':641,'multiline':True]['text':' Number of times to retry a user document that fetches due to transient AuthSchemaIncompatible','line_number':684,'multiline':False]['text':' errors. These errors should only ever occur during and shortly after schema upgrades.','line_number':685,'multiline':False]['text':' namespace mongo','line_number':720,'multiline':False]