['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * The set of attributes SASL mechanisms may possess.
 * Different SASL mechanisms provide different types of assurances to clients and servers.
 * These SecurityProperties are attached to mechanism types to allow reasoning about them.
 *
 * Descriptions of individual properties assumed while using a mechanism with the property.
 ','line_number':73,'multiline':True]['text':' Both clients and servers are assured of the other's identity.','line_number':81,'multiline':False]['text':' Messages sent across the wire don't include the plaintext password.','line_number':82,'multiline':False]['text':' Do not use. An enum value for internal bookkeeping.','line_number':83,'multiline':False]['text':'* Allows a set of SecurityProperties to be defined in an initializer list. ','line_number':86,'multiline':True]['text':'* A set of SecurityProperties which may be exhibited by a SASL mechanism. ','line_number':89,'multiline':True]['text':'* Returns true if the set contains all of the requested properties. ','line_number':98,'multiline':True]['text':'*
 * SASL server mechanisms are made by a corresponding factory.
 * Mechanisms have properties. We wish to be able to manipulate these properties both at runtime
 * and compile-time. These properties should apply to, and be accessible from, mechanisms and
 * factories. Client mechanisms/factories should be able to use the same property definitions.
 * This allows safe mechanism negotiation.
 *
 * The properties are set by creating a Policy class, and making mechanisms inherit from a helper
 * derived from the class. Factories are derived from a helper which uses the mechanism.
 ','line_number':113,'multiline':True]['text':'* Exposes properties of the SASL mechanism. ','line_number':124,'multiline':True]['text':'*
     * This returns a number that represents the "amount" of security provided by this mechanism to
     * determine the order in which it is offered to clients in the "hello" saslSupportedMechs
     * response.
     *
     * The value of securityLevel is arbitrary so long as the more secure mechanisms return a higher
     * value than the less secure mechanisms.
     *
     * For example, SCRAM-SHA-256 > SCRAM-SHA-1 > PLAIN
     ','line_number':131,'multiline':True]['text':'*
     * Returns true if the mechanism can be used for internal cluster authentication.
     * Currently only SCRAM-SHA-1/SCRAM-SHA-256 return true here.
     ','line_number':143,'multiline':True]['text':'*
 * Base class shared by all server-side SASL mechanisms.
 ','line_number':150,'multiline':True]['text':'*
     * Returns the principal name which this mechanism is performing authentication for.
     * This name is provided by the client, in the SASL messages they send the server.
     * This value may not be available until after some number of conversation steps have
     * occurred.
     *
     * This method is virtual so more complex implementations can obtain this value from a
     * non-member.
     ','line_number':160,'multiline':True]['text':'*
     * Returns the expiration time, if applicable, of the user's authentication for the given
     * mechanism. The default of boost::none indicates that the user will be authenticated
     * indefinitely on the session.
     ','line_number':173,'multiline':True]['text':'*
     * Appends mechanism specific info in BSON form. The schema of this BSON will vary by mechanism
     * implementation, thus this info is entirely diagnostic/for records.
     ','line_number':182,'multiline':True]['text':'*
     * Standard method in mongodb for determining if "authenticatedUser" may act as "requestedUser."
     *
     * The standard rule in MongoDB is simple.  The authenticated user name must be the same as the
     * requested user name.
     ','line_number':188,'multiline':True]['text':'*
     * Provides logic for determining if a user is a cluster member or an actual client for SASL
     * authentication mechanisms
     ','line_number':198,'multiline':True]['text':'*
     * Performs a single step of a SASL exchange. Takes an input provided by a client,
     * and either returns an error, or a response to be sent back.
     ','line_number':208,'multiline':True]['text':'*
     * Returns true if the conversation has completed successfully.
     ','line_number':226,'multiline':True]['text':'* Returns which database contains the user which authentication is being performed against. ','line_number':233,'multiline':True]['text':'*
     * Flexible bag of options for a saslStart command.
     ','line_number':236,'multiline':True]['text':' Be default, ignore any options provided.','line_number':240,'multiline':False]['text':'*
     * Create a UserRequest to send to AuthorizationSession.
     ','line_number':247,'multiline':True]['text':'*
     * Mechanism provided step implementation.
     * On failure, returns a non-OK status. On success, returns a tuple consisting of
     * a boolean indicating whether the mechanism has completed, and the string
     * containing the server's response to the client.
     ','line_number':255,'multiline':True]['text':'* Base class for server mechanism factories. ','line_number':269,'multiline':True]['text':'*
     * Returns if the factory is capable of producing a server mechanism object which could
     * authenticate the provided user.
     ','line_number':275,'multiline':True]['text':'* Produces a unique_ptr containing a server SASL mechanism.','line_number':281,'multiline':True]['text':'* Instantiates a class which provides runtime access to Policy properties. ','line_number':293,'multiline':True]['text':'* Instantiates a class which provides runtime access to Policy properties. ','line_number':320,'multiline':True]['text':'*
 * Tracks server-side SASL mechanisms. Mechanisms' factories are registered with this class during
 * server initialization. During authentication, this class finds a factory, to obtains a
 * mechanism from. Also capable of producing a list of mechanisms which would be valid for a
 * particular user.
 ','line_number':356,'multiline':True]['text':'*
     * Intialize the registry with a list of enabled mechanisms.
     ','line_number':367,'multiline':True]['text':'*
     * Sets a new list of enabled mechanisms - used in testing.
     ','line_number':373,'multiline':True]['text':'*
     * Produces a list of SASL mechanisms which can be used to authenticate as a user.
     * This will populate 'builder' with an Array called saslSupportedMechs containing each
     * mechanism the user supports.
     ','line_number':378,'multiline':True]['text':'*
     * Gets a mechanism object which corresponds to the provided name.
     * The mechanism will be able to authenticate users which exist on the
     * "authenticationDatabase".
     ','line_number':387,'multiline':True]['text':'*
     * Registers a factory T to produce a type of SASL mechanism.
     * If 'internal' is false, the factory will be used to create mechanisms for authentication
     * attempts on $external. Otherwise, the mechanism may be used for any database but $external.
     * This allows distinct mechanisms with the same name for the servers' different authentication
     * domains.
     ','line_number':395,'multiline':True]['text':' Stores factories which make mechanisms for all databases other than $external','line_number':446,'multiline':False]['text':' Stores factories which make mechanisms exclusively for $external','line_number':448,'multiline':False]['text':' namespace mongo','line_number':469,'multiline':False]