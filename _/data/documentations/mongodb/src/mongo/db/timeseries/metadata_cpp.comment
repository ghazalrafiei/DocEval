['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' BSONObjIteratorSorted provides an abstraction similar to what this function does. However it','line_number':55,'multiline':False]['text':' is using a lexical comparison that is slower than just doing a binary comparison of the field','line_number':56,'multiline':False]['text':' names. That is all we need here as we are looking to create something that is binary','line_number':57,'multiline':False]['text':' comparable no matter of field order provided by the user.','line_number':58,'multiline':False]['text':' Helper that extracts the necessary data from a BSONElement that we can sort and re-construct','line_number':60,'multiline':False]['text':' the same BSONElement from.','line_number':61,'multiline':False]['text':' Include type byte before field name','line_number':64,'multiline':False]['text':' Include null terminator after field name','line_number':65,'multiline':False]['text':' Put all elements in a buffer, sort it and then continue normalize in sorted order','line_number':75,'multiline':False]['text':' namespace','line_number':103,'multiline':False]['text':' namespace mongo::timeseries::metadata','line_number':123,'multiline':False]