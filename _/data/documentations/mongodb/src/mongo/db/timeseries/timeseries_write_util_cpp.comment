['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Builds the data field of a bucket document. Computes the min and max fields if necessary.','line_number':106,'multiline':False]['text':' Rounds the minimum timestamp and updates the min time field.','line_number':137,'multiline':False]['text':'metaField=','line_number':143,'multiline':True]['text':' Builds a complete and new bucket document.','line_number':150,'multiline':False]['text':' Makes a write command request base and sets the statement Ids if provided a non-empty vector.','line_number':196,'multiline':False]['text':' The schema validation configured in the bucket collection is intended for direct','line_number':200,'multiline':False]['text':' operations by end users and is not applicable here.','line_number':201,'multiline':False]['text':' Builds the delta update oplog entry from a time-series insert write batch.','line_number':211,'multiline':False]['text':' doc_diff::kSubDiffSectionFieldPrefix + <field name> => {<index_0>: ..., <index_1>:}','line_number':231,'multiline':False]['text':' doc_diff::kSubDiffSectionFieldPrefix + <field name>','line_number':247,'multiline':False]['text':' Existing 'data' fields with measurements require different treatment from fields','line_number':251,'multiline':False]['text':' not observed before (missing from control.min and control.max).','line_number':252,'multiline':False]['text':' Existing 'data' fields with measurements require different treatment from fields','line_number':262,'multiline':False]['text':' not observed before (missing from control.min and control.max).','line_number':263,'multiline':False]['text':' Performs the storage write of an update to a time-series bucket document.','line_number':282,'multiline':False]['text':' Assume all indexes are affected.','line_number':307,'multiline':False]['text':'indexesAffected','line_number':335,'multiline':True]['text':' namespace','line_number':345,'multiline':False]['text':' TODO SERVER-80653: Handle bucket compression failure.','line_number':416,'multiline':False]['text':' A bucket will be fully deleted if no measurements are passed in.','line_number':425,'multiline':False]['text':' Collection has no metadata field.','line_number':436,'multiline':False]['text':' Look for the metadata field on this bucket and return it if present.','line_number':439,'multiline':False]['text':' TODO SERVER-80653: Handle bucket compression failure.','line_number':444,'multiline':False]['text':' TODO SERVER-80653: Handle bucket compression failure.','line_number':490,'multiline':False]['text':' Generate the diff and apply it against the previously decompressed bucket document.','line_number':522,'multiline':False]['text':' Holds the compressed bucket document that's currently on-disk prior to this write batch','line_number':528,'multiline':False]['text':' running.','line_number':529,'multiline':False]['text':' TODO SERVER-80653: Handle bucket compression failure.','line_number':535,'multiline':False]['text':' Clear the previous compression state if we're inserting an uncompressed bucket due to','line_number':541,'multiline':False]['text':' compression failure.','line_number':542,'multiline':False]['text':' Holds the bucket document with the operations from the write batch applied when the always','line_number':547,'multiline':False]['text':' use compressed buckets feature flag is disabled. When enabled, holds the compressed version','line_number':548,'multiline':False]['text':' of the bucket document mentioned earlier.','line_number':549,'multiline':False]['text':' Make sure the document hasn't changed since we read it into the BucketCatalog.','line_number':554,'multiline':False]['text':' This should not happen, but since we can double-check it here, we can guard','line_number':555,'multiline':False]['text':' against the missed update that would result from simply replacing with 'after'.','line_number':556,'multiline':False]['text':'bucketId=','line_number':565,'multiline':True]['text':'transformationFunc=','line_number':566,'multiline':True]['text':' Avoids reopening existing buckets for the inserts of the updated measurements from','line_number':585,'multiline':False]['text':' time-series user updates.','line_number':586,'multiline':False]['text':' Resort to Query-Based reopening approach.','line_number':610,'multiline':False]['text':' Ensure we have a index on meta and time for the time-series','line_number':613,'multiline':False]['text':' collection before performing the query. Without the index we','line_number':614,'multiline':False]['text':' will perform a full collection scan which could cause us to','line_number':615,'multiline':False]['text':' take a performance hit.','line_number':616,'multiline':False]['text':' Run an aggregation to find a suitable bucket to reopen.','line_number':620,'multiline':False]['text':' secondaryOk
                                                                           ','line_number':626,'multiline':True]['text':'
                                                                           useExhaust','line_number':627,'multiline':True]['text':' Need to wait for another operation to finish, then retry. This could be','line_number':655,'multiline':False]['text':' another reopening request or a previously prepared write batch for the same','line_number':656,'multiline':False]['text':' series (metaField value). The easiest way to retry here is to reset swResult','line_number':657,'multiline':False]['text':' to a WriteConflict, which will automatically re-run the while loop.','line_number':658,'multiline':False]['text':' If there is an era offset (between the bucket we want to reopen and the','line_number':673,'multiline':False]['text':' catalog's current era), we could hit a WriteConflict error indicating we will','line_number':674,'multiline':False]['text':' need to refetch a bucket document as it is potentially stale.','line_number':675,'multiline':False]['text':'fromUpdates=','line_number':727,'multiline':True]['text':' Groups all operations in one or several chained oplog entries to ensure the writes are','line_number':760,'multiline':False]['text':' replicated atomically.','line_number':761,'multiline':False]['text':' Appends the stmtId for upsert.','line_number':790,'multiline':False]['text':' Starts tracking the newly inserted bucket in the main bucket catalog as a direct','line_number':850,'multiline':False]['text':' write to prevent other writers from modifying it.','line_number':851,'multiline':False]['text':' namespace mongo::timeseries','line_number':976,'multiline':False]