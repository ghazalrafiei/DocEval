['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' mongod or mongos','line_number':66,'multiline':False]['text':' cwd of when process started','line_number':67,'multiline':False]['text':' --port','line_number':69,'multiline':False]['text':' TODO: SERVER-80343 Remove this ifdef once gRPC is compiled on all variants','line_number':76,'multiline':False]['text':' --bind_ip','line_number':86,'multiline':False]['text':' --rest','line_number':88,'multiline':False]['text':' --listenBacklog','line_number':90,'multiline':False]['text':' --quiet','line_number':92,'multiline':False]['text':' --configsvr/--shardsvr','line_number':94,'multiline':False]['text':' --maintenanceMode','line_number':95,'multiline':False]['text':' --routerPort','line_number':97,'multiline':False]['text':' This is derived from other settings during startup.','line_number':98,'multiline':False]['text':' --objcheck','line_number':100,'multiline':False]['text':' Shell parameter, used for testing only, to tell the shell to crash on InvalidBSON errors.','line_number':102,'multiline':False]['text':' Can be paired with --objcheck so that extra BSON validation occurs.','line_number':103,'multiline':False]['text':' --crashOnInvalidBSONError','line_number':104,'multiline':False]['text':' --profile','line_number':106,'multiline':False]['text':' --time in ms that is "slow"','line_number':108,'multiline':False]['text':' --samplerate rate at which to sample slow queries','line_number':109,'multiline':False]['text':' --localThreshold in ms to consider a node local','line_number':110,'multiline':False]['text':' --nounixsocket','line_number':112,'multiline':False]['text':' --fork','line_number':113,'multiline':False]['text':' UNIX domain socket directory','line_number':114,'multiline':False]['text':' Maximum number of simultaneous open connections.','line_number':116,'multiline':False]['text':' permissions for the UNIX domain socket','line_number':120,'multiline':False]['text':' Path to keyfile, or empty if none.','line_number':122,'multiline':False]['text':' Path to pid file, or empty if none.','line_number':123,'multiline':False]['text':' Path to time zone info directory, or empty if none.','line_number':124,'multiline':False]['text':' Path to log file, if logging to a file; otherwise, empty.','line_number':126,'multiline':False]['text':' True if logging to a file in append mode.','line_number':129,'multiline':False]['text':' True if logging should rename log files on rotate','line_number':130,'multiline':False]['text':' True if logging to syslog; must not be set if logpath is set.','line_number':131,'multiline':False]['text':' Facility used when appending messages to the syslog.','line_number':132,'multiline':False]['text':' for `--fork`. Write to it and close it when daemon service is up.','line_number':135,'multiline':False]['text':' --transitionToAuth, mixed mode for rolling auth upgrade','line_number':147,'multiline':False]['text':' for the YAML config, sharding._overrideShardIdentity. Can only be used when in','line_number':151,'multiline':False]['text':' queryableBackupMode.','line_number':152,'multiline':False]['text':' True if the current binary version is an LTS Version.','line_number':155,'multiline':False]['text':' TODO: SERVER-80343 Remove this ifdef once gRPC is compiled on all variants','line_number':158,'multiline':False]['text':'*
     * Represents a "snapshot" of the in-memory FCV at a particular point in time.
     * This is useful for callers who need to perform multiple FCV checks and expect the checks to
     * be performed on a consistent (but possibly stale) FCV value.
     *
     * For example: checking isVersionInitialized() && isLessThan() with the same FCVSnapshot value
     * would have the guarantee that if the FCV value is initialized during isVersionInitialized(),
     * it will still be during isLessThan().
     *
     * Note that this can get stale, so if you call acquireFCVSnapshot() once, and then update
     * serverGlobalParams.mutableFCV, and expect to use the new FCV value, you must acquire another
     * snapshot. In general, if you want to check multiple properties of the FCV at a specific point
     * in time, you should use one snapshot. For example, if you want to check both
     * that the FCV is initialized and if it's less than some version, and that featureFlagXX is
     * enabled on this FCV, this should all be using the same FCVSnapshot of the FCV value.
     *
     * But if you're doing multiple completely separate FCV checks at different points in time, such
     * as over multiple functions, or multiple distinct feature flag enablement checks (i.e.
     * featureFlagXX.isEnabled && featureFlagYY.isEnabled), you should get a new FCV snapshot for
     * each check since the old one may be stale.
     ','line_number':164,'multiline':True]['text':'*
         * Creates an immutable "snapshot" of the passed in FCV.
         ','line_number':188,'multiline':True]['text':'*
         * On startup, the featureCompatibilityVersion may not have been explicitly set yet. This
         * exposes the actual state of the featureCompatibilityVersion if it is uninitialized.
         ','line_number':193,'multiline':True]['text':'*
         * This safe getter for the featureCompatibilityVersion parameter ensures the parameter has
         * been initialized with a meaningful value.
         ','line_number':201,'multiline':True]['text':' This function is to be used for generic FCV references only, and not for FCV-gating.','line_number':242,'multiline':False]['text':' (Generic FCV reference): This FCV reference should exist across LTS binary versions.','line_number':248,'multiline':False]['text':'*
         * Logs the current FCV global state.
         * context: the context in which this function was called, to differentiate logs (e.g.
         * startup, log rotation).
         ','line_number':254,'multiline':True]['text':'*
     * Represents the in-memory FCV that can be changed.
     * This should only be used to set/reset the in-memory FCV, or get a snapshot of the current
     * in-memory FCV. It *cannot* be used to check the actual value of the in-memory FCV, and in
     * particular, check the value over multiple function calls. This is because the in-memory FCV
     * might change in between those calls (such as during initial sync). Instead, use
     * acquireFCVSnapshot() to get a snapshot of the FCV, and use the functions available on
     * FCVSnapshot.
     ','line_number':265,'multiline':True]['text':'*
         * Gets an immutable copy/snapshot of the current FCV so that callers can check
         * the FCV value at a particular point in time over multiple function calls
         * without the snapshot value changing.
         * Note that this snapshot might be when the FCV is uninitialized, which could happen
         * during initial sync. The caller of this function and the subsequent functions
         * within FCVSnapshot must handle that case.
         ','line_number':277,'multiline':True]['text':' Const reference for featureCompatibilityVersion checks.','line_number':302,'multiline':False]['text':' Feature validation differs depending on the role of a mongod in a replica set. Replica set','line_number':305,'multiline':False]['text':' primaries can accept user-initiated writes and validate based on the feature compatibility','line_number':306,'multiline':False]['text':' version. A secondary always validates in the upgraded mode so that it can sync new features,','line_number':307,'multiline':False]['text':' even when in the downgraded feature compatibility mode.','line_number':308,'multiline':False]['text':' namespace mongo','line_number':332,'multiline':False]