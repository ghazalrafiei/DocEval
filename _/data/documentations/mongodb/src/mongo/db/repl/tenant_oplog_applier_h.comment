['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This class reads oplog entries from a tenant migration, then applies those entries to the
 * (real) oplog, then writes out no-op entries corresponding to the original oplog entries
 * from the oplog buffer.  Applier will not apply, but will write no-op entries for,
 * entries before the applyFromOpTime.
 *
 ','line_number':74,'multiline':True]['text':'*
     * Used to configure behavior of this TenantOplogApplier.
     *','line_number':101,'multiline':True]['text':' Safety rail to prevent incorrect values for 'isDataConsistent' &','line_number':111,'multiline':False]['text':' 'allowNamespaceNotFoundErrorsOnCrudOps' for future oplog application modes.','line_number':112,'multiline':False]['text':'*
     * Return a future which will be notified when that optime has been reached.  Future will
     * contain donor and recipient optime of last oplog entry in batch where donor optime is greater
     * than passed-in time. To be noted, recipient optime returned in the future can be null if the
     * tenant oplog applier has never applied any tenant oplog entries (i.e., non resume token no-op
     * entries) till that batch.
     ','line_number':134,'multiline':True]['text':'*
     * Returns the optime the applier will start applying from.
     ','line_number':148,'multiline':True]['text':'*
     * Returns the timestamp the applier will resume batching from.
     ','line_number':153,'multiline':True]['text':' Indicates an oplog entry should be ignored and not applied.','line_number':166,'multiline':False]['text':'*
     * Acquires Intent Exclusive (IX) lock for each tenant referred to by oplog entries [entryBegin;
     * entryEnd) and returns lock objects.
     ','line_number':201,'multiline':True]['text':'*
     * Sets the _finalStatus to the new status if and only if the old status is "OK".
     ','line_number':210,'multiline':True]['text':' All member variables are labeled with one of the following codes indicating the','line_number':220,'multiline':False]['text':' synchronization rules for accessing them.','line_number':221,'multiline':False]['text':'','line_number':222,'multiline':False]['text':' (R)  Read-only in concurrent operation; no synchronization required.','line_number':223,'multiline':False]['text':' (S)  Self-synchronizing; access according to class's own rules.','line_number':224,'multiline':False]['text':' (M)  Reads and writes guarded by _mutex','line_number':225,'multiline':False]['text':' (X)  Access only allowed from the main flow of control called from run() or constructor.','line_number':226,'multiline':False]['text':' Handles consuming oplog entries from the OplogBuffer for oplog application.','line_number':228,'multiline':False]['text':' (R)','line_number':229,'multiline':False]['text':' (R)','line_number':230,'multiline':False]['text':' (R)','line_number':231,'multiline':False]['text':' (R)','line_number':232,'multiline':False]['text':' All no-op entries written by this migration should have OpTime greater than this','line_number':233,'multiline':False]['text':' OpTime.','line_number':234,'multiline':False]['text':' (R)','line_number':235,'multiline':False]['text':' For multi-tenant migration protocol, _tenantId is set.','line_number':236,'multiline':False]['text':' But, for shard merge protcol, _tenantId is empty.','line_number':237,'multiline':False]['text':' (R)','line_number':238,'multiline':False]['text':' (R)','line_number':240,'multiline':False]['text':' (R)','line_number':242,'multiline':False]['text':' Pool of worker threads for writing ops to the databases.','line_number':243,'multiline':False]['text':' Not owned by us.','line_number':244,'multiline':False]['text':' (S)','line_number':245,'multiline':False]['text':' Keeps track of last applied donor and recipient optimes by the tenant oplog applier.','line_number':246,'multiline':False]['text':' This gets updated only on batch boundaries.','line_number':247,'multiline':False]['text':' (M)','line_number':248,'multiline':False]['text':' The timestamp to resume batching from. A null timestamp indicates that the oplog applier','line_number':250,'multiline':False]['text':' is starting fresh (not a retry), and will start batching from the beginning of the oplog','line_number':251,'multiline':False]['text':' buffer.','line_number':252,'multiline':False]['text':' (R)','line_number':253,'multiline':False]['text':' (M)','line_number':254,'multiline':False]['text':' (M)','line_number':255,'multiline':False]['text':' (X)','line_number':256,'multiline':False]['text':' (M)','line_number':257,'multiline':False]['text':' (M)','line_number':258,'multiline':False]['text':' (R)','line_number':259,'multiline':False]['text':'*
 * Creates the default thread pool for writer tasks.
 ','line_number':262,'multiline':True]['text':' namespace repl','line_number':268,'multiline':False]['text':' namespace mongo','line_number':269,'multiline':False]