['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "cxxabi.h"','line_number':32,'multiline':False]['text':' Transition directly from PreStart to Complete if not started yet.','line_number':132,'multiline':False]['text':' Nothing to do if we are already in ShuttingDown or Complete state.','line_number':138,'multiline':False]['text':' Attach a dummy term so that the find command skips ticket acquisition ','line_number':193,'multiline':True]['text':' find network timeout ','line_number':200,'multiline':True]['text':' getMore network timeout ','line_number':201,'multiline':True]['text':' This query is structured so that it is executed on the sync source using the "oplog start','line_number':207,'multiline':False]['text':' hack". The sync source should recognize that it can optimize an oplog query with a $gt/$gte','line_number':208,'multiline':False]['text':' predicate over "ts".','line_number':209,'multiline':False]['text':' find network timeout ','line_number':224,'multiline':True]['text':' getMore network timeout ','line_number':225,'multiline':True]['text':' TODO SERVER-27499 need to check if _state is kShuttingDown inside the mutex.','line_number':230,'multiline':False]['text':' Must schedule fetcher inside lock in case fetcher's callback gets invoked immediately by task','line_number':231,'multiline':False]['text':' executor.','line_number':232,'multiline':False]['text':' Fetcher destruction blocks on all outstanding callbacks. If we are currently in a','line_number':235,'multiline':False]['text':' Fetcher-related callback, we can't destroy the Fetcher just yet, so we assign it to a','line_number':236,'multiline':False]['text':' temporary unique pointer to allow the destruction to run to completion.','line_number':237,'multiline':False]['text':' Remote oplog is empty.','line_number':252,'multiline':False]['text':' First document in remote oplog is empty.','line_number':265,'multiline':False]['text':' First document in remote oplog is empty.','line_number':291,'multiline':False]['text':' We got an error.','line_number':324,'multiline':False]['text':' remoteEarliestOpTime may come from a very old config, so we cannot compare their terms.','line_number':345,'multiline':False]['text':' We're too stale to use this sync source.','line_number':347,'multiline':False]['text':' If all the viable sync sources are too far ahead of us (i.e. we are "too stale" relative','line_number':362,'multiline':False]['text':' each sync source), we will want to return the starting timestamp of the sync source','line_number':363,'multiline':False]['text':' candidate that is closest to us. See SyncSourceResolverResponse::earliestOpTimeSeen.','line_number':364,'multiline':False]['text':' We use "earliestOpTimeSeen" to keep track of the current minimum starting timestamp.','line_number':365,'multiline':False]['text':' If we should not proceed with the rollback-via-refetch checks, we can safely return the','line_number':375,'multiline':False]['text':' candidate with an uninitialized rbid.','line_number':376,'multiline':False]['text':' Once a work is scheduled, nothing prevents it finishing. We need the mutex to protect the','line_number':389,'multiline':False]['text':' access of member variables after scheduling, because otherwise the scheduled callback could','line_number':390,'multiline':False]['text':' finish and allow the destructor to fire before we access the member variables.','line_number':391,'multiline':False]['text':' Schedule fetcher to look for '_requiredOpTime' in the remote oplog.','line_number':442,'multiline':False]['text':' Unittest requires that this kind of failure be handled specially.','line_number':443,'multiline':False]['text':' We got an error.','line_number':497,'multiline':False]['text':' namespace repl','line_number':592,'multiline':False]['text':' namespace mongo','line_number':593,'multiline':False]