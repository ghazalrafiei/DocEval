['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Groups consecutive insert operations on the same namespace and applies the combined operation
 * as a single oplog entry.
 * Advances the the std::vector<ApplierOperation> iterator if the grouped insert is applied
 * successfully.
 ','line_number':47,'multiline':True]['text':'*
     * Attempts to group insert operations starting at 'iter'.
     * If the grouped insert is applied successfully, returns the iterator to the last standalone
     * insert operation included in the applied grouped insert.
     ','line_number':70,'multiline':True]['text':' _nextOpToGroup is used to prevent retrying bad group inserts by marking the next op to','line_number':78,'multiline':False]['text':' attempt group inserts and not allowing further group inserts until all previous ops have been','line_number':79,'multiline':False]['text':' processed.','line_number':80,'multiline':False]['text':' Used for constructing search bounds when grouping inserts.','line_number':83,'multiline':False]['text':' Passed to _applyOplogEntryOrGroupedInserts when applying grouped inserts.','line_number':86,'multiline':False]['text':' The function that does the actual oplog application.','line_number':91,'multiline':False]['text':' namespace repl','line_number':95,'multiline':False]['text':' namespace mongo','line_number':96,'multiline':False]