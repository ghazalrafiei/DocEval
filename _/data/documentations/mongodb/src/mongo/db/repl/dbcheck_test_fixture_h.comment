['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
     *  Inserts 'numDocs' docs with _id values starting at 'startIDNum' and incrementing for each
     * document. Callers must avoid duplicate key insertions. These keys always contain a value in
     * the 'a' field. If `duplicateFieldNames` is true, the inserted doc will have a duplicated
     * field name so that it fails the kExtended mode of BSON validate check.
     ','line_number':59,'multiline':True]['text':'*
     * Insert a document with an invalid UUID (incorrect length).
     ','line_number':71,'multiline':True]['text':'*
     * Deletes 'numDocs' docs from kNss with _id values starting at 'startIDNum' and incrementing
     * for each document.
     ','line_number':78,'multiline':True]['text':'*
     * Inserts documents without updating corresponding index tables to generate missing index
     * entries for the inserted documents.
     ','line_number':84,'multiline':True]['text':'*
     * Inserts and deletes documents but skips cleaning up corresponding index tables to generate
     * extra index entries.
     ','line_number':93,'multiline':True]['text':'*
     * Builds an index on kNss. 'indexKey' specifies the index key, e.g. {'a': 1};
     ','line_number':102,'multiline':True]['text':'*
     *  Drops the index on kNss.
     ','line_number':107,'multiline':True]['text':'*
     * Runs hashing and the missing keys check for kNss.
     ','line_number':112,'multiline':True]['text':'*
     *  Creates a secondary index check params struct to define the dbCheck operation.
     ','line_number':123,'multiline':True]['text':'*
     * Creates a DbCheckCollectionInfo struct.
     ','line_number':132,'multiline':True]['text':'*
     * Fetches the number of entries in the health log that match the given query.
     ','line_number':140,'multiline':True]['text':' namespace mongo','line_number':160,'multiline':False]