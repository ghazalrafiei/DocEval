['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace executor','line_number':52,'multiline':False]['text':'*
 * Holds current term and last committed optime necessary to populate find/getMore command requests.
 ','line_number':58,'multiline':True]['text':'*
 * This class represents the interface the InitialSyncer uses to interact with the
 * rest of the system.  All functionality of the InitialSyncer that would introduce
 * dependencies on large sections of the server code and thus break the unit testability of
 * InitialSyncer should be moved here.
 ','line_number':63,'multiline':True]['text':'*
     * Returns task executor for scheduling tasks to be run asynchronously.
     ','line_number':78,'multiline':True]['text':'*
     * Returns the current term and last committed optime.
     * Returns (OpTime::kUninitializedTerm, OpTime()) if not available.
     ','line_number':84,'multiline':True]['text':'*
     * Forwards the parsed metadata in the query results to the replication system.
     ','line_number':90,'multiline':True]['text':'*
     * Evaluates quality of sync source. Accepts the current sync source; the last optime on this
     * sync source (from metadata); and whether this sync source has a sync source (also from
     * metadata).
     ','line_number':96,'multiline':True]['text':'*
     * Evaluates quality of sync source. This is intended to be called on error when no
     * current metadata is available.
     ','line_number':107,'multiline':True]['text':'*
     * This function creates an oplog buffer of the type specified at server startup.
     ','line_number':114,'multiline':True]['text':'*
     * Creates an OplogApplier using the provided options.
     ','line_number':120,'multiline':True]['text':'*
     * Returns the current in-memory replica set config if there is one, or an error why there
     * isn't.
     ','line_number':131,'multiline':True]['text':'*
     * Returns the current stored replica set config if there is one, or an error why there isn't.
     ','line_number':137,'multiline':True]['text':'*
     * Stores the replica set config document in local storage, or returns an error.
     ','line_number':142,'multiline':True]['text':'*
     * Returns the current stored replica set "last vote" if there is one, or an error why there
     * isn't.
     ','line_number':147,'multiline':True]['text':'*
     * Returns the replication journal listener.
     ','line_number':153,'multiline':True]['text':' namespace repl','line_number':159,'multiline':False]['text':' namespace mongo','line_number':160,'multiline':False]