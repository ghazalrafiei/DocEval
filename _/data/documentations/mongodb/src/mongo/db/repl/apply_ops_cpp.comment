['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' If enabled, causes loop in _applyOps() to hang after applying current operation.','line_number':83,'multiline':False]['text':' Some tests require operating with invalid names.','line_number':95,'multiline':False]['text':' TODO: SERVER-83496 Current tests assume that we do not validate the lock acquisition at','line_number':109,'multiline':False]['text':' this stage, and stop the execution. Instead, the test expects to modify system.views. We','line_number':110,'multiline':False]['text':' intentionally do not return error and we let the execution continue without the lock.','line_number':111,'multiline':False]['text':' This behavior should be probably deprecated once the tests use a specific test mechanism','line_number':112,'multiline':False]['text':' to inject errors in the catalog','line_number':113,'multiline':False]['text':' apply','line_number':126,'multiline':False]['text':' Apply each op in the given 'applyOps' command object.','line_number':132,'multiline':False]['text':' Ignore 'n' operations.','line_number':134,'multiline':False]['text':' opObj["ns"] contains a tenantId prefixed namespace if there is tenancy.','line_number':139,'multiline':False]['text':' Need to check this here, or OldClientContext may fail an invariant.','line_number':143,'multiline':False]['text':' This method is explicitly called without locks in spite of the','line_number':169,'multiline':False]['text':' _inlock suffix. dropDatabase cannot hold any locks for execution','line_number':170,'multiline':False]['text':' of the operation due to potential replication waits.','line_number':171,'multiline':False]['text':' If the namespace and uuid passed into applyOps point to different','line_number':182,'multiline':False]['text':' namespaces, throw an error.','line_number':183,'multiline':False]['text':' For idempotency reasons, return success on delete operations.','line_number':205,'multiline':False]['text':' We return the status rather than merely aborting so failure of CRUD','line_number':223,'multiline':False]['text':' ops doesn't stop the applyOps from trying to process the rest of the','line_number':224,'multiline':False]['text':' ops.  This is to leave the door open to parallelizing CRUD op','line_number':225,'multiline':False]['text':' application in the future.','line_number':226,'multiline':False]['text':' namespace','line_number':268,'multiline':False]['text':' Normally the contract for applyOps is to hold a global exclusive lock during','line_number':326,'multiline':False]['text':' application of ops. However, dropDatabase must specially not hold locks because it','line_number':327,'multiline':False]['text':' may need to await replication internally during application. Additionally, since','line_number':328,'multiline':False]['text':' dropDatabase is abnormal in locking behavior, applyOps is only allowed to apply a','line_number':329,'multiline':False]['text':' dropDatabase op singly, not in combination with additional ops.','line_number':330,'multiline':False]['text':' opsBuilder ','line_number':337,'multiline':True]['text':' namespace repl','line_number':340,'multiline':False]['text':' namespace mongo','line_number':341,'multiline':False]