['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
     * Initializes the service context and task executor.
     ','line_number':86,'multiline':True]['text':'*
     * Creates a collection with the given namespace and options.
     ','line_number':91,'multiline':True]['text':'*
     * Inserts a single document into the collection namespace 'nss'.
     ','line_number':101,'multiline':True]['text':'*
     * Inserts a document into the oplog.
     ','line_number':106,'multiline':True]['text':'*
     * Creates an oplog entry with a recordId for a CRUD operation (insert, update, delete). Also
     * works for creating a no-op entry.
     ','line_number':111,'multiline':True]['text':'*
     * Creates an oplog entry with a recordId for a command operation.
     ','line_number':123,'multiline':True]['text':'*
     * Creates an oplog entry with a recordId for a command operation. The oplog entry will not have
     * a "ts" or "wall" field. This is used for creating inner ops for applyOps entries.
     ','line_number':134,'multiline':True]['text':' OperationContext provided to test cases for storage layer operations.','line_number':146,'multiline':False]['text':' ReplicationCoordinator mock implementation for rollback tests.','line_number':149,'multiline':False]['text':' Owned by service context.','line_number':150,'multiline':False]['text':' ReplicationProcess used to access consistency markers.','line_number':158,'multiline':False]['text':' DropPendingCollectionReaper used to clean up and roll back dropped collections.','line_number':161,'multiline':False]['text':' Increase rollback log component verbosity for unit tests.','line_number':166,'multiline':False]['text':'*
     * If '_recoverToTimestampStatus' is non-empty, fasserts. If '_recoverToTimestampStatus' is
     * empty, updates '_currTimestamp' to be equal to '_stableTimestamp' and returns the new value
     * of '_currTimestamp'.
     ','line_number':180,'multiline':True]['text':'*
     * This function always expects to receive the UUID of the collection.
     ','line_number':223,'multiline':True]['text':' Used to mock the behavior of 'recoverToStableTimestamp'. Upon calling','line_number':254,'multiline':False]['text':' 'recoverToStableTimestamp', the 'currTimestamp' should be set to the current','line_number':255,'multiline':False]['text':' '_stableTimestamp' value. Can be viewed as mock version of replication's 'lastApplied'','line_number':256,'multiline':False]['text':' optime.','line_number':257,'multiline':False]['text':' A Status value which, if set, will be returned by the 'recoverToStableTimestamp' function, in','line_number':260,'multiline':False]['text':' order to simulate the error case for that function. Defaults to boost::none.','line_number':261,'multiline':False]['text':'*
 * ReplicationCoordinator mock implementation for rollback tests.
 ','line_number':270,'multiline':True]['text':'*
     * Returns IllegalOperation (does not forward call to
     * ReplicationCoordinatorMock::setFollowerMode())
     * if new state requested is '_failSetFollowerModeOnThisMemberState'.
     * Otherwise, calls ReplicationCoordinatorMock::setFollowerMode().
     ','line_number':277,'multiline':True]['text':'*
     * Set this to make transitioning to the given follower mode fail with the given error code.
     ','line_number':287,'multiline':True]['text':' Override this to make setFollowerMode() fail when called with this state.','line_number':294,'multiline':False]['text':' namespace repl','line_number':322,'multiline':False]['text':' namespace mongo','line_number':323,'multiline':False]