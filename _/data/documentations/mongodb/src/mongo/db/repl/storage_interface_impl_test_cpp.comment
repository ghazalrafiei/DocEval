['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Generates a unique namespace from the test registration agent.
 ','line_number':98,'multiline':True]['text':'*
 * Generates a default CollectionOptions object with a UUID. These options should be used
 * when creating a collection in this test because otherwise, collections will not be created
 * with UUIDs. All collections are expected to have UUIDs.
 ','line_number':109,'multiline':True]['text':'*
 * Creates collection options suitable for oplog.
 ','line_number':127,'multiline':True]['text':'*
 * Create test collection.
 * Returns collection.
 ','line_number':138,'multiline':True]['text':'*
 * Create an index on an empty collection. Returns the number of indexes that exist on the
 * collection after the given index is created.
 ','line_number':157,'multiline':True]['text':'*
 * Creates an oplog entry with given optime.
 ','line_number':178,'multiline':True]['text':'*
 * Counts the number of keys in an index.
 ','line_number':188,'multiline':True]['text':' We are not replicating nor validating these writes.','line_number':245,'multiline':False]['text':'*
 * Check collection contents.
 ','line_number':297,'multiline':True]['text':'*
 * Check collection contents for a singleton Rollback ID document.
 ','line_number':320,'multiline':True]['text':' Rollback ID should be initialized to 1.','line_number':335,'multiline':False]['text':' Rollback ID should increment by exactly 1 each time.','line_number':342,'multiline':False]['text':' Create fake non-oplog collection to ensure saving oplog entries (without _id field) will','line_number':427,'multiline':False]['text':' fail.','line_number':428,'multiline':False]['text':' Non-oplog collection will enforce mandatory _id field requirement on insertion.','line_number':434,'multiline':False]['text':' Again, but specify the collection with its UUID.','line_number':441,'multiline':False]['text':' Create a collection that does not support all-at-once inserting.','line_number':449,'multiline':False]['text':' StorageInterfaceImpl::insertDocuments should fall back on inserting the batch one at a time.','line_number':456,'multiline':False]['text':' Confirm that Collection::insertDocuments fails to insert the batch all at once.','line_number':461,'multiline':False]['text':' Check collection contents.','line_number':471,'multiline':False]['text':' Create fake oplog collection to hold operations.','line_number':476,'multiline':False]['text':' Insert operations using storage interface. Ensure optime return is consistent with last','line_number':481,'multiline':False]['text':' operation inserted.','line_number':482,'multiline':False]['text':' Check contents of oplog.','line_number':488,'multiline':False]['text':' This is exactly like the test InsertDocumentsSavesOperationsReturnsOpTimeOfLastOperation, but','line_number':493,'multiline':False]['text':' with the UUID specified instead of the namespace string.','line_number':494,'multiline':False]['text':' Insert operations using storage interface. Ensure optime return is consistent with last','line_number':500,'multiline':False]['text':' operation inserted.','line_number':501,'multiline':False]['text':' Check contents of oplog.','line_number':508,'multiline':False]['text':' Destroy bulk loader.','line_number':624,'multiline':False]['text':' Collection and ID index should not exist after 'loader' is destroyed.','line_number':625,'multiline':False]['text':' Bulk loader is used to create indexes. The collection is not dropped when the bulk loader is','line_number':630,'multiline':False]['text':' destroyed.','line_number':631,'multiline':False]['text':' IndexCatalog::numIndexesTotal() includes unfinished indexes. We need to ensure that','line_number':635,'multiline':False]['text':' the bulk loader drops the unfinished indexes.','line_number':636,'multiline':False]['text':' Destroy 'loader' by letting it go out of scope.','line_number':647,'multiline':False]['text':' Destroy 'loader' in a new thread that does not have a Client.','line_number':657,'multiline':False]['text':' Destroy 'loader' in a new thread that does not have a Client.','line_number':670,'multiline':False]['text':' Database should not be created after running dropCollection.','line_number':768,'multiline':False]['text':' If we can create a system collection using the StorageInterface, we should be able to drop it','line_number':776,'multiline':False]['text':' using the same interface.','line_number':777,'multiline':False]['text':'*
 * Check StatusWith<std::vector<BSONObj>> value.
 ','line_number':984,'multiline':True]['text':'*
 * Returns first BSONObj from a StatusWith<std::vector<BSONObj>>.
 ','line_number':1000,'multiline':True]['text':' startKey not provided','line_number':1025,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1036,'multiline':False]['text':' startKey not provided. limit of 2.','line_number':1046,'multiline':False]['text':' startKey provided; include start key','line_number':1056,'multiline':False]['text':' startKey provided; include both start and end keys','line_number':1086,'multiline':False]['text':' startKey provided; exclude start key','line_number':1097,'multiline':False]['text':' startKey provided; exclude both start and end keys','line_number':1118,'multiline':False]['text':' startKey provided; exclude both start and end keys.','line_number':1129,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the end of the collection.','line_number':1130,'multiline':False]['text':' startKey not provided','line_number':1162,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1173,'multiline':False]['text':' startKey not provided. limit of 2.','line_number':1183,'multiline':False]['text':' startKey provided; include start key','line_number':1193,'multiline':False]['text':' startKey provided; include both start and end keys','line_number':1213,'multiline':False]['text':' startKey provided; exclude start key','line_number':1224,'multiline':False]['text':' startKey provided; exclude both start and end keys','line_number':1235,'multiline':False]['text':' startKey provided; exclude both start and end keys.','line_number':1246,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the beginning of the collection.','line_number':1247,'multiline':False]['text':' Check collection contents.','line_number':1285,'multiline':False]['text':' startKey not provided','line_number':1434,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1455,'multiline':False]['text':' startKey provided; include start key','line_number':1475,'multiline':False]['text':' startKey provided; exclude start key','line_number':1495,'multiline':False]['text':' startKey provided; exclude start key.','line_number':1511,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the end of the collection.','line_number':1512,'multiline':False]['text':' startKey not provided','line_number':1545,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1566,'multiline':False]['text':' startKey provided; include start key','line_number':1586,'multiline':False]['text':' startKey provided; exclude start key','line_number':1606,'multiline':False]['text':' startKey provided; exclude start key.','line_number':1622,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the beginning of the collection.','line_number':1623,'multiline':False]['text':' startKey not provided','line_number':1750,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1761,'multiline':False]['text':' startKey not provided. limit of 2.','line_number':1771,'multiline':False]['text':' startKey provided; include start key','line_number':1781,'multiline':False]['text':' startKey provided; include both start and end keys','line_number':1811,'multiline':False]['text':' startKey provided; exclude start key','line_number':1822,'multiline':False]['text':' startKey provided; exclude both start and end keys','line_number':1843,'multiline':False]['text':' startKey provided; exclude both start and end keys.','line_number':1854,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the end of the collection.','line_number':1855,'multiline':False]['text':' startKey not provided','line_number':1887,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':1898,'multiline':False]['text':' startKey not provided. limit of 2.','line_number':1908,'multiline':False]['text':' startKey provided; include start key','line_number':1918,'multiline':False]['text':' startKey provided; include both start and end keys','line_number':1938,'multiline':False]['text':' startKey provided; exclude start key','line_number':1949,'multiline':False]['text':' startKey provided; exclude both start and end keys','line_number':1960,'multiline':False]['text':' startKey provided; exclude both start and end keys.','line_number':1971,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the beginning of the collection.','line_number':1972,'multiline':False]['text':' startKey not provided','line_number':2108,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':2129,'multiline':False]['text':' startKey provided; include start key','line_number':2149,'multiline':False]['text':' startKey provided; exclude start key','line_number':2169,'multiline':False]['text':' startKey provided; exclude start key.','line_number':2185,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the end of the collection.','line_number':2186,'multiline':False]['text':' startKey not provided','line_number':2219,'multiline':False]['text':' startKey not provided. limit is 0.','line_number':2240,'multiline':False]['text':' startKey provided; include start key','line_number':2260,'multiline':False]['text':' startKey provided; exclude start key','line_number':2280,'multiline':False]['text':' startKey provided; exclude start key.','line_number':2296,'multiline':False]['text':' A limit of 3 should return 2 documents because we reached the beginning of the collection.','line_number':2297,'multiline':False]['text':' Again, but specify the collection's UUID.','line_number':2752,'multiline':False]['text':' _assertDocumentsInCollectionEquals() reads collection in $natural order. Assumes new document','line_number':2778,'multiline':False]['text':' is inserted at end of collection.','line_number':2779,'multiline':False]['text':' Checks that we can update collections with namespaces not considered "legal client system"','line_number':2798,'multiline':False]['text':' namespaces.','line_number':2799,'multiline':False]['text':' This test fixture disables replicated writes by default. We want to re-enable this setting','line_number':2951,'multiline':False]['text':' for this test.','line_number':2952,'multiline':False]['text':' deleteByFilter() checks the current member state indirectly through','line_number':2956,'multiline':False]['text':' ReplicationCoordinator::canAcceptWrites() if replicated writes are enabled.','line_number':2957,'multiline':False]['text':' This test fixture disables replicated writes by default. We want to re-enable this setting','line_number':2977,'multiline':False]['text':' for this test.','line_number':2978,'multiline':False]['text':' deleteByFilter() checks ReplicationCoordinator::canAcceptWritesFor() if replicated writes are','line_number':2982,'multiline':False]['text':' enabled on the OperationContext.','line_number':2983,'multiline':False]['text':' Checks that we can remove documents from collections with namespaces not considered "legal','line_number':3091,'multiline':False]['text':' client system" namespaces.','line_number':3092,'multiline':False]['text':' Create a collection using a case-insensitive collation.','line_number':3120,'multiline':False]['text':' This filter should remove doc1 and doc2 because the values of the field "x"','line_number':3142,'multiline':False]['text':' are equivalent to "aBc" under the case-insensive collation.','line_number':3143,'multiline':False]['text':' namespace','line_number':3338,'multiline':False]['text':' namespace repl','line_number':3339,'multiline':False]['text':' namespace mongo','line_number':3340,'multiline':False]