['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Minimal implementation of OplogApplier for testing.
 * executor::TaskExecutor is required only to test startup().
 ','line_number':60,'multiline':True]['text':' prepare ','line_number':200,'multiline':True]['text':' prepare ','line_number':201,'multiline':True]['text':' prepared ','line_number':202,'multiline':True]['text':' prepare ','line_number':204,'multiline':True]['text':' prepare ','line_number':205,'multiline':True]['text':' Prepares can be batched together.','line_number':208,'multiline':False]['text':' Prepared commit or abort must start a new batch with commits or aborts only.','line_number':214,'multiline':False]['text':' Prepares can be batched together.','line_number':220,'multiline':False]['text':' prepare ','line_number':231,'multiline':True]['text':' prepare ','line_number':232,'multiline':True]['text':' prepared ','line_number':233,'multiline':True]['text':' Prepares can be batched together with normal CRUDs.','line_number':238,'multiline':False]['text':' Prepared commit must start a new batch.','line_number':245,'multiline':False]['text':' CRUD op cannot be in the same batch with the previous prepared commit.','line_number':250,'multiline':False]['text':' Prepared abort must start a new batch.','line_number':255,'multiline':False]['text':' The DBCheck oplog shouldn't be batched with any preceding oplog, but it can be batched with','line_number':265,'multiline':False]['text':' any subsequent oplog that is batchable.','line_number':266,'multiline':False]['text':' prepare ','line_number':268,'multiline':True]['text':' prepare ','line_number':270,'multiline':True]['text':' The DBCheck oplog shouldn't be batched with the previous DBCheck oplog.','line_number':272,'multiline':False]['text':' DBCheck oplog shouldn't be batched with a prepared commit that follows it as prepared commit','line_number':276,'multiline':False]['text':' must start a new batch.','line_number':277,'multiline':False]['text':' prepared ','line_number':278,'multiline':True]['text':' DBCheck oplog shouldn't be batched with a prepared commit that precedes it.','line_number':280,'multiline':False]['text':' 1st batch: [insert]','line_number':284,'multiline':False]['text':' 2nd batch: [DBCheck, Unprepared ApplyOps, Insert, Prepared ApplyOps]','line_number':289,'multiline':False]['text':' 3rd batch:  [DBCheck, Insert]','line_number':297,'multiline':False]['text':' 4th batch: [Commit]','line_number':303,'multiline':False]['text':' 5th batch: [Dbcheck]','line_number':308,'multiline':False]['text':' Set batch limits so that each batch contains a maximum of 'BatchLimit::ops'.','line_number':328,'multiline':False]['text':' First batch: [insert, insert, insert]','line_number':331,'multiline':False]['text':' Second batch: [insert, insert]','line_number':338,'multiline':False]['text':' Set batch limits so that only the first two operations can fit into the first batch.','line_number':355,'multiline':False]['text':' First batch: [insert, insert]','line_number':359,'multiline':False]['text':' Second batch: [insert]','line_number':365,'multiline':False]['text':' Set batch limits so that commit transaction entry has to go into next batch as the only entry','line_number':381,'multiline':False]['text':' after taking into account the embedded op count.','line_number':382,'multiline':False]['text':' First batch: [insert]','line_number':385,'multiline':False]['text':' Second batch: [commit]','line_number':390,'multiline':False]['text':' Set batch limits so that commit transaction entry has to go into next batch after taking into','line_number':408,'multiline':False]['text':' account embedded op count.','line_number':409,'multiline':False]['text':' First batch: [insert, insert]','line_number':412,'multiline':False]['text':' Second batch: [commit, insert]','line_number':418,'multiline':False]['text':' Set batch limits so that commit transaction entry goes into its own batch because its','line_number':435,'multiline':False]['text':' embedded count exceeds the batch limit for ops.','line_number':436,'multiline':False]['text':' First batch: [insert]','line_number':439,'multiline':False]['text':' Second batch: [commit]','line_number':444,'multiline':False]['text':' Makes entries with ts from range [2, 5).','line_number':455,'multiline':False]['text':' prepared ','line_number':457,'multiline':True]['text':' num entries','line_number':457,'multiline':True]['text':' Push one extra operation to ensure that the last oplog entry of a large transaction','line_number':462,'multiline':False]['text':' is processed by itself.','line_number':463,'multiline':False]['text':' Set large enough batch limit to ensure that batcher is not batching because of limit, but','line_number':469,'multiline':False]['text':' rather because it encountered the final oplog entry of a large transaction.','line_number':470,'multiline':False]['text':' First batch: [insert, applyOps, applyOps]','line_number':473,'multiline':False]['text':' Second batch: [applyOps]. The last oplog entry of a large transaction must be processed by','line_number':480,'multiline':False]['text':' itself.','line_number':481,'multiline':False]['text':' Third batch: [insert]. The this confirms that the last oplog entry of a large txn will be','line_number':486,'multiline':False]['text':' batched individually.','line_number':487,'multiline':False]['text':' Avoid any issues due to a clock exactly at 0 (e.g. dates being default Date_t());','line_number':498,'multiline':False]['text':' Use a smaller limit for these tests.','line_number':506,'multiline':False]['text':' Wait for the opCtx to be waited on, or for killWaits() to be run.','line_number':510,'multiline':False]['text':' Ends any waitForWait calls.  Used to turn some potential hangs into outright failures.','line_number':520,'multiline':False]['text':' Makes sure that interrupting the batch while waiting does interrupt the timeout,','line_number':612,'multiline':False]['text':' but does not throw or lose any data.','line_number':613,'multiline':False]['text':' namespace','line_number':642,'multiline':False]['text':' namespace repl','line_number':643,'multiline':False]['text':' namespace mongo','line_number':644,'multiline':False]