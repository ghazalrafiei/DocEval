['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Representation of a tag on a replica set node.
 *
 * Tags are only meaningful when used with a copy of the ReplSetTagConfig that
 * created them.
 ','line_number':48,'multiline':True]['text':'*
     * Default constructor, produces an uninitialized tag.
     ','line_number':56,'multiline':True]['text':'*
     * Constructs a tag with the given key and value indexes.
     * Do not call directly; used by ReplSetTagConfig.
     ','line_number':61,'multiline':True]['text':'*
     * Returns true if the tag is not explicitly invalid.
     ','line_number':68,'multiline':True]['text':'*
     * Gets the key index of the tag.
     ','line_number':75,'multiline':True]['text':'*
     * Gets the value index of the tag.
     ','line_number':82,'multiline':True]['text':'*
     * Compares two tags from the *same* ReplSetTagConfig for equality.
     ','line_number':89,'multiline':True]['text':'*
     * Compares two tags from the *same* ReplSetTagConfig for inequality.
     ','line_number':94,'multiline':True]['text':' The index of the key in the associated ReplSetTagConfig.','line_number':100,'multiline':False]['text':' The index of the value in the entry for the key in the associated ReplSetTagConfig.','line_number':103,'multiline':False]['text':'*
 * Representation of a tag matching pattern, like { "dc": 2, "rack": 3 }, of the form
 * used for tagged replica set writes.
 ','line_number':107,'multiline':True]['text':'*
     * Representation of a single tag's minimum count constraint in a pattern.
     ','line_number':113,'multiline':True]['text':'*
     * Adds a count constraint for the given key index with the given count.
     *
     * Do not call directly, but use the addTagCountConstraintToPattern method
     * of ReplSetTagConfig.
     ','line_number':137,'multiline':True]['text':'*
     * Gets the begin iterator over the constraints in this pattern.
     ','line_number':145,'multiline':True]['text':'*
     * Gets the end iterator over the constraints in this pattern.
     ','line_number':152,'multiline':True]['text':'*
     * Gets the number of constraints in this pattern.
     ','line_number':159,'multiline':True]['text':'*
 * State object for progressive detection of ReplSetTagPattern constraint satisfaction.
 *
 * This is an abstraction of the replica set write tag satisfaction problem.
 *
 * Replica set tag matching is an event-driven constraint satisfaction process.  This type
 * represents the state of that process.  It is initialized from a pattern object, then
 * progressively updated with tags.  After processing a sequence of tags sufficient to satisfy
 * the pattern, isSatisfied() becomes true.
 ','line_number':194,'multiline':True]['text':'*
     * Constructs an empty match object, equivalent to one that matches an
     * empty pattern.
     ','line_number':208,'multiline':True]['text':'*
     * Constructs a clean match object for the given pattern.
     ','line_number':214,'multiline':True]['text':'*
     * Updates the match state based on the data for the given tag.
     *
     * Returns true if, after this update, isSatisfied() is true.
     ','line_number':219,'multiline':True]['text':'*
     * Returns true if the match has received a sequence of tags sufficient to satisfy the
     * pattern.
     ','line_number':226,'multiline':True]['text':'*
     * Representation of the state related to a single tag key in the match pattern.
     * Consists of a constraint (key index and min count for satisfaction) and a list
     * of already observed values.
     *
     * A BoundTagValue is satisfied when the size of boundValues is at least
     * constraint.getMinCount().
     ','line_number':233,'multiline':True]['text':'*
 * Representation of the tag configuration information for a replica set.
 *
 * This type, like all in this file, is copyable.  Tags and patterns from one instance of this
 * class are compatible with other instances of this class that are *copies* of the original
 * instance.
 ','line_number':257,'multiline':True]['text':'*
     * Finds or allocates a tag with the given "key" and "value" strings.
     ','line_number':266,'multiline':True]['text':'*
     * Finds a tag with the given key and value strings, or returns a tag whose isValid() method
     * returns false if the configuration has never allocated such a tag via makeTag().
     ','line_number':271,'multiline':True]['text':'*
     * Makes a new, empty pattern object.
     ','line_number':277,'multiline':True]['text':'*
     * Adds a constraint clause to the given "pattern".  This particular
     * constraint requires that at least "minCount" distinct tags with the given "tagKey"
     * be observed.  Two tags "t1" and "t2" are distinct if "t1 != t2", so this constraint
     * means that we must see at least "minCount" tags with the specified "tagKey".
     ','line_number':282,'multiline':True]['text':'*
     * Gets the string key for the given "tag".
     *
     * Behavior is undefined if "tag" is not valid or was not from this
     * config or one of its copies.
     ','line_number':292,'multiline':True]['text':'*
     * Gets the string value for the given "tag".
     *
     * Like getTagKey, above, behavior is undefined if "tag" is not valid or was not from this
     * config or one of its copies.
     ','line_number':300,'multiline':True]['text':'*
     * Helper that writes a string debugging representation of "tag" to "os".
     ','line_number':308,'multiline':True]['text':'*
     * Helper that writes a string debugging representation of "pattern" to "os".
     ','line_number':313,'multiline':True]['text':'*
     * Helper that writes a string debugging representation of "matcher" to "os".
     ','line_number':318,'multiline':True]['text':'*
     * Returns the index corresponding to "key", or _tagData.size() if there is no
     * such index.
     ','line_number':327,'multiline':True]['text':'*
     * Helper that writes a "tagKey" field for the given "keyIndex" to "builder".
     ','line_number':333,'multiline':True]['text':'*
     * Helper that writes a "tagValue" field for the given "keyIndex" and "valueIndex"
     * to "builder".
     ','line_number':338,'multiline':True]['text':'*
     * Helper that writes a constraint object to "builder".
     ','line_number':344,'multiline':True]['text':' Data about known tags.  Conceptually, it maps between keys and their indexes,','line_number':350,'multiline':False]['text':' keys and their associated values, and (key, value) pairs and the values' indexes.','line_number':351,'multiline':False]['text':' namespace repl','line_number':355,'multiline':False]['text':' namespace mongo','line_number':356,'multiline':False]