['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' If it is a sub object, we'll have to sort it as well before we append it.','line_number':128,'multiline':False]['text':' If it is not a sub object, just append it and move on.','line_number':133,'multiline':False]['text':' Remove the collection without a drop OpTime. As we are re-applying the initOps the create','line_number':190,'multiline':False]['text':' OpTime would be less than the previous drop. By removing the collection without an OpTime we','line_number':191,'multiline':False]['text':' completely clear the history for the namespace.','line_number':192,'multiline':False]['text':' Lookup the UUID from the namespace, it will not exist if we're 'resetting' the state','line_number':196,'multiline':False]['text':' before creating it.','line_number':197,'multiline':False]['text':'isDropPending=','line_number':201,'multiline':True]['text':'commitTime=','line_number':201,'multiline':True]['text':' Initialize the collection with a single document, which would later be updated.','line_number':225,'multiline':False]['text':' With delta based updates, we cannot just generate any random diff since certain diffs','line_number':237,'multiline':False]['text':' when applied to an unrelated object (which would never have produced by computing the','line_number':238,'multiline':False]['text':' input objects) would break idempotency. So we do a dry run of what the collection','line_number':239,'multiline':False]['text':' state would look like and compute diffs based on that.','line_number':240,'multiline':False]['text':' namespace','line_number':265,'multiline':False]['text':' namespace repl','line_number':266,'multiline':False]['text':' namespace mongo','line_number':267,'multiline':False]