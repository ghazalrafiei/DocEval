['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Connect to the donor source and uses the default authentication mode.
 ','line_number':107,'multiline':True]['text':'*
 * Generate a new ident and move the file.
 * Performs an fsync on the destination file and the parent directories of both 'srcFilePath' and
 * 'destFilePath'.
 ','line_number':122,'multiline':True]['text':' Note the list of files to be cleaned in case of failure to import collection and it's','line_number':158,'multiline':False]['text':' indexes.','line_number':159,'multiline':False]['text':' Retry move on "destination file already exists" error. This can happen due to','line_number':164,'multiline':False]['text':' ident collision between this import and another parallel import  via','line_number':165,'multiline':False]['text':' importCollection command.','line_number':166,'multiline':False]['text':'*
 * Import the collection and its indexes into the main wiredTiger instance.
 ','line_number':180,'multiline':True]['text':' If the collection creation rolls back, ensure that the Top entry created for the','line_number':202,'multiline':False]['text':' collection is deleted.','line_number':203,'multiline':False]['text':' Create Collection object.','line_number':213,'multiline':False]['text':' Since we are using the ident id generated by this recipient node, ident collisions in','line_number':218,'multiline':False]['text':' the future after import is not possible. So, it's ok to skip the ident collision','line_number':219,'multiline':False]['text':' check. Otherwise, we would unnecessarily generate new rand after each collection','line_number':220,'multiline':False]['text':' import.','line_number':221,'multiline':False]['text':' Update the number of records and data size on commit.','line_number':240,'multiline':False]['text':'dryRun=','line_number':255,'multiline':True]['text':' namespace','line_number':272,'multiline':False]['text':' autoReconnect ','line_number':284,'multiline':True]['text':' Migration handle can be empty only if the node restarts,rolls back, or resyncs while a shard','line_number':353,'multiline':False]['text':' merge is in progress.','line_number':354,'multiline':False]['text':' Migration handle can be empty only if the node restarts,rolls back, or resyncs while a shard','line_number':380,'multiline':False]['text':' merge is in progress.','line_number':381,'multiline':False]['text':' Migration handle can be empty only if the node restarts,rolls back, or resyncs while a shard','line_number':405,'multiline':False]['text':' merge is in progress.','line_number':406,'multiline':False]['text':' Return early if we have already set up the donor connection.','line_number':463,'multiline':False]['text':' Out-of-order events for a different migration are not permitted.','line_number':487,'multiline':False]['text':' We won't have valid donor metadata until the first','line_number':494,'multiline':False]['text':' 'TenantFileImporterService::learnedFilename' call, so we need to set up the','line_number':495,'multiline':False]['text':' connection for the first kLearnedFileName event.','line_number':496,'multiline':False]['text':' This step prevents accidental deletion of committed donor data during startup and','line_number':513,'multiline':False]['text':' rollback recovery.','line_number':514,'multiline':False]['text':'','line_number':515,'multiline':False]['text':' For example, if a migration was initially aborted and retried','line_number':516,'multiline':False]['text':' successfully, a node restart or rollback could risk deleting committed donor data','line_number':517,'multiline':False]['text':' during oplog replay if recovery/stable timestamp < failed migration's','line_number':518,'multiline':False]['text':' abortOpTime. To prevent this data corruption case, a barrier is created by','line_number':519,'multiline':False]['text':' checkpointing the startMigrationTimestamp before importing collection for the','line_number':520,'multiline':False]['text':' ongoing migration attempt. This prevents startup/rollback recovery from','line_number':521,'multiline':False]['text':' replaying oplog entries from various migration attempts.','line_number':522,'multiline':False]['text':'','line_number':523,'multiline':False]['text':' Note: Since StartMigrationTimestamp is majority committed (given that all','line_number':524,'multiline':False]['text':' recipient state document writes are majority committed by the recipient state','line_number':525,'multiline':False]['text':' machine), it's safe to await its checkpointing without requiring a no-op write.','line_number':526,'multiline':False]['text':' Take a stable checkpoint to persist both the imported donor collections and the','line_number':531,'multiline':False]['text':' marker collection to disk.','line_number':532,'multiline':False]['text':'stableCheckpoint','line_number':534,'multiline':True]['text':' Sleep a bit so we do not keep hammering the system.','line_number':629,'multiline':False]['text':'stableCheckpoint','line_number':632,'multiline':True]['text':' Disable replication because this logic is executed on all nodes during a Shard Merge.','line_number':673,'multiline':False]['text':' Check for migration interrupt before importing the collection.','line_number':678,'multiline':False]['text':' Moves the collection file and it's associated index files from temp dir to dbpath.','line_number':693,'multiline':False]['text':' And, regenerate metadata info with new unique ident id.','line_number':694,'multiline':False]['text':' Update the collection ident id.','line_number':703,'multiline':False]['text':' Update the index ident id.','line_number':712,'multiline':False]['text':' Build the command request.','line_number':734,'multiline':False]['text':' Don't hammer the network.','line_number':759,'multiline':False]['text':' Prevent the TenantFileCloner from getting retried on retryable errors.','line_number':786,'multiline':False]['text':' _runRollbackAndThenImportFiles() will fulfill the promise if importStarted is true.','line_number':800,'multiline':False]['text':'dryRun','line_number':816,'multiline':True]['text':' namespace mongo::repl','line_number':942,'multiline':False]