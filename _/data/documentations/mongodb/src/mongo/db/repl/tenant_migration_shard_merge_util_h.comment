['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Keep the backup cursor alive by pinging twice as often as the donor's default','line_number':56,'multiline':False]['text':' cursor timeout.','line_number':57,'multiline':False]['text':'*
 * Computes a boost::filesystem::path generic-style relative path (always uses slashes)
 * from a base path and a relative path.
 ','line_number':78,'multiline':True]['text':'*
 * Represents the document structure of config.donatedFiles_<MigrationUUID> collection.
 ','line_number':84,'multiline':True]['text':'*
 * Helpers to create and drop the import done marker collection.
 ','line_number':123,'multiline':True]['text':'*
 * Checks if the import done marker collection exists; triggers a fatal assertion if absent.
 *
 * Note: Call this method only during shard merge recipient state transition to kConsistent.
 ','line_number':129,'multiline':True]['text':'*
 * Reads a list of filenames from the marker file kMovingFilesMarker.
 * Returns empty vector if the marker file is not present.
 ','line_number':137,'multiline':True]['text':'*
 * Writes out a marker file kMovingFilesMarker. And, flushes the marker file and it's parent
 * directory.
 * @param 'firstEntry' determines whether to truncate the file before writing data or to append the
 * data.
 ','line_number':143,'multiline':True]['text':'*
 * Returns a path by appending the given ident to the srcPath.
 ','line_number':153,'multiline':True]['text':'*
 * Returns a path by appending the given ident to the data directory path i.e,
 * storageGlobalParams.dbpath.
 ','line_number':159,'multiline':True]['text':'*
 * Removes the file associated with the given path. Throws exceptions on failures.
 ','line_number':165,'multiline':True]['text':'*
 * performs fsync on the the data directory i.e, storageGlobalParams.dbpath.
 ','line_number':170,'multiline':True]['text':'*
 * Removes the directory associated with the given path. And, performs fsync on the the parent
 * directory of 'path'. Throws exceptions on failures.
 ','line_number':175,'multiline':True]['text':' namespace mongo::repl::shard_merge_utils','line_number':180,'multiline':False]