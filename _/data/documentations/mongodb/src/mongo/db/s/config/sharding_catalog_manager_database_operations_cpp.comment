['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':108,'multiline':False]['text':' It is not allowed to create the 'admin' or 'local' databases, including any alternative','line_number':120,'multiline':False]['text':' casing. It is allowed to create the 'config' database (handled by the early return above),','line_number':121,'multiline':False]['text':' but only with that exact casing.','line_number':122,'multiline':False]['text':' Make sure to force update of any stale metadata','line_number':134,'multiline':False]['text':' Resolve the shard against the received parameter (which may encode either a shard ID or a','line_number':141,'multiline':False]['text':' connection string).','line_number':142,'multiline':False]['text':' First perform an optimistic attempt without taking the lock to check if database exists.','line_number':165,'multiline':False]['text':' If the database is not found take the lock and try again.','line_number':166,'multiline':False]['text':' Do another loop, with the db lock held in order to avoid taking the expensive path on','line_number':178,'multiline':False]['text':' concurrent create database operations','line_number':179,'multiline':False]['text':' reason ','line_number':184,'multiline':True]['text':'waitForRecovery','line_number':186,'multiline':True]['text':' Expensive createDatabase code path','line_number':189,'multiline':False]['text':' Check if a database already exists with the same name (case insensitive), and if so, return','line_number':191,'multiline':False]['text':' the existing entry.','line_number':192,'multiline':False]['text':' We did a local read of the database entry above and found that the database already','line_number':214,'multiline':False]['text':' exists. However, the data may not be majority committed (a previous createDatabase','line_number':215,'multiline':False]['text':' attempt may have failed with a writeConcern error).','line_number':216,'multiline':False]['text':' Since the current Client doesn't know the opTime of the last write to the database','line_number':217,'multiline':False]['text':' entry, make it wait for the last opTime in the system when we wait for writeConcern.','line_number':218,'multiline':False]['text':' The database does not exist. Insert an entry for the new database into the sharding','line_number':224,'multiline':False]['text':' catalog. Assign also a primary shard if the caller hasn't specified one.','line_number':225,'multiline':False]['text':' Assigns an optimal shard on which to place a newly created database from the set','line_number':227,'multiline':False]['text':' of available shards.','line_number':228,'multiline':False]['text':' details ','line_number':236,'multiline':True]['text':' Pick a primary shard for the new database.','line_number':244,'multiline':False]['text':' The creation of a new database (and its assignation to resolvedPrimaryShard) is','line_number':250,'multiline':False]['text':' described by the notification of multiple events, following a 2-phase protocol:','line_number':251,'multiline':False]['text':' - a "prepare" notification prior to the write into config.databases will ensure that','line_number':252,'multiline':False]['text':' change streams will start collecting events on the new database before the first user','line_number':253,'multiline':False]['text':' write on one of its future collection occurs','line_number':254,'multiline':False]['text':' - a "commitSuccessful" notification after completing the write into config.databases','line_number':255,'multiline':False]['text':' will allow change streams to stop collecting events on the namespace created from','line_number':256,'multiline':False]['text':' shards != resolvedPrimaryShard.','line_number':257,'multiline':False]['text':'areImported','line_number':261,'multiline':True]['text':'resourceYielder','line_number':297,'multiline':True]['text':'areImported','line_number':301,'multiline':True]['text':' details ','line_number':314,'multiline':True]['text':' Note, making the primary shard refresh its databaseVersion here is not required for','line_number':323,'multiline':False]['text':' correctness, since either:','line_number':324,'multiline':False]['text':' 1) This is the first time this database is being created. The primary shard will not have a','line_number':325,'multiline':False]['text':'    databaseVersion already cached.','line_number':326,'multiline':False]['text':' 2) The database was dropped and is being re-created. Since dropping a database also sends','line_number':327,'multiline':False]['text':'    _flushDatabaseCacheUpdates to all shards, the primary shard should not have a database','line_number':328,'multiline':False]['text':'    version cached. (Note, it is possible that dropping a database will skip sending','line_number':329,'multiline':False]['text':'    _flushDatabaseCacheUpdates if the config server fails over while dropping the database.)','line_number':330,'multiline':False]['text':' However, routers don't support retrying internally on StaleDbVersion in transactions','line_number':331,'multiline':False]['text':' (SERVER-39704), so if the first operation run against the database is in a transaction, it','line_number':332,'multiline':False]['text':' would fail with StaleDbVersion. Making the primary shard refresh here allows that first','line_number':333,'multiline':False]['text':' transaction to succeed. This allows our transaction passthrough suites and transaction demos','line_number':334,'multiline':False]['text':' to succeed without additional special logic.','line_number':335,'multiline':False]['text':' Hold the shard lock until the entire commit finishes to serialize with removeShard.','line_number':354,'multiline':False]['text':' Find database entry to get current dbPrimary','line_number':383,'multiline':False]['text':' Include the version in the update filter to be resilient to potential','line_number':389,'multiline':False]['text':' network retries and delayed messages.','line_number':390,'multiline':False]['text':' If we didn't find a database entry, this must be a retry of the transaction','line_number':401,'multiline':False]['text':' Only change the unsharded collection metadata on the config server if we are moving some','line_number':408,'multiline':False]['text':' tracked collections. Otherwise, there will be no collections or chunks to find here for','line_number':409,'multiline':False]['text':' the collections being moved, so we can skip the whole section.','line_number':410,'multiline':False]['text':' Find all collections in the database that are unsplittable','line_number':412,'multiline':False]['text':' For each collection, we need to insert a placement entry for the collection and','line_number':420,'multiline':False]['text':' update the chunk entry.','line_number':421,'multiline':False]['text':' Execute chunk and collection placement updates if there were any generated.','line_number':480,'multiline':False]['text':' Update the database entry and insert a placement history entry for the database.','line_number':501,'multiline':False]['text':' Include the version in the update filter to be resilient to potential','line_number':507,'multiline':False]['text':' network retries and delayed messages.','line_number':508,'multiline':False]['text':'resourceYielder','line_number':559,'multiline':True]['text':' namespace mongo','line_number':564,'multiline':False]