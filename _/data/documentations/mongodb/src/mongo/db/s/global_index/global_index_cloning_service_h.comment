['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Represents the current state of a global index operation on this shard. This class drives state
 * transitions and updates to underlying on-disk metadata.
 ','line_number':102,'multiline':True]['text':'*
     * Returns a Future that will be resolved when all work associated with this Instance is done
     * making forward progress.
     ','line_number':125,'multiline':True]['text':'*
     * Tells this cloner to perform cleanup. This can cause this cloner to abort if it is still
     * running.
     ','line_number':137,'multiline':True]['text':'*
     * Initializes the _abortSource and generates a token from it to return back the caller.
     * Should only be called once per lifetime.
     ','line_number':146,'multiline':True]['text':'*
     * Initializes the necessary components.
     ','line_number':152,'multiline':True]['text':'*
     * Make sure that the necessary collections are created.
     ','line_number':157,'multiline':True]['text':'*
     * Inserts the state document to storage.
     ','line_number':162,'multiline':True]['text':'*
     * Performs the entire cloning process.
     ','line_number':173,'multiline':True]['text':'*
     * Iterates over the documents from the source collection and convert them into global index
     * entries.
     ','line_number':180,'multiline':True]['text':'*
     * Removes the side collections created by this cloner.
     ','line_number':188,'multiline':True]['text':'*
     * Fetches documents from source collection and store them in a queue.
     ','line_number':194,'multiline':True]['text':'*
     * Convert fetched documents to global index entries.
     ','line_number':199,'multiline':True]['text':'*
     * Create collection with the given namespace only if it doesn't exist.
     ','line_number':207,'multiline':True]['text':'*
     * Update the in-memory and persistent state document's mutable state.
     ','line_number':215,'multiline':True]['text':'*********************************************************************************
     * Thread safety legend
     *
     * (TS) - Thread safe. Object can be accessed concurrently without additional mutex.
     * (NC) - No concurrent access pattern. So can be used without mutex.
     * (M) - Mutex required.
     ','line_number':223,'multiline':True]['text':' (TS)','line_number':231,'multiline':False]['text':' The primary-only service instance corresponding to the cloner instance. Not owned.','line_number':233,'multiline':False]['text':' (TS)','line_number':234,'multiline':False]['text':' A separate executor different from the one supplied by the primary only service is needed','line_number':239,'multiline':False]['text':' because the one from POS can be shut down during step down. This will ensure that the','line_number':240,'multiline':False]['text':' operation context created from the cancelableOpCtxFactory can be interrupted when the cancel','line_number':241,'multiline':False]['text':' token is aborted during step down.','line_number':242,'multiline':False]['text':' (TS)','line_number':243,'multiline':False]['text':' (TS)','line_number':246,'multiline':False]['text':' (NC)','line_number':250,'multiline':False]['text':' Canceled when there is an unrecoverable error or stepdown.','line_number':252,'multiline':False]['text':' (M)','line_number':253,'multiline':False]['text':' True if cleanup was called. Main purpose is to act as a stand-in when _abortSource','line_number':255,'multiline':False]['text':' is not yet initialized.','line_number':256,'multiline':False]['text':' (M)','line_number':257,'multiline':False]['text':' (TS)','line_number':259,'multiline':False]['text':' (NC)','line_number':260,'multiline':False]['text':' (NC)','line_number':261,'multiline':False]['text':' Keeps track if there is still a posibility that we still have documents that needs to be','line_number':263,'multiline':False]['text':' fetched from the source collection.','line_number':264,'multiline':False]['text':' (NC)','line_number':265,'multiline':False]['text':' (NC)','line_number':267,'multiline':False]['text':' (NC)','line_number':268,'multiline':False]['text':' (TS)','line_number':270,'multiline':False]['text':' (TS)','line_number':271,'multiline':False]['text':' (M)','line_number':272,'multiline':False]['text':' (TS)','line_number':273,'multiline':False]['text':' (TS)','line_number':275,'multiline':False]['text':' namespace global_index','line_number':278,'multiline':False]['text':' namespace mongo','line_number':279,'multiline':False]