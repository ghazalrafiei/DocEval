['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':83,'multiline':False]['text':' Issue at most 10 concurrent auto merge requests','line_number':142,'multiline':False]['text':' Get next <shardId, collection> pair to merge','line_number':154,'multiline':False]['text':' Reschedule auto-merge for <shard, nss> until no merge has been performed','line_number':195,'multiline':False]['text':' Reschedule auto-merge for <shard, nss> because commit overlapped with other chunk ops','line_number':203,'multiline':False]['text':' Reset the history window to consider during next round because chunk merges may have','line_number':211,'multiline':False]['text':' been potentially missed due to an unexpected error','line_number':212,'multiline':False]['text':' Trigger Automerger every `autoMergerIntervalSecs` seconds','line_number':237,'multiline':False]['text':' Build an aggregation pipeline to get the collections with mergeable chunks placed on a','line_number':249,'multiline':False]['text':' specific shard','line_number':250,'multiline':False]['text':' 1. Match all collections where `automerge` is enabled and `defragmentation` is disabled','line_number':261,'multiline':False]['text':' {','line_number':262,'multiline':False]['text':'     $match : {','line_number':263,'multiline':False]['text':'         enableAutoMerge : { $ne : false },','line_number':264,'multiline':False]['text':'         defragmentCollection : { $ne : true },','line_number':265,'multiline':False]['text':'         unsplittable : { $ne : true }','line_number':266,'multiline':False]['text':'     }','line_number':267,'multiline':False]['text':' }','line_number':268,'multiline':False]['text':' 2. Lookup stage to get at most 2 mergeable chunk per collection','line_number':276,'multiline':False]['text':' {','line_number':277,'multiline':False]['text':'     $lookup : {','line_number':278,'multiline':False]['text':'         from : "chunks",','line_number':279,'multiline':False]['text':'         localField : "uuid",','line_number':280,'multiline':False]['text':'         foreignField : "collectionUUID",','line_number':281,'multiline':False]['text':'         pipeline : [','line_number':282,'multiline':False]['text':'             {','line_number':283,'multiline':False]['text':'                 $match : {','line_number':284,'multiline':False]['text':'                     shard : <shard>,','line_number':285,'multiline':False]['text':'                     onCurrentShardSince : { $lt : <_maxHistoryTimeCurrentRound>,','line_number':286,'multiline':False]['text':'                                             $gte : <_maxHistoryTimePreviousRound> }','line_number':287,'multiline':False]['text':'                 }','line_number':288,'multiline':False]['text':'             },','line_number':289,'multiline':False]['text':'             {','line_number':290,'multiline':False]['text':'                 $limit : 1','line_number':291,'multiline':False]['text':'             }','line_number':292,'multiline':False]['text':'         ],','line_number':293,'multiline':False]['text':'         as : "chunks"','line_number':294,'multiline':False]['text':'     }','line_number':295,'multiline':False]['text':' }','line_number':296,'multiline':False]['text':' 3. Unwind stage to get the list of collections with mergeable chunks','line_number':316,'multiline':False]['text':' secondaryOk ','line_number':332,'multiline':True]['text':' useExhaust ','line_number':332,'multiline':True]['text':' namespace mongo','line_number':348,'multiline':False]