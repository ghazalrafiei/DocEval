['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' This shard version is used as the received version in StaleConfigInfo since we do not have','line_number':91,'multiline':False]['text':' information about the received version of the operation.','line_number':92,'multiline':False]['text':' check if exactly one document found','line_number':113,'multiline':False]['text':' Non-yielding collection scans from InternalPlanner will never error.','line_number':122,'multiline':False]['text':'*
 * Checks the collection's metadata for a successful split on the specified chunkRange using the
 * specified split points. Returns false if the metadata's chunks don't match the new chunk
 * boundaries exactly.
 ','line_number':128,'multiline':True]['text':' DBLock and CollectionLock must be used in order to avoid shard version checks','line_number':139,'multiline':False]['text':' receivedVersion ','line_number':150,'multiline':True]['text':' wantedVersion ','line_number':151,'multiline':True]['text':' receivedVersion ','line_number':156,'multiline':True]['text':' wantedVersion ','line_number':157,'multiline':True]['text':' receivedVersion ','line_number':166,'multiline':True]['text':' wantedVersion ','line_number':168,'multiline':True]['text':' Check that all new chunks fit the new chunk boundaries','line_number':176,'multiline':False]['text':' Special check for the last chunk produced.','line_number':185,'multiline':False]['text':' namespace','line_number':194,'multiline':False]['text':' If the shard key is hashed, then we must make sure that the split points are of supported','line_number':207,'multiline':False]['text':' data types.','line_number':208,'multiline':False]['text':' Commit the split to the config server.','line_number':223,'multiline':False]['text':' If we failed to get any response from the config server at all, despite retries, then we','line_number':242,'multiline':False]['text':' should just go ahead and fail the whole operation.','line_number':243,'multiline':False]['text':' old versions might not have the shardVersion field','line_number':251,'multiline':False]['text':' Check commandStatus and writeConcernStatus','line_number':259,'multiline':False]['text':' Send stale epoch if epoch of request did not match epoch of collection','line_number':263,'multiline':False]['text':' If _configsvrCommitChunkSplit returned an error, look at the metadata to','line_number':268,'multiline':False]['text':' determine if the split actually did happen. This can happen if there's a network error','line_number':269,'multiline':False]['text':' getting the response from the first call to _configsvrCommitChunkSplit, but it actually','line_number':270,'multiline':False]['text':' succeeds, thus the automatic retry fails with a precondition violation, for example.','line_number':271,'multiline':False]['text':' Split was committed.','line_number':279,'multiline':False]['text':' namespace mongo','line_number':290,'multiline':False]