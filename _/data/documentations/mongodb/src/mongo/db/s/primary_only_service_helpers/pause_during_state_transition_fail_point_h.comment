['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Helper class to make it easier to implementing pausing during state transitions for
 * PrimaryOnlyServices in a way that's easy to control programmatically. The State template
 * parameter should be the state enum type for your PrimaryOnlyService. Failpoints registered with
 * this class can be used with the following data:
 * {
 *     progress: <"before", "partial", or "after">,
 *     state: <string of associated State as determined by the supplied ParseFunction>
 * }
 * Then, when calling evaluate(progress, state), each of the supplied failpoints will pause if its
 * data matches the arguments.
 ','line_number':38,'multiline':True]['text':'*
     * All failpoints in the failpoints list will use the same logic for pausing. A single failpoint
     * can't be active multiple times with different arguments, but setting up more complex
     * scenarios sometimes requires multiple failpoints.
     ','line_number':59,'multiline':True]['text':'*
     * Users of this class should call evaluate with the associated StateTransitionProgress value
     * and new state at appropriate times (see comments on StateTransitionProgress) during their
     * state transition logic.
     ','line_number':67,'multiline':True]['text':' namespace primary_only_service_helpers','line_number':111,'multiline':False]['text':' namespace mongo','line_number':113,'multiline':False]