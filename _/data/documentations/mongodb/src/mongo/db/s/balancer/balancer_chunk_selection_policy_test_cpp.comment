['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "cxxabi.h"','line_number':32,'multiline':False]['text':'*
     * Generates a default chunks distribution across shards with the form:
     * [MinKey, 0), [0, 1), [1, 2) ... [N - 2, MaxKey)
     ','line_number':101,'multiline':True]['text':'*
     * Sets up mock network to expect a listDatabases command and returns a BSON response with
     * a dummy sizeOnDisk.
     ','line_number':119,'multiline':True]['text':'*
     * Sets up mock network to expect a serverStatus command and returns a BSON response with
     * a dummy version.
     ','line_number':140,'multiline':True]['text':'*
     * Sets up mock network for all the shards to expect the commands executed for computing cluster
     * stats, which include listDatabase and serverStatus.
     ','line_number':155,'multiline':True]['text':'*
     * Sets up mock network to expect a _shardsvrGetStatsForBalancing command and returns a BSON
     * response with a dummy version.
     ','line_number':166,'multiline':True]['text':'*
     * Sets up mock network for all the shards to expect the command `_shardsvrGetStatsForBalancing`
     * Given a request sent to a specific shard with below structure ...
     * {
     *     "_shardsvrGetStatsForBalancing" : 1,
     *     "collections" : [
     *         {
     *             "ns" : "TestDb.TestColl",
     *             "UUID" : "xxxx"
     *         },
     *         ...
     *     ]
     * }
     *
     * ... mocks a reply with the following structure:
     * {
     *     "stats" : [
     *         {
     *            "namespace" : "TestDb.TestColl",
     *            "collSize" : 12345,
     *         },
     *         ...
     *     ]
     * }
     ','line_number':183,'multiline':True]['text':' Build a response for every given request','line_number':214,'multiline':False]['text':' Get `shardId`','line_number':218,'multiline':False]['text':' Build `stats` array: [ {"namespace": <nss>, "collSize": <collSize>}, ...]','line_number':222,'multiline':False]['text':'*
     * Same as expectGetStatsForBalancingCommands with the difference that this function will expect
     * only one migration between the specified shards
     ','line_number':245,'multiline':True]['text':' Build a response for every given request','line_number':264,'multiline':False]['text':' Get `shardId`','line_number':268,'multiline':False]['text':' Build `stats` array: [ {"namespace": <nss>, "collSize": <collSize>}, ...]','line_number':272,'multiline':False]['text':'*
     * Sets up a collection and its chunks according to the given range distribution across
     * shards
     ','line_number':302,'multiline':True]['text':'*
     * Returns a new ShardType object with the specified zones appended to the given shard
     ','line_number':325,'multiline':True]['text':'*
     * Syntactic sugar function for calling BalancerChunkSelectionPolicy::selectChunksToMove()
     ','line_number':343,'multiline':True]['text':' Object under test','line_number':361,'multiline':False]['text':' Set up a database and a sharded collection in the metadata.','line_number':368,'multiline':False]['text':' Set up one chunk for the collection in the metadata.','line_number':374,'multiline':False]['text':' Set up two zones whose ranges overlap.','line_number':380,'multiline':False]['text':' Set up a database and a sharded collection in the metadata.','line_number':412,'multiline':False]['text':' Set up the zone.','line_number':418,'multiline':False]['text':' Give shard0 all the chunks so the cluster is imbalanced.','line_number':423,'multiline':False]['text':' The balancer does not bubble up the IllegalOperation error, but it is expected','line_number':436,'multiline':False]['text':' to postpone the balancing work for the zones with the error until the chunks','line_number':437,'multiline':False]['text':' are split appropriately.','line_number':438,'multiline':False]['text':' Override collections batch size to 4 for speeding up the test','line_number':461,'multiline':False]['text':' Set up 7 imbalanced collections (more than `kStatsForBalancingBatchSize`)','line_number':465,'multiline':False]['text':'numShards','line_number':492,'multiline':True]['text':' Collection size distribution for each collection:','line_number':494,'multiline':False]['text':'      Shard0 -> 512 MB','line_number':495,'multiline':False]['text':'      Shard1 ->   0 MB','line_number':496,'multiline':False]['text':'Bytes','line_number':498,'multiline':True]['text':'Bytes','line_number':498,'multiline':True]['text':' Check that all collections were selected for balancing at least once.','line_number':512,'multiline':False]['text':' Set up 4 collections','line_number':520,'multiline':False]['text':'numShards','line_number':545,'multiline':True]['text':' Collection size distribution for each collection:','line_number':547,'multiline':False]['text':'      Shard0 -> 512 MB','line_number':548,'multiline':False]['text':'      Shard1 ->   0 MB','line_number':549,'multiline':False]['text':'Bytes','line_number':551,'multiline':True]['text':'Bytes','line_number':551,'multiline':True]['text':' Check that all selected collections are cached','line_number':556,'multiline':False]['text':' Set up 4 collections and add all them into the imbalanced collections cache','line_number':570,'multiline':False]['text':'numShards','line_number':596,'multiline':True]['text':' Collection size distribution for each collection:','line_number':598,'multiline':False]['text':'      Shard0 -> 512 MB','line_number':599,'multiline':False]['text':'      Shard1 ->   0 MB','line_number':600,'multiline':False]['text':'Bytes','line_number':602,'multiline':True]['text':'Bytes','line_number':602,'multiline':True]['text':' Check that all selected collections are cached','line_number':611,'multiline':False]['text':' Override collections batch size to 4 for speeding up the test','line_number':622,'multiline':False]['text':' Set up 5 collections to process more than 1 batch','line_number':626,'multiline':False]['text':' Forcing timeout to exceed by setting it to 0','line_number':637,'multiline':False]['text':' We know that timeout exceeded because we only got 1 migration instead of the 2 migrations','line_number':643,'multiline':False]['text':' expected in a normal scenario with 4 shards','line_number':644,'multiline':False]['text':' We need to get at least 1 migration per batch since the timeout only exceeds when balancer','line_number':650,'multiline':False]['text':' has found at least one candidate migration On the other side, we must get less than 2','line_number':651,'multiline':False]['text':' migrations per batch since the maximum number of migrations per balancing round is 2 (with 4','line_number':652,'multiline':False]['text':' shards)','line_number':653,'multiline':False]['text':'numShards','line_number':655,'multiline':True]['text':'donor','line_number':655,'multiline':True]['text':'recipient','line_number':655,'multiline':True]['text':' Override collections batch size to 4 for speeding up the test','line_number':664,'multiline':False]['text':' Set up 5 collections to process 2 batches','line_number':668,'multiline':False]['text':' We are scheduling one migration on the first batch to make sure that the second batch is','line_number':686,'multiline':False]['text':' processed','line_number':687,'multiline':False]['text':'numShards','line_number':689,'multiline':True]['text':'donor','line_number':689,'multiline':True]['text':'recipient','line_number':689,'multiline':True]['text':'numShards','line_number':691,'multiline':True]['text':'donor','line_number':691,'multiline':True]['text':'recipient','line_number':691,'multiline':True]['text':' Override collections batch size to 4 for speeding up the test','line_number':700,'multiline':False]['text':' Set up 10 collections (more than 1 batch)','line_number':704,'multiline':False]['text':'numShards','line_number':721,'multiline':True]['text':' Only 1 batch must be processed, so we expect only 1 call to `getStatsForBalancing` since','line_number':723,'multiline':False]['text':' the cluster has 2 shards','line_number':724,'multiline':False]['text':'numShards','line_number':726,'multiline':True]['text':'donor','line_number':726,'multiline':True]['text':'recipient','line_number':726,'multiline':True]['text':' Enable defragmentation on collection 1','line_number':742,'multiline':False]['text':'numShards','line_number':760,'multiline':True]['text':'numShards','line_number':762,'multiline':True]['text':'donor','line_number':762,'multiline':True]['text':'recipient','line_number':762,'multiline':True]['text':' Disable balancing on collection 1','line_number':777,'multiline':False]['text':'numShards','line_number':794,'multiline':True]['text':'numShards','line_number':796,'multiline':True]['text':'donor','line_number':796,'multiline':True]['text':'recipient','line_number':796,'multiline':True]['text':' Override collections batch size to 4 for speeding up the test','line_number':804,'multiline':False]['text':' Set up 7 collections (2 batches)','line_number':808,'multiline':False]['text':'numShards','line_number':825,'multiline':True]['text':' Expecting 2 calls to getStatsForBalancing commands since there are 7 collections (2 batches)','line_number':827,'multiline':False]['text':' All collection distributions are balanced:','line_number':828,'multiline':False]['text':'      Shard0 -> 512 MB','line_number':829,'multiline':False]['text':'      Shard1 -> 500 MB','line_number':830,'multiline':False]['text':'Bytes','line_number':832,'multiline':True]['text':'Bytes','line_number':832,'multiline':True]['text':'Bytes','line_number':834,'multiline':True]['text':'Bytes','line_number':834,'multiline':True]['text':' Create 3 collections with no zones','line_number':843,'multiline':False]['text':' Setup the collection under test with the following routing table:','line_number':850,'multiline':False]['text':'     Shard0 -> [MinKey, 0)','line_number':851,'multiline':False]['text':'     Shard1 -> [0, MaxKey)','line_number':852,'multiline':False]['text':' Lambda function to assign specific zones to the collection under test and verify the output','line_number':856,'multiline':False]['text':' of `selectChunksToSplit`','line_number':857,'multiline':False]['text':'numShards','line_number':893,'multiline':True]['text':' Zone A: [-20, -10)','line_number':898,'multiline':False]['text':' Expected split point: -20, -10','line_number':899,'multiline':False]['text':' Zone A: [10, 20)','line_number':905,'multiline':False]['text':' Expected split points: 10, 20','line_number':906,'multiline':False]['text':' Zone A: [MinKey, 10)','line_number':911,'multiline':False]['text':' Expected split point: 10','line_number':912,'multiline':False]['text':' Zone B: [-10, MaxKey)','line_number':917,'multiline':False]['text':' Expected split point: -10','line_number':918,'multiline':False]['text':' Zone A: [-10, 20)','line_number':924,'multiline':False]['text':' Expected split points: 6','line_number':925,'multiline':False]['text':' Zone B: [-20, -10)','line_number':931,'multiline':False]['text':' Zone A: [-10, 20)','line_number':932,'multiline':False]['text':' Expected split points: -20, -10, 20','line_number':933,'multiline':False]['text':' Zone A: [0, MaxKey)','line_number':941,'multiline':False]['text':' Expected split point: NONE','line_number':942,'multiline':False]['text':' namespace','line_number':947,'multiline':False]['text':' namespace mongo','line_number':948,'multiline':False]