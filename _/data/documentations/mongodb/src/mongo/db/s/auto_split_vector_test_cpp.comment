['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'
 * Call the autoSplitVector function of the test collection on a chunk with bounds [0, 100) and with
 * the specified `maxChunkSizeMB`.
 ','line_number':63,'multiline':True]['text':' shard key pattern ','line_number':73,'multiline':True]['text':' min ','line_number':74,'multiline':True]['text':' max ','line_number':75,'multiline':True]['text':' max chunk size in bytes','line_number':76,'multiline':True]['text':'
     * Before each test case:
     * - Creates a sharded collection with shard key `_id`
     ','line_number':83,'multiline':True]['text':'
     * Insert the specified number of documents in the test collection, with incremental shard key
     * `_id` starting from `_nextShardKey`.
     ','line_number':103,'multiline':True]['text':' To get a 1MB document','line_number':110,'multiline':False]['text':' 1 MB document','line_number':116,'multiline':False]['text':'
     * Get the number of documents inserted until now.
     ','line_number':121,'multiline':True]['text':'
     * Before each test case:
     * - Creates a sharded collection with shard key `_id`
     * - Inserts `10` documents of ~1MB size (shard keys [0...9])
     ','line_number':133,'multiline':True]['text':' nDocs ','line_number':143,'multiline':True]['text':' Throw exception upon calling autoSplitVector on dropped/unexisting collection','line_number':150,'multiline':False]['text':' shard key pattern ','line_number':155,'multiline':True]['text':' min ','line_number':156,'multiline':True]['text':' max ','line_number':157,'multiline':True]['text':' max chunk size in bytes','line_number':158,'multiline':True]['text':' shard key pattern ','line_number':167,'multiline':True]['text':' min ','line_number':168,'multiline':True]['text':' max ','line_number':169,'multiline':True]['text':' max chunk size in bytes','line_number':170,'multiline':True]['text':' shard key pattern ','line_number':179,'multiline':True]['text':' min ','line_number':180,'multiline':True]['text':' max ','line_number':181,'multiline':True]['text':' max chunk size in bytes','line_number':182,'multiline':True]['text':' shard key pattern ','line_number':193,'multiline':True]['text':' min ','line_number':194,'multiline':True]['text':' max ','line_number':195,'multiline':True]['text':' max chunk size in bytes','line_number':196,'multiline':True]['text':' No split points if estimated `data size < max chunk size`','line_number':202,'multiline':False]['text':' maxChunkSizeMB ','line_number':204,'multiline':True]['text':' Do not split in case of `chunk size == maxChunkSize`','line_number':209,'multiline':False]['text':' maxChunkSizeMB ','line_number':211,'multiline':True]['text':' No split points if `chunk size > max chunk size` but threshold not reached','line_number':216,'multiline':False]['text':' Increase collection size so that the auto splitter can actually be triggered. Use a','line_number':220,'multiline':False]['text':' different range to don't interfere with the chunk getting splitted.','line_number':221,'multiline':False]['text':' nDocs ','line_number':222,'multiline':True]['text':' maxChunkSizeMB ','line_number':224,'multiline':True]['text':' One split point if `chunk size > max chunk size` and threshold reached','line_number':229,'multiline':False]['text':' nDocs ','line_number':232,'multiline':True]['text':' maxChunkSizeMB ','line_number':233,'multiline':True]['text':' nDocs ','line_number':241,'multiline':True]['text':' maxChunkSizeMB ','line_number':243,'multiline':True]['text':' Split points if `data size > max chunk size * 2` and threshold reached','line_number':249,'multiline':False]['text':' nDocs ','line_number':252,'multiline':True]['text':' maxChunkSizeMB ','line_number':253,'multiline':True]['text':' nDocs ','line_number':262,'multiline':True]['text':' maxChunkSizeMB ','line_number':264,'multiline':True]['text':' Split points are not recalculated if the right-most chunk is at least `80% maxChunkSize`','line_number':271,'multiline':False]['text':' nDocs ','line_number':274,'multiline':True]['text':' maxChunkSizeMB ','line_number':275,'multiline':True]['text':' nDocs ','line_number':283,'multiline':True]['text':' maxChunkSizeMB ','line_number':285,'multiline':True]['text':' Test that the limit argument is honored and that split points are correctly repositioned','line_number':291,'multiline':False]['text':' nDocs ','line_number':294,'multiline':True]['text':' Maximum split keys returned (no limit)','line_number':296,'multiline':False]['text':' maxChunkSizeMB ','line_number':298,'multiline':True]['text':' maxChunkSizeMB ','line_number':305,'multiline':True]['text':' nDocs ','line_number':312,'multiline':True]['text':' Maximum split keys returned (no limit)','line_number':314,'multiline':False]['text':' maxChunkSizeMB ','line_number':317,'multiline':True]['text':' maxChunkSizeMB ','line_number':324,'multiline':True]['text':'
     * Tests that last split points are properly repositioned in case the surplus allows so or not
     * repositioned otherwise.
     ','line_number':331,'multiline':True]['text':' maxChunkSizeMB ','line_number':349,'multiline':True]['text':' Expect an approximate match due to integers rounding in the split points algorithm.','line_number':354,'multiline':False]['text':' Test that last split points are recalculated fairly (if the surplus allows so)','line_number':367,'multiline':False]['text':' Avoid small sizes already checked in other test cases.','line_number':370,'multiline':False]['text':' Random maxDocsPerChunk in interval: [10, 110).','line_number':371,'multiline':False]['text':' Random surplus in interval: [0, maxDocsPerChunk).','line_number':373,'multiline':False]['text':' namespace','line_number':388,'multiline':False]['text':' namespace mongo','line_number':389,'multiline':False]