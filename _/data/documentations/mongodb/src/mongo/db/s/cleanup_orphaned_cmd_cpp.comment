['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Waits for all possibly orphaned ranges on 'nss' to be cleaned up.
 *
 * @return CleanupResult::kDone if no orphaned ranges remain
 * @return CleanupResult::kError and 'errMsg' if an error occurred
 *
 * If the collection is not sharded, returns CleanupResult::kDone.
 ','line_number':81,'multiline':True]['text':' Though the 'startingFromKey' parameter is not used as the min key of the range to','line_number':118,'multiline':False]['text':' wait for, we still validate that 'startingFromKey' in the same way as the original','line_number':119,'multiline':False]['text':' cleanupOrphaned logic did if 'startingFromKey' is present.','line_number':120,'multiline':False]['text':' We actually want to wait until there are no range deletion tasks for this namespace/UUID,','line_number':133,'multiline':False]['text':' but we don't have a good way to wait for that event, so instead we wait for there to be','line_number':134,'multiline':False]['text':' no tasks being processed in memory for this namespace/UUID.','line_number':135,'multiline':False]['text':' However, it's possible this node has recently stepped up, and the stepup recovery task to','line_number':136,'multiline':False]['text':' resubmit range deletion tasks for processing has not yet completed. In that case,','line_number':137,'multiline':False]['text':' waitForClean will return though there are still tasks in config.rangeDeletions, so we','line_number':138,'multiline':False]['text':' sleep for a short time and then try waitForClean again.','line_number':139,'multiline':False]['text':'*
 * Called on a particular namespace, and if the collection is sharded will wait for the number of
 * range deletion tasks on the collection on this shard to reach zero.
 *
 * Since the sharding state may change after this call returns, there is no guarantee that orphans
 * won't re-appear as a result of migrations that commit after this call returns.
 *
 * Safe to call with the balancer on.
 ','line_number':167,'multiline':True]['text':' Input','line_number':204,'multiline':False]['text':' namespace','line_number':254,'multiline':False]['text':' namespace mongo','line_number':255,'multiline':False]