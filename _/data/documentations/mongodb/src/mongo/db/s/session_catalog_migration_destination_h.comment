['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Provides infrastructure for retrieving session information that needs to be migrated from
 * the source migration shard.
 ','line_number':59,'multiline':True]['text':'*
     * Spawns a separate thread to initiate the session info transfer to this shard.
     ','line_number':92,'multiline':True]['text':'*
     * Signals to this object that the source shard will no longer create generate new
     * session info to transfer. In other words, once the source shard returns an empty
     * result for session info to transfer after this call, it is safe for this to stop.
     ','line_number':97,'multiline':True]['text':'*
     * Joins the spawned thread called by start(). Should only be called after finish()
     * was called.
     ','line_number':104,'multiline':True]['text':'*
     * Forces this into an error state which will also stop session transfer thread.
     ','line_number':110,'multiline':True]['text':'*
     * Returns the current state.
     ','line_number':115,'multiline':True]['text':'*
     * Returns the error message stored. This is only valid when getState() == ErrorOccurred.
     ','line_number':120,'multiline':True]['text':'*
     * Returns the number of session oplog entries processed by the _processSessionOplog() method
     ','line_number':125,'multiline':True]['text':' Protects _state and _errMsg.','line_number':147,'multiline':False]['text':' valid only if _state == ErrorOccurred.','line_number':150,'multiline':False]['text':' The number of session oplog entries processed. This is not always equal to the number of','line_number':152,'multiline':False]['text':' session oplog entries comitted because entries may have been processed but not committed','line_number':153,'multiline':False]['text':' namespace mongo','line_number':157,'multiline':False]