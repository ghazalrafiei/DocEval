['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':91,'multiline':False]['text':' waitForRecovery ','line_number':110,'multiline':True]['text':' Sharding DDL operations are not rollbackable so in case we recovered a coordinator','line_number':122,'multiline':False]['text':' from disk we need to ensure eventual completion of the DDL operation, so we must','line_number':123,'multiline':False]['text':' retry until we manage to acquire the lock.','line_number':124,'multiline':False]['text':' We can't rely on the instance token because after removing the document the','line_number':161,'multiline':False]['text':' CancellationSource object of the instance is lost, so the reference to the parent POS','line_number':162,'multiline':False]['text':' token is also lost, making any subsequent cancel during a stepdown unnoticeable by','line_number':163,'multiline':False]['text':' the token.','line_number':164,'multiline':False]['text':' Checkpoint configTime and topologyTime to guarantee causality with respect to DDL operations','line_number':173,'multiline':False]['text':' Sharding DDL operations are not rollbackable so in case we recovered a coordinator','line_number':233,'multiline':False]['text':' from disk we need to ensure eventual completion of the operation, so we must','line_number':234,'multiline':False]['text':' retry keep retrying until success.','line_number':235,'multiline':False]['text':' Fetching all the locks that need to be acquired. Sort them by nss to avoid deadlocks.','line_number':246,'multiline':False]['text':' If the requested nss represents a timeseries buckets namespace, translate it to its view nss.','line_number':247,'multiline':False]['text':' Acquiring all DDL locks in sorted order to avoid deadlocks','line_number':259,'multiline':False]['text':' Note that the sorted order is provided by default through the std::set container','line_number':260,'multiline':False]['text':' Acquiring the database DDL lock','line_number':266,'multiline':False]['text':' Acquiring the collection DDL lock','line_number':278,'multiline':False]['text':' Resolve any unresolved promises to avoid hanging.','line_number':308,'multiline':False]['text':' Check if this coordinator is allowed to start according to the user-writes blocking','line_number':337,'multiline':False]['text':' critical section. If it is not the first execution, it means it had started already','line_number':338,'multiline':False]['text':' and we are recovering this coordinator. In this case, let it be completed even though','line_number':339,'multiline':False]['text':' new DDL operations may be prohibited now.','line_number':340,'multiline':False]['text':' Coordinators that do not affect user data are allowed to start even when user writes','line_number':341,'multiline':False]['text':' are blocked.','line_number':342,'multiline':False]['text':' shardVersion ','line_number':361,'multiline':True]['text':' databaseVersion ','line_number':362,'multiline':True]['text':' this DDL operation operates on a DB','line_number':369,'multiline':False]['text':' this DDL operation operates directly on a bucket nss','line_number':371,'multiline':False]['text':' The construction of a DDL coordinator recovered from disk can only fail due to','line_number':386,'multiline':False]['text':' stepdown/shutdown.','line_number':387,'multiline':False]['text':' Ensure coordinator cleanup if the document has not been saved.','line_number':393,'multiline':False]['text':' Retry until either:','line_number':419,'multiline':False]['text':'  - The coordinator succeed','line_number':420,'multiline':False]['text':'  - The coordinator failed with non-retryable error determined by the','line_number':421,'multiline':False]['text':'  coordinator, or an already known retryable error','line_number':422,'multiline':False]['text':'  - Cleanup is not planned','line_number':423,'multiline':False]['text':'','line_number':424,'multiline':False]['text':'  If the token is not cancelled we retry because it could have been generated','line_number':425,'multiline':False]['text':'  by a remote node.','line_number':426,'multiline':False]['text':' If we are stepping down the token MUST be cancelled. Each implementation of the','line_number':447,'multiline':False]['text':' coordinator must retry remote stepping down errors, unless, we allow finalizing the','line_number':448,'multiline':False]['text':' coordinator in the presence of errors.','line_number':449,'multiline':False]['text':' Remove the ddl coordinator and release locks if the execution was successfull or if','line_number':459,'multiline':False]['text':' there was any error and we have the _completeOnError flag set or if we are not','line_number':460,'multiline':False]['text':' stepping down.','line_number':461,'multiline':False]['text':' We need to execute this in another executor to ensure the remove work is','line_number':482,'multiline':False]['text':' done.','line_number':483,'multiline':False]['text':' Release the instance without interrupting it.','line_number':489,'multiline':False]['text':' Return lsid to the SessionCache. If status is not OK, let the lsid be','line_number':498,'multiline':False]['text':' discarded.','line_number':499,'multiline':False]['text':' Ensure the only possible error is that we're stepping down.','line_number':505,'multiline':False]['text':' Release all DDL locks','line_number':513,'multiline':False]['text':' The config server may be a shard, so only add if it isn't already in participants.','line_number':537,'multiline':False]['text':' namespace mongo','line_number':561,'multiline':False]