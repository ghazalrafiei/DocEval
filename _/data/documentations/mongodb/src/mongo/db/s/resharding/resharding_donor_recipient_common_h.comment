['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Looks up the StateMachine by the 'reshardingUUID'. Returns boost::none in the following cases:
 * 1. The state machine does not exist.
 * 2. In certain cases when the node is shutting down.
 * Additionally returns a bool indicating if the node is stepping or shutting down to disambiguate
 * the two.
 ','line_number':52,'multiline':True]['text':'*
 * Same as tryGetReshardingStateMachineAndShutdownState, except does not return the shutdown state.
 ','line_number':68,'multiline':True]['text':'*
 * Same as tryGetReshardingStateMachine, except throws if we were stepping or shutting down when we
 * tried to access the PrimaryOnlyService. Use this function in situations where you need to
 * guarantee that a return of boost::none means that there is no state document on disk for the
 * associated state machine.
 ','line_number':80,'multiline':True]['text':'*
 * The following functions construct a ReshardingDocument from the given 'reshardingFields'.
 ','line_number':101,'multiline':True]['text':'*
 * Takes in the reshardingFields from a collection's config.collections entry and gives the
 * corresponding ReshardingDonorStateMachine or ReshardingRecipientStateMachine the updated
 * information. Will construct a ReshardingDonorStateMachine or ReshardingRecipientStateMachine if:
 *     1. The reshardingFields state indicates that the resharding operation is new, and
 *     2. A state machine does not exist on this node for the given namespace.
 ','line_number':115,'multiline':True]['text':' namespace resharding','line_number':135,'multiline':False]['text':' namespace mongo','line_number':136,'multiline':False]