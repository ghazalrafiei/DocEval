['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' This class is only instantiated on the destination of a chunk migration and','line_number':63,'multiline':False]['text':' has a single purpose: to manage two thread pools, one','line_number':64,'multiline':False]['text':' on which threads perform inserters, and one on which','line_number':65,'multiline':False]['text':' threads run _migrateClone requests (to fetch batches of documents to insert).','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' The constructor creates and starts the inserter thread pool.  The destructor shuts down','line_number':68,'multiline':False]['text':' and joins the inserter thread pool.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' The main work of the class is in method fetchAndScheduleInsertion.  That method','line_number':71,'multiline':False]['text':' starts a thread pool for fetchers.  Each thread in that thread pool sits in a loop','line_number':72,'multiline':False]['text':' sending out _migrateClone requests, blocking on the response, and scheduling an','line_number':73,'multiline':False]['text':' inserter on the inserter thread pool.  This function joins and shuts down the','line_number':74,'multiline':False]['text':' fetcher thread pool once all batches have been fetched.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' Inserter is templated only to allow a mock inserter to exist.','line_number':77,'multiline':False]['text':' There is only one implementation of inserter currently, which is MigrationBatchInserter.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' A few things to note:','line_number':80,'multiline':False]['text':'  - After fetchAndScheduleInsertion returns, insertions are still being executed (although fetches','line_number':81,'multiline':False]['text':'    are not).','line_number':82,'multiline':False]['text':'  - Sending out _migrateClone requests in parallel implies the need for synchronization on the','line_number':83,'multiline':False]['text':'    source.  See the comments in migration_chunk_cloner_source.h for details around','line_number':84,'multiline':False]['text':'    that.','line_number':85,'multiline':False]['text':'  - The requirement on source side synchronization implies that care must be taken on upgrade.','line_number':86,'multiline':False]['text':'    In particular, if the source is running an earlier binary that doesn't have code for','line_number':87,'multiline':False]['text':'    source side synchronization, it is unsafe to send _migrateClone requests in parallel.','line_number':88,'multiline':False]['text':'    To handle that case, when the source is prepared to service _migrateClone requests in','line_number':89,'multiline':False]['text':'    parallel, the field "parallelMigrateCloneSupported" is included in the "_recvChunkStart"','line_number':90,'multiline':False]['text':'    command.  The inclusion of that field indicates to the destination that it is safe','line_number':91,'multiline':False]['text':'    to send _migrateClone requests in parallel.  Its exclusion indicates that it is unsafe.','line_number':92,'multiline':False]['text':' Repeatedly fetch batches (using _migrateClone request) and schedule inserter jobs','line_number':111,'multiline':False]['text':' on thread pool.','line_number':112,'multiline':False]['text':' Get inserter thread pool stats.','line_number':115,'multiline':False]['text':'*
     * Keeps track of memory usage and makes sure it won't exceed the limit.
     ','line_number':121,'multiline':True]['text':'*
         * If adding the given amount of bytes will go over the limit, wait until there's
         * enough space then add.
         ','line_number':130,'multiline':True]['text':'*
         * Subtracts the tracked bytes by the given amount.
         ','line_number':136,'multiline':True]['text':' Size of thread pools.','line_number':151,'multiline':False]['text':' Inserter thread pool.','line_number':156,'multiline':False]['text':' Shared state, by which the progress of migration is communicated','line_number':167,'multiline':False]['text':' to MigrationDestinationManager.','line_number':168,'multiline':False]['text':' Indicates if source is prepared to service _migrateClone requests in parallel.','line_number':179,'multiline':False]['text':' Given session id and namespace, create migrateCloneRequest.','line_number':186,'multiline':False]['text':' Only should be created once for the lifetime of the object.','line_number':187,'multiline':False]['text':' Fetches next batch using _migrateClone request and return it.  May return an empty batch.','line_number':198,'multiline':False]['text':' namespace mongo','line_number':210,'multiline':False]['text':' namespace mongo','line_number':212,'multiline':False]