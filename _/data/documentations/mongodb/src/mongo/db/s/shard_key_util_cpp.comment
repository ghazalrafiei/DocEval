['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "boost/intrusive/detail/iterator.hpp"','line_number':32,'multiline':False]['text':'*
 * Create an index specification used for create index command.
 ','line_number':87,'multiline':True]['text':' Required fields for an index.','line_number':96,'multiline':False]['text':' This should match up with shell command.','line_number':114,'multiline':False]['text':' Index options.','line_number':119,'multiline':False]['text':' Creating an index with the "collation" option requires a v=2 index.','line_number':121,'multiline':False]['text':'*
 * Constructs the BSON specification document for the create indexes command using the given
 * namespace, index key and options.
 ','line_number':133,'multiline':True]['text':' The outer createIndexes command.','line_number':142,'multiline':False]['text':' namespace','line_number':150,'multiline':False]['text':' 1.  Verify consistency with existing unique indexes','line_number':161,'multiline':False]['text':' 2. Check for a useful index','line_number':175,'multiline':False]['text':' Check 2.i. and 2.ii.','line_number':181,'multiline':False]['text':' We can't currently use hashed indexes with a non-default hash seed','line_number':185,'multiline':False]['text':' Check iv.','line_number':186,'multiline':False]['text':' Note that this means that, for sharding, we only support one hashed index','line_number':187,'multiline':False]['text':' per field per collection.','line_number':188,'multiline':False]['text':' 3. If proposed key is required to be unique, additionally check for exact match.','line_number':213,'multiline':False]['text':' If no exact match, index not useful, but still possible to create one later','line_number':229,'multiline':False]['text':' Check 2.iii Make sure that there is a useful, non-multikey index available.','line_number':248,'multiline':False]['text':' 4. If no useful index, verify we can create one.','line_number':273,'multiline':False]['text':' 5. If no useful index exists and we can create one, create one on proposedKey. Only need','line_number':276,'multiline':False]['text':'    to call ensureIndex on primary shard, since indexes get copied to receiving shard','line_number':277,'multiline':False]['text':'    whenever a migrate occurs. If the collection has a default collation, explicitly send','line_number':278,'multiline':False]['text':'    the simple collation as part of the createIndex request.','line_number':279,'multiline':False]['text':' TODO: SERVER-64187 move calls to validateShardKeyIsNotEncrypted into','line_number':284,'multiline':False]['text':' validateShardKeyIndexExistsOrCreateIfPossible','line_number':285,'multiline':False]['text':' this collection is not encrypted','line_number':300,'multiline':False]['text':' Convert std::list to a std::vector.','line_number':331,'multiline':False]['text':' CheckShardingIndex returns UnknownError if a compatible shard key index cannot be found,','line_number':407,'multiline':False]['text':' but we return InvalidOptions to correspond with the shardCollection behavior.','line_number':408,'multiline':False]['text':' Rethrow any other error to allow retries on retryable errors.','line_number':411,'multiline':False]['text':'requireSingleKey=','line_number':457,'multiline':True]['text':' CheckShardingIndex returns UnknownError if a compatible shard key index cannot be found,','line_number':509,'multiline':False]['text':' but we return InvalidOptions to correspond with the shardCollection behavior.','line_number':510,'multiline':False]['text':' Rethrow any other error to allow retries on retryable errors.','line_number':513,'multiline':False]['text':' namespace shardkeyutil','line_number':540,'multiline':False]['text':' namespace mongo','line_number':541,'multiline':False]