['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Interface describing the interactions that the defragmentation policy can establish with the
 * phase of the algorithm that is currently active on a collection.
 * With the exception getType(), its methods do not guarantee thread safety.
 ','line_number':56,'multiline':True]['text':'*
 * Helper class that:
 * - stores the progress of the defragmentation algorithm on each collection
 * - generates a single sequence of action descriptors to fairly execute the defragmentation
 *   algorithm across collections
 ','line_number':89,'multiline':True]['text':'*
     * Requests the execution of the defragmentation algorithm on the required collections.
     ','line_number':114,'multiline':True]['text':'*
     * Checks if the collection is currently being defragmented, and signals the defragmentation to
     * end if so.
     ','line_number':119,'multiline':True]['text':'*
     * Requests to stop the emission of any new defragmentation action request. Does not alter the
     * persisted state of the affected collections. `startCollectionDefragmentation` can be invoked
     * on a later stage to resume the defragmentation on each item.
     ','line_number':125,'multiline':True]['text':'*
     * Returns `true` if the specified collection is currently being defragmented.
     ','line_number':132,'multiline':True]['text':'*
     * Pulls the next batch of actionable chunk migration requests, given the current internal state
     * and the passed in list of available shards.
     * Every chunk migration request is then expected to be acknowledged by the balancer by issuing
     * a call to `applyActionResult` (declared in `ActionsStreamPolicy`).
     ','line_number':139,'multiline':True]['text':'*
     * Advances the defragmentation state of the specified collection to the next actionable phase
     * (or sets the related DefragmentationPhase object to nullptr if nothing more can be done).
     ','line_number':149,'multiline':True]['text':'*
     * Move to the next phase and persist the phase change. This will end defragmentation if the
     * next phase is kFinished.
     * Must be called while holding the _stateMutex.
     ','line_number':155,'multiline':True]['text':'*
     * Builds the defragmentation phase object matching the current state of the passed
     * collection and sets it into _defragmentationStates.
     ','line_number':165,'multiline':True]['text':'*
     * Write the new phase to the defragmentationPhase field in config.collections. If phase is
     * kFinished, the field will be removed.
     * Must be called while holding the _stateMutex.
     ','line_number':171,'multiline':True]['text':'*
     * Remove all datasize fields from config.chunks for the given namespace.
     * Must be called while holding the _stateMutex.
     ','line_number':180,'multiline':True]['text':' namespace mongo','line_number':198,'multiline':False]