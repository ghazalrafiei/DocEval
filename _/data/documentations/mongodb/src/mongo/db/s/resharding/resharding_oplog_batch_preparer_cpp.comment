['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Return true if we need to update config.transactions collection for this oplog entry.
 ','line_number':61,'multiline':True]['text':' This applyOps oplog entry is guaranteed to correspond to a committed transaction since','line_number':78,'multiline':False]['text':' the resharding aggregation pipeline does not output applyOps oplog entries for aborted','line_number':79,'multiline':False]['text':' transactions (i.e. it only outputs the abortTransaction oplog entry).','line_number':80,'multiline':False]['text':' For a retryable internal transaction, we need to update the config.transactions','line_number':83,'multiline':False]['text':' collection upon writing the noop oplog entries for retryable operations contained','line_number':84,'multiline':False]['text':' within each applyOps oplog entry.','line_number':85,'multiline':False]['text':' The resharding aggregation pipeline also does not output the commitTransaction oplog','line_number':89,'multiline':False]['text':' entry so for a non-retryable transaction, we need to the update to the','line_number':90,'multiline':False]['text':' config.transactions collection upon seeing the final applyOps oplog entry.','line_number':91,'multiline':False]['text':' anonymous namespace','line_number':98,'multiline':False]['text':' There isn't a direct way to convert from a MutableOplogEntry to a','line_number':162,'multiline':False]['text':' DurableOplogEntry or OplogEntry. We serialize the unrolledOp to have it get','line_number':163,'multiline':False]['text':' re-parsed into an OplogEntry.','line_number':164,'multiline':False]['text':' `&derivedOp` is guaranteed to remain stable while we append more derived oplog','line_number':168,'multiline':False]['text':' entries because `derivedOps` is a std::list.','line_number':169,'multiline':False]['text':' Derive retryable write CRUD oplog entries from this retryable internal','line_number':229,'multiline':False]['text':' transaction applyOps oplog entry.','line_number':230,'multiline':False]['text':' Skip this operation since it is not retryable.','line_number':250,'multiline':False]['text':' There isn't a direct way to convert from a MutableOplogEntry to a','line_number':255,'multiline':False]['text':' DurableOplogEntry or OplogEntry. We serialize the unrolledOp to have it get','line_number':256,'multiline':False]['text':' re-parsed into an OplogEntry.','line_number':257,'multiline':False]['text':' `&derivedOp` is guaranteed to remain stable while we append more derived','line_number':262,'multiline':False]['text':' oplog entries because `derivedOps` is a std::list.','line_number':263,'multiline':False]['text':' Skip a few growth rounds in anticipation that we'll be appending more.','line_number':306,'multiline':False]['text':' namespace mongo','line_number':312,'multiline':False]