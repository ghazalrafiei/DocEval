['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Blocking method, which will wait for any concurrent operations that could change the database
 * version to complete (namely critical section and concurrent onDbVersionMismatch invocations).
 *
 * Returns 'true' if there were concurrent operations that had to be joined (in which case all locks
 * will be dropped). If there were none, returns false and the locks continue to be held.
 ','line_number':101,'multiline':True]['text':' The refresh was canceled by another thread that entered the critical section.','line_number':142,'multiline':False]['text':'*
 * Unconditionally refreshes the database metadata from the config server.
 *
 * NOTE: Does network I/O and acquires the database lock in X mode.
 ','line_number':151,'multiline':True]['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':164,'multiline':False]['text':' Can be uninterruptible because the work done under it can never block.','line_number':165,'multiline':False]['text':' NOLINT.','line_number':166,'multiline':False]['text':' Force a refresh of the cached database metadata from the config server.','line_number':171,'multiline':False]['text':' Before setting the database metadata, exit early if the database version received by the','line_number':175,'multiline':False]['text':' config server is not newer than the cached one. This is a best-effort optimization to reduce','line_number':176,'multiline':False]['text':' the number of possible threads convoying on the exclusive lock below.','line_number':177,'multiline':False]['text':' Set the refreshed database metadata in the local catalog.','line_number':199,'multiline':False]['text':' The database has been dropped, so clear its metadata in the local catalog.','line_number':202,'multiline':False]['text':' cancelOngoingRefresh ','line_number':203,'multiline':True]['text':' Reset the future reference to allow any other thread to refresh the database metadata.','line_number':207,'multiline':False]['text':' Forward `users` and `roles` attributes from the original request.','line_number':229,'multiline':False]['text':' Waited for another thread to exit from the critical section or to complete an','line_number':290,'multiline':False]['text':' ongoing refresh, so reacquire the locks.','line_number':291,'multiline':False]['text':' From now until the end of this block [1] no thread is in the critical section or','line_number':295,'multiline':False]['text':' can enter it (would require to X-lock the database) and [2] no metadata refresh','line_number':296,'multiline':False]['text':' is in progress or can start (would require to exclusive lock the DSS).','line_number':297,'multiline':False]['text':' Therefore, the database version can be accessed safely.','line_number':298,'multiline':False]['text':' No need to refresh the database metadata as the wanted version is newer','line_number':302,'multiline':False]['text':' than the one received.','line_number':303,'multiline':False]['text':' Waited for another thread to exit from the critical section or to complete an','line_number':316,'multiline':False]['text':' ongoing refresh, so reacquire the locks.','line_number':317,'multiline':False]['text':' From now until the end of this block [1] no thread is in the critical section or can','line_number':321,'multiline':False]['text':' enter it (would require to X-lock the database) and [2] this is the only metadata','line_number':322,'multiline':False]['text':' refresh in progress (holding the exclusive lock on the DSS).','line_number':323,'multiline':False]['text':' Therefore, the future to refresh the database metadata can be set.','line_number':324,'multiline':False]['text':' No other metadata refresh for this database can run in parallel. If another thread enters','line_number':335,'multiline':False]['text':' the critical section, the ongoing refresh would be interrupted and subsequently','line_number':336,'multiline':False]['text':' re-queued.','line_number':337,'multiline':False]['text':' The refresh was canceled by another thread that entered the critical section.','line_number':342,'multiline':False]['text':'*
 * Blocking method, which will wait for any concurrent operations that could change the shard
 * version to complete (namely critical section and concurrent onCollectionPlacementVersionMismatch
 * invocations).
 *
 * Returns 'true' if there were concurrent operations that had to be joined (in which case all locks
 * will be dropped). If there were none, returns false and the locks continue to be held.
 ','line_number':350,'multiline':True]['text':' The ongoing refresh has finished, although it was canceled by a','line_number':388,'multiline':False]['text':' 'clearFilteringMetadata'.','line_number':389,'multiline':False]['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':421,'multiline':False]['text':' Can be uninterruptible because the work done under it can never block','line_number':422,'multiline':False]['text':' NOLINT.','line_number':423,'multiline':False]['text':' Abort and join any ongoing migration if migrations are disallowed for the','line_number':440,'multiline':False]['text':' namespace.','line_number':441,'multiline':False]['text':' There is no need to abort an ongoing migration if the refresh is','line_number':451,'multiline':False]['text':' cancelled.','line_number':452,'multiline':False]['text':' If the collection metadata after a refresh has 'reshardingFields', then pass it','line_number':465,'multiline':False]['text':' to the resharding subsystem to process.','line_number':466,'multiline':False]['text':' Only if all actions taken as part of refreshing the placement version completed','line_number':476,'multiline':False]['text':' successfully do we want to install the current metadata. A view can potentially','line_number':477,'multiline':False]['text':' be created after spawning a thread to recover nss's shard version. It is then ok','line_number':478,'multiline':False]['text':' to lock views in order to clear filtering metadata. DBLock and CollectionLock','line_number':479,'multiline':False]['text':' must be used in order to avoid placement version checks','line_number':480,'multiline':False]['text':' cancellationToken needs to be checked under the CSR lock before overwriting the','line_number':487,'multiline':False]['text':' filtering metadata to serialize with other threads calling','line_number':488,'multiline':False]['text':' 'clearFilteringMetadata'.','line_number':489,'multiline':False]['text':' Atomically set the new filtering metadata and check if there is a migration','line_number':491,'multiline':False]['text':' that must be aborted.','line_number':492,'multiline':False]['text':' Join any ongoing migration outside of the CSR lock.','line_number':503,'multiline':False]['text':' Remember to wake all waiting threads for this refresh to finish.','line_number':509,'multiline':False]['text':' Check the cancellation token here to ensure we throw in all cancelation events.','line_number':521,'multiline':False]['text':' namespace','line_number':534,'multiline':False]['text':' The refresh threads do not perform any data reads themselves, therefore they don't','line_number':562,'multiline':False]['text':' need to go through admission control.','line_number':563,'multiline':False]['text':' Don't need to remotely reload if the requested version is smaller than the','line_number':584,'multiline':False]['text':' known one. This means that the remote side is behind.','line_number':585,'multiline':False]['text':' If we reached here, there were no ongoing critical sections or recoverRefresh running','line_number':600,'multiline':False]['text':' and we are holding the exclusive CSR lock.','line_number':601,'multiline':False]['text':' If the shard doesn't yet know its filtering metadata, recovery needs to be run','line_number':603,'multiline':False]['text':' The refresh was canceled by a 'clearFilteringMetadata'. Retry the refresh.','line_number':618,'multiline':False]['text':' DBLock and CollectionLock are used here to avoid throwing further recursive stale','line_number':688,'multiline':False]['text':' config errors, as well as a possible InvalidViewDefinition error if an invalid view','line_number':689,'multiline':False]['text':' is in the 'system.views' collection.','line_number':690,'multiline':False]['text':' Optimistic check with only IS lock in order to avoid threads piling up on the collection','line_number':700,'multiline':False]['text':' X lock below','line_number':701,'multiline':False]['text':' DBLock and CollectionLock are used here to avoid throwing further recursive stale','line_number':703,'multiline':False]['text':' config errors, as well as a possible InvalidViewDefinition error if an invalid view','line_number':704,'multiline':False]['text':' is in the 'system.views' collection.','line_number':705,'multiline':False]['text':' Exclusive collection lock needed since we're now changing the metadata.','line_number':726,'multiline':False]['text':'','line_number':727,'multiline':False]['text':' DBLock and CollectionLock are used here to avoid throwing further recursive stale config','line_number':728,'multiline':False]['text':' errors, as well as a possible InvalidViewDefinition error if an invalid view is in the','line_number':729,'multiline':False]['text':' 'system.views' collection.','line_number':730,'multiline':False]['text':' namespace mongo','line_number':772,'multiline':False]