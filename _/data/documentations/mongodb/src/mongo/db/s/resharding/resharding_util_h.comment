['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Emplaces the 'fetchTimestamp' onto the ClassWithFetchTimestamp if the timestamp has been
 * emplaced inside the boost::optional.
 ','line_number':79,'multiline':True]['text':'*
 * Emplaces the 'minFetchTimestamp' onto the ClassWithFetchTimestamp if the timestamp has been
 * emplaced inside the boost::optional.
 ','line_number':124,'multiline':True]['text':'*
 * Returns a serialized version of the originalError status. If the originalError status exceeds
 * maxErrorBytes, truncates the status and returns it in the errmsg field of a new status with code
 * ErrorCodes::ReshardingCollectionTruncatedError.
 ','line_number':144,'multiline':True]['text':'*
 * Emplaces the 'abortReason' onto the ClassWithAbortReason if the reason has been emplaced inside
 * the boost::optional. If the 'abortReason' is too large, emplaces a status with
 * ErrorCodes::ReshardCollectionTruncatedError and a truncated version of the 'abortReason' for the
 * errmsg.
 ','line_number':151,'multiline':True]['text':' If there already is an abortReason, don't overwrite it.','line_number':167,'multiline':False]['text':'*
 * Extract the abortReason BSONObj into a status.
 ','line_number':177,'multiline':True]['text':'*
 * Extracts the ShardId from each Donor/RecipientShardEntry in participantShardEntries.
 ','line_number':196,'multiline':True]['text':'*
 * Extracts the ShardId from each Donor/RecipientShardEntry in participantShardEntries as a set.
 ','line_number':210,'multiline':True]['text':'*
 * Helper method to construct a DonorShardEntry with the fields specified.
 ','line_number':224,'multiline':True]['text':'*
 * Helper method to construct a RecipientShardEntry with the fields specified.
 ','line_number':232,'multiline':True]['text':'*
 * Assembles the namespace string for the temporary resharding collection based on the source
 * namespace components.
 *
 *      <db>.system.resharding.<existing collection's UUID>
 ','line_number':239,'multiline':True]['text':'*
 * Gets the recipient shards for a resharding operation.
 ','line_number':247,'multiline':True]['text':'*
 * Asserts that there is not a hole or overlap in the chunks.
 ','line_number':254,'multiline':True]['text':'*
 * Validates resharded chunks provided with a reshardCollection cmd. Parses each BSONObj to a valid
 * ReshardedChunk and asserts that each chunk's shardId is associated with an existing entry in
 * the shardRegistry. Then, asserts that there is not a hole or overlap in the chunks.
 ','line_number':260,'multiline':True]['text':'*
 * Selects the highest minFetchTimestamp from the list of donors.
 *
 * Throws if not every donor has a minFetchTimestamp.
 ','line_number':269,'multiline':True]['text':'*
 * Asserts that there is not an overlap in the zone ranges.
 ','line_number':276,'multiline':True]['text':'*
 * Builds documents to insert into config.tags from zones provided to reshardCollection cmd.
 ','line_number':281,'multiline':True]['text':'*
 * Create an array of resharding zones from the existing collection. This is used for forced
 * same-key resharding.
 ','line_number':288,'multiline':True]['text':'*
 * Creates a pipeline that can be serialized into a query for fetching oplog entries. `startAfter`
 * may be `Timestamp::isNull()` to fetch from the beginning of the oplog.
 ','line_number':295,'multiline':True]['text':'*
 * Sentinel oplog format:
 * {
 *   op: "n",
 *   ns: "<database>.<collection>",
 *   ui: <existingUUID>,
 *   destinedRecipient: <recipientShardId>,
 *   o: {msg: "Writes to <database>.<collection> is temporarily blocked for resharding"},
 *   o2: {type: "reshardFinalOp", reshardingUUID: <reshardingUUID>},
 *   fromMigrate: true,
 * }
 ','line_number':305,'multiline':True]['text':'*
 * Looks up the StateMachine by namespace of the collection being resharded. If it does not exist,
 * returns boost::none.
 ','line_number':334,'multiline':True]['text':'*
 * Validate the shardDistribution parameter in reshardCollection cmd, which should satisfy the
 * following properties:
 * - The shardKeyRanges should be continuous and cover the full data range.
 * - Every shardKeyRange should be on the same key.
 * - A shardKeyRange should either have no min/max or have a min/max pair.
 * - All shardKeyRanges in the array should have the same min/max pattern.
 * Not satisfying the rules above will cause an uassert failure.
 ','line_number':357,'multiline':True]['text':'*
 * Returns true if the provenance is moveCollection or balancerMoveCollection.
 ','line_number':370,'multiline':True]['text':' namespace resharding','line_number':375,'multiline':False]['text':' namespace mongo','line_number':376,'multiline':False]