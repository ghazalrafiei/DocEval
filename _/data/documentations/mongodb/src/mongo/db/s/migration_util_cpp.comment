['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' TODO SERVER-57253: get rid of _mutex and _started fields','line_number':174,'multiline':False]['text':' TODO SERVER-57253: start migration util executor at decoration construction time','line_number':184,'multiline':False]['text':' Can throw NamespaceNotFound if the collection/database was dropped','line_number':201,'multiline':False]['text':' namespace','line_number':258,'multiline':False]['text':' If the input range is shorter than the range in the ChunkManager inside','line_number':323,'multiline':False]['text':' 'metadata', we must extend its bounds to get a correct comparison. If the input','line_number':324,'multiline':False]['text':' range is longer than the range in the ChunkManager, we likewise must shorten it.','line_number':325,'multiline':False]['text':' We make sure to match what's in the ChunkManager instead of the other way around,','line_number':326,'multiline':False]['text':' since the ChunkManager only stores ranges and compares overlaps using a string version of the','line_number':327,'multiline':False]['text':' key, rather than a BSONObj. This logic is necessary because the _metadata list can','line_number':328,'multiline':False]['text':' contain ChunkManagers with different shard keys if the shard key has been refined.','line_number':329,'multiline':False]['text':'','line_number':330,'multiline':False]['text':' Note that it's safe to use BSONObj::nFields() (which returns the number of top level','line_number':331,'multiline':False]['text':' fields in the BSONObj) to compare the two, since shard key refine operations can only add','line_number':332,'multiline':False]['text':' top-level fields.','line_number':333,'multiline':False]['text':'','line_number':334,'multiline':False]['text':' Using extractFieldsUndotted to shorten the input range is correct because the ChunkRange and','line_number':335,'multiline':False]['text':' the shard key pattern will both already store nested shard key fields as top-level dotted','line_number':336,'multiline':False]['text':' fields, and extractFieldsUndotted uses the top-level fields verbatim rather than treating','line_number':337,'multiline':False]['text':' dots as accessors for subfields.','line_number':338,'multiline':False]['text':' makeUpperInclusive ','line_number':344,'multiline':True]['text':' makeUpperInclusive ','line_number':346,'multiline':True]['text':' Convert a DuplicateKey error to an anonymous error.','line_number':372,'multiline':False]['text':' The message expected by change streams','line_number':391,'multiline':False]['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':399,'multiline':False]['text':' NOLINT.','line_number':400,'multiline':False]['text':' The message expected by change streams','line_number':426,'multiline':False]['text':' TODO (SERVER-71444): Fix to be interruptible or document exception.','line_number':434,'multiline':False]['text':' NOLINT.','line_number':435,'multiline':False]['text':' Ensure there is only one migrationCoordinator document to be recovered for this','line_number':595,'multiline':False]['text':' namespace.','line_number':596,'multiline':False]['text':' Create a MigrationCoordinator to complete the coordination.','line_number':601,'multiline':False]['text':' The decision is already known.','line_number':605,'multiline':False]['text':' The decision is not known. Recover the decision from the config server.','line_number':612,'multiline':False]['text':' UUID don't match','line_number':657,'multiline':False]['text':' TODO SERVER-77472: remove this once we are sure all operations persist the config','line_number':670,'multiline':False]['text':' time after a collection drop. Since the collection has been dropped, persist','line_number':671,'multiline':False]['text':' config time inclusive of the drop collection event before deleting leftover','line_number':672,'multiline':False]['text':' migration metadata. This will ensure that in case of stepdown the new primary','line_number':673,'multiline':False]['text':' won't read stale data from config server and think that the sharded collection','line_number':674,'multiline':False]['text':' still exists.','line_number':675,'multiline':False]['text':' Note this should only extend the range boundaries (if there has been a shard key','line_number':690,'multiline':False]['text':' refine since the migration began) and never truncate them.','line_number':691,'multiline':False]['text':' Convert a DuplicateKey error to an anonymous error.','line_number':767,'multiline':False]['text':' Before deleting the migration recipient recovery document, ensure that in the case of a','line_number':777,'multiline':False]['text':' crash, the node will start-up from a configTime that is inclusive of the migration that was','line_number':778,'multiline':False]['text':' committed during the critical section.','line_number':779,'multiline':False]['text':' Register this receiveChunk on the ActiveMigrationsRegistry before completing step-up','line_number':813,'multiline':False]['text':' to prevent a new migration from starting while a receiveChunk was ongoing. Wait for','line_number':814,'multiline':False]['text':' any migrations that began in a previous term to complete if there are any.','line_number':815,'multiline':False]['text':' waitForCompletionOfConflictingOps ','line_number':822,'multiline':True]['text':' This is expected in the event of a stepdown.','line_number':866,'multiline':False]['text':' namespace migrationutil','line_number':876,'multiline':False]['text':' namespace mongo','line_number':877,'multiline':False]