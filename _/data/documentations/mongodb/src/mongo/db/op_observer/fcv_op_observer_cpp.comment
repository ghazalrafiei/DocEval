['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' We set the last FCV update timestamp before setting the new FCV, to make sure we never','line_number':82,'multiline':False]['text':' read an FCV that is not stable.  We might still read a stale one.','line_number':83,'multiline':False]['text':' (Generic FCV reference): This FCV check should exist across LTS binary versions.','line_number':98,'multiline':False]['text':' minWireVersion == maxWireVersion on kLatest FCV or upgrading/downgrading FCV.','line_number':101,'multiline':False]['text':' Close all incoming connections from internal clients with binary versions lower than','line_number':102,'multiline':False]['text':' ours.','line_number':103,'multiline':False]['text':' Close all outgoing connections to servers with binary versions lower than ours.','line_number':109,'multiline':False]['text':' We make assumptions that transactions don't span an FCV change. And FCV changes also take','line_number':119,'multiline':False]['text':' the global lock in S mode to create a barrier for operations in IX/X mode, we abort all open','line_number':120,'multiline':False]['text':' transactions here to release the global IX locks held by the transactions more proactively','line_number':121,'multiline':False]['text':' rather than waiting for the transactions to complete. FCV changes take the global S lock when','line_number':122,'multiline':False]['text':' in the upgrading/downgrading state.','line_number':123,'multiline':False]['text':' (Generic FCV reference): This FCV check should exist across LTS binary versions.','line_number':124,'multiline':False]['text':' Swallow the error when running within a recovery unit to avoid process termination.','line_number':132,'multiline':False]['text':' The failure can be ignored here, assuming that the setFCV command will also be','line_number':133,'multiline':False]['text':' interrupted on _prepareToUpgrade/Downgrade() or earlier.','line_number':134,'multiline':False]['text':' We only want to increment the server TopologyVersion when the minWireVersion has changed.','line_number':142,'multiline':False]['text':' This can happen in the following cases:','line_number':143,'multiline':False]['text':' 1. Setting featureCompatibilityVersion from downgrading to fullyDowngraded.','line_number':144,'multiline':False]['text':' 2. Setting featureCompatibilityVersion from fullyDowngraded to upgrading.','line_number':145,'multiline':False]['text':' 3. Rollback from downgrading to fullyUpgraded.','line_number':146,'multiline':False]['text':' 4. Rollback from fullyDowngraded to downgrading.','line_number':147,'multiline':False]['text':' Note that the minWireVersion does not change between downgrading -> isCleaningServerMetadata,','line_number':148,'multiline':False]['text':' as the FCV of the isCleaningServerMetadata is still kDowngrading, so the prevVersion and','line_number':149,'multiline':False]['text':' newVersion will be equal','line_number':150,'multiline':False]['text':' (Generic FCV reference): This FCV check should exist across LTS binary versions.','line_number':151,'multiline':False]['text':' (Generic FCV reference): This FCV check should exist across LTS binary versions.','line_number':160,'multiline':False]['text':' To avoid extra log messages when the targetVersion is set/unset, only log when the','line_number':178,'multiline':False]['text':' version changes.','line_number':179,'multiline':False]['text':'onRollback','line_number':196,'multiline':True]['text':'withinRecoveryUnit','line_number':196,'multiline':True]['text':' documentKeyDecoration is set in OpObserverImpl::aboutToDelete. So the FcvOpObserver','line_number':232,'multiline':False]['text':' relies on the OpObserverImpl also being in the opObserverRegistry.','line_number':233,'multiline':False]['text':' Ensures the in-memory and on-disk FCV states are consistent after a rollback.','line_number':246,'multiline':False]['text':'onRollback','line_number':261,'multiline':True]['text':'withinRecoveryUnit','line_number':261,'multiline':True]['text':' The rollback FCV is already in the stable snapshot.','line_number':262,'multiline':False]['text':' namespace mongo','line_number':268,'multiline':False]