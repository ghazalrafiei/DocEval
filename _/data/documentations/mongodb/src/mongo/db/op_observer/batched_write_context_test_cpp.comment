['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' This test fixture provides access to a properly initialized global service context to test the','line_number':57,'multiline':False]['text':' BatchedWriteContext class and its interaction with WriteUnitOfWork. For batched write','line_number':58,'multiline':False]['text':' interactions with the oplog, see BatchedWriteOutputsTest.','line_number':59,'multiline':False]['text':'groupOplogEntries=','line_number':80,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer starting batched write.','line_number':97,'multiline':False]['text':'groupOplogEntries=','line_number':112,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer starting batched write.','line_number':114,'multiline':False]['text':'groupOplogEntries=','line_number':131,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer starting batched write.','line_number':133,'multiline':False]['text':'groupOplogEntries=','line_number':151,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer starting batched write.','line_number':153,'multiline':False]['text':'groupOplogEntries=','line_number':170,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer starting batched write.','line_number':172,'multiline':False]['text':'groupOplogEntries=','line_number':186,'multiline':True]['text':' Need to explicitly set writes are batched to simulate op observer','line_number':187,'multiline':False]['text':' Batched write committing is handled outside of the batched write context and involves the','line_number':210,'multiline':False]['text':' oplog so it is not necessary to commit the WriteUnitOfWork in this test.','line_number':211,'multiline':False]['text':' namespace','line_number':215,'multiline':False]['text':' namespace mongo','line_number':216,'multiline':False]