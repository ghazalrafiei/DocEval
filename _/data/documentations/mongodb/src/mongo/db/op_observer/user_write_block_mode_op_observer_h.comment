['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * OpObserver for user write blocking. On write operations, checks whether the current global user
 * write blocking state allows the write, and uasserts if not.
 ','line_number':53,'multiline':True]['text':' Operations to check for allowed writes.','line_number':65,'multiline':False]['text':' CUD operations','line_number':67,'multiline':False]['text':' DDL operations','line_number':100,'multiline':False]['text':' We need to check the startIndexBuild ops because onCreateIndex is only called for empty','line_number':107,'multiline':False]['text':' collections.','line_number':108,'multiline':False]['text':' onRenameCollection is only for renaming to a nonexistent target NS, so we need','line_number':148,'multiline':False]['text':' preRenameCollection too.','line_number':149,'multiline':False]['text':' Noop operations below with explanations (don't perform any check).','line_number':179,'multiline':False]['text':' onModifyCollectionShardingIndexCatalog() is unchecked because sharded collection indexes','line_number':181,'multiline':False]['text':' catalog are modified from internal commands.','line_number':182,'multiline':False]['text':' onCreateGlobalIndex() and onDropGlobalIndex() are unchecked because global indexes are','line_number':184,'multiline':False]['text':' created from internal commands.','line_number':185,'multiline':False]['text':' Index builds committing (onCommitIndexBuild()) can be left unchecked since we kill any active','line_number':187,'multiline':False]['text':' index builds before enabling write blocking. This means any index build which gets to the','line_number':188,'multiline':False]['text':' commit phase while write blocking is active was started and hit the onStartIndexBuild hook','line_number':189,'multiline':False]['text':' with write blocking active, and thus must be allowed under user write blocking.','line_number':190,'multiline':False]['text':' At the moment we are leaving the onAbortIndexBuildSinglePhase() and onAbortIndexBuild() as','line_number':192,'multiline':False]['text':' unchecked. This is because they can be called from both user and internal codepaths, and','line_number':193,'multiline':False]['text':' we don't want to risk throwing an assert for the internal paths.','line_number':194,'multiline':False]['text':' We don't need to check postRenameCollection() and preRenameCollection (they are in the same','line_number':196,'multiline':False]['text':' WUOW).','line_number':197,'multiline':False]['text':' The on*Transaction*() transaction commit related hooks don't need to be checked, because all','line_number':199,'multiline':False]['text':' of the operations inside the transaction are checked and they all execute in one WUOW.','line_number':200,'multiline':False]['text':' uasserts that a write to the given namespace is allowed under the current user write blocking','line_number':202,'multiline':False]['text':' setting.','line_number':203,'multiline':False]['text':' namespace mongo','line_number':207,'multiline':False]