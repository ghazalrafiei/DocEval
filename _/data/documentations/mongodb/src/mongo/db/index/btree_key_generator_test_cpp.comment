['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'','line_number':63,'multiline':False]['text':' Helper functions','line_number':64,'multiline':False]['text':'','line_number':65,'multiline':False]['text':'','line_number':116,'multiline':False]['text':' Construct the btree key generator object, using the index key pattern.','line_number':117,'multiline':False]['text':'','line_number':118,'multiline':False]['text':'','line_number':133,'multiline':False]['text':' Ask 'keyGen' to generate index keys for the object 'obj' and report any prefixes of the','line_number':134,'multiline':False]['text':' indexed fields that would cause the index to be multikey as a result of inserting','line_number':135,'multiline':False]['text':' 'actualKeys'.','line_number':136,'multiline':False]['text':'','line_number':137,'multiline':False]['text':'','line_number':143,'multiline':False]['text':' Check that the results match the expected result.','line_number':144,'multiline':False]['text':'','line_number':145,'multiline':False]['text':' If it is correct to do so, then test that the fast key generation path for the non-multikey','line_number':170,'multiline':False]['text':' case works as expected.','line_number':171,'multiline':False]['text':' Test that fully general key generation path works as expected.','line_number':181,'multiline':False]['text':'','line_number':185,'multiline':False]['text':' Unit tests','line_number':186,'multiline':False]['text':'','line_number':187,'multiline':False]['text':' sparse','line_number':305,'multiline':False]['text':' collator','line_number':306,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':307,'multiline':False]['text':' Both the 'a' and 'a.b' arrays contain a single element, so they are considered multikey.','line_number':429,'multiline':False]['text':' sparse','line_number':443,'multiline':False]['text':' collator','line_number':444,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':445,'multiline':False]['text':' Here the first "0" path component acts like a regular field name rather than a positional','line_number':775,'multiline':False]['text':' path element, since the 0th array index does not exist. Therefore, path component "a" is','line_number':776,'multiline':False]['text':' considered multikey.','line_number':777,'multiline':False]['text':' Path component "0" refers to an array which is subsequently expanded, so it is considered','line_number':815,'multiline':False]['text':' multikey.','line_number':816,'multiline':False]['text':' sparse','line_number':900,'multiline':False]['text':' collator','line_number':901,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':902,'multiline':False]['text':' sparse','line_number':915,'multiline':False]['text':' collator','line_number':916,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':917,'multiline':False]['text':' Descriptive test. Should future index versions recursively index nested arrays?','line_number':977,'multiline':False]['text':' Descriptive test. Should parallel indexed arrays be allowed? If not, should empty','line_number':988,'multiline':False]['text':' or single-element arrays be considered for the parallel array check?','line_number':989,'multiline':False]['text':' sparse','line_number':999,'multiline':False]['text':' collator','line_number':1000,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':1001,'multiline':False]['text':' sparse','line_number':1014,'multiline':False]['text':' collator','line_number':1015,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':1016,'multiline':False]['text':' sparse','line_number':1029,'multiline':False]['text':' collator','line_number':1030,'multiline':False]['text':' runWithoutSkipMultiKey','line_number':1031,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1035,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1046,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1057,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1069,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1080,'multiline':False]['text':' Descriptive test. The semantics for key generation are odd for positional key patterns.','line_number':1091,'multiline':False]['text':' Descriptive test. Should we define better semantics for future index versions in the case of','line_number':1135,'multiline':False]['text':' repeated field names?','line_number':1136,'multiline':False]['text':' Descriptive test. Future index versions may want different or at least more consistent','line_number':1147,'multiline':False]['text':' handling of empty path components.','line_number':1148,'multiline':False]['text':' Descriptive test. Future index versions may want different or at least more consistent','line_number':1161,'multiline':False]['text':' handling of empty path components.','line_number':1162,'multiline':False]['text':' Descriptive test.','line_number':1292,'multiline':False]['text':' Descriptive test.','line_number':1314,'multiline':False]['text':' namespace','line_number':1440,'multiline':False]