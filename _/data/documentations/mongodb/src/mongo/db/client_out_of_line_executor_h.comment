['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A client decoration that allows out-of-line, client-local execution of tasks.
 * So long as the client thread exists, tasks can be scheduled to execute on the client thread.
 * Other threads must always schedule tasks through an instance of `QueueHandle`.
 * Once the decoration is destructed, `QueueHandle` runs tasks on the caller's thread, providing
 * `ErrorCodes::CallbackCanceled` as the status.
 ','line_number':43,'multiline':True]['text':' Blocks until the executor is done running all scheduled tasks.','line_number':64,'multiline':False]['text':' Allows other threads to access the queue irrespective of the client's lifetime.','line_number':69,'multiline':False]['text':' We always acquire a handle before scheduling tasks on the executor. The following ensures','line_number':83,'multiline':False]['text':' that acquiring a handle, thus exposing the executor to the outside world, always requires','line_number':84,'multiline':False]['text':' shutdown. A combination of load/store is preferred over using CAS due to performance','line_number':85,'multiline':False]['text':' considerations, and considering the fact that overwriting `_requireShutdown` is safe.','line_number':86,'multiline':False]['text':' Shutdown is not required so long as the executor is not exposed to the outside world.','line_number':93,'multiline':False]['text':' Provides the means to ensure `shutdown()` always precedes the destructor.','line_number':101,'multiline':False]['text':' namespace mongo','line_number':105,'multiline':False]