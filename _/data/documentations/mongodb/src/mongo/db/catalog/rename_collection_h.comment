['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace repl','line_number':51,'multiline':False]['text':'*
 * Renames the collection from "source" to "target" and drops the existing collection if
 * "dropTarget" is true. "stayTemp" indicates whether a collection should maintain its
 * temporariness. "newTargetCollectionUUID" is the UUID set to the final collection when renaming
 * across DBs (if not present, a random UUID will be assigned).
 ','line_number':53,'multiline':True]['text':'*
 * Checks that CollectionOptions 'expectedOptions' and 'currentOptions' are equal, except for the
 * 'uuid' field. Throws CommandFailed otherwise.
 * To be used by doLocalRenameIfOptionsAndIndexesHaveNotChanged and also its sharding-aware
 * equivalent in RenameCollectionCoordinator.
 ','line_number':75,'multiline':True]['text':'*
 * Checks that the lists of index specs 'expectedIndexes' and 'currentIndexes' are equal.
 * To be used by doLocalRenameIfOptionsAndIndexesHaveNotChanged and also its sharding-aware
 * equivalent in RenameCollectionCoordinator.
 ','line_number':85,'multiline':True]['text':'*
 * As above, but may only be called from applyCommand_inlock. This allows creating a collection
 * with a specific UUID for cross-database renames.
 *
 * When 'cmd' contains dropTarget=true, 'renameOpTime' is used to rename the target collection to a
 * drop-pending collection.
 ','line_number':99,'multiline':True]['text':'*
 * Same as renameCollection(), but used for rolling back renameCollection operations only.
 *
 * 'uuid' is used to look up the source namespace.
 * The 'target' namespace must refer to the same database as the source.
 ','line_number':112,'multiline':True]['text':'*
 * Performs validation checks to ensure source and target namespaces are eligible for rename.
 ','line_number':122,'multiline':True]['text':'*
 * Runs renameCollection() with preliminary validation checks to ensure source
 * and target namespaces are eligible for rename.
 ','line_number':131,'multiline':True]['text':' namespace mongo','line_number':140,'multiline':False]