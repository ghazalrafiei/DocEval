['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Sets up the catalog (via CatalogTestFixture), installs a collection in the catalog and provides
 * helper function to access the collection from the catalog.
 ','line_number':64,'multiline':True]['text':'ts=','line_number':84,'multiline':True]['text':' Before we request a writable collection it should return the same instance installed in the','line_number':123,'multiline':False]['text':' catalog.','line_number':124,'multiline':False]['text':' get() and getWritableCollection() should return the same instance','line_number':132,'multiline':False]['text':' Regular catalog lookups for this OperationContext should see the uncommitted Collection','line_number':135,'multiline':False]['text':' Lookup for read should also see uncommitted collection. This in theory supports nested','line_number':138,'multiline':False]['text':' read-only operations, if they ever occur during a top level write operation.','line_number':139,'multiline':False]['text':' Regular catalog lookups for different clients should not see any change in the catalog','line_number':142,'multiline':False]['text':' We should now have a different Collection pointer written in the catalog','line_number':147,'multiline':False]['text':' The CollectionWriter can be used again for a different WUOW, perform the logic again','line_number':151,'multiline':False]['text':' No update in the catalog should have happened','line_number':189,'multiline':False]['text':' CollectionWriter should be in sync with the catalog','line_number':192,'multiline':False]['text':' Request a writable Collection and destroy CollectionWriter before WUOW commits','line_number':206,'multiline':False]['text':' The writable Collection should have been written into the catalog','line_number':213,'multiline':False]['text':' We should see a different catalog instance than a reader would','line_number':221,'multiline':False]['text':' However, it should be a shallow copy. The collection instance should be the same','line_number':223,'multiline':False]['text':' Start threads and perform write that will try to lock mutex which should always succeed as','line_number':232,'multiline':False]['text':' all writes are serialized','line_number':233,'multiline':False]['text':'*
 * This test uses a catalog with a large number of collections to make it slow to copy. The idea
 * is to trigger the batching behavior when multiple threads want to perform catalog writes
 * concurrently. The batching works correctly if the threads all observe the same catalog
 * instance when they write. If this test is flaky, try to increase the number of collections in
 * the catalog setup.
 ','line_number':259,'multiline':True]['text':' Number of collection instances in the catalog. We want to have a large number to make the','line_number':268,'multiline':False]['text':' CollectionCatalog copy constructor slow enough to trigger the batching behavior. All threads','line_number':269,'multiline':False]['text':' need to enter CollectionCatalog::write() to be batched before the first thread finishes its','line_number':270,'multiline':False]['text':' write.','line_number':271,'multiline':False]['text':'ts=','line_number':284,'multiline':True]['text':' Start threads and perform write that will throw at the same time','line_number':291,'multiline':False]['text':' Should not reach this assert','line_number':303,'multiline':False]['text':' Verify that we received the correct exception even if our write job executed on a','line_number':306,'multiline':False]['text':' different thread','line_number':307,'multiline':False]['text':' We should get a unique clone the first time we request a writable collection','line_number':340,'multiline':False]['text':' Subsequent requests should return the same instance.','line_number':344,'multiline':False]['text':' Check behavior with WUOW','line_number':348,'multiline':False]['text':' Behavior for WUOW that commits','line_number':352,'multiline':False]['text':' Lookup for write and record the instance, we should find it in the catalog after the','line_number':356,'multiline':False]['text':' WOUW commits','line_number':357,'multiline':False]['text':' Behavior for WUOW that rollback','line_number':366,'multiline':False]['text':' Another WUOW, check that that we will re-clone the collection','line_number':370,'multiline':False]['text':' After rollback we restored the original instance','line_number':375,'multiline':False]['text':' Make sure we did not restore the instance for the collection that write was requested for','line_number':378,'multiline':False]['text':' outside of a WUOW.','line_number':379,'multiline':False]['text':' When the batched writer commits our collection instance should be replaced.','line_number':385,'multiline':False]['text':' namespace','line_number':390,'multiline':False]['text':' namespace mongo','line_number':391,'multiline':False]