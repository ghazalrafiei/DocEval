['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This is the interface through which to act on index builders. Index builder life times are
 * managed here, and all actions taken on index builders pass through this interface. Index builder
 * state is set up and then cleaned up by this class.
 ','line_number':69,'multiline':True]['text':'*
     * Indicates whether or not to ignore indexing constraints.
     ','line_number':81,'multiline':True]['text':'*
     * Additional options for setUpIndexBuild. The default values are sufficient in most cases.
     ','line_number':86,'multiline':True]['text':'*
     * Sets up the index build state and registers it in the manager.
     ','line_number':100,'multiline':True]['text':'*
     * Unregisters the builder associated with the given buildUUID from the _builders map, causing
     * the index build in-memory state to be destroyed.
     ','line_number':112,'multiline':True]['text':'*
     * Runs the scanning/insertion phase of the index build..
     ','line_number':118,'multiline':True]['text':'*
     * Iterates through every record in the collection to index it. May also remove documents
     * that are not valid BSON objects, if repair is set to kYes.
     *
     * Returns the number of records and the size of the data iterated over.
     ','line_number':130,'multiline':True]['text':'*
     * Document inserts observed during the scanning/insertion phase of an index build are not
     * added but are instead stored in a temporary buffer until this function is invoked.
     ','line_number':142,'multiline':True]['text':'*
     * By default, retries the key generation and insertion of records that were skipped during the
     * scanning phase due to error suppression.
     ','line_number':151,'multiline':True]['text':'*
     * Runs the index constraint violation checking phase of the index build..
     ','line_number':161,'multiline':True]['text':'*
     * Persists information in the index catalog entry that the index is ready for use, as well as
     * updating the in-memory index catalog entry for this index to ready.
     ','line_number':168,'multiline':True]['text':'*
     * Deletes the index entry from the durable catalog.
     ','line_number':181,'multiline':True]['text':'*
     * Signals the index build to be aborted without being cleaned up and returns without waiting
     * for it to stop. Does nothing if the index build has already been cleared away.
     *
     * Writes the current state of the index build to disk if the specified index build is a
     * two-phase hybrid index build and resumable index builds are supported.
     *
     * Returns true if a build existed to be signaled, as opposed to having already finished and
     * been cleared away, or not having yet started.
     ','line_number':190,'multiline':True]['text':'*
     * Returns true if the index build supports background writes while building an index. This is
     * true for the kHybrid method.
     ','line_number':205,'multiline':True]['text':'*
     * Provides passthrough access to MultiIndexBlock for index build info.
     * Does nothing if build UUID does not refer to an active index build.
     ','line_number':211,'multiline':True]['text':'*
     * Checks via invariant that the manager has no index builds presently.
     ','line_number':217,'multiline':True]['text':'*
     * Creates and registers a new builder in the _builders map, mapped by the provided buildUUID.
     ','line_number':223,'multiline':True]['text':'*
     * Returns a pointer to the builder. Returns a bad status if the builder does not exist.
     ','line_number':228,'multiline':True]['text':' Protects the map data structures below.','line_number':233,'multiline':False]['text':' Map of index builders by build UUID. Allows access to the builders so that actions can be','line_number':236,'multiline':False]['text':' taken on and information passed to and from index builds.','line_number':237,'multiline':False]['text':' namespace mongo','line_number':241,'multiline':False]