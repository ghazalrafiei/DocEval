['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Build the specified index on the collection.','line_number':76,'multiline':False]['text':' Get the index catalog associated with the test collection.','line_number':78,'multiline':False]['text':' Find the index entry and return it.','line_number':86,'multiline':False]['text':' Create an index on {a: 1} with an 'en_US' collation.','line_number':130,'multiline':False]['text':' Create an index descriptor on the same keyPattern whose collation has an explicit strength.','line_number':134,'multiline':False]['text':' The two indexes compare as kIdentical, because the collation comparison is performed using','line_number':135,'multiline':False]['text':' the parsed collator rather than the static collation object from the BSON index specs.','line_number':136,'multiline':False]['text':' Confirm that attempting to build this index will result in ErrorCodes::IndexAlreadyExists.','line_number':142,'multiline':False]['text':' Now add storage engine option. The indexes now compare kEquivalent, but not kIdentical. This','line_number':145,'multiline':False]['text':' means that all signature fields which uniquely identify the index match, but other fields','line_number':146,'multiline':False]['text':' differ.','line_number':147,'multiline':False]['text':' Attempting to build the index, whether with the same name or a different name, now throws','line_number':153,'multiline':False]['text':' IndexOptionsConflict. The error message returned with the exception specifies whether the','line_number':154,'multiline':False]['text':' name matches an existing index.','line_number':155,'multiline':False]['text':' Now create an index spec with an entirely different collation. The two indexes compare as','line_number':161,'multiline':False]['text':' being kDifferent; this means that both of these indexes can co-exist together.','line_number':162,'multiline':False]['text':' Verify that we can build this index alongside the existing indexes.','line_number':168,'multiline':False]['text':' Create a basic index on {a: 1} with no partialFilterExpression.','line_number':175,'multiline':False]['text':' Create an index descriptor on the same keyPattern with a partialFilterExpression. The two','line_number':179,'multiline':False]['text':' indexes compare as kDifferent, because the partialFilterExpression is one of the fields in','line_number':180,'multiline':False]['text':' the index's signature.','line_number':181,'multiline':False]['text':' Verify that we can build an index with this spec alongside the original index.','line_number':187,'multiline':False]['text':' Verify that partialFilterExpressions are normalized before being compared. Here, the filter','line_number':191,'multiline':False]['text':' is expressed differently than in the existing index, but the two still compare as kIdentical.','line_number':192,'multiline':False]['text':' Confirm that attempting to build this index will result in ErrorCodes::IndexAlreadyExists.','line_number':199,'multiline':False]['text':' Now add the storage engine field. The indexes now compare kEquivalent, but not kIdentical.','line_number':202,'multiline':False]['text':' This means that all signature fields which uniquely identify the index match, but other','line_number':203,'multiline':False]['text':' fields differ.','line_number':204,'multiline':False]['text':' Attempting to build the index, whether with the same name or a different name, now throws','line_number':211,'multiline':False]['text':' IndexOptionsConflict. The error message returned with the exception specifies whether the','line_number':212,'multiline':False]['text':' name matches an existing index.','line_number':213,'multiline':False]['text':' Now create an index spec with an entirely different partialFilterExpression. The two indexes','line_number':221,'multiline':False]['text':' compare as kDifferent; this means that both of these indexes can co-exist together.','line_number':222,'multiline':False]['text':' Verify that we can build this index alongside the existing indexes.','line_number':229,'multiline':False]['text':' Create a basic index on {a: 1} with all other options set to their default values.','line_number':235,'multiline':False]['text':' Verify that changing each of the non-signature fields does not distinguish this index from','line_number':243,'multiline':False]['text':' the existing index. The two are considered equivalent, and we cannot build the new index.','line_number':244,'multiline':False]['text':' Create an index on {a: 1}.','line_number':254,'multiline':False]['text':' Create an index on the same key pattern with the 'unique' field explicitly set to false.','line_number':260,'multiline':False]['text':' The two indexes compare as kIdentical.','line_number':261,'multiline':False]['text':' Verify that creating an index with the same name and 'unique' = false fails with','line_number':267,'multiline':False]['text':' IndexAlreadyExists error code.','line_number':268,'multiline':False]['text':' Now set the unique field. The indexes now compare kDifferent. This means that the index','line_number':271,'multiline':False]['text':' signature does not match and we can create this index.','line_number':272,'multiline':False]['text':' Verify that we can build this index alongside the existing index since its 'unique' option','line_number':278,'multiline':False]['text':' differs.','line_number':279,'multiline':False]['text':' Now create another unique index. The indexes now compare kIdentical.','line_number':282,'multiline':False]['text':' Verify that creating another unique index with a different name fails with','line_number':288,'multiline':False]['text':' IndexOptionsConflict error.','line_number':289,'multiline':False]['text':' Now add a non-signature index option to the unique index and two indexes compare kEquivalent.','line_number':292,'multiline':False]['text':' Verify that creating another unique index with a non-signature option fails with','line_number':298,'multiline':False]['text':' IndexOptionsConflict error.','line_number':299,'multiline':False]['text':' Create an index on {a: 1}.','line_number':304,'multiline':False]['text':' Create an index on the same key pattern with the 'sparse' field explicitly set to false.','line_number':310,'multiline':False]['text':' The two indexes compare as kIdentical.','line_number':311,'multiline':False]['text':' Verify that creating an index with the same name and 'sparse' = false fails with','line_number':317,'multiline':False]['text':' IndexAlreadyExists error code.','line_number':318,'multiline':False]['text':' Now set the sparse field. The indexes now compare kDifferent. This means that the index','line_number':321,'multiline':False]['text':' signature does not match and we can create this index.','line_number':322,'multiline':False]['text':' Verify that we can build this index alongside the existing index since its 'sparse' option','line_number':328,'multiline':False]['text':' differs.','line_number':329,'multiline':False]['text':' Now create another sparse index. The indexes now compare kIdentical.','line_number':332,'multiline':False]['text':' Verify that creating another sparse index with a different name fails with','line_number':338,'multiline':False]['text':' IndexOptionsConflict error.','line_number':339,'multiline':False]['text':' Now add a non-signature index option to the sparse index and two indexes compare kEquivalent.','line_number':342,'multiline':False]['text':' Verify that creating another sparse index with a non-signature option fails with','line_number':348,'multiline':False]['text':' IndexOptionsConflict error.','line_number':349,'multiline':False]['text':' Verifies that the path projection is not normalized.','line_number':356,'multiline':False]['text':' Verifies that the path projection is not normalized for the created index catalog entry.','line_number':362,'multiline':False]['text':' Creates a base wildcard index to verify 'wildcardProjection' option is part of index','line_number':370,'multiline':False]['text':' signature.','line_number':371,'multiline':False]['text':' Verifies that another wildcard index with empty wildcardProjection compares identical','line_number':380,'multiline':False]['text':' to 'wildcardIndex' after normalizing the index spec.','line_number':381,'multiline':False]['text':' Verifies that an index with non-empty value for 'wildcardProjection' option compares','line_number':392,'multiline':False]['text':' different from the base wildcard index and thus can be created.','line_number':393,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option as the','line_number':407,'multiline':False]['text':' wcProjAIndex compares identical.','line_number':408,'multiline':False]['text':' Verifies that creating an index with the same value for 'wildcardProjection' option and the','line_number':415,'multiline':False]['text':' same name fails with IndexAlreadyExists error.','line_number':416,'multiline':False]['text':' Verifies that creating an index with the same value for 'wildcardProjection' option and a','line_number':419,'multiline':False]['text':' different name fails with IndexOptionsConflict error.','line_number':420,'multiline':False]['text':' Verifies that an index with a different value for 'wildcardProjection' option compares','line_number':424,'multiline':False]['text':' different from the base wildcard index or 'wc_a' and thus can be created.','line_number':425,'multiline':False]['text':' Verifies that an index with sub fields for 'wildcardProjection' option compares','line_number':436,'multiline':False]['text':' different from the base wildcard index or 'wc_a' or 'wc_a_b' and thus can be created.','line_number':437,'multiline':False]['text':' Verifies that two indexes with the same projection in different order compares identical.','line_number':450,'multiline':False]['text':' Verifies that two indexes with the same projection in different order can not be created.','line_number':456,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option and an','line_number':464,'multiline':False]['text':' non-signature index option compares equivalent as the 'wcProjAIndex'','line_number':465,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option, non-signature','line_number':471,'multiline':False]['text':' index option, and the same name fails with IndexOptionsConflict error.','line_number':472,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option, non-signature','line_number':475,'multiline':False]['text':' index option, and a different name fails with IndexOptionsConflict error too.','line_number':476,'multiline':False]['text':' Creates a base wildcard index to verify 'wildcardProjection' option is part of index','line_number':484,'multiline':False]['text':' signature.','line_number':485,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option as the','line_number':494,'multiline':False]['text':' wcProjAIndex compares identical.','line_number':495,'multiline':False]['text':' Verifies that creating an index with the same value for 'wildcardProjection' option and the','line_number':501,'multiline':False]['text':' same name fails with IndexAlreadyExists error.','line_number':502,'multiline':False]['text':' Verifies that creating an index with the same value for 'wildcardProjection' option and a','line_number':506,'multiline':False]['text':' different name fails with IndexOptionsConflict error.','line_number':507,'multiline':False]['text':' Verifies that an index with a different value for 'wildcardProjection' option compares','line_number':512,'multiline':False]['text':' different from the base wildcard index or 'cwi_a' and thus can be created.','line_number':513,'multiline':False]['text':' Verifies that an index with sub fields for 'wildcardProjection' option compares','line_number':522,'multiline':False]['text':' different from the base wildcard index or 'cwi_a' or 'cwi_a_b' and thus can be created.','line_number':523,'multiline':False]['text':' Verifies that two indexes with the same projection in different order compares identical.','line_number':534,'multiline':False]['text':' Verifies that two indexes with the same projection in different order can not be created.','line_number':540,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option and an','line_number':548,'multiline':False]['text':' non-signature index option compares equivalent as the 'wcProjAIndex'','line_number':549,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option, non-signature','line_number':556,'multiline':False]['text':' index option, and the same name fails with IndexOptionsConflict error.','line_number':557,'multiline':False]['text':' Verifies that an index with the same value for 'wildcardProjection' option, non-signature','line_number':560,'multiline':False]['text':' index option, and a different name fails with IndexOptionsConflict error too.','line_number':561,'multiline':False]['text':' Verifies that the path projection is not normalized.','line_number':572,'multiline':False]['text':' Verifies that the path projection is not normalized for the created index catalog entry.','line_number':577,'multiline':False]['text':' Creates a base columnstore index to verify 'columnstoreProjection' option is part of index','line_number':587,'multiline':False]['text':' signature.','line_number':588,'multiline':False]['text':' Verifies that another columnstore index with empty columnstoreProjection compares identical','line_number':600,'multiline':False]['text':' to 'columnstoreIndex' after normalizing the index spec.','line_number':601,'multiline':False]['text':' Verifies that an index with non-empty value for 'columnstoreProjection' option compares','line_number':615,'multiline':False]['text':' different from the base columnstore index and thus can be created.','line_number':616,'multiline':False]['text':' Verifies that an index with the same value for 'columnstoreProjection' option as the','line_number':631,'multiline':False]['text':' csProjAIndex compares identical.','line_number':632,'multiline':False]['text':' Verifies that creating an index with the same value for 'columnstoreProjection' option and','line_number':640,'multiline':False]['text':' the same name fails with IndexAlreadyExists error.','line_number':641,'multiline':False]['text':' Verifies that creating an index with the same value for 'columnstoreProjection' option and a','line_number':644,'multiline':False]['text':' different name fails with IndexOptionsConflict error.','line_number':645,'multiline':False]['text':' Verifies that an index with a different value for 'columnstoreProjection' option compares','line_number':649,'multiline':False]['text':' different from the base columnstore index or 'cs_a' and thus can be created.','line_number':650,'multiline':False]['text':' Verifies that an index with sub fields for 'columnstoreProjection' option compares','line_number':661,'multiline':False]['text':' different from the base columnstore index or 'cs_a' or 'cs_a_b' and thus can be created.','line_number':662,'multiline':False]['text':' Verifies that two indexes with the same projection in different order compares identical.','line_number':675,'multiline':False]['text':' Verifies that two indexes with the same projection in different order can not be created.','line_number':681,'multiline':False]['text':' Verifies that an index with the same value for 'columnstoreProjection' option and a','line_number':689,'multiline':False]['text':' non-signature index option compares equivalent as the 'csProjAIndex'','line_number':690,'multiline':False]['text':' Verifies that an index with the same value for 'columnstoreProjection' option, non-signature','line_number':696,'multiline':False]['text':' index option, and the same name fails with IndexOptionsConflict error.','line_number':697,'multiline':False]['text':' Verifies that an index with the same value for 'columnstoreProjection' option, non-signature','line_number':700,'multiline':False]['text':' index option, and a different name fails with IndexOptionsConflict error too.','line_number':701,'multiline':False]['text':' Creates single field columnstore index to verify 'columnstoreProjection' option is part of','line_number':706,'multiline':False]['text':' index signature.','line_number':707,'multiline':False]['text':' Verifies that another columnstore index with empty columnstoreProjection compares identical','line_number':710,'multiline':False]['text':' to 'columnstoreIndex' after normalizing the index spec.','line_number':711,'multiline':False]['text':' namespace','line_number':720,'multiline':False]['text':' namespace mongo','line_number':721,'multiline':False]