['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Until proven otherwise.','line_number':133,'multiline':False]['text':' The following will insert a nullptr for dbname, which will treated the same as a non-','line_number':137,'multiline':False]['text':' existant database by the get method, yet still counts in getNameWithConflictingCasing.','line_number':138,'multiline':False]['text':' We've inserted a nullptr entry for dbname: make sure to remove it on unsuccessful exit.','line_number':142,'multiline':False]['text':' If someone else hasn't either already removed it or already set it successfully, remove.','line_number':148,'multiline':False]['text':' Check casing in lock to avoid transient duplicates.','line_number':154,'multiline':False]['text':' Do the catalog lookup and database creation outside of the scoped lock, because these may','line_number':162,'multiline':False]['text':' block.','line_number':163,'multiline':False]['text':' Finally replace our nullptr entry with the new Database pointer.','line_number':175,'multiline':False]['text':' Creating databases only requires a DB lock in MODE_IX, thus databases can be concurrently','line_number':182,'multiline':False]['text':' created. If this thread lost the race, return the database object that was already','line_number':183,'multiline':False]['text':' created.','line_number':184,'multiline':False]['text':' Store the name so we have if for after the db object is deleted','line_number':196,'multiline':False]['text':' It is the caller's responsibility to ensure that no index builds are active in the','line_number':209,'multiline':False]['text':' database.','line_number':210,'multiline':False]['text':' The in-memory ViewCatalog gets cleared when opObserver::onDropCollection() is called for','line_number':225,'multiline':False]['text':' the system.views collection. Since it is a replicated collection, this call occurs in','line_number':226,'multiline':False]['text':' dropCollectionEvenIfSystem(). For standalones, `system.views` and the ViewCatalog are','line_number':227,'multiline':False]['text':' dropped/cleared here.','line_number':228,'multiline':False]['text':'markFromMigrate=','line_number':237,'multiline':True]['text':' Clean up the in-memory database state.','line_number':243,'multiline':False]['text':' close() is called as part of the onCommit handler as it frees the memory pointed to by 'db'.','line_number':247,'multiline':False]['text':' We need to keep this memory valid until the transaction successfully commits.','line_number':248,'multiline':False]['text':' It is the caller's responsibility to ensure that no index builds are active in','line_number':288,'multiline':False]['text':' the database.','line_number':289,'multiline':False]['text':' Return the Database already associated to a name. If there was no association, the class','line_number':316,'multiline':False]['text':' associates a null pointer to the Databasename in both maps','line_number':317,'multiline':False]['text':' Existing entry. So, it was already registered in _normalizedDBs','line_number':322,'multiline':False]['text':' New entry. Update both collections','line_number':325,'multiline':False]['text':' Get the ownership of a Database with a given name. Update the associations for both maps','line_number':333,'multiline':False]['text':' New database name','line_number':337,'multiline':False]['text':' Check if there is any opened database with a name with the same name with a case','line_number':355,'multiline':False]['text':' insensitive search','line_number':356,'multiline':False]['text':' namespace mongo','line_number':369,'multiline':False]