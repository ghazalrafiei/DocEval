['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':62,'multiline':False]['text':' Confirm that we were set with a valid collection instance at construction if yield is','line_number':72,'multiline':False]['text':' performed.','line_number':73,'multiline':False]['text':' Confirm that we are holding the necessary collection level lock.','line_number':75,'multiline':False]['text':' Hold reference to the catalog for collection lookup without locks to be safe.','line_number':78,'multiline':False]['text':' Fetch the Collection by UUID. A rename could have occurred which means we might not be','line_number':81,'multiline':False]['text':' holding the collection-level lock on the right namespace.','line_number':82,'multiline':False]['text':' Collection dropped during yielding.','line_number':85,'multiline':False]['text':' Collection renamed during yielding.','line_number':90,'multiline':False]['text':' This check ensures that we are locked on the same namespace and that it is safe to return','line_number':91,'multiline':False]['text':' the C-style pointer to the Collection.','line_number':92,'multiline':False]['text':' Non-lock-free readers use this path and need to re-establish their capped snapshot.','line_number':97,'multiline':False]['text':' After yielding and reacquiring locks, the preconditions that were used to select our','line_number':102,'multiline':False]['text':' ReadSource initially need to be checked again. We select a ReadSource based on replication','line_number':103,'multiline':False]['text':' state. After a query yields its locks, the replication state may have changed, invalidating','line_number':104,'multiline':False]['text':' our current choice of ReadSource. Using the same preconditions, change our ReadSource if','line_number':105,'multiline':False]['text':' necessary.','line_number':106,'multiline':False]['text':' namespace mongo','line_number':112,'multiline':False]