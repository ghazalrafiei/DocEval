['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This is responsible for signing cluster times that can be used to sent to other servers and
 * verifying signatures of signed cluster times.
 ','line_number':50,'multiline':True]['text':' Decorate ServiceContext with LogicalTimeValidator instance.','line_number':56,'multiline':False]['text':'*
     * Constructs a new LogicalTimeValidator that uses the given key manager. The passed-in
     * key manager must outlive this object.
     ','line_number':61,'multiline':True]['text':'*
     * Tries to sign the newTime with a valid signature. Can return an empty signature and keyId
     * of 0 if it cannot find valid key for newTime.
     ','line_number':67,'multiline':True]['text':'*
     * Returns the newTime with a valid signature.
     ','line_number':73,'multiline':True]['text':'*
     * Validates the signature of newTime and returns the resulting status.
     ','line_number':78,'multiline':True]['text':'*
     * Initializes this validator. This should be called first before the other methods can be used.
     ','line_number':83,'multiline':True]['text':'*
     * Cleans up this validator. This will no longer be usable after this is called.
     ','line_number':88,'multiline':True]['text':'*
     * Enable writing new keys to the config server primary. Should only be called if current node
     * is the config primary.
     ','line_number':93,'multiline':True]['text':'*
     * Returns true if client has sufficient privilege to advance clock.
     ','line_number':99,'multiline':True]['text':'*
     * Returns true if the server should gossip, sign, and validate cluster times. False until there
     * are keys in the config server.
     ','line_number':104,'multiline':True]['text':'*
     * Stops the key manager and resets its state to prevent the former members of standalone
     * replica set to use old keys with sharded cluster.
     ','line_number':110,'multiline':True]['text':'*
     * Load the given external key into the key manager's keys cache.
     ','line_number':116,'multiline':True]['text':'*
     * Reset the key manager cache of keys.
     ','line_number':121,'multiline':True]['text':'*
     *  Returns the copy of the _keyManager to work when its reset by resetKeyManager call.
     ','line_number':127,'multiline':True]['text':' protects _lastSeenValidTime','line_number':135,'multiline':False]['text':' namespace mongo','line_number':141,'multiline':False]