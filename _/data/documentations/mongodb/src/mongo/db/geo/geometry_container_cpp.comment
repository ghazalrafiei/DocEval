['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':47,'multiline':False]['text':' Not owned here','line_number':140,'multiline':False]['text':' TODO: For big complex shapes, may be better to use actual shape from above','line_number':143,'multiline':False]['text':' TODO: Add more cases here to make coverings better','line_number':157,'multiline':False]['text':' Exact test','line_number':164,'multiline':False]['text':' Exact test','line_number':170,'multiline':False]['text':' Not sure','line_number':174,'multiline':False]['text':' Not sure','line_number':182,'multiline':False]['text':' For now, just support spherical cap for $centerSphere and GeoJSON points','line_number':254,'multiline':False]['text':' First let's deal with the FLAT cases','line_number':308,'multiline':False]['text':' Let's be as consistent epsilon-wise as we can with the '2d' indextype.','line_number':333,'multiline':False]['text':' Now we deal with all the SPHERE stuff.','line_number':338,'multiline':False]['text':' Iterate over the other thing and see if we contain it all.','line_number':340,'multiline':False]['text':' This is much faster for actual containment checking.','line_number':436,'multiline':False]['text':' This is slower but contains edges/vertices.','line_number':440,'multiline':False]['text':' Kind of a mess.  We get a function for clipping the line to the','line_number':487,'multiline':False]['text':' polygon.  We do this and make sure the line is the same as the','line_number':488,'multiline':False]['text':' line we're clipping against.','line_number':489,'multiline':False]['text':' If the line is entirely contained within the polygon, we should be','line_number':499,'multiline':False]['text':' getting it back verbatim, so really there should be no error.','line_number':500,'multiline':False]['text':' If the radian distance of a line to the centroid of the complement spherical cap is less','line_number':516,'multiline':False]['text':' than the arc radian of the complement cap, then the line is not within the spherical cap.','line_number':517,'multiline':False]['text':' If the radian distance of a polygon to the centroid of the complement spherical cap is','line_number':567,'multiline':False]['text':' less than the arc radian of the complement cap, then the polygon is not within the','line_number':568,'multiline':False]['text':' spherical cap.','line_number':569,'multiline':False]['text':' Does this (GeometryContainer) intersect the provided data?','line_number':691,'multiline':False]['text':' TODO(hk): modify s2 library to just let us know if it intersected','line_number':773,'multiline':False]['text':' rather than returning all this.','line_number':774,'multiline':False]['text':' Does 'this' intersect with the provided polygon?','line_number':862,'multiline':False]['text':' Add regions','line_number':984,'multiline':False]['text':' Should not reach here.','line_number':1013,'multiline':False]['text':' Check parsing result.','line_number':1017,'multiline':False]['text':' S2RegionUnion doesn't take ownership of pointers.','line_number':1022,'multiline':False]['text':' Examples:','line_number':1029,'multiline':False]['text':' { $geoWithin : { $geometry : <GeoJSON> } }','line_number':1030,'multiline':False]['text':' { $geoIntersects : { $geometry : <GeoJSON> } }','line_number':1031,'multiline':False]['text':' { $geoWithin : { $box : [[x1, y1], [x2, y2]] } }','line_number':1032,'multiline':False]['text':' { $geoWithin : { $polygon : [[x1, y1], [x1, y2], [x2, y2], [x2, y1]] } }','line_number':1033,'multiline':False]['text':' { $geoWithin : { $center : [[x1, y1], r], } }','line_number':1034,'multiline':False]['text':' { $geoWithin : { $centerSphere : [[x, y], radius] } }','line_number':1035,'multiline':False]['text':' { $geoIntersects : { $geometry : [1, 2] } }','line_number':1036,'multiline':False]['text':'','line_number':1037,'multiline':False]['text':' "elem" is the first element of the object after $geoWithin / $geoIntersects predicates.','line_number':1038,'multiline':False]['text':' i.e. { $box: ... }, { $geometry: ... }','line_number':1039,'multiline':False]['text':' Check elem is an object and has geo specifier.','line_number':1041,'multiline':False]['text':' Cannot parse geo specifier.','line_number':1045,'multiline':False]['text':' GeoJSON geometry or legacy point','line_number':1065,'multiline':False]['text':' legacy point','line_number':1067,'multiline':False]['text':' GeoJSON geometry','line_number':1071,'multiline':False]['text':' If we support R2 regions, build the region immediately','line_number':1078,'multiline':False]['text':' Examples:','line_number':1086,'multiline':False]['text':' { location: <GeoJSON> }','line_number':1087,'multiline':False]['text':' { location: [1, 2] }','line_number':1088,'multiline':False]['text':' { location: [1, 2, 3] }','line_number':1089,'multiline':False]['text':' { location: {x: 1, y: 2} }','line_number':1090,'multiline':False]['text':'','line_number':1091,'multiline':False]['text':' "elem" is the element that contains geo data. e.g. "location": [1, 2]','line_number':1092,'multiline':False]['text':' We need the type information to determine whether it's legacy point.','line_number':1093,'multiline':False]['text':' Legacy point','line_number':1103,'multiline':False]['text':' { location: [1, 2] }','line_number':1104,'multiline':False]['text':' { location: [1, 2, 3] }','line_number':1105,'multiline':False]['text':' { location: {x: 1, y: 2} }','line_number':1106,'multiline':False]['text':' { location: {x: 1, y: 2, type: "Point" } }','line_number':1107,'multiline':False]['text':' Allow more than two dimensions or extra fields, like [1, 2, 3]','line_number':1109,'multiline':False]['text':' GeoJSON','line_number':1112,'multiline':False]['text':' { location: { type: "Point", coordinates: [...] } }','line_number':1113,'multiline':False]['text':' If we support R2 regions, build the region immediately','line_number':1119,'multiline':False]['text':' TODO: Fix geometry collection reporting when/if we support multiple CRSes','line_number':1152,'multiline':False]['text':' TODO: Fix geometry collection reporting when/if we support more CRSes','line_number':1179,'multiline':False]['text':' We don't support distances for big polygons yet.','line_number':1277,'multiline':False]['text':' SERVER-52953: Calculating the distance between identical points can sometimes result','line_number':1328,'multiline':False]['text':' in a small positive value due to a loss of floating point precision on certain','line_number':1329,'multiline':False]['text':' platforms. As such, we perform a simple equality check to guarantee that equivalent','line_number':1330,'multiline':False]['text':' points will always produce a distance of 0.','line_number':1331,'multiline':False]['text':' We don't support distances for big polygons yet.','line_number':1340,'multiline':False]['text':'*
 * Find and parse all geometry elements on the appropriate field path from the document.
 ','line_number':1375,'multiline':True]['text':' NOTE: Annoyingly, we cannot just expand arrays b/c single 2d points are arrays, we need','line_number':1383,'multiline':False]['text':' to manually expand all results to check if they are geometries','line_number':1384,'multiline':False]['text':' expand arrays ','line_number':1386,'multiline':True]['text':' Valid geometry element','line_number':1393,'multiline':False]['text':' Many geometries may be in an array','line_number':1396,'multiline':False]['text':' Valid geometry element','line_number':1403,'multiline':False]['text':' namespace mongo','line_number':1419,'multiline':False]