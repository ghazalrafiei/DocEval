['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
     * Creates an empty geometry container which may then be loaded from BSON or directly.
     ','line_number':55,'multiline':True]['text':'*
     * Loads an empty GeometryContainer from query.
     ','line_number':63,'multiline':True]['text':'*
     * Loads an empty GeometryContainer from stored geometry.
     ','line_number':68,'multiline':True]['text':'*
     * Is the geometry any of {Point, Line, Polygon}?
     ','line_number':73,'multiline':True]['text':'*
     * Whether this geometry is a point
     ','line_number':78,'multiline':True]['text':'*
     * Returns the point data, if this geometry is a point.
     ','line_number':83,'multiline':True]['text':'*
     * Reports the CRS of the contained geometry.
     * TODO: Rework once we have collections of multiple CRSes
     ','line_number':88,'multiline':True]['text':'*
     * Whether or not this geometry can be projected into a particular CRS
     ','line_number':94,'multiline':True]['text':'*
     * Projects the current geometry into the supplied crs.
     * It is an error to call this function if canProjectInto(crs) is false.
     ','line_number':99,'multiline':True]['text':'*
     * Minimum distance between this geometry and the supplied point.
     * TODO: Rework and generalize to full GeometryContainer distance
     ','line_number':105,'multiline':True]['text':'*
     * Only polygons (and aggregate types thereof) support contains.
     ','line_number':111,'multiline':True]['text':'*
     * To check containment, we iterate over the otherContainer's geometries.  If we don't
     * contain any sub-geometry of the otherContainer, the otherContainer is not contained
     * within us.  If each sub-geometry of the otherContainer is contained within us, we contain
     * the entire otherContainer.
     ','line_number':116,'multiline':True]['text':'*
     * To check intersection, we iterate over the otherContainer's geometries, checking each
     * geometry to see if we intersect it.  If we intersect one geometry, we intersect the
     * entire other container.
     ','line_number':124,'multiline':True]['text':' Region which can be used to generate a covering of the query object in the S2 space.','line_number':131,'multiline':False]['text':' Region which can be used to generate a covering of the query object in euclidean space.','line_number':135,'multiline':False]['text':' Returns a string related to the type of the geometry (for debugging queries)','line_number':139,'multiline':False]['text':' Needed for 2D wrapping check (for now)','line_number':142,'multiline':False]['text':' TODO: Remove these hacks','line_number':143,'multiline':False]['text':' Does 'this' intersect with the provided type?','line_number':155,'multiline':False]['text':' These three just iterate over the geometries and call the 3 methods above.','line_number':159,'multiline':False]['text':' Used when 'this' has a polygon somewhere, either in _polygon or _multiPolygon or','line_number':164,'multiline':False]['text':' _geometryCollection.','line_number':165,'multiline':False]['text':' Only one of these clonable_ptrs should be non-NULL.  S2Region is a','line_number':170,'multiline':False]['text':' superclass but it only supports testing against S2Cells.  We need','line_number':171,'multiline':False]['text':' the most specific class we can get.','line_number':172,'multiline':False]['text':' Cached for use during covering calculations','line_number':183,'multiline':False]['text':' TODO: _s2Region is currently generated immediately - don't necessarily need to do this','line_number':184,'multiline':False]['text':'*
 * Structure that holds BSON addresses (BSONElements) and the corresponding geometry parsed
 * at those locations.
 * Used to separate the parsing of geometries from a BSONObj (which must stay in scope) from
 * the computation over those geometries.
 * TODO: Merge with 2D/2DSphere key extraction?
 ','line_number':191,'multiline':True]['text':' namespace mongo','line_number':211,'multiline':False]