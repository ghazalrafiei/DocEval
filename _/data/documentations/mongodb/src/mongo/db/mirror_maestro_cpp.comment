['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Just enough to allow concurrency','line_number':94,'multiline':False]['text':' Always be able to mirror eventually','line_number':95,'multiline':False]['text':' Never use more than a handful','line_number':96,'multiline':False]['text':'*
     * Make the TaskExecutor and initialize other components.
     ','line_number':113,'multiline':True]['text':'*
     * Shutdown the TaskExecutor and cancel any outstanding work.
     ','line_number':118,'multiline':True]['text':'*
     * Mirror only if this maestro has been initialized.
     ','line_number':123,'multiline':True]['text':'*
     * Maintains the state required for mirroring requests.
     ','line_number':128,'multiline':True]['text':'*
     * Attempt to mirror invocation to a subset of hosts based on params
     *
     * This command is expected to only run on the _executor
     ','line_number':157,'multiline':True]['text':'*
     * An enum detailing the liveness of the Maestro
     *
     * The state transition map for liveness looks like so:
     * kUninitialized -> kRunning, kShutdown
     * kRunning -> kShutdown
     * kShutdown -> null
     ','line_number':166,'multiline':True]['text':' InitializationGuard guards and serializes the initialization and shutdown of members','line_number':180,'multiline':False]['text':' _isInitialized guards the use of heap allocated members like _executor','line_number':187,'multiline':False]['text':' Even if _isInitialized is true, any member function of the variables below must still be','line_number':188,'multiline':False]['text':' inately thread safe. If _isInitialized is false, there may not even be correct pointers to','line_number':189,'multiline':False]['text':' call member functions upon.','line_number':190,'multiline':False]['text':' Define a new serverStatus section "mirroredReads"','line_number':201,'multiline':False]['text':' We only can see if the command resolved if we got a response','line_number':220,'multiline':False]['text':'*
     * Maintains a breakdown for resolved requests by host name.
     * This class may only be used for testing (e.g., as part of a fail-point).
     ','line_number':231,'multiline':True]['text':' Counts the number of operations (as primary) recognized as "to be mirrored".','line_number':265,'multiline':False]['text':' Counts the number of remote requests (for mirroring as primary) sent over the network.','line_number':267,'multiline':False]['text':' Counts the number of responses (as primary) from secondaries after mirrored operations.','line_number':269,'multiline':False]['text':' Counts the number of responses (as primary) of successful mirrored operations. Disabled by','line_number':271,'multiline':False]['text':' default, hidden behind the mirrorMaestroExpectsResponse fail point.','line_number':272,'multiline':False]['text':' Counts the number of operations (as primary) that are scheduled to be mirrored, but','line_number':274,'multiline':False]['text':' haven't yet been sent. Disabled by default, hidden behind the mirrorMaestroTracksPending','line_number':275,'multiline':False]['text':' fail point.','line_number':276,'multiline':False]['text':' Counts the number of mirrored operations processed successfully by this node as a','line_number':278,'multiline':False]['text':' secondary. Disabled by default, hidden behind the mirrorMaestroExpectsResponse fail point.','line_number':279,'multiline':False]['text':' namespace','line_number':288,'multiline':False]['text':' We only need a maestro if we're in a replica set','line_number':324,'multiline':False]['text':' If we're not even available, nothing to do','line_number':354,'multiline':False]['text':' That's all, folks','line_number':360,'multiline':False]['text':' Nothing to do if sampling rate is zero.','line_number':368,'multiline':False]['text':' If we wouldn't select a host, then nothing more to do','line_number':375,'multiline':False]['text':' NOTE: before using Client's out-of-line executor outside of MirrorMaestro, we must first','line_number':385,'multiline':False]['text':' move the consumption (i.e., `consumeAllTasks`) to the baton.','line_number':386,'multiline':False]['text':' There is the potential to actually mirror requests, so schedule the _mirror() invocation','line_number':389,'multiline':False]['text':' out-of-line. This means the command itself can return quickly and we do the arduous work of','line_number':390,'multiline':False]['text':' building new bsons and evaluating randomness in a less important context.','line_number':391,'multiline':False]['text':' We've scheduled the operation to be mirrored; it is now "pending" until it has actually','line_number':395,'multiline':False]['text':' been sent to a secondary.','line_number':396,'multiline':False]['text':'','line_number':399,'multiline':False]['text':' The read has been sent to at least one secondary, so it's no longer pending','line_number':404,'multiline':False]['text':' Limit the maxTimeMS','line_number':425,'multiline':False]['text':' Indicate that this is a mirrored read.','line_number':432,'multiline':False]['text':' Set secondaryPreferred read preference','line_number':436,'multiline':False]['text':' Set local read concern','line_number':442,'multiline':False]['text':' Mirror to a normalized subset of eligible hosts (i.e., secondaries).','line_number':449,'multiline':False]['text':' If we don't expect responses, then there is nothing to do here','line_number':458,'multiline':False]['text':' Count both failed and successful reads as resolved','line_number':462,'multiline':False]['text':' The mirroring command was canceled as part of the executor being','line_number':481,'multiline':False]['text':' shutdown. We avoid crashing here since it's possible that node shutdown','line_number':482,'multiline':False]['text':' was triggered unexpectedly as part of our test infrastructure.','line_number':483,'multiline':False]['text':' Until the end of this scope, no other thread can mutate _initGuard.liveness, so no other','line_number':527,'multiline':False]['text':' thread can be in the critical section of init() or shutdown().','line_number':528,'multiline':False]['text':' We can init','line_number':532,'multiline':False]['text':' If someone else already initialized, do nothing','line_number':535,'multiline':False]['text':' Set _initGuard.liveness to kRunning','line_number':567,'multiline':False]['text':' Mark the maestro as initialized. It is now safe to call tryMirrorRequest(), use the','line_number':570,'multiline':False]['text':' _executor, or otherwise rely on members to be alive and well.','line_number':571,'multiline':False]['text':' Until the end of this scope, no other thread can mutate _initGuard.liveness, so no other','line_number':578,'multiline':False]['text':' thread can be in the critical section of init() or shutdown().','line_number':579,'multiline':False]['text':' If someone else already shutdown or we never init'd, do nothing','line_number':584,'multiline':False]['text':' Time to shut it all down','line_number':588,'multiline':False]['text':' Set _initGuard.liveness to kShutdown','line_number':599,'multiline':False]['text':' namespace mongo','line_number':603,'multiline':False]