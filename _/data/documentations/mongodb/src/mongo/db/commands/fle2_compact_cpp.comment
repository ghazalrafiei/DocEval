['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':38,'multiline':False]['text':'*
 * Wrapper class around the IDL stats types that enables easier
 * addition to the statistics counters.
 * Wrapped object must outlive this object.
 ','line_number':97,'multiline':True]['text':'*
 * ECOCStats specializations of these functions are no-ops
 * since ECOCStats does not have insert and update counters
 ','line_number':129,'multiline':True]['text':'*
 * Inserts or updates a null anchor document in ESC.
 * The newNullAnchor must contain the _id of the null anchor document to update.
 ','line_number':170,'multiline':True]['text':' update the null doc with a replacement modification','line_number':187,'multiline':False]['text':' insert the null anchor; translate duplicate key error to a FLE contention error','line_number':200,'multiline':False]['text':' Validate the request contains a compaction token for each encrypted field','line_number':214,'multiline':False]['text':' The function that handles the transaction may outlive this function so we need to use','line_number':235,'multiline':False]['text':' shared_ptrs','line_number':236,'multiline':False]['text':' We need to set an empty BSON object here for the schema.','line_number':267,'multiline':False]['text':' namespace','line_number':273,'multiline':False]['text':'*
 * Parses the compaction tokens from the compact request, and
 * for each one, retrieves the unique entries in the ECOC collection
 * that have been encrypted with that token. All entries are returned
 * in a set in their decrypted form.
 ','line_number':316,'multiline':True]['text':' Initialize a set 'C' and for each compaction token, find all entries','line_number':330,'multiline':False]['text':' in ECOC with matching field name. Decrypt entries and add to set 'C'.','line_number':331,'multiline':False]['text':'*
     * Send a getQueryableEncryptionCountInfo command with query type "compact".
     * The target of this command will perform the actual search for the next anchor
     * position, which happens in the getEdgeCountInfoForCompact() function in fle_crypto.
     *
     * It is expected to return a single reply token, whose "count" field contains the
     * next anchor position, and whose "searchedCounts" field contains the result of
     * emuBinary.
     ','line_number':354,'multiline':True]['text':' Check for the invalid case where emuBinary returned (0,0).','line_number':369,'multiline':False]['text':' This means that the tokens can't be trusted or the state collections are already hosed.','line_number':370,'multiline':False]['text':' apos must also be 0 if cpos is 0','line_number':372,'multiline':False]['text':' no new non-anchors since the last compact/cleanup, so don't insert a new anchor','line_number':385,'multiline':False]['text':' the "count" field contains the next anchor position and must not be zero','line_number':389,'multiline':False]['text':'*
     * Send a getQueryableEncryptionCountInfo command with query type "cleanup".
     * The target of this command will perform steps (B), (C), and (D) of the cleanup
     * algorithm, and is implemented in getEdgeCountInfoForCleanup() function in fle_crypto.
     *
     * It is expected to return a single reply token, whose "searchedCounts" field contains
     * the result of emuBinary (C), and whose "nullAnchorCounts" field may contain the result
     * of the null anchor lookup (D). The "count" field shall contain the value of a_1 that
     * the null anchor should be updated with.
     ','line_number':425,'multiline':True]['text':' Check for the invalid case where emuBinary returned (0,0).','line_number':441,'multiline':False]['text':' This means that the tokens can't be trusted or the state collections are already hosed.','line_number':442,'multiline':False]['text':' apos must also be 0 if cpos is 0','line_number':444,'multiline':False]['text':' case (E)','line_number':457,'multiline':False]['text':' Null anchor exists & contains the latest anchor position,','line_number':458,'multiline':False]['text':' and *maybe* the latest non-anchor position.','line_number':459,'multiline':False]['text':' if cpos is none, then the null anchor also contains the latest','line_number':466,'multiline':False]['text':' non-anchor position, so no need to update it.','line_number':467,'multiline':False]['text':' Update null anchor with the latest positions','line_number':474,'multiline':False]['text':' case (F)','line_number':480,'multiline':False]['text':' No anchors yet exist, so latest apos is 0.','line_number':481,'multiline':False]['text':' Insert a new null anchor.','line_number':486,'multiline':False]['text':' (apos > 0) ','line_number':491,'multiline':True]['text':' case (G)','line_number':492,'multiline':False]['text':' New anchors exist - if null anchor exists, then it contains stale positions.','line_number':493,'multiline':False]['text':' Latest apos is returned by emuBinary.','line_number':494,'multiline':False]['text':' upsert the null anchor with the latest positions','line_number':501,'multiline':False]['text':' insert the _id of stale anchors (anchors in range [bottomApos + 1, latestApos])','line_number':506,'multiline':False]['text':' into the deletes collection.','line_number':507,'multiline':False]['text':' uniqueEcocEntries corresponds to the set 'C_f' in OST-1 ','line_number':531,'multiline':True]['text':' Each entry in 'C_f' represents a unique field/value pair. For each field/value pair,','line_number':535,'multiline':False]['text':' compact the ESC entries for that field/value pair in one transaction.','line_number':536,'multiline':False]['text':' start a new transaction','line_number':538,'multiline':False]['text':' The function that handles the transaction may outlive this function so we need to use','line_number':541,'multiline':False]['text':' shared_ptrs','line_number':542,'multiline':False]['text':' Update stats','line_number':567,'multiline':False]['text':' uniqueEcocEntries corresponds to the set 'C_f' in OST-1 ','line_number':583,'multiline':True]['text':' Each entry in 'C_f' represents a unique field/value pair. For each field/value pair,','line_number':592,'multiline':False]['text':' compact the ESC entries for that field/value pair in one transaction.','line_number':593,'multiline':False]['text':' start a new transaction','line_number':595,'multiline':False]['text':' The function that handles the transaction may outlive this function so we need to use','line_number':598,'multiline':False]['text':' shared_ptrs','line_number':599,'multiline':False]['text':' Update stats','line_number':632,'multiline':False]['text':' Build an agg pipeline for fetching a set of random ESC "non-anchor" entries.','line_number':675,'multiline':False]['text':' Note: "Non-anchors" are entries that don't have a "value" field.','line_number':676,'multiline':False]['text':' pipeline: [ {$match: {value: {$exists: false}}}, {$sample: {size: idLimit}} ]','line_number':677,'multiline':False]['text':' namespace mongo','line_number':830,'multiline':False]