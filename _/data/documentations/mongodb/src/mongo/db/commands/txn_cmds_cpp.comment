['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' TODO SERVER-39704: Remove this fail point once the router can safely retry within a transaction','line_number':77,'multiline':False]['text':' on stale version and snapshot errors.','line_number':78,'multiline':False]['text':' commitTransaction is retryable.','line_number':140,'multiline':False]['text':' We set the client last op to the last optime observed by the system to ensure','line_number':142,'multiline':False]['text':' that we wait for the specified write concern on an optime greater than or equal','line_number':143,'multiline':False]['text':' to the commit oplog entry.','line_number':144,'multiline':False]['text':' commitPreparedTransaction will throw if the transaction is not prepared.','line_number':165,'multiline':False]['text':' commitUnpreparedTransaction will throw if the transaction is prepared.','line_number':175,'multiline':False]['text':' abortTransaction commences running inside a transaction (even though the transaction','line_number':238,'multiline':False]['text':' will be ended by the time it completes).  Therefore it needs to accept any','line_number':239,'multiline':False]['text':' readConcern which is valid within a transaction.  However it is not appropriate to','line_number':240,'multiline':False]['text':' apply the default readConcern, since the readConcern of the transaction (set by the','line_number':241,'multiline':False]['text':' first operation) is what must apply.','line_number':242,'multiline':False]['text':' namespace','line_number':296,'multiline':False]['text':' namespace mongo','line_number':297,'multiline':False]