['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Since this command holds an IX lock on the DB and the global lock throughout','line_number':105,'multiline':False]['text':' the lifetime of this operation, setFCV should not be allowed to abort the transaction','line_number':106,'multiline':False]['text':' performing the compaction. Otherwise, on retry, the transaction may attempt to','line_number':107,'multiline':False]['text':' acquire the global lock in IX mode, while setFCV is already waiting to acquire it','line_number':108,'multiline':False]['text':' in S mode, causing a deadlock.','line_number':109,'multiline':False]['text':' Check the data collection exists and is not a view','line_number':125,'multiline':False]['text':' Acquire exclusive lock on the associated 'ecoc.lock' namespace to serialize calls','line_number':141,'multiline':False]['text':' to cleanup and compact on the same EDC namespace','line_number':142,'multiline':False]['text':' Step 1: rename the ECOC collection if it exists','line_number':145,'multiline':False]['text':' nothing to compact','line_number':154,'multiline':False]['text':' load the random set of ESC non-anchor entries to be deleted post-compact','line_number':158,'multiline':False]['text':' create ECOC','line_number':188,'multiline':False]['text':' Step 2: for each encrypted field in compactionTokens, get distinct set of entries 'C'','line_number':207,'multiline':False]['text':' from ECOC, and for each entry in 'C', compact ESC and ECC.','line_number':208,'multiline':False]['text':' acquire IS lock on the ecocRenameNss to prevent it from being dropped during compact','line_number':210,'multiline':False]['text':' Step 3: drop the renamed ECOC collection','line_number':241,'multiline':False]['text':' namespace','line_number':304,'multiline':False]['text':' namespace mongo','line_number':305,'multiline':False]