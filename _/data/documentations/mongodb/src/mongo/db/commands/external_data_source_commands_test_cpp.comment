['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "cxxabi.h"','line_number':33,'multiline':False]['text':' Generates a large readable random string to aid debugging.','line_number':127,'multiline':False]['text':' This verifies that a simple aggregate command works with explain:true. Virtual collections','line_number':147,'multiline':False]['text':' are created even for explain aggregate command.','line_number':148,'multiline':False]['text':' The first request.','line_number':150,'multiline':False]['text':' Sanity checks of result.','line_number':155,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':186,'multiline':False]['text':' The first request.','line_number':202,'multiline':False]['text':' Sanity checks of result.','line_number':206,'multiline':False]['text':' The default batch size is 101 and so all data must be contained in the first batch. cursor.id','line_number':210,'multiline':False]['text':' == 0 means that no cursor is necessary.','line_number':211,'multiline':False]['text':' The second request. This verifies that virtual collections are cleaned up after the','line_number':219,'multiline':False]['text':' aggregation request is done.','line_number':220,'multiline':False]['text':' This data set fits into the first batch.','line_number':225,'multiline':False]['text':' Pushes data into multiple named pipes. We can't push data into multiple named pipes','line_number':230,'multiline':False]['text':' simultaneously because writers will be blocked until the reader consumes data. So, we push','line_number':231,'multiline':False]['text':' data into one named pipe after another.','line_number':232,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':251,'multiline':False]['text':' The first request.','line_number':270,'multiline':False]['text':' Sanity checks of result.','line_number':274,'multiline':False]['text':' The default batch size is 101 and so all data must be contained in the first batch. cursor.id','line_number':278,'multiline':False]['text':' == 0 means that no cursor is necessary.','line_number':279,'multiline':False]['text':' The second request. This verifies that virtual collections are cleaned up after the','line_number':287,'multiline':False]['text':' aggregation request is done.','line_number':288,'multiline':False]['text':' MultiBsonStreamCursor's default buffer size is 8K and 2K (at minimum) * 20 would be enough to','line_number':293,'multiline':False]['text':' exceed the initial read. This data set is highly likely to span multiple reads.','line_number':294,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':310,'multiline':False]['text':' The first request.','line_number':326,'multiline':False]['text':' Sanity checks of result.','line_number':330,'multiline':False]['text':' The default batch size is 101 and so all data must be contained in the first batch. cursor.id','line_number':334,'multiline':False]['text':' == 0 means that no cursor is necessary.','line_number':335,'multiline':False]['text':' The second request. This verifies that virtual collections are cleaned up after the','line_number':343,'multiline':False]['text':' aggregation request is done.','line_number':344,'multiline':False]['text':' Tests that 'explain' flag works and also tests that the same aggregation request works with the','line_number':348,'multiline':False]['text':' same $_externalDataSources again to see whether there are no remaining virtual collections left','line_number':349,'multiline':False]['text':' behind after the aggregation request is done.','line_number':350,'multiline':False]['text':' The first request.','line_number':365,'multiline':False]['text':' The second request.','line_number':368,'multiline':False]['text':' This 'nDocs' causes a cursor to be created for a simple scan aggregate command.','line_number':373,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':389,'multiline':False]['text':'secondaryOk','line_number':408,'multiline':True]['text':'useExhaust','line_number':408,'multiline':True]['text':' While iterating over the cursor, getMore() request(s) will be sent and the server-side cursor','line_number':413,'multiline':False]['text':' will be destroyed after all data is exhausted.','line_number':414,'multiline':False]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':422,'multiline':False]['text':' multi-batch result for an aggregation request.','line_number':423,'multiline':False]['text':' Expected results for {$match: {a: {$lt: 5}}}.','line_number':430,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':450,'multiline':False]['text':'secondaryOk','line_number':469,'multiline':True]['text':'useExhaust','line_number':469,'multiline':True]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':481,'multiline':False]['text':' the aggregation request is done.','line_number':482,'multiline':False]['text':' This 'nDocs' causes a cursor to be created for a simple scan aggregate command.','line_number':487,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':503,'multiline':False]['text':' The first request.','line_number':519,'multiline':False]['text':' Sanity checks of result.','line_number':523,'multiline':False]['text':' The default batch size is 101 and results can be returned through multiple batches. cursor.id','line_number':527,'multiline':False]['text':' != 0 means that a cursor is created.','line_number':528,'multiline':False]['text':' Kills the cursor.','line_number':532,'multiline':False]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':541,'multiline':False]['text':' the cursor for the aggregate request is killed.','line_number':542,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':571,'multiline':False]['text':' An aggregate request with a simple scan and $unionWith stage. $_externalDataSources option','line_number':575,'multiline':False]['text':' defines multiple data sources.','line_number':576,'multiline':False]['text':'secondaryOk','line_number':595,'multiline':True]['text':'useExhaust','line_number':595,'multiline':True]['text':' Simple scan from 'coll1' first and then $unionWith from 'coll2'.','line_number':602,'multiline':False]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':608,'multiline':False]['text':' the aggregation request is done.','line_number':609,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':659,'multiline':False]['text':'secondaryOk','line_number':695,'multiline':True]['text':'useExhaust','line_number':695,'multiline':True]['text':' Result set is pretty small and so we use linear search of vector.','line_number':702,'multiline':False]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':712,'multiline':False]['text':' the aggregation request is done.','line_number':713,'multiline':False]['text':' For the $lookup stage, we need data to be available for both named pipes simultaneously','line_number':737,'multiline':False]['text':' because $lookup would read data from both collections and so we use two different named','line_number':738,'multiline':False]['text':' pipes and pushes data into the inner side first. To avoid racy condition, notify the reader','line_number':739,'multiline':False]['text':' side after both named pipes are created. This order is geared toward hash join algorithm.','line_number':740,'multiline':False]['text':' Pushes data into the inner side (== coll2 with named_pipe2) first because the hash join','line_number':746,'multiline':False]['text':' builds the inner (or build) side first.','line_number':747,'multiline':False]['text':' Gives some time to the producer so that it can initialize a named pipe.','line_number':762,'multiline':False]['text':'secondaryOk','line_number':804,'multiline':True]['text':'useExhaust','line_number':804,'multiline':True]['text':' Result set is pretty small and so we use linear search of vector.','line_number':811,'multiline':False]['text':' The second explain request. This verifies that virtual collections are cleaned up after','line_number':821,'multiline':False]['text':' the aggregation request is done.','line_number':822,'multiline':False]['text':' namespace','line_number':825,'multiline':False]['text':' namespace mongo','line_number':826,'multiline':False]