['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Always return the old value.','line_number':174,'multiline':False]['text':' Note we have to use the upsertedId from the update result here, rather than 'value'','line_number':193,'multiline':False]['text':' because the _id field could have been excluded by a projection.','line_number':194,'multiline':False]['text':' Update related command execution metrics.','line_number':306,'multiline':False]['text':' commandPassthroughFields ','line_number':349,'multiline':True]['text':' Explain calls of the findAndModify command are read-only, but we take write','line_number':380,'multiline':False]['text':' locks so that the timing information is more accurate.','line_number':381,'multiline':False]['text':' Explain calls of the findAndModify command are read-only, but we take write','line_number':424,'multiline':False]['text':' locks so that the timing information is more accurate.','line_number':425,'multiline':False]['text':'forgoOpCounterIncrements','line_number':446,'multiline':True]['text':' Collect metrics.','line_number':489,'multiline':False]['text':' Use a SideTransactionBlock since 'parseOplogEntryForFindAndModify' might need to','line_number':511,'multiline':False]['text':' fetch a pre/post image from the oplog and if this is a retry inside an in-progress','line_number':512,'multiline':False]['text':' retryable internal transaction, this 'opCtx' would have an active WriteUnitOfWork','line_number':513,'multiline':False]['text':' and it is illegal to read the the oplog when there is an active WriteUnitOfWork.','line_number':514,'multiline':False]['text':' Make sure to wait for writeConcern on the opTime that will include this','line_number':519,'multiline':False]['text':' write. Needs to set to the system last opTime to get the latest term in an','line_number':520,'multiline':False]['text':' event when an election happened after the actual write.','line_number':521,'multiline':False]['text':' Initialize curOp information.','line_number':529,'multiline':False]['text':' isRemove ','line_number':569,'multiline':True]['text':' Nested retry loop to handle concurrent conflicting upserts with equality','line_number':578,'multiline':False]['text':' match.','line_number':579,'multiline':False]['text':' expCtx ','line_number':612,'multiline':True]['text':' Sample the diff before rethrowing the error since mongos will handle this','line_number':628,'multiline':False]['text':' update by performing a delete on the shard owning the pre-image doc and','line_number':629,'multiline':False]['text':' an insert on the shard owning the post-image doc. As a result, this','line_number':630,'multiline':False]['text':' update will not show up in the OpObserver as an update.','line_number':631,'multiline':False]['text':' No need to call writeConflictRetry() since it does not retry if in a transaction,','line_number':650,'multiline':False]['text':' but calling it can cause WCE to be double counted.','line_number':651,'multiline':False]['text':' Although usually the PlanExecutor handles WCE internally, it will throw WCEs when it','line_number':655,'multiline':False]['text':' is executing a findAndModify. This is done to ensure that we can always match,','line_number':656,'multiline':False]['text':' modify, and return the document under concurrency, if a matching document exists.','line_number':657,'multiline':False]['text':' Prevent the find from returning multiple documents since we can','line_number':689,'multiline':False]['text':' namespace','line_number':694,'multiline':False]['text':' namespace mongo','line_number':695,'multiline':False]