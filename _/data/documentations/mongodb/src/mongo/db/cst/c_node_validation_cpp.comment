['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':32,'multiline':False]['text':' IWYU pragma: keep','line_number':57,'multiline':False]['text':' This is an inclusion Key.','line_number':75,'multiline':False]['text':' This is an exclusion Key.','line_number':78,'multiline':False]['text':' This is an arbitrary expression to produce a computed field (this counts as inclusion).','line_number':84,'multiline':False]['text':' If all components examined are identical up to a point where one path is exhausted,','line_number':169,'multiline':False]['text':' one path is a prefix of the other (or they're equal but this equality is already checked','line_number':170,'multiline':False]['text':' by the set emplace operation).','line_number':171,'multiline':False]['text':'*
 * Validate a path by checking to make sure it was never seen by using set uniqueness. In addition
 * to checking that it is not a prefix of another path and no path is a prefix of it. This function
 * modifies seenPaths in order to keep track.
 ','line_number':183,'multiline':True]['text':' The set 'seenPaths' is lexicographically ordered and we check only the next and previous','line_number':190,'multiline':False]['text':' elements for the prefix relationship. If a path is a prefix of another path, that path','line_number':191,'multiline':False]['text':' must appear next in order based on the invariant that the set has no prefix relationships','line_number':192,'multiline':False]['text':' before the most recent 'emplace()'. If another path is the prefix of the emplaced path,','line_number':193,'multiline':False]['text':' it must appear directly previous in order since any sibling that could otherwise appear','line_number':194,'multiline':False]['text':' previous would be also prefixed by the path that prefixes the emplaced path and violate','line_number':195,'multiline':False]['text':' the invariant. Thus it sufficies to check only these two positions in the set after','line_number':196,'multiline':False]['text':' emplacing to guarantee there are no prefix relationships in the entire set.','line_number':197,'multiline':False]['text':' Add all path components which make up the fieldname of the current child to','line_number':217,'multiline':False]['text':' currentPath. FieldnamePath may introduce more than one if it originated from syntax','line_number':218,'multiline':False]['text':' like '{"a.b": 1}'.','line_number':219,'multiline':False]['text':' Or add a translaiton of _id if we have a key for that.','line_number':225,'multiline':False]['text':' Ensure that the tree is constructed correctly. Confirm anything that's not a','line_number':229,'multiline':False]['text':' FieldnamePath is actually _id.','line_number':230,'multiline':False]['text':' In this context we have a compound inclusion key to descend into.','line_number':238,'multiline':False]['text':' In this context we have a compound exclusion key to descend into.','line_number':245,'multiline':False]['text':' In this context we have a project path object to recurse over.','line_number':253,'multiline':False]['text':' We have a leaf from the point of view of computing paths.','line_number':256,'multiline':False]['text':' We have a leaf from the point of view of computing paths.','line_number':260,'multiline':False]['text':' If a redundant path is found, return early and report this.','line_number':265,'multiline':False]['text':' The string "missing" can be returned from the $type agg expression, but is','line_number':302,'multiline':False]['text':' not valid for use in the $type match expression predicate. Return a special','line_number':303,'multiline':False]['text':' error message for this case.','line_number':304,'multiline':False]['text':' namespace','line_number':322,'multiline':False]['text':' A collection of all paths previously seen. Purposefully ordered. Vector orders','line_number':331,'multiline':False]['text':' lexicographically.','line_number':332,'multiline':False]['text':' Skip the variable prefix since it's already been checked.','line_number':360,'multiline':False]['text':' If the CNode is an array, we need to validate all of the types within it.','line_number':397,'multiline':False]['text':' namespace mongo::c_node_validation','line_number':408,'multiline':False]