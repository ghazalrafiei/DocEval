['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Iterate until the first object.','line_number':91,'multiline':False]['text':' Kick the lexer to sort the object, which should move element 'coll' in front of 'pipeline'.','line_number':95,'multiline':False]['text':' Not that this only works because these are reserved keywords recognized by the lexer,','line_number':96,'multiline':False]['text':' arbitrary string field names with *not* get sorted.','line_number':97,'multiline':False]['text':' Iterate until we reach the $unionWith object.','line_number':112,'multiline':False]['text':' coll: 'outer'','line_number':120,'multiline':False]['text':' inner pipeline','line_number':122,'multiline':False]['text':' The nested pipeline does *not* get sorted, meaning '$unionWith' stays before 'a'.','line_number':125,'multiline':False]['text':' $unionWith: 'inner'','line_number':127,'multiline':False]['text':' a: 1.0','line_number':129,'multiline':False]['text':' Iterate until we reach the $unionWith object.','line_number':142,'multiline':False]['text':' The nested pipeline does *not* get sorted, meaning '$unionWith' stays before 'a'.','line_number':152,'multiline':False]['text':' innerb','line_number':154,'multiline':False]['text':' a','line_number':155,'multiline':False]['text':' a: 2.0','line_number':156,'multiline':False]['text':' Coll nested object ends here.','line_number':159,'multiline':False]['text':' inner pipeline','line_number':161,'multiline':False]['text':' The nested pipeline does *not* get sorted, meaning '$unionWith' stays before 'a'.','line_number':164,'multiline':False]['text':' $unionWith: 'inner'','line_number':166,'multiline':False]['text':' a','line_number':167,'multiline':False]['text':' a: 1.0','line_number':168,'multiline':False]['text':' Iterate until we reach the $unionWith object.','line_number':181,'multiline':False]['text':' coll: 'outer'','line_number':189,'multiline':False]['text':' inner pipeline','line_number':191,'multiline':False]['text':' First nested object','line_number':192,'multiline':False]['text':' Second nested object','line_number':196,'multiline':False]['text':' nested: 1.0','line_number':198,'multiline':False]['text':' apple: 1.0','line_number':200,'multiline':False]['text':' End second nested object','line_number':203,'multiline':False]['text':' a: 1.0','line_number':205,'multiline':False]['text':' End first nested object','line_number':207,'multiline':False]['text':' namespace','line_number':263,'multiline':False]['text':' namespace mongo','line_number':264,'multiline':False]