['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':33,'multiline':False]['text':' IWYU pragma: keep','line_number':60,'multiline':False]['text':'*
 * Walk an array of nodes and produce a vector of MatchExpressions.
 ','line_number':74,'multiline':True]['text':' Tree expressions require each element to be it's own match expression object.','line_number':83,'multiline':False]['text':' Handles predicates of the form  <fieldname>: { $not: <argument> }','line_number':89,'multiline':False]['text':' $not can accept a regex or an object expression.','line_number':92,'multiline':False]['text':' Handles predicates of the form  <fieldname>: { ... }','line_number':170,'multiline':False]['text':' For example:','line_number':171,'multiline':False]['text':'   { abc: {$not: 5} }','line_number':172,'multiline':False]['text':'   { abc: {$eq: 0} }','line_number':173,'multiline':False]['text':'   { abc: {$gt: 0, $lt: 2} }','line_number':174,'multiline':False]['text':' Examples of predicates not handled here:','line_number':175,'multiline':False]['text':'   { abc: 5 }','line_number':176,'multiline':False]['text':'   { $expr: ... }','line_number':177,'multiline':False]['text':'   { $where: "return 1" }','line_number':178,'multiline':False]['text':' Note, this function does not require an ExpressionContext.','line_number':179,'multiline':False]['text':' The only MatchExpression that requires an ExpressionContext is $expr','line_number':180,'multiline':False]['text':' (if you include $where, which can desugar to $expr + $function).','line_number':181,'multiline':False]['text':' Take a variant and either get (by copying) the T it holds, or construct a default value using','line_number':206,'multiline':False]['text':' the callable. For example:','line_number':207,'multiline':False]['text':'   getOr<int>(123, []() { return 0; }) == 123','line_number':208,'multiline':False]['text':'   getOr<int>("x", []() { return 0; }) == 0','line_number':209,'multiline':False]['text':' Handles predicates of the form  <fieldname>: <anything>','line_number':219,'multiline':False]['text':' For example:','line_number':220,'multiline':False]['text':'   { abc: 5 }','line_number':221,'multiline':False]['text':'   { abc: {$lt: 5} }','line_number':222,'multiline':False]['text':' Examples of predicates not handled here:','line_number':223,'multiline':False]['text':'   { $where: "return 1" }','line_number':224,'multiline':False]['text':'   { $and: ... }','line_number':225,'multiline':False]['text':' Top level match expression.','line_number':232,'multiline':False]['text':' comment expr is not added to the tree.','line_number':244,'multiline':False]['text':' The ExprMatchExpression maintains (shared) ownership of expCtx,','line_number':247,'multiline':False]['text':' which the Expression from translateExpression depends on.','line_number':248,'multiline':False]['text':' Expression is over a user fieldname.','line_number':292,'multiline':False]['text':' Other types are always treated as equality predicates.','line_number':301,'multiline':False]['text':' TODO SERVER-49486: Add ErrorAnnotation for MatchExpressions ','line_number':306,'multiline':True]['text':' namespace','line_number':314,'multiline':False]['text':' A nullptr for 'translatedExpression' indicates that the particular operator should not','line_number':323,'multiline':False]['text':' be added to 'root'. The $comment operator currently follows this convention.','line_number':324,'multiline':False]['text':' namespace mongo::cst_match_translation','line_number':345,'multiline':False]