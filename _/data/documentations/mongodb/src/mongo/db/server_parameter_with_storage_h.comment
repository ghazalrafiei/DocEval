['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' The contents of this file are meant to be used by
 * code generated from idlc.py.
 *
 * It should not be instantiated directly from mongo code,
 * rather parameters should be defined in .idl files.
 ','line_number':31,'multiline':True]['text':'*
 * Used to check if the parameter type has the getClusterServerParameter method, which proves
 * that ClusterServerParameter is inline chained to it.
 ','line_number':69,'multiline':True]['text':' Predicate rules for bounds conditions','line_number':80,'multiline':False]['text':' Wrapped type unwrappers.','line_number':114,'multiline':False]['text':' e.g. Given AtomicWord<int>, get std::int32_t and normalized store/load methods.','line_number':115,'multiline':False]['text':' Not thread-safe, will only be called once at most per ServerParameter in its initialization','line_number':141,'multiline':False]['text':' block.','line_number':142,'multiline':False]['text':' Copy of original value to be read from during resets.','line_number':150,'multiline':False]['text':' Covers AtomicDouble','line_number':154,'multiline':False]['text':' Not thread-safe, will only be called once at most per ServerParameter in its initialization','line_number':178,'multiline':False]['text':' block.','line_number':179,'multiline':False]['text':' Copy of original value to be read from during resets.','line_number':187,'multiline':False]['text':' Not thread-safe, will only be called once at most per ServerParameter in its initialization','line_number':213,'multiline':False]['text':' block.','line_number':214,'multiline':False]['text':' Copy of original value to be read from during resets.','line_number':222,'multiline':False]['text':' Not thread-safe, will only be called once at most per ServerParameter in its initialization','line_number':253,'multiline':False]['text':' block.','line_number':254,'multiline':False]['text':' Copy of original value to be read from during resets.','line_number':264,'multiline':False]['text':' All other types will use a mutex to synchronize in a threadsafe manner.','line_number':268,'multiline':False]['text':' Not thread-safe, will only be called once at most per ServerParameter in its initialization','line_number':294,'multiline':False]['text':' block.','line_number':295,'multiline':False]['text':' Copy of original value to be read from during resets.','line_number':304,'multiline':False]['text':' namespace idl_server_parameter_detail','line_number':308,'multiline':False]['text':'*
 * Specialization of ServerParameter used by IDL generator.
 ','line_number':310,'multiline':True]['text':' Cluster parameters must be tenant-aware.','line_number':322,'multiline':False]['text':' Compile-time assertion to ensure that IDL-defined in-memory storage for CSPs are','line_number':325,'multiline':False]['text':' chained to the ClusterServerParameter base type.','line_number':326,'multiline':False]['text':'*
     * Convenience wrapper for storing a value.
     ','line_number':344,'multiline':True]['text':' For cluster parameters, validation must be separated from setting.','line_number':348,'multiline':False]['text':'*
     * Convenience wrapper for fetching value from storage.
     ','line_number':364,'multiline':True]['text':'*
     * Allows the default value stored in the underlying storage_wrapper to be changed exactly once
     * after initialization. This should only be called by the IDL generator when creating
     * MONGO_SERVER_PARAMETER_REGISTER blocks for parameters that do not specify a `cpp_vartype`
     * (the storage variable is not defined by the IDL generator).
     ','line_number':371,'multiline':True]['text':' Update the default value.','line_number':380,'multiline':False]['text':' Update the actual storage, performing validation and any post-update functions as','line_number':383,'multiline':False]['text':' necessary.','line_number':384,'multiline':False]['text':'*
     * Encode the setting into BSON object.
     *
     * Typically invoked by {getParameter:...} or {getClusterParameter:...} to produce a dictionary
     * of SCP settings.
     ','line_number':390,'multiline':True]['text':'*
     * Update the underlying value using a BSONElement
     *
     * Allows setting non-basic values (e.g. vector<string>)
     * via the {setParameter: ...} call or {setClusterParameter: ...} call.
     ','line_number':440,'multiline':True]['text':'*
     * Resets the current storage value in storage_wrapper with the default value.
     ','line_number':456,'multiline':True]['text':'*
     * Update the underlying value from a string.
     *
     * Typically invoked from commandline --setParameter usage. Prohibited for cluster server
     * parameters.
     ','line_number':468,'multiline':True]['text':'*
     * Retrieves the cluster parameter time from the chained ClusterServerParameter struct in
     * storage. All other server parameters simply return the uninitialized LogicalTime.
     ','line_number':489,'multiline':True]['text':'*
     * Called *after* updating the underlying storage to its new value.
     ','line_number':501,'multiline':True]['text':' Validators.','line_number':509,'multiline':False]['text':'*
     * Add a callback validator to be invoked when this setting is updated.
     *
     * Callback should return Status::OK() or ErrorCodes::BadValue.
     ','line_number':511,'multiline':True]['text':'*
     * Sets a validation limit against a predicate function.
     ','line_number':521,'multiline':True]['text':' MSVC has trouble resolving T=decltype(param) through the above class template.','line_number':550,'multiline':False]['text':' Avoid that by using this proxy factory to infer storage type.','line_number':551,'multiline':False]['text':' namespace mongo','line_number':560,'multiline':False]