['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Table of WiredTiger index types<->KeyString format<->Data format version:
 *
 * | Index Type                   | Key                             | Data Format Version        |
 * | ---------------------------- | ------------------------------- | -------------------------- |
 * | _id index                    | KeyString without RecordId      | index V1: 6, index V2: 8   |
 * | non-unique index             | KeyString with RecordId         | index V1: 6, index V2: 8   |
 * | unique secondary index (new) | KeyString with RecordId         | index V1: 13, index V2: 14 |
 * | unique secondary index (old) | KeyString with/without RecordId | index V1: 11, index V2: 12 |
 *
 * Starting in 4.2, unique indexes can be in format version 11 or 12. On upgrade to 4.2, an existing
 * format 6 unique index will upgrade to format 11 and an existing format 8 unique index will
 * upgrade to format 12.
 *
 * Starting in 6.0, any new unique index will be in format 13 or 14, which guarantees that all keys
 * are in the new format.
 ','line_number':61,'multiline':True]['text':'*
     * Parses index options for wired tiger configuration string suitable for table creation.
     * The document 'options' is typically obtained from the 'storageEngine.wiredTiger' field
     * of an IndexDescriptor's info object.
     ','line_number':93,'multiline':True]['text':'*
     * Creates the "app_metadata" string for the index from the index descriptor, to be stored
     * in WiredTiger's metadata. The output string is of the form:
     * ",app_metadata=(...)," and can be appended to the config strings for WiredTiger's API calls.
     ','line_number':100,'multiline':True]['text':'*
     * Creates a configuration string suitable for 'config' parameter in WT_SESSION::create().
     * Configuration string is constructed from:
     *     built-in defaults
     *     'sysIndexConfig'
     *     'collIndexConfig'
     *     storageEngine.wiredTiger.configString in index descriptor's info object.
     * Performs simple validation on the supplied parameters.
     * Returns error status if validation fails.
     * Note that even if this function returns an OK status, WT_SESSION:create() may still
     * fail with the constructed configuration string.
     ','line_number':107,'multiline':True]['text':'*
     * Creates a WiredTiger table suitable for implementing a MongoDB index.
     * 'config' should be created with generateCreateString().
     ','line_number':126,'multiline':True]['text':'*
     * Drops the specified WiredTiger table. This should only be used for resuming index builds.
     ','line_number':134,'multiline':True]['text':'*
     * Constructs an index. The rsKeyFormat is the RecordId key format of the related RecordStore.
     ','line_number':139,'multiline':True]['text':' WiredTigerIndex additions','line_number':189,'multiline':False]['text':'*
     * Checks whether the prefix key defined by 'buffer' and 'size' is in the index. If it is,
     * returns the RecordId of the first matching key and positions the cursor 'c' on that key.
     ','line_number':240,'multiline':True]['text':'*
     * Checks whether the prefix key defined by 'keyString' and 'sizeWithoutRecordId' is in the
     * index. If it is, returns the RecordId of the first matching key and positions the cursor 'c'
     * on that key.
     ','line_number':249,'multiline':True]['text':'*
     * Sets the upper bound on the passed in cursor to be the maximum value of the KeyString prefix.
     ','line_number':259,'multiline':True]['text':'*
     * Returns a DuplicateKey error if the prefix key exists in the index with a different RecordId.
     * Returns true if the prefix key exists in the index with the same RecordId. Returns false if
     * the prefix key does not exist in the index. Should only be used for non-_id indexes.
     ','line_number':266,'multiline':True]['text':'
     * Determines the data format version from application metadata and verifies compatibility.
     * Returns the corresponding KeyString version.
     ','line_number':277,'multiline':True]['text':'
     * Attempts to repair the data format version in the index table metadata if there is a mismatch
     * to the index type during startup.
     ','line_number':287,'multiline':True]['text':'
     * The data format version is effectively const after the WiredTigerIndex instance is
     * constructed.
     ','line_number':303,'multiline':True]['text':'*
     * This function continues to exist in order to support v4.0 unique partial index format: the
     * format changed in v4.2 and onward. _unindex will call this if an index entry in the new
     * format cannot be found, and this function will check for the old format.
     ','line_number':358,'multiline':True]['text':' Unimplemented by _id indexes for lack of need','line_number':400,'multiline':False]['text':'*
     * This is not applicable to id indexes. See base class comments.
     ','line_number':417,'multiline':True]['text':' Unimplemented by non-unique indexes','line_number':451,'multiline':False]['text':' namespace mongo','line_number':469,'multiline':False]