['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Either executes the specified operation and returns it's value or randomly throws a write
 * conflict exception if the WTWriteConflictException failpoint is enabled. This is only checked
 * on cursor methods that make modifications.
 ','line_number':74,'multiline':True]['text':'*
 * Identical to WT_OP_CHECK except this is checked on cursor seeks/advancement.
 ','line_number':82,'multiline':True]['text':'*
     * Parses collections options for wired tiger configuration string for table creation.
     * The document 'options' is typically obtained from the 'wiredTiger' field of
     * CollectionOptions::storageEngine.
     ','line_number':102,'multiline':True]['text':'*
     * Creates a configuration string suitable for 'config' parameter in WT_SESSION::create().
     * It is possible for 'ns' to be an empty string, in the case of internal-only temporary tables.
     * Configuration string is constructed from:
     *     built-in defaults
     *     storageEngine.wiredTiger.configString in 'options'
     *     'extraStrings'
     * Performs simple validation on the supplied parameters.
     * Returns error status if validation fails.
     * Note that even if this function returns an OK status, WT_SESSION:create() may still
     * fail with the constructed configuration string.
     ','line_number':109,'multiline':True]['text':' Pass in NamespaceString, it is not possible to resolve the UUID to NamespaceString yet.','line_number':151,'multiline':False]['text':' name of the RecordStore implementation','line_number':154,'multiline':False]['text':' CRUD related','line_number':173,'multiline':False]['text':'
     * Check the size information for this RecordStore. This function opens a cursor on the
     * RecordStore to determine if it is empty. If it is empty, it will mark the collection as
     * needing size adjustment as a result of a rollback or storage recovery event.
     ','line_number':255,'multiline':True]['text':'*
     * Sets the new number of records and flushes the size storer.
     ','line_number':266,'multiline':True]['text':'*
     * Sets the new data size and flushes the size storer.
     ','line_number':271,'multiline':True]['text':'*
     * Attempts to truncate oplog entries before the pinned oplog timestamp. Truncation will occur
     * if the oplog is at capacity and the maximum retention time has elapsed.
     ','line_number':280,'multiline':True]['text':' Exposed only for testing.','line_number':291,'multiline':False]['text':'*
     * Initialize the largest known RecordId if it is not already. This is designed to be called
     * immediately before operations that may need this Recordid. This is to support lazily
     * initializing the value instead of all at once during startup.
     ','line_number':326,'multiline':True]['text':'*
     * Adjusts the record count and data size metadata for this record store. The function consults
     * the SizeRecoveryState to determine whether or not to actually change the size metadata if the
     * server is undergoing recovery.
     *
     * For most record stores, we will not update the size metadata during recovery, as we trust
     * that the values in the SizeStorer are accurate with respect to the end state of recovery.
     * However, there are two exceptions:
     *
     *   1. When a record store is created as part of the recovery process. The SizeStorer will have
     *      no information about that newly-created ident.
     *   2. When a record store is created at startup but constains no records as of the stable
     *      checkpoint timestamp. In this scenario, we will assume that the record store has a size
     *      of zero and will discard all cached size metadata. This assumption is incorrect if there
     *      are pending writes to this ident as part of the recovery process, and so we must
     *      always adjust size metadata for these idents.
     ','line_number':333,'multiline':True]['text':' not persisted','line_number':355,'multiline':False]['text':' Canonical engine name to use for retrieving options','line_number':357,'multiline':False]['text':' The capped settings should not be updated once operations have started','line_number':359,'multiline':False]['text':' The format of this RecordStore's RecordId keys.','line_number':361,'multiline':False]['text':' Whether or not to allow writes to overwrite existing records with the same RecordId.','line_number':363,'multiline':False]['text':' True if the storage engine is an in-memory storage engine','line_number':365,'multiline':False]['text':' True if WiredTiger is logging updates to this table','line_number':367,'multiline':False]['text':' True if the namespace of this record store starts with "local.oplog.", and false otherwise.','line_number':369,'multiline':False]['text':' True if the namespace of this record store starts with "config.system.change_collection", and','line_number':371,'multiline':False]['text':' false otherwise.','line_number':372,'multiline':False]['text':' TODO (SERVER-57482): Remove special handling of skipping "wiredtiger_calc_modify()".','line_number':375,'multiline':False]['text':' True if force to update with the full document, and false otherwise.','line_number':376,'multiline':False]['text':' Protects initialization of the _nextIdNum.','line_number':381,'multiline':False]['text':' not owned, can be NULL','line_number':385,'multiline':False]['text':' not owned.','line_number':388,'multiline':False]['text':' Non-null if this record store is underlying the active oplog.','line_number':390,'multiline':False]['text':' Cumulative amount of time spent truncating the oplog.','line_number':394,'multiline':False]['text':' Cumulative number of truncates of the oplog.','line_number':395,'multiline':False]['text':'*
     *  Returns the checkpoint ID for checkpoint cursors, otherwise 0.
     ','line_number':440,'multiline':True]['text':'*
     * Called when restoring a cursor that has not been advanced.
     ','line_number':452,'multiline':True]['text':' If null, need to seek to first/last record.','line_number':458,'multiline':False]['text':'*
     * This value is used for visibility calculations on what oplog entries can be returned to a
     * client. This value *must* be initialized/updated *before* a WiredTiger snapshot is
     * established.
     ','line_number':477,'multiline':True]['text':'*
     * With WT-8601, WiredTiger no longer maintains commit_timestamp information on writes to logged
     * tables, such as the oplog. There are occasions where the server applies a TimestampReadsource
     * (e.g: majority) and expects the storage engine to obey the prior semantics. When a cursor is
     * opened against the oplog, we will populate this variable with the recovery unit's read
     * timestamp to apply a visibility check.
     ','line_number':485,'multiline':True]['text':' WT failpoint to throw write conflict exceptions randomly','line_number':511,'multiline':False]['text':' Prevents oplog writes from becoming visible asynchronously. Once activated, new writes will not','line_number':515,'multiline':False]['text':' be seen by regular readers until deactivated. It is unspecified whether writes that commit before','line_number':516,'multiline':False]['text':' activation will become visible while active.','line_number':517,'multiline':False]['text':' namespace mongo','line_number':519,'multiline':False]