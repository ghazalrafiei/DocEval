['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':57,'multiline':False]['text':' Instantiate a thread to periodically, and upon request, flush writes to disk.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' Persisted storage engines that have a journal should periodically flush the journal to disk','line_number':65,'multiline':False]['text':' to avoid risking much user data loss across a server crash if the user is not doing {j: true}','line_number':66,'multiline':False]['text':' writes often.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':' Non-durable, i.e. no journal, storage engines should only flush upon request because','line_number':69,'multiline':False]['text':' waitUntilDurable() will perform a checkpoint and checkpoints are costly. Periodic flushes','line_number':70,'multiline':False]['text':' will be disabled and only requests will provoke a flush.','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' Ephemeral engines are not durable -- waitUntilDurable() returns early -- but frequent updates','line_number':73,'multiline':False]['text':' to replication's JournalListener in the waitUntilDurable() code may help update replication','line_number':74,'multiline':False]['text':' timestamps more quickly.','line_number':75,'multiline':False]['text':' This is a restart and the JournalListener was paused. Resume the existing JournalFlusher.','line_number':77,'multiline':False]['text':'disablePeriodicFlushes','line_number':82,'multiline':True]['text':' Pausing instead of shutting down the journal flusher for restart.','line_number':100,'multiline':False]['text':' The JournalFlusher was not resumed after being paused with forRestart.','line_number':114,'multiline':False]['text':' Cannot stop storage controls for restart if the controls were not started or were already','line_number':116,'multiline':False]['text':' stopped.','line_number':117,'multiline':False]['text':' namespace StorageControl','line_number':122,'multiline':False]['text':' namespace mongo','line_number':124,'multiline':False]