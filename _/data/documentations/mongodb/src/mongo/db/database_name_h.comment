['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A DatabaseName is a unique name for database.
 * It holds a database name and tenant id, if one exists. In a serverless environment, a tenant id
 * is expected to exist so that a database can be uniquely identified.
 ','line_number':58,'multiline':True]['text':'*
     * Used to create `constexpr` reserved DatabaseName constants. See
     * NamespaceString::ConstantProxy in namespace_string.h for more details.
     ','line_number':65,'multiline':True]['text':' IWYU pragma: keep','line_number':114,'multiline':False]['text':'*
     * Constructs an empty DatabaseName.
     ','line_number':120,'multiline':True]['text':'*
     * This function constructs a DatabaseName without checking for presence of TenantId.
     *
     * MUST only be used for tests.
     ','line_number':125,'multiline':True]['text':'*
     * NOTE: DollarInDbNameBehavior::allow is deprecated.
     *
     * Please use DollarInDbNameBehavior::disallow and check explicitly for any DB names that must
     * contain a $.
     ','line_number':167,'multiline':True]['text':' Deprecated','line_number':175,'multiline':False]['text':'*
     * samples:
     *   good
     *      foo
     *      bar
     *      foo-bar
     *   bad:
     *      foo bar
     *      foo.bar
     *      foo"bar
     *
     * @param db - a possible database name
     * @param DollarInDbNameBehavior - please do not change the default value. DB names that must
     *                                 contain a $ should be checked explicitly.
     * @return if db is an allowed database name
     ','line_number':179,'multiline':True]['text':'*
     * Returns a db name string without tenant id.  Only to be used when a tenant id cannot be
     * tolerated in the serialized output, and should otherwise be avoided whenever possible.
     ','line_number':208,'multiline':True]['text':'*
     * This function should only be used when creating a resouce id for databasename.
     ','line_number':216,'multiline':True]['text':'*
     * This function should only be used when logging a db name in an error message.
     ','line_number':223,'multiline':True]['text':'*
     * Method to be used only when logging a DatabaseName in a log message.
     * It is called anytime a DatabaseName is logged by logAttrs or otherwise.
     ','line_number':230,'multiline':True]['text':'*
     * This function returns the DatabaseName as a string, including the tenantId.
     *
     * MUST only be used for tests.
     ','line_number':238,'multiline':True]['text':'*
     * This function returns the DatabaseName as a string, ignoring the tenantId.
     *
     * MUST only be used for tests.
     ','line_number':247,'multiline':True]['text':'*
     * Constructs a DatabaseName from the given tenantId and database name.
     * "dbString" is expected only consist of a db name. It is the caller's responsibility to ensure
     * the dbString is a valid db name.
     ','line_number':314,'multiline':True]['text':' Private constructor for NamespaceString to construct DatabaseName from its own internal data','line_number':375,'multiline':False]['text':' Same in-memory layout as NamespaceString, see documentation in its header','line_number':379,'multiline':False]['text':' We prohibit all FAT32-disallowed characters on Windows','line_number':406,'multiline':False]['text':' The `constexpr` definitions for `DatabaseName::ConstantProxy` static data members are below. See','line_number':423,'multiline':False]['text':' `constexpr` definitions for the `NamespaceString::ConstantProxy` static data members of NSS in','line_number':424,'multiline':False]['text':' namespace_string.h for more details.','line_number':425,'multiline':False]['text':' IWYU pragma: keep','line_number':428,'multiline':False]['text':' namespace dbname_detail::const_proxy_shared_states','line_number':431,'multiline':False]['text':' IWYU pragma: keep','line_number':436,'multiline':False]['text':' namespace mongo','line_number':440,'multiline':False]