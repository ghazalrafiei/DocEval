['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*  Check for exact match or path prefix match.  ','line_number':66,'multiline':True]['text':' namespace','line_number':73,'multiline':False]['text':'_currentValue = advance();','line_number':76,'multiline':False]['text':'*
 *  Helper method:
 *      if (current object iterator not exhausted) return true;
 *      while (frame stack not empty) {
 *          resume object iterator popped from stack;
 *          if (resumed iterator not exhausted) return true;
 *      }
 *      return false;
 ','line_number':86,'multiline':True]['text':' Skip "language" specifier fields if wildcard.','line_number':113,'multiline':False]['text':' SERVER-78238: fields whose name contains a dot or starts with a '$' are not indexable.','line_number':118,'multiline':False]['text':' Compose the dotted name of the current field:','line_number':123,'multiline':False]['text':' 1. parent path empty (top level): use the current field name','line_number':124,'multiline':False]['text':' 2. parent path non-empty and obj is an array: use the parent path','line_number':125,'multiline':False]['text':' 3. parent path non-empty and obj is a sub-doc: append field name to parent path','line_number':126,'multiline':False]['text':' Find lower bound of dottedName in _weights.  lower_bound leaves us at the first','line_number':131,'multiline':False]['text':' weight that could possibly match or be a prefix of dottedName.  And if this','line_number':132,'multiline':False]['text':' element fails to match, then no subsequent weight can match, since the weights','line_number':133,'multiline':False]['text':' are lexicographically ordered.','line_number':134,'multiline':False]['text':' possibleWeightMatch is set if the weight map contains either a match or some item','line_number':138,'multiline':False]['text':' lexicographically larger than fieldName.  This boolean acts as a guard on','line_number':139,'multiline':False]['text':' dereferences of iterator 'i'.','line_number':140,'multiline':False]['text':' Optimize away two cases, when not wildcard:','line_number':143,'multiline':False]['text':' 1. lower_bound seeks to end(): no prefix match possible','line_number':144,'multiline':False]['text':' 2. lower_bound seeks to a name which is not a prefix','line_number':145,'multiline':False]['text':' Is the current field an exact match on a weight?','line_number':154,'multiline':False]['text':' Only index strings on exact match or wildcard.','line_number':160,'multiline':False]['text':' Only descend into a sub-document on proper prefix or wildcard.  Note that','line_number':168,'multiline':False]['text':' !exactMatch is a sufficient test for proper prefix match, because of','line_number':169,'multiline':False]['text':'   if ( !matchPrefix( dottedName, i->first ) ) continue;','line_number':170,'multiline':False]['text':' block above.','line_number':171,'multiline':False]['text':' Only descend into arrays from non-array parents or on wildcard.','line_number':180,'multiline':False]['text':' Skip over all other BSON types.','line_number':189,'multiline':False]['text':' valid()==false','line_number':193,'multiline':False]['text':' namespace fts','line_number':196,'multiline':False]['text':' namespace mongo','line_number':197,'multiline':False]