['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':52,'multiline':False]['text':' Conservative per array element overhead. This value was calculated as 1 byte (element type) + 5','line_number':57,'multiline':False]['text':' bytes (max string encoding of the array index encoded as string and the maximum key is 99999) + 1','line_number':58,'multiline':False]['text':' byte (zero terminator) = 7 bytes','line_number':59,'multiline':False]['text':'*
 * Parses the 'limit' property of a delete entry, which has inverted meaning from the 'multi'
 * property of an update.
 *
 * IMPORTANT: The method should not be modified, as API version input/output guarantees could
 * break because of it.
 ','line_number':65,'multiline':True]['text':'*
 * Writes the 'isMulti' value as a limit property.
 *
 * IMPORTANT: The method should not be modified, as API version input/output guarantees could
 * break because of it.
 ','line_number':74,'multiline':True]['text':'*
 * Serializes the opTime fields to specified BSON builder. A 'term' field will be included only
 * when it is intialized.
 ','line_number':82,'multiline':True]['text':'*
 * Method to deserialize the specified BSON element to opTime. This method is used by the IDL
 * parser to generate the deserializer code.
 ','line_number':88,'multiline':True]['text':'*
     * Used to indicate that a certain type of update is being passed to the constructor.
     ','line_number':99,'multiline':True]['text':'*
     * Tags used to disambiguate between the constructors for different update types.
     ','line_number':106,'multiline':True]['text':' Given the 'o' field of an update oplog entry, will return an UpdateModification that can be','line_number':113,'multiline':False]['text':' applied. The `options` parameter will be applied only in the case a Delta update is parsed.','line_number':114,'multiline':False]['text':' Creates an transform-style update. The transform function MUST preserve the _id element.','line_number':129,'multiline':False]['text':' These constructors exists only to provide a fast-path.','line_number':131,'multiline':False]['text':' If we don't know whether the update is a replacement or a modifier style update, for example','line_number':134,'multiline':False]['text':' while we are parsing a user request, we infer this by checking whether the first element is a','line_number':135,'multiline':False]['text':' $-field to distinguish modifier style updates.','line_number':136,'multiline':False]['text':'*
     * These methods support IDL parsing of the "u" field from the update command and OP_UPDATE.
     *
     * IMPORTANT: The method should not be modified, as API version input/output guarantees could
     * break because of it.
     ','line_number':139,'multiline':True]['text':'*
     * IMPORTANT: The method should not be modified, as API version input/output guarantees could
     * break because of it.
     ','line_number':147,'multiline':True]['text':' Wrapper class used to avoid having a variant where multiple alternatives have the same type.','line_number':212,'multiline':False]['text':'*
 * This class is IDL-looking and it abstracts the vagaries of how write errors are reported in write
 * commands, which is not consistent across different errors.
 *
 * Specifically, certain errors (such as DuplicateKey, StaleConfig) store the error information
 * inline with the write error object's BSON, whereas others place it under an errInfo field. This
 * model doesn't fit with IDL, which does not have support for placing fields at the same level as
 * the owning object.
 ','line_number':231,'multiline':True]['text':' namespace write_ops','line_number':271,'multiline':False]['text':' namespace mongo','line_number':272,'multiline':False]