['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' The parameterization logic upstream should not have added a parameter marker if the $in','line_number':118,'multiline':False]['text':' contains any regexes.','line_number':119,'multiline':False]['text':' Prepare the inList. We also store a shared_ptr pointing to the InListData object inside','line_number':122,'multiline':False]['text':' 'data' to ensure the InListData object stays alive even if 'expr' gets mutated in the','line_number':123,'multiline':False]['text':' future and drops its reference to the InListData.','line_number':124,'multiline':False]['text':' Auto-parameterization should not kick in if the $in's list of equalities includes any','line_number':132,'multiline':False]['text':' arrays, objects or null values.','line_number':133,'multiline':False]['text':' Either both input parameter ids should be present, or neither should.','line_number':140,'multiline':False]['text':'owned','line_number':151,'multiline':True]['text':'owned','line_number':156,'multiline':True]['text':'owned','line_number':172,'multiline':True]['text':'owned','line_number':178,'multiline':True]['text':'owned','line_number':189,'multiline':True]['text':'owned','line_number':200,'multiline':True]['text':' Generally speaking, this visitor is non-destructive and does not mutate the','line_number':210,'multiline':False]['text':' MatchExpression tree. However, in order to apply an optimization to avoid making a','line_number':211,'multiline':False]['text':' copy of the 'JsFunction' object stored within 'WhereMatchExpression', we can transfer','line_number':212,'multiline':False]['text':' its ownership from the match expression node into the SBE runtime environment. Hence,','line_number':213,'multiline':False]['text':' we need to drop the const qualifier. This is a safe operation only when the plan is','line_number':214,'multiline':False]['text':' being recovered from the SBE plan cache -- in this case, the visitor has exclusive','line_number':215,'multiline':False]['text':' access to this match expression tree. Furthermore, after all input parameters are','line_number':216,'multiline':False]['text':' bound the match expression tree is no longer used.','line_number':217,'multiline':False]['text':'owned','line_number':219,'multiline':True]['text':'owned','line_number':228,'multiline':True]['text':'*
     * These match expressions cannot contain parameter marks themselves (though their children
     * can).
     ','line_number':232,'multiline':True]['text':' This is an unowned value which is a view into the BSON owned by the MatchExpression. This','line_number':286,'multiline':False]['text':' is acceptable because the 'MatchExpression' is held by the 'CanonicalQuery', and the','line_number':287,'multiline':False]['text':' 'CanonicalQuery' lives for the lifetime of the query.','line_number':288,'multiline':False]['text':'owned','line_number':290,'multiline':True]['text':'owned','line_number':308,'multiline':True]['text':'owned','line_number':313,'multiline':True]['text':' True if the plan for which we are binding parameter values is being recovered from the SBE','line_number':360,'multiline':False]['text':' plan cache.','line_number':361,'multiline':False]['text':'*
 * Evaluates IndexBounds from the given IntervalEvaluationTrees for the given query.
 * 'indexBoundsInfo' contains the interval evaluation trees.
 *
 * Returns the built index bounds.
 ','line_number':383,'multiline':True]['text':' If there are no intervals, it means that the solution will be empty and will return EOF','line_number':424,'multiline':False]['text':' without executing the index scan.','line_number':425,'multiline':False]['text':' owned ','line_number':438,'multiline':True]['text':' owned ','line_number':443,'multiline':True]['text':'owned','line_number':456,'multiline':True]['text':'owned','line_number':461,'multiline':True]['text':'owned','line_number':468,'multiline':True]['text':' namespace','line_number':471,'multiline':False]['text':' Arguments needed to mimic the original build-time bounds setting from the current query.','line_number':508,'multiline':False]['text':' this is csn->filter','line_number':510,'multiline':False]['text':' Caching OR queries with collection scans is restricted, since it is challenging to determine','line_number':514,'multiline':False]['text':' which match expressions from the input query require a clustered collection scan. Therefore,','line_number':515,'multiline':False]['text':' we cannot correctly calculate the correct bounds for the query using the cached plan.','line_number':516,'multiline':False]['text':' current query's desired collator','line_number':525,'multiline':False]['text':' The outputs produced by the QueryPlannerAccess APIs below (passed by reference).','line_number':528,'multiline':False]['text':' Scan start/end bounds.','line_number':529,'multiline':False]['text':' Cast the return value to void since we are not building a CollectionScanNode here so do','line_number':532,'multiline':False]['text':' not need to set it in its 'hasCompatibleCollation' member.','line_number':533,'multiline':False]['text':' Bind the scan bounds to input slots.','line_number':545,'multiline':False]['text':' bindClusteredCollectionBounds','line_number':563,'multiline':False]['text':' namespace mongo::input_params','line_number':564,'multiline':False]