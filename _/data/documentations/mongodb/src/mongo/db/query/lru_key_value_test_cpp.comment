['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Tests LRU Key Value store with 2 budget estimators:
 * - trivial one gives a constant estimation for every entry;
 * - non-trivial one calculates an estimation basing on the entry's data.
 ','line_number':45,'multiline':True]['text':'','line_number':52,'multiline':False]['text':' Convenience types and functions.','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':'*
 * Test that we can add an entry and get it back out.
 ','line_number':155,'multiline':True]['text':'*
 * A kv-store with a max size of 0 isn't too useful, but test
 * that at the very least we don't blow up.
 ','line_number':165,'multiline':True]['text':'*
 * Make sure eviction and promotion work properly with a kv-store of size 1.
 ','line_number':175,'multiline':True]['text':' Second entry should immediately evict the first.','line_number':185,'multiline':False]['text':'*
 * Fill up a size 10 kv-store with 10 entries. Call get()
 * on every entry except for one. Then call add() and
 * make sure that the proper entry got evicted.
 ','line_number':191,'multiline':True]['text':' Call get() on all but one key.','line_number':205,'multiline':False]['text':' Adding another entry causes an eviction.','line_number':214,'multiline':False]['text':' Check that the least recently accessed has been evicted.','line_number':219,'multiline':False]['text':'*
 * Eviction test with non-trivial budget estimator.
 ','line_number':229,'multiline':True]['text':' Adding entries {0, 1}, {1, 2} ... {9, 10} to the LRU store.','line_number':236,'multiline':False]['text':' The first 4 values should be evicted to cover the incloming entry with size = 7.','line_number':246,'multiline':False]['text':' all entries including the one just added must be evicted','line_number':274,'multiline':False]['text':' the LRU store must be empty now','line_number':275,'multiline':False]['text':'*
 * Fill up a size 10 kv-store with 10 entries. Call get()
 * on a single entry to promote it to most recently
 * accessed. Then cause 9 evictions and make sure only
 * the entry on which we called get() remains.
 ','line_number':278,'multiline':True]['text':' Call get() on a particular key.','line_number':293,'multiline':False]['text':' Evict all but one of the original entries.','line_number':297,'multiline':False]['text':' Check that the promoteKey has not been evicted.','line_number':304,'multiline':False]['text':'*
 * Test that calling add() with a key that already exists
 * in the kv-store deletes the existing entry.
 ','line_number':314,'multiline':True]['text':'*
 * Test iteration over the kv-store.
 ','line_number':329,'multiline':True]['text':' Remove all even keys and "key: 5"','line_number':355,'multiline':False]['text':' Assert that all odd keys are in store execept for "key: 5".','line_number':359,'multiline':False]['text':' Assert that all even keys are not in store.','line_number':368,'multiline':False]['text':' Test eviction.','line_number':389,'multiline':False]['text':' The entry with key '1' has been Evicted.','line_number':396,'multiline':False]['text':' Test eviction.','line_number':428,'multiline':False]['text':' The entry with key '1' has been Evicted.','line_number':435,'multiline':False]['text':' Clear the remaining values.','line_number':441,'multiline':False]['text':' The entry with key '2' has been Evicted.','line_number':444,'multiline':False]['text':' The entry with key '3' has been Evicted.','line_number':445,'multiline':False]['text':' namespace','line_number':450,'multiline':False]