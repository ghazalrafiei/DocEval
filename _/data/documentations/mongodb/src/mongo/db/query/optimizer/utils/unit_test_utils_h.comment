['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Default selectivity of predicates used by HintedCE to force certain plans.','line_number':54,'multiline':False]['text':'*
 * The macros named *INITIAL_AUTO are used for an initial adding of tests without plans.
 * When the test is run with the --autoUpdateAsserts flag, the macro is substituted for the
 * corresponding *AUTO macro with the actual plan.
 ','line_number':70,'multiline':True]['text':' Do not remove macro even if unused: used to update tests before committing code.','line_number':105,'multiline':False]['text':'includeFieldName','line_number':143,'multiline':True]['text':'*
 * This is the auto-updating version of ASSERT_BETWEEN. If the value falls outside the range, we
 * create a new range which is +-25% if the value. This is expressed as a fractional operation in
 * order to preserve the type of the value (int->int, double->double).
 ','line_number':149,'multiline':True]['text':'*
 * Constructs metadata for an an index on a single, non-dotted field.
 ','line_number':174,'multiline':True]['text':'*
 * A factory function to create a heuristic-based cardinality estimator.
 ','line_number':183,'multiline':True]['text':'*
 * A factory function to create a hint-based cardinality estimator.
 ','line_number':188,'multiline':True]['text':'*
 * Return default CostModel used in unit tests.
 ','line_number':194,'multiline':True]['text':'
 * A convenience factory function to create costing with default CostModel.
 ','line_number':199,'multiline':True]['text':'*
 * A convenience factory function to create costing with overriden CostModel.
 ','line_number':204,'multiline':True]['text':'*
 * A convenience factory function to create OptPhaseManager for unit tests with cost model.
 ','line_number':210,'multiline':True]['text':'*
 * A convenience factory function to create OptPhaseManager for unit tests with cost model.
 ','line_number':221,'multiline':True]['text':'*
 * A convenience factory function to create OptPhaseManager for unit tests with CE hints and cost
 * model.
 ','line_number':233,'multiline':True]['text':'*
 * A convenience factory function to create OptPhaseManager for unit tests with CE hints and cost
 * model.
 ','line_number':246,'multiline':True]['text':'*
 * A convenience factory function to create OptPhaseManager for unit tests which requires RID.
 ','line_number':258,'multiline':True]['text':'*
 * Compares plans to allow sorting plans in a deterministic way.
 ','line_number':267,'multiline':True]['text':' namespace mongo::optimizer','line_number':271,'multiline':False]