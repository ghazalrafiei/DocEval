['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Describes how documents are distributed among separate threads or machines.
 ','line_number':49,'multiline':True]['text':'*
     * Each distribution type assigns documents to partitions in a particular pattern.
     *
     * For example, RangePartitioning tries to keep similar values together,
     * while HashPartitioning tries to separate similar values.
     ','line_number':56,'multiline':True]['text':'*
     * The paths identify the parts of a document that determine its partition.
     *
     * For example, in RangePartitioning or HashPartitioning, if two documents agree on
     * these paths, then they always end up in the same partition.
     *
     * Some distribution types, such as Centralized or Replicated, don't need to
     * look at any part of a document to decide its partition, so they don't
     * need any paths.
     ','line_number':64,'multiline':True]['text':'*
 * Structure to represent index field component and its associated collation. The _path field
 * contains the path to the field component, restricted to Get, Traverse, and Id elements.
 * For example, if we have an index on {a.b, c} that contains arrays, the _path for the first entry
 * would be Get "a" Traverse Get "b" Traverse Id, and the _path for the second entry would be
 * Get "c" Traverse Id.
 * Implicitly contains multikey info through Traverse element or lack of Traverse element.
 ','line_number':77,'multiline':True]['text':' Full collation specification, using a list of component entries.','line_number':94,'multiline':False]['text':'*
 * Represents a set of paths that are known to be 'non-multikey'--which in this context
 * is defined as 'do not apply their child path to an array'.
 *
 * For example, in this document: {a: [ {b: 3}, {b: 4} ]}
 * - 'a' is multikey
 * - 'a.b' is non-multikey
 *
 * We say 'a.b' is non-multikey, because even though 'Get [a] Traverse [1] Get [b] p'
 * applies 'p' to two different values (3 and 4), neither one is an array.
 * Therefore if 'p' starts with Traverse (of any maxDepth), we can remove it.
 * If 'p' starts with more than one Traverse, we can apply the rule repeatedly.
 *
 * This also implies that 'Get [a] Get [b] p' is non-multikey.
 * (Because: if Get [a] produces an array, then Get [b] applies 'p' to Nothing.
 *  In other words: replacing Traverse Get with Get can only make a path be Nothing
 *  in more cases.)
 *
 * However, this doesn't tell us anything about 'Get [a] Traverse [inf] Get [b] p',
 * where the intermediate Traverse has maxDepth > 1. For example, consider this document:
 *     {a: [ {b: 5}, [ {b: [6, 7]} ] ]}
 * We'd still say 'a.b' is non-multikey, because 'Get [a] Traverse [1] Get [b] p' doesn't
 * reach into the nested array, and doesn't find [6, 7].
 * But 'Get [a] Traverse [inf] Get [b] p' does reach into the nested array, so it does
 * apply 'p' to [6, 7], so we can't remove Traverse nodes from 'p'.
 ','line_number':97,'multiline':True]['text':' An empty trie doesn't know whether anything is multikey.','line_number':130,'multiline':False]['text':' 'true' means "not sure" while 'false' means "definitely no arrays".','line_number':131,'multiline':False]['text':'*
 * Metadata associated with an index. Holds the index specification (index fields and their
 * collations), its version (0 or 1), the collations as a bit mask, multikeyness info, and
 * distribution info. This is a convenient structure for the query planning process.
 ','line_number':135,'multiline':True]['text':' For testing.','line_number':142,'multiline':False]['text':' Requirements map for partial filter expression. May be trivially true.','line_number':177,'multiline':False]['text':'*
 * Metadata associated with the sharding state of a collection.
 ','line_number':184,'multiline':True]['text':' Shard key of the collection. This is stored as an IndexCollectionSpec because the shard key','line_number':210,'multiline':False]['text':' is conceptually an index to the shard which contains a particular key. The only collation ops','line_number':211,'multiline':False]['text':' that are allowed are Ascending and Clustered.','line_number':212,'multiline':False]['text':' Note: Clustered collation op is intended to represent a hashed shard key; however, if two','line_number':213,'multiline':False]['text':' keys hash to the same value, it is possible that an index scan of the hashed index will','line_number':214,'multiline':False]['text':' produce a stream of keys which are not clustered. Hashed indexes are implemented with a','line_number':215,'multiline':False]['text':' B-tree using the hashed value as a key, which makes it sensitive to insertion order.','line_number':216,'multiline':False]['text':' Whether the collection may contain orphans.','line_number':219,'multiline':False]['text':' Top level field name of each component of the shard key.','line_number':222,'multiline':False]['text':'*
 * Parameters to a scan node, including distribution information, associated index definitions,
 * and multikeyness information. Also includes any ScanDefOptions we might have, such as which
 * database the collection is associated with, the origin of the collection (mongod or a BSON file),
 * or the UUID of the collection.
 ','line_number':226,'multiline':True]['text':'*
     * Indexes associated with this collection.
     ','line_number':282,'multiline':True]['text':'*
     * True if the collection exists.
     ','line_number':291,'multiline':True]['text':' If positive, estimated number of docs in the collection.','line_number':296,'multiline':False]['text':'*
     * This is only applicable if we are doing a collection scan over the collection. The scan order
     * represents the order in which the collection scan will occur: forwards, backwards, etc. A
     * specific scan order can be hinted by the user with a $natural hint.
     ','line_number':301,'multiline':True]['text':'*
 * Represents the optimizerâ€™s view of the state of the rest of the system in terms of relevant
 * resources. Currently we store the set of available collections in the system. In the future,
 * when we support distributed planning, this is where we will put information related to the
 * physical organization and topology of the machines.
 * For each collection, we hold distribution information (fields it may be sharded on), multikeyness
 * info, and data related to associated indexes in addition to other relevant metadata.
 ','line_number':309,'multiline':True]['text':' Degree of parallelism.','line_number':324,'multiline':False]['text':' TODO: generalize cluster spec.','line_number':329,'multiline':False]['text':' namespace mongo::optimizer','line_number':332,'multiline':False]