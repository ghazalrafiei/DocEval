['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A base class for wrappers of STL random distributions that produce size_t values within a range.
 * This class enables polymorphic usage of random distributions, for instance to implement a mix of
 * distributions.
 ','line_number':49,'multiline':True]['text':'*
    A uniform random distribution of size_t within a range
 ','line_number':66,'multiline':True]['text':'*
 * Wrapper of normal distribution that is guaranteed to produces size_t values within a certain
 * range. The STL class normal_distribution takes a median and standard deviation. This class
 * computes a suitable median and standard deviation from the required [min,max] boundaries.
 ','line_number':85,'multiline':True]['text':' If the result is outside the range (an event with low probability), try 10 more times to','line_number':101,'multiline':False]['text':' get a number in the range.','line_number':102,'multiline':False]['text':' We couldn't generate a number in [min,max] within 10 attempts. Generate a uniform','line_number':115,'multiline':False]['text':' number.','line_number':116,'multiline':False]['text':'weight','line_number':132,'multiline':True]['text':'*
 * Generator for mixed distribution, where mixing is on the type of distribution, in the
 * probabilities specified in distrProbabilites
 ','line_number':134,'multiline':True]['text':' Mix of different distributions. There can be instances of the same type of distribution,','line_number':177,'multiline':False]['text':' because they can still be defined differently.','line_number':178,'multiline':False]['text':' Distribution of distributions - select the current distribution with a certain probability.','line_number':180,'multiline':False]['text':'*
 * Descriptor of a typed data distribution
 ','line_number':184,'multiline':True]['text':'*
     * Generate all unique values that generation chooses from, and store them in '_valSet'.
     * Different data types provide different implementations.
     * @todo: The 'parentDesc' parameter is used only by array generation. Consider a different way
     * of passing it only to that type.
     ','line_number':205,'multiline':True]['text':'*
     * Generate a single random value, and store it in 'randValues' vector.
     ','line_number':213,'multiline':True]['text':'*
     * Generate a single random value, and store it in 'randValueArray' array.
     ','line_number':218,'multiline':True]['text':'*
     * Custom equality comparison for storage in sets. There can be only datatype in a set.
     ','line_number':223,'multiline':True]['text':' Weight that determines the probability of a value of this type.','line_number':241,'multiline':False]['text':' A set of (randomly generated) values to choose from when generating random datasets.','line_number':244,'multiline':False]['text':' Generator of random indexes into a set of values.','line_number':246,'multiline':False]['text':' std::uniform_int_distribution<size_t> _idxDist;','line_number':247,'multiline':False]['text':' Percent of null values in the dataset.','line_number':249,'multiline':False]['text':'*
 * Integer data distribution.
 ','line_number':258,'multiline':True]['text':'
     * Generate a set of random integers, and store them in _valSet.
     ','line_number':270,'multiline':True]['text':'*
 * String data distribution.
 ','line_number':280,'multiline':True]['text':'
     * Generate a set of random strings, and store them in _valSet.
     ','line_number':292,'multiline':True]['text':' All strings draw characters from this alphabet.','line_number':302,'multiline':False]['text':' Generator of random indexes into the set of characters '_alphabet'.','line_number':304,'multiline':False]['text':'*
 * Date data distribution.
 ','line_number':308,'multiline':True]['text':'*
 * Double data distribution.
 ','line_number':327,'multiline':True]['text':'*
 * ObjectId data distribution.
 ','line_number':346,'multiline':True]['text':'*
 * SBE array data distribution.
 ','line_number':359,'multiline':True]['text':' Generator of random array sizes.','line_number':376,'multiline':False]['text':' Descriptor of the dataset within each array.','line_number':378,'multiline':False]['text':' Randomly select a parent or a child distribution when generating random','line_number':380,'multiline':False]['text':'*
    Given a list of tyoed data distibutions, this class is used to generate a vector of values
    according to the distribution weights.
','line_number':385,'multiline':True]['text':' Generate a random dataset of 'nElems' according to the data distribution characteristics in','line_number':393,'multiline':False]['text':' this object.','line_number':394,'multiline':False]['text':' Select a random value data type.','line_number':398,'multiline':False]['text':' Distribution of different SBE data types. There will be %percent values of each type.','line_number':401,'multiline':False]['text':' TODO: is it a better idea to store shared_ptr or raw pointers to enable reuse?','line_number':402,'multiline':False]['text':' Pseudo-random generator.','line_number':404,'multiline':False]['text':' Select a random data type distribution.','line_number':406,'multiline':False]['text':' namespace mongo::stats','line_number':412,'multiline':False]