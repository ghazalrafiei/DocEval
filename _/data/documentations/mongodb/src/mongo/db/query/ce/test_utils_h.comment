['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':47,'multiline':False]['text':' Enable this flag to log all estimates, and let all tests pass.','line_number':55,'multiline':False]['text':'*
 * Helpful macros for asserting that the CE of a $match predicate is approximately what we were
 * expecting.
 ','line_number':77,'multiline':True]['text':' This macro verifies the cardinality of a pipeline or an input ABT.','line_number':95,'multiline':False]['text':' This macro does the same as above but also sets the collection cardinality.','line_number':98,'multiline':False]['text':' This macro verifies the cardinality of a pipeline with a single $match predicate.','line_number':103,'multiline':False]['text':' This macro does the same as above but also sets the collection cardinality.','line_number':110,'multiline':False]['text':' This macro tests cardinality of two versions of the predicate; with and without $elemMatch.','line_number':115,'multiline':False]['text':' Some commonly used functions for picking nodes in the memo for testing estimation.','line_number':124,'multiline':False]['text':' Sometimes SargableNodes get split and placed into different memo groups, but we are looking','line_number':131,'multiline':False]['text':' for a SargableNode with a specific number of predicates. For tests, we only care about','line_number':132,'multiline':False]['text':' verifying the cardinality of that one.','line_number':133,'multiline':False]['text':'*
 * A test utility class for helping verify the cardinality of CE transports on a given $match
 * predicate.
 ','line_number':148,'multiline':True]['text':'*
     * The tester initializes at least one collection with the name 'collName' and the cardinality
     * 'numRecords' in the metadata.
     ','line_number':154,'multiline':True]['text':'*
     * Returns the estimated cardinality of a given 'matchPredicate'.
     *
     * 'nodePredicate' identifies the node in the memo we want to estimate.
     ','line_number':164,'multiline':True]['text':'*
     * Returns the estimated cardinality of a given 'pipeline'.
     *
     * 'nodePredicate' identifies the node in the memo we want to estimate.
     ','line_number':172,'multiline':True]['text':'*
     * Returns the estimated cardinality of a given 'abt'.
     *
     * 'nodePredicate' identifies the node in the memo we want to estimate.
     ','line_number':180,'multiline':True]['text':'*
     * Updates the cardinality of the collection '_collName'.
     ','line_number':187,'multiline':True]['text':'*
     * Updates the indexes used by the collection '_collName'.
     ','line_number':192,'multiline':True]['text':'*
     * Adds a ScanDefinition for an additional collection for the test.
     ','line_number':197,'multiline':True]['text':'*
     * Prevents the optimizer from generating collection scan plans.
     ','line_number':204,'multiline':True]['text':'*
     * Returns the name of the collection tests will be executed against.
     ','line_number':211,'multiline':True]['text':'*
     * Subclasses need to override this method to initialize the cardinality estimators they are
     * testing.
     *
     * A 'forValidation' hint can be set to 'true' to indicate that an estimator will be used for
     * validation purpose rather than by the optimizer. Some implementations may need to know about
     * it.
     ','line_number':219,'multiline':True]['text':'*
     * Optimizes the given ABT using the provided OptPhaseManager. Can be overridden by sub-classes.
     ','line_number':230,'multiline':True]['text':'*
     * Helper to find the ScanDefinition of '_collName' in _metadata.
     ','line_number':236,'multiline':True]['text':' Phases to use when optimizing an input query.','line_number':241,'multiline':False]['text':' Used to initialize the OptPhaseManager.','line_number':244,'multiline':False]['text':' Allows us to pass hints to the optimizer.','line_number':247,'multiline':False]['text':' Stores the ScanDefinitions for all collections defined in the test.','line_number':250,'multiline':False]['text':' Name of the collection tests will be executed against.','line_number':253,'multiline':False]['text':'*
 * Test utility for helping with creation of manual histograms in the unit tests.
 ','line_number':257,'multiline':True]['text':' namespace mongo::optimizer::ce','line_number':277,'multiline':False]