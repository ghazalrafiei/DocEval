['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Data set of 10 values, each with frequency 3, in the range (-inf, 100].','line_number':79,'multiline':False]['text':' Example: { -100, -20, 0, 20, 50, 60, 70, 80, 90, 100}.','line_number':80,'multiline':False]['text':' Estimates with the bucket bound.','line_number':86,'multiline':False]['text':' Estimates with a value inside the bucket.','line_number':93,'multiline':False]['text':' No interpolation possible for estimates of inequalities in a single bucket. The estimates','line_number':95,'multiline':False]['text':' are based on the default cardinality of half bucket +/- the estimate of equality inside of','line_number':96,'multiline':False]['text':' the bucket.','line_number':97,'multiline':False]['text':' Estimates for a value larger than the last bucket bound.','line_number':103,'multiline':False]['text':' Data set of a single value.','line_number':112,'multiline':False]['text':' By exclusive bucket we mean a bucket with only boundary, that is the range frequency and NDV','line_number':113,'multiline':False]['text':' are zero.','line_number':114,'multiline':False]['text':' Estimates with the bucket boundary.','line_number':120,'multiline':False]['text':' Data set of two values, example {5, 100, 100}.','line_number':135,'multiline':False]['text':' Estimates with the bucket boundary.','line_number':141,'multiline':False]['text':' Default estimate of half of the bucket's range frequency = 0.5.','line_number':147,'multiline':False]['text':' Similar to the above test with higher frequency for the second value.','line_number':157,'multiline':False]['text':' Example {5, 5, 5, 100, 100}.','line_number':158,'multiline':False]['text':' Estimates with the bucket boundary.','line_number':164,'multiline':False]['text':' Default estimate of half of the bucket's range frequency = 1.5.','line_number':170,'multiline':False]['text':' Data set of 10 values in the range [1, 100].','line_number':180,'multiline':False]['text':' Estimates for a value smaller than the first bucket.','line_number':186,'multiline':False]['text':' Estimates with bucket bounds.','line_number':193,'multiline':False]['text':' Estimates with a value inside the bucket. The estimates use interpolation.','line_number':206,'multiline':False]['text':' The bucket ratio for the value of 10 is smaller than the estimate for equality','line_number':207,'multiline':False]['text':' and the estimates for Less and LessOrEqual are the same.','line_number':208,'multiline':False]['text':' Different estimates for Less and LessOrEqual for the value of 50.','line_number':218,'multiline':False]['text':' Estimates with bucket bound.','line_number':246,'multiline':False]['text':' Estimates for a value inside the bucket. Since there is no low value bound in the histogram','line_number':260,'multiline':False]['text':' all values smaller than the upper bound will be estimated the same way using half of the','line_number':261,'multiline':False]['text':' bucket cardinality.','line_number':262,'multiline':False]['text':' In the special case of a single string bucket, we estimate empty string equality as for any','line_number':276,'multiline':False]['text':' other string value. In practice if there are at least 2 buckets for the string data and an','line_number':277,'multiline':False]['text':' empty string in the data set, it will be chosen as a bound for the first bucket and produce','line_number':278,'multiline':False]['text':' precise estimates.','line_number':279,'multiline':False]['text':' Estimates for a value larger than the upper bound.','line_number':287,'multiline':False]['text':' Data set of 100 strings in the range ["abc", "xyz"], with average frequency of 2.','line_number':298,'multiline':False]['text':' Estimates for a value smaller than the first bucket bound.','line_number':304,'multiline':False]['text':' Estimates with bucket bounds.','line_number':319,'multiline':False]['text':' Estimates for a value inside the bucket.','line_number':344,'multiline':False]['text':' Estimate for a value very close to the bucket bound.','line_number':357,'multiline':False]['text':' June 6, 2017 -- June 7, 2017.','line_number':372,'multiline':False]['text':' June 6, 2017 -- June 7, 2017 in seconds.','line_number':428,'multiline':False]['text':' NB: startTs.asInt64() produces different value.','line_number':451,'multiline':False]['text':' Bucket bounds.','line_number':522,'multiline':False]['text':' ObjectId value inside the bucket.','line_number':539,'multiline':False]['text':' Data set of mixed data types: 3 integers and 5 strings.','line_number':561,'multiline':False]['text':' (NaN, 1).','line_number':576,'multiline':False]['text':' lowInclusive ','line_number':578,'multiline':True]['text':' highInclusive ','line_number':581,'multiline':True]['text':' includeScalar ','line_number':584,'multiline':True]['text':' (NaN, 5).','line_number':587,'multiline':False]['text':' lowInclusive ','line_number':589,'multiline':True]['text':' highInclusive ','line_number':592,'multiline':True]['text':' includeScalar ','line_number':595,'multiline':True]['text':' [0, "").','line_number':603,'multiline':False]['text':' lowInclusive ','line_number':605,'multiline':True]['text':' highInclusive ','line_number':608,'multiline':True]['text':' includeScalar ','line_number':611,'multiline':True]['text':' ["", "a"].','line_number':614,'multiline':False]['text':' lowInclusive ','line_number':616,'multiline':True]['text':' highInclusive ','line_number':619,'multiline':True]['text':' includeScalar ','line_number':622,'multiline':True]['text':' ["", "xyz"].','line_number':627,'multiline':False]['text':' lowInclusive ','line_number':629,'multiline':True]['text':' highInclusive ','line_number':632,'multiline':True]['text':' includeScalar ','line_number':635,'multiline':True]['text':' Data set of mixed data types: 20 integers and 80 strings.','line_number':641,'multiline':False]['text':' Histogram with one bucket per data type.','line_number':642,'multiline':False]['text':' sampleSize ','line_number':648,'multiline':True]['text':' Estimates with the bucket bounds.','line_number':652,'multiline':False]['text':' Estimates for a value smaller than the first bucket bound.','line_number':666,'multiline':False]['text':' Estimates for a value between bucket bounds.','line_number':675,'multiline':False]['text':' Range estimates, including min/max values per data type.','line_number':690,'multiline':False]['text':' [NaN, 25].','line_number':697,'multiline':False]['text':' lowInclusive ','line_number':699,'multiline':True]['text':' highInclusive ','line_number':702,'multiline':True]['text':' includeScalar ','line_number':705,'multiline':True]['text':' [25, 1000000].','line_number':708,'multiline':False]['text':' lowInclusive ','line_number':710,'multiline':True]['text':' highInclusive ','line_number':713,'multiline':True]['text':' includeScalar ','line_number':716,'multiline':True]['text':' [NaN, 1000000].','line_number':719,'multiline':False]['text':' lowInclusive ','line_number':721,'multiline':True]['text':' highInclusive ','line_number':724,'multiline':True]['text':' includeScalar ','line_number':727,'multiline':True]['text':' [NaN, "").','line_number':733,'multiline':False]['text':' lowInclusive ','line_number':735,'multiline':True]['text':' highInclusive ','line_number':738,'multiline':True]['text':' includeScalar ','line_number':741,'multiline':True]['text':' [25, "").','line_number':744,'multiline':False]['text':' lowInclusive ','line_number':746,'multiline':True]['text':' highInclusive ','line_number':749,'multiline':True]['text':' includeScalar ','line_number':752,'multiline':True]['text':' ["", "a"].','line_number':755,'multiline':False]['text':' lowInclusive ','line_number':757,'multiline':True]['text':' highInclusive ','line_number':760,'multiline':True]['text':' includeScalar ','line_number':763,'multiline':True]['text':' ["", {}).','line_number':767,'multiline':False]['text':' lowInclusive ','line_number':771,'multiline':True]['text':' highInclusive ','line_number':774,'multiline':True]['text':' includeScalar ','line_number':777,'multiline':True]['text':' ["a", {}).','line_number':780,'multiline':False]['text':' lowInclusive ','line_number':782,'multiline':True]['text':' highInclusive ','line_number':785,'multiline':True]['text':' includeScalar ','line_number':788,'multiline':True]['text':'*
 * Tests for cardinality estimates for queries over minimum values of date, timestamp, and objectId
 * types. When the histogram has at least 2 buckets per data type, the minimum value, if present in
 * the data, is picked as a bound for the first bucket for the corresponding data type. In this case
 * the cardinality estimates are precise. To test the approximate estimation, we force the histogram
 * generation to use one bucket per type (except the first numeric type).
 ','line_number':793,'multiline':True]['text':' Force each type except numbers to use a single bucket. This way there is no bucket for the','line_number':839,'multiline':False]['text':' min value if present in the data and it needs to be estimated.','line_number':840,'multiline':False]['text':' Mixed data are sorted in the histogram according to the BSON order as defined in bsontypes.h','line_number':843,'multiline':False]['text':' the canonicalizeBSONTypeUnsafeLookup function.','line_number':844,'multiline':False]['text':' Assert that our scalar histogram is what we expect.','line_number':850,'multiline':False]['text':' Minimum ObjectId.','line_number':902,'multiline':False]['text':'isMin','line_number':903,'multiline':True]['text':' Minimum date.','line_number':908,'multiline':False]['text':'isMin','line_number':909,'multiline':True]['text':' Minimum timestamp.','line_number':914,'multiline':False]['text':'isMin','line_number':915,'multiline':True]['text':' Add minimum values to the data set and create another histogram.','line_number':920,'multiline':False]['text':' Precise estimate for equality to empty string, it is a bucket boundary.','line_number':935,'multiline':False]['text':' Equality to the minimum date/ts value is estimated by range_frequency/NDV.','line_number':938,'multiline':False]['text':' Inequality predicates using min values.','line_number':944,'multiline':False]['text':' sampleSize ','line_number':953,'multiline':True]['text':' [minDate, startInstant], estimated by the half of the date bucket.','line_number':954,'multiline':False]['text':' lowInclusive ','line_number':956,'multiline':True]['text':' highInclusive ','line_number':959,'multiline':True]['text':' includeScalar ','line_number':962,'multiline':True]['text':' [minDate, endInstant], estimated by the entire date bucket.','line_number':965,'multiline':False]['text':' lowInclusive ','line_number':967,'multiline':True]['text':' highInclusive ','line_number':970,'multiline':True]['text':' includeScalar ','line_number':973,'multiline':True]['text':' [minDate, minTs), estimated by the entire date bucket.','line_number':976,'multiline':False]['text':' (is this interval possible or is it better to have maxDate upper bound?).','line_number':977,'multiline':False]['text':' lowInclusive ','line_number':979,'multiline':True]['text':' highInclusive ','line_number':982,'multiline':True]['text':' includeScalar ','line_number':985,'multiline':True]['text':' [minTs, startTs], estimated by the half of the timestamp bucket.','line_number':988,'multiline':False]['text':' lowInclusive ','line_number':990,'multiline':True]['text':' highInclusive ','line_number':993,'multiline':True]['text':' includeScalar ','line_number':996,'multiline':True]['text':' [minTs, endTs], estimated by the entire timestamp bucket.','line_number':999,'multiline':False]['text':' lowInclusive ','line_number':1001,'multiline':True]['text':' highInclusive ','line_number':1004,'multiline':True]['text':' includeScalar ','line_number':1007,'multiline':True]['text':' [minTs, maxTs], estimated by the entire timestamp bucket.','line_number':1010,'multiline':False]['text':'isMin','line_number':1011,'multiline':True]['text':' lowInclusive ','line_number':1014,'multiline':True]['text':' highInclusive ','line_number':1017,'multiline':True]['text':' includeScalar ','line_number':1020,'multiline':True]['text':' Minimum ObjectId.','line_number':1043,'multiline':False]['text':'isMin','line_number':1044,'multiline':True]['text':' Minimum date.','line_number':1049,'multiline':False]['text':'isMin','line_number':1050,'multiline':True]['text':' Minimum timestamp.','line_number':1055,'multiline':False]['text':'isMin','line_number':1056,'multiline':True]['text':' Inequality predicates using min values.','line_number':1061,'multiline':False]['text':' sampleSize ','line_number':1070,'multiline':True]['text':' [minDate, innerDate], estimated by the half of the date bucket.','line_number':1071,'multiline':False]['text':' lowInclusive ','line_number':1074,'multiline':True]['text':' highInclusive ','line_number':1077,'multiline':True]['text':' includeScalar ','line_number':1080,'multiline':True]['text':' [minTs, innerTs], estimated by the half of the timestamp bucket.','line_number':1083,'multiline':False]['text':' lowInclusive ','line_number':1086,'multiline':True]['text':' highInclusive ','line_number':1089,'multiline':True]['text':' includeScalar ','line_number':1092,'multiline':True]['text':' namespace','line_number':1095,'multiline':False]['text':' namespace mongo::optimizer::ce','line_number':1096,'multiline':False]