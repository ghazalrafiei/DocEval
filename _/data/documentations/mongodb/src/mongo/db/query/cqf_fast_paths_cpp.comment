['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Interface for implementing a fast path for a simple query of certain shape. Responsible for SBE
 * plan generation.
 ','line_number':49,'multiline':True]['text':'*
 * ABTPrinter implementation that passes on the given explain BSON. Used for implementing
 * explain for fast paths.
 ','line_number':62,'multiline':True]['text':' We can use a BSON object representing the filter for fast and simple comparison.','line_number':82,'multiline':False]['text':'*
 * Do not call this method directly. Instead, use the REGISTER_FAST_PATH macro defined in this
 * file.
 ','line_number':87,'multiline':True]['text':' The current fast path implementations don't support parallel scan plans.','line_number':107,'multiline':False]['text':' The current fast path implementations only deal with collection scans.','line_number':111,'multiline':False]['text':' TODO SERVER-83267: Enable once we have a fast path for non-existent collections.','line_number':115,'multiline':False]['text':' TODO SERVER-83716: The current fast path implementations don't support collation.','line_number':119,'multiline':False]['text':' The current fast path implementations don't support','line_number':126,'multiline':False]['text':' projections or sorting.','line_number':127,'multiline':False]['text':' The current fast path implementations only support queries containing a single filter','line_number':136,'multiline':False]['text':' with a simple predicate.','line_number':137,'multiline':False]['text':' The current fast path implementations don't support shard filtering.','line_number':145,'multiline':False]['text':'*
 * Implements fast path SBE plan generation for a query without projections and predicates - a
 * simple collection scan.
 ','line_number':175,'multiline':True]['text':' TODO SERVER-83628: respect the scanOrder','line_number':186,'multiline':False]['text':'scanRidSlot','line_number':190,'multiline':True]['text':'recordIdSlot','line_number':191,'multiline':True]['text':'snapshotIdSlot','line_number':192,'multiline':True]['text':'indexIdentSlot','line_number':193,'multiline':True]['text':'indexKeySlot','line_number':194,'multiline':True]['text':'indexKeyPatternSlot','line_number':195,'multiline':True]['text':'fieldnames','line_number':196,'multiline':True]['text':'seekRecordIdSlot','line_number':198,'multiline':True]['text':'minRecordIdSlot','line_number':199,'multiline':True]['text':'maxRecordIdSlot','line_number':200,'multiline':True]['text':'forwardScan','line_number':201,'multiline':True]['text':'PlanNodeId','line_number':203,'multiline':True]['text':'lowPriority','line_number':205,'multiline':True]['text':' Work around https://gcc.gnu.org/bugzilla/show_bug.cgi?id=85282. These could be defined inside','line_number':225,'multiline':False]['text':' 'EExprBuilder' but GCC doesn't allow template specializations in non-namespace scopes.','line_number':226,'multiline':False]['text':' namespace eexpr_helper','line_number':246,'multiline':False]['text':'*
 * Exposes required SBE helper functions to 'sbe_helper::generateComparisonExpr'. Note that this
 * class is stateless and doesn't support collation.
 ','line_number':248,'multiline':True]['text':'*
 * Implements fast path SBE plan generation for a query with a single comparison predicate on a
 * top-level field.
 ','line_number':324,'multiline':True]['text':'scanRidSlot','line_number':348,'multiline':True]['text':'seekRecordIdSlot','line_number':356,'multiline':True]['text':'minRecordIdSlot','line_number':357,'multiline':True]['text':'maxRecordIdSlot','line_number':358,'multiline':True]['text':'forwardScan','line_number':359,'multiline':True]['text':'lowPriority','line_number':363,'multiline':True]['text':'move','line_number':369,'multiline':True]['text':'*
     * Holds properties of a single MQL predicate. These are extracted from a BSON
     * representing the query filter.
     ','line_number':399,'multiline':True]['text':' We don't necessarily have to depend on ABT here, but 'Constant' is convenient','line_number':405,'multiline':False]['text':' for holding and appropriately deleting the SBE value.','line_number':406,'multiline':False]['text':' When the constant is an array, MinKey, or MaxKey, we need to enable comparisons to','line_number':411,'multiline':False]['text':' arrays too.','line_number':412,'multiline':False]['text':' Note that the constructor of 'FieldNameType' copies the contents of the string view, so','line_number':421,'multiline':False]['text':' this is safe even if the filter doesn't outlive the props.','line_number':422,'multiline':False]['text':'View','line_number':426,'multiline':True]['text':' We assume the predicate is either:','line_number':433,'multiline':False]['text':' - '{field: value}'','line_number':434,'multiline':False]['text':' - '{field: {$op: value}}'','line_number':435,'multiline':False]['text':' Matches, for example, '{a: 1}'.','line_number':468,'multiline':False]['text':' Matches, for example, '{a: {$eq: 1}}'.','line_number':471,'multiline':False]['text':' Matches, for example, '{a: {$lt: 1}}'.','line_number':476,'multiline':False]['text':' Matches, for example, '{a: {$lte: 1}}'.','line_number':481,'multiline':False]['text':' Matches, for example, '{a: {$gt: 1}}'.','line_number':486,'multiline':False]['text':' Matches, for example, '{a: {$gte: 1}}'.','line_number':491,'multiline':False]['text':' namespace','line_number':496,'multiline':False]['text':'solution','line_number':552,'multiline':True]['text':'isFromPlanCache','line_number':558,'multiline':True]['text':' generatedByBonsai ','line_number':559,'multiline':True]['text':'pipelineMatchExpr','line_number':560,'multiline':True]['text':'pipeline','line_number':576,'multiline':True]['text':' namespace mongo::optimizer::fast_path','line_number':580,'multiline':False]