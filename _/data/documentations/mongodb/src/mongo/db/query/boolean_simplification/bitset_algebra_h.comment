['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This file defines Maxterm and Minterm classes and operations over them. Maxterm/Minterms are used
 * to represent a boolean expression in a canonical form. For example, for Disjunctive Normal Form,
 * a Maxterm is used to represent the top disjunctive term and minterms are used to represent the
 * children conjunctive terms.
 ','line_number':42,'multiline':True]['text':'*
 * Represent a conjunctive or disjunctive term in a condensed bitset form.
 ','line_number':55,'multiline':True]['text':'*
     * Flip the value of every predicate in the minterm.
     ','line_number':70,'multiline':True]['text':' This is fine from the performance perspective, because DynamicBitset will increase','line_number':77,'multiline':False]['text':' the size by 1 block, not 1 bit.','line_number':78,'multiline':False]['text':'*
     * Returns true if the given terms have conflicting bits. The bits of two terms are conflicting
     * if in one term the bit is set to 1 and in another to 0.
     ','line_number':95,'multiline':True]['text':'*
     * Returns true if the current term can absorb the other term. For example, 'a' absorbs 'a & b'
     * (or 'a | b'). See Absorption law for details.
     ','line_number':113,'multiline':True]['text':'*
     * Predicates bitset, if a predicate takes part in the conjunction its corresponding bit in the
     * predicates bitset set to 1 if the predicate in true form or to 0 otherwise.
     ','line_number':125,'multiline':True]['text':'*
     * Predicates mask, if a predicate takes part in the conjunction its corresponding bit set to 1.
     ','line_number':131,'multiline':True]['text':'*
 * Minterms represent a conjunction of an expression in Disjunctive Normal Form.
 ','line_number':137,'multiline':True]['text':'*
 * Maxterm represents top disjunction of an expression in Disjunctive Normal Form and consists of a
 * list of children conjunctions. Each child conjunction is represented as a Minterm.
 ','line_number':142,'multiline':True]['text':'*
     * Returns true if the expression is trivially true. It is recommended to call
     * removeRedundancies() before this call to make sure that always true expressions is converted
     * into trivially true one.
     ','line_number':164,'multiline':True]['text':'*
     * Returns true if the expression is trivially false. It is recommended to call
     * removeRedundancies() before this call to make sure that always false expressions is converted
     * into trivially false one.
     ','line_number':171,'multiline':True]['text':'*
     * Removes redundant minterms from the maxterm. A minterm might be redundant if it can be
     * absorbed by another term. For example, 'a' absorbs 'a & b'. See Absorption law for details.
     ','line_number':178,'multiline':True]['text':'*
     * Appends a new minterm with the bit at 'bitIndex' set to 'val' and all other bits unset.
     ','line_number':184,'multiline':True]['text':'*
     * Appends empty minterm.
     ','line_number':189,'multiline':True]['text':'*
     * Returns the number of bits that each individual minterm in the maxterm contains.
     ','line_number':194,'multiline':True]['text':'*
     * Minterms represent a conjunction of an expression in Disjunctive Normal Form and consists of
     * predicates which can be in true (for a predicate A, true form is just A) of false forms (for
     * a predicate A the false form is the negation of A: ~A). Every predicate is represented by a
     * bit in the predicates bitset.
     ','line_number':203,'multiline':True]['text':'*
 * Identify and extract common predicates from the given booleean expression in DNF. Returns the
 * pair of the extracted predicates and the expression without predicates. If there is no common
 * predicates the first element of the pair will be empty minterm.
 ','line_number':217,'multiline':True]['text':' namespace mongo::boolean_simplification','line_number':247,'multiline':False]