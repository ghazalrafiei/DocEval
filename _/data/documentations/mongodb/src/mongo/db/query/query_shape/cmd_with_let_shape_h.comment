['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This struct is bit of a weird one. We want to use it as the shape's _entire_ "specific
 * components" (rather than introduce more virtual functions to that interface). So, we track here
 * the let component (as the name suggests) but we also keep an unowned reference to the specific
 * components of CmdWithLetShape sub-classes. This class doesn't really do all that much with those
 * components except track a reference to them and ensure their size is accounted for and their hash
 * value is incorporated.
 ','line_number':40,'multiline':True]['text':'*
     * Hashes to include the shapified let parameters and also the hash of 'unownedInnerComponents'.
     ','line_number':53,'multiline':True]['text':'*
     * Includes the size of the let parameters and the size of 'unownedInnerComponents.'
     ','line_number':58,'multiline':True]['text':'*
     * Adds _only_ the let params.
     ','line_number':63,'multiline':True]['text':' Tracked so that this can be hash combined correctly.','line_number':72,'multiline':False]['text':'*
 * The 'let' command argument is semi-generic in that it is supported in a couple commands. However
 * it is treated specially since it supports using expressions as the let constants. Using
 * expressions induces a library dependency that we don't want in the Shape interface itself. So
 * this class handles tracking and adding the 'let' component of the shape for sub-classes.
 ','line_number':76,'multiline':True]['text':' namespace mongo::query_shape','line_number':107,'multiline':False]