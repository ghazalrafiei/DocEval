['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' For debugging only','line_number':70,'multiline':False]['text':' We validated the parameters when creating the index.','line_number':91,'multiline':False]['text':' TODO: Maybe slightly optimize by returning results in order','line_number':98,'multiline':False]['text':' for backwards compatibility, use strings','line_number':170,'multiline':False]['text':' namespace','line_number':181,'multiline':False]['text':' Order is not preserved in changing from numeric to string','line_number':186,'multiline':False]['text':' form of index key. Therefore, sorting is deferred to after','line_number':187,'multiline':False]['text':' intervals are made','line_number':188,'multiline':False]['text':' Make sure that our intervals don't overlap each other and are ordered correctly.','line_number':191,'multiline':False]['text':' This perhaps should only be done in debug mode.','line_number':192,'multiline':False]['text':' There may be duplicates when going up parent cells if two cells share a parent','line_number':204,'multiline':False]['text':' NOLINT','line_number':205,'multiline':False]['text':' Look at the cells that cover us.  We want to look at every cell that contains the','line_number':208,'multiline':False]['text':' covering we would index on if we were to insert the query geometry.  We generate','line_number':209,'multiline':False]['text':' the would-index-with-this-covering and find all the cells strictly containing the','line_number':210,'multiline':False]['text':' cells in that set, until we hit the coarsest indexed cell.  We use equality, not','line_number':211,'multiline':False]['text':' a prefix match.  Why not prefix?  Because we've already looked at everything','line_number':212,'multiline':False]['text':' finer or as fine as our initial covering.','line_number':213,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' Say we have a fine point with cell id 212121, we go up one, get 21212, we don't','line_number':215,'multiline':False]['text':' want to look at cells 21212[not-1] because we know they're not going to intersect','line_number':216,'multiline':False]['text':' with 212121, but entries inserted with cell value 21212 (no trailing digits) may.','line_number':217,'multiline':False]['text':' And we've already looked at points with the cell id 211111 from the regex search','line_number':218,'multiline':False]['text':' created above, so we only want things where the value of the last digit is not','line_number':219,'multiline':False]['text':' stored (and therefore could be 1).','line_number':220,'multiline':False]['text':' Add the parent cell of the currently covered cell since we aren't at the','line_number':223,'multiline':False]['text':' coarsest level yet','line_number':224,'multiline':False]['text':' NOTE: Be careful not to generate cells strictly less than the','line_number':225,'multiline':False]['text':' coarsestIndexedLevel - this can result in S2 failures when level < 0.','line_number':226,'multiline':False]['text':' Make sure that our intervals don't overlap each other and are ordered correctly.','line_number':240,'multiline':False]['text':' This perhaps should only be done in debug mode.','line_number':241,'multiline':False]['text':' namespace mongo','line_number':250,'multiline':False]