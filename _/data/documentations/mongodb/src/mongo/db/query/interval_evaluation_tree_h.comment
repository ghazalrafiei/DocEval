['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 *  IET is a polyvalue that represents a node of Interval Evaluation Tree.
 ','line_number':56,'multiline':True]['text':'*
 *  ConstNode is a node that represents an interval with constant bounds, such as (MinKey,
 * MaxKey).
 ','line_number':62,'multiline':True]['text':'*
 * EvalNode is a node that evaluates an interval from a simple predicate such as {$gt: p1} where
 * p1 is a parameter value known at runtime.
 ','line_number':77,'multiline':True]['text':'*
 * ExplodeNode expects the child node to produce a union of point intervals, and it picks a single
 * point interval from the union, given the index to pick from. This node is used by the
 * "explode for sort" optimization in the query planner. It also takes a 'cacheKey' that can be used
 * to search in the evaluation cache to avoid re-evaluating child.
 ','line_number':105,'multiline':True]['text':'*
     * The 'cacheKey' is a pair of integers ('nodeIndex', 'patternIndex'). The 'nodeIndex'
     * identifies which unexploded index scan this explosion originates from, and 'patternIndex'
     * identifies which part of sort pattern this IET is for. 'index' is the index to pick from the
     * list of point intervals.
     ','line_number':116,'multiline':True]['text':'*
 * IntersectNode is a node that represents an intersection of two intervals.
 ','line_number':142,'multiline':True]['text':'*
 * UnionNode is a node that represents a union of two intervals.
 ','line_number':156,'multiline':True]['text':'*
 * ComplementNode is a node that complements its child.
 ','line_number':170,'multiline':True]['text':'*
 * A cache used by 'ExplodeNode' to avoid recomputing common IET evaluation results.
 ','line_number':248,'multiline':True]['text':'*
 * Evaluate OrderedIntervalList for the given MatchExpression tree using pre-built IET.
 *
 * @param iet is Interval Evaluation Tree to evaluate index intervals
 * @param inputParamIdMap is a map from assigned inputParamId to MatchExpression, it is used to
 * evaluate EvalNodes
 * @param elt is the index pattern field for which intervals are evaluated
 * @param index is the index entry for which intervals are evaluated
 * @param cache is the evaluation cache used by the explode nodes to avoid recomputing the common
 * IET evaluation results
 * @return evaluated ordered interval list
 ','line_number':255,'multiline':True]['text':' namespace mongo::interval_evaluation_tree','line_number':272,'multiline':False]