['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Represents a find command request, but with more fully parsed ASTs for some fields which are
 * still raw BSONObj on the FindCommandRequest type.
 ','line_number':62,'multiline':True]['text':'*
     * This API adds the ability to construct from a pre-parsed filter. The other arguments will be
     * re-parsed again from BSON on the 'findCommandRequest' argument, since we don't have a good
     * way of cloning them.
     ','line_number':69,'multiline':True]['text':' Based on parsing the query, which metadata will *not* be available. For example, if there is','line_number':85,'multiline':False]['text':' no $text clause, then a text score will not be available.','line_number':86,'multiline':False]['text':' This is saved for an edge case where we need to re-parse a projection later. Only populated','line_number':89,'multiline':False]['text':' if there is a non-empty projection.','line_number':90,'multiline':False]['text':' All other parameters to the find command which do not have AST-like types and can be','line_number':93,'multiline':False]['text':' appropriately tracked as raw value types like ints. The fields above like 'filter' are all','line_number':94,'multiline':False]['text':' still present in their raw form on this FindCommandRequest, but it is not expected that they','line_number':95,'multiline':False]['text':' will be useful other than to keep the original BSON values around in-memory to avoid copying','line_number':96,'multiline':False]['text':' large strings and such.','line_number':97,'multiline':False]['text':'*
 * Validates the match expression 'root' as well as the query specified by 'request', checking for
 * illegal combinations of operators. Returns a non-OK status if any such illegal combination is
 * found.
 *
 * This method can be called both on normalized and non-normalized 'root'. However, some checks can
 * only be performed once the match expressions is normalized. To perform these checks one can call
 * 'CanonicalQuery::isValidNormalized()'.
 *
 * On success, returns a bitset indicating which types of metadata are *unavailable*. For example,
 * if 'root' does not contain a $text predicate, then the returned metadata bitset will indicate
 * that text score metadata is unavailable. This means that if subsequent $meta:"textScore"
 * expressions are found during analysis of the query, we should raise in an error.
 ','line_number':102,'multiline':True]['text':'*
 * Parses each big component of the input 'findCommand.' Throws exceptions if failing to parse.
 ','line_number':119,'multiline':True]['text':' namespace parsed_find_command','line_number':124,'multiline':False]['text':' namespace mongo','line_number':125,'multiline':False]