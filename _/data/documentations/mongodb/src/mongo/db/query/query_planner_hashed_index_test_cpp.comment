['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A specialization of the QueryPlannerTest fixture which makes it easy to present the planner
 * with a view of the available hashed indexes.
 ','line_number':46,'multiline':True]['text':' We're interested in testing plans that use a hashed index, so don't generate collection','line_number':55,'multiline':False]['text':' scans.','line_number':56,'multiline':False]['text':'*
     * Returns string of the format "[<hash of 'value'>,<hash of 'value'>,true,true]".
     ','line_number':60,'multiline':True]['text':'','line_number':70,'multiline':False]['text':' Range queries.','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' Range query on hashed field cannot use index.','line_number':78,'multiline':False]['text':' Range query on hashed field  cannot use index even if range would lead to empty bounds.','line_number':82,'multiline':False]['text':' Range query on non-hashed field can use index, if there is an equality match on the hashed','line_number':86,'multiline':False]['text':' prefix.','line_number':87,'multiline':False]['text':' Verify that fetch stage only has a filter on hashed field and correct bounds are used.','line_number':90,'multiline':False]['text':' Range query on non-hashed field can use index.','line_number':102,'multiline':False]['text':' Verify that fetch stage has no filter and correct bounds are used.','line_number':105,'multiline':False]['text':' Range query on hashed field cannot use index for hashed component.','line_number':111,'multiline':False]['text':' Verify that fetch stage only has a filter on hashed field and validate the bounds.','line_number':114,'multiline':False]['text':'','line_number':121,'multiline':False]['text':' Tests related to object comparison.','line_number':122,'multiline':False]['text':'','line_number':123,'multiline':False]['text':' Cannot use index when the query is on a prefix of the index field.','line_number':129,'multiline':False]['text':' Can use index when query is on the index field.','line_number':133,'multiline':False]['text':' Can use index when the query predicate is an object.','line_number':147,'multiline':False]['text':' Cannot use index to query on a sub-object on an index field.','line_number':155,'multiline':False]['text':'','line_number':160,'multiline':False]['text':' Null comparison and existence tests for compound hashed index.','line_number':161,'multiline':False]['text':'','line_number':162,'multiline':False]['text':' $exists:true query can use index regardless of prefix field type.','line_number':164,'multiline':False]['text':' $exists:false query can use index regardless of prefix field type.','line_number':186,'multiline':False]['text':' $not queries on a hashed prefix field cannot use index.','line_number':208,'multiline':False]['text':' $not queries on non-hashed fields of a hashed-prefix index can use index.','line_number':218,'multiline':False]['text':' $not queries on a non-hashed prefix field can use the compound hashed index. A negated','line_number':229,'multiline':False]['text':' predicate on the hashed field will produce bounds of [MinKey, MaxKey].','line_number':230,'multiline':False]['text':' When hashed field is a prefix, $eq:null queries can use index. The bounds will be point','line_number':253,'multiline':False]['text':' intervals of hashed value of 'undefined' and 'null'.','line_number':254,'multiline':False]['text':' $eq:null queries on a non-hashed field can use the index. The bounds will be point intervals','line_number':266,'multiline':False]['text':' of 'undefined' and 'null'.','line_number':267,'multiline':False]['text':'','line_number':279,'multiline':False]['text':' Tests with $or operator.','line_number':280,'multiline':False]['text':'','line_number':281,'multiline':False]['text':' Verify that three different solution, with index1, index2 and a union of index1 solution,','line_number':337,'multiline':False]['text':' index2 solution are generated.','line_number':338,'multiline':False]['text':' First sub-plan end.','line_number':354,'multiline':False]['text':' Second sub-plan end.','line_number':358,'multiline':False]['text':' Verify that three different solution, with index1, index2 and a union of index1 solution,','line_number':371,'multiline':False]['text':' index2 solution are generated.','line_number':372,'multiline':False]['text':'','line_number':393,'multiline':False]['text':' Covered projections.','line_number':394,'multiline':False]['text':'','line_number':395,'multiline':False]['text':' Verify that a query doesn't get covered when the query is on a hashed field, even if the','line_number':401,'multiline':False]['text':' projection doesn't include the hashed field. This is to avoid the possibility of hash','line_number':402,'multiline':False]['text':' collision. If two different fields produce the same hash value, there is no way to','line_number':403,'multiline':False]['text':' distinguish them without fetching the document.','line_number':404,'multiline':False]['text':' Verify that queries cannot be covered with hashed field is a prefix, despite query and','line_number':413,'multiline':False]['text':' projection not using hashed fields.','line_number':414,'multiline':False]['text':' Verify that query gets covered when neither query nor project use hashed field.','line_number':426,'multiline':False]['text':' Verify that query doesn't get covered when query is on a hashed field.','line_number':436,'multiline':False]['text':' Verify that the query doesn't get covered when projection is on a hashed field.','line_number':444,'multiline':False]['text':'','line_number':453,'multiline':False]['text':' Tests with 'INCLUDE_SHARD_FILTER' parameter set.','line_number':454,'multiline':False]['text':'','line_number':455,'multiline':False]['text':' Verify that query gets covered when neither query nor project use hashed field.','line_number':464,'multiline':False]['text':' Verify that the query doesn't get covered when projection is on a hashed field.','line_number':483,'multiline':False]['text':' Verify that query doesn't get covered when query is on a hashed field, even though the','line_number':492,'multiline':False]['text':' projection does not include the hashed field.','line_number':493,'multiline':False]['text':' Can cover the query when index provides range value for a field ('z'), but the corresponding','line_number':510,'multiline':False]['text':' shard key field is hashed.','line_number':511,'multiline':False]['text':' Cannot cover the query when index provides hashed value for a field ('y'), but the','line_number':528,'multiline':False]['text':' corresponding shard key field is a range field.','line_number':529,'multiline':False]['text':' Cannot cover the query when one of the shard key field ('newField') is not in the index.','line_number':547,'multiline':False]['text':'','line_number':570,'multiline':False]['text':' Sorting tests.','line_number':571,'multiline':False]['text':'','line_number':572,'multiline':False]['text':' Verify that sort on a hashed field results in collection scan.','line_number':578,'multiline':False]['text':' Verify that a list of exact match predicates on hashed field (prefix) and sort with an','line_number':583,'multiline':False]['text':' immediate range field can use 'SORT_MERGE'.','line_number':584,'multiline':False]['text':' Verify that an equality predicate on hashed field (prefix) and sort with an immediate','line_number':596,'multiline':False]['text':' range field can be sorted by the index.','line_number':597,'multiline':False]['text':' {$exists: false} is treated as a point-interval in BSONNULL. Hence index can provide the','line_number':606,'multiline':False]['text':' sort.','line_number':607,'multiline':False]['text':' Sort on any index field other than the one immediately following the hashed field will use a','line_number':617,'multiline':False]['text':' blocking sort.','line_number':618,'multiline':False]['text':' Verify that sort on a hashed field results in collection scan.','line_number':633,'multiline':False]['text':' Verify that a list of exact match predicates on range field (prefix) and sort with an','line_number':639,'multiline':False]['text':' immediate range field can use 'SORT_MERGE'.','line_number':640,'multiline':False]['text':' Verify that an exact match predicate on range field (prefix) and sort with an immediate range','line_number':652,'multiline':False]['text':' field doesn't require any additional sort stages. The entire operation can be answered by the','line_number':653,'multiline':False]['text':' index.','line_number':654,'multiline':False]['text':' Verify that query predicate and sort on non-hashed fields can be answered without fetching','line_number':664,'multiline':False]['text':' the document, but require a sort stage, if the 'sort' field is not immediately after 'query'','line_number':665,'multiline':False]['text':' field in the index.','line_number':666,'multiline':False]['text':'  Verify that sort on a hashed field requires a fetch and a blocking sort stage.','line_number':677,'multiline':False]['text':' Verify that a sort on non-hashed fields doesn't require any additional sort stages. The','line_number':694,'multiline':False]['text':' entire operation can be answered by the index. Also verify that if the projection only','line_number':695,'multiline':False]['text':' includes non-hashed index fields, plan does not use a fetch stage.','line_number':696,'multiline':False]['text':' Verify that a sort on non-hashed fields with a query predicate on fields irrelevant to the','line_number':706,'multiline':False]['text':' index, doesn't require any additional sort stages.','line_number':707,'multiline':False]['text':' Verify that a sort on non-hashed fields doesn't require any additional sort stages. The','line_number':715,'multiline':False]['text':' entire operation can be answered by the index. Also verify that if the projection includes','line_number':716,'multiline':False]['text':' hashed fields, the operation will require a fetch stage.','line_number':717,'multiline':False]['text':'','line_number':728,'multiline':False]['text':' Partial index tests.','line_number':729,'multiline':False]['text':'','line_number':730,'multiline':False]['text':' Hashed prefix.','line_number':783,'multiline':False]['text':' Non-hashed prefix.','line_number':795,'multiline':False]['text':'','line_number':807,'multiline':False]['text':' Hinting with hashed index tests.','line_number':808,'multiline':False]['text':'','line_number':809,'multiline':False]['text':' Hashed prefix.','line_number':849,'multiline':False]['text':' Non-hashed prefix.','line_number':856,'multiline':False]['text':'','line_number':868,'multiline':False]['text':' Collation tests.','line_number':869,'multiline':False]['text':'','line_number':870,'multiline':False]['text':' Verify that the bounds generated is based on a hash of reversed 'foo'.','line_number':896,'multiline':False]['text':' Verify that we use an index scan even if the collators doesn't match.','line_number':913,'multiline':False]['text':'','line_number':920,'multiline':False]['text':' Tests to verify index usage for query with operators like $type, $regex, limit, skip etc.','line_number':921,'multiline':False]['text':'','line_number':922,'multiline':False]['text':' Prefix regex cannot use index when prefix field is hashed.','line_number':924,'multiline':False]['text':' Prefix regex can use index when prefix field is not hashed.','line_number':931,'multiline':False]['text':' Verify that the plan has 'skip' stage and uses index.','line_number':951,'multiline':False]['text':' Verify that the plan has 'limit' stage and uses index.','line_number':967,'multiline':False]['text':' min.','line_number':984,'multiline':False]['text':' max.','line_number':991,'multiline':False]['text':' min.','line_number':1007,'multiline':False]['text':' max.','line_number':1013,'multiline':False]['text':' namespace mongo','line_number':1037,'multiline':False]