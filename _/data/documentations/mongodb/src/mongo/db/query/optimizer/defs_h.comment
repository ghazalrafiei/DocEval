['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Representation of a field name. Can be empty.
 ','line_number':52,'multiline':True]['text':'*
 * Representation of a variable name. Cannot be empty.
 ','line_number':64,'multiline':True]['text':' Key: new/target projection, value: existing/source projection.','line_number':79,'multiline':False]['text':' Map from scanDefName to rid projection name.','line_number':82,'multiline':False]['text':'*
 * A set of projection names which remembers the order in which elements were inserted.
 ','line_number':85,'multiline':True]['text':' In case of covering scan, index, or fetch, specify names of bound projections for each field.','line_number':132,'multiline':False]['text':' Also optionally specify if applicable the rid and record (root) projections.','line_number':133,'multiline':False]['text':' Used to generate field names encoding index keys for covered indexes.','line_number':142,'multiline':False]['text':'*
 * Function that replaces parameterized constants in a MatchExpression with their corresponding
 * param id's in ABT.
 *
 * Represented by an ABT FunctionCall node with two children:
 * (1) parameter id (int) that maps to the constant value
 * (2) enum/int representation of the constant's sbe type tag
 ','line_number':145,'multiline':True]['text':'*
 * Memo-related types.
 ','line_number':155,'multiline':True]['text':' Logical node id.','line_number':160,'multiline':False]['text':' Physical node id.','line_number':173,'multiline':False]['text':' Are we in debug mode? Can we do additional logging, etc?','line_number':198,'multiline':False]['text':' Maximum number of rewrite iterations.','line_number':203,'multiline':False]['text':' Selectivity does not have units, it is a simple ratio.','line_number':209,'multiline':False]['text':' Cardinality has units: it is measured in documents.','line_number':217,'multiline':False]['text':' We can multiply a cardinality and a selectivity to obtain a cardinality.','line_number':224,'multiline':False]['text':' Holds a CE and the estimation method used to derive it.','line_number':236,'multiline':False]['text':' We can divide two cardinalities to obtain a selectivity.','line_number':244,'multiline':False]['text':' Constant to correct for the difference between CE estimates which don't contain orphans and','line_number':249,'multiline':False]['text':' physical execution of plans which will encounter orphans if shard filtering has not occurred.','line_number':250,'multiline':False]['text':'*
     * Returns the cost as a double, or asserts if infinite.
     ','line_number':277,'multiline':True]['text':'*
 * Note: Ascending and Descending sorts are performed according to the semantics of BinaryOp
 * comparisons: gt, lt, etc where for examples arrays sort after all numbers, as opposed to sort
 * semantics where arrays sort relative to numbers and one another based on their smallest/largest
 * element as defined by the sort path.
 ','line_number':296,'multiline':True]['text':' All types of indexes are enabled.','line_number':320,'multiline':False]['text':' Disable all indexes.','line_number':321,'multiline':False]['text':' Only disable partial indexes.','line_number':322,'multiline':False]['text':' Disable full collection scans.','line_number':326,'multiline':False]['text':' Disable index scans.','line_number':329,'multiline':False]['text':' Disable placing a hash-join during RIDIntersect implementation.','line_number':332,'multiline':False]['text':' Disable placing a merge-join during RIDIntersect implementation.','line_number':335,'multiline':False]['text':' Disable placing a group-by and union based RIDIntersect implementation.','line_number':338,'multiline':False]['text':' Force an index scan for eligible sargable predicate. Prevent their execution as residual.','line_number':341,'multiline':False]['text':' If set keep track of rejected plans in the memo.','line_number':344,'multiline':False]['text':' Disable Cascades branch-and-bound strategy, and fully evaluate all plans. Used in conjunction','line_number':347,'multiline':False]['text':' with keeping rejected plans.','line_number':348,'multiline':False]['text':' Controls if we prefer to cover queries which may return nulls with indexes, even though we','line_number':351,'multiline':False]['text':' may not distinguish between null and missing. Alternatively we always fetch (slower).','line_number':352,'multiline':False]['text':' Controls if we prefer to insert redundant index predicates on the Seek side in order to','line_number':355,'multiline':False]['text':' prevent issues arising from yielding.','line_number':356,'multiline':False]['text':' Controls if we permit the optimization to remove Not operators by pushing them','line_number':359,'multiline':False]['text':' down toward the leaves of an ABT.','line_number':360,'multiline':False]['text':' Controls if we force sampling CE to fall back on heuristic for filter node.','line_number':363,'multiline':False]['text':' Controls the minimum and maximum number of equalityPrefixes we generate for a candidate','line_number':366,'multiline':False]['text':' index. The minimum bound is only used for testing and in production should remain set to 1.','line_number':367,'multiline':False]['text':' Rather than sampling a fully random set of documents, sample N documents (10 by default)','line_number':371,'multiline':False]['text':' randomly and scan sequentially from each of them for the rest.','line_number':372,'multiline':False]['text':' If the collection size falls within this range, sampling is a valid estimation method.','line_number':375,'multiline':False]['text':' If enabled, take the square root of numDocs for sample size.','line_number':379,'multiline':False]['text':' Uses a random cursor.','line_number':386,'multiline':False]['text':'
 * Type for storing mapping between query parameter IDs and Constants.
 ','line_number':391,'multiline':True]['text':' namespace mongo::optimizer','line_number':396,'multiline':False]