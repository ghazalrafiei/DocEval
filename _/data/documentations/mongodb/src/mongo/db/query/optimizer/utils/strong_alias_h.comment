['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Strong string alias. It is used to provide strong type safety between various string types in the
 * optimizer code. Instances with different tags are not constructable from, assignable to and
 * comparable to each other. TagType needs to define a constexpr boolean "kAllowEmpty" which
 * determines if empty strings are allowed.
 ','line_number':39,'multiline':True]['text':' Allow implicit construction from a string literal, but not from a const char*.','line_number':54,'multiline':False]['text':' We disallow empty strings based on the tag's kAllowEmpty field.','line_number':58,'multiline':False]['text':' Need to explicitly construct from StringData, const char*, or std::string.','line_number':62,'multiline':False]['text':'*
 * Exclude str::stream since it currently leads to ambiguous calls.
 ','line_number':112,'multiline':True]['text':'*
 * Strong double alias. Used for cardinality estimation and selectivity. The tag type is expected to
 * have a boolean field "kUnitless". It specifies if this entity is unitless (e.g. a simple ratio, a
 * percent) vs having units (e.g. documents). This effectively enables or disables multiplication
 * and division by the same alias type.
 ','line_number':122,'multiline':True]['text':' We specifically disallow adding and subtracting a double.','line_number':205,'multiline':False]['text':'*
     * We specifically do not add allow multiplication and addition with the same type. If we have
     * units (such as in CE: documents), this violates the unit preservation invariant: e.g. when we
     * expect a number of apples we do not want to get an apple^2 entity. Multiplication and
     * division need to be specifically allowed via overloads.
     ','line_number':228,'multiline':True]['text':'*
 * Utility functions.
 ','line_number':257,'multiline':True]['text':' namespace mongo::optimizer','line_number':270,'multiline':False]