['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Represents the dependencies of views on other namespaces and validates that this graph is acyclic
 * and smaller than the maximum diameter. It also checks that the views in each connected component
 * have compatible collations, and that all possible view pipelines stay within the maximum size in
 * bytes.
 *
 * This is owned and managed by the ViewCatalog.
 ','line_number':48,'multiline':True]['text':'*
     * Inserts a new node for 'view' in the graph, which must not already be present. 'refs'
     * contains the list of namespaces referred to by the view in its "viewOn" or "pipeline".
     * 'pipelineSize' is the size of the view's pipeline, in bytes. If inserting the view would
     * violate one of the graph's validity properties, the insertion is reverted and a non-OK status
     * is returned.
     *
     * This method is intended for validating a view that is created or modified by a user
     * operation.
     ','line_number':63,'multiline':True]['text':'*
     * Like insertAndValidate(), inserts a new node for 'view' in the graph, which must not already
     * be present. However, no validation is performed. The insertion is not rolled back even if it
     * puts the graph into an invalid state.
     *
     * This method is intended for quickly repopulating the graph with view definitions that are
     * assumed to be already valid.
     ','line_number':77,'multiline':True]['text':'*
     * Called when a view is removed from the catalog. If the view does not exist in the graph it is
     * a no-op. The view may also have a cycle or max diameter through it.
     ','line_number':89,'multiline':True]['text':'*
     * Deletes the view graph and all references to namespaces.
     ','line_number':95,'multiline':True]['text':'*
     * Returns the number of namespaces tracked by the view graph. Only exposed for testing.
     ','line_number':100,'multiline':True]['text':' A graph node represents a namespace. We say that a node A is a parent of B if A is a view and','line_number':106,'multiline':False]['text':' it references B via its "viewOn" or $lookup/$graphLookup/$facet in its "pipeline".','line_number':107,'multiline':False]['text':'','line_number':108,'multiline':False]['text':' This node represents a view namespace if and only if 'children' is nonempty and 'collator' is','line_number':109,'multiline':False]['text':' set.','line_number':110,'multiline':False]['text':'*
         * Returns true if this node represents a view.
         ','line_number':120,'multiline':True]['text':' The fully-qualified namespace that this node represents.','line_number':127,'multiline':False]['text':' Represents the namespaces depended on by this view. A view may refer to the same child','line_number':130,'multiline':False]['text':' more than once, but we store the children as a set because each namespace need not be','line_number':131,'multiline':False]['text':' traversed more than once.','line_number':132,'multiline':False]['text':' Represents the views that depend on this namespace.','line_number':135,'multiline':False]['text':' When set to nullptr, the view either has the binary collation or this namespace is not a','line_number':138,'multiline':False]['text':' view and we don't care about its collator. Verify if view with isView. ViewGraph owns the','line_number':139,'multiline':False]['text':' collator in order to keep pointer alive after insertion.','line_number':140,'multiline':False]['text':' The size of this view's "pipeline", in bytes.','line_number':143,'multiline':False]['text':' Bookkeeping for graph traversals.','line_number':147,'multiline':False]['text':'*
     * Recursively validates the parents of 'currentId', filling out statistics about the node
     * represented by that id in 'statsMap'. The recursion level is tracked in 'currentDepth' to
     * limit recursive calls.
     *
     * A non-OK status is returned if 'currentId' or its parents violate any of the graph's
     * validity properties.
     ','line_number':156,'multiline':True]['text':'*
     * Recursively validates the children of 'currentId', filling out statistics about the node
     * represented by that id in 'statsMap'. The recursion level is tracked in 'currentDepth' to
     * limit recursive calls. Both 'startingId' and 'traversalIds' are used to detect cycles.
     *
     * A non-OK status is returned if 'currentId' or its children violate any of the graph's
     * validity properties.
     ','line_number':166,'multiline':True]['text':'*
     * Gets the id for this namespace, and creates an id if it doesn't exist.
     ','line_number':180,'multiline':True]['text':' Maps namespaces to an internal node id. A mapping exists for every namespace referenced,','line_number':185,'multiline':False]['text':' i.e. existing views, collections, and non-existing namespaces.','line_number':186,'multiline':False]['text':' Maps node ids to nodes. There is a 1-1 correspondence with _namespaceIds, hence the lifetime','line_number':189,'multiline':False]['text':' of a node is the same as the lifetime as its corresponding node id.','line_number':190,'multiline':False]['text':' namespace mongo','line_number':194,'multiline':False]