['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Don't allow this to read during initial sync because it will read at the initialDataTimestamp','line_number':49,'multiline':False]['text':' and that could conflict with reconstructing prepared transactions using the','line_number':50,'multiline':False]['text':' initialDataTimestamp as the prepareTimestamp.','line_number':51,'multiline':False]['text':' Don't allow this to read during rollback as the storage engine requires exclusive access.','line_number':58,'multiline':False]['text':' tryUseMajority ','line_number':90,'multiline':True]['text':' _internalKeysCache cleared while we were getting the new keys, just return the newest key','line_number':100,'multiline':False]['text':' without touching the _internalKeysCache so the next refresh will populate it properly.','line_number':101,'multiline':False]['text':' Note: newKeys are sorted.','line_number':102,'multiline':False]['text':' _externalKeysCache cleared while we were getting the new keys, just return so the next','line_number':142,'multiline':False]['text':' refresh will populate it properly.','line_number':143,'multiline':False]['text':' Replace the cached keys with the newly loaded ones. Note because all external keys are loaded','line_number':147,'multiline':False]['text':' when refreshing them, this will remove keys that have been deleted from the collection.','line_number':148,'multiline':False]['text':' Refreshes try to use majority read concern, but if the client can't support that then any','line_number':215,'multiline':False]['text':' cached keys may have been rolled back and should be cleared.','line_number':216,'multiline':False]['text':' namespace mongo','line_number':229,'multiline':False]