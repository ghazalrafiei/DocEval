['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Specifies how the multi-planner should interact with the plan cache.
 ','line_number':64,'multiline':True]['text':' Always write a cache entry for the winning plan to the plan cache, overwriting any','line_number':68,'multiline':False]['text':' previously existing cache entry for the query shape.','line_number':69,'multiline':False]['text':' Write a cache entry for the query shape *unless* we encounter one of the following edge','line_number':72,'multiline':False]['text':' cases:','line_number':73,'multiline':False]['text':'  - Two or more plans tied for the win.','line_number':74,'multiline':False]['text':'  - The winning plan returned zero query results during the plan ranking trial period.','line_number':75,'multiline':False]['text':' Do not write to the plan cache.','line_number':78,'multiline':False]['text':' The logging facility enforces the rule that logging should not be done in a header file. Since','line_number':83,'multiline':False]['text':' the template classes and functions below must be defined in the header file and since they do use','line_number':84,'multiline':False]['text':' the logging facility, we have to define the helper functions below to perform the actual logging','line_number':85,'multiline':False]['text':' operation from template code.','line_number':86,'multiline':False]['text':' namespace log_detail','line_number':95,'multiline':False]['text':'*
 * Builds "DebugInfo" for storing in the classic plan cache.
 ','line_number':97,'multiline':True]['text':'*
 * Builds "DebugInfoSBE" for storing in the SBE plan cache. Pre-computes necessary debugging
 * information to build "PlanExplainerSBE" when recoverying the cached SBE plan from the cache.
 ','line_number':103,'multiline':True]['text':'*
 * Caches the best candidate execution plan for 'query', chosen from the given 'candidates' based on
 * the 'ranking' decision, if the 'query' is of a type that can be cached. Otherwise, does nothing.
 *
 * The 'cachingMode' specifies whether the query should be:
 *    * Always cached.
 *    * Never cached.
 *    * Cached, except in certain special cases.
 *
 * This method is shared between Classic and SBE. The plan roots 'candidates[i].root' have different
 * types between the two:
 *    * Classic - mongo::PlanStage*
 *    * SBE     - std::unique_ptr<sbe::PlanStage>>
 * This breaks polymorphism because native pointers and std::unique_ptr must be handled differently.
 * std::is_same_v is used to distinguish in these cases.
 ','line_number':109,'multiline':True]['text':' Even if the query is of a cacheable shape, the caller might have indicated that we shouldn't','line_number':137,'multiline':False]['text':' write to the plan cache.','line_number':138,'multiline':False]['text':'','line_number':139,'multiline':False]['text':' TODO: We can remove this if we introduce replanning logic to the SubplanStage.','line_number':140,'multiline':False]['text':' In "sometimes cache" mode, we cache unless we hit one of the special cases below.','line_number':143,'multiline':False]['text':' The winning plan tied with the runner-up and we're using "sometimes cache" mode. We','line_number':147,'multiline':False]['text':' will not write a plan cache entry.','line_number':148,'multiline':False]['text':' These arrays having two or more entries is implied by 'tieForBest'.','line_number':151,'multiline':False]['text':' We're using the "sometimes cache" mode, and the winning plan produced no results','line_number':182,'multiline':False]['text':' during the plan ranking trial period. We will not write a plan cache entry.','line_number':183,'multiline':False]['text':' Store the choice we just made in the cache, if the query is of a type that is safe to','line_number':201,'multiline':False]['text':' cache.','line_number':202,'multiline':False]['text':' Clone the winning SBE plan and its auxiliary data.','line_number':215,'multiline':False]['text':' worksGrowthCoefficient ','line_number':238,'multiline':True]['text':' worksGrowthCoefficient ','line_number':261,'multiline':True]['text':'*
 * Caches the plan 'root' along with its accompanying 'data' if the 'query' is of a type that can be
 * cached. Otherwise, does nothing.
 *
 * The given plan will be "pinned" to the cache and will not be subject to replanning. Once put into
 * the cache, the plan immediately becomes "active".
 ','line_number':269,'multiline':True]['text':' namespace plan_cache_util','line_number':282,'multiline':False]['text':' namespace mongo','line_number':283,'multiline':False]