['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This class ensures that the specification was valid: that none of the paths specified conflict
 * with one another, that there is at least one field, etc. Here "projection" includes $addFields
 * specifications.
 ','line_number':48,'multiline':True]['text':'*
     * Throws if the specification is not valid for a projection. Because this validator is meant to
     * be generic, the error thrown is generic.  Callers at the DocumentSource level should modify
     * the error message if they want to include information specific to the stage name used.
     ','line_number':55,'multiline':True]['text':'*
     * Uses '_seenPaths' to see if 'path' conflicts with any paths that have already been specified.
     *
     * For example, a user is not allowed to specify {'a': 1, 'a.b': 1}, or some similar conflicting
     * paths.
     ','line_number':65,'multiline':True]['text':'*
     * Throws if an invalid projection specification is detected.
     ','line_number':73,'multiline':True]['text':'*
     * Parses a single BSONElement. 'pathToElem' should include the field name of 'elem'.
     *
     * Delegates to parseSubObject() if 'elem' is an object. Otherwise adds the full path to 'elem'
     * to '_seenPaths'.
     *
     * Calls ensurePathDoesNotConflictOrThrow with the path to this element, throws on conflicting
     * path specifications.
     ','line_number':78,'multiline':True]['text':'*
     * Traverses 'thisLevelSpec', parsing each element in turn.
     *
     * Throws if any paths conflict with each other or existing paths, 'thisLevelSpec' contains a
     * dotted path, or if 'thisLevelSpec' represents an invalid expression.
     ','line_number':89,'multiline':True]['text':' The original object. Used to generate more helpful error messages.','line_number':97,'multiline':False]['text':' Tracks which paths we've seen to ensure no two paths conflict with each other.','line_number':100,'multiline':False]['text':' Check whether the path was a duplicate of an existing path.','line_number':112,'multiline':False]['text':' Check whether the preceding path prefixes this path.','line_number':115,'multiline':False]['text':' Check whether this path prefixes the subsequent path.','line_number':121,'multiline':False]['text':' This object is an expression specification like {$add: [...]}. It will be parsed','line_number':153,'multiline':False]['text':' into an Expression later, but for now, just track that the prefix has been','line_number':154,'multiline':False]['text':' specified and skip it.','line_number':155,'multiline':False]['text':' namespace','line_number':175,'multiline':False]['text':' Verify that we don't have conflicting field paths, etc.','line_number':179,'multiline':False]['text':' Actually parse the specification.','line_number':183,'multiline':False]['text':' This helper is only meant for creating top-level fields. Dotted field paths require','line_number':193,'multiline':False]['text':' thinking about implicit array traversal.','line_number':194,'multiline':False]['text':' The field name might be a dotted path.','line_number':206,'multiline':False]['text':' This is either an expression, or a nested specification.','line_number':210,'multiline':False]['text':' It was an expression.','line_number':212,'multiline':False]['text':' This is a literal or regular value.','line_number':217,'multiline':False]['text':' The output doc is the same as the input doc, with the added fields.','line_number':226,'multiline':False]['text':' Pass through the metadata.','line_number':230,'multiline':False]['text':' This is an expression like {$add: [...]}. We already verified that it has only one field.','line_number':240,'multiline':False]['text':' Dotted paths in a sub-object have already been detected and disallowed by the function','line_number':261,'multiline':False]['text':' ProjectionSpecValidator::validate().','line_number':262,'multiline':False]['text':' This is either an expression, or a nested specification.','line_number':269,'multiline':False]['text':' It was a nested subobject','line_number':271,'multiline':False]['text':' This is a literal or regular value.','line_number':275,'multiline':False]['text':' namespace mongo::projection_executor','line_number':286,'multiline':False]