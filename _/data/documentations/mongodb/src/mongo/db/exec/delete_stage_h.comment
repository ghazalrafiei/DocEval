['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Should we delete all documents returned from the child (a "multi delete"), or at most one','line_number':69,'multiline':False]['text':' (a "single delete")?','line_number':70,'multiline':False]['text':' Is this delete part of a migrate operation that is essentially like a no-op','line_number':73,'multiline':False]['text':' when the cluster is observed by an external client.','line_number':74,'multiline':False]['text':' Are we explaining a delete command rather than actually executing it?','line_number':77,'multiline':False]['text':' Should we return the document we just deleted?','line_number':80,'multiline':False]['text':' The stmtId for this particular delete.','line_number':83,'multiline':False]['text':' The parsed query predicate for this delete. Not owned here.','line_number':86,'multiline':False]['text':' The user-requested sort specification. Currently used just for findAndModify.','line_number':89,'multiline':False]['text':' Optional. When not null, delete metrics are recorded here.','line_number':92,'multiline':False]['text':' Determines how the delete stats should be incremented. Will be incremented by 1 if the','line_number':95,'multiline':False]['text':' function is empty.','line_number':96,'multiline':False]['text':'*
 * This stage delete documents by RecordId that are returned from its child. If the deleted
 * document was requested to be returned, then ADVANCED is returned after deleting a document.
 * Otherwise, NEED_TIME is returned after deleting a document.
 *
 * Callers of work() must be holding a write lock (and, for replicated deletes, callers must have
 * had the replication coordinator approve the write).
 ','line_number':100,'multiline':True]['text':' Not owned by us.','line_number':148,'multiline':False]['text':' Stats','line_number':151,'multiline':False]['text':'*
     * This member is used to check whether the write should be performed, and if so, any other
     * behavior that should be done as part of the write (e.g. skipping it because it affects an
     * orphan document). A yield cannot happen between the check and the write, so the checks are
     * embedded in the stage.
     *
     * It's refreshed after yielding and reacquiring the locks.
     ','line_number':154,'multiline':True]['text':'*
     * Stores 'idToRetry' in '_idRetrying' so the delete can be retried during the next call to
     * work(). Sets 'out' to WorkingSet::INVALID_ID.
     ','line_number':165,'multiline':True]['text':' If not WorkingSet::INVALID_ID, we use this rather than asking our child what to do next.','line_number':171,'multiline':False]['text':' If not WorkingSet::INVALID_ID, we return this member to our caller.','line_number':174,'multiline':False]['text':' namespace mongo','line_number':178,'multiline':False]