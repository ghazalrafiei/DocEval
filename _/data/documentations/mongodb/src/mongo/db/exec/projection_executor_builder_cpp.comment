['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Holds data used to built a projection executor while walking an AST tree. This struct is attached
 * to 'PathTrackingVisitorContext' and can be accessed by projection AST visitors to track the
 * current context.
 ','line_number':59,'multiline':True]['text':' A projection executor returned upon completion of AST traversal.','line_number':66,'multiline':False]['text':' A root replacement expression to be attached to the projection executor, if any. If there','line_number':69,'multiline':False]['text':' are multiple root replacement expressions in the AST, they will be chained together, so that','line_number':70,'multiline':False]['text':' one expression becomes an input to another.','line_number':71,'multiline':False]['text':'*
 * Creates a find()-style positional expression from the given AST 'node' to be applied to the
 * 'path' on the input document. If the visitor 'data' already contains a root replacement
 * expression, it will be used as an input operand to the new root replacement expression, otherwise
 * a field path expressions will be created to access a projection post-image document.
 ','line_number':103,'multiline':True]['text':'*
 * Creates a find()-style $slice expression from the given AST 'node' to be applied to the
 * 'path' on the input document. If the visitor 'data' already contains a root replacement
 * expression, it will be used as an input operand to the new root replacement expression, otherwise
 * a field path expressions will be created to access a projection post-image document.
 ','line_number':131,'multiline':True]['text':'*
 * Creates a find()-style $elemMatch expression from the given AST 'node' to be applied at the
 * 'path' on the input document.
 ','line_number':150,'multiline':True]['text':'*
 * A projection AST visitor which creates inclusion or exclusion nodes in the projection execution
 * tree by calling corresponding 'addProjectionForPath()' or 'addExpressionForPath()' on the root
 * node of the tree while traversing the AST. If the AST contains root-replacement expressions, they
 * will be attached to the projection executor.
 *
 * To track the current path in the projection, this visitor should be used with
 * 'PathTrackingWalker' which will help to maintain the current path via
 * 'PathTrackingVisitorContext'.
 ','line_number':176,'multiline':True]['text':' A $slice expression can be applied to an exclusion projection. In this case we don't need','line_number':211,'multiline':False]['text':' to project out the path to which $slice is applied, since it will already be included','line_number':212,'multiline':False]['text':' into the output document.','line_number':213,'multiline':False]['text':' In an inclusion projection only the _id field can be excluded from the result document.','line_number':240,'multiline':False]['text':' If this is the case, then we don't need to include the field into the projection.','line_number':241,'multiline':False]['text':' In inclusion projection only _id field can be excluded, make sure this is the case.','line_number':247,'multiline':False]['text':'*
 * A helper function which creates a 'ProjectionExecutorWalker' to walk a projection AST,
 * starting at the node 'root', and build a projection executor of the specified type
 * 'Executor'.
 ','line_number':264,'multiline':True]['text':' namespace','line_number':284,'multiline':False]['text':' namespace mongo::projection_executor','line_number':312,'multiline':False]