['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Constants that (conservatively) estimate the size of the oplog entry that would result from
 * committing a batch, so as to ensure that a batch fits within a 16MB oplog entry. These constants
 * translate to a maximum of ~63k documents deleted per batch on non-clustered collections.
 ','line_number':85,'multiline':True]['text':' Size of an array member of an applyOps entry, excluding the RecordId. Accounts for the maximum','line_number':90,'multiline':False]['text':' size of the internal fields.','line_number':91,'multiline':False]['text':' Size of an applyOps entry, excluding its array.','line_number':93,'multiline':False]['text':' namespace','line_number':105,'multiline':False]['text':'*
 * Reports globally-aggregated batch stats.
 ','line_number':107,'multiline':True]['text':' Wrapper for write_stage_common::ensureStillMatches() which also updates the 'refetchesDueToYield'','line_number':140,'multiline':False]['text':' serverStatus metric. As with ensureStillMatches, if false is returned, the WoringSetMember','line_number':141,'multiline':False]['text':' referenced by 'id' is no longer valid, and must not be used except for freeing the WSM.','line_number':142,'multiline':False]['text':' It's okay to stage more documents.','line_number':219,'multiline':False]['text':' Overwriting 'planStageState' potentially means throwing away the result produced from','line_number':227,'multiline':False]['text':' staging. We expect to commit deletes after a new documet is staged and the batch targets','line_number':228,'multiline':False]['text':' are met (planStageState = PlanStage::NEED_TIME), after there are no more documents to','line_number':229,'multiline':False]['text':' stage (planStageState = PlanStage::IS_EOF), or when resuming to commit deletes in the','line_number':230,'multiline':False]['text':' buffer before more can be staged (planStageState = PlanStage::NEED_TIME by default).','line_number':231,'multiline':False]['text':'','line_number':232,'multiline':False]['text':' Enforce that if staging occurred, the resulting 'planStageState' is only overwritten when','line_number':233,'multiline':False]['text':' we should be committing deletes.','line_number':234,'multiline':False]['text':' Staging hasn't yielded PlanStage::IS_EOF.','line_number':245,'multiline':False]['text':'','line_number':246,'multiline':False]['text':' Indicate whether the operation should reach completion due to a pass target.','line_number':247,'multiline':False]['text':' yieldHandler','line_number':280,'multiline':False]['text':' yieldHandler','line_number':303,'multiline':False]['text':' If the placement version is IGNORED and we encountered a critical section, then','line_number':313,'multiline':False]['text':' yield, wait for critical section to finish and then we'll resume the write from the','line_number':314,'multiline':False]['text':' point we had left. We do this to prevent large multi-writes from repeatedly failing','line_number':315,'multiline':False]['text':' due to StaleConfig and exhausting the mongos retry attempts.','line_number':316,'multiline':False]['text':' targetBatchTimeMS was met. Remove staged deletes that have been evaluated','line_number':331,'multiline':False]['text':' (executed or skipped because they no longer match the query) from the buffer. If any','line_number':332,'multiline':False]['text':' staged deletes remain in the buffer, they will be retried in a subsequent batch.','line_number':333,'multiline':False]['text':' The individual deletes staged in the buffer are preserved until the batch is committed so','line_number':336,'multiline':False]['text':' they can be retried in case of a write conflict.','line_number':337,'multiline':False]['text':' No write conflict occurred, all staged deletes were successfully evaluated/executed, it','line_number':338,'multiline':False]['text':' is safe to clear the buffer.','line_number':339,'multiline':False]['text':' Estimate the size of the oplog entry that would result from committing the batch,','line_number':351,'multiline':False]['text':' to ensure we emit an oplog entry that's within the 16MB BSON limit.','line_number':352,'multiline':False]['text':' Start a WUOW with 'groupOplogEntries' which groups a delete batch into a single timestamp','line_number':357,'multiline':False]['text':' and oplog entry.','line_number':358,'multiline':False]['text':' groupOplogEntries ','line_number':360,'multiline':True]['text':' The PlanExecutor YieldPolicy may change snapshots between calls to 'doWork()'.','line_number':373,'multiline':False]['text':' Different documents may have different snapshots.','line_number':374,'multiline':False]['text':' Warning: if docStillMatches is false, the WSM's underlying Document/BSONObj is no','line_number':378,'multiline':False]['text':' longer valid.','line_number':379,'multiline':False]['text':' Determine whether the document being deleted is owned by this shard, and the action','line_number':384,'multiline':False]['text':' to undertake if it isn't.','line_number':385,'multiline':False]['text':' Skip the document, as it either no longer exists, or has been filtered by the','line_number':390,'multiline':False]['text':' PreWriteFilter.','line_number':391,'multiline':False]['text':' There's no room to fit this deletion in the current batch, as doing so','line_number':407,'multiline':False]['text':' would exceed 16MB of oplog entry: put this deletion back into the staging','line_number':408,'multiline':False]['text':' buffer and commit the batch.','line_number':409,'multiline':False]['text':' hangAfterApproxNDocs is roughly estimated as the number of deletes','line_number':440,'multiline':False]['text':' committed + the number of documents deleted in the current unit of work.','line_number':441,'multiline':False]['text':' Assume nDocs is positive.','line_number':443,'multiline':False]['text':' Met 'targetBatchTimeMS' after evaluating the staged delete at '*bufferOffset'.','line_number':454,'multiline':False]['text':' Deletes can't have projections. This means that covering analysis will always add','line_number':482,'multiline':False]['text':' a fetch. We should always get fetched data, and never just key data.','line_number':483,'multiline':False]['text':' Populate 'nWouldDelete' for 'executionStats'.','line_number':487,'multiline':False]['text':' Preserve the member until the delete is committed. Once a delete is staged in the','line_number':492,'multiline':False]['text':' buffer, its resources are freed when it is removed from the buffer.','line_number':493,'multiline':False]['text':' Ensure that the BSONObj underlying the WSM associated with 'id' is owned because','line_number':496,'multiline':False]['text':' saveState() is allowed to free the memory the BSONObj points to. The BSONObj will be','line_number':497,'multiline':False]['text':' needed later when it is passed to Collection::deleteDocument(). Note that the call to','line_number':498,'multiline':False]['text':' makeObjOwnedIfNeeded() will leave the WSM in the RID_AND_OBJ state in case we need to','line_number':499,'multiline':False]['text':' retry deleting it.','line_number':500,'multiline':False]['text':' yieldHandler','line_number':519,'multiline':False]['text':' namespace mongo','line_number':546,'multiline':False]