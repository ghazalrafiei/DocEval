['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Use the DocumentStorage that already exists on the WorkingSetMember's document','line_number':65,'multiline':False]['text':' field if possible.','line_number':66,'multiline':False]['text':'*
 * Moves document metadata fields from the WSM into the given document 'doc', and returns the same
 * document but with populated metadata.
 ','line_number':72,'multiline':True]['text':'*
 * Moves document metadata fields from the document 'doc' into the WSM, and returns the same
 * document but without metadata.
 ','line_number':82,'multiline':True]['text':'*
 * Given an index key 'dehyratedKey' with no field names, returns a new Document representing the
 * index key after adding field names according to 'keyPattern'.
 *
 * For example, given:
 *    - the 'keyPatern' of {'a.b': 1, c: 1}
 *    - the 'dehydratedKey' of {'': 'abc', '': 10}
 *
 * The resulting document will be: {a: {b: 'abc'}, c: 10}
 ','line_number':92,'multiline':True]['text':' Skip the $** index virtual field, as it's not part of the actual index key.','line_number':111,'multiline':False]['text':' namespace','line_number':125,'multiline':False]['text':' Note that we don't do the normal if isEOF() return EOF thing here.  Our child might be a','line_number':144,'multiline':False]['text':' tailable cursor and isEOF() would be true even if it had more data...','line_number':145,'multiline':False]['text':' Punt to our specific projection impl.','line_number':148,'multiline':False]['text':' Most metadata should have already been stored within the WSM when we project out a document.','line_number':184,'multiline':False]['text':' The recordId metadata is different though, because it's a fundamental part of the WSM and','line_number':185,'multiline':False]['text':' we store it within the WSM itself rather than WSM metadata, so we need to transfer it into','line_number':186,'multiline':False]['text':' the metadata object if the projection has a recordId $meta expression.','line_number':187,'multiline':False]['text':' We have a covered projection, which is only supported in inclusion mode.','line_number':196,'multiline':False]['text':' We're pulling data from an index key, so there must be exactly one key entry in the WSM','line_number':200,'multiline':False]['text':' as the planner guarantees that it will never generate a covered plan in the case of index','line_number':201,'multiline':False]['text':' intersection.','line_number':202,'multiline':False]['text':' For covered projection we will rehydrate in index key into a Document and then pass it','line_number':207,'multiline':False]['text':' through the projection executor to include only required fields, including metadata','line_number':208,'multiline':False]['text':' fields.','line_number':209,'multiline':False]['text':' If the projection doesn't need any metadata, then we'll just apply the projection to the','line_number':213,'multiline':False]['text':' input document. Otherwise, before applying the projection, we will move document metadata','line_number':214,'multiline':False]['text':' from the WSM into the document itself, and will move it back to the WSM once the projection','line_number':215,'multiline':False]['text':' has been applied.','line_number':216,'multiline':False]['text':' An exclusion projection can return an unowned object since the output document is','line_number':223,'multiline':False]['text':' constructed from the input one backed by BSON which is owned by the storage system, so we','line_number':224,'multiline':False]['text':' need to  make sure we transition an owned document.','line_number':225,'multiline':False]['text':' If we're pulling data out of one index we can pre-compute the indices of the fields','line_number':241,'multiline':False]['text':' in the key that we pull data from and avoid looking up the field name each time.','line_number':242,'multiline':False]['text':' Sanity-check.','line_number':244,'multiline':False]['text':' Push an unused value on the back to keep _includeKey and _keyFieldNames','line_number':254,'multiline':False]['text':' in sync.','line_number':255,'multiline':False]['text':' If we are including this key field store its field name.','line_number':259,'multiline':False]['text':' We're pulling data out of the key.','line_number':269,'multiline':False]['text':' Look at every key element...','line_number':274,'multiline':False]['text':' If we're supposed to include it...','line_number':278,'multiline':False]['text':' Do so.','line_number':280,'multiline':False]['text':' SIMPLE_DOC implies that we expect an object so it's kind of redundant.','line_number':307,'multiline':False]['text':' If we got here because of SIMPLE_DOC the planner shouldn't have messed up.','line_number':308,'multiline':False]['text':' Apply the SIMPLE_DOC projection: look at every top level field in the source document and','line_number':311,'multiline':False]['text':' see if we should keep it.','line_number':312,'multiline':False]['text':' namespace mongo','line_number':340,'multiline':False]