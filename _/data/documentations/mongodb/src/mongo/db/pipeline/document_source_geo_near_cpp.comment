['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Serialize the expression as a literal if possible','line_number':93,'multiline':False]['text':' Currently this is the only rewrite.','line_number':144,'multiline':False]['text':' Only do this rewrite if we are immediately following an $_internalUnpackBucket stage.','line_number':154,'multiline':False]['text':' If _nearGeometry is not a constant, do nothing.','line_number':159,'multiline':False]['text':' It might be constant in a future call to optimizeAt(), once any variables have been filled','line_number':160,'multiline':False]['text':' in.','line_number':161,'multiline':False]['text':' If the user didn't specify a field name to query, do nothing.','line_number':182,'multiline':False]['text':' Normally when we use a DocumentSourceGeoNearCursor we infer this from the presence of an','line_number':183,'multiline':False]['text':' index, but when we use an explicit $sort there might not be an index involved.','line_number':184,'multiline':False]['text':' In this case, we know:','line_number':190,'multiline':False]['text':' - there are stages before us','line_number':191,'multiline':False]['text':' - the query point is a known constant','line_number':192,'multiline':False]['text':' - the field name','line_number':193,'multiline':False]['text':' It's fine for this error message to say "on a time-series collection" because we only get','line_number':195,'multiline':False]['text':' here when an $_internalUnpackBucket stage precedes us.','line_number':196,'multiline':False]['text':' Replace the stage with $geoWithin, $computeGeoDistance, $sort.','line_number':203,'multiline':False]['text':' Use GeoNearExpression to parse the arguments. This makes it easier to handle a variety of','line_number':205,'multiline':False]['text':' cases: for example, if the query point is GeoJSON, then 'spherical' is implicitly true.','line_number':206,'multiline':False]['text':' asNearQuery() is something like '{fieldName: {$near: ...}}'.','line_number':208,'multiline':False]['text':' GeoNearExpression seems to want something like '{$near: ...}'.','line_number':209,'multiline':False]['text':' 1. $geoWithin maxDistance','line_number':220,'multiline':False]['text':'    We always include a $geoWithin predicate, even if maxDistance covers the entire space,','line_number':221,'multiline':False]['text':'    because it takes care of excluding documents that don't have the geo field we're querying.','line_number':222,'multiline':False]['text':' {$match: {field: {$geoWithin: {$centerSphere: [[x, y], radiusRadians]}}}}','line_number':224,'multiline':False]['text':' In this mode, $geoNear interprets the given maxDistance as radians.','line_number':229,'multiline':False]['text':' Otherwise it interprets maxDistance as meters.','line_number':232,'multiline':False]['text':' Also include an inside-out $geoWithin. This query is imprecise due to rounding error,','line_number':245,'multiline':False]['text':' so we will include an additional, precise filter later in the pipeline.','line_number':246,'multiline':False]['text':' {$match: {field: {$geoWithin: {$center: [[x, y], radius]}}}}','line_number':260,'multiline':False]['text':' $geoWithin includes its boundary, so a negated $geoWithin excludes the boundary.','line_number':273,'multiline':False]['text':' So we need to tweak the radius here to include those points on the boundary.','line_number':274,'multiline':False]['text':' This means this filter is approximate, so we'll include an additional filter for','line_number':275,'multiline':False]['text':' minDistance after unpacking.','line_number':276,'multiline':False]['text':' Making the radius 1% smaller seems like a big enough tweak that we won't miss any','line_number':278,'multiline':False]['text':' boundary points, and a small enough tweak to still be selective. It also preserves','line_number':279,'multiline':False]['text':' the sign of minDistance (whereas subtracting an epsilon wouldn't, necessarily).','line_number':280,'multiline':False]['text':' Only do this when isnormal(minDistance), to ensure we have enough bits of precision.','line_number':281,'multiline':False]['text':' 2. Compute geo distance.','line_number':293,'multiline':False]['text':' In this mode, $geoNear would report distances in radians instead of meters.','line_number':297,'multiline':False]['text':' To imitate this behavior, we need to scale down here too.','line_number':298,'multiline':False]['text':' 3. Filter precisely by minDistance / maxDistance.','line_number':325,'multiline':False]['text':' 'minDistance' does not take 'distanceMultiplier' into account.','line_number':327,'multiline':False]['text':' 'maxDistance' does not take 'distanceMultiplier' into account.','line_number':335,'multiline':False]['text':' 4. $sort by geo distance.','line_number':343,'multiline':False]['text':' {$sort: {dist: 1}}','line_number':345,'multiline':False]['text':' First, check for explicitly-disallowed fields.','line_number':386,'multiline':False]['text':' The old geoNear command used to accept a collation. We explicitly ban it here, since the','line_number':388,'multiline':False]['text':' $geoNear stage should respect the collation associated with the entire pipeline.','line_number':389,'multiline':False]['text':' The following fields were present in older versions but are no longer supported.','line_number':395,'multiline':False]['text':' The "near" and "distanceField" parameters are required.','line_number':404,'multiline':False]['text':' go through all the fields','line_number':408,'multiline':False]['text':' TODO (SERVER-35424): Implement better dependency tracking. For example, 'distanceField' is','line_number':528,'multiline':False]['text':' produced by this stage, and we could inform the query system that it need not include it in','line_number':529,'multiline':False]['text':' its response. For now, assume that we require the entire document as well as the appropriate','line_number':530,'multiline':False]['text':' geoNear metadata.','line_number':531,'multiline':False]['text':' {shardsStage, mergingStage, sortPattern}','line_number':552,'multiline':False]['text':' namespace mongo','line_number':556,'multiline':False]