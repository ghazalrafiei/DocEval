['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Handle empty field paths separately.','line_number':80,'multiline':False]['text':' A single empty field path will parse to a FieldRef with 0 parts but should','line_number':86,'multiline':False]['text':' logically be considered a single part with an empty string.','line_number':87,'multiline':False]['text':' For field paths with empty elements such as 'x.', we should traverse the','line_number':89,'multiline':False]['text':' array 'x' but not reach into any sub-objects. So a predicate such as {'x.':','line_number':90,'multiline':False]['text':' {$eq: 5}} should match {x: [5]} and {x: {"": 5}} but not {x: [{"": 5}]}.','line_number':91,'multiline':False]['text':' This function generates an ABT representing a path from a string. This works by searching','line_number':108,'multiline':False]['text':' backwards in the string and using each component (delimited by '.') to build up an ABT.','line_number':109,'multiline':False]['text':' For example, 'a.b.c' results in PathGet[a] PathGet[b] PathGet[c].','line_number':110,'multiline':False]['text':' Keep track of the search space in the string.','line_number':113,'multiline':False]['text':' Get the index of the start of the next component in the path. This may return npos which','line_number':116,'multiline':False]['text':' is an alias for -1.','line_number':117,'multiline':False]['text':' Add path component into ABT.','line_number':119,'multiline':False]['text':' Update search space for the next component.','line_number':122,'multiline':False]['text':'isMin','line_number':268,'multiline':True]['text':'isMin','line_number':271,'multiline':True]['text':'n','line_number':278,'multiline':True]['text':'node','line_number':278,'multiline':True]['text':'n','line_number':282,'multiline':True]['text':'node','line_number':282,'multiline':True]['text':'n','line_number':287,'multiline':True]['text':'node','line_number':287,'multiline':True]['text':' namespace mongo::optimizer','line_number':300,'multiline':False]