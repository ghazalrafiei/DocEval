['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':35,'multiline':False]['text':'*
 * An internal expression to apply a find positional projection to the projection post image
 * document. This expression is never parsed or serialized.
 *
 * See projection_executor::applyPositionalProjection() for more details.
 ','line_number':56,'multiline':True]['text':' The positional projection can change any field within the path it's applied to, so we'll','line_number':104,'multiline':False]['text':' treat the first component in '_positionalInfo.path' as the computed path.','line_number':105,'multiline':False]['text':' SERVER-43740: ideally we'd want to optimize '_matchExpr' here as well. However, given','line_number':113,'multiline':False]['text':' that the match expression is stored as a shared copyable expression in this class, and','line_number':114,'multiline':False]['text':' 'MatchExpression::optimize()' takes and returns a unique pointer on a match expression,','line_number':115,'multiline':False]['text':' there is no easy way to replace a copyable match expression with its optimized','line_number':116,'multiline':False]['text':' equivalent. So, for now we will assume that the copyable match expression is passed to','line_number':117,'multiline':False]['text':' this expression already optimized. Once we have MatchExpression and Expression combined,','line_number':118,'multiline':False]['text':' we should revisit this code and make sure that 'optimized()' method is called on','line_number':119,'multiline':False]['text':' _matchExpr.','line_number':120,'multiline':False]['text':'*
 * An internal expression to apply a find $slice projection to the projection post image document.
 * This expression is never parsed or serialized.
 *
 * See projection_executor::applySliceProjection() for more details.
 ','line_number':133,'multiline':True]['text':' The $slice projection can change any field within the path it's applied to, so we'll','line_number':174,'multiline':False]['text':' treat the first component in '_sliceInfo.path' as the computed path.','line_number':175,'multiline':False]['text':'*
 * An internal expression to apply a find $elemMatch projection to the document root.
 * See projection_executor::applyElemMatchProjection() for details.
 ','line_number':195,'multiline':True]['text':' SERVER-43740: ideally we'd want to optimize '_matchExpr' here as well. However, given','line_number':232,'multiline':False]['text':' that the match expression is stored as a shared copyable expression in this class, and','line_number':233,'multiline':False]['text':' 'MatchExpression::optimize()' takes and returns a unique pointer on a match expression,','line_number':234,'multiline':False]['text':' there is no easy way to replace a copyable match expression with its optimized','line_number':235,'multiline':False]['text':' equivalent. So, for now we will assume that the copyable match expression is passed to','line_number':236,'multiline':False]['text':' this expression already optimized. Once we have MatchExpression and Expression combined,','line_number':237,'multiline':False]['text':' we should revisit this code and make sure that 'optimized()' method is called on','line_number':238,'multiline':False]['text':' _matchExpr.','line_number':239,'multiline':False]['text':' namespace mongo','line_number':251,'multiline':False]