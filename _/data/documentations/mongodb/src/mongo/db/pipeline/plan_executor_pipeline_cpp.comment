['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Pipeline plan executors must always have an ExpressionContext.','line_number':68,'multiline':False]['text':' The caller is responsible for disposing this plan executor before deleting it, which will in','line_number':71,'multiline':False]['text':' turn dispose the underlying pipeline. Therefore, there is no need to dispose the pipeline','line_number':72,'multiline':False]['text':' again when it is destroyed.','line_number':73,'multiline':False]['text':' For a resumable scan, set the initial _latestOplogTimestamp and _postBatchResumeToken.','line_number':77,'multiline':False]['text':' The pipeline-based execution engine does not track the record ids associated with documents,','line_number':83,'multiline':False]['text':' so it is an error for the caller to ask for one. For the same reason, we expect the caller to','line_number':84,'multiline':False]['text':' provide a non-null BSONObj pointer for 'objOut'.','line_number':85,'multiline':False]['text':' The pipeline-based execution engine does not track the record ids associated with documents,','line_number':106,'multiline':False]['text':' so it is an error for the caller to ask for one. For the same reason, we expect the caller to','line_number':107,'multiline':False]['text':' provide a non-null pointer for 'docOut'.','line_number':108,'multiline':False]['text':' Callers which use 'stashResult()' are not allowed to use 'getNextDocument()', and must','line_number':112,'multiline':False]['text':' instead use 'getNext()'.','line_number':113,'multiline':False]['text':' This exception contains the next document to be returned by the pipeline.','line_number':148,'multiline':False]['text':' This exception contains an event that captures the client-provided resume token.','line_number':153,'multiline':False]['text':' Include metadata if the output will be consumed by a merging node.','line_number':160,'multiline':False]['text':' If in a change stream pipeline, increment change stream large event failed error','line_number':164,'multiline':False]['text':' count metric.','line_number':165,'multiline':False]['text':' While we have more results to return, we track both the timestamp and the resume token of','line_number':195,'multiline':False]['text':' the latest event observed in the oplog, the latter via its sort key metadata field.','line_number':196,'multiline':False]['text':' We ran out of results to return. Check whether the oplog cursor has moved forward since','line_number':202,'multiline':False]['text':' the last recorded timestamp. Because we advance _latestOplogTimestamp for every event we','line_number':203,'multiline':False]['text':' return, if the new time is higher than the last then we are guaranteed not to have','line_number':204,'multiline':False]['text':' already returned any events at this timestamp. We can set _postBatchResumeToken to a new','line_number':205,'multiline':False]['text':' high-water-mark token at the current clusterTime.','line_number':206,'multiline':False]['text':' Confirm that the document _id field matches the original resume token in the sort key field.','line_number':219,'multiline':False]['text':' Update values of latest oplog timestamp and postBatchResumeToken.','line_number':240,'multiline':False]['text':' Update value of postBatchResumeToken.','line_number':251,'multiline':False]['text':' Set _postBatchResumeToken to the initial PBRT that was added to the expression','line_number':266,'multiline':False]['text':' context during pipeline construction, and use it to obtain the starting time for','line_number':267,'multiline':False]['text':' _latestOplogTimestamp.','line_number':268,'multiline':False]['text':' Initialize the oplog timestamp and postBatchResumeToken here in case the request has','line_number':276,'multiline':False]['text':' batchSize 0, in which case the PBRT of the first batch would be empty.','line_number':277,'multiline':False]['text':' If killed multiple times, only retain the first status.','line_number':290,'multiline':False]['text':' If this executor has a $cursor source at the front, use the query framework of that executor','line_number':297,'multiline':False]['text':' backing the cursor stage in order to determine whether the current pipeline is a hybrid plan.','line_number':298,'multiline':False]['text':' If this executor doesn't have a $cursor source, then return classicOnly as it cannot be a','line_number':309,'multiline':False]['text':' hybrid plan.','line_number':310,'multiline':False]['text':' namespace mongo','line_number':314,'multiline':False]