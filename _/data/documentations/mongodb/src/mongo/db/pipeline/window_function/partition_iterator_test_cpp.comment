['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' default memory limit ','line_number':94,'multiline':True]['text':' Mock a second consumer that only needs document 0.','line_number':117,'multiline':False]['text':' First advance to the final document in partition with key "1".','line_number':173,'multiline':False]['text':' Next advance triggers a new partition.','line_number':175,'multiline':False]['text':' Any access is disallowed.','line_number':193,'multiline':False]['text':' All documents are in the same partition.','line_number':223,'multiline':False]['text':' First partition of {a: null}.','line_number':243,'multiline':False]['text':' Second partition of {a: null, b: null}.','line_number':249,'multiline':False]['text':' Last partition of {b: null}.','line_number':256,'multiline':False]['text':' Test that an accessor that attempts to read off the end of the partition returns boost::none','line_number':312,'multiline':False]['text':' instead of tassert'ing.','line_number':313,'multiline':False]['text':' Access the first document, which marks it as expired.','line_number':323,'multiline':False]['text':' Advance the iterator which frees the first expired document.','line_number':325,'multiline':False]['text':' Attempting to access the first doc results in a tripwire assertion.','line_number':327,'multiline':False]['text':' The lagging accessor is referencing 1 doc behind current, and leading is 1 doc ahead.','line_number':338,'multiline':False]['text':' At this point, no documents are expired.','line_number':343,'multiline':False]['text':' The leading accessor has fallen off the right side of the partition.','line_number':349,'multiline':False]['text':' The first document should now be expired.','line_number':352,'multiline':False]['text':' Mock a window with documents [1, 2].','line_number':362,'multiline':False]['text':' Retrieving the endpoints triggers the expiration, with the assumption that all documents','line_number':366,'multiline':False]['text':' below the lower bound are not needed.','line_number':367,'multiline':False]['text':' Advance the iterator which frees the first expired document.','line_number':369,'multiline':False]['text':' Advancing again does not trigger any expiration since there has not been a subsequent call to','line_number':372,'multiline':False]['text':' getEndpoints().','line_number':373,'multiline':False]['text':' Now the second document, currently at index 0 in the cache, will be released.','line_number':378,'multiline':False]['text':' Create two endpoint accessors, one at [-1, 0] and another at [0, 1]. Since the first one may','line_number':389,'multiline':False]['text':' access the document at (current - 1), the only expiration that can happen on advance() would','line_number':390,'multiline':False]['text':' be (newCurrent - 2).','line_number':391,'multiline':False]['text':' Advance the iterator which does not free any documents.','line_number':407,'multiline':False]['text':' Advance again, the current document is now {a: 3}.','line_number':417,'multiline':False]['text':' Since both accessors are done with document 0, the next advance will free it but keep around','line_number':426,'multiline':False]['text':' the other docs.','line_number':427,'multiline':False]['text':' Use a window of 'documents: [-2, -1]'.','line_number':442,'multiline':False]['text':' Advance until {a: 3} is the current document.','line_number':447,'multiline':False]['text':' Retrieving the endpoints triggers the expiration: everything below the right endpoint','line_number':452,'multiline':False]['text':' is marked as no longer needed.','line_number':453,'multiline':False]['text':' The endpoints are {a: 1} and {a: 2}. So we will expect {a: 1} to be released.','line_number':455,'multiline':False]['text':' The no-longer-needed documents are released on the next advance().','line_number':460,'multiline':False]['text':' The current document is now {a: 4}, and {a: 1} has been released.','line_number':463,'multiline':False]['text':' Mock a window with documents [1, 2].','line_number':476,'multiline':False]['text':' Before advancing, ensure that both accessors expire the first document.','line_number':481,'multiline':False]['text':' Advance the iterator which frees the first expired document.','line_number':487,'multiline':False]['text':' Advance again to get the iterator to document {a: 3}.','line_number':490,'multiline':False]['text':' Adjust the default accessor to refer back to the document {a: 2}.','line_number':492,'multiline':False]['text':' Keep the same endpoint accessor, which will only include the last document.','line_number':494,'multiline':False]['text':' Since the default accessor has not read {a: 3} yet, it won't be released after another','line_number':499,'multiline':False]['text':' advance.','line_number':500,'multiline':False]['text':' The iterator is currently at {a: 4}, with {a: 1} and {a: 2} both being released.','line_number':504,'multiline':False]['text':' Pull in the first document, and verify the reported size of the iterator is the same as the','line_number':518,'multiline':False]['text':' size of the document.','line_number':519,'multiline':False]['text':' Read the field so that it is coppied into the cache. This will make the document bigger but','line_number':523,'multiline':False]['text':' shouldn't affect memory tracking.','line_number':524,'multiline':False]['text':' The accessor will have marked the first document as expired, and thus freed on the next call','line_number':529,'multiline':False]['text':' to advance().','line_number':530,'multiline':False]['text':' The documents in this test are so small we will not see the effects of greedy caching that we','line_number':548,'multiline':False]['text':' can see in the above tests. We can therefore expect our advances to increase the size of our','line_number':549,'multiline':False]['text':' iterator by one doc uniformly each time.','line_number':550,'multiline':False]['text':' Confirm nothing has been released after advancing.','line_number':553,'multiline':False]['text':' Confirm nothing has been released after advancing.','line_number':557,'multiline':False]['text':' Expire the third document and everything behind it.','line_number':561,'multiline':False]['text':' Advance the iterator which frees the manually expired documents.','line_number':563,'multiline':False]['text':' namespace','line_number':569,'multiline':False]['text':' namespace mongo','line_number':570,'multiline':False]