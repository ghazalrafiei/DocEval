['text':'*
 *    Copyright (C) 2019-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' An AccumulatorState instance only owns its "static" arguments: those that don't need to be','line_number':100,'multiline':False]['text':' evaluated per input document.','line_number':101,'multiline':False]['text':' static arguments','line_number':138,'multiline':False]['text':' accumulator state during execution','line_number':142,'multiline':False]['text':' 1. Initially, _state is empty.','line_number':143,'multiline':False]['text':' 2. On .startNewGroup(...), _state becomes the result of the user's init function.','line_number':144,'multiline':False]['text':' 3. On .processInternal(...), instead of calling the user's accumulate or merge function right','line_number':145,'multiline':False]['text':'    away, we push_back the argument into _pendingCalls to be processed later. This is an','line_number':146,'multiline':False]['text':'    optimization to reduce the number of calls into the JS engine.','line_number':147,'multiline':False]['text':' 4. On .getValue(), we process all the _pendingCalls and update the _state.','line_number':148,'multiline':False]['text':' 5. On .reset(), _state becomes empty again.','line_number':149,'multiline':False]['text':' Each element is an input passed to processInternal.','line_number':151,'multiline':False]['text':' True means the elements of _pendingCalls should be interpreted as intermediate states from','line_number':153,'multiline':False]['text':' other instances of $accumulator. False means the elements of _pendingCalls should be','line_number':154,'multiline':False]['text':' interpreted as inputs from accumulateArgs.','line_number':155,'multiline':False]['text':' namespace mongo','line_number':159,'multiline':False]