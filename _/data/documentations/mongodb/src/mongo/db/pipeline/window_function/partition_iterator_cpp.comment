['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':44,'multiline':False]['text':'*
 * Create an Expression from a SortPattern, if the sort is simple enough.
 *
 * The sort must have one, ascending, non-expression field.
 * The field may be dotted.
 *
 * For example: {ab.c: 1} becomes "$ab.c", but {a: -1} becomes boost::none.
 ','line_number':52,'multiline':True]['text':' Descending sorts are not allowed with range-based bounds.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':' We think this would be confusing.','line_number':79,'multiline':False]['text':' Does [x, y] mean [lower, upper] or [left, right] ?','line_number':80,'multiline':False]['text':'','line_number':81,'multiline':False]['text':' For example, suppose you sort by {time: -1} to put recent documents first.','line_number':82,'multiline':False]['text':' Would you write 'range: [-5, +2]', with the smaller value first?','line_number':83,'multiline':False]['text':' Or would you write 'range: [+2, -5]', with the more recent value first?','line_number':84,'multiline':False]['text':' namespace','line_number':91,'multiline':False]['text':' Case 0: Outside of lower bound of partition.','line_number':113,'multiline':False]['text':' Case 1: Document is in the cache already.','line_number':116,'multiline':False]['text':' Case 2: Attempting to access index greater than what the cache currently holds. If we've','line_number':121,'multiline':False]['text':' already exhausted the partition, then early return. Otherwise continue to pull in','line_number':122,'multiline':False]['text':' documents from the prior stage until we get to the desired index or reach the next partition.','line_number':123,'multiline':False]['text':' Pull in document from prior stage.','line_number':129,'multiline':False]['text':' Check whether the next document is available.','line_number':131,'multiline':False]['text':' The mapping of SlotId -> cacheIndex represents the highest index document in the cache which','line_number':144,'multiline':False]['text':' the executor no longer requires. To be able to safely free the document at index N from the','line_number':145,'multiline':False]['text':' cache, the following conditions must be met:','line_number':146,'multiline':False]['text':' * All executors have expired at least index N','line_number':147,'multiline':False]['text':' * The current index has advanced past N. We need to keep around the "current" document since','line_number':148,'multiline':False]['text':'   the aggregation stage hasn't projected the output fields yet.','line_number':149,'multiline':False]['text':' After advancing the iterator, check whether there are any documents that can be','line_number':160,'multiline':False]['text':' released from the cache.','line_number':161,'multiline':False]['text':' Check if the next document is in the cache.','line_number':167,'multiline':False]['text':' Same partition, update the current index.','line_number':169,'multiline':False]['text':' At this point, the requested document is not in the cache and we need to consider','line_number':174,'multiline':False]['text':' whether to pull from the prior stage.','line_number':175,'multiline':False]['text':' Pull in the next document and advance the pointer.','line_number':180,'multiline':False]['text':' Same partition, update the current index.','line_number':190,'multiline':False]['text':' The doc in the next partition has already been read.','line_number':195,'multiline':False]['text':' In either of these states, there's no point in reading from the prior document source','line_number':200,'multiline':False]['text':' because we've already hit EOF.','line_number':201,'multiline':False]['text':' Assumes both arguments are numeric, and performs Decimal128 addition on them.','line_number':219,'multiline':False]['text':' Widening to Decimal128 is a convenient way to avoid having many cases for different numeric','line_number':221,'multiline':False]['text':' types. The 'threshold' values we compute are only used to choose a set of documents; the','line_number':222,'multiline':False]['text':' user can't observe the type.','line_number':223,'multiline':False]['text':' namespace','line_number':228,'multiline':False]['text':' Cache is cleared, and we are moving the _nextPartitionDoc value to different positions.','line_number':235,'multiline':False]['text':' 'lower' is the smallest offset in the partition that's within the lower bound of the window.','line_number':284,'multiline':False]['text':' 'range: ["current", _]' means the current document, which is always','line_number':288,'multiline':False]['text':' offset 0.','line_number':289,'multiline':False]['text':' Find the leftmost document whose sortBy field evaluates to a numeric','line_number':293,'multiline':False]['text':' value.','line_number':294,'multiline':False]['text':' Start from the beginning, or the hint, whichever is higher.','line_number':296,'multiline':False]['text':' Note that the hint may no longer be a valid offset, if some documents','line_number':297,'multiline':False]['text':' were released from the cache.','line_number':298,'multiline':False]['text':' Start from the beginning, or the hint, whichever is higher.','line_number':318,'multiline':False]['text':' Note that the hint may no longer be a valid offset, if some documents','line_number':319,'multiline':False]['text':' were released from the cache.','line_number':320,'multiline':False]['text':' This is the first doc we've scanned that crossed the','line_number':330,'multiline':False]['text':' threshold, so it's the first doc in the window (as long as','line_number':331,'multiline':False]['text':' it's the expected type).','line_number':332,'multiline':False]['text':' We scanned every document in the partition, and none crossed the','line_number':340,'multiline':False]['text':' threshold. So the window must be shifted so far to the right that no','line_number':341,'multiline':False]['text':' documents fall in it.','line_number':342,'multiline':False]['text':' 'upper' is the largest offset in the partition that's within the upper bound of the window.','line_number':351,'multiline':False]['text':' 'range: [_, "current"]' means the current document, which is offset','line_number':355,'multiline':False]['text':' 0.','line_number':356,'multiline':False]['text':' Find the rightmost document whose sortBy field evaluates to a numeric','line_number':360,'multiline':False]['text':' value.','line_number':361,'multiline':False]['text':' We know that the current document, the lower bound, and the hint (if','line_number':363,'multiline':False]['text':' present) are all numeric, so start scanning from whichever is','line_number':364,'multiline':False]['text':' highest.','line_number':365,'multiline':False]['text':' The previously scanned doc is the rightmost numeric one.','line_number':375,'multiline':False]['text':' Since we start from '0', 'hint', or 'lower', which are all','line_number':376,'multiline':False]['text':' numeric, we should never hit this case on the first','line_number':377,'multiline':False]['text':' iteration.','line_number':378,'multiline':False]['text':' Pull in documents until the sortBy value crosses 'base + delta'.','line_number':389,'multiline':False]['text':' If there's no hint, start scanning from the lower bound.','line_number':392,'multiline':False]['text':' If there is a hint, start from whichever is greater: lower bound or','line_number':393,'multiline':False]['text':' hint. Usually the hint is greater, but with bounds like [0, 0] the','line_number':394,'multiline':False]['text':' new lower bound will be greater than the old upper bound.','line_number':395,'multiline':False]['text':' We scanned every document in the partition, and none crossed','line_number':404,'multiline':False]['text':' the upper bound. So the upper bound contains everything up to','line_number':405,'multiline':False]['text':' the end of the partition.','line_number':406,'multiline':False]['text':' This doc exceeded the upper bound.','line_number':411,'multiline':False]['text':' The previously scanned doc (if any) is the greatest in-bounds','line_number':412,'multiline':False]['text':' one.','line_number':413,'multiline':False]['text':' This case can happen, for example, at the beginning of a','line_number':415,'multiline':False]['text':' partition when the window is 'range: [-100, -5]'. There','line_number':416,'multiline':False]['text':' can be documents within the lower bound of -100, but none','line_number':417,'multiline':False]['text':' within the upper bound of -5.','line_number':418,'multiline':False]['text':' Pull documents into the cache until it contains the whole window.','line_number':444,'multiline':False]['text':' We want to know whether the window reaches the end of the partition.','line_number':445,'multiline':False]['text':' For a right-bounded window we only need to pull in documents up to the bound.','line_number':447,'multiline':False]['text':' For a right-unbounded window we need to pull in the whole partition. operator[] reports','line_number':450,'multiline':False]['text':' end of partition by returning boost::none instead of a document.','line_number':451,'multiline':False]['text':' Valid offsets into the cache are any 'i' such that','line_number':455,'multiline':False]['text':' '_cache->getDocumentById(_indexOfCurrentInPartition + i)' is valid. We know the cache is','line_number':456,'multiline':False]['text':' nonempty because it contains the current document.','line_number':457,'multiline':False]['text':' The window can only be empty if the bounds are shifted completely out of the partition.','line_number':461,'multiline':False]['text':' Now we know that the window is nonempty, and the cache contains it.','line_number':467,'multiline':False]['text':' All we have to do is clamp the bounds to fall within the cache.','line_number':468,'multiline':False]['text':' Return the closest offset from the interval '[cacheOffsetMin, cacheOffsetMax]'.','line_number':470,'multiline':False]['text':' namespace mongo','line_number':537,'multiline':False]