['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' 100 MB','line_number':70,'multiline':False]['text':'*
     * Convert the BSON representation of boundaries (as deserialized off the wire) to the internal
     * format (KeyString).
     ','line_number':73,'multiline':True]['text':'*
     * Validate consumer ids coming off the wire. If the ids pass the validation then return them.
     * If the ids are not provided (boost::none) then generate a sequence [0..nConsumer-1].
     ','line_number':80,'multiline':True]['text':'*
     * Extract the order description from the key.
     ','line_number':87,'multiline':True]['text':'*
     * Extract dotted paths from the key.
     ','line_number':92,'multiline':True]['text':'*
     * Create an exchange. 'pipeline' represents the input to the exchange operator and must not be
     * nullptr.
     *','line_number':98,'multiline':True]['text':'*
     * Interface for retrieving the next document. 'resourceYielder' is optional, and if provided,
     * will be used to give up resources while waiting for other threads to empty their buffers.
     ','line_number':104,'multiline':True]['text':'*
     * Unblocks the loading thread (a producer) if the loading is blocked by a consumer identified
     * by consumerId. Note that there is no such thing as being blocked by multiple consumers. It is
     * always one consumer that blocks the loading (i.e. the consumer's buffer is full and we can
     * not append new documents). The unblocking happens when a consumer consumes some documents
     * from its buffer (i.e. making room for appends) or when a consumer is disposed.
     ','line_number':122,'multiline':True]['text':'*
         * Mark the buffer associated with a consumer as disposed. After calling this method,
         * subsequent results that are appended to this buffer are instead discarded to prevent this
         * unused buffer from filling up and blocking progress on other threads.
         ','line_number':143,'multiline':True]['text':' Keep a copy of the spec for serialization purposes.','line_number':161,'multiline':False]['text':' A pattern for extracting a key from a document used by range and hash policies.','line_number':164,'multiline':False]['text':' Range boundaries. The boundaries are ordered and must cover the whole domain, e.g.','line_number':171,'multiline':False]['text':' [Min, -200, 0, 200, Max] partitions the domain into 4 ranges (i.e. 1 less than number of','line_number':172,'multiline':False]['text':' boundaries). Every range has an assigned consumer that will process documents in that range.','line_number':173,'multiline':False]['text':' A mapping from the range to consumer id. For the ranges from the example above the array must','line_number':176,'multiline':False]['text':' have 4 elements (1 for every range):','line_number':177,'multiline':False]['text':' [0, 1, 0, 1]','line_number':178,'multiline':False]['text':' consumer 0 processes ranges 1 and 3 (i.e. [Min,-200] and [0,200])','line_number':179,'multiline':False]['text':' consumer 1 processes ranges 2 and 4 (i.e. [-200,0] and [200,Max])','line_number':180,'multiline':False]['text':' A policy that tells how to distribute input documents to consumers.','line_number':183,'multiline':False]['text':' If set to true then a producer sends special 'high watermark' documents to consumers in order','line_number':186,'multiline':False]['text':' to prevent deadlocks.','line_number':187,'multiline':False]['text':' A maximum size of buffer per consumer.','line_number':190,'multiline':False]['text':' An input to the exchange operator','line_number':193,'multiline':False]['text':' Synchronization.','line_number':196,'multiline':False]['text':' A thread that is currently loading the exchange buffers.','line_number':200,'multiline':False]['text':' A status indicating that the exception was thrown during loadNextBatch(). Once in the failed','line_number':203,'multiline':False]['text':' state all other producing threads will fail too.','line_number':204,'multiline':False]['text':' A rundown counter of consumers disposing of the pipelines. Only the last consumer will','line_number':209,'multiline':False]['text':' dispose of the 'inner' exchange pipeline.','line_number':210,'multiline':False]['text':'*
     * Create an Exchange consumer. 'resourceYielder' is so the exchange may temporarily yield
     * resources (such as the Session) while waiting for other threads to do
     * work. 'resourceYielder' may be nullptr if there are no resources which need to be given up
     * while waiting.
     ','line_number':220,'multiline':True]['text':'*
     * DocumentSourceExchange does not have a direct source (it is reading through the shared
     * Exchange pipeline).
     ','line_number':250,'multiline':True]['text':' Any correlation analysis should have happened before this stage was created.','line_number':275,'multiline':False]['text':' While waiting for another thread to make room in its buffer, we may want to yield certain','line_number':286,'multiline':False]['text':' resources (such as the Session). Through this interface we can do that.','line_number':287,'multiline':False]['text':' namespace mongo','line_number':291,'multiline':False]