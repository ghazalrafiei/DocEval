['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace value_arithmetic_operators','line_number':62,'multiline':False]['text':' Given two known points (x1, y1) and (x2, y2) and a value x that lies between those two','line_number':64,'multiline':False]['text':' points, we solve (or fill) for y with the following formula: y = y1 + (x - x1) * ((y2 -','line_number':65,'multiline':False]['text':' y1)/(x2 - x1))','line_number':66,'multiline':False]['text':' namespace','line_number':71,'multiline':False]['text':' We do not allow repeated sort field values. This is because if we have the following','line_number':112,'multiline':False]['text':' collection that has a repeated sort value and different fill values, eg [(10, 100), (10,','line_number':113,'multiline':False]['text':' -100), (20, null), (30, 50)], it is unclear if the left value, (X1, Y1), should be (10, 100)','line_number':114,'multiline':False]['text':' or (10, -100) when we interpolate on the third document.','line_number':115,'multiline':False]['text':' Throw an error If the sort value was previously of type numeric, but we've just found a','line_number':121,'multiline':False]['text':' date (or vice versa).','line_number':122,'multiline':False]['text':' We have found either (x1, y1) or (x2, y2).','line_number':131,'multiline':False]['text':' We can expire all documents before the current document in the cache. We don't want to','line_number':133,'multiline':False]['text':' expire the current document, because it may become our *first* non-null, ie (x1, x2), for','line_number':134,'multiline':False]['text':' the next set of null documents.','line_number':135,'multiline':False]['text':' If (x2, y2) is known, it becomes our (x1, y1) for the next sequence of null documents.','line_number':137,'multiline':False]['text':' Otherwise the current document becomes (x1, y1).','line_number':138,'multiline':False]['text':' Interpolation requires that the documents with null values for the field we are filling,','line_number':145,'multiline':False]['text':' be bookended with documents with non-null sort and input field numeric values.','line_number':146,'multiline':False]['text':' To do this, we store the previous known coordinates so that we don't scan the same null','line_number':147,'multiline':False]['text':' documents multiple times as we search for a non-null value.','line_number':148,'multiline':False]['text':' namespace mongo','line_number':165,'multiline':False]