['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * An AccumulatorN picks 'n' of its input values and returns them in an array. Each derived class
 * has different criteria for how to pick values and order the final array, but any common behavior
 * shared by derived classes is implemented in this class. In particular:
 * - Initializing 'n' during 'startNewGroup'.
 * - Parsing the expressions for 'n' and 'input'.
 ','line_number':62,'multiline':True]['text':' Field names related to top/bottom/topN/bottomN.','line_number':76,'multiline':False]['text':' Whereas other 'n' accumulators accept an 'input' parameter, top/bottom/topN/bottomN accept','line_number':78,'multiline':False]['text':' 'output'. This is done in order to disambiguate the expression that will be used to','line_number':79,'multiline':False]['text':' compute the output from the 'sortBy' expression, which will be used to order the output.','line_number':80,'multiline':False]['text':' Sort specification given by user.','line_number':82,'multiline':False]['text':' Array containing only the fields needed to generate a sortKey from the input document.','line_number':84,'multiline':False]['text':' A sortKey already generated by a previous call to _processValue.','line_number':86,'multiline':False]['text':'*
     * Verifies that 'input' is a positive integer.
     ','line_number':93,'multiline':True]['text':'*
     * Initialize 'n' with 'input'.
     ','line_number':100,'multiline':True]['text':'*
     * Helper which appends the 'n' and 'input' fields to 'md'.
     ','line_number':105,'multiline':True]['text':' Parses 'args' for the 'n' and 'input' arguments that are common to the 'N' family of','line_number':114,'multiline':False]['text':' accumulators.','line_number':115,'multiline':False]['text':' Utility to check that memory limit isn't exceeded.','line_number':119,'multiline':False]['text':' Stores the limit of how many values we will return. This value is initialized to','line_number':122,'multiline':False]['text':' 'boost::none' on construction and is only set during 'startNewGroup'.','line_number':123,'multiline':False]['text':'*
     * Verifies that 'elem' is an object, delegates argument parsing to 'AccumulatorN::parseArgs',
     * and constructs an AccumulationExpression representing $minN or $maxN depending on 's'.
     ','line_number':135,'multiline':True]['text':'*
     * Constructs an Expression representing $minN or $maxN depending on 's'.
     ','line_number':144,'multiline':True]['text':'*
     * Verifies that 'elem' is an object, delegates argument parsing to 'AccumulatorN::parseArgs',
     * and constructs an AccumulationExpression representing $firstN or $lastN depending on 's'.
     ','line_number':220,'multiline':True]['text':'*
     * Constructs an Expression representing $firstN or $lastN depending on 's'.
     ','line_number':245,'multiline':True]['text':' firstN/lastN do NOT ignore null values.','line_number':256,'multiline':False]['text':' pair of (sortKey, output) for storing in AccumulatorTopBottomN's internal multimap.','line_number':301,'multiline':False]['text':'*
     * Verifies that 'elem' is an object, delegates argument parsing to 'accumulatorNParseArgs',
     * and constructs an AccumulationExpression representing $top, $bottom, $topN or $bottomN
     * depending on 'sense' and 'single'.
     ','line_number':312,'multiline':True]['text':'*
     * Used for removable version of this operator as a window function.
     ','line_number':356,'multiline':True]['text':' top/bottom/topN/bottomN do NOT ignore null values, but MISSING values will be promoted to','line_number':382,'multiline':False]['text':' null so the users see them.','line_number':383,'multiline':False]['text':' Set to true if we are allowed to call remove().','line_number':388,'multiline':False]['text':' internalSortPattern needs to be computed based on _sortPattern before the following can be','line_number':392,'multiline':False]['text':' initialized.','line_number':393,'multiline':False]['text':' namespace mongo','line_number':406,'multiline':False]