['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * A lightly parsed version of a DocumentSource. It is not executable and not guaranteed to return a
 * parse error when encountering an invalid specification. Instead, the purpose of this class is to
 * make certain DocumentSource properties available before full parsing (e.g., getting the involved
 * foreign collections).
 ','line_number':62,'multiline':True]['text':'
     * This is the type of parser you should register using REGISTER_DOCUMENT_SOURCE. It need not
     * do any validation of options, only enough parsing to be able to implement the interface.
     *
     * The NamespaceString can be used to determine the namespace on which this aggregation is being
     * performed, and the BSONElement will be the element whose field name is the name of this stage
     * (e.g. the first and only element in {$limit: 1}).
     ','line_number':70,'multiline':True]['text':'*
     * Registers a DocumentSource with a spec parsing function, so that when a stage with the given
     * name is encountered, it will call 'parser' to construct that stage's specification object.
     * The flag 'allowedWithApiStrict' is used to control the allowance of the stage when
     * 'apiStrict' is set to true.
     *
     * DO NOT call this method directly. Instead, use the REGISTER_DOCUMENT_SOURCE macro defined in
     * document_source.h.
     ','line_number':92,'multiline':True]['text':'*
     * Function that will be used as an alternate parser for a document source that has been
     * disabled.
     ','line_number':106,'multiline':True]['text':'*
     * Returns the 'LiteParserInfo' for the specified stage name.
     ','line_number':119,'multiline':True]['text':'*
     * Constructs a LiteParsedDocumentSource from the user-supplied BSON, or throws a
     * AssertionException.
     *
     * Extracts the first field name from 'spec', and delegates to the parser that was registered
     * with that field name using registerParser() above.
     ','line_number':124,'multiline':True]['text':'*
     * Returns the foreign collection(s) referenced by this stage (that is, any collection that
     * the pipeline references, but doesn't get locked), if any.
     ','line_number':134,'multiline':True]['text':'*
     * Returns the foreign collections(s) referenced by this stage that potentially will be
     * involved in query execution (that is, a collection that the pipeline references, and gets
     * locked for the purposes of query execution), if any.
     ','line_number':140,'multiline':True]['text':'*
     * Returns a list of the privileges required for this stage.
     ','line_number':148,'multiline':True]['text':'*
     * Does any custom assertions necessary to validate this stage is permitted in the given API
     * Version. For example, if certain stage parameters are permitted but others excluded, that
     * should happen here.
     ','line_number':154,'multiline':True]['text':' By default there are no custom checks needed. The 'AllowedWithApiStrict' flag should take','line_number':160,'multiline':False]['text':' care of most cases.','line_number':161,'multiline':False]['text':'*
     * Returns true if this is a $collStats stage.
     ','line_number':164,'multiline':True]['text':'*
     * Returns true if this is a $indexStats stage.
     ','line_number':171,'multiline':True]['text':'*
     * Returns true if this is a $changeStream stage.
     ','line_number':178,'multiline':True]['text':'*
     * Returns true if this desugars to a pipeline starting with a $queue stage.
     ','line_number':185,'multiline':True]['text':'*
     * Returns true if this stage does not require an input source.
     ','line_number':192,'multiline':True]['text':'*
     * Returns true if this stage require knowledge of the collection default collation at parse
     * time, false otherwise. This is useful to know as it could save a network request to discern
     * the collation.
     * TODO SERVER-81991: Delete this function once all unsharded collections are tracked in the
     * sharding catalog as unsplittable along with their collation.
     ','line_number':199,'multiline':True]['text':'*
     * Returns Status::OK() if the involved namespace 'nss' is allowed to be sharded. The behavior
     * is to allow by default. Stages should opt-out if foreign collections are not allowed to be
     * sharded by returning a Status with a message explaining why.
     ','line_number':210,'multiline':True]['text':'*
     * Verifies that this stage is allowed to run with the specified read concern level.
     ','line_number':220,'multiline':True]['text':'*
     * Verifies that this stage is allowed to run in a multi-document transaction. Throws a
     * UserException if not compatible. This should only be called if the caller has determined the
     * current operation is part of a transaction.
     ','line_number':228,'multiline':True]['text':'*
     * Returns this document source's subpipelines. If none exist, a reference to an empty vector
     * is returned.
     ','line_number':235,'multiline':True]['text':'*
     * Returns the name of the stage that this LiteParsedDocumentSource represents.
     ','line_number':241,'multiline':True]['text':'*
     * Creates the default LiteParsedDocumentSource. This should be used with caution. Make sure
     * your stage doesn't need to communicate any special behavior before registering a
     * DocumentSource using this parser.
     ','line_number':285,'multiline':True]['text':'*
 * Helper class for DocumentSources which reference a foreign collection.
 ','line_number':307,'multiline':True]['text':'*
 * Helper class for DocumentSources which can reference one or more child pipelines.
 ','line_number':326,'multiline':True]['text':'*
     * Check the read concern constraints of all sub-pipelines. If the stage that owns the
     * sub-pipelines has its own constraints this should be overridden to take those into account.
     ','line_number':351,'multiline':True]['text':' namespace mongo','line_number':362,'multiline':False]