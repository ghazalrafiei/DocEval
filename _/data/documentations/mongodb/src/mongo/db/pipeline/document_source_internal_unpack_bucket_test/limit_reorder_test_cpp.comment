['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Simple test to push limit down.','line_number':64,'multiline':False]['text':' $limit is now before unpack bucket.','line_number':71,'multiline':False]['text':' Test that when there are multiple limits in a row, they are merged into one taking the smallest','line_number':78,'multiline':False]['text':' limit value ({$limit: 2} in this case) and pushed down.','line_number':79,'multiline':False]['text':' Test that the stages after $limit are also preserved.','line_number':93,'multiline':False]['text':' $limit is before unpack bucket stage.','line_number':100,'multiline':False]['text':' Test that limit is not pushed down if it comes after match.','line_number':108,'multiline':False]['text':' Using hasField rather than matching whole json to check that the stages are what we expect','line_number':115,'multiline':False]['text':' because the match push down changes the shape of the original $match and','line_number':116,'multiline':False]['text':' $_internalUnpackBucket.','line_number':117,'multiline':False]['text':' Test that the sort that was pushed up absorbs the limit, while preserving the original limit.','line_number':124,'multiline':False]['text':' The following assertions ensure that the first limit is absorbed by the sort. The serialized','line_number':133,'multiline':False]['text':' array has 4 stages even though the first limit is absorbed by the sort, because','line_number':134,'multiline':False]['text':' serializeToArray adds a limit stage when the $sort has a $limit.','line_number':135,'multiline':False]['text':' Test for sort with multiple limits in increasing limit values.','line_number':148,'multiline':False]['text':' Test for sort with multiple limits in decreasing limit values. In this case, the last limit','line_number':169,'multiline':False]['text':' {$limit: 2} would eventually replace the {$limit: 10} after {$limit: 10} is pushed up.','line_number':170,'multiline':False]['text':' namespace','line_number':191,'multiline':False]['text':' namespace mongo','line_number':192,'multiline':False]