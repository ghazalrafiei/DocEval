['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':72,'multiline':False]['text':' Delegate to the zero-argument constructor for std::variant<T>. This constructor is needed','line_number':82,'multiline':False]['text':' for DensifyValue to be able to be the value type in a ValueUnorderedMap.','line_number':83,'multiline':False]['text':'*
     * Convert a DensifyValue into a Value for use in documents/serialization.
     ','line_number':92,'multiline':True]['text':'*
     * Compare two DensifyValues using the standard comparator convention, returning the sign
     * of (lhs - rhs). Returns -1 if lhs < rhs, 0 if lhs == rhs, and 1 if lhs > rhs.
     ','line_number':105,'multiline':True]['text':'*
     * Get the value to be densified from a document. The function checks the type to ensure that
     * the document has either a numeric value or a date in the proper field, and throws an error
     * otherwise.
     ','line_number':122,'multiline':True]['text':'*
     * Returns a new DensifyValue incremented by the step in the provided range.
     ','line_number':146,'multiline':True]['text':'*
     * Returns a new DensifyValue decremented by the step in the provided range.
     ','line_number':151,'multiline':True]['text':'*
     * Delegate to Value::getApproximateSize().
     ','line_number':156,'multiline':True]['text':'*
     * Returns true if this DensifyValue is a date.
     ','line_number':167,'multiline':True]['text':'*
     * Returns the DensifyValue as a date.
     ','line_number':174,'multiline':True]['text':'*
     * Returns true if this DensifyValue is a number.
     ','line_number':182,'multiline':True]['text':'*
     * Returns the DensifyValue as a number in a Value.
     ','line_number':189,'multiline':True]['text':'*
     * Returns true if this DensifyValue and the other one are both the same underlying type.
     ','line_number':197,'multiline':True]['text':'*
     * Checks if the value is exactly on the step defined in the given RangeStatement
     * relative to the provided base value.
     ','line_number':204,'multiline':True]['text':'*
     * Comparison operator overloads.
     ','line_number':210,'multiline':True]['text':'*
     * Stream pipe operator for debug purposes.
     ','line_number':237,'multiline':True]['text':'*
 * The 'internal' parameter specifies whether or not we create a sort stage that is required for
 * correct execution of an _internalDensify stage.
 ','line_number':305,'multiline':True]['text':'*
 * The 'internal' parameter specifies whether or not we create a sort stage that is required for
 * correct execution of an _internalDensify stage.
 ','line_number':317,'multiline':True]['text':' namespace document_source_densify','line_number':327,'multiline':False]['text':' The field to add to 'includeFields' to generate a document.','line_number':366,'multiline':False]['text':' The document that is equal to or larger than the upper bound that prompted the','line_number':369,'multiline':False]['text':' creation of this generator. Will be returned after the final generated document. Can','line_number':370,'multiline':False]['text':' be boost::none if we are generating the values at the end of the range.','line_number':371,'multiline':False]['text':' The minimum value that this generator will create, therefore the next generated','line_number':373,'multiline':False]['text':' document will have this value.','line_number':374,'multiline':False]['text':' Generating documents between '_min' and the upper bound.','line_number':378,'multiline':False]['text':' Generated all necessary documents, waiting for a final 'getNextDocument()' call.','line_number':380,'multiline':False]['text':' Value to increment when returning a generated document. This is a pointer to the counter','line_number':386,'multiline':False]['text':' that keeps track of the total number of documents generated by the owning stage across','line_number':387,'multiline':False]['text':' all generators.','line_number':388,'multiline':False]['text':' We don't need to traverse _partitionExpr because it was generated from _partitions.','line_number':423,'multiline':False]['text':' Every ExpressionFieldPath it contains is already covered by _partitions.','line_number':424,'multiline':False]['text':' The partition expression cannot refer to any variables because it is internally generated','line_number':432,'multiline':False]['text':' based on a set of field paths.','line_number':433,'multiline':False]['text':'*
     * Decides whether or not to build a DocGen and return the first document generated or return
     * the current doc if the rangeMin + step is greater than rangeMax. Used for both 'full' and
     * 'partition' bounds.
     ','line_number':470,'multiline':True]['text':'*
     * Checks where the current doc's value lies compared to the range and creates the correct
     * DocGen if needed and returns the next doc.
     ','line_number':477,'multiline':True]['text':'*
     * Takes care of when an EOF has been hit for the explicit case. It checks if we have finished
     * densifying over the range, and if so changes the state to be kDensify done. Otherwise it
     * builds a new generator that will finish densifying over the range and changes the state to
     * kHaveGen. Only used if the input is not partitioned.
     ','line_number':483,'multiline':True]['text':'*
     * Decide what to do for the first document in a given partition for explicit range. Either
     * generate documents between the minimum and the value, or just return it.
     ','line_number':491,'multiline':True]['text':'*
     * Creates a document generator based on the value passed in, the current _current, and the
     * ExplicitBounds on the stage. Once created, the state changes to kHaveGenerator and the first
     * document from the generator is returned.
     ','line_number':497,'multiline':True]['text':'*
     * Takes in a value and checks if the value is below, on the bottom, inside, or above the
     * range, and returns the equivelant state from ValComparedToRange.
     ','line_number':504,'multiline':True]['text':'*
     * Handles when the pSource has been exhausted. In the full case we are done with the
     * densification process and the state becomes kDensifyDone, however in the explicit case we
     * may still need to densify over the remainder of the range, so the
     * densifyExplicitRangeAfterEOF() function is called.
     ','line_number':510,'multiline':True]['text':'*
     * Handles building a document generator once we've seen an EOF for partitioned input. Min will
     * be the last seen value in the partition unless it is less than the optional 'minOverride'.
     * Helper is to share code between visit functions.
     ','line_number':518,'multiline':True]['text':'*
     * Checks if the current document generator is done. If it is and we have finished densifying,
     * it changes the state to be kDensifyDone. If there is more to densify, the state becomes
     * kNeedGen. The generator is also deleted.
     ','line_number':527,'multiline':True]['text':'*
     * Set up the state for densifying over partitions.
     ','line_number':534,'multiline':True]['text':'*
     * Helper to set the value in the partition table.
     ','line_number':539,'multiline':True]['text':'*
     * Helpers to create doc generators. Sets _docGenerator to the created generator.
     ','line_number':557,'multiline':True]['text':'*
     * The last value seen or generated by the stage that is also in line with the step.
     ','line_number':582,'multiline':True]['text':' Used to keep track of the bounds for densification in the full case.','line_number':587,'multiline':False]['text':' _partitionExpr has two purposes:','line_number':591,'multiline':False]['text':' 1. to determine which partition a document belongs in.','line_number':592,'multiline':False]['text':' 2. to initialize new documents with the right partition key.','line_number':593,'multiline':False]['text':' For example, if the stage had 'partitionByFields: ["a", "x.y"]' then this expression','line_number':594,'multiline':False]['text':' would be {a: "$a", {x: {y: "$x.y"}}}.','line_number':595,'multiline':False]['text':' Keep track of documents generated, error if it goes above the limit.','line_number':608,'multiline':False]['text':' Store of the value we've seen for each partition.','line_number':617,'multiline':False]['text':' namespace mongo','line_number':620,'multiline':False]