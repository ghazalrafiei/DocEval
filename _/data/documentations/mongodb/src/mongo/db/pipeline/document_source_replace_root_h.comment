['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * This class implements the transformation logic for the $replaceRoot and $replaceWith stages.
 ','line_number':55,'multiline':True]['text':' Optimize the newRoot expression.','line_number':78,'multiline':False]['text':' Optimization can sometimes modify a previously compatible expression so that it can no','line_number':80,'multiline':False]['text':' longer be executed in SBE. When that happens, the expression optimizer updates the','line_number':81,'multiline':False]['text':' 'sbeCompatibility' value in the ExpressionContext, which we can use to update the','line_number':82,'multiline':False]['text':' '_sbeCompatibility' value for this $replaceRoot operation.','line_number':83,'multiline':False]['text':' This stage will replace the entire document with a new document, so any existing fields','line_number':100,'multiline':False]['text':' will be replaced and cannot be required as dependencies.','line_number':101,'multiline':False]['text':' Replaces the entire root, so all paths are modified.','line_number':106,'multiline':False]['text':' A string for additional context for the user about where/why we were expecting an object.','line_number':130,'multiline':False]['text':' This can be helpful if you are using $replaceRoot as part of an alias expansion as we do in','line_number':131,'multiline':False]['text':' $documents for example. Goes first in the template error message below.','line_number':132,'multiline':False]['text':'
 * $replaceRoot takes an object containing only an expression in the newRoot field, and replaces
 * each incoming document with the result of evaluating that expression. Throws an error if the
 * given expression is not an object or if the expression evaluates to the "missing" Value. This
 * is implemented as an extension of DocumentSourceSingleDocumentTransformation.
 *
 * There is a shorthand $replaceWith alias which takes a direct single argument containing the
 * expression which will become the new root: {$replaceWith: <expression>} aliases to {$replaceRoot:
 * {newRoot: <expression>}}.
 ','line_number':141,'multiline':True]['text':'*
     * Creates a new replaceRoot DocumentSource from the BSON specification of the $replaceRoot
     * stage.
     ','line_number':155,'multiline':True]['text':' It is illegal to construct a DocumentSourceReplaceRoot directly, use createFromBson()','line_number':169,'multiline':False]['text':' instead.','line_number':170,'multiline':False]['text':' namespace mongo','line_number':174,'multiline':False]