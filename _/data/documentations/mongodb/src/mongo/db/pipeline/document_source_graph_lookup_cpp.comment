['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':30,'multiline':False]['text':' IWYU pragma: keep','line_number':45,'multiline':False]['text':' Parses $graphLookup 'from' field. The 'from' field must be a string with the exception of','line_number':85,'multiline':False]['text':' 'local.system.tenantMigration.oplogView'.','line_number':86,'multiline':False]['text':'','line_number':87,'multiline':False]['text':' {from: {db: "local", coll: "system.tenantMigration.oplogView"}, ...}.','line_number':88,'multiline':False]['text':' The object syntax only works for 'local.system.tenantMigration.oplogView' which is not a user','line_number':91,'multiline':False]['text':' namespace so object type is omitted from the error message below.','line_number':92,'multiline':False]['text':' Valdate the db and coll names.','line_number':108,'multiline':False]['text':' apiStrict ','line_number':110,'multiline':True]['text':' namespace','line_number':124,'multiline':False]['text':' We aren't handling a $unwind, process the input document normally.','line_number':162,'multiline':False]['text':' Remove elements one at a time to avoid consuming more memory.','line_number':174,'multiline':False]['text':' If the unwind is not preserving empty arrays, we might have to process multiple inputs before','line_number':193,'multiline':False]['text':' we get one that will produce an output.','line_number':194,'multiline':False]['text':' No results are left for the current input, so we should move on to the next one and','line_number':197,'multiline':False]['text':' perform a new search.','line_number':198,'multiline':False]['text':' Since "preserveNullAndEmptyArrays" was specified, output a document even though','line_number':214,'multiline':False]['text':' we had no result.','line_number':215,'multiline':False]['text':' $unwind would not output anything, since the '_as' field would not exist. We','line_number':221,'multiline':False]['text':' should loop until we have something to return.','line_number':222,'multiline':False]['text':' If $graphLookup into a sharded foreign collection is allowed, top-level $graphLookup','line_number':251,'multiline':False]['text':' stages can run in parallel on the shards.','line_number':252,'multiline':False]['text':' TODO SERVER-83902: This check will fail if the inner side is a sharded view as we will not','line_number':253,'multiline':False]['text':' infer that '_from' is a view until we issue an aggregate to perform the search against','line_number':254,'multiline':False]['text':' '_from'. The result is that $graphLookup will execute on as a merger when the 'from'','line_number':255,'multiline':False]['text':' collection is a view (regardless of whether it is sharded or not).','line_number':256,'multiline':False]['text':' {shardsStage, mergingStage, sortPattern}','line_number':262,'multiline':False]['text':' Enforce that the foreign collection must be unsharded for $graphLookup.','line_number':275,'multiline':False]['text':' Check whether each key in the frontier exists in the cache or needs to be queried.','line_number':283,'multiline':False]['text':' Process cached values, populating '_frontier' for the next iteration of search.','line_number':291,'multiline':False]['text':' Query for all keys that were in the frontier and not in the cache, populating','line_number':301,'multiline':False]['text':' '_frontier' for the next iteration of search.','line_number':302,'multiline':False]['text':' We've already allocated space for the trailing $match stage in '_fromPipeline'.','line_number':304,'multiline':False]['text':' By default, $graphLookup doesn't support a sharded 'from' collection.','line_number':309,'multiline':False]['text':' This exception returns the information we need to resolve a sharded view. Update','line_number':319,'multiline':False]['text':' the pipeline with the resolved view definition, but don't optimize or attach the','line_number':320,'multiline':False]['text':' cursor source yet.','line_number':321,'multiline':False]['text':' Update '_fromPipeline' with the resolved view definition to avoid triggering this','line_number':331,'multiline':False]['text':' exception next time.','line_number':332,'multiline':False]['text':' Update the expression context with any new namespaces the resolved pipeline has','line_number':335,'multiline':False]['text':' introduced.','line_number':336,'multiline':False]['text':' We can now safely optimize and reattempt attaching the cursor source.','line_number':350,'multiline':False]['text':' We've already seen this object, don't repeat any work.','line_number':380,'multiline':False]['text':' We have not seen this node before. If '_depthField' was specified, add the field to the','line_number':384,'multiline':False]['text':' object.','line_number':385,'multiline':False]['text':' Add the 'connectFromField' of 'result' into '_frontier'. If the 'connectFromField' is an','line_number':392,'multiline':False]['text':' array, we treat it as connecting to multiple values, so we must add each element to','line_number':393,'multiline':False]['text':' '_frontier'.','line_number':394,'multiline':False]['text':' Add the object to our '_visited' list and update the size of '_visited' appropriately.','line_number':401,'multiline':False]['text':' We inserted into _visited, so return true.','line_number':407,'multiline':False]['text':' It is possible that 'connectToValue' is a single value, but was not queried for. For','line_number':415,'multiline':False]['text':' instance, with a connectToField of "a.b" and a document with the structure:','line_number':416,'multiline':False]['text':' {a: [{b: 1}, {b: 0}]}, this document will be retrieved by querying for "{b: 1}", but','line_number':417,'multiline':False]['text':' the outer for loop will split this into two separate connectToValues. {b: 0} was not','line_number':418,'multiline':False]['text':' queried for, and thus, we cannot cache under it.','line_number':419,'multiline':False]['text':' Add any cached values to 'cached' and remove them from '_frontier'.','line_number':428,'multiline':False]['text':' If the cached value increased in size while in the cache, we don't want to underflow','line_number':435,'multiline':False]['text':' '_frontierUsageBytes'.','line_number':436,'multiline':False]['text':' Create a query of the form {$and: [_additionalFilter, {_connectToField: {$in: [...]}}]}.','line_number':444,'multiline':False]['text':'','line_number':445,'multiline':False]['text':' We wrap the query in a $match so that it can be parsed into a DocumentSourceMatch when','line_number':446,'multiline':False]['text':' constructing a pipeline to execute.','line_number':447,'multiline':False]['text':' $match stages will conflate null, and undefined values. Keep track of which ones are','line_number':449,'multiline':False]['text':' present and eliminate documents that would match the others later.','line_number':450,'multiline':False]['text':' We never want to see documents where the 'connectToField' is missing. Only add a','line_number':482,'multiline':False]['text':' check for it in situations where we might match it accidentally.','line_number':483,'multiline':False]['text':' If matching null or undefined, make sure we don't match the other one.','line_number':488,'multiline':False]['text':' If seenMissing is true, we've already filtered out missing values above.','line_number':489,'multiline':False]['text':' Make sure _input is set before calling performSearch().','line_number':510,'multiline':False]['text':' If _startWith evaluates to an array, treat each value as a separate starting point.','line_number':515,'multiline':False]['text':' If lookup on a sharded collection is disallowed and the foreign collection is sharded,','line_number':529,'multiline':False]['text':' throw a custom exception.','line_number':530,'multiline':False]['text':' $graphLookup can execute on a mongos or a shard, so its host type requirement is 'kNone'. If','line_number':554,'multiline':False]['text':' it needs to execute on a specific merging shard, it can request this later.','line_number':555,'multiline':False]['text':' If this $graphLookup is on the merging half of the pipeline and the inner collection isn't','line_number':568,'multiline':False]['text':' sharded (that is, it is either unsplittable or untracked), then we should merge on the shard','line_number':569,'multiline':False]['text':' which owns the inner collection.','line_number':570,'multiline':False]['text':' If we have not yet designated a merging shard, and are either executing on mongod, the','line_number':576,'multiline':False]['text':' foreign collection is unsharded, or sharded $graphLookup is not allowed, designate the','line_number':577,'multiline':False]['text':' current shard as the merging shard. This is done to prevent pushing this $graphLookup to the','line_number':578,'multiline':False]['text':' shards part of the pipeline. This is an important optimization as designating this','line_number':579,'multiline':False]['text':' $graphLookup as a merging stage allows us to execute a single $graphLookup (as opposed','line_number':580,'multiline':False]['text':' executing one $graphLookup on each involved shard). When this stage is part of a deeply','line_number':581,'multiline':False]['text':' nested pipeline, it prevents creating an exponential explosion of cursors/resources','line_number':582,'multiline':False]['text':' (proportional to the level of pipeline nesting).','line_number':583,'multiline':False]['text':' If we are not already handling an $unwind stage internally, we can combine with the following','line_number':601,'multiline':False]['text':' $unwind stage.','line_number':602,'multiline':False]['text':' If the following stage is $sort and there is no internal $unwind, consider pushing it ahead','line_number':610,'multiline':False]['text':' of $graphLookup.','line_number':611,'multiline':False]['text':' TODO SERVER-23980: Implement spilling to disk if allowDiskUse is specified.','line_number':623,'multiline':False]['text':' Do not include tenantId in serialized 'from' namespace.','line_number':632,'multiline':False]['text':' Serialize default options.','line_number':640,'multiline':False]['text':' depthField is optional; serialize it if it was specified.','line_number':647,'multiline':False]['text':' If we are explaining, include an absorbed $unwind inside the $graphLookup specification.','line_number':667,'multiline':False]['text':' If we are not explaining, the output of this method must be parseable, so serialize our','line_number':679,'multiline':False]['text':' $unwind into a separate stage.','line_number':680,'multiline':False]['text':' We append an additional BSONObj to '_fromPipeline' as a placeholder for the $match stage','line_number':732,'multiline':False]['text':' we'll eventually construct from the input document.','line_number':733,'multiline':False]['text':' We don't need to keep ahold of the MatchExpression, but we do need to ensure that','line_number':831,'multiline':False]['text':' the specified object is parseable and does not contain extensions.','line_number':832,'multiline':False]['text':' All remaining arguments to $graphLookup are expected to be strings or','line_number':843,'multiline':False]['text':' {db: "local", coll: "system.tenantMigration.oplogView"}.','line_number':844,'multiline':False]['text':' 'local.system.tenantMigration.oplogView' is not a user namespace so object','line_number':845,'multiline':False]['text':' type is omitted from the error message below.','line_number':846,'multiline':False]['text':' namespace mongo','line_number':906,'multiline':False]