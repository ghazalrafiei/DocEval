['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Generates a new file name on each call using a static, atomic and monotonically increasing
 * number.
 *
 * Each user of the Sorter must implement this function to ensure that all temporary files that the
 * Sorter instances produce are uniquely identified using a unique file name extension with separate
 * atomic variable. This is necessary because the sorter.cpp code is separately included in multiple
 * places, rather than compiled in one place and linked, and so cannot provide a globally unique ID.
 ','line_number':43,'multiline':True]['text':' namespace','line_number':57,'multiline':False]['text':' We aren't streaming, and we have spilled to disk.','line_number':72,'multiline':False]['text':' Call startNewGroup on every accumulator.','line_number':79,'multiline':False]['text':' Inside of this loop, _firstPartOfNextGroup is the current data being processed.','line_number':91,'multiline':False]['text':' At loop exit, it is the first value to be processed in the next group.','line_number':92,'multiline':False]['text':' mirrors switch in spill()','line_number':93,'multiline':False]['text':' Single accumulators serialize as a single Value.','line_number':94,'multiline':False]['text':' No accumulators so no Values.','line_number':97,'multiline':False]['text':' Multiple accumulators serialize as an array of Values.','line_number':99,'multiline':False]['text':' Not spilled, and not streaming.','line_number':120,'multiline':False]['text':' namespace','line_number':159,'multiline':False]['text':' Only process the input and update the memory footprint if the current accumulator','line_number':167,'multiline':False]['text':' needs more input.','line_number':168,'multiline':False]['text':' prepare current to accumulate data','line_number':191,'multiline':False]['text':' we put data in, we should get something out.','line_number':197,'multiline':False]['text':' start the group iterator','line_number':200,'multiline':False]['text':' Free our resources.','line_number':206,'multiline':False]['text':' Make us look done.','line_number':211,'multiline':False]['text':' In debug mode, spill every time we have a duplicate id to stress merge logic.','line_number':231,'multiline':False]['text':' is not a new group','line_number':232,'multiline':False]['text':' can't spill to disk in mongos','line_number':233,'multiline':False]['text':' never spill when disk use is explicitly prohibited','line_number':234,'multiline':False]['text':' using pointers to speed sorting','line_number':244,'multiline':False]['text':' Initialize '_file' in a lazy manner only when it is needed.','line_number':252,'multiline':False]['text':' sorterTracker ','line_number':254,'multiline':True]['text':' same as ptrs[i]->second.size() for all i.','line_number':259,'multiline':False]['text':' no values, essentially a distinct','line_number':260,'multiline':False]['text':' just one value, use optimized serialization as single Value','line_number':266,'multiline':False]['text':'toBeMerged=','line_number':269,'multiline':True]['text':' multiple values, serialize as array-typed Value','line_number':273,'multiline':False]['text':'toBeMerged=','line_number':277,'multiline':True]['text':' Zero out the current per-accumulation statement memory consumption, as the memory has been','line_number':288,'multiline':False]['text':' freed by spilling.','line_number':289,'multiline':False]['text':' namespace mongo','line_number':298,'multiline':False]['text':' Explicit instantiation unneeded since we aren't exposing Sorter outside of this file.','line_number':301,'multiline':False]