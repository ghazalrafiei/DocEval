['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Used to keep track of which DocumentSources are registered under which name.','line_number':84,'multiline':False]['text':' namespace','line_number':86,'multiline':False]['text':' Get the registered parser and call that.','line_number':135,'multiline':False]['text':'*
 * Verifies whether or not a $group is able to swap with a succeeding $match stage. While ordinarily
 * $group can swap with a $match, it cannot if the following $match has an $exists predicate on _id,
 * and the $group has exactly one field as the $group key.  This is because every document will have
 * an _id field following such a $group stage, including those whose group key was missing before
 * the $group. As an example, the following optimization would be incorrect as the post-optimization
 * pipeline would handle documents that had nullish _id fields differently. Thus, given such a
 * $group and $match, this function would return false.
 *   {$group: {_id: "$x"}}
 *   {$match: {_id: {$exists: true}}
 * ---->
 *   {$match: {x: {$exists: true}}
 *   {$group: {_id: "$x"}}
 ','line_number':154,'multiline':True]['text':' namespace','line_number':176,'multiline':False]['text':' We're allowed to swap with a $match and the stage after us is a $match. Furthermore, the','line_number':184,'multiline':False]['text':' $match does not contain a text search predicate, which we do not attempt to optimize','line_number':185,'multiline':False]['text':' because such a $match must already be the first stage in the pipeline. We can attempt to','line_number':186,'multiline':False]['text':' swap the $match or part of the $match before ourselves.','line_number':187,'multiline':False]['text':' At least part of the $match can be moved before this stage. Erase the original $match','line_number':193,'multiline':False]['text':' and put the independent part before this stage. If splitMatch.second is not null,','line_number':194,'multiline':False]['text':' then there is a new $match stage to insert after ourselves which is dependent on the','line_number':195,'multiline':False]['text':' modified fields.','line_number':196,'multiline':False]['text':' Attempt to swap 'itr' with a subsequent stage, if applicable.','line_number':271,'multiline':False]['text':' The stage before the pushed before stage may be able to optimize further, if there is','line_number':273,'multiline':False]['text':' such a stage.','line_number':274,'multiline':False]['text':' namespace','line_number':298,'multiline':False]['text':' Any remaining work on the parserMap should be done before finishing DocumentSource Registration.','line_number':302,'multiline':False]['text':' If the stage has not been registered at this point, register a parser that errors','line_number':310,'multiline':False]['text':' with a useful error message on parsing a search stage.','line_number':311,'multiline':False]['text':' namespace mongo','line_number':321,'multiline':False]