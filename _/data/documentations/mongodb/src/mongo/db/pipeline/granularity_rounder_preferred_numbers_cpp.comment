['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' "Least rounded" Renard number series, taken from Wikipedia page on preferred','line_number':54,'multiline':False]['text':' numbers: https://en.wikipedia.org/wiki/Preferred_number#Renard_numbers','line_number':55,'multiline':False]['text':' 1-2-5 series, taken from Wikipedia page on preferred numbers:','line_number':71,'multiline':False]['text':' https://en.wikipedia.org/wiki/Preferred_number#1-2-5_series','line_number':72,'multiline':False]['text':' E series, taken from Wikipedia page on preferred numbers:','line_number':75,'multiline':False]['text':' https://en.wikipedia.org/wiki/Preferred_number#E_series','line_number':76,'multiline':False]['text':'  namespace','line_number':109,'multiline':False]['text':' Register the GranularityRounders for the Renard number series.','line_number':111,'multiline':False]['text':' Register the GranularityRounders for the E series.','line_number':133,'multiline':False]['text':' namespace','line_number':176,'multiline':False]['text':' '_baseSeries' contains doubles, so we create a vector that contains the Decimal128','line_number':189,'multiline':False]['text':' versions of the numbers in '_baseSeries' to make it easier to compare values to 'number'.','line_number':190,'multiline':False]['text':' The number was between the previous min and the current max, so it must round up','line_number':205,'multiline':False]['text':' to the previous min. For example, rounding up 0.8 in the E6 series.','line_number':206,'multiline':False]['text':' After scaling up or down, 'number' should now fall into the range spanned by','line_number':211,'multiline':False]['text':' decimalSeries[i] * multiplier for all i in decimalSeries.','line_number':212,'multiline':False]['text':' Get an iterator pointing to the first element in '_baseSeries' that is greater','line_number':216,'multiline':False]['text':' than'number'.','line_number':217,'multiline':False]['text':' The number was between the previous min and the current max, so it must round up','line_number':240,'multiline':False]['text':' to the previous min. For example, rounding up 0.8 in the E6 series.','line_number':241,'multiline':False]['text':' After scaling up or down, 'number' should now fall into the range spanned by','line_number':246,'multiline':False]['text':' _baseSeries[i] * multiplier for all i in _baseSeries.','line_number':247,'multiline':False]['text':' Get an iterator pointing to the first element in '_baseSeries' that is greater','line_number':251,'multiline':False]['text':' than'number'.','line_number':252,'multiline':False]['text':' '_baseSeries' contains doubles, so we create a vector that contains the Decimal128','line_number':274,'multiline':False]['text':' versions of the numbers in '_baseSeries' to make it easier to compare values to 'number'.','line_number':275,'multiline':False]['text':' The number is less than or equal to the current min, so it must round down to the','line_number':290,'multiline':False]['text':' previous max. For example, rounding down 0.8 in the E6 series.','line_number':291,'multiline':False]['text':' After scaling up or down, 'number' should now fall into the range spanned by','line_number':296,'multiline':False]['text':' decimalSeries[i] * multiplier for all i in decimalSeries.','line_number':297,'multiline':False]['text':' Get an iterator pointing to the first element in '_baseSeries' that is greater than or','line_number':301,'multiline':False]['text':' equal to 'number'.','line_number':302,'multiline':False]['text':' We need to move the iterator back by one so that we round down to a number that is','line_number':311,'multiline':False]['text':' strictly less than the value we are rounding.','line_number':312,'multiline':False]['text':' It is possible to get a number so small that the resulting multiplier would have to be','line_number':322,'multiline':False]['text':' smaller than the precision of a double, in which case the multiplier would equal 0. In','line_number':323,'multiline':False]['text':' this case, we can round down to 0.0.','line_number':324,'multiline':False]['text':' The number is less than or equal to the current min, so it must round down to the','line_number':334,'multiline':False]['text':' previous max. For example, rounding down 0.8 in the E6 series.','line_number':335,'multiline':False]['text':' After scaling up or down, 'number' should now fall into the range spanned by','line_number':340,'multiline':False]['text':' _baseSeries[i] * multiplier for all i in _baseSeries.','line_number':341,'multiline':False]['text':' Get an iterator pointing to the first element in '_baseSeries' that is greater than or','line_number':345,'multiline':False]['text':' equal to 'number'.','line_number':346,'multiline':False]['text':' We need to move the iterator back by one so that we round down to a number that is','line_number':354,'multiline':False]['text':' strictly less than the value we are rounding.','line_number':355,'multiline':False]['text':'  namespace mongo','line_number':367,'multiline':False]