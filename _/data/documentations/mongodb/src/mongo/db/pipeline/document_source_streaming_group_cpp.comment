['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'
 * $_internalStreamingGroup is an internal stage that is only used in certain cases by the
 * pipeline optimizer. For now it should not be used anywhere outside the MongoDB server.
 ','line_number':58,'multiline':True]['text':' This separate NOINLINE function is used here to decrease stack utilization of readyNextBatch()','line_number':204,'multiline':False]['text':' and prevent stack overflows.','line_number':205,'multiline':False]['text':' Calculate groups until we either exaust pSource or encounter change in monotonic id','line_number':209,'multiline':False]['text':' expression, which means all current groups are finalized.','line_number':210,'multiline':False]['text':' We consumed all advances above.','line_number':226,'multiline':False]['text':' Propagate pause.','line_number':229,'multiline':False]['text':' Nullish and array values will mess us up because they sort differently than they group.','line_number':259,'multiline':False]['text':' A null and a missing value will compare equal in sorting, but could result in different','line_number':260,'multiline':False]['text':' groups, e.g. {_id: {x: null, y: null}} vs {_id: {}}. An array value will sort by the min','line_number':261,'multiline':False]['text':' or max element, with no tie breaking, but group by the whole array. This means that two','line_number':262,'multiline':False]['text':' of the exact same array could appear in the input sequence, but with a different array in','line_number':263,'multiline':False]['text':' the middle of them, and that would still be considered sorted. That would break our','line_number':264,'multiline':False]['text':' batching group logic.','line_number':265,'multiline':False]['text':' If _lastMonotonicIdFieldValues is empty, it is the first document, so the only thing we need','line_number':272,'multiline':False]['text':' to do is initialize it.','line_number':273,'multiline':False]['text':' namespace mongo','line_number':293,'multiline':False]