['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * The VectorClock service provides a collection of cluster-wide logical clocks (including the
 * clusterTime), that are used to provide causal-consistency to various other services.
 ','line_number':52,'multiline':True]['text':' There is a special logic in the storage engine which fixes up Timestamp(0, 0) to the latest','line_number':128,'multiline':False]['text':' available time on the node. Because of this, we should never gossip or have a VectorClock','line_number':129,'multiline':False]['text':' initialised with a value of Timestamp(0, 0), because that would cause the checkpointed value','line_number':130,'multiline':False]['text':' to move forward in time.','line_number':131,'multiline':False]['text':'*
     * Returns true if the passed LogicalTime is set to a value higher than kInitialComponentTime,
     * false otherwise.
     ','line_number':134,'multiline':True]['text':' Decorate ServiceContext with VectorClock* which points to the actual vector clock','line_number':146,'multiline':False]['text':' implementation.','line_number':147,'multiline':False]['text':'*
     * Returns an instantaneous snapshot of the current time of all components.
     ','line_number':157,'multiline':True]['text':'*
     * Adds the necessary fields to outMessage to gossip the current time to another node, taking
     * into account if the gossiping is to an internal or external client (based on the session
     * tags).  Returns true if the ClusterTime was output into outMessage, or false otherwise.
     ','line_number':162,'multiline':True]['text':'*
     * Read the necessary fields from inMessage in order to update the current time, based on this
     * message received from another node, taking into account if the gossiping is from an internal
     * or external client.
     ','line_number':171,'multiline':True]['text':'*
     * Returns true if the clock is enabled and can be used. Defaults to true.
     ','line_number':181,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////////////////////','line_number':186,'multiline':False]['text':' The group of methods below is only used for unit-testing','line_number':187,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////////////////////','line_number':188,'multiline':False]['text':' Returns true if the time was output, false otherwise.','line_number':210,'multiline':False]['text':'*
     * The maximum permissible value for each part of a LogicalTime's Timestamp (ie. "secs" and
     * "inc").
     ','line_number':229,'multiline':True]['text':'*
     * The "name" of the given component, for user-facing error messages. The name used is the
     * field name used when gossiping.
     ','line_number':235,'multiline':True]['text':'*
     * Disables the clock. A disabled clock won't process logical times and can't be re-enabled.
     ','line_number':241,'multiline':True]['text':'*
     * "Rate limiter" for advancing logical times. Rejects newTime if any of its Components have a
     * seconds value that's more than gMaxAcceptableLogicalClockDriftSecs ahead of this node's wall
     * clock.
     ','line_number':246,'multiline':True]['text':'*
     * Used to ensure that gossiped or ticked times never overflow the maximum possible LogicalTime.
     ','line_number':253,'multiline':True]['text':'*
     * Returns the set of components that need to be gossiped to a node internal to the cluster.
     ','line_number':258,'multiline':True]['text':'*
     * As for _gossipOutInternal, except for the components to be sent to a client external to the
     * cluster, eg. a driver or user client. By default, just the ClusterTime is gossiped, although
     * it is disabled in some cases, e.g. when a node is in an unreadable state.
     ','line_number':263,'multiline':True]['text':'*
     * Returns the set of components that should be processed during gossiping in of messages from
     * internal clients.
     ','line_number':273,'multiline':True]['text':'*
     * As for _gossipInInternal, except from a client external to the cluster, eg. a driver or user
     * client. By default, just the ClusterTime is gossiped, although it is disabled in some cases,
     * e.g. when a node is in an unreadable state.
     ','line_number':279,'multiline':True]['text':'*
     * Whether or not it's permissable to refresh external state (eg. updating gossip signing keys)
     * during gossip out.
     ','line_number':289,'multiline':True]['text':'*
     * For each component in the LogicalTimeArray, sets the current time to newTime if the newTime >
     * current time and it passes the rate check.  If any component fails the rate check, then this
     * function uasserts on the first such component (without setting any current times).
     ','line_number':295,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////////////////////','line_number':302,'multiline':False]['text':' The group of methods below is only used for unit-testing','line_number':303,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////////////////////','line_number':304,'multiline':False]['text':' Initialised only once, when the specific vector clock instance gets instantiated on the','line_number':308,'multiline':False]['text':' service context','line_number':309,'multiline':False]['text':' Protects the fields below','line_number':312,'multiline':False]['text':'','line_number':313,'multiline':False]['text':' Note that ConfigTime is advanced under the ReplicationCoordinator mutex, so to avoid','line_number':314,'multiline':False]['text':' potential deadlocks the ReplicationCoordator mutex should never be acquired whilst the','line_number':315,'multiline':False]['text':' VectorClock mutex is held.','line_number':316,'multiline':False]['text':'*
     * Called to determine if the cluster time component should be gossiped in and out to external
     * clients. In some circumstances such gossiping is disabled, e.g. for replica set nodes in
     * unreadable states.
     ','line_number':328,'multiline':True]['text':'*
     * Called in order to output a Component time to the passed BSONObjBuilder, using the
     * appropriate field name and representation for that Component.
     *
     * Returns true if the component is ClusterTime and it was output, or false otherwise.
     ','line_number':335,'multiline':True]['text':'*
     * Called in order to input a Component time into the given LogicalTimeArray from the given
     * BSONObj, using the appropriate field name and representation for that Component.
     ','line_number':346,'multiline':True]['text':' namespace mongo','line_number':359,'multiline':False]