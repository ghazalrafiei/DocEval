['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Note: This function is mutually with computeArrayDiff() and computeDocDiff().','line_number':57,'multiline':False]['text':'*
 * Computes an array diff between the given 'pre' and 'post' images. If 'ignoreSizeLimit' is false,
 * returns a nullptr if the size of the computed diff is larger than the 'post' image.
 ','line_number':65,'multiline':True]['text':' Bailout if the generated diff so far is larger than the 'post' object.','line_number':78,'multiline':False]['text':' If both are arrays or objects, then recursively compute the diff of the respective','line_number':87,'multiline':False]['text':' array or object.','line_number':88,'multiline':False]['text':' When we reach here, only one of postItr or preItr can have more fields. If postItr has more','line_number':103,'multiline':False]['text':' fields, we need to add all the remaining fields.','line_number':104,'multiline':False]['text':' If preItr has more fields, we can ignore the remaining fields, since we only need to do a','line_number':111,'multiline':False]['text':' resize operation.','line_number':112,'multiline':False]['text':'*
 * Computes an object diff between the given 'pre' and 'post' images. If 'ignoreSizeLimit' is false,
 * returns a nullptr if the size of the computed diff is larger than the 'post' image. The
 * 'padding' represents the additional size that needs be added to the size of the diff, while
 * comparing whether the diff is viable.
 ','line_number':120,'multiline':True]['text':' Bailout if the generated diff so far is larger than the 'post' object.','line_number':136,'multiline':False]['text':' Fast path for case where they're equal.','line_number':142,'multiline':False]['text':' Here the current element of preItr and postItr are equal. So it's safe to advance','line_number':144,'multiline':False]['text':' 'postItr' using 'preVal'. This way we can save the cost of constructing 'postVal'.','line_number':145,'multiline':False]['text':' Both are either arrays or objects, recursively compute the diff of the respective','line_number':155,'multiline':False]['text':' array or object.','line_number':156,'multiline':False]['text':' Any other case, just replace with the 'postVal'.','line_number':160,'multiline':False]['text':' If the 'preVal' field name does not exist in the 'post' object then, just remove it.','line_number':166,'multiline':False]['text':' If it present, we do nothing for now, since the field gets inserted later.','line_number':167,'multiline':False]['text':' When we reach here, only one of postItr or preItr can have more fields. Record remaining','line_number':173,'multiline':False]['text':' fields in preItr as removals.','line_number':174,'multiline':False]['text':' Note that we don't need to record these into the 'deletes' set because there are no more','line_number':176,'multiline':False]['text':' fields in the post image.','line_number':177,'multiline':False]['text':' Record remaining fields in postItr as creates.','line_number':184,'multiline':False]['text':' We could not compute sub-diff because the potential sub-diff is bigger than the 'postVal'','line_number':211,'multiline':False]['text':' itself. So we just log the modification as an update.','line_number':212,'multiline':False]['text':'*
 * Appends the given element to the given BSONObjBuilder. If the element is an object, sets the
 * value of the most inner field(s) to 'innerValue'. Otherwise, sets the value of the field to
 * 'outerValue'.
 ','line_number':233,'multiline':True]['text':' outerValue ','line_number':281,'multiline':True]['text':' innerValue ','line_number':282,'multiline':True]['text':' outerValue ','line_number':288,'multiline':True]['text':' innerValue ','line_number':289,'multiline':True]['text':' early exit','line_number':331,'multiline':False]['text':' early exit','line_number':345,'multiline':False]['text':' early exit','line_number':359,'multiline':False]['text':' early exit','line_number':374,'multiline':False]['text':' early exit','line_number':391,'multiline':False]['text':' early exit','line_number':413,'multiline':False]['text':' namespace','line_number':419,'multiline':False]['text':' ignoreSizeLimit ','line_number':422,'multiline':True]['text':' ignoreSizeLimit ','line_number':432,'multiline':True]['text':' namespace mongo::doc_diff','line_number':455,'multiline':False]