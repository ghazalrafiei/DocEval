['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "boost/intrusive/detail/iterator.hpp"','line_number':34,'multiline':False]['text':' IWYU pragma: no_include "boost/move/algo/detail/set_difference.hpp"','line_number':35,'multiline':False]['text':' Type byte + null terminator for field name ','line_number':59,'multiline':True]['text':' boolean value ','line_number':83,'multiline':True]['text':' Add size of field name and the child element.','line_number':92,'multiline':False]['text':' kSubDiffSectionFieldPrefix ','line_number':103,'multiline':True]['text':' Construction of the $v:2 diff needs to handle the same number of levels of recursion as the','line_number':156,'multiline':False]['text':' maximum permitted BSON depth. In order to avoid the possibility of stack overflow, which has','line_number':157,'multiline':False]['text':' been observed in configurations that use small stack sizes(such as 'dbg=on'), we use an explicit','line_number':158,'multiline':False]['text':' stack data structure stored on the heap instead.','line_number':159,'multiline':False]['text':'','line_number':160,'multiline':False]['text':' The Frame class represents one "frame" of this explicit stack.','line_number':161,'multiline':False]['text':' When execute() is called, the Frame may either return a new Frame to be placed on top of the','line_number':166,'multiline':False]['text':' stack, or return nullptr, indicating that the frame has finished and can be destroyed.','line_number':167,'multiline':False]['text':'','line_number':168,'multiline':False]['text':' If a Frame returns a new stack frame, it must be able to pick up where it left off when','line_number':169,'multiline':False]['text':' execute() is called on it again.','line_number':170,'multiline':False]['text':' Helper used for creating a new frame from a sub-diff node. Definition depends on some of the','line_number':175,'multiline':False]['text':' *Frame constructors.','line_number':176,'multiline':False]['text':' Given a 'node' stored in the 'inserts' section of an InternalNode, will either append that','line_number':178,'multiline':False]['text':' node's value to the given builder, or return a new stack frame which will build the object to be','line_number':179,'multiline':False]['text':' inserted. 'node' must be an InsertionNode or a DocumentInsertNode.','line_number':180,'multiline':False]['text':' Stack frame used to maintain state while serializing DocumentInsertionNodes.','line_number':183,'multiline':False]['text':' Stack frame used to maintain state while serializing DocumentSubDiffNodes.','line_number':208,'multiline':False]['text':' The deletes are logged in the form {fieldName: false} in $v:2 format.','line_number':219,'multiline':False]['text':' All inserts have been written so we destroy the insert builder now.','line_number':247,'multiline':False]['text':' Indicates whether or not we've written deletes and updates yet. Since deletes and updates','line_number':271,'multiline':False]['text':' are always leaf nodes, they are always written in the first call to execute().','line_number':272,'multiline':False]['text':' Keeps track of which insertion or subDiff is being serialized.','line_number':275,'multiline':False]['text':' Stack frame used to maintain state while serializing ArrayNodes.','line_number':282,'multiline':False]['text':' If this is the first execution of this frame, append array header and resize field if','line_number':290,'multiline':False]['text':' present.','line_number':291,'multiline':False]['text':' +1 for leading char. +1 to round up from digits10.','line_number':298,'multiline':False]['text':' Make sure that 'doc_diff::kUpdateSectionFieldName' is a single character.','line_number':308,'multiline':False]['text':' This represents an array element that is being created with a sub object.','line_number':333,'multiline':False]['text':'','line_number':334,'multiline':False]['text':' For example {$set: {"a.0.c": 1}} when the input document is {a: []}. Here we','line_number':335,'multiline':False]['text':' need to create the array element at '0', then sub document 'c'.','line_number':336,'multiline':False]['text':' Iterate until the stack size is one and there is no more work to be done.','line_number':372,'multiline':False]['text':' We never expect to see a DocumentInsertionNode under the 'subDiffs' section of an','line_number':394,'multiline':False]['text':' internal node.','line_number':395,'multiline':False]['text':' namespace','line_number':412,'multiline':False]['text':' namespace diff_tree','line_number':417,'multiline':False]['text':' Helper for taking a BSONObj and determining whether it's an array diff or an object diff.','line_number':426,'multiline':False]['text':' Converts a (decimal) string to number. Will throw if the string is not a valid unsigned int.','line_number':451,'multiline':False]['text':' namespace','line_number':457,'multiline':False]['text':' It's an update.','line_number':496,'multiline':False]['text':' It's a sub diff...But which type?','line_number':499,'multiline':False]['text':' Find each section of the diff and initialize an iterator.','line_number':520,'multiline':False]['text':' Create a map only using stack memory for this temporary helper map. Make sure to update the','line_number':530,'multiline':False]['text':' size for the 'static_vector' if changes are made to the number of elements we hold.','line_number':531,'multiline':False]['text':' Once we encounter a sub-diff section, we break and save the iterator for later use.','line_number':553,'multiline':False]['text':' namespace doc_diff','line_number':616,'multiline':False]['text':' namespace mongo','line_number':617,'multiline':False]