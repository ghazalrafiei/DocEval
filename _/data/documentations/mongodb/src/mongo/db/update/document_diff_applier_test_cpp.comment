['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Checks that applying the diff (once or twice) to 'preImage' produces the expected post image.
 ','line_number':51,'multiline':True]['text':' This *MUST* check for binary equality, which is what we enforce between replica set','line_number':57,'multiline':False]['text':' members. Logical equality (through woCompare() or ASSERT_BSONOBJ_EQ) is not enough to show','line_number':58,'multiline':False]['text':' that the applier actually works.','line_number':59,'multiline':False]['text':' Check the case where the object matches the structure we expect.','line_number':197,'multiline':False]['text':' Check cases where the object does not match the structure we expect.','line_number':201,'multiline':False]['text':' In this case the diff is a no-op.','line_number':204,'multiline':False]['text':' Case where the diff contains sub diffs for several array indices.','line_number':224,'multiline':False]['text':' Case where the object matches the structure we expect.','line_number':260,'multiline':False]['text':' Case where the diff is a noop.','line_number':271,'multiline':False]['text':' Case where the pre image has scalars in the array instead of objects. In this case we set','line_number':275,'multiline':False]['text':' some of the indices to null, expecting some future operation to overwrite them. Indexes with','line_number':276,'multiline':False]['text':' an explicit 'update' operation will be overwritten.','line_number':277,'multiline':False]['text':' Case where the pre image array is too short. Since the diff contains an array of object sub','line_number':281,'multiline':False]['text':' diffs, the output will be all nulls, which will presumably be overwritten by a future','line_number':282,'multiline':False]['text':' operation.','line_number':283,'multiline':False]['text':' Case where the pre image array is longer than the (presumed) post image.','line_number':287,'multiline':False]['text':' Case where the pre image 'arr' field is an object instead of an array. In this','line_number':292,'multiline':False]['text':' situation, we know that some later operation will overwrite the field, so we set it to null','line_number':293,'multiline':False]['text':' ensuring that it keeps its position in the document.','line_number':294,'multiline':False]['text':' Case where pre image 'arr' field is a scalar. Again, we set it to null.','line_number':298,'multiline':False]['text':' Case where an array diff rewrites several non contiguous indices which are objects.','line_number':303,'multiline':False]['text':' Case where the object matches the structure we expect.','line_number':318,'multiline':False]['text':' Case where null padding is necessary before the last element.','line_number':322,'multiline':False]['text':' Case where the diff is a noop.','line_number':326,'multiline':False]['text':' Case where the pre image array is longer than the (presumed) post image.','line_number':330,'multiline':False]['text':' Case where the pre image array contains sub-arrays. The sub-arrays will get overwritten.','line_number':334,'multiline':False]['text':' Case where the pre image array contains objects. The objects will be replaced','line_number':338,'multiline':False]['text':' Case where 'arr' field is an object. The type mismatch implies that a future operation will','line_number':342,'multiline':False]['text':' re-write the field, so it is set to null.','line_number':343,'multiline':False]['text':' Case where 'arr' field is a scalar. The type mismatch implies that a future operation will','line_number':347,'multiline':False]['text':' re-write the field, so it is set to null.','line_number':348,'multiline':False]['text':' Case where the pre image 'arr' field is an object instead of an array. In this','line_number':352,'multiline':False]['text':' situation, we know that some later operation will overwrite the field, so we set it to null','line_number':353,'multiline':False]['text':' ensuring that it keeps its position in the document.','line_number':354,'multiline':False]['text':' Case where pre image 'arr' field is a scalar. Again, we set it to null.','line_number':358,'multiline':False]['text':' Within the same update type.','line_number':379,'multiline':False]['text':' Across update types.','line_number':394,'multiline':False]['text':' namespace','line_number':409,'multiline':False]['text':' namespace mongo::doc_diff','line_number':410,'multiline':False]