['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'* Accumulates unaligned input, and presents it in block aligned segments to a caller provided
 * callback.
 ','line_number':43,'multiline':True]['text':' We must always attempt to accumulate a block. We must only perform the operation when we','line_number':55,'multiline':False]['text':' would overflow a block. The finalization operation must have the last block of data','line_number':56,'multiline':False]['text':' available.','line_number':57,'multiline':False]['text':' Pad block. This needs to happen if the block is partially full from a previous iteration.','line_number':61,'multiline':False]['text':' Otherwise, we don't need to align with earlier input, and can consume the data straight','line_number':62,'multiline':False]['text':' out of the input.','line_number':63,'multiline':False]['text':' If we've consumed all the input, we're done. Processing will happen in later method','line_number':72,'multiline':False]['text':' calls.','line_number':73,'multiline':False]['text':' We have more input to consume. If we already have a block, flush it.','line_number':78,'multiline':False]['text':' We can now process a whole number of blocks. However, we must not process the last block,','line_number':90,'multiline':False]['text':' which is defered until later calls.','line_number':91,'multiline':False]['text':' We must now pack the remaining data into the block','line_number':114,'multiline':False]['text':' buffer to store a single block of data, to be encrypted by update when filled, or by finalize','line_number':127,'multiline':False]['text':' with padding. 16 is the block length for AES.','line_number':128,'multiline':False]['text':' namespace crypto','line_number':134,'multiline':False]['text':' namespace mongo','line_number':135,'multiline':False]