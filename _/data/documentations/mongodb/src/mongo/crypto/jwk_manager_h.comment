['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
     * Fetch a specific JWSValidator from the JWKManager by keyId.
     * If the keyId does not exist, it will refresh _keyMaterial and _validators and retry.
     * If it still cannot be found, it will return an error.
     ','line_number':55,'multiline':True]['text':'*
     * Fetches a JWKS file for the specified Issuer URL using _fetcher, parses them as keys,
     * and instantiates JWSValidator instances. If the fetch fails or the parsed keys are invalid,
     * it leaves the validators and keyMaterial as-is and returns an error Status.
     ','line_number':66,'multiline':True]['text':'*
     * Get current keys.
     ','line_number':73,'multiline':True]['text':'*
     * Serialize the JWKs stored in this key manager into the BSONObjBuilder.
     ','line_number':84,'multiline':True]['text':' Stores the current key material of the manager, which may have been refreshed.','line_number':94,'multiline':False]['text':' If an existing key got deleted or modified while doing a just in time refresh, we activate','line_number':99,'multiline':False]['text':' this flag to indicate that a refresh occurred during this JWKManager's lifetime.','line_number':100,'multiline':False]['text':' namespace mongo::crypto','line_number':104,'multiline':False]