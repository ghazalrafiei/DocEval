['text':'*
 *    Copyright (C) 2023-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "ext/alloc_traits.h"','line_number':30,'multiline':False]['text':' The following is marker to ensure `_ie` executes all tasks scheduled before this point.','line_number':98,'multiline':False]['text':' The barriers ensure the worker always tries to schedule its task while shutdown is in','line_number':161,'multiline':False]['text':' progress (i.e., the destructor for `InlineExecutor` is draining scheduled tasks).','line_number':162,'multiline':False]['text':' No need to synchronize as this is only accessed by the main thread.','line_number':204,'multiline':False]['text':'
     * Helper to run most of the tests for this fixture, which blocks until the semi-future produced
     * by the provided `FutureFactory` becomes ready. This helper expects the semi-future to be
     * initially non-ready, and become ready after a task is successfully executed by the instance
     * of `InlineExecutor`.
     ','line_number':236,'multiline':True]['text':'
     * The following wraps a `TaskExecutor` to emulate a networking baton, in particular its
     * `waitUntil` functionality that is internally used by `SleepableExecutor`.
     ','line_number':280,'multiline':True]['text':' The rest of the methods are not implemented.','line_number':298,'multiline':False]['text':'*
 * Example for using `AsyncTry` with `InlineExecutor`. Note that the instance of `InlineExecutor`
 * must remain alive so long as `AsyncTry` is scheduling new iterations (i.e., the returned future
 * is not ready).
 ','line_number':351,'multiline':True]['text':' namespace','line_number':368,'multiline':False]['text':' namespace mongo::executor','line_number':369,'multiline':False]