['text':'*
 *    Copyright (C) 2020-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' opCtx ','line_number':53,'multiline':True]['text':' collator ','line_number':54,'multiline':True]['text':' dummy nss ','line_number':55,'multiline':True]['text':' Expression matcher doesn't have copy constructor, so wrap it in a shared_ptr for capture.','line_number':56,'multiline':False]['text':' The main responsibility of the mock network is to host incoming requests and scheduled','line_number':72,'multiline':False]['text':' responses. Additionally, the mock network interface is a de facto lock-step scheduler.','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' The executor thread and the mock/test thread run in turn. The test thread','line_number':75,'multiline':False]['text':' (1) triggers the tested behavior, e.g. by simulating a command;','line_number':76,'multiline':False]['text':' (2) responds to network requests;','line_number':77,'multiline':False]['text':' (3) advances the mock clock; and','line_number':78,'multiline':False]['text':' (4) handles some network operations implicitly (explained below).','line_number':79,'multiline':False]['text':' The executor runs the asynchronous jobs which may schedule network requests.','line_number':80,'multiline':False]['text':'','line_number':81,'multiline':False]['text':' The executor thread gets the first turn, then each of them yields at the end of their','line_number':82,'multiline':False]['text':' turns by enabling and signaling the other. The executor thread yields by calling','line_number':83,'multiline':False]['text':' waitForWork() on the mock network; the test thread yields by calling','line_number':84,'multiline':False]['text':' runReadyNetworkOperations().','line_number':85,'multiline':False]['text':'','line_number':86,'multiline':False]['text':' runReadyNetworkOperations() also first checks for expired scheduled works (e.g. request','line_number':87,'multiline':False]['text':' timeout) and executes the expired works. This behavior is the item (4) mentioned above.','line_number':88,'multiline':False]['text':'','line_number':89,'multiline':False]['text':' After yielding to the executor thread, it's possible that new expired scheduled works','line_number':90,'multiline':False]['text':' were added by the executor. That's why we need to double check if there's any ready','line_number':91,'multiline':False]['text':' network operations before deciding the network is idle.','line_number':92,'multiline':False]['text':'','line_number':93,'multiline':False]['text':' External threads may make things more complex. For example, they can schedule new','line_number':94,'multiline':False]['text':' requests right after we thought the network was idle. However, that's always the case','line_number':95,'multiline':False]['text':' with or without the mock framework.','line_number':96,'multiline':False]['text':' Peek the next request.','line_number':99,'multiline':False]['text':' Requests may have already been scheduled due to simultaneous interruptions.','line_number':101,'multiline':False]['text':' We ignore the next request if it's not expected (or already satisfied).','line_number':106,'multiline':False]['text':' Default expectations are always the oldest in the vector, so matching expectations','line_number':107,'multiline':False]['text':' in LIFO order allows us to always see the overrides first.','line_number':108,'multiline':False]['text':' (Iterating a vector backwards is much cheaper than pushing to its front.)','line_number':109,'multiline':False]['text':' Consume the next request and execute the action.','line_number':116,'multiline':False]['text':' Continue handling network operations and process requests.','line_number':126,'multiline':False]['text':' The executor is idle since we just ran it. Check hasReadyNetworkOperations so that no','line_number':131,'multiline':False]['text':' scheduled work is waiting for the network thread.','line_number':132,'multiline':False]['text':' If there exist extra threads beside the executor and the mock/test thread, when the','line_number':137,'multiline':False]['text':' network is idle, the extra threads may be running and will schedule new requests. As a','line_number':138,'multiline':False]['text':' result, the current best practice is to busy-loop to prepare for that.','line_number':139,'multiline':False]['text':' Even if we cannot reach target time, we are still making progress in the loop.','line_number':151,'multiline':False]['text':' Run until idle.','line_number':154,'multiline':False]['text':' namespace mock','line_number':160,'multiline':False]['text':' namespace test','line_number':161,'multiline':False]['text':' namespace mongo','line_number':162,'multiline':False]