['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Generic wrapper for making an ASIO socket get_option or set_option call
 * having a payload of type `T`, which is usually just `int` so it's the default.
 * Can be value-initializd with a `T`. A reference to the payload is available
 * using the dereferencing operators.
 *
 * Models Asio GettableSocketOption and SettableSocketOption.
 * https://www.boost.org/doc/libs/1_80_0/doc/html/boost_asio/reference/GettableSocketOption.html
 * https://www.boost.org/doc/libs/1_80_0/doc/html/boost_asio/reference/SettableSocketOption.html
 *
 * The Asio-required accessors must accept a `Protocol` argument, which we ignore.
 * The kinds of options we use don't need it.
 * https://www.boost.org/doc/libs/1_80_0/doc/html/boost_asio/reference/Protocol.html
 *
 * Example:
 *     using TcpInfoOption = SocketOption<IPPROTO_TCP, TCP_INFO, tcp_info>;
 *     ...
 *     TcpInfoOption tcpiOption;
 *     socket.get_option(tcpiOption);
 *     tcp_info& infoOut = *tcpiOption;
 ','line_number':54,'multiline':True]['text':' Utility function to turn an ASIO endpoint into a mongo HostAndPort','line_number':126,'multiline':False]['text':'*
 * The ASIO implementation of poll (i.e. socket.wait()) cannot poll for a mask of events, and
 * doesn't support timeouts.
 *
 * This wraps up ::select/::poll for Windows/POSIX for a single socket and handles EINTR on POSIX
 *
 * - On timeout: it returns Status(ErrorCodes::NetworkTimeout)
 * - On poll returning with an event: it returns the EventsMask for the socket, the caller must
 * check whether it matches the expected events mask.
 * - On error: it returns a Status(ErrorCodes::InternalError)
 ','line_number':134,'multiline':True]['text':'*
 * Attempts to fill up the passed in buffer sequence with bytes from the underlying stream
 * without blocking. Returns the number of bytes we were actually able to fill in. Throws
 * on failure to read socket for reasons other than blocking.
 ','line_number':149,'multiline':True]['text':' On a completely empty socket, receive returns 0 bytes read and sets','line_number':162,'multiline':False]['text':' the error code to either would_block or try_again. Since this isn't','line_number':163,'multiline':False]['text':' actually an error condition for our purposes, we ignore these two','line_number':164,'multiline':False]['text':' errors.','line_number':165,'multiline':False]['text':'*
 * Peeks at a fragment of a client issued TLS handshake packet. Returns a TLS alert
 * packet if the client has selected a protocol which has been disabled by the server.
 ','line_number':174,'multiline':True]['text':'*
 * setSocketOption failed. Log the error.
 * This is in the .cpp file just to keep LOGV2 out of this header.
 ','line_number':181,'multiline':True]['text':'*
 * Calls Asio `socket.set_option(opt)` with better failure diagnostics.
 * To be used instead of Asio `socket.set_option``, because errors are hard to diagnose.
 * Emits a log message about what option was attempted and what went wrong with
 * it. The `note` string should uniquely identify the source of the call.
 *
 * Two overloads are provided matching the Asio `socket.set_option` overloads, with an additional
 * parameter to indicate the level at which the failure diagnostics should logged.
 *
 *     setSocketOption(socket, opt, note, errorLogSeverity)
 *     setSocketOption(socket, opt, note, errorLogSeverity, ec)
 *
 * If an `ec` is provided, errors are reported by mutating it.
 * Otherwise, the Asio `std::system_error` exception is rethrown.
 ','line_number':190,'multiline':True]['text':'*
 * Pass this to asio functions in place of a callback to have them return a Future<T>. This behaves
 * similarly to asio::use_future_t, however it returns a mongo::Future<T> rather than a
 * std::future<T>.
 *
 * The type of the Future will be determined by the arguments that the callback would have if one
 * was used. If the arguments start with std::error_code, it will be used to set the Status of the
 * Future and will not affect the Future's type. For the remaining arguments:
 *  - if none: Future<void>
 *  - if one: Future<T>
 *  - more than one: Future<std::tuple<A, B, ...>>
 *
 * Example:
 *    Future<size_t> future = my_socket.async_read_some(my_buffer, UseFuture{});
 ','line_number':246,'multiline':True]['text':'*
     * If an Asio callback takes a leading error_code, it's stripped from
     * the Future's value_type. Any errors reported by Asio will instead
     * be delivered by setting the Future's error Status.
     ','line_number':276,'multiline':True]['text':' namespace mongo::transport','line_number':338,'multiline':False]['text':' namespace asio','line_number':346,'multiline':False]