['text':'*
 *    Copyright (C) 2021-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Add additional context string to Status reason if included.','line_number':48,'multiline':False]['text':' If the ec.category() is a mongoErrorCategory() then this error was propogated from','line_number':76,'multiline':False]['text':' mongodb code and we should just pass the error cdoe along as-is.','line_number':77,'multiline':False]['text':' Otherwise it's an error code from the network and we should pass it along as a','line_number':80,'multiline':False]['text':' SocketException','line_number':81,'multiline':False]['text':' Either way, include the error message.','line_number':83,'multiline':False]['text':' On Windows, use `select` to approximate `poll`.','line_number':105,'multiline':False]['text':' Windows `select` has a couple special rules:','line_number':106,'multiline':False]['text':'   - any empty fd_set args *must* be passed as nullptr.','line_number':107,'multiline':False]['text':'   - the fd_set args can't *all* be nullptr.','line_number':108,'multiline':False]['text':' Always interested in errors.','line_number':119,'multiline':False]['text':' This method's caller should have read in at least one MSGHEADER::Value's worth of data.','line_number':180,'multiline':False]['text':' The fragment we are about to examine must be strictly smaller.','line_number':181,'multiline':False]['text':'*
     * The fragment we are to examine is a record, containing a handshake, containing a
     * ClientHello. We wish to examine the advertised protocol version in the ClientHello.
     * The following roughly describes the contents of these structures. Note that we do not
     * need, or wish to, examine the entire ClientHello, we're looking exclusively for the
     * client_version.
     *
     * Below is a rough description of the payload we will be examining. We shall perform some
     * basic checks to ensure the payload matches these expectations. If it does not, we should
     * bail out, and not emit protocol version alerts.
     *
     * enum {alert(21), handshake(22)} ContentType;
     * TLSPlaintext {
     *   ContentType type = handshake(22),
     *   ProtocolVersion version; // Irrelevant. Clients send the real version in ClientHello.
     *   uint16 length;
     *   fragment, see Handshake stuct for contents
     * ...
     * }
     *
     * enum {client_hello(1)} HandshakeType;
     * Handshake {
     *   HandshakeType msg_type = client_hello(1);
     *   uint24_t length;
     *   ClientHello body;
     * }
     *
     * ClientHello {
     *   ProtocolVersion client_version; // <- This is the value we want to extract.
     * }
     ','line_number':189,'multiline':True]['text':' Parse the record header.','line_number':231,'multiline':False]['text':' Extract the ContentType from the header, and ensure it is a handshake.','line_number':232,'multiline':False]['text':' Skip the record's ProtocolVersion. Clients tend to send TLS 1.0 in','line_number':237,'multiline':False]['text':' the record, but then their real protocol version in the enclosed ClientHello.','line_number':238,'multiline':False]['text':' Parse the record length. It should be be larger than the remaining expected payload.','line_number':244,'multiline':False]['text':' Parse the handshake header.','line_number':250,'multiline':False]['text':' Extract the HandshakeType, and ensure it is a ClientHello.','line_number':251,'multiline':False]['text':' Extract the handshake length, and ensure it is larger than the remaining expected','line_number':256,'multiline':False]['text':' payload. This requires a little work because the packet represents it with a uint24_t.','line_number':257,'multiline':False]['text':' Invariant: We read exactly as much data as expected.','line_number':276,'multiline':False]['text':'*
         * The structure for this alert packet is as follows:
         * TLSPlaintext {
         *   ContentType type = alert(21);
         *   ProtocolVersion = versionBytes;
         *   uint16_t length = 2
         *   fragment = AlertDescription {
         *     AlertLevel level = fatal(2);
         *     AlertDescription = protocol_version(70);
         *   }
         *
         ','line_number':288,'multiline':True]['text':' TLS1.2 cannot be distinguished from TLS1.3, just by looking at the ProtocolVersion bytes.','line_number':311,'multiline':False]['text':' TLS 1.3 compatible clients advertise a "supported_versions" extension, which we would','line_number':312,'multiline':False]['text':' have to extract here.','line_number':313,'multiline':False]['text':' Hopefully by the time this matters, OpenSSL will properly emit protocol_version alerts.','line_number':314,'multiline':False]['text':' namespace mongo::transport','line_number':337,'multiline':False]