['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' asio_session.h has some header dependencies that require it to be the last header.','line_number':74,'multiline':False]['text':' __linux__','line_number':100,'multiline':False]['text':' namespace','line_number':103,'multiline':False]['text':' The underlying timer won't get destroyed until the last promise from _asyncWait','line_number':122,'multiline':False]['text':' has been filled, so cancel the timer so our promises get fulfilled','line_number':123,'multiline':False]['text':' If we have a baton try to cancel that.','line_number':128,'multiline':False]['text':' Otherwise there could be a previous timer that was scheduled normally.','line_number':134,'multiline':False]['text':' Provides `ClockSource` API for the reactor's clock source.','line_number':246,'multiline':False]['text':' Skip the expensive lock acquisition and `compareAndSwap` in the common path.','line_number':309,'multiline':False]['text':' The following ensures only one thread continues to spawn a thread to run the reactor. It also','line_number':313,'multiline':False]['text':' ensures concurrent `start()` and `stop()` invocations are serialized. Holding the lock','line_number':314,'multiline':False]['text':' guarantees that the following runs either before or after running `stop()`. Note that using','line_number':315,'multiline':False]['text':' `compareAndSwap` while holding the lock is for simplicity and not necessary.','line_number':316,'multiline':False]['text':' It's possible for `stop()` to be called without `start()` having been called (or for them to','line_number':335,'multiline':False]['text':' be called concurrently), so we only proceed with stopping the reactor and joining the thread','line_number':336,'multiline':False]['text':' if we've already transitioned to the `kStarted` state.','line_number':337,'multiline':False]['text':' TODO SERVER-57253 We can start this service as part of starting `AsioTransportLayer`.','line_number':355,'multiline':False]['text':' Then, we can remove the following invocation of `start()`.','line_number':356,'multiline':False]['text':' Tracks the amount of incoming connections waiting to be accepted by the server on this','line_number':382,'multiline':False]['text':' acceptor.','line_number':383,'multiline':False]['text':' We always want to resolve the "service" (port number) as a numeric.','line_number':449,'multiline':False]['text':'','line_number':450,'multiline':False]['text':' We intentionally don't set the Resolver::address_configured flag because it might prevent','line_number':451,'multiline':False]['text':' us from connecting to localhost on hosts with only a loopback interface','line_number':452,'multiline':False]['text':' (see SERVER-1579).','line_number':453,'multiline':False]['text':' We resolve in two steps, the first step tries to resolve the hostname as an IP address -','line_number':456,'multiline':False]['text':' that way if there's a DNS timeout, we can still connect to IP addresses quickly.','line_number':457,'multiline':False]['text':' (See SERVER-1709)','line_number':458,'multiline':False]['text':'','line_number':459,'multiline':False]['text':' Then, if the numeric (IP address) lookup failed, we fall back to DNS or return the error','line_number':460,'multiline':False]['text':' from the resolver.','line_number':461,'multiline':False]['text':' We follow the same numeric -> hostname fallback procedure as the synchronous resolver','line_number':472,'multiline':False]['text':' function for setting resolver flags (see above).','line_number':473,'multiline':False]['text':' The handshake is complete once either of the following passes the finish line:','line_number':624,'multiline':False]['text':' - The thread running the handshake returns from `handshakeSSLForEgress`.','line_number':625,'multiline':False]['text':' - The thread running `TimerService` cancels the handshake due to a timeout.','line_number':626,'multiline':False]['text':' Schedules a task to cancel the synchronous handshake if it does not complete before the','line_number':629,'multiline':False]['text':' specified timeout.','line_number':630,'multiline':False]['text':' TODO SERVER-62035: enable the following on Windows.','line_number':634,'multiline':False]['text':' We only take this path if the handshake times out. Overwrite the socket exception','line_number':656,'multiline':False]['text':' with a network timeout.','line_number':657,'multiline':False]['text':' We loop below if ec == interrupted to deal with EINTR failures, otherwise we handle','line_number':704,'multiline':False]['text':' the error/timeout below.','line_number':705,'multiline':False]['text':' Normally, the unique_ptr returned by makeTimer() is stored somewhere where we can','line_number':831,'multiline':False]['text':' ensure its validity. Here, we have to make it a shared_ptr and capture it so it','line_number':832,'multiline':False]['text':' remains valid until the timer fires.','line_number':833,'multiline':False]['text':' Self-deduplicating list of unique endpoint addresses.','line_number':989,'multiline':False]['text':' Allow the server to start when "ipv6: true" and "bindIpAll: true", but the platform','line_number':1034,'multiline':False]['text':' does not support ipv6 (e.g., ipv6 kernel module is not loaded in Linux).','line_number':1035,'multiline':False]['text':' Loop through the acceptors and cancel their calls to async_accept. This will prevent new','line_number':1189,'multiline':False]['text':' connections from being opened.','line_number':1190,'multiline':False]['text':' We were already stopped','line_number':1234,'multiline':False]['text':' Egress only reactors never start a listener','line_number':1252,'multiline':False]['text':' If the listener never started, then we can return now','line_number':1258,'multiline':False]['text':' Spam stop() on the reactor, it interrupts run()','line_number':1263,'multiline':False]['text':' Release the lock and wait for the thread to die','line_number':1272,'multiline':False]['text':' Connection reset errors classically present as asio::error::eof, but can bubble up as','line_number':1296,'multiline':False]['text':' asio::error::invalid_argument when calling into socket.set_option().','line_number':1297,'multiline':False]['text':'* Tricky: TCP can be represented by IPPROTO_IP or IPPROTO_TCP. ','line_number':1301,'multiline':True]['text':' namespace','line_number':1310,'multiline':False]['text':' Swallow connection reset errors.','line_number':1356,'multiline':False]['text':' _acceptConnection() is accessed by only one thread (i.e. the listener thread), so an','line_number':1365,'multiline':False]['text':' atomic increment is not required here','line_number':1366,'multiline':False]['text':' Swallow connection reset errors.','line_number':1393,'multiline':False]['text':' asyncOCSPStaple ','line_number':1482,'multiline':True]['text':' namespace transport','line_number':1498,'multiline':False]['text':' namespace mongo','line_number':1499,'multiline':False]