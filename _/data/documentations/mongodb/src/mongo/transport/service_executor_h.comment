['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'
 * This is the interface for all ServiceExecutors.
 ','line_number':50,'multiline':True]['text':'*
         * Awaits the availability of incoming data for the specified session. On success, it will
         * schedule the callback on current executor. Otherwise, it will invoke the callback with a
         * non-okay status on the caller thread.
         ','line_number':59,'multiline':True]['text':'*
     * Starts up all executors registered as ServiceContext decorations.
     * If an executor fails to start up, it will throw and that exception will bubble up here.
     ','line_number':67,'multiline':True]['text':'*
     * Shuts down all executors registered as ServiceContext decorations.
     * If an executor fails to shut down, a warning will be logged, but shutdowns will continue.
     ','line_number':73,'multiline':True]['text':'*
     * Append statistics to the `network.serviceExecutors` serverStatus output.
     ','line_number':79,'multiline':True]['text':'
     * Starts the ServiceExecutor. This may create threads even if no tasks are scheduled.
     ','line_number':88,'multiline':True]['text':'
     * Stops and joins the ServiceExecutor. Any outstanding tasks will not be executed, and any
     * associated callbacks waiting on I/O may get called with an error code.
     *
     * This should only be called during server shutdown to gracefully destroy the ServiceExecutor
     ','line_number':93,'multiline':True]['text':'* Appends statistics about task scheduling to a BSONObjBuilder for serverStatus output. ','line_number':103,'multiline':True]['text':'* Yield if this executor controls more threads than we have cores. ','line_number':106,'multiline':True]['text':'*
     * Returns the class name of this service executor.
     * Used in logging and exception messaging.
     ','line_number':109,'multiline':True]['text':'*
 * ServiceExecutorContext determines which ServiceExecutor is used for each Client.
 ','line_number':116,'multiline':True]['text':' Roughly a 1:1 mapping to the ServiceExecutor type which will be used.','line_number':121,'multiline':False]['text':' ThreadModel::kSynchronous + canUseReserved may result in ServiceExecutorReserved.','line_number':122,'multiline':False]['text':' Manually hoist these enum values into the class to aid callsite usage.','line_number':128,'multiline':False]['text':' As our toolchain is updated, we may be able to replace this with a simple:','line_number':129,'multiline':False]['text':' `using enum ThreadModel;`','line_number':130,'multiline':False]['text':'*
     * Get a pointer to the ServiceExecutorContext for a given client.
     *
     * This function is valid to invoke either on the Client thread or with the Client lock.
     ','line_number':134,'multiline':True]['text':'*
     * Set the ServiceExecutorContext for a given client.
     *
     * This function may only be invoked once and only while under the Client lock.
     ','line_number':141,'multiline':True]['text':'*
     * Reset the ServiceExecutorContext for a given client.
     *
     * This function may only be invoked once and only while under the Client lock.
     ','line_number':149,'multiline':True]['text':'* Test only ','line_number':157,'multiline':True]['text':'*
     * Set the thread model for the associated Client's service execution.
     *
     * These functions are only valid to invoke with the Client lock or before the Client is set.
     ','line_number':165,'multiline':True]['text':'*
     * Set if reserved resources are available for the associated Client's service execution.
     *
     * This function is only valid to invoke with the Client lock or before the Client is set.
     ','line_number':172,'multiline':True]['text':'*
     * Get an appropriate ServiceExecutor given the current parameters.
     *
     * This function is only valid to invoke from the associated Client thread. This function does
     * not require the Client lock since all writes must also happen from that thread.
     ','line_number':179,'multiline':True]['text':'* For tests to override the behavior of `getServiceExecutor()`. ','line_number':194,'multiline':True]['text':'*
 * A small statlet for tracking which executors may be in use.
 ','line_number':198,'multiline':True]['text':'*
     * Get the current value of ServiceExecutorStats for the given ServiceContext.
     *
     * Note that this value is intended for statistics and logging. It is unsynchronized and
     * unsuitable for informing decisions in runtime.
     ','line_number':203,'multiline':True]['text':' The total number of Clients currently active.','line_number':211,'multiline':False]['text':' The number of Clients that are allowed to ignore maxConns and use reserved resources.','line_number':214,'multiline':False]['text':' namespace mongo::transport','line_number':218,'multiline':False]