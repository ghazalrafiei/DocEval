['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: keep','line_number':31,'multiline':False]['text':' IWYU pragma: no_include "asio/impl/dispatch.hpp"','line_number':41,'multiline':False]['text':' IWYU pragma: no_include "asio/impl/io_context.hpp"','line_number':42,'multiline':False]['text':' IWYU pragma: no_include "asio/impl/post.hpp"','line_number':43,'multiline':False]['text':' IWYU pragma: no_include "asio/impl/system_executor.hpp"','line_number':44,'multiline':False]['text':' Run time + generous scheduling time slice','line_number':89,'multiline':False]['text':' This implements the portions of the transport::Reactor based on ASIO, but leaves out
 * the methods not needed by ServiceExecutors.
 *
 * TODO Maybe use AsioTransportLayer's Reactor?
 ','line_number':101,'multiline':True]['text':' Schedule a task and ensure it has been executed.','line_number':182,'multiline':False]['text':' Task runs on different thread than caller.','line_number':201,'multiline':False]['text':' Task runs on same thread as caller.','line_number':208,'multiline':False]['text':'* Implements a threadsafe 1-shot pause and resume. ','line_number':212,'multiline':True]['text':' Expect ServiceExecutorSynchronous to schedule on a worker thread allowing','line_number':240,'multiline':False]['text':' "caller" to be pushed onto the events vector once the task blocks on its breakpoint.','line_number':241,'multiline':False]['text':' If the task executes in the caller's thread, then bp.pause() blocks indefinitely.','line_number':242,'multiline':False]['text':' If the task thread never executes, then bp.await() blocks indefinitely.','line_number':243,'multiline':False]['text':' Ensure that tasks queued during the running of a task are executed','line_number':261,'multiline':False]['text':' in the order they are enqueued.','line_number':262,'multiline':False]['text':'* Ensure that tasks queued after a task queue has emptied will still run. ','line_number':291,'multiline':True]['text':' In the case of ServiceExecutorInline we know the queue is empty after','line_number':303,'multiline':False]['text':' the first schedule call since it blocks, but we don't know this is','line_number':304,'multiline':False]['text':' true for ServiceExecutorSynchronous, so we potentially need to wait.','line_number':305,'multiline':False]['text':' Don't wait longer than 10 seconds though.','line_number':306,'multiline':False]['text':' namespace','line_number':329,'multiline':False]['text':' namespace mongo::transport','line_number':330,'multiline':False]