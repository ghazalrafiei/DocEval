['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Test that if two PsuedoRandom's have the same seed, then subsequent calls to
 * nextCanonicalDouble() will return the same value.
 ','line_number':115,'multiline':True]['text':'*
 * Test that if two PsuedoRandom's have different seeds, then nextCanonicalDouble() will return
 * different values.
 ','line_number':127,'multiline':True]['text':'*
 * Test that nextCanonicalDouble() avoids returning a value soon after it has previously returned
 * that value.
 ','line_number':137,'multiline':True]['text':'*
 * Test that nextCanonicalDouble() is at least very likely to return values in [0,1).
 ','line_number':150,'multiline':True]['text':' Generate 1000 int32s and assert that each bit is set between 40% and 60% of the time. This is','line_number':163,'multiline':False]['text':' a bare minimum sanity check, not an attempt to ensure quality random numbers.','line_number':164,'multiline':False]['text':' Generate 1000 int64s and assert that each bit is set between 40% and 60% of the time. This is','line_number':187,'multiline':False]['text':' a bare minimum sanity check, not an attempt to ensure quality random numbers.','line_number':188,'multiline':False]['text':'*
 * Test uniformity of nextInt32(max)
 ','line_number':228,'multiline':True]['text':' Break the range into sections. ','line_number':233,'multiline':True]['text':' Check that all sections get roughly equal # of hits ','line_number':234,'multiline':True]['text':' namespace mongo','line_number':274,'multiline':False]