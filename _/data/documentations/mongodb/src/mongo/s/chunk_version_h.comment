['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * The most-significant component of the shard versioning protocol (collection epoch/timestamp).
 ','line_number':51,'multiline':True]['text':'*
     * Returns whether the combination of epoch/timestamp for two collections indicates that they
     * are the same collection for the purposes of sharding or not.
     *
     * Will throw if the combinations provided are illegal (for example matching timestamps, but
     * different epochs or vice-versa).
     ','line_number':58,'multiline':True]['text':' TODO: Do not add any new usages of these methods. Use isSameCollection instead.','line_number':69,'multiline':False]['text':' ignored OID is zero time, max machineId/inc','line_number':82,'multiline':False]['text':' ignored Timestamp is the largest timestamp','line_number':83,'multiline':False]['text':'*
 * Reflects the placement information for a collection. An object of this class has no meaning on
 * its own without the Generation component above, that's why most of its methods are protected and
 * are exposed as semantic checks in ChunkVersion below.
 ','line_number':95,'multiline':True]['text':' TODO: Do not add any new usages of these methods. Use isSamePlacement instead.','line_number':105,'multiline':False]['text':'*
     * Returns whether two collection placements are compatible with each other (meaning that they
     * refer to the same distribution of chunks across the cluster).
     ','line_number':116,'multiline':True]['text':' The combined major/minor version, which exists as subordinate to the collection generation','line_number':124,'multiline':False]['text':'*
 * ChunkVersions consist of a major/minor version scoped to a version epoch
 *
 * Version configurations (format: major version, epoch):
 *
 * 1. (0, 0) - collection is dropped.
 * 2. (0, n), n > 0 - applicable only to shard placement version; shard has no chunk.
 * 3. (n, 0), n > 0 - invalid configuration.
 * 4. (n, m), n > 0, m > 0 - normal sharded collection placement version.
 ','line_number':128,'multiline':True]['text':'*
     * The name for the chunk version information field, which ddl operations use to send only
     * the placement information. String is shardVersion for compatibility with previous versions.
     ','line_number':140,'multiline':True]['text':'*
     * Indicates that the collection is not sharded.
     ','line_number':151,'multiline':True]['text':'*
     * Indicates that placement version checking must be skipped.
     ','line_number':158,'multiline':True]['text':' Note: this shouldn't be used as a substitute for version except in specific cases -','line_number':185,'multiline':False]['text':' epochs make versions more complex','line_number':186,'multiline':False]['text':' Can we write to this data and not have a problem?','line_number':203,'multiline':False]['text':' Unsharded timestamp cannot be compared with other timestamps','line_number':208,'multiline':False]['text':'*
     * Returns true if both versions are comparable (i.e. neither version is UNSHARDED) and the
     * current version is older than the other one. Returns false otherwise.
     ','line_number':214,'multiline':True]['text':'*
     * Returns true if both versions are comparable (i.e. same epochs) and the current version is
     * older or equal than the other one. Returns false otherwise.
     ','line_number':231,'multiline':True]['text':' namespace mongo','line_number':255,'multiline':False]