['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' IWYU pragma: no_include "cxxabi.h"','line_number':36,'multiline':False]['text':' Set the initial clusterTime.','line_number':170,'multiline':False]['text':' Set up a tick source for transaction metrics.','line_number':173,'multiline':False]['text':'*
     * Verifies "abortTransaction" is sent to each expected HostAndPort with the given lsid and
     * txnNumber. The aborts may come in any order.
     ','line_number':186,'multiline':True]['text':' Enables the transaction router to retry within a transaction on stale version and snapshot','line_number':270,'multiline':False]['text':' errors for the duration of each test.','line_number':271,'multiline':False]['text':' TODO SERVER-39704: Remove this failpoint block.','line_number':272,'multiline':False]['text':' The recovery shard is unset initially.','line_number':581,'multiline':False]['text':' The recovery shard is not set on scheduling requests.','line_number':584,'multiline':False]['text':' The recovery shard is not set if a participant responds with ok but that it is read-only.','line_number':588,'multiline':False]['text':' The recovery shard is not set even if more read-only participants respond.','line_number':592,'multiline':False]['text':' The recovery shard is not set even if the participants say they did a write for commit.','line_number':600,'multiline':False]['text':' Response to first statement says read-only.','line_number':642,'multiline':False]['text':' Response to second statement says not read-only.','line_number':646,'multiline':False]['text':' Shard1's response says read-only.','line_number':662,'multiline':False]['text':' Shard2's response says not read-only.','line_number':667,'multiline':False]['text':' Shard1's response says not read-only.','line_number':684,'multiline':False]['text':' Participant list is cleared.','line_number':690,'multiline':False]['text':' Shard1's response says not read-only.','line_number':709,'multiline':False]['text':' New statement.','line_number':715,'multiline':False]['text':' Shard2 responds, it doesn't matter whether it's read-only, just that it's a pending','line_number':720,'multiline':False]['text':' participant.','line_number':721,'multiline':False]['text':' Participant list is cleared.','line_number':727,'multiline':False]['text':' Shard1's response says not read-only.','line_number':746,'multiline':False]['text':' Start new transaction on session.','line_number':752,'multiline':False]['text':' Continuing with the same API params succeeds. (Must reset readConcern from "snapshot".)','line_number':888,'multiline':False]['text':' Can't continue with different params. (Must reset readConcern from "snapshot".)','line_number':906,'multiline':False]['text':' Can't continue without params. (Must reset readConcern from "snapshot".)','line_number':928,'multiline':False]['text':' isCoordinator ','line_number':1148,'multiline':True]['text':' isCoordinator ','line_number':1185,'multiline':True]['text':' The requests are scheduled in a nondeterministic order, since they are scheduled by iterating','line_number':1217,'multiline':False]['text':' over the participant list, which is stored as a hash map. So, just check that all expected','line_number':1218,'multiline':False]['text':' hosts and ports were targeted at the end.','line_number':1219,'multiline':False]['text':' The shard with hostAndPort1 is expected to be the coordinator.','line_number':1231,'multiline':False]['text':' isCoordinator ','line_number':1274,'multiline':True]['text':' isCoordinator ','line_number':1286,'multiline':True]['text':' isCoordinator ','line_number':1335,'multiline':True]['text':' doAppendStartTransaction ','line_number':1351,'multiline':True]['text':' doAppendStartTransaction ','line_number':1372,'multiline':True]['text':' doAppendStartTransaction ','line_number':1397,'multiline':True]['text':' doAppendStartTransaction ','line_number':1422,'multiline':True]['text':' doAppendStartTransaction ','line_number':1446,'multiline':True]['text':' isCoordinator ','line_number':1518,'multiline':True]['text':' Sending commit with a recovery token again should cause the router to use the recovery path','line_number':1526,'multiline':False]['text':' again.','line_number':1527,'multiline':False]['text':' isCoordinator ','line_number':1544,'multiline':True]['text':' Simulate recovering a commit with a recovery token and no participants.','line_number':1566,'multiline':False]['text':' isCoordinator ','line_number':1586,'multiline':True]['text':' Increase the txn number and run a cross-shard transaction with two-phase commit. The commit','line_number':1595,'multiline':False]['text':' should be sent with the correct participant list.','line_number':1596,'multiline':False]['text':' isCoordinator ','line_number':1635,'multiline':True]['text':' Run a cross-shard transaction with two-phase commit. The commit should be sent with the','line_number':1657,'multiline':False]['text':' correct participant list.','line_number':1658,'multiline':False]['text':' isCoordinator ','line_number':1695,'multiline':True]['text':' Increase the txn number and simulate recovering a commit with a recovery token and no','line_number':1703,'multiline':False]['text':' participants.','line_number':1704,'multiline':False]['text':' isCoordinator ','line_number':1726,'multiline':True]['text':' ShardRegistry will try to perform a reload since it doesn't know about the shard.','line_number':1784,'multiline':False]['text':' Advance the latest time in the logical clock so the retry attempt will pick a later time.','line_number':1811,'multiline':False]['text':' Simulate a snapshot error.','line_number':1816,'multiline':False]['text':' Changing the atClusterTime during the statement that selected it is allowed.','line_number':1860,'multiline':False]['text':' Later statements cannot change atClusterTime.','line_number':1880,'multiline':False]['text':' Successfully start a transaction on two shards, selecting one as the coordinator.','line_number':1910,'multiline':False]['text':' Simulate a snapshot error and an internal retry that only re-targets one of the original two','line_number':1918,'multiline':False]['text':' shards.','line_number':1919,'multiline':False]['text':' There is a new coordinator.','line_number':1938,'multiline':False]['text':' Shard1 should also attach startTransaction field again.','line_number':1943,'multiline':False]['text':' Transaction 1 contacts shard1 and shard2 during the first command, then shard3 in the second','line_number':1986,'multiline':False]['text':' command.','line_number':1987,'multiline':False]['text':' Transaction 2 contacts shard3 and shard2 during the first command, then shard1 in the second','line_number':2007,'multiline':False]['text':' command.','line_number':2008,'multiline':False]['text':' Ensure that latestStmtId gets incremented when a participant is targeted.','line_number':2049,'multiline':False]['text':' Start a transaction on two shards, selecting one as the coordinator, but simulate a','line_number':2068,'multiline':False]['text':' re-targeting error from at least one of them.','line_number':2069,'multiline':False]['text':' Simulate stale error and internal retry that only re-targets one of the original shards.','line_number':2077,'multiline':False]['text':' There is a new coordinator.','line_number':2093,'multiline':False]['text':' Shard1 has not started a transaction.','line_number':2098,'multiline':False]['text':' First statement successfully targets one shard, selecing it as the coordinator.','line_number':2114,'multiline':False]['text':' Start a subsequent statement that targets two new shards and encounters a stale error from at','line_number':2121,'multiline':False]['text':' least one of them.','line_number':2122,'multiline':False]['text':' Shards 2 and 3 must start a transaction, but shard 1 must not.','line_number':2137,'multiline':False]['text':' First statement selects an atClusterTime.','line_number':2161,'multiline':False]['text':' A later statement retries on a stale version error and a view resolution error and cannot','line_number':2166,'multiline':False]['text':' change the atClusterTime.','line_number':2167,'multiline':False]['text':' Advance to the next command.','line_number':2224,'multiline':False]['text':' isCoordinator ','line_number':2280,'multiline':True]['text':' The middle response is NoSuchTransaction, the rest are success.','line_number':2371,'multiline':False]['text':' The middle response is a "network error", the rest are success. Use InternalError as','line_number':2420,'multiline':False]['text':' the "network error" because the server will retry three times on actual network','line_number':2421,'multiline':False]['text':' errors; this just skips the retries.','line_number':2422,'multiline':False]['text':' One shard is targeted by the first statement.','line_number':2443,'multiline':False]['text':' Simulate a view resolution error on the first client statement that leads to a retry which','line_number':2451,'multiline':False]['text':' targets the same shard.','line_number':2452,'multiline':False]['text':' The only participant was the coordinator, so it should have been reset.','line_number':2459,'multiline':False]['text':' The first shard is targeted by the retry and should have to start a transaction again.','line_number':2462,'multiline':False]['text':' Advance to a later client statement that targets a new shard.','line_number':2466,'multiline':False]['text':' Simulate a view resolution error.','line_number':2476,'multiline':False]['text':' Only the new participant shard was reset.','line_number':2482,'multiline':False]['text':' Should not throw.','line_number':2502,'multiline':False]['text':' isCoordinator ','line_number':2531,'multiline':True]['text':' isCoordinator ','line_number':2605,'multiline':True]['text':' Shouldn't throw.','line_number':2610,'multiline':False]['text':' Cannot retry on snapshot errors on the first statement.','line_number':2675,'multiline':False]['text':' Retry only on first op on stale shard or db version errors for read or write commands.','line_number':2678,'multiline':False]['text':' It shouldn't hang because there won't be any abort transaction sent at this time','line_number':2682,'multiline':False]['text':' Readd the initial participant removed on onStaleShardOrDbError','line_number':2685,'multiline':False]['text':' Add another participant','line_number':2688,'multiline':False]['text':' Check that the transaction cannot continue on stale config with more than one participant','line_number':2691,'multiline':False]['text':' Can still continue on view resolution errors.','line_number':2694,'multiline':False]['text':' Should not throw.','line_number':2696,'multiline':False]['text':' Expect abort on pending operation','line_number':2700,'multiline':False]['text':' Start a new transaction statement.','line_number':2707,'multiline':False]['text':' Cannot retry on a stale config error with one participant after the first statement.','line_number':2712,'multiline':False]['text':' First statement does not select an atClusterTime, but does not target any participants.','line_number':2742,'multiline':False]['text':' Subsequent statement does select an atClusterTime and does target a participant.','line_number':2748,'multiline':False]['text':' The next statement cannot change the atClusterTime.','line_number':2761,'multiline':False]['text':' No atClusterTime is placed on the router by default.','line_number':2789,'multiline':False]['text':' Can't compute and set an atClusterTime.','line_number':2792,'multiline':False]['text':' Can continue on snapshot errors since this is the first statement.','line_number':2796,'multiline':False]['text':' Only attached on first command to a participant.','line_number':2821,'multiline':False]['text':' Attached for new participants after the first one.','line_number':2828,'multiline':False]['text':'','line_number':2869,'multiline':False]['text':' NoSuchTransaction is ignored when it is the top-level error code.','line_number':2870,'multiline':False]['text':'','line_number':2871,'multiline':False]['text':'','line_number':2900,'multiline':False]['text':' Retryable top-level error.','line_number':2901,'multiline':False]['text':'','line_number':2902,'multiline':False]['text':' The first abort fails with a retryable error, which should be retried.','line_number':2917,'multiline':False]['text':'','line_number':2933,'multiline':False]['text':' Non-retryable top-level error.','line_number':2934,'multiline':False]['text':'','line_number':2935,'multiline':False]['text':' Add some participants to the list.','line_number':2967,'multiline':False]['text':' Simulate response from some participant not in the list.','line_number':2971,'multiline':False]['text':' Further responses with readOnly: true do not change the participant's readOnly field.','line_number':3008,'multiline':False]['text':' Further responses with readOnly: false do not change the participant's readOnly field.','line_number':3033,'multiline':False]['text':' First response says readOnly: true.','line_number':3055,'multiline':False]['text':' Later response says readOnly: false.','line_number':3062,'multiline':False]['text':' First response says readOnly: false.','line_number':3082,'multiline':False]['text':' Later response says readOnly: true.','line_number':3089,'multiline':False]['text':' First response is an error.','line_number':3108,'multiline':False]['text':' The client should normally not issue another statement for the transaction, but if the client','line_number':3113,'multiline':False]['text':' does and the participant returns success for some reason, the router should throw.','line_number':3114,'multiline':False]['text':' Reset the readConcern on the OperationContext to simulate a new request.','line_number':3116,'multiline':False]['text':' The router should throw regardless of whether the response says readOnly true or false.','line_number':3123,'multiline':False]['text':' Continue causes the _latestStmtId to be bumped.','line_number':3146,'multiline':False]['text':' Aborting will set the termination initiation state.','line_number':3150,'multiline':False]['text':' The participant's response metadata should not be processed since abort has been initiated.','line_number':3155,'multiline':False]['text':' Aborting will set the termination initiation state.','line_number':3173,'multiline':False]['text':' The participant's response metadata should not be processed since abort has been initiated.','line_number':3178,'multiline':False]['text':' Process !readonly response to set participant state.','line_number':3196,'multiline':False]['text':' Commit causes the _latestStmtId to be bumped.','line_number':3201,'multiline':False]['text':' Committing will set the termination initiation state.','line_number':3204,'multiline':False]['text':' Processing readonly response should not throw since commit has been initiated.','line_number':3209,'multiline':False]['text':' We can beginOrContinueTxn at the active txnNumber. This simulates a yielded session being','line_number':3223,'multiline':False]['text':' checked out by a different operation for that same transaction.','line_number':3224,'multiline':False]['text':' A higher txnNumber cannot be used.','line_number':3230,'multiline':False]['text':' A higher txnNumber still cannot be used because there is an outstanding yielder.','line_number':3243,'multiline':False]['text':' A non-yielding stash does not affect whether a new transaction can begin. This simulates an','line_number':3256,'multiline':False]['text':' operation completing. Stash multiple times to verify it does not bring the activeYields','line_number':3257,'multiline':False]['text':' counter below 0 and trigger a crash.','line_number':3258,'multiline':False]['text':' Now the router can advance.','line_number':3263,'multiline':False]['text':' Can be reaped initially.','line_number':3289,'multiline':False]['text':' Can be reaped after a non-yield stash.','line_number':3292,'multiline':False]['text':' Cannot be reaped after a yield stash.','line_number':3297,'multiline':False]['text':' Cannot be reaped after multiple yield stashes until all corresponding unstashes.','line_number':3303,'multiline':False]['text':' Begins a transaction with snapshot level read concern and sets a default cluster time.','line_number':3318,'multiline':False]['text':'*
 * Test fixture for router transactions metrics.
 ','line_number':3369,'multiline':True]['text':'*
     * Set up and return a mock clock source.
     ','line_number':3393,'multiline':True]['text':'','line_number':3457,'multiline':False]['text':' Helpers for each way a router's transaction may terminate. Meant to be used where the','line_number':3458,'multiline':False]['text':' particular commit type is not being tested.','line_number':3459,'multiline':False]['text':'','line_number':3460,'multiline':False]['text':' commitTransaction() uses the ARS, which retries on retryable errors up to 3 times.','line_number':3503,'multiline':False]['text':' commitTransaction() uses the ARS, which retries on retryable errors up to 3 times.','line_number':3524,'multiline':False]['text':'','line_number':3533,'multiline':False]['text':' Helpers for running each kind of commit.','line_number':3534,'multiline':False]['text':'','line_number':3535,'multiline':False]['text':'','line_number':3623,'multiline':False]['text':' Miscellaneous methods.','line_number':3624,'multiline':False]['text':'','line_number':3625,'multiline':False]['text':' Commit after targeting one shard so the commit has to do work and can be paused.','line_number':3628,'multiline':False]['text':' Wait for commit to start.','line_number':3636,'multiline':False]['text':'','line_number':3682,'multiline':False]['text':' Slow transaction logging tests that logging obeys configuration options and only logs once per','line_number':3683,'multiline':False]['text':' transaction.','line_number':3684,'multiline':False]['text':'','line_number':3685,'multiline':False]['text':' Reset the global parameters to their original values after this test exits.','line_number':3694,'multiline':False]['text':' Reset the global parameters to their original values after this test exits.','line_number':3713,'multiline':False]['text':' Reset the global parameters to their original values after this test exits.','line_number':3732,'multiline':False]['text':' Reset the global parameters to their original values after this test exits.','line_number':3769,'multiline':False]['text':'','line_number':3812,'multiline':False]['text':' Slow transaction logging tests for the logging of basic transaction parameters.','line_number':3813,'multiline':False]['text':'','line_number':3814,'multiline':False]['text':'','line_number':3859,'multiline':False]['text':' Slow transaction logging tests for API parameters.','line_number':3860,'multiline':False]['text':'','line_number':3861,'multiline':False]['text':'','line_number':3882,'multiline':False]['text':' Slow transaction logging tests for the parameters that depend on the read concern level.','line_number':3883,'multiline':False]['text':'','line_number':3884,'multiline':False]['text':'','line_number':3942,'multiline':False]['text':' Slow transaction logging tests for the fields that correspond to commit type.','line_number':3943,'multiline':False]['text':'','line_number':3944,'multiline':False]['text':' Nothing is logged when recovering with an empty recovery token because we don't learn  the','line_number':4032,'multiline':False]['text':' final result of the commit.','line_number':4033,'multiline':False]['text':'','line_number':4037,'multiline':False]['text':' Slow transaction logging tests for the fields that are set when a transaction terminates.','line_number':4038,'multiline':False]['text':'','line_number':4039,'multiline':False]['text':' ASSERT_EQUALS(1, countTextFormatLogLinesContaining("commitType:"));','line_number':4097,'multiline':False]['text':' ASSERT_EQUALS(1, countTextFormatLogLinesContaining("commitDurationMicros:"));','line_number':4098,'multiline':False]['text':'','line_number':4101,'multiline':False]['text':' Slow transaction logging tests for the cases after commit where the result is unknown.','line_number':4102,'multiline':False]['text':'','line_number':4103,'multiline':False]['text':' expectRetries ','line_number':4107,'multiline':True]['text':' expectRetries ','line_number':4114,'multiline':True]['text':' expectRetries ','line_number':4128,'multiline':True]['text':' expectRetries ','line_number':4159,'multiline':True]['text':' The transaction router may implicitly abort after receiving an unknown commit result error.','line_number':4163,'multiline':False]['text':' Since the transaction may have committed, it's not safe to assume the transaction will abort,','line_number':4164,'multiline':False]['text':' so nothing should be logged.','line_number':4165,'multiline':False]['text':' expectRetries ','line_number':4175,'multiline':True]['text':' Note that this shouldn't be possible, but is included as a test case for completeness.','line_number':4192,'multiline':False]['text':'','line_number':4197,'multiline':False]['text':' Slow transaction logging tests that retrying after an unknown commit result logs if the result is','line_number':4198,'multiline':False]['text':' discovered.','line_number':4199,'multiline':False]['text':'','line_number':4200,'multiline':False]['text':' expectRetries ','line_number':4204,'multiline':True]['text':' expectRetries ','line_number':4220,'multiline':True]['text':' expectRetries ','line_number':4236,'multiline':True]['text':' expectRetries ','line_number':4240,'multiline':True]['text':'','line_number':4245,'multiline':False]['text':' Tests for the tracking of transaction timing stats.','line_number':4246,'multiline':False]['text':'','line_number':4247,'multiline':False]['text':' Advancing the clock before beginning a transaction won't affect its duration. Note that it's','line_number':4250,'multiline':False]['text':' invalid to get a transaction's duration before beginning it, so the check comes after begin.','line_number':4251,'multiline':False]['text':' Advancing after beginning a txn will advance the duration.','line_number':4258,'multiline':False]['text':' Advancing the clock shouldn't change the duration now.','line_number':4273,'multiline':False]['text':' Start a new transaction and verify the duration was reset.','line_number':4288,'multiline':False]['text':' Note this throws because there are no participants, but the transaction is still aborted.','line_number':4305,'multiline':False]['text':' Advancing the clock before beginning commit shouldn't affect the commit duration. Note that','line_number':4331,'multiline':False]['text':' it is invalid to get the commit duration for a transaction that hasn't tried to commit.','line_number':4332,'multiline':False]['text':' The clock hasn't advanced since commit started, so the duration should be 0.','line_number':4337,'multiline':False]['text':' Advancing the clock during commit should increase commit duration.','line_number':4340,'multiline':False]['text':' The duration shouldn't change now that commit has finished.','line_number':4347,'multiline':False]['text':' Start a new transaction and verify the commit duration was reset.','line_number':4367,'multiline':False]['text':' Commit fails with a non-retryable error.','line_number':4397,'multiline':False]['text':' Commit duration won't advance.','line_number':4401,'multiline':False]['text':' It's a user error to commit a transaction after a failed command or explicit abort, but if it','line_number':4407,'multiline':False]['text':' happens, stats for the commit should not be tracked or included in reporting.','line_number':4408,'multiline':False]['text':' A commit in this case should always fail.','line_number':4412,'multiline':False]['text':' sessionIsActive ','line_number':4418,'multiline':True]['text':' sessionIsActive ','line_number':4423,'multiline':True]['text':' Note that it shouldn't be possible for this commit to succeed, but it is included as a test','line_number':4433,'multiline':False]['text':' case for completeness.','line_number':4434,'multiline':False]['text':' sessionIsActive ','line_number':4440,'multiline':True]['text':' sessionIsActive ','line_number':4445,'multiline':True]['text':' expectRetries ','line_number':4457,'multiline':True]['text':' Both duration and commit can still advance.','line_number':4459,'multiline':False]['text':' expectRetries ','line_number':4464,'multiline':True]['text':' The result is still unknown so both can advance.','line_number':4466,'multiline':False]['text':' The result is known, so neither can advance.','line_number':4473,'multiline':False]['text':' Both timeActive and timeInactive start at 0.','line_number':4482,'multiline':False]['text':' Only timeActive will advance while a txn is active.','line_number':4487,'multiline':False]['text':' Only timeInactive will advance while a txn is stashed.','line_number':4493,'multiline':False]['text':' Will not advance after commit.','line_number':4500,'multiline':False]['text':' Neither can advance after a successful commit.','line_number':4501,'multiline':False]['text':' An error after checking out a session and before continuing a transaction can lead to','line_number':4513,'multiline':False]['text':' back-to-back calls to TransactionRouter::stash(), so a repeated call to stash() shouldn't','line_number':4514,'multiline':False]['text':' toggle the transaction back to the active state.','line_number':4515,'multiline':False]['text':' Only timeInactive can advance.','line_number':4527,'multiline':False]['text':' Still only timeInactive can advance.','line_number':4535,'multiline':False]['text':' At shutdown transactions are implicitly aborted without being continued so a transaction may','line_number':4552,'multiline':False]['text':' be stashed when aborting, which should still lead to durations in a consistent state.','line_number':4553,'multiline':False]['text':' At shutdown transactions are implicitly aborted without being continued, so an "ended"','line_number':4599,'multiline':False]['text':' transaction (i.e. committed or aborted) may be implicitly aborted again. This shouldn't','line_number':4600,'multiline':False]['text':' affect any transaction durations.','line_number':4601,'multiline':False]['text':' Neither can advance.','line_number':4621,'multiline':False]['text':'timeActive','line_number':4622,'multiline':True]['text':'timeInactive','line_number':4623,'multiline':True]['text':' Neither can advance.','line_number':4635,'multiline':False]['text':'timeActive','line_number':4636,'multiline':True]['text':'timeInactive','line_number':4637,'multiline':True]['text':' expectRetries ','line_number':4647,'multiline':True]['text':' timeActive can advance.','line_number':4649,'multiline':False]['text':' timeInactive can advance.','line_number':4654,'multiline':False]['text':' expectRetries ','line_number':4662,'multiline':True]['text':' timeActive can advance.','line_number':4664,'multiline':False]['text':' timeInactive can advance.','line_number':4669,'multiline':False]['text':' The result is known, so neither can advance.','line_number':4679,'multiline':False]['text':'timeActive','line_number':4680,'multiline':True]['text':'timeInactive','line_number':4682,'multiline':True]['text':' Neither can advance.','line_number':4696,'multiline':False]['text':'timeActive','line_number':4697,'multiline':True]['text':'timeInactive','line_number':4698,'multiline':True]['text':' Neither can advance.','line_number':4710,'multiline':False]['text':'timeActive','line_number':4711,'multiline':True]['text':'timeInactive','line_number':4712,'multiline':True]['text':' Test active.','line_number':4744,'multiline':False]['text':' Test inactive.','line_number':4757,'multiline':False]['text':' expectRetries ','line_number':4785,'multiline':True]['text':' Check out a session to create one in the session catalog.','line_number':4894,'multiline':False]['text':' Start a transaction on the session.','line_number':4897,'multiline':False]['text':' The router session is out of scope, so the transaction is stashed.','line_number':4908,'multiline':False]['text':' Mark the session for reap which will also erase it from the catalog.','line_number':4913,'multiline':False]['text':' Verify the session was reaped.','line_number':4922,'multiline':False]['text':' Verify serverStatus was updated correctly and the reaped transactions were not considered','line_number':4927,'multiline':False]['text':' committed or aborted.','line_number':4928,'multiline':False]['text':' Check out a session to create one in the session catalog, but don't start a txn on it.','line_number':4941,'multiline':False]['text':' Mark the session for reap which will also erase it from the catalog.','line_number':4949,'multiline':False]['text':' Verify the session was reaped.','line_number':4958,'multiline':False]['text':' Verify serverStatus was not modified and the reaped transactions were not considered','line_number':4963,'multiline':False]['text':' committed or aborted.','line_number':4964,'multiline':False]['text':' The following three tests verify that the methods that end metrics tracking for a transaction','line_number':4972,'multiline':False]['text':' can't be called for an unstarted one.','line_number':4973,'multiline':False]['text':' Shouldn't go down when a transaction ends.','line_number':5017,'multiline':False]['text':' expectRetries ','line_number':5044,'multiline':True]['text':' expectRetries ','line_number':5105,'multiline':True]['text':' Starts at 0.','line_number':5159,'multiline':False]['text':' Only increases when a new participant is created.','line_number':5162,'multiline':False]['text':' Only increases for new participants.','line_number':5169,'multiline':False]['text':' Is cumulative across transactions.','line_number':5176,'multiline':False]['text':' Starts at 0.','line_number':5187,'multiline':False]['text':' Does not increase until a participant is targeted.','line_number':5190,'multiline':False]['text':' Increases each time transaction fields are attached.','line_number':5194,'multiline':False]['text':' Total requests targeted is increased by commit recovery.','line_number':5209,'multiline':False]['text':' None of the participant stats should be updated since the recovery shard doesn't know the','line_number':5217,'multiline':False]['text':' participant list.','line_number':5218,'multiline':False]['text':' Total requests targeted does not increase for automatic retries on network errors.','line_number':5224,'multiline':False]['text':' The commit will be retried because of the retryable error, but totalRequestsTargeted should','line_number':5228,'multiline':False]['text':' only be incremented once per participant. The helper targets one participant, so expect one','line_number':5229,'multiline':False]['text':' target for the statement before commit and one for the commit itself, excluding retries.','line_number':5230,'multiline':False]['text':' expectRetries ','line_number':5231,'multiline':True]['text':' Starts at 0.','line_number':5236,'multiline':False]['text':' Does not increase until commit begins.','line_number':5239,'multiline':False]['text':' Increases after commit begins, before it ends.','line_number':5251,'multiline':False]['text':' Not affected by end of commit.','line_number':5255,'multiline':False]['text':' Is cumulative across transactions.','line_number':5260,'multiline':False]['text':' expectRetries ','line_number':5283,'multiline':True]['text':' The result is unknown so only initiated is increased.','line_number':5285,'multiline':False]['text':' Advancing the clock before beginning commit shouldn't affect commit duration or successful','line_number':5301,'multiline':False]['text':' commit duration.','line_number':5302,'multiline':False]['text':' The clock hasn't advanced since commit started, so commit duration and successful commit','line_number':5307,'multiline':False]['text':' duration should be 0.','line_number':5308,'multiline':False]['text':' Advancing the clock during commit should increase commit duration but not successful commit','line_number':5317,'multiline':False]['text':' duration.','line_number':5318,'multiline':False]['text':' Finishing the commit successfully should now increase successful commit duration but not','line_number':5328,'multiline':False]['text':' commit duration.','line_number':5329,'multiline':False]['text':' Commit duration and successful commit duration shouldn't change now that commit has finished.','line_number':5336,'multiline':False]['text':' Start a new transaction and verify that successful commit duration is cumulative.','line_number':5344,'multiline':False]['text':' Create client and read concern metadata.','line_number':5362,'multiline':False]['text':' Verify reported parameters match expectations.','line_number':5392,'multiline':False]['text':' sessionIsActive ','line_number':5393,'multiline':True]['text':' sessionIsActive ','line_number':5432,'multiline':True]['text':' Verify participants array matches expected values.','line_number':5440,'multiline':False]['text':' Verify participants array has been updated with proper ReadOnly responses.','line_number':5464,'multiline':False]['text':' sessionIsActive ','line_number':5466,'multiline':True]['text':' Verify commit is reported as expected.','line_number':5500,'multiline':False]['text':' sessionIsActive ','line_number':5502,'multiline':True]['text':' Verify that the participant list does not exist if the commit type is recovery.','line_number':5513,'multiline':False]['text':' sessionIsActive ','line_number':5515,'multiline':True]['text':' sessionIsActive ','line_number':5521,'multiline':True]['text':' Add a parent session with one retryable child.','line_number':5561,'multiline':False]['text':' Start a higher txnNumber client transaction and verify the child was erased.','line_number':5575,'multiline':False]['text':' Add a parent session with one retryable child.','line_number':5589,'multiline':False]['text':' Start a higher txnNumber retryable transaction and verify the child was erased.','line_number':5603,'multiline':False]['text':' unnamed namespace','line_number':5798,'multiline':False]['text':' namespace mongo','line_number':5799,'multiline':False]