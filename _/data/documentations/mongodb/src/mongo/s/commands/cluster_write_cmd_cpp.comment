['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Command-level error, all writes failed','line_number':113,'multiline':False]['text':' The last error in the batch is always reported - this matches expected COE semantics for','line_number':117,'multiline':False]['text':' insert batches. For updates and deletes, error is only reported if the error was on the','line_number':118,'multiline':False]['text':' last item.','line_number':119,'multiline':False]['text':' Record an error if one exists','line_number':127,'multiline':False]['text':'*
 * Checks if the response contains a WouldChangeOwningShard error. If it does, asserts that the
 * batch size is 1 and returns the extra info attached to the exception.
 ','line_number':133,'multiline':True]['text':' Updating the shard key when batch size > 1 is disallowed when the document would move','line_number':146,'multiline':False]['text':' shards. If the update is in a transaction uassert. If the write is not in a transaction,','line_number':147,'multiline':False]['text':' change any WouldChangeOwningShard errors in this batch to InvalidOptions to be reported','line_number':148,'multiline':False]['text':' to the user.','line_number':149,'multiline':False]['text':' Strip write concern because this command will be sent as part of a','line_number':186,'multiline':False]['text':' transaction and the write concern has already been loaded onto the opCtx and','line_number':187,'multiline':False]['text':' will be picked up by the transaction API.','line_number':188,'multiline':False]['text':' Strip runtime constants because they will be added again when the API sends this command','line_number':191,'multiline':False]['text':' through the service entry point.','line_number':192,'multiline':False]['text':' Unset error details because they will be repopulated below.','line_number':195,'multiline':False]['text':' resourceYielder ','line_number':202,'multiline':True]['text':' Shared state for the transaction API use below.','line_number':204,'multiline':False]['text':' Note this will clear existing response as part of parsing.','line_number':243,'multiline':False]['text':' Make a unique pointer with a copy of the error detail because','line_number':247,'multiline':False]['text':' BatchedCommandResponse::setWriteConcernError() expects a pointer to a heap allocated','line_number':248,'multiline':False]['text':' WriteConcernErrorDetail that it can take unique ownership of.','line_number':249,'multiline':False]['text':' Shared state for the transaction API use below.','line_number':268,'multiline':False]['text':' If the operation was an upsert, record the _id of the new document.','line_number':302,'multiline':False]['text':' namespace','line_number':334,'multiline':False]['text':' Updating a document's shard key such that its owning shard changes must be run in a','line_number':360,'multiline':False]['text':' transaction. If this update is not already in a transaction, complete the update','line_number':361,'multiline':False]['text':' using an internal transaction.','line_number':362,'multiline':False]['text':' TODO SERVER-67429: Delete this branch.','line_number':374,'multiline':False]['text':' RerunOriginalWriteFn:','line_number':382,'multiline':False]['text':' Ensure the retried operation does not include WC inside the transaction.','line_number':384,'multiline':False]['text':' The transaction commit will still use the WC, because it uses the WC from','line_number':385,'multiline':False]['text':' the opCtx (which has been set previously in Strategy).','line_number':386,'multiline':False]['text':' Clear the error details from the response object before sending the write','line_number':388,'multiline':False]['text':' again','line_number':389,'multiline':False]['text':' nss ','line_number':391,'multiline':True]['text':' ProcessWCEFn:','line_number':398,'multiline':False]['text':' ProcessWriteErrorFn:','line_number':402,'multiline':False]['text':' Set the error status to the status of the failed command.','line_number':410,'multiline':False]['text':' If we get here, the batch size is 1 and we have successfully deleted the old doc','line_number':422,'multiline':False]['text':' and inserted the new one, so it is safe to unset the error details.','line_number':423,'multiline':False]['text':' Note that this implementation will not handle targeting retries and does not','line_number':446,'multiline':False]['text':' completely emulate write behavior','line_number':447,'multiline':False]['text':' Assemble requests','line_number':460,'multiline':False]['text':' Send the requests.','line_number':474,'multiline':False]['text':' Block until a response is available.','line_number':486,'multiline':False]['text':' If the response status was OK, the response must contain which host was targeted.','line_number':490,'multiline':False]['text':' isUpdateOrDelete ','line_number':523,'multiline':True]['text':' isTimeseriesViewRequest ','line_number':529,'multiline':True]['text':' Explain currently cannot be run within a transaction, so each command is instead run','line_number':530,'multiline':False]['text':' separately outside of a transaction, and we compose the results at the end.','line_number':531,'multiline':False]['text':' Since 'explain' does not return the results of the query, we do not have an _id','line_number':542,'multiline':False]['text':' document to target by from the 'Read Phase'. We instead will use a dummy _id target','line_number':543,'multiline':False]['text':' document 'Write Phase'.','line_number':544,'multiline':False]['text':' If we aren't running an explain for updateOne or deleteOne without shard key, continue and','line_number':585,'multiline':False]['text':' run the original explain path.','line_number':586,'multiline':False]['text':' We will time how long it takes to run the commands on the shards.','line_number':593,'multiline':False]['text':' Target the command to the shards based on the singleton batch item.','line_number':596,'multiline':False]['text':' Append the write concern from the opCtx extracted during command setup.','line_number':615,'multiline':False]['text':' Write ops are never allowed to have writeConcern inside transactions. Normally','line_number':618,'multiline':False]['text':' disallowing WC on non-terminal commands in a transaction is handled earlier, during','line_number':619,'multiline':False]['text':' command dispatch. However, if this is a regular write operation being automatically','line_number':620,'multiline':False]['text':' retried inside a transaction (such as changing a document's shard key across shards),','line_number':621,'multiline':False]['text':' then batchedRequest will have a writeConcern (added by the if() above) from when it was','line_number':622,'multiline':False]['text':' initially run outside a transaction. Thus it's necessary to unconditionally clear the','line_number':623,'multiline':False]['text':' writeConcern when in a transaction.','line_number':624,'multiline':False]['text':' Record the namespace that the write must be run on. It may differ from the request if this is','line_number':629,'multiline':False]['text':' a timeseries collection.','line_number':630,'multiline':False]['text':' Populate the 'NotPrimaryErrorTracker' object based on the write response','line_number':640,'multiline':False]['text':' Add one failed attempt','line_number':649,'multiline':False]['text':' TODO: increase opcounters by more than one','line_number':655,'multiline':False]['text':' The response.getN() count is the sum of documents matched and upserted.','line_number':669,'multiline':False]['text':' Record the number of shards targeted by this write.','line_number':694,'multiline':False]['text':' namespace mongo','line_number':737,'multiline':False]