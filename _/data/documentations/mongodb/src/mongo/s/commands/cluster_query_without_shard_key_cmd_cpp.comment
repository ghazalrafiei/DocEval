['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Computes the final sort pattern if necessary metadata is needed.','line_number':145,'multiline':False]['text':' explain','line_number':174,'multiline':False]['text':' legacyRuntimeConstants ','line_number':176,'multiline':True]['text':' info ','line_number':178,'multiline':True]['text':' We must either get a subset of shards to target in the case of a partial shard key or we must','line_number':180,'multiline':False]['text':' target all shards.','line_number':181,'multiline':False]['text':' TODO: SERVER-75760 Remove this validation since mongos should be doing this upfront.','line_number':187,'multiline':False]['text':' We cannot aggregate on the buckets namespace with a query on the timeseries view, so','line_number':247,'multiline':False]['text':' we must generate a bucket unpack stage to correctly aggregate on the time-series','line_number':248,'multiline':False]['text':' collection.','line_number':249,'multiline':False]['text':' For bulkWrite request, we set the nss when we parse the bulkWrite command.','line_number':271,'multiline':False]['text':' The update case.','line_number':295,'multiline':False]['text':' The delete case.','line_number':308,'multiline':False]['text':' In the batch write path, when the request is reconstructed to be passed to','line_number':327,'multiline':False]['text':' the two phase write protocol, only the stmtIds field is used.','line_number':328,'multiline':False]['text':' In the batch write path, when the request is reconstructed to be passed to','line_number':349,'multiline':False]['text':' the two phase write protocol, only the stmtIds field is used.','line_number':350,'multiline':False]['text':' Parse into OpMsgRequest to append the $db field, which is required for command','line_number':412,'multiline':False]['text':' parsing.','line_number':413,'multiline':False]['text':' Get all shard ids for shards that have chunks in the desired namespace.','line_number':418,'multiline':False]['text':' If the request omits the collation use the collection default collation. If','line_number':425,'multiline':False]['text':' the collection just has the simple collation, we can leave the collation as','line_number':426,'multiline':False]['text':' an empty BSONObj.','line_number':427,'multiline':False]['text':' The MultiStatementTransactionSender expects all statements executed by it to be a','line_number':463,'multiline':False]['text':' part of the transaction. If we break after finding a target document and then','line_number':464,'multiline':False]['text':' destruct the MultiStatementTransactionSender, we register the remaining responses as','line_number':465,'multiline':False]['text':' failed requests. This has implications when we go to commit the internal transaction,','line_number':466,'multiline':False]['text':' since the transaction router will notice that a request "failed" during execution and','line_number':467,'multiline':False]['text':' try to abort the transaction, which in turn will force the internal transaction to','line_number':468,'multiline':False]['text':' retry (potentially indefinitely). Thus, we need to wait for all of the responses from','line_number':469,'multiline':False]['text':' the MultiStatementTransactionSender.','line_number':470,'multiline':False]['text':' Return the first target doc/shard id pair that has already applied the write','line_number':482,'multiline':False]['text':' for a retryable write.','line_number':483,'multiline':False]['text':' Since the retryable write history check happens before a write is executed,','line_number':485,'multiline':False]['text':' we can just use an empty BSONObj for the target doc.','line_number':486,'multiline':False]['text':' For retryable writes, if the statement had already been executed successfully on a','line_number':497,'multiline':False]['text':' particular shard, return that response immediately.','line_number':498,'multiline':False]['text':' Return a target document. If a sort order is specified, return the first target','line_number':503,'multiline':False]['text':' document corresponding to the sort order for a particular sort key.','line_number':504,'multiline':False]['text':' If there are no targetable documents and {upsert: true}, create the document to','line_number':528,'multiline':False]['text':' upsert.','line_number':529,'multiline':False]['text':' Parse into OpMsgRequest to append the $db field, which is required for command','line_number':563,'multiline':False]['text':' parsing.','line_number':564,'multiline':False]['text':' Get all shard ids for shards that have chunks in the desired namespace.','line_number':569,'multiline':False]['text':' In the current implementation of the Stable API, sub-operations run under a command in the','line_number':649,'multiline':False]['text':' Stable API where a client specifies {apiStrict: true} are expected to also be Stable API','line_number':650,'multiline':False]['text':' compliant, when they technically should not be. To satisfy this requirement,','line_number':651,'multiline':False]['text':' this command is marked as part of the Stable API, but is not truly a part of','line_number':652,'multiline':False]['text':' it, since it is an internal-only command.','line_number':653,'multiline':False]['text':' namespace','line_number':663,'multiline':False]['text':' namespace mongo','line_number':664,'multiline':False]