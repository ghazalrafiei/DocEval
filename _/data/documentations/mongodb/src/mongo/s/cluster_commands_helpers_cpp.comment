['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' fromMongos','line_number':136,'multiline':False]['text':' needs merge','line_number':137,'multiline':False]['text':' disk use is banned on mongos','line_number':138,'multiline':False]['text':' bypass document validation, mongos isn't a storage node','line_number':139,'multiline':False]['text':' not mapReduce','line_number':140,'multiline':False]['text':' collection uuid','line_number':146,'multiline':False]['text':' mongos has no profile collection','line_number':148,'multiline':False]['text':' Ignore the collator if the collection is untracked and the user did not specify a collator.','line_number':151,'multiline':False]['text':'*
 * Builds requests for each shard, that is affected by given query with given collation. Uses
 * buildVersionedRequests function to build the requests after determining the list of shards.
 *
 * If a shard is included in shardsToSkip, it will be excluded from the list returned to the
 * caller.
 ','line_number':198,'multiline':True]['text':' The collection does not have a routing table. Target only the primary shard for the','line_number':219,'multiline':False]['text':' database.','line_number':220,'multiline':False]['text':' The collection has a routing table. Target all shards that own chunks that match the','line_number':223,'multiline':False]['text':' query.','line_number':224,'multiline':False]['text':' info ','line_number':231,'multiline':True]['text':' Send the requests.','line_number':247,'multiline':False]['text':' Get the responses.','line_number':256,'multiline':False]['text':' Stores results by ShardId','line_number':258,'multiline':False]['text':' We successfully received a response.','line_number':265,'multiline':False]['text':' Check for special errors that require throwing out any accumulated results.','line_number':267,'multiline':False]['text':' If we specify to throw on stale shard version errors, then we will early exit','line_number':271,'multiline':False]['text':' from examining results. Otherwise, we will allow stale shard version errors to','line_number':272,'multiline':False]['text':' accumulate in the list of results.','line_number':273,'multiline':False]['text':' In the case a read is performed against a view, the server can return an error','line_number':294,'multiline':False]['text':' indicating that the underlying collection may be sharded. When this occurs the return','line_number':295,'multiline':False]['text':' message will include an expanded view definition and collection namespace. We pass','line_number':296,'multiline':False]['text':' the definition back to the caller by throwing the error. This allows the caller to','line_number':297,'multiline':False]['text':' rewrite the request as an aggregation and retry it.','line_number':298,'multiline':False]['text':' namespace','line_number':316,'multiline':False]['text':' throwOnStaleShardVersionErrors ','line_number':325,'multiline':True]['text':' throwOnStaleShardVersionErrors ','line_number':335,'multiline':True]['text':' When running in a transaction, the rules are:','line_number':362,'multiline':False]['text':' - Never apply writeConcern.  Applying writeConcern to terminal operations such as','line_number':363,'multiline':False]['text':'   abortTransaction and commitTransaction is done directly by the TransactionRouter.','line_number':364,'multiline':False]['text':' - Apply readConcern only if this is the first operation in the transaction.','line_number':365,'multiline':False]['text':' Cannot apply either read or writeConcern, so short-circuit.','line_number':368,'multiline':False]['text':' First operation in transaction, but the caller has not requested readConcern be','line_number':373,'multiline':False]['text':' applied, so there's nothing to do.','line_number':374,'multiline':False]['text':' First operation in transaction, so ensure that writeConcern is not applied, then continue','line_number':378,'multiline':False]['text':' and apply the readConcern.','line_number':379,'multiline':False]['text':' Append all original fields except the readConcern/writeConcern field to the new command.','line_number':383,'multiline':False]['text':' If mongos selected atClusterTime, forward it to the shard.','line_number':397,'multiline':False]['text':' Finally, add the new read/write concern.','line_number':407,'multiline':False]['text':'explainVerbosity','line_number':491,'multiline':True]['text':' shardsToSkip ','line_number':518,'multiline':True]['text':'explainVerbosity','line_number':540,'multiline':True]['text':' Attach shardVersion "UNSHARDED", unless targeting a fixed db collection.','line_number':557,'multiline':False]['text':'collation','line_number':582,'multiline':True]['text':'explainVerbosity','line_number':583,'multiline':True]['text':'letParameters','line_number':584,'multiline':True]['text':'runtimeConstants','line_number':585,'multiline':True]['text':' shardsToSkip ','line_number':596,'multiline':True]['text':' collation ','line_number':596,'multiline':True]['text':' TODO SERVER-74478: Rewrite function to process AsyncRPC responses','line_number':600,'multiline':False]['text':' "Generic errors" are all errors that are not shardNotFound errors.','line_number':611,'multiline':False]['text':' It is safe to pass `hasWriteConcernError` as false in the below check because operations','line_number':620,'multiline':False]['text':' run inside transactions do not wait for write concern, except for commit and abort.','line_number':621,'multiline':False]['text':'hasWriteConcernError','line_number':624,'multiline':True]['text':'isCommitOrAbort','line_number':624,'multiline':True]['text':' Re-throw on transient transaction errors to make sure appropriate error labels are','line_number':625,'multiline':False]['text':' appended to the result.','line_number':626,'multiline':False]['text':' Do a pass through all the received responses and group them into success, ShardNotFound, and','line_number':641,'multiline':False]['text':' error responses.','line_number':642,'multiline':False]['text':' If all shards reported ShardNotFound, promote them all to generic errors.','line_number':668,'multiline':False]['text':' Append a 'raw' field containing the success responses and error responses.','line_number':674,'multiline':False]['text':' Try to report the response by the shard's full connection string.','line_number':677,'multiline':False]['text':' If we could not get the shard's connection string, fall back to reporting the','line_number':685,'multiline':False]['text':' response by shard id.','line_number':686,'multiline':False]['text':' If there were no errors, report success (possibly with a writeConcern error).','line_number':700,'multiline':False]['text':' There was an error. Choose the first error as the top-level error.','line_number':711,'multiline':False]['text':' The first error is a CollectionUUIDMismatchInfo but it doesn't contain an actual','line_number':716,'multiline':False]['text':' namespace. It's possible that the actual namespace is unsharded, in which case only the','line_number':717,'multiline':False]['text':' error from the primary shard will contain this information. Iterate through the errors to','line_number':718,'multiline':False]['text':' see if this is the case. Note that this can fail with unsplittable collections as we','line_number':719,'multiline':False]['text':' might only contact the owning shard and not have any errors from the primary shard.','line_number':720,'multiline':False]['text':' If we didn't find the error here we must contact the primary shard manually to populate','line_number':730,'multiline':False]['text':' the CollectionUUIDMismatch with the correct collection name.','line_number':731,'multiline':False]['text':' New (command) style reply','line_number':757,'multiline':False]['text':' The collection has a routing table. Use it to decide which shards to target based on the','line_number':772,'multiline':False]['text':' query and collation.','line_number':773,'multiline':False]['text':' info ','line_number':775,'multiline':True]['text':' The collection does not have a routing table. Target only the primary shard for the database.','line_number':779,'multiline':False]['text':'explainVerbosity','line_number':796,'multiline':True]['text':' shardsToSkip ','line_number':800,'multiline':True]['text':' Return the latest routing table if not running in a transaction with snapshot level read','line_number':814,'multiline':False]['text':' concern.','line_number':815,'multiline':False]['text':' appendRC ','line_number':831,'multiline':True]['text':' appendWC ','line_number':831,'multiline':True]['text':' force the read concern level to "local" as other values are not supported for listIndexes','line_number':833,'multiline':False]['text':' For a collection that has a routing table, we must load indexes from a shard with','line_number':840,'multiline':False]['text':' chunks. For consistency with cluster listIndexes, load from the shard that owns','line_number':841,'multiline':False]['text':' the minKey chunk.','line_number':842,'multiline':False]['text':' For a collection without routing table, the primary shard will have correct indexes.','line_number':848,'multiline':False]['text':' Attach dbVersion + shardVersion: UNSHARDED.','line_number':849,'multiline':False]['text':' namespace mongo','line_number':866,'multiline':False]