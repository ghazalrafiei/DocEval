['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'','line_number':68,'multiline':False]['text':' Helpers to construct a user-friendly error Status from a cursorId.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' namespace','line_number':82,'multiline':False]['text':' Zero is not a valid cursor id.','line_number':90,'multiline':False]['text':' The underlying cursor has not yet been returned.','line_number':95,'multiline':False]['text':' The underlying cursor has not yet been returned.','line_number':109,'multiline':False]['text':' Note that unpinning a cursor transfers ownership of the underlying ClusterClientCursor object','line_number':121,'multiline':False]['text':' back to the manager.','line_number':122,'multiline':False]['text':' Return the cursor as exhausted so that it's deleted immediately.','line_number':150,'multiline':False]['text':' Read the clock out of the lock.','line_number':180,'multiline':False]['text':' Create a new CursorEntry and register it in the CursorEntryContainer's map.','line_number':199,'multiline':False]['text':' Check if the user is coauthorized to access this cursor.','line_number':232,'multiline':False]['text':' We use pinning of a cursor as a proxy for active, user-initiated use of a cursor.  Therefore,','line_number':253,'multiline':False]['text':' we pass down to the logical session cache and vivify the record (updating last use).','line_number':254,'multiline':False]['text':' Read the clock out of the lock.','line_number':274,'multiline':False]['text':' Detach the cursor from the operation which had checked it out.','line_number':277,'multiline':False]['text':' killPending will be true if killCursor() was called while the cursor was in use.','line_number':288,'multiline':False]['text':' The caller may need the cursor again.','line_number':295,'multiline':False]['text':' After detaching the cursor, the entry will be destroyed.','line_number':299,'multiline':False]['text':' Note that getAuthenticatedUser() is thread-safe, so it's okay to call even if there's','line_number':314,'multiline':False]['text':' an operation using the cursor.','line_number':315,'multiline':False]['text':' Interrupt any operation currently using the cursor.','line_number':321,'multiline':False]['text':' Don't delete the cursor, as an operation is using it. It will be cleaned up when the','line_number':326,'multiline':False]['text':' operation is done.','line_number':327,'multiline':False]['text':' Interrupt any operation currently using the cursor, unless if it's the current operation.','line_number':340,'multiline':False]['text':' The caller shouldn't need to call killCursor on their own cursor.','line_number':343,'multiline':False]['text':' No one is using the cursor, so we destroy it.','line_number':349,'multiline':False]['text':' We no longer hold the lock here.','line_number':352,'multiline':False]['text':' Deletion of the cursor can happen out of the lock.','line_number':363,'multiline':False]['text':' Mark the OperationContext using the cursor as killed, and move on.','line_number':420,'multiline':False]['text':' Destroy the entry and set the iterator to the next element.','line_number':428,'multiline':False]['text':' Ensure cursors are killed outside the lock, as killing may require waiting for callbacks to','line_number':432,'multiline':False]['text':' finish.','line_number':433,'multiline':False]['text':' Killed cursors do not count towards the number of pinned cursors or the number of','line_number':456,'multiline':False]['text':' open cursors.','line_number':457,'multiline':False]['text':' Don't include sessions for killed cursors.','line_number':486,'multiline':False]['text':' If auth is enabled, and userMode is allUsers, check if the current user has','line_number':524,'multiline':False]['text':' permission to see this cursor.','line_number':525,'multiline':False]['text':' Don't include sessions for killed or pinned cursors.','line_number':532,'multiline':False]['text':' Don't include sessions for killed cursors.','line_number':564,'multiline':False]['text':' Transfer ownership away from the entry.','line_number':598,'multiline':False]['text':' Destroy the entry.','line_number':601,'multiline':False]['text':' If we haven't registered a cursor to prepare for getMore requests, we record','line_number':609,'multiline':False]['text':' queryStats directly.','line_number':610,'multiline':False]['text':' namespace mongo','line_number':629,'multiline':False]