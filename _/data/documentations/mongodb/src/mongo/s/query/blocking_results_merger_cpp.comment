['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' The BRM interface returns Statuses. Be sure we respect that here.','line_number':58,'multiline':False]['text':' Record the time spent waiting for remotes. If remote-wait recording is not enabled in','line_number':67,'multiline':False]['text':' CurOp, this will have no effect.','line_number':68,'multiline':False]['text':' This shouldn't throw, but we cannot enforce that.','line_number':72,'multiline':False]['text':' If we should wait for inserts and the ARM is not ready, we don't block. Fall straight through','line_number':92,'multiline':False]['text':' to the return statement.','line_number':93,'multiline':False]['text':' Time that an awaitData cursor spends waiting for new results is not counted as','line_number':102,'multiline':False]['text':' execution time, so we pause the CurOp timer.','line_number':103,'multiline':False]['text':' Swallow timeout errors for tailable awaitData cursors, stash the event that we were','line_number':114,'multiline':False]['text':' waiting on, and return EOF.','line_number':115,'multiline':False]['text':' We reach this point either if the ARM is ready, or if the ARM is !ready and we are in','line_number':122,'multiline':False]['text':' kInitialFind or kGetMoreWithAtLeastOneResultInBatch ExecContext. In the latter case, we','line_number':123,'multiline':False]['text':' return EOF immediately rather than blocking for further results.','line_number':124,'multiline':False]['text':' Block until there are further results to return.','line_number':136,'multiline':False]['text':' We have not provided a deadline, so if the wait returns without interruption, we do not','line_number':144,'multiline':False]['text':' expect to have timed out.','line_number':145,'multiline':False]['text':' Non-tailable and tailable non-awaitData cursors always block until ready(). AwaitData','line_number':154,'multiline':False]['text':' cursors wait for ready() only until a specified time limit is exceeded.','line_number':155,'multiline':False]['text':' If we abandoned a previous event due to a mongoS-side timeout, wait for it first.','line_number':161,'multiline':False]['text':' If we have an outstanding event from last time, then we might have to manually schedule','line_number':164,'multiline':False]['text':' some getMores for the cursors. If a remote response came back while we were between','line_number':165,'multiline':False]['text':' getMores (from the user to mongos), the response may have been an empty batch, and the','line_number':166,'multiline':False]['text':' ARM would not be able to ask for the next batch immediately since it is not attached to','line_number':167,'multiline':False]['text':' an OperationContext. Now that we have a valid OperationContext, we schedule the getMores','line_number':168,'multiline':False]['text':' ourselves.','line_number':169,'multiline':False]['text':' Return the leftover event and clear '_leftoverEventFromLastTimeout'.','line_number':175,'multiline':False]['text':' namespace mongo','line_number':188,'multiline':False]