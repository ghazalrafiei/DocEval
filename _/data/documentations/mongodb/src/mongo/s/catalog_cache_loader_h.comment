['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Interface through which the sharding catalog cache requests the set of changed chunks to be
 * retrieved from the persisted metadata store.
 ','line_number':59,'multiline':True]['text':'*
     * Stores a loader on the specified service context. May only be called once for the lifetime of
     * the service context.
     ','line_number':67,'multiline':True]['text':'*
     * Used as a return value for getChunksSince.
     ','line_number':76,'multiline':True]['text':' Information about the entire collection','line_number':94,'multiline':False]['text':' This value can never be boost::none,','line_number':97,'multiline':False]['text':' except under the default constructor','line_number':98,'multiline':False]['text':' This information will be valid if the collection is a time-series buckets collection.','line_number':106,'multiline':False]['text':' If the collection is currently undergoing a resharding operation, the optional will be','line_number':109,'multiline':False]['text':' populated.','line_number':110,'multiline':False]['text':' The chunks which have changed sorted by their chunkVersion. This list might potentially','line_number':115,'multiline':False]['text':' contain all the chunks in the collection.','line_number':116,'multiline':False]['text':'*
     * Initializes internal state. Must be called only once when sharding state is initialized.
     ','line_number':123,'multiline':True]['text':'*
     * Changes internal state on step down.
     ','line_number':128,'multiline':True]['text':'*
     * Changes internal state on step up.
     ','line_number':133,'multiline':True]['text':'*
     * Interrupts ongoing refreshes on rollback.
     ','line_number':138,'multiline':True]['text':'*
     * Transitions into shut down and cleans up state. Once this transitions to shut down, should
     * not be able to transition back to normal. Should be safe to be called more than once.
     ','line_number':143,'multiline':True]['text':'*
     * Notifies the loader that the persisted collection placement version for 'nss' has been
     * updated. `commitTime` represents the commit time of the update to config.collections for
     * `nss` setting the refreshing flag to false.
     ','line_number':149,'multiline':True]['text':'*
     * Non-blocking call, which returns the chunks changed since the specified version to be
     * fetched from the persistent metadata store.
     *
     * If for some reason the asynchronous fetch operation cannot be dispatched (for example on
     * shutdown), throws a DBException.
     ','line_number':157,'multiline':True]['text':'*
     * Non-blocking call, which returns the most recent db version for the given dbName from the
     * the persistent metadata store.
     *
     * If for some reason the asynchronous fetch operation cannot be dispatched (for example on
     * shutdown), throws a DBException.
     ','line_number':167,'multiline':True]['text':'*
     * Waits for any pending changes for the specified collection to be persisted locally (not
     * necessarily replicated). If newer changes come after this method has started running, they
     * will not be waited for except if there is a drop.
     *
     * May throw if the node steps down from primary or if the operation time is exceeded or due to
     * any other error condition.
     *
     * If the specific loader implementation does not support persistence, this method is undefined
     * and must fassert.
     ','line_number':176,'multiline':True]['text':'*
     * Only used for unit-tests, clears a previously-created catalog cache loader from the specified
     * service context, so that 'create' can be called again.
     ','line_number':191,'multiline':True]['text':' namespace mongo','line_number':201,'multiline':False]