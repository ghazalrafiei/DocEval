['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' namespace','line_number':107,'multiline':False]['text':' We are only using this to parse the query for producing the upsert document.','line_number':114,'multiline':False]['text':' nErrors ','line_number':157,'multiline':True]['text':' nInserted ','line_number':158,'multiline':True]['text':' nMatched ','line_number':159,'multiline':True]['text':' nModified ','line_number':160,'multiline':True]['text':' nUpserted ','line_number':161,'multiline':True]['text':' nDeleted ','line_number':162,'multiline':True]['text':' It is guaranteed that the index of this update is 0 since shards evaluate one','line_number':183,'multiline':False]['text':' targetedWrite per batch in a singleWriteWithoutShardKey.','line_number':184,'multiline':False]['text':' For existing unittests that do not expect sharding utilities to be initialized, we can set','line_number':211,'multiline':False]['text':' this failpoint if we know the test will not use the two phase write protocol.','line_number':212,'multiline':False]['text':' Unsharded collections always target one single shard.','line_number':222,'multiline':False]['text':' updateOne and deleteOne do not use the two phase protocol for single writes that specify','line_number':229,'multiline':False]['text':' _id in their queries, unless a document is being upserted. An exact _id match requires','line_number':230,'multiline':False]['text':' default collation if the _id value is a collatable type.','line_number':231,'multiline':False]['text':' explain','line_number':242,'multiline':False]['text':' 'shardKey' will only be populated only if a full equality shard key is extracted.','line_number':261,'multiline':False]['text':' Check if the query has specified a different collation than the default collation.','line_number':265,'multiline':False]['text':' If the default collection collation is not used or the default collation is not the','line_number':275,'multiline':False]['text':' simple collation and any field of the shard key is a collatable type, then we will use','line_number':276,'multiline':False]['text':' the two phase write protocol since we cannot target directly to a shard.','line_number':277,'multiline':False]['text':' Shared state for the transaction below.','line_number':299,'multiline':False]['text':' The target document can contain the target document's _id or a generated upsert','line_number':328,'multiline':False]['text':' document. If there's no targetDocument, then no modification needs to be made.','line_number':329,'multiline':False]['text':' If upsertRequired, insert target document directly into the database.','line_number':334,'multiline':False]['text':' Append "encryptionInformation" if the original command is an encrypted command.','line_number':340,'multiline':False]['text':' shardId ','line_number':368,'multiline':True]['text':' targetDocId ','line_number':369,'multiline':True]['text':' To express the two phase nature of the two phase write protocol, we use the output of the','line_number':401,'multiline':False]['text':' 'Read Phase' explain as the 'inputStage' of the 'Write Phase' explain for both queryPlanner','line_number':402,'multiline':False]['text':' and executionStats sections.','line_number':403,'multiline':False]['text':'','line_number':404,'multiline':False]['text':' An example output would look like:','line_number':405,'multiline':False]['text':'  "queryPlanner" : {','line_number':407,'multiline':False]['text':'      "winningPlan" : {','line_number':408,'multiline':False]['text':' 	        "stage" : "SHARD_WRITE",','line_number':409,'multiline':False]['text':' 	        ...','line_number':410,'multiline':False]['text':'          “inputStage”: {','line_number':411,'multiline':False]['text':' 		        queryPlanner: {','line_number':412,'multiline':False]['text':' 		            winningPlan: {','line_number':413,'multiline':False]['text':' 		                stage: "SHARD_MERGE",','line_number':414,'multiline':False]['text':'                      ...','line_number':415,'multiline':False]['text':'','line_number':416,'multiline':False]['text':'                  }','line_number':417,'multiline':False]['text':'              }','line_number':418,'multiline':False]['text':'          }','line_number':419,'multiline':False]['text':'      }','line_number':420,'multiline':False]['text':'  }','line_number':421,'multiline':False]['text':'','line_number':422,'multiline':False]['text':' executionStats : {','line_number':423,'multiline':False]['text':'     "executionStages" : {','line_number':424,'multiline':False]['text':'         "stage" : "SHARD_WRITE",','line_number':425,'multiline':False]['text':'          ...','line_number':426,'multiline':False]['text':'     },','line_number':427,'multiline':False]['text':'     "inputStage" : {','line_number':428,'multiline':False]['text':'         "stage" : "SHARD_MERGE",','line_number':429,'multiline':False]['text':'             ...','line_number':430,'multiline':False]['text':'      }','line_number':431,'multiline':False]['text':'','line_number':432,'multiline':False]['text':' }','line_number':433,'multiline':False]['text':' ... other explain result fields ...','line_number':434,'multiline':False]['text':' This step is to get 'command', 'serverInfo', and 'serverParamter' fields to return in the','line_number':479,'multiline':False]['text':' final explain output.','line_number':480,'multiline':False]['text':' namespace write_without_shard_key','line_number':484,'multiline':False]['text':' namespace mongo','line_number':485,'multiline':False]