['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':' Item is ready to be targeted','line_number':56,'multiline':False]['text':' Item is targeted and we're waiting for outstanding shard requests to populate','line_number':59,'multiline':False]['text':' responses','line_number':60,'multiline':False]['text':' This is used for WriteType::WriteWithoutShardKeyWithId to defer responses for child write ops','line_number':63,'multiline':False]['text':' with n = 0 from shards only until we are sure that there won't be a retry of broadcast.','line_number':64,'multiline':False]['text':' Op was successful, write completed','line_number':67,'multiline':False]['text':' We assume all states higher than this one are *final*','line_number':68,'multiline':False]['text':' This is used for WriteType::WriteWithoutShardKeyWithId for child write ops only when we','line_number':71,'multiline':False]['text':' decide we do not need to send the child op request or wait for its response from the targeted','line_number':72,'multiline':False]['text':' shard.','line_number':73,'multiline':False]['text':' Op failed with some error','line_number':76,'multiline':False]['text':'*
 * State of a write in-progress (to a single shard) which is one part of a larger write
 * operation.
 *
 * As above, the write op may finish in either a successful (_Completed) or unsuccessful
 * (_Error) state.
 ','line_number':87,'multiline':True]['text':' non-zero when state == _Pending','line_number':101,'multiline':False]['text':' Not owned here but tracked for reporting','line_number':102,'multiline':False]['text':' filled when state > _Pending','line_number':105,'multiline':False]['text':' filled when state == _Error','line_number':108,'multiline':False]['text':' filled when state == _Complete and this is an op from a bulkWrite command.','line_number':111,'multiline':False]['text':'*
 * State of a single write item in-progress from a client request.
 *
 * The lifecyle of a write op:
 *
 *   0. Begins at _Ready,
 *
 *   1a. Targeted, and a ChildWriteOp created to track the state of each returned TargetedWrite.
 *       The state is changed to _Pending.
 *   1b. If the op cannot be targeted, the error is set directly (_Error), and the write op is
 *       completed.
 *
 *   2a.  The current TargetedWrites are cancelled, and the op state is reset to _Ready
 *   2b.  TargetedWrites finish successfully and unsuccessfully.
 *
 *   On the last error arriving...
 *
 *   3a. If the errors allow for retry, the WriteOp is reset to _Ready, previous ChildWriteOps
 *       are placed in the history, and goto 0.
 *   3b. If the errors don't allow for retry, they are combined into a single error and the
 *       state is changed to _Error.
 *   3c. If there are no errors, the state is changed to _Completed.
 *
 * WriteOps finish in a _Completed or _Error state.
 ','line_number':115,'multiline':True]['text':'*
     * Returns the write item for this operation
     ','line_number':144,'multiline':True]['text':'*
     * Returns the op's current state.
     ','line_number':149,'multiline':True]['text':'*
     * Returns the op's error.
     *
     * Can only be used in state _Error
     ','line_number':154,'multiline':True]['text':'*
     * Check if we have a stashed BulkWriteReplyItem so we can safely call
     * takeBulkWriteReplyItem. A writeOp for bulkWrite may not have one if
     * the command was run with errorsOnly=true.
     *
     * Can only be used in state _Complete.
     ','line_number':161,'multiline':True]['text':'*
     * Take's the op's underlying BulkWriteReplyItem. This method must only be called one time
     * as the original value will be moved out when it is called.
     *
     * Can only be used in state _Complete and when this WriteOp is from the bulkWrite command.
     ','line_number':170,'multiline':True]['text':'*
     * Creates TargetedWrite operations for every applicable shard, which contain the
     * information needed to send the child writes generated from this write item.
     *
     * The ShardTargeter determines the ShardEndpoints to send child writes to, but is not
     * modified by this operation.
     ','line_number':178,'multiline':True]['text':'*
     * Returns the number of child writes that were last targeted.
     ','line_number':191,'multiline':True]['text':'*
     * Resets the state of this write op to _Ready and stops waiting for any outstanding
     * TargetedWrites.
     *
     * Can only be called when state is _Pending, or is a no-op if called when the state
     * is still _Ready (and therefore no writes are pending).
     ','line_number':196,'multiline':True]['text':'*
     * Marks the targeted write as finished for this write op. Optionally, if this write is part of
     * a bulkWrite command and has per-statement replies, stores the associated BulkWriteReplyItem.
     *
     * One of noteWriteComplete or noteWriteError should be called exactly once for every
     * TargetedWrite.
     ','line_number':205,'multiline':True]['text':'*
     * Stores the error response of a TargetedWrite for later use, marks the write as finished.
     *
     * As above, one of noteWriteComplete or noteWriteError should be called exactly once for
     * every TargetedWrite.
     ','line_number':215,'multiline':True]['text':'*
     * Marks the write op complete if n is 1 along with transitioning any pending child write ops to
     * WriteOpState::NoOp. If n is 0 then defers the state update of the child write op until later.
     ','line_number':223,'multiline':True]['text':'*
     * Sets the reply for this write op directly, and forces the state to _Completed.
     *
     * Should only be used when in state _Ready.
     ','line_number':229,'multiline':True]['text':'*
     * Sets the error for this write op directly, and forces the state to _Error.
     *
     * Should only be used when in state _Ready.
     ','line_number':236,'multiline':True]['text':'*
     * Sets the WriteType for this WriteOp.
     ','line_number':243,'multiline':True]['text':'*
     * Combines the pointed-to BulkWriteReplyItems into a single item. Used for merging the results
     * of multiple ChildWriteOps into a single reply item.
     ','line_number':250,'multiline':True]['text':'*
     * Updates the op state after new information is received.
     ','line_number':258,'multiline':True]['text':' Owned elsewhere, reference to a batch with a write item','line_number':263,'multiline':False]['text':' What stage of the operation we are at','line_number':266,'multiline':False]['text':' filled when state == _Pending','line_number':269,'multiline':False]['text':' filled when state == _Error','line_number':272,'multiline':False]['text':' filled for bulkWrite op when state == _Complete or before we reset state to _Ready after','line_number':275,'multiline':False]['text':' receiving successful replies from some shards with a retryable error.','line_number':276,'multiline':False]['text':' Whether this write is part of a transaction.','line_number':279,'multiline':False]['text':' stores the shards where this write operation succeeded','line_number':282,'multiline':False]['text':' First value is write item index in the batch, second value is child write op index','line_number':287,'multiline':False]['text':'*
 * A write with A) a request targeted at a particular shard endpoint, and B) a response targeted
 * at a particular WriteOp.
 *
 * TargetedWrites are the link between the RPC layer and the in-progress write
 * operation.
 ','line_number':290,'multiline':True]['text':' Where to send the write','line_number':303,'multiline':False]['text':' Where to find the write item and put the response','line_number':306,'multiline':False]['text':' TODO: Could be a more complex handle, shared between write state and networking code if','line_number':307,'multiline':False]['text':' we need to be able to cancel ops.','line_number':308,'multiline':False]['text':' The unique sample id for the write if it has been chosen for sampling.','line_number':311,'multiline':False]['text':'*
 * Data structure representing the information needed to make a batch request, along with
 * pointers to where the resulting responses should be placed.
 *
 * Internal support for storage as a doubly-linked list, to allow the TargetedWriteBatch to
 * efficiently be registered for reporting.
 ','line_number':315,'multiline':True]['text':'*
     * baseCommandSizeBytes specifies an estimate of the size of the corresponding batch request
     * command prior to adding any write ops to it.
     ','line_number':327,'multiline':True]['text':'*
     * TargetedWrite is owned here once given to the TargetedWriteBatch.
     ','line_number':350,'multiline':True]['text':' Where to send the batch','line_number':356,'multiline':False]['text':' Where the responses go','line_number':359,'multiline':False]['text':' TargetedWrite*s are owned by the TargetedWriteBatch','line_number':360,'multiline':False]['text':' Conservatively estimated size of the batch command, for ensuring it doesn't grow past the','line_number':363,'multiline':False]['text':' maximum BSON size.','line_number':364,'multiline':False]['text':' namespace mongo','line_number':368,'multiline':False]