['text':'*
 *    Copyright (C) 2022-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * Runs a _refreshQueryAnalyzerConfigurations command and returns the configurations returned by
 * the command.
 ','line_number':98,'multiline':True]['text':' namespace','line_number':138,'multiline':False]['text':' setting isKillableByStepdown to false as _freshQueryStats has no OperationContext.','line_number':156,'multiline':False]['text':' Holds only _queryStatsMutex and no other resources, updates only in memory states and','line_number':157,'multiline':False]['text':' is gauranteed to complete. Can therefore trivially set isKillableByStepdown to false','line_number':158,'multiline':False]['text':'isKillableByStepdown','line_number':163,'multiline':True]['text':'isKillableByStepdown','line_number':182,'multiline':True]['text':' The average is only calculated after the initial count is known.','line_number':242,'multiline':False]['text':' To avoid skipping queries that could have been sampled, allow one token to be consumed','line_number':303,'multiline':False]['text':' if there is nearly one.','line_number':304,'multiline':False]['text':' Fill the bucket with tokens created by the previous rate before setting a new rate.','line_number':324,'multiline':False]['text':' The average number of queries executed per second has not been calculated yet.','line_number':343,'multiline':False]['text':' Set the bit corresponding to nss's hash to 1 in 'srlBloomFilter'.','line_number':380,'multiline':False]['text':' Create a SampleRateLimiter or copy an existing one ('rateLimiter') for 'nss'.','line_number':386,'multiline':False]['text':' There is no existing SampleRateLimiter for the collection with this specific','line_number':391,'multiline':False]['text':' collection uuid so create one for it.','line_number':392,'multiline':False]['text':' Add 'std::pair(nss, rateLimiter)' to the 'sampleRateLimiters' map.','line_number':404,'multiline':False]['text':' Update '_sampleRateLimiters'.','line_number':408,'multiline':False]['text':' Update '__srlBloomFilter'.','line_number':411,'multiline':False]['text':' Do not generate a sample id for an internal query unless it has explicitly opted into','line_number':446,'multiline':False]['text':' query sampling.','line_number':447,'multiline':False]['text':' Do not generate a sample id for a query that has explicitly opted out of query sampling.','line_number':451,'multiline':False]['text':' Insert queries are not sampled by design.','line_number':456,'multiline':False]['text':' Before checking '_sampleRateLimiters', check '_srlBloomFilter' first. If the bit','line_number':468,'multiline':False]['text':' corresponding to nss's hash is 0, then we don't need to bother with acquiring','line_number':469,'multiline':False]['text':' '_sampleRateLimitersMutex' and we can return 'boost::none'.','line_number':470,'multiline':False]['text':' On a standalone replica set, sample selection is done by the mongod persisting the','line_number':489,'multiline':False]['text':' sample itself. To avoid double counting a sample, the counters will be incremented','line_number':490,'multiline':False]['text':' by the QueryAnalysisWriter when the sample gets added to the buffer.','line_number':491,'multiline':False]['text':' namespace analyze_shard_key','line_number':499,'multiline':False]['text':' namespace mongo','line_number':500,'multiline':False]