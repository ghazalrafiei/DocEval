['text':'*
 *    Copyright (C) 2018-present MongoDB, Inc.
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the Server Side Public License, version 1,
 *    as published by MongoDB, Inc.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    Server Side Public License for more details.
 *
 *    You should have received a copy of the Server Side Public License
 *    along with this program. If not, see
 *    <http://www.mongodb.com/licensing/server-side-public-license>.
 *
 *    As a special exception, the copyright holders give permission to link the
 *    code of portions of this program with the OpenSSL library under certain
 *    conditions as described in each individual source file and distribute
 *    linked combinations including the program with the OpenSSL library. You
 *    must comply with the Server Side Public License in all respects for
 *    all of the code used other than as permitted herein. If you modify file(s)
 *    with this exception, you may extend this exception to your version of the
 *    file(s), but you are not obligated to do so. If you do not wish to do so,
 *    delete this exception statement from your version. If you delete this
 *    exception statement from all source files in the program, then also delete
 *    it in the license file.
 ','line_number':1,'multiline':True]['text':'*
 * NSTargeter based on a CollectionRoutingInfo implementation. Wraps all exception codepaths and
 * returns NamespaceNotFound status on applicable failures.
 *
 * Must be initialized before use, and initialization may fail.
 ','line_number':64,'multiline':True]['text':'*
     * Initializes the targeter with the latest routing information for the namespace, which means
     * it may have to block and load information from the config server.
     *
     * If 'nss' is a tracked time-series collection, replaces this value with namespace string of a
     * time-series buckets collection.
     *
     * If 'expectedEpoch' is specified, the targeter will throws 'StaleEpoch' exception if the epoch
     * for 'nss' ever becomes different from 'expectedEpoch'. Otherwise, the targeter will continue
     * targeting even if the collection gets dropped and recreated.
     ','line_number':78,'multiline':True]['text':' Initializes the targeter with a custom CollectionRoutingInfo cri, in order to support
     * using a custom (synthetic) routing table ','line_number':93,'multiline':True]['text':'*
     * Attempts to target an update request by shard key and returns a vector of shards to target.
     *
     * The usage of the useTwoPhaseWriteProtocol boolean pointer is to determine whether or not we
     * have received a query that does not have the full shard key or is not an _id query and should
     * use the two phase write protocol to execute the write.
     ','line_number':103,'multiline':True]['text':'*
     * Attempts to target an delete request by shard key and returns a vector of shards to target.
     *
     * The usage of the useTwoPhaseWriteProtocol boolean pointer is to determine whether or not we
     * have received a query that does not have the full shard key or is not an _id query and should
     * use the two phase write protocol to execute the write.
     ','line_number':117,'multiline':True]['text':'*
     * Returns if _lastError is StaleConfig type.
     ','line_number':148,'multiline':True]['text':'*
     * Replaces the targeting information with the latest information from the cache.  If this
     * information is stale WRT the noted stale responses or a remote refresh is needed due
     * to a targeting failure, will contact the config servers to reload the metadata.
     *
     * Return true if the metadata was different after this reload.
     *
     * Also see NSTargeter::refreshIfNeeded().
     ','line_number':153,'multiline':True]['text':'*
     * Creates a collection if there was a prior CannotImplicitlyCreateCollection error thrown.
     *
     * Return true if a collection was created and false if the collection already existed, throwing
     * on any errors.
     *
     * Also see NSTargeter::createCollectionIfNeeded().
     ','line_number':164,'multiline':True]['text':'*
     * Returns the number of shards on which the collection has any chunks.
     ','line_number':174,'multiline':True]['text':'*
     * This returns "does the query have an _id field" and "is the _id field querying for a direct
     * value like _id : 3 and not _id : { $gt : 3 }"
     *
     * If the query does not use the collection default collation, the _id field cannot contain
     * strings, objects, or arrays.
     *
     * Ex: { _id : 1 } => true
     *     { foo : <anything>, _id : 1 } => true
     *     { _id : { $lt : 30 } } => false
     *     { foo : <anything> } => false
     ','line_number':190,'multiline':True]['text':' Maximum number of database creation attempts, which may fail due to a concurrent drop.','line_number':209,'multiline':False]['text':'*
     * Returns a CanonicalQuery if parsing succeeds.
     *
     * Returns !OK with message if query could not be canonicalized.
     *
     * If 'collation' is empty, we use the collection default collation for targeting.
     ','line_number':214,'multiline':True]['text':'*
     * Returns a vector of ShardEndpoints for a potentially multi-shard query.
     *
     * Returns !OK with message if query could not be targeted.
     *
     * If 'collation' is empty, we use the collection default collation for targeting.
     ','line_number':231,'multiline':True]['text':'*
     * Returns a ShardEndpoint for an exact shard key query.
     *
     * Also has the side effect of updating the chunks stats with an estimate of the amount of
     * data targeted at this shard key.
     *
     * If 'collation' is empty, we use the collection default collation for targeting.
     ','line_number':242,'multiline':True]['text':' Full namespace of the collection for this targeter','line_number':254,'multiline':False]['text':' Used to identify the original namespace that the user has requested. Note: this will only','line_number':257,'multiline':False]['text':' be true if the buckets namespace is tracked by the configsvr.','line_number':258,'multiline':False]['text':' Stores last error occurred','line_number':261,'multiline':False]['text':' Set to the epoch of the namespace we are targeting. If we ever refresh the catalog cache','line_number':264,'multiline':False]['text':' and find a new epoch, we immediately throw a StaleEpoch exception.','line_number':265,'multiline':False]['text':' The latest loaded routing cache entry','line_number':268,'multiline':False]['text':' namespace mongo','line_number':272,'multiline':False]