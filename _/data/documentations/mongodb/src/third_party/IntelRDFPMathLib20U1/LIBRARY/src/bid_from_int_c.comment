['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors 
      may be used to endorse or promote products derived from this software 
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]['text':'****************************************************************************
 *  BID64_round_integral_exact
 ***************************************************************************','line_number':32,'multiline':True]['text':' if integer is negative, put the absolute value','line_number':48,'multiline':False]['text':' in the lowest 32bits of the result','line_number':49,'multiline':False]['text':' negative int32','line_number':51,'multiline':False]['text':' 2's complement of x','line_number':52,'multiline':False]['text':' (exp << 53)) = biased exp. is 0','line_number':54,'multiline':False]['text':' positive int32','line_number':55,'multiline':False]['text':' (exp << 53)) = biased exp. is 0','line_number':56,'multiline':False]['text':' (exp << 53)) = biased exp. is 0','line_number':73,'multiline':False]['text':' if the integer is negative, use the absolute value','line_number':102,'multiline':False]['text':' |C| <= 10^16-1 and the result is exact','line_number':107,'multiline':False]['text':' C < 2^53','line_number':108,'multiline':False]['text':' C >= 2^53','line_number':110,'multiline':False]['text':' |C| >= 10^16 and the result may be inexact ','line_number':114,'multiline':False]['text':' the smallest |C| is 10^16 which has 17 decimal digits','line_number':115,'multiline':False]['text':' the largest |C| is 0x8000000000000000 = 9223372036854775808 w/ 19 digits','line_number':116,'multiline':False]['text':' x < 10^17 ','line_number':117,'multiline':False]['text':' number of digits to remove for q = 17','line_number':119,'multiline':False]['text':' C < 10^18','line_number':120,'multiline':False]['text':' number of digits to remove for q = 18 ','line_number':122,'multiline':False]['text':' C < 10^19','line_number':123,'multiline':False]['text':' number of digits to remove for q = 19','line_number':125,'multiline':False]['text':' overflow and underflow are not possible','line_number':127,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':128,'multiline':False]['text':' will work for 19 digits too if C fits in 64 bits','line_number':129,'multiline':False]['text':' set the inexact flag','line_number':135,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':139,'multiline':False]['text':' res = 10^16 => rounding overflow','line_number':153,'multiline':False]['text':' 10^15','line_number':154,'multiline':False]['text':' check if we crossed into the lower decade','line_number':163,'multiline':False]['text':' 10^15 - 1','line_number':164,'multiline':False]['text':' 10^16 - 1','line_number':165,'multiline':False]['text':' exact, the result is already correct','line_number':169,'multiline':False]['text':' res < 2^53','line_number':172,'multiline':False]['text':' res >= 2^53 ','line_number':174,'multiline':False]['text':' x <= 10^16-1 and the result is exact','line_number':207,'multiline':False]['text':' x < 2^53','line_number':208,'multiline':False]['text':' x >= 2^53','line_number':210,'multiline':False]['text':' x >= 10^16 and the result may be inexact ','line_number':213,'multiline':False]['text':' the smallest x is 10^16 which has 17 decimal digits','line_number':214,'multiline':False]['text':' the largest x is 0xffffffffffffffff = 18446744073709551615 w/ 20 digits','line_number':215,'multiline':False]['text':' x < 10^17 ','line_number':216,'multiline':False]['text':' number of digits to remove for q = 17','line_number':218,'multiline':False]['text':' x < 10^18','line_number':219,'multiline':False]['text':' number of digits to remove for q = 18 ','line_number':221,'multiline':False]['text':' x < 10^19','line_number':222,'multiline':False]['text':' number of digits to remove for q = 19','line_number':224,'multiline':False]['text':' x < 10^20','line_number':225,'multiline':False]['text':' number of digits to remove for q = 20','line_number':227,'multiline':False]['text':' overflow and underflow are not possible','line_number':229,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':230,'multiline':False]['text':' will work for 20 digits too if x fits in 64 bits','line_number':232,'multiline':False]['text':' q = 20','line_number':236,'multiline':False]['text':' res.w[1] is 0','line_number':242,'multiline':False]['text':' set the inexact flag','line_number':246,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':250,'multiline':False]['text':' res = 10^16 => rounding overflow','line_number':256,'multiline':False]['text':' 10^15','line_number':257,'multiline':False]['text':' check if we crossed into the lower decade','line_number':264,'multiline':False]['text':' 10^15 - 1','line_number':265,'multiline':False]['text':' 10^16 - 1','line_number':266,'multiline':False]['text':' exact, the result is already correct','line_number':270,'multiline':False]['text':' res < 2^53','line_number':273,'multiline':False]['text':' res >= 2^53 ','line_number':275,'multiline':False]['text':' if integer is negative, use the absolute value','line_number':295,'multiline':False]['text':' 2's complement of x','line_number':298,'multiline':False]['text':' if integer is negative, use the absolute value','line_number':336,'multiline':False]['text':' 2's complement of x','line_number':339,'multiline':False]['text':' if the integer is negative, use the absolute value','line_number':391,'multiline':False]['text':' |C| <= 10^7-1 and the result is exact','line_number':396,'multiline':False]['text':' C < 2^23','line_number':397,'multiline':False]['text':' C >= 2^23','line_number':399,'multiline':False]['text':' |C| >= 10^7 and the result may be inexact ','line_number':402,'multiline':False]['text':' the smallest |C| is 10^7 which has 8 decimal digits','line_number':403,'multiline':False]['text':' the largest |C| is 0x80000000 = 2147483648 w/ 10 digits','line_number':404,'multiline':False]['text':' x < 10^8 ','line_number':405,'multiline':False]['text':' number of digits to remove for q = 8','line_number':407,'multiline':False]['text':' C < 10^9','line_number':408,'multiline':False]['text':' number of digits to remove for q = 9','line_number':410,'multiline':False]['text':' C < 10^10','line_number':411,'multiline':False]['text':' number of digits to remove for q = 10','line_number':413,'multiline':False]['text':' overflow and underflow are not possible','line_number':415,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':416,'multiline':False]['text':' set the inexact flag','line_number':423,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':427,'multiline':False]['text':' res = 10^7 => rounding overflow','line_number':441,'multiline':False]['text':' 10^6','line_number':442,'multiline':False]['text':' check if we crossed into the lower decade','line_number':451,'multiline':False]['text':' 10^6 - 1','line_number':452,'multiline':False]['text':' 10^7 - 1','line_number':453,'multiline':False]['text':' exact, the result is already correct','line_number':457,'multiline':False]['text':' res < 2^23','line_number':460,'multiline':False]['text':' res >= 2^23 ','line_number':462,'multiline':False]['text':' x <= 10^7-1 and the result is exact','line_number':492,'multiline':False]['text':' x < 2^23','line_number':493,'multiline':False]['text':' x >= 2^23','line_number':495,'multiline':False]['text':' x >= 10^7 and the result may be inexact ','line_number':498,'multiline':False]['text':' the smallest x is 10^7 which has 8 decimal digits','line_number':499,'multiline':False]['text':' the largest x is 0xffffffff = 4294967295 w/ 10 digits','line_number':500,'multiline':False]['text':' x < 10^8','line_number':501,'multiline':False]['text':' number of digits to remove for q = 8','line_number':503,'multiline':False]['text':' x < 10^9','line_number':504,'multiline':False]['text':' number of digits to remove for q = 9','line_number':506,'multiline':False]['text':' x < 10^10','line_number':507,'multiline':False]['text':' number of digits to remove for q = 10','line_number':509,'multiline':False]['text':' overflow and underflow are not possible','line_number':511,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':512,'multiline':False]['text':' would work for 20 digits too if x fits in 64 bits','line_number':513,'multiline':False]['text':' set the inexact flag','line_number':520,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':524,'multiline':False]['text':' res = 10^7 => rounding overflow','line_number':530,'multiline':False]['text':' 10^6','line_number':531,'multiline':False]['text':' check if we crossed into the lower decade','line_number':538,'multiline':False]['text':' 10^6 - 1','line_number':539,'multiline':False]['text':' 10^7 - 1','line_number':540,'multiline':False]['text':' exact, the result is already correct','line_number':544,'multiline':False]['text':' res < 2^23','line_number':547,'multiline':False]['text':' res >= 2^23 ','line_number':549,'multiline':False]['text':' if the integer is negative, use the absolute value','line_number':583,'multiline':False]['text':' |C| <= 10^7-1 and the result is exact','line_number':588,'multiline':False]['text':' C < 2^23','line_number':589,'multiline':False]['text':' C >= 2^23','line_number':591,'multiline':False]['text':' |C| >= 10^7 and the result may be inexact ','line_number':594,'multiline':False]['text':' the smallest |C| is 10^7 which has 8 decimal digits','line_number':595,'multiline':False]['text':' the largest |C| is 0x8000000000000000 = 9223372036854775808 w/ 19 digits','line_number':596,'multiline':False]['text':' x < 10^8 ','line_number':597,'multiline':False]['text':' number of digits to remove for q = 8','line_number':599,'multiline':False]['text':' C < 10^9','line_number':600,'multiline':False]['text':' number of digits to remove for q = 9','line_number':602,'multiline':False]['text':' C < 10^10','line_number':603,'multiline':False]['text':' number of digits to remove for q = 10','line_number':605,'multiline':False]['text':' C < 10^11','line_number':606,'multiline':False]['text':' number of digits to remove for q = 11','line_number':608,'multiline':False]['text':' C < 10^12','line_number':609,'multiline':False]['text':' number of digits to remove for q = 12','line_number':611,'multiline':False]['text':' C < 10^13','line_number':612,'multiline':False]['text':' number of digits to remove for q = 13','line_number':614,'multiline':False]['text':' C < 10^14','line_number':615,'multiline':False]['text':' number of digits to remove for q = 14','line_number':617,'multiline':False]['text':' C < 10^15','line_number':618,'multiline':False]['text':' number of digits to remove for q = 15','line_number':620,'multiline':False]['text':' C < 10^16','line_number':621,'multiline':False]['text':' number of digits to remove for q = 16','line_number':623,'multiline':False]['text':' C < 10^17','line_number':624,'multiline':False]['text':' number of digits to remove for q = 17','line_number':626,'multiline':False]['text':' C < 10^18','line_number':627,'multiline':False]['text':' number of digits to remove for q = 18','line_number':629,'multiline':False]['text':' C < 10^19','line_number':630,'multiline':False]['text':' number of digits to remove for q = 19','line_number':632,'multiline':False]['text':' overflow and underflow are not possible','line_number':634,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':635,'multiline':False]['text':' will work for 19 digits too if C fits in 64 bits','line_number':636,'multiline':False]['text':' set the inexact flag','line_number':643,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':647,'multiline':False]['text':' res = 10^7 => rounding overflow','line_number':661,'multiline':False]['text':' 10^6','line_number':662,'multiline':False]['text':' check if we crossed into the lower decade','line_number':671,'multiline':False]['text':' 10^6 - 1','line_number':672,'multiline':False]['text':' 10^7 - 1','line_number':673,'multiline':False]['text':' exact, the result is already correct','line_number':677,'multiline':False]['text':' res < 2^23','line_number':680,'multiline':False]['text':' res >= 2^23 ','line_number':682,'multiline':False]['text':' x <= 10^7-1 and the result is exact','line_number':713,'multiline':False]['text':' x < 2^23','line_number':714,'multiline':False]['text':' x >= 2^23','line_number':716,'multiline':False]['text':' x >= 10^7 and the result may be inexact ','line_number':719,'multiline':False]['text':' the smallest x is 10^7 which has 8 decimal digits','line_number':720,'multiline':False]['text':' the largest x is 0xffffffffffffffff = 18446744073709551615 w/ 20 digits','line_number':721,'multiline':False]['text':' x < 10^8','line_number':722,'multiline':False]['text':' number of digits to remove for q = 8','line_number':724,'multiline':False]['text':' x < 10^9','line_number':725,'multiline':False]['text':' number of digits to remove for q = 9','line_number':727,'multiline':False]['text':' x < 10^10','line_number':728,'multiline':False]['text':' number of digits to remove for q = 10','line_number':730,'multiline':False]['text':' x < 10^11','line_number':731,'multiline':False]['text':' number of digits to remove for q = 11','line_number':733,'multiline':False]['text':' x < 10^12','line_number':734,'multiline':False]['text':' number of digits to remove for q = 12','line_number':736,'multiline':False]['text':' x < 10^13','line_number':737,'multiline':False]['text':' number of digits to remove for q = 13','line_number':739,'multiline':False]['text':' x < 10^14','line_number':740,'multiline':False]['text':' number of digits to remove for q = 14','line_number':742,'multiline':False]['text':' x < 10^15','line_number':743,'multiline':False]['text':' number of digits to remove for q = 15','line_number':745,'multiline':False]['text':' x < 10^16','line_number':746,'multiline':False]['text':' number of digits to remove for q = 16','line_number':748,'multiline':False]['text':' x < 10^17','line_number':749,'multiline':False]['text':' number of digits to remove for q = 17','line_number':751,'multiline':False]['text':' x < 10^18','line_number':752,'multiline':False]['text':' number of digits to remove for q = 18','line_number':754,'multiline':False]['text':' x < 10^19','line_number':755,'multiline':False]['text':' number of digits to remove for q = 19','line_number':757,'multiline':False]['text':' x < 10^20','line_number':758,'multiline':False]['text':' number of digits to remove for q = 20','line_number':760,'multiline':False]['text':' overflow and underflow are not possible','line_number':762,'multiline':False]['text':' Note: performance can be improved by inlining this call','line_number':763,'multiline':False]['text':' would work for 20 digits too if x fits in 64 bits','line_number':765,'multiline':False]['text':' q = 20','line_number':770,'multiline':False]['text':' res.w[1] is 0','line_number':776,'multiline':False]['text':' set the inexact flag','line_number':780,'multiline':False]['text':' general correction from RN to RA, RM, RP, RZ; result uses ind for exp','line_number':784,'multiline':False]['text':' res = 10^7 => rounding overflow','line_number':790,'multiline':False]['text':' 10^6','line_number':791,'multiline':False]['text':' check if we crossed into the lower decade','line_number':798,'multiline':False]['text':' 10^6 - 1','line_number':799,'multiline':False]['text':' 10^7 - 1','line_number':800,'multiline':False]['text':' exact, the result is already correct','line_number':804,'multiline':False]['text':' res < 2^23','line_number':807,'multiline':False]['text':' res >= 2^23 ','line_number':809,'multiline':False]