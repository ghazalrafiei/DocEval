['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without 
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright 
      notice, this list of conditions and the following disclaimer in the 
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors 
      may be used to endorse or promote products derived from this software 
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]['text':' skip cases where at least one operand is NaN or infinity','line_number':123,'multiline':False]['text':' x, y are 0 or f but not inf or NaN => unpack the arguments and check','line_number':128,'multiline':False]['text':' for non-canonical values','line_number':129,'multiline':False]['text':' 0 for positive, MASK_SIGN for negative','line_number':131,'multiline':False]['text':' check for non-canonical values - treated as zero','line_number':134,'multiline':False]['text':' G0_G1=11 => non-canonical','line_number':137,'multiline':False]['text':' biased and shifted left 49 bits','line_number':138,'multiline':False]['text':' significand high','line_number':139,'multiline':False]['text':' significand low','line_number':140,'multiline':False]['text':' G0_G1 != 11','line_number':141,'multiline':False]['text':' biased and shifted left 49 bits','line_number':142,'multiline':False]['text':' x is non-canonical if coefficient is larger than 10^34 -1','line_number':146,'multiline':False]['text':' canonical          ','line_number':149,'multiline':False]['text':' 0 for positive, MASK_SIGN for negative','line_number':153,'multiline':False]['text':' check for non-canonical values - treated as zero','line_number':156,'multiline':False]['text':' G0_G1=11 => non-canonical','line_number':159,'multiline':False]['text':' biased and shifted left 49 bits','line_number':160,'multiline':False]['text':' significand high','line_number':161,'multiline':False]['text':' significand low ','line_number':162,'multiline':False]['text':' G0_G1 != 11','line_number':163,'multiline':False]['text':' biased and shifted left 49 bits','line_number':164,'multiline':False]['text':' y is non-canonical if coefficient is larger than 10^34 -1','line_number':168,'multiline':False]['text':' canonical','line_number':171,'multiline':False]['text':' sign of the product','line_number':175,'multiline':False]['text':' true_p_exp, p_exp are used only for 0 * 0, 0 * f, or f * 0 ','line_number':178,'multiline':False]['text':' cannot be less than EXP_MIN','line_number':180,'multiline':False]['text':' cannot be more than EXP_MAX','line_number':182,'multiline':False]['text':' x = 0 or y = 0','line_number':188,'multiline':False]['text':' the result is 0','line_number':189,'multiline':False]['text':' preferred exponent in [EXP_MIN, EXP_MAX]','line_number':190,'multiline':False]['text':' else continue','line_number':192,'multiline':False]['text':' swap x and y - ensure that a NaN in x has 'higher precedence' than one in y','line_number':194,'multiline':False]['text':' bid128_mul stands for bid128qq_mul','line_number':312,'multiline':False]['text':' skip cases where at least one operand is NaN or infinity','line_number':344,'multiline':False]['text':' x, y are 0 or f but not inf or NaN => unpack the arguments and check','line_number':349,'multiline':False]['text':' for non-canonical values','line_number':350,'multiline':False]['text':' 0 for positive, MASK_SIGN for negative','line_number':352,'multiline':False]['text':' check for non-canonical values - treated as zero','line_number':355,'multiline':False]['text':' G0_G1=11 => non-canonical','line_number':357,'multiline':False]['text':' biased and shifted left 49 bits','line_number':358,'multiline':False]['text':' significand high','line_number':359,'multiline':False]['text':' significand low','line_number':360,'multiline':False]['text':' G0_G1 != 11','line_number':361,'multiline':False]['text':' biased and shifted left 49 bits','line_number':362,'multiline':False]['text':' x is non-canonical if coefficient is larger than 10^34 -1','line_number':366,'multiline':False]['text':' canonical          ','line_number':369,'multiline':False]['text':' 0 for positive, MASK_SIGN for negative','line_number':373,'multiline':False]['text':' check for non-canonical values - treated as zero','line_number':376,'multiline':False]['text':' G0_G1=11 => non-canonical','line_number':378,'multiline':False]['text':' biased and shifted left 49 bits','line_number':379,'multiline':False]['text':' significand high','line_number':380,'multiline':False]['text':' significand low ','line_number':381,'multiline':False]['text':' G0_G1 != 11','line_number':382,'multiline':False]['text':' biased and shifted left 49 bits','line_number':383,'multiline':False]['text':' y is non-canonical if coefficient is larger than 10^34 -1','line_number':387,'multiline':False]['text':' canonical','line_number':390,'multiline':False]['text':' sign of the product','line_number':394,'multiline':False]['text':' true_p_exp, p_exp are used only for 0 * 0, 0 * f, or f * 0 ','line_number':397,'multiline':False]['text':' cannot be less than EXP_MIN','line_number':399,'multiline':False]['text':' cannot be more than EXP_MAX','line_number':401,'multiline':False]['text':' x = 0 or y = 0','line_number':407,'multiline':False]['text':' the result is 0','line_number':408,'multiline':False]['text':' preferred exponent in [EXP_MIN, EXP_MAX]','line_number':409,'multiline':False]['text':' else continue','line_number':413,'multiline':False]['text':' swap x and y - ensure that a NaN in x has 'higher precedence' than one in y','line_number':419,'multiline':False]