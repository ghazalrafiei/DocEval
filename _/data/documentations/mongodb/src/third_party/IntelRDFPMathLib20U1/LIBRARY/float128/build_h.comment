['text':'*****************************************************************************
  Copyright (c) 2007-2011, Intel Corp.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Intel Corporation nor the names of its contributors
      may be used to endorse or promote products derived from this software
      without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
*****************************************************************************','line_number':1,'multiline':True]['text':' =============================================================================','line_number':33,'multiline':False]['text':' The intel compiler defines __GNUC__ which causes incorrect type definitions.','line_number':34,'multiline':False]['text':' to be chosen. Detect the situation here and correct so we get a consistent','line_number':35,'multiline':False]['text':' set of type definitions','line_number':36,'multiline':False]['text':' =============================================================================','line_number':37,'multiline':False]['text':' =============================================================================','line_number':43,'multiline':False]['text':' Since Intel quad names have a leading '__', the default single precision','line_number':44,'multiline':False]['text':' names are incorrect, so make sure the log2 function is correctly defined','line_number':45,'multiline':False]['text':' for dpml_ux_bessel.c','line_number':46,'multiline':False]['text':' =============================================================================','line_number':47,'multiline':False]['text':' =============================================================================','line_number':51,'multiline':False]['text':' Select calling interface to the DPML routines','line_number':52,'multiline':False]['text':' =============================================================================','line_number':53,'multiline':False]['text':' =====================================================================','line_number':64,'multiline':False]['text':' On intel platforms, return quad values and arguments are "by-value"','line_number':65,'multiline':False]['text':' =====================================================================','line_number':66,'multiline':False]['text':' =====================================================================','line_number':77,'multiline':False]['text':' Intel quad precision names end in q rather than l and have a '__'','line_number':78,'multiline':False]['text':' prefix','line_number':79,'multiline':False]['text':' =====================================================================','line_number':80,'multiline':False]['text':' =====================================================================','line_number':92,'multiline':False]['text':' Use the defualt "pass-by-reference" interface. But this case we need','line_number':93,'multiline':False]['text':' to provide some type defintion for the _Quad type.','line_number':94,'multiline':False]['text':' =====================================================================','line_number':95,'multiline':False]['text':' =============================================================================','line_number':125,'multiline':False]['text':' Set up the appropriate exception handling macros','line_number':126,'multiline':False]['text':' =============================================================================','line_number':127,'multiline':False]['text':' =============================================================================','line_number':138,'multiline':False]['text':' Force long double to be 128 bits','line_number':139,'multiline':False]['text':' =============================================================================','line_number':140,'multiline':False]['text':' =============================================================================','line_number':144,'multiline':False]['text':' Now generic system stuff','line_number':145,'multiline':False]['text':' =============================================================================','line_number':146,'multiline':False]['text':' Linux, Proton compiler(i.e. IA32) ','line_number':148,'multiline':True]['text':' #68: integer conversion resulted in a change of sign ','line_number':153,'multiline':True]['text':' #186: pointless comparison of unsigned integer with zero ','line_number':154,'multiline':True]['text':' #1572: floating-point equality and inequality comparisons are unreliable ','line_number':155,'multiline':True]['text':' BUILD_H ','line_number':158,'multiline':True]