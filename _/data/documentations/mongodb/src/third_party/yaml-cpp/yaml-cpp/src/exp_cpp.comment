['text':' IWYU pragma: keep','line_number':5,'multiline':False]['text':' namespace YAML','line_number':9,'multiline':False]['text':' Escape','line_number':35,'multiline':False]['text':' . Translates the next 'codeLength' characters into a hex number and returns','line_number':36,'multiline':False]['text':' the result.','line_number':37,'multiline':False]['text':' . Throws if it's not actually hex.','line_number':38,'multiline':False]['text':' grab string','line_number':40,'multiline':False]['text':' get the value','line_number':45,'multiline':False]['text':' legal unicode?','line_number':48,'multiline':False]['text':' now break it up into chars','line_number':55,'multiline':False]['text':' Escape','line_number':68,'multiline':False]['text':' . Escapes the sequence starting 'in' (it must begin with a '\' or single','line_number':69,'multiline':False]['text':' quote)','line_number':70,'multiline':False]['text':'   and returns the result.','line_number':71,'multiline':False]['text':' . Throws if it's an unknown escape character.','line_number':72,'multiline':False]['text':' eat slash','line_number':74,'multiline':False]['text':' switch on escape character','line_number':77,'multiline':False]['text':' first do single quote, since it's easier','line_number':80,'multiline':False]['text':' now do the slash (we're not gonna check if it's a slash - you better pass','line_number':84,'multiline':False]['text':' one!)','line_number':85,'multiline':False]['text':' LS (#x2028)','line_number':121,'multiline':False]['text':' PS (#x2029)','line_number':123,'multiline':False]