['text':' LibTomCrypt, modular cryptographic library -- Tom St Denis
 *
 * LibTomCrypt is a library that provides various cryptographic
 * algorithms in a highly modular and flexible manner.
 *
 * The library is free for all purposes without any express
 * guarantee it works.
 ','line_number':1,'multiline':True]['text':' ---- PRNG Stuff ---- ','line_number':10,'multiline':True]['text':' chacha state ','line_number':27,'multiline':True]['text':' entropy buffer ','line_number':28,'multiline':True]['text':' entropy counter ','line_number':29,'multiline':True]['text':' the  pools ','line_number':35,'multiline':True]['text':' the current key ','line_number':39,'multiline':True]['text':' IV for CTR mode ','line_number':40,'multiline':True]['text':' current pool we will add to ','line_number':42,'multiline':True]['text':' length of 0'th pool ','line_number':43,'multiline':True]['text':' number of times we have reset ','line_number':46,'multiline':True]['text':' sober128 state ','line_number':52,'multiline':True]['text':' entropy buffer ','line_number':53,'multiline':True]['text':' entropy counter ','line_number':54,'multiline':True]['text':' ready flag 0-1 ','line_number':77,'multiline':True]['text':' lock ','line_number':78,'multiline':True]['text':'* PRNG descriptor ','line_number':81,'multiline':True]['text':'* Name of the PRNG ','line_number':83,'multiline':True]['text':'* size in bytes of exported state ','line_number':85,'multiline':True]['text':'* Start a PRNG state
        @param prng   [out] The state to initialize
        @return CRYPT_OK if successful
    ','line_number':87,'multiline':True]['text':'* Add entropy to the PRNG
        @param in         The entropy
        @param inlen      Length of the entropy (octets)\
        @param prng       The PRNG state
        @return CRYPT_OK if successful
    ','line_number':92,'multiline':True]['text':'* Ready a PRNG state to read from
        @param prng       The PRNG state to ready
        @return CRYPT_OK if successful
    ','line_number':99,'multiline':True]['text':'* Read from the PRNG
        @param out     [out] Where to store the data
        @param outlen  Length of data desired (octets)
        @param prng    The PRNG state to read from
        @return Number of octets read
    ','line_number':104,'multiline':True]['text':'* Terminate a PRNG state
        @param prng   The PRNG state to terminate
        @return CRYPT_OK if successful
    ','line_number':111,'multiline':True]['text':'* Export a PRNG state
        @param out     [out] The destination for the state
        @param outlen  [in/out] The max size and resulting size of the PRNG state
        @param prng    The PRNG to export
        @return CRYPT_OK if successful
    ','line_number':116,'multiline':True]['text':'* Import a PRNG state
        @param in      The data to import
        @param inlen   The length of the data to import (octets)
        @param prng    The PRNG to initialize/import
        @return CRYPT_OK if successful
    ','line_number':123,'multiline':True]['text':'* Self-test the PRNG
        @return CRYPT_OK if successful, CRYPT_NOP if self-testing has been disabled
    ','line_number':130,'multiline':True]['text':' Slow RNG you **might** be able to use to seed a PRNG with.  Be careful as this
 * might not work on all platforms as planned
 ','line_number':215,'multiline':True]['text':' ref:         HEAD -> master, tag: v1.18.2 ','line_number':230,'multiline':True]['text':' git commit:  7e7eb695d581782f04b24dc444cbfde86af59853 ','line_number':231,'multiline':True]['text':' commit time: 2018-07-01 22:49:01 +0200 ','line_number':232,'multiline':True]