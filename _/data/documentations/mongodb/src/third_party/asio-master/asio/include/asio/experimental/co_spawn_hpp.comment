['text':'','line_number':1,'multiline':False]['text':' experimental/co_spawn.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' namespace detail','line_number':41,'multiline':False]['text':'/ Awaitable type that returns a completion token for the current coroutine.','line_number':45,'multiline':False]['text':'/ Awaitable object that returns a completion token for the current coroutine.','line_number':48,'multiline':False]['text':'/ Awaitable type that returns the executor of the current coroutine.','line_number':51,'multiline':False]['text':'/ Awaitable object that returns the executor of the current coroutine.','line_number':54,'multiline':False]['text':' namespace this_coro','line_number':57,'multiline':False]['text':'/ A completion token that represents the currently executing coroutine.','line_number':59,'multiline':False]['text':'*
 * The await_token class is used to represent the currently executing
 * coroutine. An await_token may be passed as a handler to an asynchronous
 * operation. For example:
 *
 * @code awaitable<void> my_coroutine()
 * {
 *   await_token token = co_await this_coro::token();
 *   ...
 *   std::size_t n = co_await my_socket.async_read_some(buffer, token);
 *   ...
 * } @endcode
 *
 * The initiating function (async_read_some in the above example) suspends the
 * current coroutine. The coroutine is resumed when the asynchronous operation
 * completes, and the result of the operation is returned.
 ','line_number':60,'multiline':True]['text':'/ The associated executor type.','line_number':81,'multiline':False]['text':'/ Copy constructor.','line_number':84,'multiline':False]['text':'/ Move constructor.','line_number':90,'multiline':False]['text':'/ Get the associated executor.','line_number':96,'multiline':False]['text':' No assignment allowed.','line_number':103,'multiline':False]['text':' Private constructor used by awaitee_base.','line_number':109,'multiline':False]['text':'/ The return type of a coroutine or asynchronous operation.','line_number':118,'multiline':False]['text':'/ The type of the awaited value.','line_number':123,'multiline':False]['text':'/ The executor type that will be used for the coroutine.','line_number':126,'multiline':False]['text':'/ Move constructor.','line_number':129,'multiline':False]['text':'/ Destructor','line_number':135,'multiline':False]['text':' Support for co_await keyword.','line_number':148,'multiline':False]['text':' Support for co_await keyword.','line_number':154,'multiline':False]['text':' Support for co_await keyword.','line_number':160,'multiline':False]['text':' Support for co_await keyword.','line_number':167,'multiline':False]['text':' !defined(GENERATING_DOCUMENTATION)','line_number':173,'multiline':False]['text':' Not copy constructible or copy assignable.','line_number':179,'multiline':False]['text':' Construct the awaitable from a coroutine's promise object.','line_number':183,'multiline':False]['text':'/ Spawn a new thread of execution.','line_number':189,'multiline':False]['text':'/ Spawn a new thread of execution.','line_number':198,'multiline':False]['text':'/ Spawn a new thread of execution.','line_number':208,'multiline':False]['text':' namespace experimental','line_number':217,'multiline':False]['text':' namespace asio','line_number':218,'multiline':False]['text':' defined(ASIO_HAS_CO_AWAIT) || defined(GENERATING_DOCUMENTATION)','line_number':224,'multiline':False]['text':' ASIO_EXPERIMENTAL_CO_SPAWN_HPP','line_number':226,'multiline':False]