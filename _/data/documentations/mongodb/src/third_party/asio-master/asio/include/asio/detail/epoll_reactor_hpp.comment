['text':'','line_number':1,'multiline':False]['text':' detail/epoll_reactor.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' defined(ASIO_HAS_TIMERFD)','line_number':37,'multiline':False]['text':' The mutex type used by this reactor.','line_number':48,'multiline':False]['text':' Per-descriptor queues.','line_number':55,'multiline':False]['text':' Per-descriptor data.','line_number':81,'multiline':False]['text':' Constructor.','line_number':84,'multiline':False]['text':' Destructor.','line_number':87,'multiline':False]['text':' Destroy all user-defined handler objects owned by the service.','line_number':90,'multiline':False]['text':' Recreate internal descriptors following a fork.','line_number':93,'multiline':False]['text':' Initialise the task.','line_number':97,'multiline':False]['text':' Register a socket with the reactor. Returns 0 on success, system error','line_number':100,'multiline':False]['text':' code on failure.','line_number':101,'multiline':False]['text':' Register a descriptor with an associated single operation. Returns 0 on','line_number':105,'multiline':False]['text':' success, system error code on failure.','line_number':106,'multiline':False]['text':' Move descriptor registration from one descriptor_data object to another.','line_number':111,'multiline':False]['text':' Post a reactor operation for immediate completion.','line_number':116,'multiline':False]['text':' Start a new operation. The reactor operation will be performed when the','line_number':122,'multiline':False]['text':' given descriptor is flagged as ready, or an error has occurred.','line_number':123,'multiline':False]['text':' Cancel all operations associated with the given descriptor. The','line_number':128,'multiline':False]['text':' handlers associated with the descriptor will be invoked with the','line_number':129,'multiline':False]['text':' operation_aborted error.','line_number':130,'multiline':False]['text':' Cancel any operations that are running against the descriptor and remove','line_number':134,'multiline':False]['text':' its registration from the reactor. The reactor resources associated with','line_number':135,'multiline':False]['text':' the descriptor must be released by calling cleanup_descriptor_data.','line_number':136,'multiline':False]['text':' Remove the descriptor's registration from the reactor. The reactor','line_number':140,'multiline':False]['text':' resources associated with the descriptor must be released by calling','line_number':141,'multiline':False]['text':' cleanup_descriptor_data.','line_number':142,'multiline':False]['text':' Perform any post-deregistration cleanup tasks associated with the','line_number':146,'multiline':False]['text':' descriptor data.','line_number':147,'multiline':False]['text':' Add a new timer queue to the reactor.','line_number':151,'multiline':False]['text':' Remove a timer queue from the reactor.','line_number':155,'multiline':False]['text':' Schedule a new operation in the given timer queue to expire at the','line_number':159,'multiline':False]['text':' specified absolute time.','line_number':160,'multiline':False]['text':' Cancel the timer operations associated with the given token. Returns the','line_number':166,'multiline':False]['text':' number of operations that have been posted or dispatched.','line_number':167,'multiline':False]['text':' Move the timer operations associated with the given timer.','line_number':173,'multiline':False]['text':' Run epoll once until interrupted or events are ready to be dispatched.','line_number':179,'multiline':False]['text':' Interrupt the select loop.','line_number':182,'multiline':False]['text':' The hint to pass to epoll_create to size its data structures.','line_number':186,'multiline':False]['text':' Create the epoll file descriptor. Throws an exception if the descriptor','line_number':189,'multiline':False]['text':' cannot be created.','line_number':190,'multiline':False]['text':' Create the timerfd file descriptor. Does not throw.','line_number':193,'multiline':False]['text':' Allocate a new descriptor state object.','line_number':196,'multiline':False]['text':' Free an existing descriptor state object.','line_number':199,'multiline':False]['text':' Helper function to add a new timer queue.','line_number':202,'multiline':False]['text':' Helper function to remove a timer queue.','line_number':205,'multiline':False]['text':' Called to recalculate and update the timeout.','line_number':208,'multiline':False]['text':' Get the timeout value for the epoll_wait call. The timeout value is','line_number':211,'multiline':False]['text':' returned as a number of milliseconds. A return value of -1 indicates','line_number':212,'multiline':False]['text':' that epoll_wait should block indefinitely.','line_number':213,'multiline':False]['text':' Get the timeout value for the timer descriptor. The return value is the','line_number':217,'multiline':False]['text':' flag argument to be used when calling timerfd_settime.','line_number':218,'multiline':False]['text':' defined(ASIO_HAS_TIMERFD)','line_number':220,'multiline':False]['text':' The scheduler implementation used to post completions.','line_number':222,'multiline':False]['text':' Mutex to protect access to internal data.','line_number':225,'multiline':False]['text':' The interrupter is used to break a blocking epoll_wait call.','line_number':228,'multiline':False]['text':' The epoll file descriptor.','line_number':231,'multiline':False]['text':' The timer file descriptor.','line_number':234,'multiline':False]['text':' The timer queues.','line_number':237,'multiline':False]['text':' Whether the service has been shut down.','line_number':240,'multiline':False]['text':' Mutex to protect access to the registered descriptors.','line_number':243,'multiline':False]['text':' Keep track of all registered descriptors.','line_number':246,'multiline':False]['text':' Helper class to do post-perform_io cleanup.','line_number':249,'multiline':False]['text':' namespace detail','line_number':254,'multiline':False]['text':' namespace asio','line_number':255,'multiline':False]['text':' defined(ASIO_HEADER_ONLY)','line_number':262,'multiline':False]['text':' defined(ASIO_HAS_EPOLL)','line_number':264,'multiline':False]['text':' ASIO_DETAIL_EPOLL_REACTOR_HPP','line_number':266,'multiline':False]