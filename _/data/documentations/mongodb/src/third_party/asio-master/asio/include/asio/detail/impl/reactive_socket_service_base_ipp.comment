['text':'','line_number':1,'multiline':False]['text':' detail/reactive_socket_service_base.ipp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' The descriptor is closed by the OS even if close() returns an error.','line_number':119,'multiline':False]['text':'','line_number':120,'multiline':False]['text':' (Actually, POSIX says the state of the descriptor is unspecified. On','line_number':121,'multiline':False]['text':' Linux the descriptor is apparently closed anyway; e.g. see','line_number':122,'multiline':False]['text':'   http://lkml.org/lkml/2005/9/10/129','line_number':123,'multiline':False]['text':' We'll just have to assume that other OSes follow the same behaviour. The','line_number':124,'multiline':False]['text':' known exception is when Windows's closesocket() function fails with','line_number':125,'multiline':False]['text':' WSAEWOULDBLOCK, but this case is handled inside socket_ops::close().','line_number':126,'multiline':False]['text':' namespace detail','line_number':292,'multiline':False]['text':' namespace asio','line_number':293,'multiline':False]['text':' !defined(ASIO_HAS_IOCP)','line_number':297,'multiline':False]['text':'   && !defined(ASIO_WINDOWS_RUNTIME)','line_number':298,'multiline':False]['text':' ASIO_DETAIL_IMPL_REACTIVE_SOCKET_SERVICE_BASE_IPP','line_number':300,'multiline':False]