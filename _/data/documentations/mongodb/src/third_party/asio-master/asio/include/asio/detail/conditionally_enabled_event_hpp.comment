['text':'','line_number':1,'multiline':False]['text':' detail/conditionally_enabled_event.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' Mutex adapter used to conditionally enable or disable locking.','line_number':30,'multiline':False]['text':' Constructor.','line_number':35,'multiline':False]['text':' Destructor.','line_number':40,'multiline':False]['text':' Signal the event. (Retained for backward compatibility.)','line_number':45,'multiline':False]['text':' Signal all waiters.','line_number':52,'multiline':False]['text':' Unlock the mutex and signal one waiter.','line_number':59,'multiline':False]['text':' If there's a waiter, unlock the mutex and signal it.','line_number':67,'multiline':False]['text':' Reset the event.','line_number':77,'multiline':False]['text':' Wait for the event to become signalled.','line_number':84,'multiline':False]['text':' Timed wait for the event to become signalled.','line_number':93,'multiline':False]['text':' namespace detail','line_number':107,'multiline':False]['text':' namespace asio','line_number':108,'multiline':False]['text':' ASIO_DETAIL_CONDITIONALLY_ENABLED_EVENT_HPP','line_number':112,'multiline':False]