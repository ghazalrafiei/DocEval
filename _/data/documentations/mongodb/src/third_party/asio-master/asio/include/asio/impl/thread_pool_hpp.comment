['text':'','line_number':1,'multiline':False]['text':' impl/thread_pool.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' Invoke immediately if we are already inside the thread pool.','line_number':58,'multiline':False]['text':' Make a local, non-const copy of the function.','line_number':61,'multiline':False]['text':' Allocate and construct an operation to wrap the function.','line_number':69,'multiline':False]['text':' Allocate and construct an operation to wrap the function.','line_number':87,'multiline':False]['text':' Allocate and construct an operation to wrap the function.','line_number':105,'multiline':False]['text':' namespace asio','line_number':123,'multiline':False]['text':' ASIO_IMPL_THREAD_POOL_HPP','line_number':127,'multiline':False]