['text':'','line_number':1,'multiline':False]['text':' detail/impl/win_mutex.ipp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' Not sure if MinGW supports structured exception handling, so for now','line_number':42,'multiline':False]['text':' we'll just call the Windows API and hope.','line_number':43,'multiline':False]['text':' namespace detail','line_number':77,'multiline':False]['text':' namespace asio','line_number':78,'multiline':False]['text':' defined(ASIO_WINDOWS)','line_number':82,'multiline':False]['text':' ASIO_DETAIL_IMPL_WIN_MUTEX_IPP','line_number':84,'multiline':False]