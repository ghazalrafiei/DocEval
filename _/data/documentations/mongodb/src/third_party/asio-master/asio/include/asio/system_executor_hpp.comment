['text':'','line_number':1,'multiline':False]['text':' system_executor.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':'/ An executor that uses arbitrary threads.','line_number':26,'multiline':False]['text':'*
 * The system executor represents an execution context where functions are
 * permitted to run on arbitrary threads. The post() and defer() functions
 * schedule the function to run on an unspecified system thread pool, and
 * dispatch() invokes the function immediately.
 ','line_number':27,'multiline':True]['text':'/ Obtain the underlying execution context.','line_number':36,'multiline':False]['text':'/ Inform the executor that it has some outstanding work to do.','line_number':39,'multiline':False]['text':'*
   * For the system executor, this is a no-op.
   ','line_number':40,'multiline':True]['text':'/ Inform the executor that some work is no longer outstanding.','line_number':47,'multiline':False]['text':'*
   * For the system executor, this is a no-op.
   ','line_number':48,'multiline':True]['text':'/ Request the system executor to invoke the given function object.','line_number':55,'multiline':False]['text':'*
   * This function is used to ask the executor to execute the given function
   * object. The function object will always be executed inside this function.
   *
   * @param f The function object to be called. The executor will make
   * a copy of the handler object as required. The function signature of the
   * function object must be: @code void function(); @endcode
   *
   * @param a An allocator that may be used by the executor to allocate the
   * internal storage needed for function invocation.
   ','line_number':56,'multiline':True]['text':'/ Request the system executor to invoke the given function object.','line_number':70,'multiline':False]['text':'*
   * This function is used to ask the executor to execute the given function
   * object. The function object will never be executed inside this function.
   * Instead, it will be scheduled to run on an unspecified system thread pool.
   *
   * @param f The function object to be called. The executor will make
   * a copy of the handler object as required. The function signature of the
   * function object must be: @code void function(); @endcode
   *
   * @param a An allocator that may be used by the executor to allocate the
   * internal storage needed for function invocation.
   ','line_number':71,'multiline':True]['text':'/ Request the system executor to invoke the given function object.','line_number':86,'multiline':False]['text':'*
   * This function is used to ask the executor to execute the given function
   * object. The function object will never be executed inside this function.
   * Instead, it will be scheduled to run on an unspecified system thread pool.
   *
   * @param f The function object to be called. The executor will make
   * a copy of the handler object as required. The function signature of the
   * function object must be: @code void function(); @endcode
   *
   * @param a An allocator that may be used by the executor to allocate the
   * internal storage needed for function invocation.
   ','line_number':87,'multiline':True]['text':'/ Compare two executors for equality.','line_number':102,'multiline':False]['text':'*
   * System executors always compare equal.
   ','line_number':103,'multiline':True]['text':'/ Compare two executors for inequality.','line_number':112,'multiline':False]['text':'*
   * System executors always compare equal.
   ','line_number':113,'multiline':True]['text':' namespace asio','line_number':123,'multiline':False]['text':' ASIO_SYSTEM_EXECUTOR_HPP','line_number':129,'multiline':False]