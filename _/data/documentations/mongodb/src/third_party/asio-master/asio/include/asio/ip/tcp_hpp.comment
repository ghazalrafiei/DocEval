['text':'','line_number':1,'multiline':False]['text':' ip/tcp.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':'/ Encapsulates the flags needed for TCP.','line_number':34,'multiline':False]['text':'*
 * The asio::ip::tcp class contains flags necessary for TCP sockets.
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Safe.
 *
 * @par Concepts:
 * Protocol, InternetProtocol.
 ','line_number':35,'multiline':True]['text':'/ The type of a TCP endpoint.','line_number':48,'multiline':False]['text':'/ Construct to represent the IPv4 TCP protocol.','line_number':51,'multiline':False]['text':'/ Construct to represent the IPv6 TCP protocol.','line_number':57,'multiline':False]['text':'/ Obtain an identifier for the type of the protocol.','line_number':63,'multiline':False]['text':'/ Obtain an identifier for the protocol.','line_number':69,'multiline':False]['text':'/ Obtain an identifier for the protocol family.','line_number':75,'multiline':False]['text':'/ The TCP socket type.','line_number':81,'multiline':False]['text':'/ The TCP acceptor type.','line_number':84,'multiline':False]['text':'/ The TCP resolver type.','line_number':87,'multiline':False]['text':'/ The TCP iostream type.','line_number':91,'multiline':False]['text':' !defined(ASIO_NO_IOSTREAM)','line_number':93,'multiline':False]['text':'/ Socket option for disabling the Nagle algorithm.','line_number':95,'multiline':False]['text':'*
   * Implements the IPPROTO_TCP/TCP_NODELAY socket option.
   *
   * @par Examples
   * Setting the option:
   * @code
   * asio::ip::tcp::socket socket(io_context); 
   * ...
   * asio::ip::tcp::no_delay option(true);
   * socket.set_option(option);
   * @endcode
   *
   * @par
   * Getting the current option value:
   * @code
   * asio::ip::tcp::socket socket(io_context); 
   * ...
   * asio::ip::tcp::no_delay option;
   * socket.get_option(option);
   * bool is_set = option.value();
   * @endcode
   *
   * @par Concepts:
   * Socket_Option, Boolean_Socket_Option.
   ','line_number':96,'multiline':True]['text':'/ Compare two protocols for equality.','line_number':128,'multiline':False]['text':'/ Compare two protocols for inequality.','line_number':134,'multiline':False]['text':' Construct with a specific family.','line_number':141,'multiline':False]['text':' namespace ip','line_number':150,'multiline':False]['text':' namespace asio','line_number':151,'multiline':False]['text':' ASIO_IP_TCP_HPP','line_number':155,'multiline':False]