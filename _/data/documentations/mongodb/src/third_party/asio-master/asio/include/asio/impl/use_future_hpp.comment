['text':'','line_number':1,'multiline':False]['text':' impl/use_future.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':40,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':49,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':58,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':68,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':71,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':78,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':87,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':95,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':105,'multiline':False]['text':'','line_number':125,'multiline':True]['text':' defined(ASIO_NO_EXCEPTIONS)','line_number':129,'multiline':False]['text':'','line_number':160,'multiline':True]['text':' defined(ASIO_NO_EXCEPTIONS)','line_number':164,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':166,'multiline':False]['text':' A function object adapter to invoke a nullary function object and capture','line_number':168,'multiline':False]['text':' any exception thrown into a promise.','line_number':169,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':184,'multiline':False]['text':' !defined(ASIO_NO_EXCEPTIONS)','line_number':193,'multiline':False]['text':' An executor that adapts the system_executor to capture any exeption thrown','line_number':201,'multiline':False]['text':' by a submitted function object and save it into a promise.','line_number':202,'multiline':False]['text':' The base class for all completion handlers that create promises.','line_number':256,'multiline':False]['text':' For completion signature void().','line_number':286,'multiline':False]['text':' For completion signature void(error_code).','line_number':297,'multiline':False]['text':' For completion signature void(exception_ptr).','line_number':317,'multiline':False]['text':' For completion signature void(T).','line_number':335,'multiline':False]['text':' For completion signature void(error_code, T).','line_number':348,'multiline':False]['text':' For completion signature void(exception_ptr, T).','line_number':369,'multiline':False]['text':' For completion signature void(T1, ..., Tn);','line_number':386,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':402,'multiline':False]['text':'','line_number':412,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':416,'multiline':False]['text':' For completion signature void(error_code, T1, ..., Tn);','line_number':419,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':445,'multiline':False]['text':'','line_number':465,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':469,'multiline':False]['text':' For completion signature void(exception_ptr, T1, ..., Tn);','line_number':472,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':494,'multiline':False]['text':'','line_number':510,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':514,'multiline':False]['text':' Helper template to choose the appropriate concrete promise handler','line_number':517,'multiline':False]['text':' implementation based on the supplied completion signature.','line_number':518,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':559,'multiline':False]['text':'','line_number':579,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':583,'multiline':False]['text':' Completion handlers produced from the use_future completion token, when not','line_number':585,'multiline':False]['text':' using use_future::operator().','line_number':586,'multiline':False]['text':' Helper base class for async_result specialisation.','line_number':628,'multiline':False]['text':' Return value from use_future::operator().','line_number':650,'multiline':False]['text':'private:','line_number':661,'multiline':False]['text':' Completion handlers produced from the use_future completion token, when','line_number':666,'multiline':False]['text':' using use_future::operator().','line_number':667,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':697,'multiline':False]['text':'','line_number':711,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':715,'multiline':False]['text':' Helper base class for async_result specialisation.','line_number':742,'multiline':False]['text':' namespace detail','line_number':764,'multiline':False]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':809,'multiline':False]['text':'','line_number':875,'multiline':True]['text':' defined(ASIO_HAS_VARIADIC_TEMPLATES)','line_number':879,'multiline':False]['text':' !defined(ASIO_NO_DEPRECATED)','line_number':929,'multiline':False]['text':' !defined(GENERATING_DOCUMENTATION)','line_number':931,'multiline':False]['text':' namespace asio','line_number':933,'multiline':False]['text':' ASIO_IMPL_USE_FUTURE_HPP','line_number':937,'multiline':False]