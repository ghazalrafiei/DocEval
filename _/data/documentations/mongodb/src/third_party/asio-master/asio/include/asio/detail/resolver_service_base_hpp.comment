['text':'','line_number':1,'multiline':False]['text':' detail/resolver_service_base.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2018 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' The implementation type of the resolver. A cancellation token is used to','line_number':38,'multiline':False]['text':' indicate to the background thread that the operation has been cancelled.','line_number':39,'multiline':False]['text':' Constructor.','line_number':42,'multiline':False]['text':' Destructor.','line_number':45,'multiline':False]['text':' Destroy all user-defined handler objects owned by the service.','line_number':48,'multiline':False]['text':' Perform any fork-related housekeeping.','line_number':51,'multiline':False]['text':' Construct a new resolver implementation.','line_number':55,'multiline':False]['text':' Destroy a resolver implementation.','line_number':58,'multiline':False]['text':' Move-construct a new resolver implementation.','line_number':61,'multiline':False]['text':' Move-assign from another resolver implementation.','line_number':65,'multiline':False]['text':' Cancel pending asynchronous operations.','line_number':70,'multiline':False]['text':' Helper function to start an asynchronous resolve operation.','line_number':74,'multiline':False]['text':' Helper class to perform exception-safe cleanup of addrinfo objects.','line_number':78,'multiline':False]['text':' !defined(ASIO_WINDOWS_RUNTIME)','line_number':102,'multiline':False]['text':' Helper class to run the work io_context in a thread.','line_number':104,'multiline':False]['text':' Start the work thread if it's not already running.','line_number':107,'multiline':False]['text':' The io_context implementation used to post completions.','line_number':110,'multiline':False]['text':' Mutex to protect access to internal data.','line_number':114,'multiline':False]['text':' Private io_context used for performing asynchronous host resolution.','line_number':117,'multiline':False]['text':' The work io_context implementation used to post completions.','line_number':120,'multiline':False]['text':' Work for the private io_context to perform.','line_number':123,'multiline':False]['text':' Thread used for running the work io_context's run loop.','line_number':127,'multiline':False]['text':' namespace detail','line_number':131,'multiline':False]['text':' namespace asio','line_number':132,'multiline':False]['text':' defined(ASIO_HEADER_ONLY)','line_number':138,'multiline':False]['text':' ASIO_DETAIL_RESOLVER_SERVICE_BASE_HPP','line_number':140,'multiline':False]