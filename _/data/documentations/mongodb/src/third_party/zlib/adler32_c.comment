['text':' adler32.c -- compute the Adler-32 checksum of a data stream
 * Copyright (C) 1995-2011, 2016 Mark Adler
 * For conditions of distribution and use, see copyright notice in zlib.h
 ','line_number':1,'multiline':True]['text':' @(#) $Id$ ','line_number':6,'multiline':True]['text':' largest prime smaller than 65536 ','line_number':10,'multiline':True]['text':' NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 ','line_number':12,'multiline':True]['text':' use NO_DIVIDE if your processor does not do division in hardware --
   try it both ways to see which is faster ','line_number':20,'multiline':True]['text':' note that this assumes BASE is 65521, where 65536 % 65521 == 15
   (thank you to John Reiser for pointing this out) ','line_number':23,'multiline':True]['text':' this assumes a is not negative ','line_number':42,'multiline':True]['text':' ========================================================================= ','line_number':60,'multiline':True]['text':' split Adler-32 into component sums ','line_number':65,'multiline':True]['text':' in case user likes doing a byte at a time, keep it fast ','line_number':69,'multiline':True]['text':' initial Adler-32 value (deferred check for len == 1 speed) ','line_number':80,'multiline':True]['text':' in case short lengths are provided, keep it somewhat fast ','line_number':84,'multiline':True]['text':' only added so many BASE's ','line_number':92,'multiline':True]['text':' do length NMAX blocks -- requires just one modulo operation ','line_number':96,'multiline':True]['text':' NMAX is divisible by 16 ','line_number':99,'multiline':True]['text':' 16 sums unrolled ','line_number':101,'multiline':True]['text':' do remaining bytes (less than NMAX, still just one modulo) ','line_number':108,'multiline':True]['text':' avoid modulos if none remaining ','line_number':109,'multiline':True]['text':' return recombined sums ','line_number':123,'multiline':True]['text':' ========================================================================= ','line_number':127,'multiline':True]['text':' ========================================================================= ','line_number':132,'multiline':True]['text':' for negative len, return invalid adler32 as a clue for debugging ','line_number':138,'multiline':True]['text':' the derivation of this formula is left as an exercise for the reader ','line_number':142,'multiline':True]['text':' assumes len2 >= 0 ','line_number':143,'multiline':True]['text':' ========================================================================= ','line_number':157,'multiline':True]