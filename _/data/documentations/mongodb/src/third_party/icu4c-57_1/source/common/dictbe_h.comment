['text':'*
 *******************************************************************************
 * Copyright (C) 2006-2014, International Business Machines Corporation   *
 * and others. All Rights Reserved.                                            *
 *******************************************************************************
 ','line_number':1,'multiline':True]['text':'******************************************************************
 * DictionaryBreakEngine
 ','line_number':22,'multiline':True]['text':'*
 * <p>DictionaryBreakEngine is a kind of LanguageBreakEngine that uses a
 * dictionary to determine language-specific breaks.</p>
 *
 * <p>After it is constructed a DictionaryBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':26,'multiline':True]['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':35,'multiline':True]['text':'*
     * The set of break types handled by this engine
     * @internal
     ','line_number':42,'multiline':True]['text':'*
   * <p>Default constructor.</p>
   *
   ','line_number':49,'multiline':True]['text':'*
   * <p>Constructor setting the break types handled.</p>
   *
   * @param breakTypes A bitmap of types handled by the engine.
   ','line_number':57,'multiline':True]['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':64,'multiline':True]['text':'*
   * <p>Indicate whether this engine handles a particular character for
   * a particular kind of break.</p>
   *
   * @param c A character which begins a run that the engine might handle
   * @param breakType The type of text break which the caller wants to determine
   * @return TRUE if this engine handles the particular character and break
   * type.
   ','line_number':69,'multiline':True]['text':'*
   * <p>Find any breaks within a run in the supplied text.</p>
   *
   * @param text A UText representing the text. The iterator is left at
   * the end of the run of characters which the engine is capable of handling 
   * that starts from the first (or last) character in the range.
   * @param startPos The start of the run within the supplied text.
   * @param endPos The end of the run within the supplied text.
   * @param reverse Whether the caller is looking for breaks in a reverse
   * direction.
   * @param breakType The type of break desired, or -1.
   * @param foundBreaks An allocated C array of the breaks found, if any
   * @return The number of breaks found.
   ','line_number':80,'multiline':True]['text':'*
  * <p>Set the character set handled by this engine.</p>
  *
  * @param set A UnicodeSet of the set of characters handled by the engine
  ','line_number':103,'multiline':True]['text':'*
  * <p>Set the break types handled by this engine.</p>
  *
  * @param breakTypes A bitmap of types handled by the engine.
  ','line_number':110,'multiline':True]['text':'  virtual void setBreakTypes( uint32_t breakTypes );','line_number':115,'multiline':False]['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':117,'multiline':True]['text':'******************************************************************
 * ThaiBreakEngine
 ','line_number':133,'multiline':True]['text':'*
 * <p>ThaiBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary and heuristics to determine Thai-specific breaks.</p>
 *
 * <p>After it is constructed a ThaiBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':137,'multiline':True]['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':146,'multiline':True]['text':'*
   * <p>Default constructor.</p>
   *
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
   * engine is deleted.
   ','line_number':160,'multiline':True]['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':168,'multiline':True]['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':174,'multiline':True]['text':'******************************************************************
 * LaoBreakEngine
 ','line_number':190,'multiline':True]['text':'*
 * <p>LaoBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary and heuristics to determine Lao-specific breaks.</p>
 *
 * <p>After it is constructed a LaoBreakEngine may be shared between
 * threads without synchronization.</p>
 ','line_number':194,'multiline':True]['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':203,'multiline':True]['text':'*
   * <p>Default constructor.</p>
   *
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
   * engine is deleted.
   ','line_number':216,'multiline':True]['text':'*
   * <p>Virtual destructor.</p>
   ','line_number':224,'multiline':True]['text':'*
  * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
  *
  * @param text A UText representing the text
  * @param rangeStart The start of the range of dictionary characters
  * @param rangeEnd The end of the range of dictionary characters
  * @param foundBreaks Output of C array of int32_t break positions, or 0
  * @return The number of breaks found
  ','line_number':230,'multiline':True]['text':'****************************************************************** 
 * BurmeseBreakEngine 
 ','line_number':246,'multiline':True]['text':'* 
 * <p>BurmeseBreakEngine is a kind of DictionaryBreakEngine that uses a 
 * DictionaryMatcher and heuristics to determine Burmese-specific breaks.</p> 
 * 
 * <p>After it is constructed a BurmeseBreakEngine may be shared between 
 * threads without synchronization.</p> 
 ','line_number':250,'multiline':True]['text':'* 
     * The set of characters handled by this engine 
     * @internal 
     ','line_number':259,'multiline':True]['text':'* 
   * <p>Default constructor.</p> 
   * 
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the 
   * engine is deleted. 
   ','line_number':272,'multiline':True]['text':'* 
   * <p>Virtual destructor.</p> 
   ','line_number':280,'multiline':True]['text':'* 
  * <p>Divide up a range of known dictionary characters.</p> 
  * 
  * @param text A UText representing the text 
  * @param rangeStart The start of the range of dictionary characters 
  * @param rangeEnd The end of the range of dictionary characters 
  * @param foundBreaks Output of C array of int32_t break positions, or 0 
  * @return The number of breaks found 
  ','line_number':286,'multiline':True]['text':'****************************************************************** 
 * KhmerBreakEngine 
 ','line_number':302,'multiline':True]['text':'* 
 * <p>KhmerBreakEngine is a kind of DictionaryBreakEngine that uses a 
 * DictionaryMatcher and heuristics to determine Khmer-specific breaks.</p> 
 * 
 * <p>After it is constructed a KhmerBreakEngine may be shared between 
 * threads without synchronization.</p> 
 ','line_number':306,'multiline':True]['text':'* 
     * The set of characters handled by this engine 
     * @internal 
     ','line_number':315,'multiline':True]['text':'* 
   * <p>Default constructor.</p> 
   * 
   * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the 
   * engine is deleted. 
   ','line_number':328,'multiline':True]['text':'* 
   * <p>Virtual destructor.</p> 
   ','line_number':336,'multiline':True]['text':'* 
  * <p>Divide up a range of known dictionary characters.</p> 
  * 
  * @param text A UText representing the text 
  * @param rangeStart The start of the range of dictionary characters 
  * @param rangeEnd The end of the range of dictionary characters 
  * @param foundBreaks Output of C array of int32_t break positions, or 0 
  * @return The number of breaks found 
  ','line_number':342,'multiline':True]['text':'******************************************************************
 * CjkBreakEngine
 ','line_number':360,'multiline':True]['text':'indicates language/script that the CjkBreakEngine will handle','line_number':364,'multiline':False]['text':'*
 * <p>CjkBreakEngine is a kind of DictionaryBreakEngine that uses a
 * dictionary with costs associated with each word and
 * Viterbi decoding to determine CJK-specific breaks.</p>
 ','line_number':370,'multiline':True]['text':'*
     * The set of characters handled by this engine
     * @internal
     ','line_number':377,'multiline':True]['text':'*
     * <p>Default constructor.</p>
     *
     * @param adoptDictionary A DictionaryMatcher to adopt. Deleted when the
     * engine is deleted. The DictionaryMatcher must contain costs for each word
     * in order for the dictionary to work properly.
     ','line_number':391,'multiline':True]['text':'*
     * <p>Virtual destructor.</p>
     ','line_number':400,'multiline':True]['text':'*
     * <p>Divide up a range of known dictionary characters handled by this break engine.</p>
     *
     * @param text A UText representing the text
     * @param rangeStart The start of the range of dictionary characters
     * @param rangeEnd The end of the range of dictionary characters
     * @param foundBreaks Output of C array of int32_t break positions, or 0
     * @return The number of breaks found
     ','line_number':406,'multiline':True]['text':' DICTBE_H ','line_number':426,'multiline':True]