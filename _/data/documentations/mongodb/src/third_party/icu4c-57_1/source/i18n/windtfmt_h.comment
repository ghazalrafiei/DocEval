['text':'
********************************************************************************
*   Copyright (C) 2005-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
********************************************************************************
*
* File WINDTFMT.H
*
********************************************************************************
','line_number':1,'multiline':True]['text':'*
 * \file 
 * \brief C++ API: Format dates using Windows API.
 ','line_number':27,'multiline':True]['text':' Forward declarations for Windows types...','line_number':33,'multiline':False]['text':'*
     * Set the calendar to be used by this date format. Initially, the default
     * calendar for the specified or default locale is used.  The caller should
     * not delete the Calendar object after it is adopted by this call.
     *
     * @param calendarToAdopt    Calendar object to be adopted.
     ','line_number':59,'multiline':True]['text':'*
     * Set the calendar to be used by this date format. Initially, the default
     * calendar for the specified or default locale is used.
     *
     * @param newCalendar Calendar object to be set.
     ','line_number':68,'multiline':True]['text':'*
     * Sets the time zone for the calendar of this DateFormat object. The caller
     * no longer owns the TimeZone object and should not delete it after this call.
     *
     * @param zoneToAdopt the TimeZone to be adopted.
     ','line_number':76,'multiline':True]['text':'*
     * Sets the time zone for the calendar of this DateFormat object.
     * @param zone the new time zone.
     ','line_number':84,'multiline':True]['text':'*
     * Return the class ID for this class. This is useful only for comparing to
     * a return value from getDynamicClassID(). For example:
     * <pre>
     * .   Base* polymorphic_pointer = createPolymorphicObject();
     * .   if (polymorphic_pointer->getDynamicClassID() ==
     * .       erived::getStaticClassID()) ...
     * </pre>
     * @return          The class ID for all objects of this class.
     ','line_number':90,'multiline':True]['text':'*
     * Returns a unique class ID POLYMORPHICALLY. Pure virtual override. This
     * method is to implement a simple version of RTTI, since not all C++
     * compilers support genuine RTTI. Polymorphic operator==() and clone()
     * methods call this method.
     *
     * @return          The class ID for this object. All objects of a
     *                  given class have the same class ID.  Objects of
     *                  other classes have different class IDs.
     ','line_number':102,'multiline':True]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':132,'multiline':True]['text':' U_PLATFORM_HAS_WIN32_API','line_number':134,'multiline':False]['text':' __WINDTFMT','line_number':136,'multiline':False]