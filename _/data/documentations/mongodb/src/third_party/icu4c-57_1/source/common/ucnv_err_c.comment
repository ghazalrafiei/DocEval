['text':'
 *****************************************************************************
 *
 *   Copyright (C) 1998-2016, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 *
 *****************************************************************************
 *
 *  ucnv_err.c
 *  Implements error behaviour functions called by T_UConverter_{from,to}Unicode
 *
 *
*   Change history:
*
*   06/29/2000  helena      Major rewrite of the callback APIs.
','line_number':1,'multiline':True]['text':'Magic # 32 = 4(number of char in value string) * 8(max number of bytes per char for any converter) ','line_number':30,'multiline':True]['text':'
 * IS_DEFAULT_IGNORABLE_CODE_POINT
 * This is to check if a code point has the default ignorable unicode property.
 * As such, this list needs to be updated if the ignorable code point list ever
 * changes.
 * To avoid dependency on other code, this list is hard coded here.
 * When an ignorable code point is found and is unmappable, the default callbacks
 * will ignore them.
 * For a list of the default ignorable code points, use this link: http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[%3ADI%3A]&g=
 *
 * This list should be sync with the one in CharsetCallback.java
 ','line_number':53,'multiline':True]['text':'Function Pointer STOPS at the ILLEGAL_SEQUENCE ','line_number':97,'multiline':True]['text':'
         * Skip if the codepoint has unicode property of default ignorable.
         ','line_number':110,'multiline':True]['text':' the caller must have set the error code accordingly ','line_number':115,'multiline':True]['text':'Function Pointer STOPS at the ILLEGAL_SEQUENCE ','line_number':120,'multiline':True]['text':' the caller must have set the error code accordingly ','line_number':130,'multiline':True]['text':'
             * Skip if the codepoint has unicode property of default ignorable.
             ','line_number':148,'multiline':True]['text':' else the caller must have set the error code accordingly. ','line_number':157,'multiline':True]['text':' else ignore the reset, close and clone calls. ','line_number':159,'multiline':True]['text':'
             * Skip if the codepoint has unicode property of default ignorable.
             ','line_number':176,'multiline':True]['text':' else the caller must have set the error code accordingly. ','line_number':186,'multiline':True]['text':' else ignore the reset, close and clone calls. ','line_number':188,'multiline':True]['text':'uses uprv_itou to get a unicode escape sequence of the offensive sequence,
 *uses a clean copy (resetted) of the converter, to convert that unicode
 *escape sequence to the target codepage (if conversion failure happens then
 *we revert to substituting with subchar)
 ','line_number':191,'multiline':True]['text':'
       * Skip if the codepoint has unicode property of default ignorable.
       ','line_number':225,'multiline':True]['text':' adding % ','line_number':248,'multiline':True]['text':' adding U ','line_number':249,'multiline':True]['text':' adding \ ','line_number':260,'multiline':True]['text':' adding u ','line_number':261,'multiline':True]['text':' adding \ ','line_number':267,'multiline':True]['text':' adding U ','line_number':270,'multiline':True]['text':' adding u ','line_number':275,'multiline':True]['text':' adding & ','line_number':282,'multiline':True]['text':' adding # ','line_number':283,'multiline':True]['text':' adding ; ','line_number':290,'multiline':True]['text':' adding & ','line_number':295,'multiline':True]['text':' adding # ','line_number':296,'multiline':True]['text':' adding x ','line_number':297,'multiline':True]['text':' adding ; ','line_number':304,'multiline':True]['text':' adding { ','line_number':308,'multiline':True]['text':' adding U ','line_number':309,'multiline':True]['text':' adding + ','line_number':310,'multiline':True]['text':' adding } ','line_number':316,'multiline':True]['text':' adding \ ','line_number':320,'multiline':True]['text':' Always add space character, becase the next character might be whitespace,
             which would erroneously be considered the termination of the escape sequence. ','line_number':322,'multiline':True]['text':' adding % ','line_number':330,'multiline':True]['text':' adding U ','line_number':331,'multiline':True]['text':' reset the error ','line_number':338,'multiline':True]['text':' else the caller must have set the error code accordingly. ','line_number':375,'multiline':True]['text':' else ignore the reset, close and clone calls. ','line_number':377,'multiline':True]['text':' else the caller must have set the error code accordingly. ','line_number':396,'multiline':True]['text':' else ignore the reset, close and clone calls. ','line_number':398,'multiline':True]['text':'uses uprv_itou to get a unicode escape sequence of the offensive sequence,
 *and uses that as the substitution sequence
 ','line_number':401,'multiline':True]['text':' adding % ','line_number':426,'multiline':True]['text':' adding X ','line_number':427,'multiline':True]['text':' adding & ','line_number':438,'multiline':True]['text':' adding # ','line_number':439,'multiline':True]['text':' adding ; ','line_number':441,'multiline':True]['text':' adding & ','line_number':448,'multiline':True]['text':' adding # ','line_number':449,'multiline':True]['text':' adding x ','line_number':450,'multiline':True]['text':' adding ; ','line_number':452,'multiline':True]['text':' adding \ ','line_number':458,'multiline':True]['text':' adding x ','line_number':459,'multiline':True]['text':' adding % ','line_number':466,'multiline':True]['text':' adding X ','line_number':467,'multiline':True]['text':' reset the error ','line_number':473,'multiline':True]