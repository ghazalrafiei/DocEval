['text':'
* Copyright (C) 1997-2005, International Business Machines Corporation and others. All Rights Reserved.
*******************************************************************************
*
* File PARSEPOS.H
*
* Modification History:
*
*   Date        Name        Description
*   07/09/97    helena      Converted from java.
*   07/17/98    stephen     Added errorIndex support.
*   05/11/99    stephen     Cleaned up.
*******************************************************************************
','line_number':1,'multiline':True]['text':'*
 * \file
 * \brief C++ API: Canonical Iterator
 ','line_number':25,'multiline':True]['text':'* 
 * <code>ParsePosition</code> is a simple class used by <code>Format</code>
 * and its subclasses to keep track of the current position during parsing.
 * The <code>parseObject</code> method in the various <code>Format</code>
 * classes requires a <code>ParsePosition</code> object as an argument.
 *
 * <p>
 * By design, as you parse through a string with different formats,
 * you can use the same <code>ParsePosition</code>, since the index parameter
 * records the current position.
 *
 * The ParsePosition class is not suitable for subclassing.
 *
 * @version     1.3 10/30/97
 * @author      Mark Davis, Helena Shih
 * @see         java.text.Format
 ','line_number':29,'multiline':True]['text':'*
     * Default constructor, the index starts with 0 as default.
     * @stable ICU 2.0
     ','line_number':49,'multiline':True]['text':'*
     * Create a new ParsePosition with the given initial index.
     * @param newIndex the new text offset.
     * @stable ICU 2.0
     ','line_number':59,'multiline':True]['text':'*
     * Copy constructor
     * @param copy the object to be copied from.
     * @stable ICU 2.0
     ','line_number':70,'multiline':True]['text':'*
     * Destructor
     * @stable ICU 2.0
     ','line_number':81,'multiline':True]['text':'*
     * Assignment operator
     * @stable ICU 2.0
     ','line_number':87,'multiline':True]['text':'*
     * Equality operator.
     * @return TRUE if the two parse positions are equal, FALSE otherwise.
     * @stable ICU 2.0
     ','line_number':93,'multiline':True]['text':'*
     * Equality operator.
     * @return TRUE if the two parse positions are not equal, FALSE otherwise.
     * @stable ICU 2.0
     ','line_number':100,'multiline':True]['text':'*
     * Clone this object.
     * Clones can be used concurrently in multiple threads.
     * If an error occurs, then NULL is returned.
     * The caller must delete the clone.
     *
     * @return a clone of this object
     *
     * @see getDynamicClassID
     * @stable ICU 2.8
     ','line_number':107,'multiline':True]['text':'*
     * Retrieve the current parse position.  On input to a parse method, this
     * is the index of the character at which parsing will begin; on output, it
     * is the index of the character following the last character parsed.
     * @return the current index.
     * @stable ICU 2.0
     ','line_number':120,'multiline':True]['text':'*
     * Set the current parse position.
     * @param index the new index.
     * @stable ICU 2.0
     ','line_number':129,'multiline':True]['text':'*
     * Set the index at which a parse error occurred.  Formatters
     * should set this before returning an error code from their
     * parseObject method.  The default value is -1 if this is not
     * set.
     * @stable ICU 2.0
     ','line_number':136,'multiline':True]['text':'*
     * Retrieve the index at which an error occurred, or -1 if the
     * error index has not been set.
     * @stable ICU 2.0
     ','line_number':145,'multiline':True]['text':'*
     * ICU "poor man's RTTI", returns a UClassID for this class.
     *
     * @stable ICU 2.2
     ','line_number':152,'multiline':True]['text':'*
     * ICU "poor man's RTTI", returns a UClassID for the actual class.
     *
     * @stable ICU 2.2
     ','line_number':159,'multiline':True]['text':'*
     * Input: the place you start parsing.
     * <br>Output: position where the parse stopped.
     * This is designed to be used serially,
     * with each call setting index up for the next one.
     ','line_number':167,'multiline':True]['text':'*
     * The index at which a parse error occurred.
     ','line_number':175,'multiline':True]