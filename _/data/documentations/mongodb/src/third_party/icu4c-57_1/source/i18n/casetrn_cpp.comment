['text':'
*******************************************************************************
*
*   Copyright (C) 2001-2011, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  casetrn.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2004sep03
*   created by: Markus W. Scherer
*
*   Implementation class for lower-/upper-/title-casing transliterators.
','line_number':1,'multiline':True]['text':' case context iterator using a Replaceable ','line_number':31,'multiline':True]['text':' reset for backward iteration ','line_number':42,'multiline':True]['text':' reset for forward iteration ','line_number':46,'multiline':True]['text':' continue current iteration direction ','line_number':50,'multiline':True]['text':' automatically adjust start and limit if the Replaceable disagrees','line_number':54,'multiline':False]['text':' with the original values','line_number':55,'multiline':False]['text':' detect, and store in csc->b1, if we hit the limit','line_number':67,'multiline':False]['text':'*
 * Constructs a transliterator.
 ','line_number':88,'multiline':True]['text':' TODO test incremental mode with context-sensitive text (e.g. greek sigma)','line_number':96,'multiline':False]['text':' TODO need to call setMaximumContextLength()?!','line_number':97,'multiline':False]['text':'*
 * Destructor.
 ','line_number':100,'multiline':True]['text':'*
 * Copy constructor.
 ','line_number':106,'multiline':True]['text':'*
 * Assignment operator.
 ','line_number':115,'multiline':True]['text':'CaseMapTransliterator& CaseMapTransliterator::operator=(const CaseMapTransliterator& o) {
    Transliterator::operator=(o);
    fCsp = o.fCsp;
    fMap = o.fMap;
    return *this;
}','line_number':118,'multiline':True]['text':'*
 * Transliterator API.
 ','line_number':125,'multiline':True]['text':'Transliterator* CaseMapTransliterator::clone(void) const {
    return new CaseMapTransliterator(*this);
}','line_number':128,'multiline':True]['text':'*
 * Implements {@link Transliterator#handleTransliterate}.
 ','line_number':132,'multiline':True]['text':' fMap() tried to look beyond the context limit','line_number':162,'multiline':False]['text':' wait for more input','line_number':163,'multiline':False]['text':' replace the current code point with its full case mapping result','line_number':169,'multiline':False]['text':' see UCASE_MAX_STRING_LENGTH','line_number':170,'multiline':False]['text':' string s[result]','line_number':172,'multiline':False]['text':' single code point','line_number':176,'multiline':False]['text':' #if !UCONFIG_NO_TRANSLITERATION ','line_number':193,'multiline':True]