['text':'  
**********************************************************************
*   Copyright (C) 1999-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*   file name:  ustr_imp.h
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2001jan30
*   created by: Markus W. Scherer
','line_number':1,'multiline':True]['text':'* Simple declaration to avoid including unicode/ubrk.h. ','line_number':22,'multiline':True]['text':' see also unorm.h ','line_number':29,'multiline':True]['text':'*
 * Option bit for unorm_compare:
 * Perform case-insensitive comparison.
 ','line_number':30,'multiline':True]['text':'*
 * Internal option for unorm_cmpEquivFold() for strncmp style.
 * If set, checks for both string length and terminating NUL.
 ','line_number':37,'multiline':True]['text':'*
 * Compare two strings in code point order or code unit order.
 * Works in strcmp style (both lengths -1),
 * strncmp style (lengths equal and >=0, flag TRUE),
 * and memcmp/UnicodeString style (at least one length >=0).
 ','line_number':43,'multiline':True]['text':'*
 * Internal API, used by u_strcasecmp() etc.
 * Compare strings case-insensitively,
 * in code point order or code unit order.
 ','line_number':54,'multiline':True]['text':'*
 * Interanl API, used for detecting length of
 * shared prefix case-insensitively.
 * @param s1            input string 1
 * @param length1       length of string 1, or -1 (NULL terminated)
 * @param s2            input string 2
 * @param length2       length of string 2, or -1 (NULL terminated)
 * @param options       compare options
 * @param matchLen1     (output) length of partial prefix match in s1
 * @param matchLen2     (output) length of partial prefix match in s2
 * @param pErrorCode    receives error status
 ','line_number':65,'multiline':True]['text':'*
 * Are the Unicode properties loaded?
 * This must be used before internal functions are called that do
 * not perform this check.
 * Generate a debug assertion failure if data is not loaded.
 ','line_number':84,'multiline':True]['text':'*
  * Load the Unicode property data.
  * Intended primarily for use from u_init().
  * Has no effect if property data is already loaded.
  * NOT thread safe.
  ','line_number':93,'multiline':True]['text':'U_CFUNC int8_t
uprv_loadPropsData(UErrorCode *errorCode);','line_number':99,'multiline':True]['text':'
 * Internal string casing functions implementing
 * ustring.h/ustrcase.c and UnicodeString case mapping functions.
 ','line_number':102,'multiline':True]['text':' We adopt the iterator, so we own it. ','line_number':110,'multiline':True]['text':'*
 * String case mapping function type, used by ustrcase_map().
 * All error checking must be done.
 * The UCaseMap must be fully initialized, with locale and/or iter set as needed.
 * src and dest must not overlap.
 ','line_number':133,'multiline':True]['text':'* Implements UStringCaseMapper. ','line_number':147,'multiline':True]['text':'* Implements UStringCaseMapper. ','line_number':154,'multiline':True]['text':'* Implements UStringCaseMapper. ','line_number':163,'multiline':True]['text':'* Implements UStringCaseMapper. ','line_number':172,'multiline':True]['text':'*
 * Implements argument checking and buffer handling
 * for string case mapping as a common function.
 ','line_number':179,'multiline':True]['text':'*
 * UTF-8 string case mapping function type, used by ucasemap_mapUTF8().
 * UTF-8 version of UStringCaseMapper.
 * All error checking must be done.
 * The UCaseMap must be fully initialized, with locale and/or iter set as needed.
 * src and dest must not overlap.
 ','line_number':190,'multiline':True]['text':'* Implements UTF8CaseMapper. ','line_number':203,'multiline':True]['text':'*
 * Implements argument checking and buffer handling
 * for UTF-8 string case mapping as a common function.
 ','line_number':210,'multiline':True]['text':'*
 * NUL-terminate a UChar * string if possible.
 * If length  < destCapacity then NUL-terminate.
 * If length == destCapacity then do not terminate but set U_STRING_NOT_TERMINATED_WARNING.
 * If length  > destCapacity then do not terminate but set U_BUFFER_OVERFLOW_ERROR.
 *
 * @param dest Destination buffer, can be NULL if destCapacity==0.
 * @param destCapacity Number of UChars available at dest.
 * @param length Number of UChars that were (to be) written to dest.
 * @param pErrorCode ICU error code.
 * @return length
 ','line_number':230,'multiline':True]['text':'*
 * NUL-terminate a char * string if possible.
 * Same as u_terminateUChars() but for a different string type.
 ','line_number':245,'multiline':True]['text':'*
 * NUL-terminate a UChar32 * string if possible.
 * Same as u_terminateUChars() but for a different string type.
 ','line_number':252,'multiline':True]['text':'*
 * NUL-terminate a wchar_t * string if possible.
 * Same as u_terminateUChars() but for a different string type.
 ','line_number':259,'multiline':True]