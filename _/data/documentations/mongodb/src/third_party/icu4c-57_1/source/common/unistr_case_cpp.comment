['text':'
*******************************************************************************
*
*   Copyright (C) 1999-2014, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  unistr_case.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:2
*
*   created on: 2004aug19
*   created by: Markus W. Scherer
*
*   Case-mapping functions moved here from unistr.cpp
','line_number':1,'multiline':True]['text':'========================================','line_number':31,'multiline':False]['text':' Read-only implementation','line_number':32,'multiline':False]['text':'========================================','line_number':33,'multiline':False]['text':' compare illegal string values','line_number':43,'multiline':False]['text':' treat const UChar *srcChars==NULL as an empty string','line_number':44,'multiline':False]['text':' pin indices to legal values','line_number':49,'multiline':False]['text':' get the correct pointer','line_number':56,'multiline':False]['text':' get the srcLength if necessary','line_number':72,'multiline':False]['text':'========================================','line_number':83,'multiline':False]['text':' Write implementation','line_number':84,'multiline':False]['text':'========================================','line_number':85,'multiline':False]['text':' nothing to do','line_number':91,'multiline':False]['text':' We need to allocate a new buffer for the internal string case mapping function.','line_number':95,'multiline':False]['text':' This is very similar to how doReplace() keeps the old array pointer','line_number':96,'multiline':False]['text':' and deletes the old array itself after it is done.','line_number':97,'multiline':False]['text':' In addition, we are forcing cloneArrayIfNeeded() to always allocate a new array.','line_number':98,'multiline':False]['text':' copy the stack buffer contents because it will be overwritten','line_number':104,'multiline':False]['text':' Case-map, and if the result is too long, then reallocate and repeat.','line_number':124,'multiline':False]['text':' Defined here to reduce dependencies on break iterator','line_number':153,'multiline':False]['text':' Inefficient; a better way would be to have a hash function in','line_number':161,'multiline':False]['text':' UnicodeString that does case folding on the fly.','line_number':162,'multiline':False]['text':' Defined here to reduce dependencies on break iterator','line_number':167,'multiline':False]