['text':'
*******************************************************************************
* Copyright (C) 2011-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File TZNAMES_IMPL.CPP
*
*******************************************************************************
','line_number':1,'multiline':True]['text':' place holder for empty ZNames/TZNames','line_number':45,'multiline':False]['text':' unknown as the last one','line_number':51,'multiline':False]['text':' stuff for TZDBTimeZoneNames','line_number':54,'multiline':False]['text':' ---------------------------------------------------','line_number':86,'multiline':False]['text':' CharacterNode class implementation','line_number':87,'multiline':False]['text':' ---------------------------------------------------','line_number':88,'multiline':False]['text':' Do nothing.','line_number':95,'multiline':False]['text':' At least one value already.','line_number':116,'multiline':False]['text':' There is only one value so far, and not in a vector yet.','line_number':118,'multiline':False]['text':' Create a vector and add the old value.','line_number':119,'multiline':False]['text':' Add the new value.','line_number':131,'multiline':False]['text':' ---------------------------------------------------','line_number':136,'multiline':False]['text':' TextTrieMapSearchResultHandler class implementation','line_number':137,'multiline':False]['text':' ---------------------------------------------------','line_number':138,'multiline':False]['text':' ---------------------------------------------------','line_number':142,'multiline':False]['text':' TextTrieMap class implementation','line_number':143,'multiline':False]['text':' ---------------------------------------------------','line_number':144,'multiline':False]['text':' Use a separate field for fIsEmpty because it will remain unchanged once the','line_number':167,'multiline':False]['text':'   Trie is built, while fNodes and fLazyContents change with the lazy init','line_number':168,'multiline':False]['text':'   of the nodes structure.  Trying to test the changing fields has','line_number':169,'multiline':False]['text':'   thread safety complications.','line_number':170,'multiline':False]['text':'  We defer actually building the TextTrieMap node structure until the first time a','line_number':175,'multiline':False]['text':'     search is performed.  put() simply saves the parameters in case we do','line_number':176,'multiline':False]['text':'     eventually need to build it.','line_number':177,'multiline':False]['text':'     ','line_number':178,'multiline':False]['text':' This method is for designed for a persistent key, such as string key stored in','line_number':185,'multiline':False]['text':' resource bundle.','line_number':186,'multiline':False]['text':' Init root node.','line_number':210,'multiline':False]['text':' Ok to use fastCopyFrom() because we discard the copy when we return.','line_number':218,'multiline':False]['text':' We use 16-bit node indexes.','line_number':238,'multiline':False]['text':' Linear search of the sorted list of children.','line_number':260,'multiline':False]['text':' Ensure capacity. Grow fNodes[] if needed.','line_number':275,'multiline':False]['text':' Insert a new child node with c in sorted order.','line_number':285,'multiline':False]['text':' Linear search of the sorted list of children.','line_number':301,'multiline':False]['text':' Mutex for protecting the lazy creation of the Trie node structure on the first call to search().','line_number':316,'multiline':False]['text':' buildTrie() - The Trie node structure is needed.  Create it from the data that was','line_number':319,'multiline':False]['text':'               saved at the time the ZoneStringFormatter was created.  The Trie is only','line_number':320,'multiline':False]['text':'               needed for parsing operations, which are less common than formatting,','line_number':321,'multiline':False]['text':'               and the Trie is big, which is why its creation is deferred until first use.','line_number':322,'multiline':False]['text':' Aliasing UnicodeString constructor.','line_number':328,'multiline':False]['text':' TODO: if locking the mutex for each check proves to be a performance problem,','line_number':340,'multiline':False]['text':'       add a flag of type atomic_int32_t to class TextTrieMap, and use only','line_number':341,'multiline':False]['text':'       the ICU atomic safe functions for assigning and testing.','line_number':342,'multiline':False]['text':'       Don't test the pointer fLazyContents.','line_number':343,'multiline':False]['text':'       Don't do unless it's really required.','line_number':344,'multiline':False]['text':' size of character may grow after fold operation','line_number':373,'multiline':False]['text':' ---------------------------------------------------','line_number':393,'multiline':False]['text':' ZNStringPool class implementation','line_number':394,'multiline':False]['text':' ---------------------------------------------------','line_number':395,'multiline':False]['text':' Ptr to next pool chunk','line_number':398,'multiline':False]['text':' Index to start of unused area at end of fStrings','line_number':399,'multiline':False]['text':'  Strings array','line_number':400,'multiline':False]['text':' keyHash ','line_number':421,'multiline':True]['text':' keyComp ','line_number':422,'multiline':True]['text':' valueComp ','line_number':423,'multiline':True]['text':'','line_number':481,'multiline':False]['text':'  ZNStringPool::adopt()    Put a string into the hash, but do not copy the string data','line_number':482,'multiline':False]['text':'                           into the pool's storage.  Used for strings from resource bundles,','line_number':483,'multiline':False]['text':'                           which will perisist for the life of the zone string formatter, and','line_number':484,'multiline':False]['text':'                           therefore can be used directly without copying.','line_number':485,'multiline':False]['text':'
 * freeze().   Close the hash table that maps to the pooled strings.
 *             After freezing, the pool can not be searched or added to,
 *             but all existing references to pooled strings remain valid.
 *
 *             The main purpose is to recover the storage used for the hash.
 ','line_number':507,'multiline':True]['text':' ---------------------------------------------------','line_number':520,'multiline':False]['text':' ZNames - names common for time zone and meta zone','line_number':521,'multiline':False]['text':' ---------------------------------------------------','line_number':522,'multiline':False]['text':' No names data available','line_number':552,'multiline':False]['text':' implemeted by subclass','line_number':583,'multiline':False]['text':' No need to keep the names array','line_number':617,'multiline':False]['text':' ---------------------------------------------------','line_number':627,'multiline':False]['text':' TZNames - names for a time zone','line_number':628,'multiline':False]['text':' ---------------------------------------------------','line_number':629,'multiline':False]['text':' ignore missing resource here','line_number':676,'multiline':False]['text':' ---------------------------------------------------','line_number':711,'multiline':False]['text':' The meta zone ID enumeration class','line_number':712,'multiline':False]['text':' ---------------------------------------------------','line_number':713,'multiline':False]['text':'status','line_number':760,'multiline':True]['text':'status','line_number':765,'multiline':True]['text':'*
 * ZNameInfo stores zone name information in the trie
 ','line_number':776,'multiline':True]['text':'*
 * ZMatchInfo stores zone name match information used by find method
 ','line_number':785,'multiline':True]['text':' ---------------------------------------------------','line_number':795,'multiline':False]['text':' ZNameSearchHandler','line_number':796,'multiline':False]['text':' ---------------------------------------------------','line_number':797,'multiline':False]['text':' matches a requested type','line_number':835,'multiline':False]['text':' give the ownership to the caller','line_number':862,'multiline':False]['text':' reset','line_number':866,'multiline':False]['text':' ---------------------------------------------------','line_number':872,'multiline':False]['text':' TimeZoneNamesImpl','line_number':873,'multiline':False]['text':'','line_number':874,'multiline':False]['text':' TimeZoneNames implementation class. This is the main','line_number':875,'multiline':False]['text':' part of this module.','line_number':876,'multiline':False]['text':' ---------------------------------------------------','line_number':877,'multiline':False]['text':'*
 * Deleter for ZNames
 ','line_number':880,'multiline':True]['text':'*
 * Deleter for TZNames
 ','line_number':889,'multiline':True]['text':'*
 * Deleter for ZNameInfo
 ','line_number':899,'multiline':True]['text':' Load zoneStrings bundle','line_number':927,'multiline':False]['text':' OK with fallback warning..','line_number':928,'multiline':False]['text':' Initialize hashtables holding time zone/meta zone names','line_number':937,'multiline':False]['text':' no key deleters for name maps','line_number':947,'multiline':False]['text':' preload zone strings for the default zone','line_number':949,'multiline':False]['text':'
 * This method updates the cache and must be called with a lock,
 * except initializer.
 ','line_number':960,'multiline':True]['text':' No implementation for now','line_number':1007,'multiline':False]['text':' static implementation of getAvailableMetaZoneIDs(UErrorCode&)','line_number':1022,'multiline':False]['text':' static implementation of getAvailableMetaZoneIDs(const UnicodeString&, UErrorCode&)','line_number':1040,'multiline':False]['text':' static implementation of getMetaZoneID','line_number':1080,'multiline':False]['text':' static implementaion of getReferenceZoneID','line_number':1092,'multiline':False]['text':' cleanup result.','line_number':1104,'multiline':False]['text':' cleanup result.','line_number':1129,'multiline':False]['text':' cleanup result.','line_number':1154,'multiline':False]['text':' Merge the MZ_PREFIX and mzId','line_number':1176,'multiline':False]['text':'
 * This method updates the cache and must be called with a lock
 ','line_number':1192,'multiline':True]['text':' already checked length above','line_number':1206,'multiline':False]['text':' Use the persistent ID as the resource key, so we can','line_number':1220,'multiline':False]['text':' avoid duplications.','line_number':1221,'multiline':False]['text':' put the name info into the trie','line_number':1231,'multiline':False]['text':' Should never happen with a valid input','line_number':1247,'multiline':False]['text':' It's not possible that we get a valid ZNames with unknown ID.','line_number':1249,'multiline':False]['text':' But just in case..','line_number':1250,'multiline':False]['text':'
 * This method updates the cache and must be called with a lock
 ','line_number':1262,'multiline':True]['text':' already checked length above','line_number':1276,'multiline':False]['text':' Replace "/" with ":".','line_number':1283,'multiline':False]['text':' Use the persistent ID as the resource key, so we can','line_number':1298,'multiline':False]['text':' avoid duplications.','line_number':1299,'multiline':False]['text':' put the name info into the trie','line_number':1309,'multiline':False]['text':' Should never happen with a valid input','line_number':1324,'multiline':False]['text':' It's not possible that we get a valid TZNames with unknown ID.','line_number':1326,'multiline':False]['text':' But just in case..','line_number':1327,'multiline':False]['text':' perfect match','line_number':1358,'multiline':False]['text':' All names are not yet loaded into the trie','line_number':1364,'multiline':False]['text':' load strings for all zones','line_number':1370,'multiline':False]['text':' loadStrings also load related metazone strings','line_number':1377,'multiline':False]['text':' now try it again','line_number':1397,'multiline':False]['text':' "Etc/"','line_number':1405,'multiline':False]['text':' "SystemV/','line_number':1407,'multiline':False]['text':' "Riyadh8"','line_number':1409,'multiline':False]['text':' '/' ','line_number':1420,'multiline':True]['text':' _ ','line_number':1423,'multiline':True]['text':' space ','line_number':1424,'multiline':True]['text':' ---------------------------------------------------','line_number':1431,'multiline':False]['text':' TZDBTimeZoneNames and its supporting classes','line_number':1432,'multiline':False]['text':'','line_number':1433,'multiline':False]['text':' TZDBTimeZoneNames is an implementation class of','line_number':1434,'multiline':False]['text':' TimeZoneNames holding the IANA tz database abbreviations.','line_number':1435,'multiline':False]['text':' ---------------------------------------------------','line_number':1436,'multiline':False]['text':' filling regions','line_number':1527,'multiline':False]['text':'*
 * TZDBNameInfo stores metazone name information for the IANA abbreviations
 * in the trie
 ','line_number':1597,'multiline':True]['text':' Some tz database abbreviations are ambiguous. For example,','line_number':1653,'multiline':False]['text':' CST means either Central Standard Time or China Standard Time.','line_number':1654,'multiline':False]['text':' Unlike CLDR time zone display names, this implementation','line_number':1655,'multiline':False]['text':' does not use unique names. And TimeZoneFormat does not expect','line_number':1656,'multiline':False]['text':' multiple results returned for the same time zone type.','line_number':1657,'multiline':False]['text':' For this reason, this implementation resolve one among same','line_number':1658,'multiline':False]['text':' zone type with a same name at this level.','line_number':1659,'multiline':False]['text':' parseRegions == null means this is the default metazone','line_number':1661,'multiline':False]['text':' mapping for the abbreviation.','line_number':1662,'multiline':False]['text':' non-default metazone mapping for an abbreviation','line_number':1668,'multiline':False]['text':' comes with applicable regions. For example, the default','line_number':1669,'multiline':False]['text':' metazone mapping for "CST" is America_Central,','line_number':1670,'multiline':False]['text':' but if region is one of CN/MO/TW, "CST" is parsed','line_number':1671,'multiline':False]['text':' as metazone China (China Standard Time).','line_number':1672,'multiline':False]['text':' Note: Workaround for duplicated standard/daylight names','line_number':1693,'multiline':False]['text':' The tz database contains a few zones sharing a','line_number':1694,'multiline':False]['text':' same name for both standard time and daylight saving','line_number':1695,'multiline':False]['text':' time. For example, Australia/Sydney observes DST,','line_number':1696,'multiline':False]['text':' but "EST" is used for both standard and daylight.','line_number':1697,'multiline':False]['text':' When both SHORT_STANDARD and SHORT_DAYLIGHT are included','line_number':1698,'multiline':False]['text':' in the find operation, we cannot tell which one was','line_number':1699,'multiline':False]['text':' actually matched.','line_number':1700,'multiline':False]['text':' TimeZoneFormat#parse returns a matched name type (standard','line_number':1701,'multiline':False]['text':' or daylight) and DateFormat implementation uses the info to','line_number':1702,'multiline':False]['text':' to adjust actual time. To avoid false type information,','line_number':1703,'multiline':False]['text':' this implementation replaces the name type with SHORT_GENERIC.','line_number':1704,'multiline':False]['text':' give the ownership to the caller','line_number':1733,'multiline':False]['text':' reset','line_number':1737,'multiline':False]['text':'*
 * Deleter for TZDBNames
 ','line_number':1744,'multiline':True]['text':' no key deleters for tzdb name maps','line_number':1760,'multiline':False]['text':'*
 * Deleter for TZDBNameInfo
 ','line_number':1765,'multiline':True]['text':' The tz database contains a few zones sharing a','line_number':1801,'multiline':False]['text':' same name for both standard time and daylight saving','line_number':1802,'multiline':False]['text':' time. For example, Australia/Sydney observes DST,','line_number':1803,'multiline':False]['text':' but "EST" is used for both standard and daylight.','line_number':1804,'multiline':False]['text':' we need to store the information for later processing.','line_number':1805,'multiline':False]['text':' No implementation for now','line_number':1880,'multiline':False]['text':' tzID ','line_number':1931,'multiline':True]['text':' type ','line_number':1931,'multiline':True]['text':' No abbreviations associated a zone directly for now.','line_number':1932,'multiline':False]['text':' already checked length above','line_number':1964,'multiline':False]['text':' Use the persistent ID as the resource key, so we can','line_number':1983,'multiline':False]['text':' avoid duplications.','line_number':1984,'multiline':False]['text':' Should never happen with a valid input','line_number':1995,'multiline':False]['text':' It's not possible that we get a valid tzdbNames with unknown ID.','line_number':1997,'multiline':False]['text':' But just in case..','line_number':1998,'multiline':False]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':2017,'multiline':True]['text':'eof','line_number':2019,'multiline':False]