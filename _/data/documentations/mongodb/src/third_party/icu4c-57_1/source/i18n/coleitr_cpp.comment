['text':'
*******************************************************************************
* Copyright (C) 1996-2014, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':1,'multiline':True]['text':'
* File coleitr.cpp
*
* Created by: Helena Shih
*
* Modification History:
*
*  Date      Name        Description
*
*  6/23/97   helena      Adding comments to make code more readable.
* 08/03/98   erm         Synched with 1.2 version of CollationElementIterator.java
* 12/10/99   aliu        Ported Thai collation support from Java.
* 01/25/01   swquek      Modified to a C++ wrapper calling C APIs (ucoliter.h)
* 02/19/01   swquek      Removed CollationElementIterator() since it is 
*                        private constructor and no calls are made to it
* 2012-2014  markus      Rewritten in C++ again.
','line_number':8,'multiline':True]['text':' Constants --------------------------------------------------------------- ','line_number':44,'multiline':True]['text':' CollationElementIterator public constructor/destructor ------------------ ','line_number':50,'multiline':True]['text':' CollationElementIterator public methods --------------------------------- ','line_number':64,'multiline':True]['text':' namespace','line_number':78,'multiline':False]['text':' CollationIterator::previousCE() decrements the CEs length','line_number':83,'multiline':False]['text':' while it pops CEs from its internal buffer.','line_number':84,'multiline':False]['text':' Return the trailing CE offset while we are in the middle of a 64-bit CE.','line_number':87,'multiline':False]['text':'*
* Get the ordering priority of the next character in the string.
* @return the next character's ordering. Returns NULLORDER if an error has 
*         occured or if the end of string has been reached
','line_number':96,'multiline':True]['text':' Continue forward iteration. Test this first.','line_number':105,'multiline':False]['text':' next() after setOffset()','line_number':112,'multiline':False]['text':' The iter_ is already reset to the start of the text.','line_number':115,'multiline':False]['text':' dir_ < 0 ','line_number':117,'multiline':True]['text':' illegal change of direction','line_number':118,'multiline':False]['text':' No need to keep all CEs in the buffer when we iterate.','line_number':122,'multiline':False]['text':' Turn the 64-bit CE into two old-style 32-bit CEs, without quaternary bits.','line_number':126,'multiline':False]['text':' continuation CE','line_number':132,'multiline':False]['text':'*
* Get the ordering priority of the previous collation element in the string.
* @param status the error code status.
* @return the previous element's ordering. Returns NULLORDER if an error has 
*         occured or if the start of string has been reached.
','line_number':158,'multiline':True]['text':' Continue backwards iteration. Test this first.','line_number':168,'multiline':False]['text':' previous() after setOffset()','line_number':178,'multiline':False]['text':' dir_ > 1 ','line_number':180,'multiline':True]['text':' illegal change of direction','line_number':181,'multiline':False]['text':' If we already have expansion CEs, then we also have offsets.','line_number':192,'multiline':False]['text':' Otherwise remember the trailing offset in case we need to','line_number':193,'multiline':False]['text':' write offsets for an artificial expansion.','line_number':194,'multiline':False]['text':' Turn the 64-bit CE into two old-style 32-bit CEs, without quaternary bits.','line_number':198,'multiline':False]['text':' When we convert a single 64-bit CE into two 32-bit CEs,','line_number':205,'multiline':False]['text':' we need to make this artificial expansion behave like a normal expansion.','line_number':206,'multiline':False]['text':' See CollationIterator::previousCE().','line_number':207,'multiline':False]['text':' continuation CE','line_number':212,'multiline':False]['text':'*
* Resets the cursor to the beginning of the string.
','line_number':217,'multiline':True]['text':' Back up to before this unsafe character.','line_number':239,'multiline':False]['text':' We might have backed up more than necessary.','line_number':243,'multiline':False]['text':' For example, contractions "ch" and "cu" make both 'h' and 'u' unsafe,','line_number':244,'multiline':False]['text':' but for text "chu" setOffset(2) should remain at 2','line_number':245,'multiline':False]['text':' although we initially back up to offset 0.','line_number':246,'multiline':False]['text':' Find the last safe offset no greater than newOffset by iterating forward.','line_number':247,'multiline':False]['text':'*
* Sets the source to the new source string.
','line_number':267,'multiline':True]['text':' Sets the source to the new character iterator.','line_number':296,'multiline':False]['text':' Mask off the unwanted differences.','line_number':310,'multiline':False]['text':' CollationElementIterator private constructors/destructors --------------- ','line_number':321,'multiline':True]['text':'* 
* This is the "real" constructor for this class; it constructs an iterator
* over the source text using the specified collator
','line_number':323,'multiline':True]['text':'* 
* This is the "real" constructor for this class; it constructs an iterator over 
* the source text using the specified collator
','line_number':335,'multiline':True]['text':' We only call source.getText() which should be const anyway.','line_number':344,'multiline':False]['text':' CollationElementIterator private methods -------------------------------- ','line_number':348,'multiline':True]['text':'ce','line_number':398,'multiline':True]['text':' We do not need to add single CEs into the map.','line_number':401,'multiline':False]['text':' number of CE "halves"','line_number':404,'multiline':False]['text':' last "half" of the last CE','line_number':408,'multiline':False]['text':' old-style continuation CE','line_number':417,'multiline':False]['text':' namespace','line_number':431,'multiline':False]['text':' old-style continuation CE','line_number':461,'multiline':False]['text':' #if !UCONFIG_NO_COLLATION ','line_number':470,'multiline':True]