['text':'','line_number':1,'multiline':False]['text':'  file:  rbbirb.cpp','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Copyright (C) 2002-2011, International Business Machines Corporation and others.','line_number':4,'multiline':False]['text':'  All Rights Reserved.','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'  This file contains the RBBIRuleBuilder class implementation.  This is the main class for','line_number':7,'multiline':False]['text':'    building (compiling) break rules into the tables required by the runtime','line_number':8,'multiline':False]['text':'    RBBI engine.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'  Constructor.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':44,'multiline':False]['text':' status is checked below','line_number':50,'multiline':False]['text':' bcos status gets overwritten here','line_number':83,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':97,'multiline':False]['text':'','line_number':98,'multiline':False]['text':'  Destructor','line_number':99,'multiline':False]['text':'','line_number':100,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':101,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':132,'multiline':False]['text':'','line_number':133,'multiline':False]['text':'   flattenData() -  Collect up the compiled RBBI rule data and put it into','line_number':134,'multiline':False]['text':'                    the format for saving in ICU data files,','line_number':135,'multiline':False]['text':'                    which is also the format needed by the RBBI runtime engine.','line_number':136,'multiline':False]['text':'','line_number':137,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':138,'multiline':False]['text':' Remove comments and whitespace from the rules to make it smaller.','line_number':148,'multiline':False]['text':' Calculate the size of each section in the data.','line_number':151,'multiline':False]['text':'   Sizes here are padded up to a multiple of 8 for better memory alignment.','line_number':152,'multiline':False]['text':'   Sections sizes actually stored in the header are for the actual data','line_number':153,'multiline':False]['text':'     without the padding.','line_number':154,'multiline':False]['text':'','line_number':155,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':224,'multiline':False]['text':'','line_number':225,'multiline':False]['text':'  createRuleBasedBreakIterator    construct from source rules that are passed in','line_number':226,'multiline':False]['text':'                                  in a UnicodeString','line_number':227,'multiline':False]['text':'','line_number':228,'multiline':False]['text':'----------------------------------------------------------------------------------------','line_number':229,'multiline':False]['text':' status checked below','line_number':235,'multiline':False]['text':'','line_number':237,'multiline':False]['text':' Read the input rules, generate a parse tree, symbol table,','line_number':238,'multiline':False]['text':' and list of all Unicode Sets referenced by the rules.','line_number':239,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' status checked here bcos build below doesn't','line_number':242,'multiline':False]['text':'','line_number':247,'multiline':False]['text':' UnicodeSet processing.','line_number':248,'multiline':False]['text':'    Munge the Unicode Sets to create a set of character categories.','line_number':249,'multiline':False]['text':'    Generate the mapping tables (TRIE) from input 32-bit characters to','line_number':250,'multiline':False]['text':'    the character categories.','line_number':251,'multiline':False]['text':'','line_number':252,'multiline':False]['text':'','line_number':256,'multiline':False]['text':'   Generate the DFA state transition table.','line_number':257,'multiline':False]['text':'','line_number':258,'multiline':False]['text':'','line_number':285,'multiline':False]['text':'   Package up the compiled data into a memory image','line_number':286,'multiline':False]['text':'      in the run-time format.','line_number':287,'multiline':False]['text':'','line_number':288,'multiline':False]['text':' returns NULL if error','line_number':289,'multiline':False]['text':'','line_number':295,'multiline':False]['text':'  Clean up the compiler related stuff','line_number':296,'multiline':False]['text':'','line_number':297,'multiline':False]['text':'','line_number':300,'multiline':False]['text':'  Create a break iterator from the compiled rules.','line_number':301,'multiline':False]['text':'     (Identical to creation from stored pre-compiled rules)','line_number':302,'multiline':False]['text':'','line_number':303,'multiline':False]['text':' status is checked after init in construction.','line_number':304,'multiline':False]['text':' test for NULL','line_number':310,'multiline':False]['text':' #if !UCONFIG_NO_BREAK_ITERATION ','line_number':318,'multiline':True]