['text':'
*******************************************************************************
*   Copyright (C) 2010-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*   file name:  uts46.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2010mar09
*   created by: Markus W. Scherer
','line_number':1,'multiline':True]['text':' Note about tests for UIDNA_ERROR_DOMAIN_NAME_TOO_LONG:','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' The domain name length limit is 255 octets in an internal DNS representation','line_number':32,'multiline':False]['text':' where the last ("root") label is the empty label','line_number':33,'multiline':False]['text':' represented by length byte 0 alone.','line_number':34,'multiline':False]['text':' In a conventional string, this translates to 253 characters, or 254','line_number':35,'multiline':False]['text':' if there is a trailing dot for the root label.','line_number':36,'multiline':False]['text':' Severe errors which usually result in a U+FFFD replacement character in the result string.','line_number':40,'multiline':False]['text':' IDNA class default implementations -------------------------------------- ***','line_number':66,'multiline':False]['text':' UTS46 class declaration ------------------------------------------------- ***','line_number':110,'multiline':False]['text':' returns the new dest.length()','line_number':169,'multiline':False]['text':' returns the new label length','line_number':174,'multiline':False]['text':' uts46.nrm','line_number':194,'multiline':False]['text':' UTS46 implementation ---------------------------------------------------- ***','line_number':214,'multiline':False]['text':' UTS #46 data for ASCII characters.','line_number':277,'multiline':False]['text':' The normalizer (using uts46.nrm) maps uppercase ASCII letters to lowercase','line_number':278,'multiline':False]['text':' and passes through all other ASCII characters.','line_number':279,'multiline':False]['text':' If UIDNA_USE_STD3_RULES is set, then non-LDH characters are disallowed','line_number':280,'multiline':False]['text':' using this data.','line_number':281,'multiline':False]['text':' The ASCII fastpath also uses this data.','line_number':282,'multiline':False]['text':' Values: -1=disallowed  0==valid  1==mapped (lowercase)','line_number':283,'multiline':False]['text':' 002D..002E; valid  #  HYPHEN-MINUS..FULL STOP','line_number':287,'multiline':False]['text':' 0030..0039; valid  #  DIGIT ZERO..DIGIT NINE','line_number':289,'multiline':False]['text':' 0041..005A; mapped  #  LATIN CAPITAL LETTER A..LATIN CAPITAL LETTER Z','line_number':291,'multiline':False]['text':' 0061..007A; valid  #  LATIN SMALL LETTER A..LATIN SMALL LETTER Z','line_number':294,'multiline':False]['text':' uts46Norm2.normalize() would do all of this error checking and setup,','line_number':304,'multiline':False]['text':' but with the ASCII fastpath we do not always call it, and do not','line_number':305,'multiline':False]['text':' call it first.','line_number':306,'multiline':False]['text':' Arguments are fine, reset output values.','line_number':317,'multiline':False]['text':' ASCII fastpath','line_number':330,'multiline':False]['text':' There is a trailing dot if labelStart==i.','line_number':340,'multiline':False]['text':' Lowercase an uppercase ASCII letter.','line_number':355,'multiline':False]['text':' Replacing with U+FFFD can be complicated for toASCII.','line_number':357,'multiline':False]['text':' hyphen','line_number':360,'multiline':False]['text':' "??--..." is Punycode or forbidden.','line_number':362,'multiline':False]['text':' '-' was copied to dest already','line_number':363,'multiline':False]['text':' label starts with "-"','line_number':367,'multiline':False]['text':' label ends with "-"','line_number':371,'multiline':False]['text':' dot','line_number':374,'multiline':False]['text':' Replacing with U+FFFD can be complicated for toASCII.','line_number':376,'multiline':False]['text':' '.' was copied to dest already','line_number':377,'multiline':False]['text':' Arguments are fine, reset output values.','line_number':417,'multiline':False]['text':' length of stackArray[]','line_number':426,'multiline':False]['text':' ASCII fastpath','line_number':427,'multiline':False]['text':' There is a trailing dot if labelStart==i.','line_number':440,'multiline':False]['text':' (uint8_t)c>0x7f','line_number':451,'multiline':False]['text':' Cast: gcc warns about indexing with a char.','line_number':454,'multiline':False]['text':' Lowercase an uppercase ASCII letter.','line_number':456,'multiline':False]['text':' Replacing with U+FFFD can be complicated for toASCII.','line_number':458,'multiline':False]['text':' hyphen','line_number':461,'multiline':False]['text':' "??--..." is Punycode or forbidden.','line_number':463,'multiline':False]['text':' label starts with "-"','line_number':467,'multiline':False]['text':' label ends with "-"','line_number':471,'multiline':False]['text':' dot','line_number':474,'multiline':False]['text':' Replacing with U+FFFD can be complicated for toASCII.','line_number':476,'multiline':False]['text':' Convert the processed ASCII prefix of the current label to UTF-16.','line_number':491,'multiline':False]['text':' Output the previous ASCII labels and process the rest of src in UTF-16.','line_number':494,'multiline':False]['text':' src is too long for the ASCII fastpath implementation.','line_number':500,'multiline':False]['text':' calls dest.Flush()','line_number':505,'multiline':False]['text':' length==labelStart==254 means that there is a trailing dot (ok) and','line_number':507,'multiline':False]['text':' destString is empty (do not index at 253-labelStart).','line_number':508,'multiline':False]['text':' Do not increment labelLimit in case c was removed.','line_number':566,'multiline':False]['text':' All deviation characters have been mapped, no need to check for them again.','line_number':567,'multiline':False]['text':' Permit an empty label at the end (0<labelStart==labelLimit==destLength is ok)','line_number':576,'multiline':False]['text':' but not an empty label elsewhere nor a completely empty domain name.','line_number':577,'multiline':False]['text':' processLabel() sets UIDNA_ERROR_EMPTY_LABEL when labelLength==0.','line_number':578,'multiline':False]['text':' Map sharp s to ss.','line_number':606,'multiline':False]['text':' Replace sharp s with first s.','line_number':608,'multiline':False]['text':' Insert second s and account for possible buffer reallocation.','line_number':609,'multiline':False]['text':' Map final sigma to nonfinal sigma.','line_number':626,'multiline':False]['text':' Ignore/remove ZWNJ.','line_number':630,'multiline':False]['text':' Ignore/remove ZWJ.','line_number':631,'multiline':False]['text':' Only really necessary if writeIndex was different from readIndex.','line_number':636,'multiline':False]['text':' Mapping deviation characters might have resulted in an un-NFC string.','line_number':643,'multiline':False]['text':' We could use either the NFC or the UTS #46 normalizer.','line_number':644,'multiline':False]['text':' By using the UTS #46 normalizer again, we avoid having to load a second .nrm data file.','line_number':645,'multiline':False]['text':' Some non-ASCII characters are equivalent to sequences with','line_number':659,'multiline':False]['text':' non-LDH ASCII characters. To find them:','line_number':660,'multiline':False]['text':' grep disallowed_STD3_valid IdnaMappingTable.txt (or uts46.txt)','line_number':661,'multiline':False]['text':' Replace the label in dest with the label string, if the label was modified.','line_number':667,'multiline':False]['text':' If &label==&dest then the label was modified in-place and labelLength','line_number':668,'multiline':False]['text':' is the new label length, different from label.length().','line_number':669,'multiline':False]['text':' If &label!=&dest then labelLength==label.length().','line_number':670,'multiline':False]['text':' Returns labelLength (= the new label length).','line_number':671,'multiline':False]['text':' Label starts with "xn--", try to un-Punycode it.','line_number':703,'multiline':False]['text':' capacity==-1: most labels should fit','line_number':705,'multiline':False]['text':' Should never occur if we used capacity==-1 which uses the internal buffer.','line_number':707,'multiline':False]['text':' Check for NFC, and for characters that are not','line_number':732,'multiline':False]['text':' valid or deviation characters according to the normalizer.','line_number':733,'multiline':False]['text':' If there is something wrong, then the string will change.','line_number':734,'multiline':False]['text':' Note that the normalizer passes through non-LDH ASCII and deviation characters.','line_number':735,'multiline':False]['text':' Deviation characters are ok in Punycode even in transitional processing.','line_number':736,'multiline':False]['text':' In the code further below, if we find non-LDH ASCII and we have UIDNA_USE_STD3_RULES','line_number':737,'multiline':False]['text':' then we will set UIDNA_ERROR_INVALID_ACE_LABEL there too.','line_number':738,'multiline':False]['text':' Validity check','line_number':755,'multiline':False]['text':' labelLength>0','line_number':761,'multiline':False]['text':' label starts with "??--"','line_number':763,'multiline':False]['text':' label starts with "-"','line_number':767,'multiline':False]['text':' label ends with "-"','line_number':771,'multiline':False]['text':' If the label was not a Punycode label, then it was the result of','line_number':774,'multiline':False]['text':' mapping, normalization and label segmentation.','line_number':775,'multiline':False]['text':' If the label was in Punycode, then we mapped it again above','line_number':776,'multiline':False]['text':' and checked its validity.','line_number':777,'multiline':False]['text':' Now we handle the STD3 restriction to LDH characters (if set)','line_number':778,'multiline':False]['text':' and we look for U+FFFD which indicates disallowed characters','line_number':779,'multiline':False]['text':' in a non-Punycode label or U+FFFD itself in a Punycode label.','line_number':780,'multiline':False]['text':' We also check for dots which can come from the input to a single-label function.','line_number':781,'multiline':False]['text':' Ok to cast away const because we own the UnicodeString.','line_number':782,'multiline':False]['text':' If we enforce STD3 rules, then ASCII characters other than LDH and dot are disallowed.','line_number':786,'multiline':False]['text':' Check for a leading combining mark after other validity checks','line_number':809,'multiline':False]['text':' so that we don't report UIDNA_ERROR_DISALLOWED for the U+FFFD from here.','line_number':810,'multiline':False]['text':' "Unsafe" is ok because unpaired surrogates were mapped to U+FFFD.','line_number':813,'multiline':False]['text':' Do contextual checks only if we do not have U+FFFD from a severe error','line_number':825,'multiline':False]['text':' because U+FFFD can make these checks fail.','line_number':826,'multiline':False]['text':' Leave a Punycode label unchanged if it has no severe errors.','line_number':840,'multiline':False]['text':' Contains non-ASCII characters.','line_number':846,'multiline':False]['text':' 63==maximum DNS label length','line_number':848,'multiline':False]['text':' Write "xn--".','line_number':853,'multiline':False]['text':' all-ASCII label','line_number':883,'multiline':False]['text':' If a Punycode label has severe errors,','line_number':890,'multiline':False]['text':' then leave it but make sure it does not look valid.','line_number':891,'multiline':False]['text':' Make sure an ACE label does not look valid.','line_number':901,'multiline':False]['text':' Append U+FFFD if the label has only LDH characters.','line_number':902,'multiline':False]['text':' If UIDNA_USE_STD3_RULES, also replace disallowed ASCII characters with U+FFFD.','line_number':903,'multiline':False]['text':' Ok to cast away const because we own the UnicodeString.','line_number':915,'multiline':False]['text':' After the initial "xn--".','line_number':916,'multiline':False]['text':' We scan the whole label and check both for whether it contains RTL characters','line_number':971,'multiline':False]['text':' and whether it passes the BiDi Rule.','line_number':972,'multiline':False]['text':' In a BiDi domain name, all labels must pass the BiDi Rule, but we might find','line_number':973,'multiline':False]['text':' that a domain name is a BiDi domain name (has an RTL label) only after','line_number':974,'multiline':False]['text':' processing several earlier labels.','line_number':975,'multiline':False]['text':' IDNA2008 BiDi rule','line_number':978,'multiline':False]['text':' Get the directionality of the first character.','line_number':979,'multiline':False]['text':' 1. The first character must be a character with BIDI property L, R','line_number':984,'multiline':False]['text':' or AL.  If it has the R or AL property, it is an RTL label; if it','line_number':985,'multiline':False]['text':' has the L property, it is an LTR label.','line_number':986,'multiline':False]['text':' Get the directionality of the last non-NSM character.','line_number':990,'multiline':False]['text':' 3. In an RTL label, the end of the label must be a character with','line_number':1004,'multiline':False]['text':' BIDI property R, AL, EN or AN, followed by zero or more','line_number':1005,'multiline':False]['text':' characters with BIDI property NSM.','line_number':1006,'multiline':False]['text':' 6. In an LTR label, the end of the label must be a character with','line_number':1007,'multiline':False]['text':' BIDI property L or EN, followed by zero or more characters with','line_number':1008,'multiline':False]['text':' BIDI property NSM.','line_number':1009,'multiline':False]['text':' Get the directionalities of the intervening characters.','line_number':1016,'multiline':False]['text':' 5. In an LTR label, only characters with the BIDI properties L, EN,','line_number':1023,'multiline':False]['text':' ES, CS, ET, ON, BN and NSM are allowed.','line_number':1024,'multiline':False]['text':' 2. In an RTL label, only characters with the BIDI properties R, AL,','line_number':1029,'multiline':False]['text':' AN, EN, ES, CS, ET, ON, BN and NSM are allowed.','line_number':1030,'multiline':False]['text':' 4. In an RTL label, if an EN is present, no AN may be present, and','line_number':1034,'multiline':False]['text':' vice versa.','line_number':1035,'multiline':False]['text':' An RTL label is a label that contains at least one character of type','line_number':1040,'multiline':False]['text':' R, AL or AN. [...]','line_number':1041,'multiline':False]['text':' A "BIDI domain name" is a domain name that contains at least one RTL','line_number':1042,'multiline':False]['text':' label. [...]','line_number':1043,'multiline':False]['text':' The following rule, consisting of six conditions, applies to labels','line_number':1044,'multiline':False]['text':' in BIDI domain names.','line_number':1045,'multiline':False]['text':' Special code for the ASCII prefix of a BiDi domain name.','line_number':1051,'multiline':False]['text':' The ASCII prefix is all-LTR.','line_number':1052,'multiline':False]['text':' IDNA2008 BiDi rule, parts relevant to ASCII labels:','line_number':1054,'multiline':False]['text':' 1. The first character must be a character with BIDI property L [...]','line_number':1055,'multiline':False]['text':' 5. In an LTR label, only characters with the BIDI properties L, EN,','line_number':1056,'multiline':False]['text':' ES, CS, ET, ON, BN and NSM are allowed.','line_number':1057,'multiline':False]['text':' 6. In an LTR label, the end of the label must be a character with','line_number':1058,'multiline':False]['text':' BIDI property L or EN [...]','line_number':1059,'multiline':False]['text':' UTF-16 version, called for mapped ASCII prefix.','line_number':1061,'multiline':False]['text':' Cannot contain uppercase A-Z.','line_number':1062,'multiline':False]['text':' s[length-1] must be the trailing dot.','line_number':1063,'multiline':False]['text':' dot','line_number':1069,'multiline':False]['text':' Last character in the label is not an L or EN.','line_number':1073,'multiline':False]['text':' First character in the label is not an L.','line_number':1080,'multiline':False]['text':' Intermediate character in the label is a B, S or WS.','line_number':1085,'multiline':False]['text':' UTF-8 version, called for source ASCII prefix.','line_number':1093,'multiline':False]['text':' Can contain uppercase A-Z.','line_number':1094,'multiline':False]['text':' s[length-1] must be the trailing dot.','line_number':1095,'multiline':False]['text':' dot','line_number':1101,'multiline':False]['text':' Last character in the label is not an L or EN.','line_number':1105,'multiline':False]['text':' First character in the label is not an L.','line_number':1112,'multiline':False]['text':' Intermediate character in the label is a B, S or WS.','line_number':1117,'multiline':False]['text':' [IDNA2008-Tables]','line_number':1128,'multiline':False]['text':' 200C..200D  ; CONTEXTJ    # ZERO WIDTH NON-JOINER..ZERO WIDTH JOINER','line_number':1129,'multiline':False]['text':' Appendix A.1. ZERO WIDTH NON-JOINER','line_number':1132,'multiline':False]['text':' Rule Set:','line_number':1133,'multiline':False]['text':'  False;','line_number':1134,'multiline':False]['text':'  If Canonical_Combining_Class(Before(cp)) .eq.  Virama Then True;','line_number':1135,'multiline':False]['text':'  If RegExpMatch((Joining_Type:{L,D})(Joining_Type:T)*\u200C','line_number':1136,'multiline':False]['text':'     (Joining_Type:T)*(Joining_Type:{R,D})) Then True;','line_number':1137,'multiline':False]['text':' check precontext (Joining_Type:{L,D})(Joining_Type:T)*','line_number':1147,'multiline':False]['text':' precontext fulfilled','line_number':1156,'multiline':False]['text':' check postcontext (Joining_Type:T)*(Joining_Type:{R,D})','line_number':1161,'multiline':False]['text':' just skip this character','line_number':1169,'multiline':False]['text':' postcontext fulfilled','line_number':1171,'multiline':False]['text':' Appendix A.2. ZERO WIDTH JOINER (U+200D)','line_number':1177,'multiline':False]['text':' Rule Set:','line_number':1178,'multiline':False]['text':'  False;','line_number':1179,'multiline':False]['text':'  If Canonical_Combining_Class(Before(cp)) .eq.  Virama Then True;','line_number':1180,'multiline':False]['text':' inclusive','line_number':1197,'multiline':False]['text':' -1 for 066x, +1 for 06Fx','line_number':1198,'multiline':False]['text':' ASCII fastpath','line_number':1202,'multiline':False]['text':' Appendix A.3. MIDDLE DOT (U+00B7)','line_number':1205,'multiline':False]['text':' Rule Set:','line_number':1206,'multiline':False]['text':'  False;','line_number':1207,'multiline':False]['text':'  If Before(cp) .eq.  U+006C And','line_number':1208,'multiline':False]['text':'     After(cp) .eq.  U+006C Then True;','line_number':1209,'multiline':False]['text':' Appendix A.4. GREEK LOWER NUMERAL SIGN (KERAIA) (U+0375)','line_number':1215,'multiline':False]['text':' Rule Set:','line_number':1216,'multiline':False]['text':'  False;','line_number':1217,'multiline':False]['text':'  If Script(After(cp)) .eq.  Greek Then True;','line_number':1218,'multiline':False]['text':' Appendix A.5. HEBREW PUNCTUATION GERESH (U+05F3)','line_number':1230,'multiline':False]['text':' Rule Set:','line_number':1231,'multiline':False]['text':'  False;','line_number':1232,'multiline':False]['text':'  If Script(Before(cp)) .eq.  Hebrew Then True;','line_number':1233,'multiline':False]['text':'','line_number':1234,'multiline':False]['text':' Appendix A.6. HEBREW PUNCTUATION GERSHAYIM (U+05F4)','line_number':1235,'multiline':False]['text':' Rule Set:','line_number':1236,'multiline':False]['text':'  False;','line_number':1237,'multiline':False]['text':'  If Script(Before(cp)) .eq.  Hebrew Then True;','line_number':1238,'multiline':False]['text':' && c<=0x6f9 ','line_number':1249,'multiline':True]['text':' Appendix A.8. ARABIC-INDIC DIGITS (0660..0669)','line_number':1250,'multiline':False]['text':' Rule Set:','line_number':1251,'multiline':False]['text':'  True;','line_number':1252,'multiline':False]['text':'  For All Characters:','line_number':1253,'multiline':False]['text':'    If cp .in. 06F0..06F9 Then False;','line_number':1254,'multiline':False]['text':'  End For;','line_number':1255,'multiline':False]['text':'','line_number':1256,'multiline':False]['text':' Appendix A.9. EXTENDED ARABIC-INDIC DIGITS (06F0..06F9)','line_number':1257,'multiline':False]['text':' Rule Set:','line_number':1258,'multiline':False]['text':'  True;','line_number':1259,'multiline':False]['text':'  For All Characters:','line_number':1260,'multiline':False]['text':'    If cp .in. 0660..0669 Then False;','line_number':1261,'multiline':False]['text':'  End For;','line_number':1262,'multiline':False]['text':' Appendix A.7. KATAKANA MIDDLE DOT (U+30FB)','line_number':1276,'multiline':False]['text':' Rule Set:','line_number':1277,'multiline':False]['text':'  False;','line_number':1278,'multiline':False]['text':'  For All Characters:','line_number':1279,'multiline':False]['text':'    If Script(cp) .in. {Hiragana, Katakana, Han} Then True;','line_number':1280,'multiline':False]['text':'  End For;','line_number':1281,'multiline':False]['text':' C API ------------------------------------------------------------------- ***','line_number':1300,'multiline':False]['text':' sizeof(UIDNAInfo)=16 in the first API version.','line_number':1321,'multiline':False]['text':' Set all *pInfo bytes to 0 except for the size field itself.','line_number':1333,'multiline':False]['text':' UCONFIG_NO_IDNA','line_number':1472,'multiline':False]