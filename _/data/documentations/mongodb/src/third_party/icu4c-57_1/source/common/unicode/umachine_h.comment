['text':'
******************************************************************************
*
*   Copyright (C) 1999-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*   file name:  umachine.h
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 1999sep13
*   created by: Markus W. Scherer
*
*   This file defines basic types and constants for ICU to be
*   platform-independent. umachine.h and utf.h are included into
*   utypes.h to provide all the general definitions for ICU.
*   All of these definitions used to be in utypes.h before
*   the UTF-handling macros made this unmaintainable.
','line_number':1,'multiline':True]['text':'*
 * \file
 * \brief Basic types and constants for UTF
 *
 * <h2> Basic types and constants for UTF </h2>
 *   This file defines basic types and constants for utf.h to be
 *   platform-independent. umachine.h and utf.h are included into
 *   utypes.h to provide all the general definitions for ICU.
 *   All of these definitions used to be in utypes.h before
 *   the UTF-handling macros made this unmaintainable.
 *
 ','line_number':27,'multiline':True]['text':'==========================================================================','line_number':39,'multiline':True]['text':' Include platform-dependent definitions                                   ','line_number':40,'multiline':True]['text':' which are contained in the platform-specific file platform.h             ','line_number':41,'multiline':True]['text':'==========================================================================','line_number':42,'multiline':True]['text':' platform.h is included in ptypes.h ','line_number':44,'multiline':True]['text':'
 * ANSI C headers:
 * stddef.h defines wchar_t
 ','line_number':46,'multiline':True]['text':'==========================================================================','line_number':52,'multiline':True]['text':' For C wrappers, we use the symbol U_STABLE.                                ','line_number':53,'multiline':True]['text':' This works properly if the includer is C or C++.                         ','line_number':54,'multiline':True]['text':' Functions are declared   U_STABLE return-type U_EXPORT2 function-name()... ','line_number':55,'multiline':True]['text':'==========================================================================','line_number':56,'multiline':True]['text':'*
 * \def U_CFUNC
 * This is used in a declaration of a library private ICU C function.
 * @stable ICU 2.4
 ','line_number':58,'multiline':True]['text':'*
 * \def U_CDECL_BEGIN
 * This is used to begin a declaration of a library private ICU C API.
 * @stable ICU 2.4
 ','line_number':64,'multiline':True]['text':'*
 * \def U_CDECL_END
 * This is used to end a declaration of a library private ICU C API
 * @stable ICU 2.4
 ','line_number':70,'multiline':True]['text':'*
 * \def U_ATTRIBUTE_DEPRECATED
 *  This is used for GCC specific attributes
 * @internal
 ','line_number':87,'multiline':True]['text':'*
 * \def U_ATTRIBUTE_DEPRECATED
 * This is used for Visual C++ specific attributes 
 * @internal
 ','line_number':94,'multiline':True]['text':'* This is used to declare a function as a public ICU C API @stable ICU 2.0','line_number':106,'multiline':True]['text':'* This is used to declare a function as a stable public ICU C API','line_number':108,'multiline':True]['text':'* This is used to declare a function as a draft public ICU C API  ','line_number':110,'multiline':True]['text':'* This is used to declare a function as a deprecated public ICU C API  ','line_number':112,'multiline':True]['text':'* This is used to declare a function as an obsolete public ICU C API  ','line_number':114,'multiline':True]['text':'* This is used to declare a function as an internal ICU C API  ','line_number':116,'multiline':True]['text':'*
 * \def U_OVERRIDE
 * Defined to the C++11 "override" keyword if available.
 * Denotes a class or member which is an override of the base class.
 * May result in an error if it applied to something not an override.
 * @internal
 ','line_number':119,'multiline':True]['text':'*
 * \def U_FINAL
 * Defined to the C++11 "final" keyword if available.
 * Denotes a class or member which may not be overridden in subclasses.
 * May result in an error if subclasses attempt to override.
 * @internal
 ','line_number':127,'multiline':True]['text':' C++11 ','line_number':136,'multiline':True]['text':' not C++11 - define to nothing ','line_number':144,'multiline':True]['text':'==========================================================================','line_number':153,'multiline':True]['text':' limits for int32_t etc., like in POSIX inttypes.h                        ','line_number':154,'multiline':True]['text':'==========================================================================','line_number':155,'multiline':True]['text':'* The smallest value an 8 bit signed integer can hold @stable ICU 2.0 ','line_number':158,'multiline':True]['text':'* The smallest value a 16 bit signed integer can hold @stable ICU 2.0 ','line_number':162,'multiline':True]['text':'* The smallest value a 32 bit signed integer can hold @stable ICU 2.0 ','line_number':166,'multiline':True]['text':'* The largest value an 8 bit signed integer can hold @stable ICU 2.0 ','line_number':171,'multiline':True]['text':'* The largest value a 16 bit signed integer can hold @stable ICU 2.0 ','line_number':175,'multiline':True]['text':'* The largest value a 32 bit signed integer can hold @stable ICU 2.0 ','line_number':179,'multiline':True]['text':'* The largest value an 8 bit unsigned integer can hold @stable ICU 2.0 ','line_number':184,'multiline':True]['text':'* The largest value a 16 bit unsigned integer can hold @stable ICU 2.0 ','line_number':188,'multiline':True]['text':'* The largest value a 32 bit unsigned integer can hold @stable ICU 2.0 ','line_number':192,'multiline':True]['text':'*
 * Provides a platform independent way to specify a signed 64-bit integer constant.
 * note: may be wrong for some 64 bit platforms - ensure your compiler provides INT64_C
 * @stable ICU 2.8
 ','line_number':200,'multiline':True]['text':'*
 * Provides a platform independent way to specify an unsigned 64-bit integer constant.
 * note: may be wrong for some 64 bit platforms - ensure your compiler provides UINT64_C
 * @stable ICU 2.8
 ','line_number':208,'multiline':True]['text':'* The smallest value a 64 bit signed integer can hold @stable ICU 2.8 ','line_number':216,'multiline':True]['text':'* The largest value a 64 bit signed integer can hold @stable ICU 2.8 ','line_number':220,'multiline':True]['text':'* The largest value a 64 bit unsigned integer can hold @stable ICU 2.8 ','line_number':224,'multiline':True]['text':'==========================================================================','line_number':229,'multiline':True]['text':' Boolean data type                                                        ','line_number':230,'multiline':True]['text':'==========================================================================','line_number':231,'multiline':True]['text':'* The ICU boolean type @stable ICU 2.0 ','line_number':233,'multiline':True]['text':'* The TRUE value of a UBool @stable ICU 2.0 ','line_number':237,'multiline':True]['text':'* The FALSE value of a UBool @stable ICU 2.0 ','line_number':241,'multiline':True]['text':'==========================================================================','line_number':246,'multiline':True]['text':' Unicode data types                                                       ','line_number':247,'multiline':True]['text':'==========================================================================','line_number':248,'multiline':True]['text':' wchar_t-related definitions -------------------------------------------- ','line_number':250,'multiline':True]['text':'
 * \def U_WCHAR_IS_UTF16
 * Defined if wchar_t uses UTF-16.
 *
 * @stable ICU 2.0
 ','line_number':252,'multiline':True]['text':'
 * \def U_WCHAR_IS_UTF32
 * Defined if wchar_t uses UTF-32.
 *
 * @stable ICU 2.0
 ','line_number':258,'multiline':True]['text':' UChar and UChar32 definitions -------------------------------------------- ','line_number':286,'multiline':True]['text':'* Number of bytes in a UChar. @stable ICU 2.0 ','line_number':288,'multiline':True]['text':'*
 * \var UChar
 * Define UChar to be UCHAR_TYPE, if that is #defined (for example, to char16_t),
 * or wchar_t if that is 16 bits wide; always assumed to be unsigned.
 * If neither is available, then define UChar to be uint16_t.
 *
 * This makes the definition of UChar platform-dependent
 * but allows direct string type compatibility with platforms with
 * 16-bit wchar_t types.
 *
 * @stable ICU 4.4
 ','line_number':291,'multiline':True]['text':' Not #elif U_HAVE_CHAR16_T -- because that is type-incompatible with pre-C++11 callers
    typedef char16_t UChar;  ','line_number':305,'multiline':True]['text':'*
 * Define UChar32 as a type for single Unicode code points.
 * UChar32 is a signed 32-bit integer (same as int32_t).
 *
 * The Unicode code point range is 0..0x10ffff.
 * All other values (negative or >=0x110000) are illegal as Unicode code points.
 * They may be used as sentinel values to indicate "done", "error"
 * or similar non-code point conditions.
 *
 * Before ICU 2.4 (Jitterbug 2146), UChar32 was defined
 * to be wchar_t if that is 32 bits wide (wchar_t may be signed or unsigned)
 * or else to be uint32_t.
 * That is, the definition of UChar32 was platform-dependent.
 *
 * @see U_SENTINEL
 * @stable ICU 2.4
 ','line_number':315,'multiline':True]['text':'*
 * This value is intended for sentinel values for APIs that
 * (take or) return single code points (UChar32).
 * It is outside of the Unicode code point range 0..0x10ffff.
 * 
 * For example, a "done" or "error" value in a new API
 * could be indicated with U_SENTINEL.
 *
 * ICU APIs designed before ICU 2.4 usually define service-specific "done"
 * values, mostly 0xffff.
 * Those may need to be distinguished from
 * actual U+ffff text contents by calling functions like
 * CharacterIterator::hasNext() or UnicodeString::length().
 *
 * @return -1
 * @see UChar32
 * @stable ICU 2.4
 ','line_number':334,'multiline':True]