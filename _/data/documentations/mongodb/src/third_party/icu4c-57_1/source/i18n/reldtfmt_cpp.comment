['text':'
*******************************************************************************
* Copyright (C) 2007-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':1,'multiline':True]['text':' for CalendarData','line_number':22,'multiline':False]['text':'*
 * An array of URelativeString structs is used to store the resource data loaded out of the bundle.
 ','line_number':29,'multiline':True]['text':'* offset of this item, such as, the relative date *','line_number':33,'multiline':True]['text':'* length of the string *','line_number':34,'multiline':True]['text':'* string, or NULL if not set *','line_number':35,'multiline':True]['text':' don't support other time styles (e.g. relative styles), for now','line_number':85,'multiline':False]['text':' Get fDateTimeFormatter from either date or time style (does not matter, we will override the pattern).','line_number':91,'multiline':False]['text':' We do need to get separate patterns for the date & time styles.','line_number':92,'multiline':False]['text':' does not matter whether timeStyle is UDAT_NONE, we need something for fDateTimeFormatter','line_number':110,'multiline':False]['text':' Initialize the parent fCalendar, so that parse() works correctly.','line_number':120,'multiline':False]['text':' The DateFormat::operator== check for fCapitalizationContext equality above','line_number':141,'multiline':False]['text':'   is sufficient to check equality of all derived context-related data.','line_number':142,'multiline':False]['text':' DateFormat::operator== guarantees following cast is safe','line_number':143,'multiline':False]['text':' calculate the difference, in days, between 'cal' and now.','line_number':163,'multiline':False]['text':' look up string','line_number':166,'multiline':False]['text':' found a relative string','line_number':170,'multiline':False]['text':' capitalize relativeDayString according to context for relative, set formatter no context','line_number':177,'multiline':False]['text':' titlecase first word of relativeDayString','line_number':182,'multiline':False]['text':' set our context for the formatter','line_number':188,'multiline':False]['text':' Need to quote the relativeDayString to make it a legal date pattern','line_number':205,'multiline':False]['text':' double any existing APOSTROPHE','line_number':206,'multiline':False]['text':' add APOSTROPHE at beginning...','line_number':207,'multiline':False]['text':' and at end','line_number':208,'multiline':False]['text':' this is just here to get around the hiding problem','line_number':230,'multiline':False]['text':' (the previous format() override would hide the version of','line_number':231,'multiline':False]['text':' format() on DateFormat that this function correspond to, so we','line_number':232,'multiline':False]['text':' have to redefine it here)','line_number':233,'multiline':False]['text':' no date pattern, try parsing as time','line_number':244,'multiline':False]['text':' no time pattern or way to combine, try parsing as date','line_number':248,'multiline':False]['text':' first check whether text matches a relativeDayString','line_number':249,'multiline':False]['text':' it matched, handle the relative day string','line_number':254,'multiline':False]['text':' Set the calendar to now+offset','line_number':258,'multiline':False]['text':' failure in setting calendar field, set offset to beginning of rel day string','line_number':263,'multiline':False]['text':' just parse as normal date','line_number':271,'multiline':False]['text':' Here we replace any relativeDayString in text with the equivalent date','line_number':276,'multiline':False]['text':' formatted per fDatePattern, then parse text normally using the combined pattern.','line_number':277,'multiline':False]['text':' it matched, replace the relative date with a real one for parsing','line_number':286,'multiline':False]['text':' Set the calendar to now+offset','line_number':290,'multiline':False]['text':' Adjust offsets','line_number':314,'multiline':False]['text':' offset at or after the end of the replaced text,','line_number':318,'multiline':False]['text':' correct by the difference between original and replacement','line_number':319,'multiline':False]['text':' offset in the replaced text, set it to the beginning of that text','line_number':322,'multiline':False]['text':' (i.e. the beginning of the relative day string)','line_number':323,'multiline':False]['text':' redefined here because the other parse() function hides this function's','line_number':337,'multiline':False]['text':' cunterpart on DateFormat','line_number':338,'multiline':False]['text':' redefined here because the other parse() function hides this function's','line_number':345,'multiline':False]['text':' counterpart on DateFormat','line_number':346,'multiline':False]['text':' Is it outside the resource bundle's range?','line_number':356,'multiline':False]['text':' don't have it.','line_number':358,'multiline':False]['text':' Linear search the held strings','line_number':361,'multiline':False]['text':' not found.','line_number':369,'multiline':False]['text':' override the DateFormat implementation in order to','line_number':423,'multiline':False]['text':' lazily initialize relevant items','line_number':424,'multiline':False]['text':' "{1}"','line_number':471,'multiline':False]['text':' Get proper date time format','line_number':486,'multiline':False]['text':' set up min/max ','line_number':521,'multiline':False]['text':' Load in each item into the array...','line_number':534,'multiline':False]['text':' iterate over items','line_number':539,'multiline':False]['text':' key = offset #','line_number':544,'multiline':False]['text':' load the string and length','line_number':547,'multiline':False]['text':' calculate the offset','line_number':553,'multiline':False]['text':' set min/max','line_number':556,'multiline':False]['text':' copy the string pointer','line_number':564,'multiline':False]['text':' the fDates[] array could be sorted here, for direct access.','line_number':574,'multiline':False]['text':'----------------------------------------------------------------------','line_number':577,'multiline':False]['text':' this should to be in DateFormat, instead it was copied from SimpleDateFormat.','line_number':579,'multiline':False]['text':' TODO: Cache the nowCal to avoid heap allocs? Would be difficult, don't know the calendar type','line_number':597,'multiline':False]['text':' For the day difference, we are interested in the difference in the (modified) julian day number','line_number':601,'multiline':False]['text':' which is midnight to midnight.  Using fieldDifference() is NOT correct here, because ','line_number':602,'multiline':False]['text':' 6pm Jan 4th  to 10am Jan 5th should be considered "tomorrow".','line_number':603,'multiline':False]