['text':'  
**********************************************************************
*   Copyright (C) 2002-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*   file name:  ucnv_u32.c
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2002jul01
*   created by: Markus W. Scherer
*
*   UTF-32 converter implementation. Used to be in ucnv_utf.c.
','line_number':1,'multiline':True]['text':' -SURROGATE_LOW_START + HALF_BASE ','line_number':35,'multiline':True]['text':' UTF-32BE ----------------------------------------------------------------- ','line_number':42,'multiline':True]['text':' Restore state of current sequence ','line_number':55,'multiline':True]['text':' restore # of bytes consumed ','line_number':57,'multiline':True]['text':'Stores the previously calculated ch from a previous call','line_number':60,'multiline':True]['text':' stores a partially calculated target','line_number':75,'multiline':True]['text':' + 1 to make 0 a valid character ','line_number':76,'multiline':True]['text':' Normal valid byte when the loop has not prematurely terminated (i < inBytes) ','line_number':84,'multiline':True]['text':' fits in 16 bits ','line_number':87,'multiline':True]['text':' write out the surrogates ','line_number':91,'multiline':True]['text':' Put in overflow buffer (not handled here) ','line_number':98,'multiline':True]['text':' End of target buffer ','line_number':115,'multiline':True]['text':' Restore state of current sequence ','line_number':136,'multiline':True]['text':' restore # of bytes consumed ','line_number':138,'multiline':True]['text':'Stores the previously calculated ch from a previous call','line_number':141,'multiline':True]['text':' stores a partially calculated target','line_number':156,'multiline':True]['text':' + 1 to make 0 a valid character ','line_number':157,'multiline':True]['text':' Normal valid byte when the loop has not prematurely terminated (i < inBytes) ','line_number':165,'multiline':True]['text':' fits in 16 bits ','line_number':167,'multiline':True]['text':' write out the surrogates ','line_number':172,'multiline':True]['text':' Put in overflow buffer (not handled here) ','line_number':182,'multiline':True]['text':' End of target buffer ','line_number':201,'multiline':True]['text':' no input, nothing to do ','line_number':223,'multiline':True]['text':' write the BOM if necessary ','line_number':227,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':260,'multiline':True]['text':' callback(illegal) ','line_number':261,'multiline':True]['text':' ran out of source ','line_number':268,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':271,'multiline':True]['text':' callback(illegal) ','line_number':272,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':279,'multiline':True]['text':' callback(illegal) ','line_number':280,'multiline':True]['text':' We cannot get any larger than 10FFFF because we are coming from UTF-16 ','line_number':287,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':289,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':290,'multiline':True]['text':' no input, nothing to do ','line_number':326,'multiline':True]['text':' write the BOM if necessary ','line_number':330,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':364,'multiline':True]['text':' callback(illegal) ','line_number':365,'multiline':True]['text':' ran out of source ','line_number':372,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':375,'multiline':True]['text':' callback(illegal) ','line_number':376,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':383,'multiline':True]['text':' callback(illegal) ','line_number':384,'multiline':True]['text':' We cannot get any larger than 10FFFF because we are coming from UTF-16 ','line_number':391,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':393,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':394,'multiline':True]['text':' no input ','line_number':429,'multiline':True]['text':' got a partial character ','line_number':437,'multiline':True]['text':' Don't even try to do a direct cast because the value may be on an odd address. ','line_number':445,'multiline':True]['text':' The 1232 CCSID refers to any version of Unicode with any endianess of UTF-32 ','line_number':486,'multiline':True]['text':' reserved ','line_number':495,'multiline':True]['text':' UTF-32LE ---------------------------------------------------------- ','line_number':501,'multiline':True]['text':' Restore state of current sequence ','line_number':514,'multiline':True]['text':' restore # of bytes consumed ','line_number':517,'multiline':True]['text':' Stores the previously calculated ch from a previous call','line_number':520,'multiline':True]['text':' stores a partially calculated target','line_number':540,'multiline':True]['text':' + 1 to make 0 a valid character ','line_number':541,'multiline':True]['text':' Normal valid byte when the loop has not prematurely terminated (i < inBytes) ','line_number':549,'multiline':True]['text':' fits in 16 bits ','line_number':551,'multiline':True]['text':' write out the surrogates ','line_number':555,'multiline':True]['text':' Put in overflow buffer (not handled here) ','line_number':562,'multiline':True]['text':' End of target buffer ','line_number':580,'multiline':True]['text':' Restore state of current sequence ','line_number':601,'multiline':True]['text':' restore # of bytes consumed ','line_number':604,'multiline':True]['text':' Stores the previously calculated ch from a previous call','line_number':607,'multiline':True]['text':' stores a partially calculated target','line_number':627,'multiline':True]['text':' + 1 to make 0 a valid character ','line_number':628,'multiline':True]['text':' Normal valid byte when the loop has not prematurely terminated (i < inBytes) ','line_number':637,'multiline':True]['text':' fits in 16 bits ','line_number':640,'multiline':True]['text':' write out the surrogates ','line_number':645,'multiline':True]['text':' Put in overflow buffer (not handled here) ','line_number':656,'multiline':True]['text':' End of target buffer ','line_number':676,'multiline':True]['text':' no input, nothing to do ','line_number':698,'multiline':True]['text':' write the BOM if necessary ','line_number':702,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':739,'multiline':True]['text':' callback(illegal) ','line_number':740,'multiline':True]['text':' ran out of source ','line_number':747,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':750,'multiline':True]['text':' callback(illegal) ','line_number':751,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':758,'multiline':True]['text':' callback(illegal) ','line_number':759,'multiline':True]['text':' We cannot get any larger than 10FFFF because we are coming from UTF-16 ','line_number':766,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':768,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':769,'multiline':True]['text':' no input, nothing to do ','line_number':809,'multiline':True]['text':' write the BOM if necessary ','line_number':813,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':852,'multiline':True]['text':' callback(illegal) ','line_number':853,'multiline':True]['text':' ran out of source ','line_number':860,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':863,'multiline':True]['text':' callback(illegal) ','line_number':864,'multiline':True]['text':' this is an unmatched trail code unit (2nd surrogate) ','line_number':871,'multiline':True]['text':' callback(illegal) ','line_number':872,'multiline':True]['text':' We cannot get any larger than 10FFFF because we are coming from UTF-16 ','line_number':879,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':881,'multiline':True]['text':' unsigned cast implicitly does (ch & FF) ','line_number':882,'multiline':True]['text':' no input ','line_number':921,'multiline':True]['text':' got a partial character ','line_number':929,'multiline':True]['text':' Don't even try to do a direct cast because the value may be on an odd address. ','line_number':937,'multiline':True]['text':' The 1232 CCSID refers to any version of Unicode with any endianess of UTF-32 ','line_number':978,'multiline':True]['text':' reserved ','line_number':987,'multiline':True]['text':' UTF-32 (Detect BOM) ------------------------------------------------------ ','line_number':994,'multiline':True]['text':'
 * Detect a BOM at the beginning of the stream and select UTF-32BE or UTF-32LE
 * accordingly.
 *
 * State values:
 * 0    initial state
 * 1    saw 00
 * 2    saw 00 00
 * 3    saw 00 00 FE
 * 4    -
 * 5    saw FF
 * 6    saw FF FE
 * 7    saw FF FE 00
 * 8    UTF-32BE mode
 * 9    UTF-32LE mode
 *
 * During detection: state&3==number of matching bytes so far.
 *
 * On output, emit U+FEFF as the first code point.
 ','line_number':996,'multiline':True]['text':' reset toUnicode: state=0 ','line_number':1020,'multiline':True]['text':' reset fromUnicode: prepare to output the UTF-32PE BOM ','line_number':1024,'multiline':True]['text':'
     * If we detect a BOM in this buffer, then we must add the BOM size to the
     * offsets because the actual converter function will not see and count the BOM.
     * offsetDelta will have the number of the BOM bytes that are in the current buffer.
     ','line_number':1051,'multiline':True]['text':' could be 00 00 FE FF ','line_number':1063,'multiline':True]['text':' could be FF FE 00 00 ','line_number':1065,'multiline':True]['text':' default to UTF-32BE ','line_number':1067,'multiline':True]['text':' detect UTF-32BE ','line_number':1082,'multiline':True]['text':' detect UTF-32LE ','line_number':1085,'multiline':True]['text':' switch to UTF-32BE and pass the previous bytes ','line_number':1089,'multiline':True]['text':' number of bytes from this buffer ','line_number':1090,'multiline':True]['text':' reset the source ','line_number':1092,'multiline':True]['text':' simple: all in the same buffer, just reset source ','line_number':1096,'multiline':True]['text':' some of the bytes are from a previous buffer, replay those first ','line_number':1100,'multiline':True]['text':' select the correct BOM ','line_number':1101,'multiline':True]['text':' replay previous bytes ','line_number':1102,'multiline':True]['text':' this sourceLimit is not the real source stream limit ','line_number':1103,'multiline':True]['text':' no offsets: bytes from previous buffer, and not enough for output ','line_number':1105,'multiline':True]['text':' restore real pointers; pArgs->source will be set in case 8/9 ','line_number':1108,'multiline':True]['text':' call UTF-32BE ','line_number':1117,'multiline':True]['text':' call UTF-32LE ','line_number':1127,'multiline':True]['text':' does not occur ','line_number':1137,'multiline':True]['text':' add BOM size to offsets - see comment at offsetDelta declaration ','line_number':1141,'multiline':True]['text':' handle truncated input ','line_number':1152,'multiline':True]['text':' no input at all, nothing to do ','line_number':1155,'multiline':True]['text':' handle 0<state<8: call UTF-32BE with too-short input ','line_number':1163,'multiline':True]['text':' select the correct BOM ','line_number':1164,'multiline':True]['text':' replay bytes ','line_number':1165,'multiline':True]['text':' no offsets: not enough for output ','line_number':1167,'multiline':True]['text':' ### TODO implement getStarters for all Unicode encodings?! ','line_number':1213,'multiline':True]['text':' The 1236 CCSID refers to any version of Unicode with a BOM sensitive endianess of UTF-32 ','line_number':1220,'multiline':True]['text':' reserved ','line_number':1234,'multiline':True]