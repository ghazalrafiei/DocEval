['text':'
******************************************************************************
* Copyright (C) 2014-2016, International Business Machines
* Corporation and others.  All Rights Reserved.
******************************************************************************
* simpleformatter.cpp
','line_number':1,'multiline':True]['text':'*
 * Argument numbers must be smaller than this limit.
 * Text segment lengths are offset by this much.
 * This is currently the only unused char value in compiled patterns,
 * except it is the maximum value of the first unit (max arg +1).
 ','line_number':18,'multiline':True]['text':'*
 * Initial and maximum char/UChar value set for a text segment.
 * Segment length char values are from ARG_NUM_LIMIT+1 to this value here.
 * Normally 0xffff, but can be as small as ARG_NUM_LIMIT+1 for testing.
 ','line_number':25,'multiline':True]['text':'*
 * Maximum length of a text segment. Longer segments are split into shorter ones.
 ','line_number':31,'multiline':True]['text':' namespace','line_number':49,'multiline':False]['text':' Parse consistent with MessagePattern, but','line_number':68,'multiline':False]['text':' - support only simple numbered arguments','line_number':69,'multiline':False]['text':' - build a simple binary structure into the result string','line_number':70,'multiline':False]['text':' Reserve the first char for the number of arguments.','line_number':73,'multiline':False]['text':' double apostrophe, skip the second one','line_number':82,'multiline':False]['text':' skip the quote-ending apostrophe','line_number':85,'multiline':False]['text':' Skip the quote-starting apostrophe, find the end of the quoted literal text.','line_number':89,'multiline':False]['text':' The apostrophe is part of literal text.','line_number':93,'multiline':False]['text':' Multi-digit argument number (no leading zero) or syntax error.','line_number':108,'multiline':False]['text':' MessagePattern permits PatternProps.skipWhiteSpace(pattern, index)','line_number':109,'multiline':False]['text':' around the number, but this class does not.','line_number':110,'multiline':False]['text':' else: c is part of literal text','line_number':132,'multiline':False]['text':' Append c and track the literal-text segment length.','line_number':133,'multiline':False]['text':' Reserve a char for the length of a new text segment, preset the maximum length.','line_number':135,'multiline':False]['text':' If the pattern starts with an argument whose value is the same object','line_number':215,'multiline':False]['text':' as the result, then we keep the result contents and append to it.','line_number':216,'multiline':False]['text':' Otherwise we replace its contents.','line_number':217,'multiline':False]['text':' If any non-initial argument value is the same object as the result,','line_number':219,'multiline':False]['text':' then we first copy its contents and use that instead while formatting.','line_number':220,'multiline':False]['text':' Java: StringBuilder','line_number':250,'multiline':False]['text':' We are appending to result which is also the first value object.','line_number':287,'multiline':False]