['text':'
 **********************************************************************
 * Copyright (c) 2003-2008, International Business Machines
 * Corporation and others.  All Rights Reserved.
 **********************************************************************
 * Author: Alan Liu
 * Created: September 2 2003
 * Since: ICU 2.8
 **********************************************************************
 ','line_number':1,'multiline':True]['text':'*
 * A utility class providing mathematical functions used by time zone
 * and calendar code.  Do not instantiate.  Formerly just named 'Math'.
 * @internal
 ','line_number':23,'multiline':True]['text':'*
     * Divide two integers, returning the floor of the quotient.
     * Unlike the built-in division, this is mathematically
     * well-behaved.  E.g., <code>-1/4</code> => 0 but
     * <code>floorDivide(-1,4)</code> => -1.
     * @param numerator the numerator
     * @param denominator a divisor which must be != 0
     * @return the floor of the quotient
     ','line_number':30,'multiline':True]['text':'*
     * Divide two numbers, returning the floor of the quotient.
     * Unlike the built-in division, this is mathematically
     * well-behaved.  E.g., <code>-1/4</code> => 0 but
     * <code>floorDivide(-1,4)</code> => -1.
     * @param numerator the numerator
     * @param denominator a divisor which must be != 0
     * @return the floor of the quotient
     ','line_number':41,'multiline':True]['text':'*
     * Divide two numbers, returning the floor of the quotient and
     * the modulus remainder.  Unlike the built-in division, this is
     * mathematically well-behaved.  E.g., <code>-1/4</code> => 0 and
     * <code>-1%4</code> => -1, but <code>floorDivide(-1,4)</code> =>
     * -1 with <code>remainder</code> => 3.  NOTE: If numerator is
     * too large, the returned quotient may overflow.
     * @param numerator the numerator
     * @param denominator a divisor which must be != 0
     * @param remainder output parameter to receive the
     * remainder. Unlike <code>numerator % denominator</code>, this
     * will always be non-negative, in the half-open range <code>[0,
     * |denominator|)</code>.
     * @return the floor of the quotient
     ','line_number':52,'multiline':True]['text':'*
     * For a positive divisor, return the quotient and remainder
     * such that dividend = quotient*divisor + remainder and
     * 0 <= remainder < divisor.
     *
     * Works around edge-case bugs.  Handles pathological input
     * (divident >> divisor) reasonably.
     *
     * Calling with a divisor <= 0 is disallowed.
     ','line_number':70,'multiline':True]['text':' Useful millisecond constants','line_number':84,'multiline':False]['text':'  86,400,000','line_number':85,'multiline':False]['text':' 604,800,000','line_number':90,'multiline':False]['text':' Epoch constants','line_number':92,'multiline':False]['text':' January 1, year 1 (Gregorian)','line_number':93,'multiline':False]['text':' January 1, 1970 (Gregorian)','line_number':95,'multiline':False]['text':' minimum representable by julian day  -1e17','line_number':100,'multiline':False]['text':' max representable by julian day      +1e17','line_number':102,'multiline':False]['text':'*
 * The minimum supported Julian day.  This value is equivalent to
 * MIN_MILLIS.
 ','line_number':104,'multiline':True]['text':'*
 * The minimum supported epoch milliseconds.  This value is equivalent
 * to MIN_JULIAN.
 ','line_number':110,'multiline':True]['text':'*
 * The maximum supported Julian day.  This value is equivalent to
 * MAX_MILLIS.
 ','line_number':116,'multiline':True]['text':'*
 * The maximum supported epoch milliseconds.  This value is equivalent
 * to MAX_JULIAN.
 ','line_number':122,'multiline':True]['text':'*
 * A utility class providing proleptic Gregorian calendar functions
 * used by time zone and calendar code.  Do not instantiate.
 *
 * Note:  Unlike GregorianCalendar, all computations performed by this
 * class occur in the pure proleptic GregorianCalendar.
 ','line_number':128,'multiline':True]['text':'*
     * Return TRUE if the given year is a leap year.
     * @param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
     * @return TRUE if the year is a leap year
     ','line_number':137,'multiline':True]['text':'*
     * Return the number of days in the given month.
     * @param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
     * @param month 0-based month, with 0==Jan
     * @return the number of days in the given month
     ','line_number':144,'multiline':True]['text':'*
     * Return the length of a previous month of the Gregorian calendar.
     * @param y the extended year
     * @param m the 0-based month number
     * @return the number of days in the month previous to the given month
     ','line_number':152,'multiline':True]['text':'*
     * Convert a year, month, and day-of-month, given in the proleptic
     * Gregorian calendar, to 1970 epoch days.
     * @param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
     * @param month 0-based month, with 0==Jan
     * @param dom 1-based day of month
     * @return the day number, with day 0 == Jan 1 1970
     ','line_number':160,'multiline':True]['text':'*
     * Convert a 1970-epoch day number to proleptic Gregorian year,
     * month, day-of-month, and day-of-week.
     * @param day 1970-epoch day (integral value)
     * @param year output parameter to receive year
     * @param month output parameter to receive month (0-based, 0==Jan)
     * @param dom output parameter to receive day-of-month (1-based)
     * @param dow output parameter to receive day-of-week (1-based, 1==Sun)
     * @param doy output parameter to receive day-of-year (1-based)
     ','line_number':170,'multiline':True]['text':'*
     * Convert a 1970-epoch day number to proleptic Gregorian year,
     * month, day-of-month, and day-of-week.
     * @param day 1970-epoch day (integral value)
     * @param year output parameter to receive year
     * @param month output parameter to receive month (0-based, 0==Jan)
     * @param dom output parameter to receive day-of-month (1-based)
     * @param dow output parameter to receive day-of-week (1-based, 1==Sun)
     ','line_number':183,'multiline':True]['text':'*
     * Convert a 1970-epoch milliseconds to proleptic Gregorian year,
     * month, day-of-month, and day-of-week, day of year and millis-in-day.
     * @param time 1970-epoch milliseconds
     * @param year output parameter to receive year
     * @param month output parameter to receive month (0-based, 0==Jan)
     * @param dom output parameter to receive day-of-month (1-based)
     * @param dow output parameter to receive day-of-week (1-based, 1==Sun)
     * @param doy output parameter to receive day-of-year (1-based)
     * @param mid output parameter to recieve millis-in-day
     ','line_number':195,'multiline':True]['text':'*
     * Return the day of week on the 1970-epoch day
     * @param day the 1970-epoch day (integral value)
     * @return the day of week
     ','line_number':209,'multiline':True]['text':'*
     * Returns the ordinal number for the specified day of week within the month.
     * The valid return value is 1, 2, 3, 4 or -1.
     * @param year Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.
     * @param month 0-based month, with 0==Jan
     * @param dom 1-based day of month
     * @return The ordinal number for the specified day of week within the month
     ','line_number':216,'multiline':True]['text':'*
     * Converts Julian day to time as milliseconds.
     * @param julian the given Julian day number.
     * @return time as milliseconds.
     * @internal
     ','line_number':226,'multiline':True]['text':'*
     * Converts time as milliseconds to Julian day.
     * @param millis the given milliseconds.
     * @return the Julian day number.
     * @internal
     ','line_number':234,'multiline':True]['text':'* 
     * Calculates the Gregorian day shift value for an extended year.
     * @param eyear Extended year 
     * @returns number of days to ADD to Julian in order to convert from J->G
     ','line_number':242,'multiline':True]['text':' year&0x3 == year%4','line_number':259,'multiline':False]['text':'*
 * This utility class provides convenient access to the data needed for a calendar. 
 * @internal ICU 3.0
 ','line_number':294,'multiline':True]['text':'*
     * Construct a CalendarData from the given locale.
     * @param loc locale to use. The 'calendar' keyword will be ignored.
     * @param type calendar type. NULL indicates the gregorian calendar. 
     * No default lookup is done.
     * @param status error code
     ','line_number':300,'multiline':True]['text':'*
     * Load data for calendar. Note, this object owns the resources, do NOT call ures_close()!
     * The ResourceBundle C++ API should NOT be used because it is too slow for a low level API.
     *
     * @param key Resource key to data
     * @param status Error Status
     * @internal
     ','line_number':309,'multiline':True]['text':'*
     * Load data for calendar. Note, this object owns the resources, do NOT call ures_close()!
     * There is an implicit key of 'format'
     * data is located in:   "calendar/key/format/subKey"
     * for example,  calendar/dayNames/format/abbreviated
     * The ResourceBundle C++ API should NOT be used because it is too slow for a low level API.
     *
     * @param key Resource key to data
     * @param subKey Resource key to data
     * @param status Error Status
     * @internal
     ','line_number':319,'multiline':True]['text':'*
     * Load data for calendar. Note, this object owns the resources, do NOT call ures_close()!
     * data is located in:   "calendar/key/contextKey/subKey"
     * for example,  calendar/dayNames/standalone/narrow
     * The ResourceBundle C++ API should NOT be used because it is too slow for a low level API.
     *
     * @param key Resource key to data
     * @param contextKey Resource key to data
     * @param subKey Resource key to data
     * @param status Error Status
     * @internal
     ','line_number':333,'multiline':True]['text':' Not implemented.','line_number':356,'multiline':False]['text':' !UCONFIG_NO_FORMATTING','line_number':361,'multiline':False]['text':' GREGOIMP_H','line_number':362,'multiline':False]['text':'eof','line_number':364,'multiline':False]