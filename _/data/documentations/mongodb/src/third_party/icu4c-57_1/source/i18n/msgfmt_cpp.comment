['text':'*******************************************************************
 * COPYRIGHT:
 * Copyright (c) 1997-2015, International Business Machines Corporation and
 * others. All Rights Reserved.
 ********************************************************************
 *
 * File MSGFMT.CPP
 *
 * Modification History:
 *
 *   Date        Name        Description
 *   02/19/97    aliu        Converted from java.
 *   03/20/97    helena      Finished first cut of implementation.
 *   04/10/97    aliu        Made to work on AIX.  Added stoi to replace wtoi.
 *   06/11/97    helena      Fixed addPattern to take the pattern correctly.
 *   06/17/97    helena      Fixed the getPattern to return the correct pattern.
 *   07/09/97    helena      Made ParsePosition into a class.
 *   02/22/99    stephen     Removed character literals for EBCDIC safety
 *   11/01/09    kirtig      Added SelectFormat
 *******************************************************************','line_number':1,'multiline':True]['text':' *****************************************************************************','line_number':51,'multiline':False]['text':' class MessageFormat','line_number':52,'multiline':False]['text':' *****************************************************************************','line_number':53,'multiline':False]['text':'---------------------------------------','line_number':60,'multiline':False]['text':' static data','line_number':61,'multiline':False]['text':' "number" ','line_number':64,'multiline':True]['text':' "date" ','line_number':67,'multiline':True]['text':' "time" ','line_number':70,'multiline':True]['text':' "spellout" ','line_number':73,'multiline':True]['text':' "ordinal" ','line_number':76,'multiline':True]['text':' "duration" ','line_number':79,'multiline':True]['text':' MessageFormat Type List  Number, Date, Time or Choice','line_number':82,'multiline':False]['text':' empty string, used for default so that null can mark end of list ','line_number':94,'multiline':True]['text':' "currency" ','line_number':97,'multiline':True]['text':' "percent" ','line_number':100,'multiline':True]['text':' "integer" ','line_number':103,'multiline':True]['text':' NumberFormat modifier list, default, currency, percent or integer','line_number':106,'multiline':False]['text':' "short" ','line_number':116,'multiline':True]['text':' "medium" ','line_number':119,'multiline':True]['text':' "long" ','line_number':122,'multiline':True]['text':' "full" ','line_number':125,'multiline':True]['text':' DateFormat modifier list, default, short, medium, long or full','line_number':128,'multiline':False]['text':' "null"','line_number':149,'multiline':False]['text':' "other"','line_number':153,'multiline':False]['text':' -------------------------------------','line_number':166,'multiline':False]['text':'--------------------------------------------------------------------','line_number':170,'multiline':False]['text':'*
 * Convert an integer value to a string and append the result to
 * the given UnicodeString.
 ','line_number':172,'multiline':True]['text':' 10 == radix','line_number':178,'multiline':False]['text':' AppendableWrapper: encapsulates the result of formatting, keeping track','line_number':184,'multiline':False]['text':' of the string and its length.','line_number':185,'multiline':False]['text':' -------------------------------------','line_number':227,'multiline':False]['text':' Creates a MessageFormat instance based on the pattern.','line_number':228,'multiline':False]['text':' Uses the default locale','line_number':232,'multiline':False]['text':' This will take care of creating the hash tables (since they are NULL).','line_number':314,'multiline':False]['text':'--------------------------------------------------------------------','line_number':333,'multiline':False]['text':' Variable-size array management','line_number':334,'multiline':False]['text':'*
 * Allocate argTypes[] to at least the given capacity and return
 * TRUE if successful.  If not, leave argTypes[] unchanged.
 *
 * If argTypes is NULL, allocate it.  If it is not NULL, enlarge it
 * if necessary to be at least as large as specified.
 ','line_number':336,'multiline':True]['text':' -------------------------------------','line_number':366,'multiline':False]['text':' assignment operator','line_number':367,'multiline':False]['text':' Calls the super class for assignment first.','line_number':373,'multiline':False]['text':' Check class ID before checking MessageFormat members','line_number':396,'multiline':False]['text':' Compare hashtables.','line_number':403,'multiline':False]['text':' -------------------------------------','line_number':433,'multiline':False]['text':' Creates a copy of this MessageFormat, the caller owns the copy.','line_number':434,'multiline':False]['text':' -------------------------------------','line_number':442,'multiline':False]['text':' Sets the locale of this MessageFormat object to theLocale.','line_number':443,'multiline':False]['text':' -------------------------------------','line_number':460,'multiline':False]['text':' Gets the locale of this MessageFormat object.','line_number':461,'multiline':False]['text':' -------------------------------------','line_number':478,'multiline':False]['text':' Applies the new pattern and returns an error if the pattern','line_number':479,'multiline':False]['text':' is not correct.','line_number':480,'multiline':False]['text':' -------------------------------------','line_number':518,'multiline':False]['text':' Converts this MessageFormat instance to a pattern.','line_number':519,'multiline':False]['text':' ARG_NUMBER','line_number':574,'multiline':False]['text':' Sets a custom formatter for a MessagePattern ARG_START part index.','line_number':577,'multiline':False]['text':' "Custom" formatters are provided by the user via setFormat() or similar APIs.','line_number':578,'multiline':False]['text':' Not cached, or a DummyFormat representing setFormat(NULL).','line_number':598,'multiline':False]['text':' -------------------------------------','line_number':603,'multiline':False]['text':' Adopts the new formats array and updates the array count.','line_number':604,'multiline':False]['text':' This MessageFormat instance owns the new formats.','line_number':605,'multiline':False]['text':' Throw away any cached formatters.','line_number':612,'multiline':False]['text':' Delete those that didn't get used (if any).','line_number':628,'multiline':False]['text':' -------------------------------------','line_number':635,'multiline':False]['text':' Sets the new formats array and updates the array count.','line_number':636,'multiline':False]['text':' This MessageFormat instance maks a copy of the new formats.','line_number':637,'multiline':False]['text':' Throw away any cached formatters.','line_number':645,'multiline':False]['text':' -------------------------------------','line_number':672,'multiline':False]['text':' Adopt a single format by format number.','line_number':673,'multiline':False]['text':' Do nothing if the format number is not less than the array count.','line_number':674,'multiline':False]['text':' -------------------------------------','line_number':692,'multiline':False]['text':' Adopt a single format by format name.','line_number':693,'multiline':False]['text':' Do nothing if there is no match of formatName.','line_number':694,'multiline':False]['text':' -------------------------------------','line_number':729,'multiline':False]['text':' Set a single format.','line_number':730,'multiline':False]['text':' Do nothing if the variable is not less than the array count.','line_number':731,'multiline':False]['text':' -------------------------------------','line_number':752,'multiline':False]['text':' Get a single format by format name.','line_number':753,'multiline':False]['text':' Do nothing if the variable is not less than the array count.','line_number':754,'multiline':False]['text':' -------------------------------------','line_number':772,'multiline':False]['text':' Set a single format by format name','line_number':773,'multiline':False]['text':' Do nothing if the variable is not less than the array count.','line_number':774,'multiline':False]['text':' -------------------------------------','line_number':800,'multiline':False]['text':' Gets the format array.','line_number':801,'multiline':False]['text':' This old API returns an array (which we hold) of Format*','line_number':805,'multiline':False]['text':' pointers.  The array is valid up to the next call to any','line_number':806,'multiline':False]['text':' method on this object.  We construct and resize an array','line_number':807,'multiline':False]['text':' on demand that contains aliases to the subformats[i].format','line_number':808,'multiline':False]['text':' pointers.','line_number':809,'multiline':False]['text':' -------------------------------------','line_number':864,'multiline':False]['text':' Formats the source Formattable array and copy into the result buffer.','line_number':865,'multiline':False]['text':' Ignore the FieldPosition result for error checking.','line_number':866,'multiline':False]['text':' -------------------------------------','line_number':878,'multiline':False]['text':' Internally creates a MessageFormat instance based on the','line_number':879,'multiline':False]['text':' pattern and formats the arguments Formattable array and','line_number':880,'multiline':False]['text':' copy into the appendTo buffer.','line_number':881,'multiline':False]['text':' -------------------------------------','line_number':894,'multiline':False]['text':' Formats the source Formattable object and copy into the','line_number':895,'multiline':False]['text':' appendTo buffer.  The Formattable object must be an array','line_number':896,'multiline':False]['text':' of Formattable instances, returns error otherwise.','line_number':897,'multiline':False]['text':' Does linear search to find the match for an ArgName.','line_number':925,'multiline':False]['text':'*
 * Mutable input/output values for the PluralSelectorProvider.
 * Separate so that it is possible to make MessageFormat Freezable.
 ','line_number':957,'multiline':True]['text':' number needs to be set even when select() is not called.','line_number':967,'multiline':False]['text':' Keep it as a Number/Formattable:','line_number':968,'multiline':False]['text':' For format() methods, and to preserve information (e.g., BigDecimal).','line_number':969,'multiline':False]['text':' Input values for plural selection with decimals.','line_number':977,'multiline':False]['text':'* argument number - plural offset ','line_number':980,'multiline':True]['text':' Output values for plural selection with decimals.','line_number':983,'multiline':False]['text':'* -1 if REPLACE_NUMBER, 0 arg not found, >0 ARG_START index ','line_number':984,'multiline':True]['text':'* formatted argument number - plural offset ','line_number':987,'multiline':True]['text':'* TRUE if number-offset was formatted with the stock number formatter ','line_number':989,'multiline':True]['text':' namespace','line_number':993,'multiline':False]['text':' if argumentNames is NULL, this means arguments is a numeric array.','line_number':995,'multiline':False]['text':' arguments can not be NULL.','line_number':996,'multiline':False]['text':' We use const void *plNumber rather than const PluralSelectorContext *pluralNumber','line_number':997,'multiline':False]['text':' so that we need not declare the PluralSelectorContext in the public header file.','line_number':998,'multiline':False]['text':' number-offset was already formatted.','line_number':1025,'multiline':False]['text':' ARG_NUMBER','line_number':1044,'multiline':False]['text':' The number was already formatted with this formatter.','line_number':1070,'multiline':False]['text':' Do not use the formatted (number-offset) string for a named argument','line_number':1074,'multiline':False]['text':' that formats the number without subtracting the offset.','line_number':1075,'multiline':False]['text':' Handles all ArgType.SIMPLE, and formatters from setFormat() and its siblings.','line_number':1079,'multiline':False]['text':' We only handle nested formats here if they were provided via','line_number':1083,'multiline':False]['text':' setFormat() or its siblings. Otherwise they are not cached and instead','line_number':1084,'multiline':False]['text':' handled below according to argType.','line_number':1085,'multiline':False]['text':' We arrive here if getCachedFormatter returned NULL, but there was actually an element in the hash table.','line_number':1100,'multiline':False]['text':' This can only happen if the hash table contained a DummyFormat, so the if statement above is a check','line_number':1101,'multiline':False]['text':' for the hash table containind DummyFormat.','line_number':1102,'multiline':False]['text':' We must use the Formattable::getDouble() variant with the UErrorCode parameter','line_number':1117,'multiline':False]['text':' because only this one converts non-double numeric types to double.','line_number':1118,'multiline':False]['text':' We must use the Formattable::getDouble() variant with the UErrorCode parameter','line_number':1130,'multiline':False]['text':' because only this one converts non-double numeric types to double.','line_number':1131,'multiline':False]['text':' This should never happen.','line_number':1143,'multiline':False]['text':' JDK compatibility mode: (see JDK MessageFormat.format() API docs)','line_number':1170,'multiline':False]['text':' - remove SKIP_SYNTAX; that is, remove half of the apostrophes','line_number':1171,'multiline':False]['text':' - if the result string contains an open curly brace '{' then','line_number':1172,'multiline':False]['text':'   instantiate a temporary MessageFormat object and format again;','line_number':1173,'multiline':False]['text':'   otherwise just append the result string','line_number':1174,'multiline':False]['text':' number-offset was already formatted.','line_number':1191,'multiline':False]['text':' gcc 3.3.3 fails with "UnicodeString()" as the first parameter.','line_number':1209,'multiline':False]['text':' Unexpected Part "part" in parsed message.','line_number':1231,'multiline':False]['text':'dest','line_number':1238,'multiline':True]['text':'prevLength','line_number':1238,'multiline':True]['text':'fp','line_number':1239,'multiline':True]['text':'argId','line_number':1239,'multiline':True]['text':' Unlike in Java, there are no field attributes defined for MessageFormat. Do nothing.','line_number':1240,'multiline':False]['text':'
      if (fp != NULL && Field.ARGUMENT.equals(fp.getFieldAttribute())) {
          fp->setBeginIndex(prevLength);
          fp->setEndIndex(dest.get_length());
          return NULL;
      }
      return fp;
    ','line_number':1242,'multiline':True]['text':' Iterate over (ARG_SELECTOR [ARG_INT|ARG_DOUBLE] message) tuples','line_number':1259,'multiline':False]['text':' until ARG_LIMIT or end of plural-only pattern.','line_number':1260,'multiline':False]['text':' part is an ARG_SELECTOR followed by an optional explicit value, and then a message','line_number':1269,'multiline':False]['text':' skip the numeric-value part of "=1" etc.','line_number':1274,'multiline':False]['text':' ARG_NUMBER or ARG_NAME','line_number':1295,'multiline':False]['text':' Deep copy pointer fields.','line_number':1306,'multiline':False]['text':' We need not copy the formatAliases because they are re-filled','line_number':1307,'multiline':False]['text':' in each getFormats() call.','line_number':1308,'multiline':False]['text':' The defaultNumberFormat, defaultDateFormat and pluralProvider.rules','line_number':1309,'multiline':False]['text':' also get created on demand.','line_number':1310,'multiline':False]['text':' parse() does not work with named arguments.','line_number':1373,'multiline':False]['text':' Make sure the literal string matches.','line_number':1390,'multiline':False]['text':' leave index as is to signal error','line_number':1397,'multiline':False]['text':' Things went well! Done.','line_number':1400,'multiline':False]['text':' We do not support parsing Plural formats. (No REPLACE_NUMBER here.)','line_number':1408,'multiline':False]['text':' Unexpected Part "part" in parsed message.','line_number':1409,'multiline':False]['text':' ARG_NUMBER','line_number':1415,'multiline':False]['text':' Just parse using the formatter.','line_number':1422,'multiline':False]['text':' leave index as is to signal error','line_number':1427,'multiline':False]['text':' We arrive here if getCachedFormatter returned NULL, but there was actually an element in the hash table.','line_number':1433,'multiline':False]['text':' This can only happen if the hash table contained a DummyFormat, so the if statement above is a check','line_number':1434,'multiline':False]['text':' for the hash table containind DummyFormat.','line_number':1435,'multiline':False]['text':' Match as a string.','line_number':1437,'multiline':False]['text':' if at end, use longest possible match','line_number':1438,'multiline':False]['text':' otherwise uses first match to intervening string','line_number':1439,'multiline':False]['text':' does NOT recursively try all possibilities','line_number':1440,'multiline':False]['text':' leave index as is to signal error','line_number':1450,'multiline':False]['text':' leave index as is to signal error','line_number':1468,'multiline':False]['text':' Parsing not supported.','line_number':1474,'multiline':False]['text':' This should never happen.','line_number':1478,'multiline':False]['text':' -------------------------------------','line_number':1489,'multiline':False]['text':' Parses the source pattern and returns the Formattable objects array,','line_number':1490,'multiline':False]['text':' the array count and the ending parse position.  The caller of this method','line_number':1491,'multiline':False]['text':' owns the array.','line_number':1492,'multiline':False]['text':' -------------------------------------','line_number':1502,'multiline':False]['text':' Parses the source string and returns the array of','line_number':1503,'multiline':False]['text':' Formattable objects and the array count.  The caller','line_number':1504,'multiline':False]['text':' owns the returned array.','line_number':1505,'multiline':False]['text':' Calls the actual implementation method and starts','line_number':1517,'multiline':False]['text':' from zero offset of the source text.','line_number':1518,'multiline':False]['text':' -------------------------------------','line_number':1528,'multiline':False]['text':' Parses the source text and copy into the result buffer.','line_number':1529,'multiline':False]['text':' space for null termination, convenience','line_number':1548,'multiline':False]['text':' -------------------------------------','line_number':1563,'multiline':False]['text':' ignore unrecognized default rule set','line_number':1570,'multiline':False]['text':' The last two "parts" can at most be ARG_LIMIT and MSG_LIMIT','line_number':1588,'multiline':False]['text':' which we need not examine.','line_number':1589,'multiline':False]['text':' We also need not look at the first two "parts"','line_number':1592,'multiline':False]['text':' (at most MSG_START and ARG_START) in this loop.','line_number':1593,'multiline':False]['text':' We determine the argTypeCount first so that we can allocateArgTypes','line_number':1594,'multiline':False]['text':' so that the next loop can set argTypes[argNumber].','line_number':1595,'multiline':False]['text':' (This is for the C API which needs the argTypes to read its va_arg list.)','line_number':1596,'multiline':False]['text':' Set all argTypes to kObject, as a "none" value, for lack of any better value.','line_number':1609,'multiline':False]['text':' We never use kObject for real arguments.','line_number':1610,'multiline':False]['text':' We use it as "no argument yet" for the check for hasArgTypeConflicts.','line_number':1611,'multiline':False]['text':' This loop starts at part index 1 because we do need to examine','line_number':1617,'multiline':False]['text':' ARG_START parts. (But we can ignore the MSG_START.)','line_number':1618,'multiline':False]['text':' Should be unreachable.','line_number':1660,'multiline':False]['text':' number','line_number':1685,'multiline':False]['text':' default','line_number':1688,'multiline':False]['text':' currency','line_number':1691,'multiline':False]['text':' percent','line_number':1694,'multiline':False]['text':' integer','line_number':1697,'multiline':False]['text':' pattern','line_number':1701,'multiline':False]['text':' date','line_number':1713,'multiline':False]['text':' time','line_number':1714,'multiline':False]['text':' spellout','line_number':1733,'multiline':False]['text':' ordinal','line_number':1737,'multiline':False]['text':' duration','line_number':1741,'multiline':False]['text':'-------------------------------------','line_number':1755,'multiline':False]['text':' Finds the string, s, in the string array, list.','line_number':1756,'multiline':False]['text':' default','line_number':1761,'multiline':False]['text':' Trims the space characters and turns all characters','line_number':1767,'multiline':False]['text':' in s to lower case.','line_number':1768,'multiline':False]['text':'*
 * Convenience method that ought to be in NumberFormat
 ','line_number':1778,'multiline':True]['text':'*
 * Return the default number format.  Used to format a numeric
 * argument when subformats[i].format is NULL.  Returns NULL
 * on failure.
 *
 * Semantically const but may modify *this.
 ','line_number':1794,'multiline':True]['text':'*
 * Return the default date format.  Used to format a date
 * argument when subformats[i].format is NULL.  Returns NULL
 * on failure.
 *
 * Semantically const but may modify *this.
 ','line_number':1815,'multiline':True]['text':'status','line_number':1891,'multiline':True]['text':'status','line_number':1905,'multiline':True]['text':'status','line_number':1910,'multiline':True]['text':' Select a sub-message according to how the number is formatted,','line_number':1938,'multiline':False]['text':' which is specified in the selected sub-message.','line_number':1939,'multiline':False]['text':' We avoid this circle by looking at how','line_number':1940,'multiline':False]['text':' the number is formatted in the "other" sub-message','line_number':1941,'multiline':False]['text':' which must always be present and usually contains the number.','line_number':1942,'multiline':False]['text':' Message authors should be consistent across sub-messages.','line_number':1943,'multiline':False]['text':' argument number minus the offset','line_number':1955,'multiline':False]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':1978,'multiline':True]['text':'eof','line_number':1980,'multiline':False]