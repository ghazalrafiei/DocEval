['text':'
*******************************************************************************
* Copyright (C) 2003 - 2013, International Business Machines Corporation and  *
* others. All Rights Reserved.                                                *
*******************************************************************************
','line_number':1,'multiline':True]['text':'*
 * Implement the Ethiopic calendar system.
 * @internal
 ','line_number':20,'multiline':True]['text':'*
     * Calendar type - use Amete Alem era for all the time or not
     * @internal 
     ','line_number':27,'multiline':True]['text':'*
     * Useful constants for EthiopicCalendar.
     * @internal
     ','line_number':36,'multiline':True]['text':'* 
         * Constant for &#x1218;&#x1235;&#x12a8;&#x1228;&#x121d;, the 1st month of the Ethiopic year.
         ','line_number':41,'multiline':True]['text':'* 
         * Constant for &#x1325;&#x1245;&#x121d;&#x1275;, the 2nd month of the Ethiopic year.
         ','line_number':46,'multiline':True]['text':'* 
         * Constant for &#x1285;&#x12f3;&#x122d;, the 3rd month of the Ethiopic year. 
         ','line_number':51,'multiline':True]['text':'* 
         * Constant for &#x1273;&#x1285;&#x1223;&#x1225;, the 4th month of the Ethiopic year. 
         ','line_number':56,'multiline':True]['text':'* 
         * Constant for &#x1325;&#x122d;, the 5th month of the Ethiopic year. 
         ','line_number':61,'multiline':True]['text':'* 
         * Constant for &#x12e8;&#x12ab;&#x1272;&#x1275;, the 6th month of the Ethiopic year. 
         ','line_number':66,'multiline':True]['text':'* 
         * Constant for &#x1218;&#x130b;&#x1262;&#x1275;, the 7th month of the Ethiopic year. 
         ','line_number':71,'multiline':True]['text':'* 
         * Constant for &#x121a;&#x12eb;&#x12dd;&#x12eb;, the 8th month of the Ethiopic year. 
         ','line_number':76,'multiline':True]['text':'* 
         * Constant for &#x130d;&#x1295;&#x1266;&#x1275;, the 9th month of the Ethiopic year. 
         ','line_number':81,'multiline':True]['text':'* 
         * Constant for &#x1230;&#x1294;, the 10th month of the Ethiopic year. 
         ','line_number':86,'multiline':True]['text':'* 
         * Constant for &#x1210;&#x121d;&#x120c;, the 11th month of the Ethiopic year. 
         ','line_number':91,'multiline':True]['text':'* 
         * Constant for &#x1290;&#x1210;&#x1234;, the 12th month of the Ethiopic year. 
         ','line_number':96,'multiline':True]['text':'* 
         * Constant for &#x1333;&#x1309;&#x121c;&#x1295;, the 13th month of the Ethiopic year. 
         ','line_number':101,'multiline':True]['text':' Before the epoch','line_number':108,'multiline':False]['text':' After the epoch','line_number':109,'multiline':False]['text':'*
     * Constructs a EthiopicCalendar based on the current time in the default time zone
     * with the given locale.
     *
     * @param aLocale  The given locale.
     * @param success  Indicates the status of EthiopicCalendar object construction.
     *                 Returns U_ZERO_ERROR if constructed successfully.
     * @param type     Whether this Ethiopic calendar use Amete Mihrret (default) or
     *                 only use Amete Alem for all the time.
     * @internal
     ','line_number':112,'multiline':True]['text':'*
     * Copy Constructor
     * @internal
     ','line_number':125,'multiline':True]['text':'*
     * Destructor.
     * @internal
     ','line_number':131,'multiline':True]['text':'*
     * Create and return a polymorphic copy of this calendar.
     * @return    return a polymorphic copy of this calendar.
     * @internal
     ','line_number':137,'multiline':True]['text':'*
     * return the calendar type, "ethiopic"
     * @return calendar type
     * @internal
     ','line_number':144,'multiline':True]['text':'*
     * Set Alem or Mihret era.
     * @param onOff Set Amete Alem era if true, otherwise set Amete Mihret era.
     * @internal
     ','line_number':151,'multiline':True]['text':'*
     * Return true if this calendar is set to the Amete Alem era.
     * @return true if set to the Amete Alem era.
     * @internal
     ','line_number':158,'multiline':True]['text':'-------------------------------------------------------------------------','line_number':166,'multiline':False]['text':' Calendar framework','line_number':167,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':168,'multiline':False]['text':'*
     * Return the extended year defined by the current fields.
     * @internal
     ','line_number':170,'multiline':True]['text':'*
     * Compute fields from the JD
     * @internal
     ','line_number':176,'multiline':True]['text':'*
     * Calculate the limit for a specified type of limit and field
     * @internal
     ','line_number':182,'multiline':True]['text':'*
     * Returns the date of the start of the default century
     * @return start of century - in milliseconds since epoch, 1970
     * @internal
     ','line_number':188,'multiline':True]['text':'*
     * Returns the year in which the default century begins
     * @internal
     ','line_number':195,'multiline':True]['text':'*
     * Return the date offset from Julian
     * @internal
     ','line_number':201,'multiline':True]['text':'*
     * When eraType is AMETE_ALEM_ERA, then this calendar use only AMETE_ALEM
     * for the era. Otherwise (default), this calendar uses both AMETE_ALEM
     * and AMETE_MIHRET.
     *
     * EXTENDED_YEAR        AMETE_ALEM_ERA     AMETE_MIHRET_ERA
     *             0       Amete Alem 5500      Amete Alem 5500
     *             1        Amete Mihret 1      Amete Alem 5501
     ','line_number':208,'multiline':True]['text':'*
     * Override Calendar Returns a unique class ID POLYMORPHICALLY. Pure virtual
     * override. This method is to implement a simple version of RTTI, since not all C++
     * compilers support genuine RTTI. Polymorphic operator==() and clone() methods call
     * this method.
     *
     * @return   The class ID for this object. All objects of a given class have the
     *           same class ID. Objects of other classes have different class IDs.
     * @internal
     ','line_number':220,'multiline':True]['text':'*
     * Return the class ID for this class. This is useful only for comparing to a return
     * value from getDynamicClassID(). For example:
     *
     *      Base* polymorphic_pointer = createPolymorphicObject();
     *      if (polymorphic_pointer->getDynamicClassID() ==
     *          Derived::getStaticClassID()) ...
     *
     * @return   The class ID for all objects of this class.
     * @internal
     ','line_number':232,'multiline':True]['text':' We do not want to introduce this API in ICU4C.','line_number':246,'multiline':False]['text':' It was accidentally introduced in ICU4J as a public API.','line_number':247,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':250,'multiline':False]['text':' Calendar system Conversion methods...','line_number':251,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':252,'multiline':False]['text':'*
     * Convert an Ethiopic year, month, and day to a Julian day.
     *
     * @param year the extended year
     * @param month the month
     * @param day the day
     * @return Julian day
     * @internal
     ','line_number':254,'multiline':True]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':268,'multiline':True]['text':' ETHPCCAL_H ','line_number':269,'multiline':True]['text':'eof','line_number':270,'multiline':False]