['text':'
******************************************************************************
*
*   Copyright (C) 2008-2013, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*   file name:  uspoof_wsconf.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2009Jan05  (refactoring earlier files)
*   created by: Andy Heninger
*
*   Internal functions for compililing Whole Script confusable source data
*   into its binary (runtime) form.  The binary data format is described
*   in uspoof_impl.h
','line_number':1,'multiline':True]['text':' Regular expression for parsing a line from the Unicode file confusablesWholeScript.txt','line_number':42,'multiline':False]['text':' Example Lines:','line_number':43,'multiline':False]['text':'   006F          ; Latn; Deva; A #      (o)  LATIN SMALL LETTER O','line_number':44,'multiline':False]['text':'   0048..0049    ; Latn; Grek; A #  [2] (H..I)  LATIN CAPITAL LETTER H..LATIN CAPITAL LETTER I','line_number':45,'multiline':False]['text':'    |               |     |    |','line_number':46,'multiline':False]['text':'    |               |     |    |---- Which table, Any Case or Lower Case (A or L)','line_number':47,'multiline':False]['text':'    |               |     |----------Target script.   We need this.','line_number':48,'multiline':False]['text':'    |               |----------------Src script.  Should match the script of the source','line_number':49,'multiline':False]['text':'    |                                code points.  Beyond checking that, we don't keep it.','line_number':50,'multiline':False]['text':'    |--------------------------------Source code points or range.','line_number':51,'multiline':False]['text':'','line_number':52,'multiline':False]['text':' The expression will match _all_ lines, including erroneous lines.','line_number':53,'multiline':False]['text':' The result of the parse is returned via the contents of the (match) groups.','line_number':54,'multiline':False]['text':' Multi-line mode','line_number':56,'multiline':False]['text':' A blank or comment line.  Matches Group 1.','line_number':57,'multiline':False]['text':'   OR','line_number':58,'multiline':False]['text':' Code point range.  Groups 2 and 3.','line_number':59,'multiline':False]['text':' The source script.  Group 4.','line_number':60,'multiline':False]['text':' The target script.  Group 5.','line_number':61,'multiline':False]['text':' The table A or L.   Group 6 or 7','line_number':62,'multiline':False]['text':' Trailing commment','line_number':63,'multiline':False]['text':'   OR','line_number':64,'multiline':False]['text':' An error line.      Group 8.','line_number':65,'multiline':False]['text':'    Any line not matching the preceding','line_number':66,'multiline':False]['text':'    parts of the expression.will match','line_number':67,'multiline':False]['text':'    this, and thus be flagged as an error','line_number':68,'multiline':False]['text':' Extract a regular expression match group into a char * string.','line_number':71,'multiline':False]['text':'    The group must contain only invariant characters.','line_number':72,'multiline':False]['text':'    Used for script names','line_number':73,'multiline':False]['text':' ','line_number':74,'multiline':False]['text':' Aliasing constructor','line_number':85,'multiline':False]['text':'  Build the Whole Script Confusable data','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':'     TODO:  Reorganize.  Either get rid of the WSConfusableDataBuilder class,','line_number':95,'multiline':False]['text':'                         because everything is local to this one build function anyhow,','line_number':96,'multiline':False]['text':'                           OR','line_number':97,'multiline':False]['text':'                         break this function into more reasonably sized pieces, with','line_number':98,'multiline':False]['text':'                         state in WSConfusableDataBuilder.','line_number':99,'multiline':False]['text':'','line_number':100,'multiline':False]['text':' The scriptSets vector provides a mapping from TRIE values to the set of scripts.','line_number':123,'multiline':False]['text':'','line_number':124,'multiline':False]['text':' Reserved TRIE values:','line_number':125,'multiline':False]['text':'   0:  Code point has no whole script confusables.','line_number':126,'multiline':False]['text':'   1:  Code point is of script Common or Inherited.','line_number':127,'multiline':False]['text':'       These code points do not participate in whole script confusable detection.','line_number':128,'multiline':False]['text':'       (This is logically equivalent to saying that they contain confusables in','line_number':129,'multiline':False]['text':'        all scripts)','line_number':130,'multiline':False]['text':'','line_number':131,'multiline':False]['text':' Because Trie values are indexes into the ScriptSets vector, pre-fill','line_number':132,'multiline':False]['text':' vector positions 0 and 1 to avoid conflicts with the reserved values.','line_number':133,'multiline':False]['text':' Convert the user input data from UTF-8 to UChar (UTF-16)','line_number':143,'multiline':False]['text':' Zap any Byte Order Mark at the start of input.  Changing it to a space is benign','line_number':158,'multiline':False]['text':'   given the syntax of the input.','line_number':159,'multiline':False]['text':' Parse the input, one line per iteration of this loop.','line_number':164,'multiline':False]['text':' this was a blank or comment line.','line_number':169,'multiline':False]['text':' input file syntax error.','line_number':173,'multiline':False]['text':' Pick up the start and optional range end code points from the parsed line.','line_number':181,'multiline':False]['text':' Extract the two script names from the source line.  We need these in an 8 bit','line_number':190,'multiline':False]['text':'   default encoding (will be EBCDIC on IBM mainframes) in order to pass them on','line_number':191,'multiline':False]['text':'   to the ICU u_getPropertyValueEnum() function.  Ugh.','line_number':192,'multiline':False]['text':' select the table - (A) any case or (L) lower case only','line_number':209,'multiline':False]['text':' Build the set of scripts containing confusable characters for','line_number':215,'multiline':False]['text':'   the code point(s) specified in this input line.','line_number':216,'multiline':False]['text':' Sanity check that the script of the source code point is the same','line_number':217,'multiline':False]['text':'   as the source script indicated in the input file.  Failure of this check is','line_number':218,'multiline':False]['text':'   an error in the input file.','line_number':219,'multiline':False]['text':' Include the source script in the set (needed for Mixed Script Confusable detection).','line_number':220,'multiline':False]['text':'','line_number':221,'multiline':False]['text':' Eliminate duplicate script sets.  At this point we have a separate','line_number':262,'multiline':False]['text':' script set for every code point that had data in the input file.','line_number':263,'multiline':False]['text':'','line_number':264,'multiline':False]['text':' We eliminate underlying ScriptSet objects, not the BuildScriptSets that wrap them','line_number':265,'multiline':False]['text':'','line_number':266,'multiline':False]['text':' printf("Number of scriptSets: %d\n", scriptSets->size());','line_number':267,'multiline':False]['text':' This set was already identified as a duplicate.','line_number':274,'multiline':False]['text':'   It will not be allocated a position in the runtime array of ScriptSets.','line_number':275,'multiline':False]['text':' But this doesn't get all.  We need to fix the TRIE.','line_number':289,'multiline':False]['text':' printf("Number of distinct script sets: %d\n", rtScriptSetsCount);','line_number':292,'multiline':False]['text':' Update the Trie values to be reflect the run time script indexes (after duplicate merging).','line_number':297,'multiline':False]['text':'    (Trie Values 0 and 1 are reserved, and the corresponding slots in scriptSets','line_number':298,'multiline':False]['text':'     are unused, which is why the loop index starts at 2.)','line_number':299,'multiline':False]['text':' For code points with script==Common or script==Inherited,','line_number':309,'multiline':False]['text':'   Set the reserved value of 1 into both Tries.  These characters do not participate','line_number':310,'multiline':False]['text':'   in Whole Script Confusable detection; this reserved value is the means','line_number':311,'multiline':False]['text':'   by which they are detected.','line_number':312,'multiline':False]['text':' Serialize the data to the Spoof Detector','line_number':327,'multiline':False]['text':' printf("Any case Trie size: %d\n", size);','line_number':331,'multiline':False]['text':' printf("Lower case Trie size: %d\n", size);','line_number':344,'multiline':False]['text':' We have already copied this script set to the serialized data.','line_number':363,'multiline':False]['text':' Assignment of a ScriptSet just copies the bits.','line_number':367,'multiline':False]['text':' Open new utrie2s from the serialized data.  We don't want to keep the ones','line_number':372,'multiline':False]['text':'   we just built because we would then have two copies of the data, one internal to','line_number':373,'multiline':False]['text':'   the utries that we have already constructed, and one in the serialized data area.','line_number':374,'multiline':False]['text':'   An alternative would be to not pre-serialize the Trie data, but that makes the','line_number':375,'multiline':False]['text':'   spoof detector data different, depending on how the detector was constructed.','line_number':376,'multiline':False]['text':'   It's simpler to keep the data always the same.','line_number':377,'multiline':False]['text':'  !UCONFIG_NO_REGULAR_EXPRESSIONS ','line_number':435,'multiline':False]