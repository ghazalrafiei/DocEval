['text':'
 **********************************************************************
 *   Copyright (C) 1996-2016, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 **********************************************************************
 *
 * Provides functionality for mapping between
 * LCID and Posix IDs or ICU locale to codepage
 *
 * Note: All classes and code in this file are
 *       intended for internal use only.
 *
 * Methods of interest:
 *   unsigned long convertToLCID(const char*);
 *   const char* convertToPosix(unsigned long);
 *
 * Kathleen Wilson, 4/30/96
 *
 *  Date        Name        Description
 *  3/11/97     aliu        Fixed off-by-one bug in assignment operator. Added
 *                          setId() method and safety check against 
 *                          MAX_ID_LENGTH.
 * 04/23/99     stephen     Added C wrapper for convertToPosix.
 * 09/18/00     george      Removed the memory leaks.
 * 08/23/01     george      Convert to C
 ','line_number':1,'multiline':True]['text':'
 * TODO: It seems like we should widen this to
 * either U_PLATFORM_USES_ONLY_WIN32_API (includes MinGW)
 * or U_PLATFORM_HAS_WIN32_API (includes MinGW and Cygwin)
 * but those use gcc and won't have defined(_MSC_VER).
 * We might need to #include some Windows header and test for some version macro from there.
 * Or call some Windows function and see what it returns.
 ','line_number':33,'multiline':True]['text':'
 * Note:
 * The mapping from Win32 locale ID numbers to POSIX locale strings should
 * be the faster one.
 *
 * Many LCID values come from winnt.h
 * Some also come from http://www.microsoft.com/globaldev/reference/lcid-all.mspx
 ','line_number':49,'multiline':True]['text':'
////////////////////////////////////////////////
//
// Internal Classes for LCID <--> POSIX Mapping
//
/////////////////////////////////////////////////
','line_number':58,'multiline':True]['text':'
/////////////////////////////////////////////////
//
// Easy macros to make the LCID <--> POSIX Mapping
//
/////////////////////////////////////////////////
','line_number':79,'multiline':True]['text':'*
 * The standard one language/one country mapping for LCID.
 * The first element must be the language, and the following
 * elements are the language with the country.
 * @param hostID LCID in host format such as 0x044d
 * @param languageID posix ID of just the language such as 'de'
 * @param posixID posix ID of the language_TERRITORY such as 'de_CH'
 ','line_number':87,'multiline':True]['text':' parent locale ','line_number':97,'multiline':True]['text':'*
 * Define a subtable by ID
 * @param id the POSIX ID, either a language or language_TERRITORY
 ','line_number':101,'multiline':True]['text':'*
 * Create the map for the posixID. This macro supposes that the language string
 * name is the same as the global variable name, and that the first element
 * in the ILcidPosixElement is just the language.
 * @param _posixID the full POSIX ID for this entry.
 ','line_number':109,'multiline':True]['text':'
////////////////////////////////////////////
//
// Create the table of LCID to POSIX Mapping
// None of it should be dynamically created.
//
// Keep static locale variables inside the function so that
// it can be created properly during static init.
//
// Note: This table should be updated periodically. Check the National Lanaguage Support API Reference Website.
//       Microsoft is moving away from LCID in favor of locale name as of Vista.  This table needs to be
//       maintained for support of older Windows version.
//       Update: Windows 7 (091130)
//
// Note: Microsoft assign a different LCID if a locale has a sorting variant. POSIX IDs below may contain
//       @collation=XXX, but no other keywords are allowed (at least for now). When uprv_convertToLCID() is
//       called from uloc_getLCID(), keywords other than collation are already removed. If we really need
//       to support other keywords in this mapping data, we must update the implementation.
////////////////////////////////////////////
','line_number':118,'multiline':True]['text':' Cyrillic based ','line_number':168,'multiline':True]['text':' Cyrillic based ','line_number':169,'multiline':True]['text':' Latin based ','line_number':170,'multiline':True]['text':' Latin based ','line_number':171,'multiline':True]['text':' Latin based ','line_number':172,'multiline':True]['text':'ILCID_POSIX_SUBTABLE(ber) {
    {0x5f,   "ber"},
    {0x045f, "ber_Arab_DZ"},
    {0x045f, "ber_Arab"},
    {0x085f, "ber_Latn_DZ"},
    {0x085f, "ber_Latn"}
};','line_number':178,'multiline':True]['text':' Declared as cs_CZ to get around compiler errors on z/OS, which defines cs as a function ','line_number':223,'multiline':True]['text':'This is really de_DE_PHONEBOOK on Windows','line_number':236,'multiline':True]['text':'This is really de_DE_PHONEBOOK on Windows','line_number':237,'multiline':True]['text':' duplicate for roundtripping ','line_number':260,'multiline':True]['text':' Virgin Islands AKA Caribbean Islands (en_CB). ','line_number':261,'multiline':True]['text':' Alias for en_US. Leave last. ','line_number':265,'multiline':True]['text':' Alias for en_US. Leave last. ','line_number':266,'multiline':True]['text':' Alias for en_US. Leave last. ','line_number':267,'multiline':True]['text':' Alias for en_US. Leave last. ','line_number':268,'multiline':True]['text':' Alias for en_US. Leave last. ','line_number':269,'multiline':True]['text':' duplicate for roundtripping ','line_number':273,'multiline':True]['text':'Modern sort.','line_number':286,'multiline':True]['text':' ISO-639 doesn't distinguish between Persian and Dari.','line_number':307,'multiline':True]['text':' Persian/Farsi (Iran) ','line_number':310,'multiline':True]['text':' Persian/Dari (Afghanistan) ','line_number':311,'multiline':True]['text':' duplicate for roundtripping ','line_number':314,'multiline':True]['text':' Persian/Dari (Afghanistan) ','line_number':316,'multiline':True]['text':' Persian/Dari (Afghanistan) ','line_number':317,'multiline':True]['text':' Gaelic (Ireland) ','line_number':356,'multiline':True]['text':' Gaelic (Scotland) ','line_number':362,'multiline':True]['text':' This LCID is really four different locales.','line_number':382,'multiline':True]['text':' Bosnian, Bosnia and Herzegovina ','line_number':385,'multiline':True]['text':' Bosnian, Bosnia and Herzegovina ','line_number':386,'multiline':True]['text':' Bosnian, Bosnia and Herzegovina ','line_number':387,'multiline':True]['text':' Bosnian ','line_number':388,'multiline':True]['text':' Bosnian, Bosnia and Herzegovina ','line_number':389,'multiline':True]['text':' Bosnian, Bosnia and Herzegovina ','line_number':390,'multiline':True]['text':' Croatian in Bosnia ','line_number':391,'multiline':True]['text':' Croatian','line_number':392,'multiline':True]['text':' Serbo-Croatian in Bosnia ','line_number':395,'multiline':True]['text':' Serbo-Croatian','line_number':396,'multiline':True]['text':' It's 0x1a or 0x081a, pick one to make the test program happy. ','line_number':397,'multiline':True]['text':' Serbo-Croatian in Bosnia ','line_number':398,'multiline':True]['text':' Serbian','line_number':399,'multiline':True]['text':' It's 0x1a or 0x0c1a, pick one to make the test program happy. ','line_number':402,'multiline':True]['text':' In CLDR sr is sr_Cyrl. ','line_number':403,'multiline':True]['text':'Left in for compatibility','line_number':435,'multiline':True]['text':' We could add PK and CN too ','line_number':452,'multiline':True]['text':' Documentation doesn't mention script ','line_number':454,'multiline':True]['text':' Kyrgyz is spoken in Kyrgyzstan ','line_number':459,'multiline':True]['text':' TODO: Verify the country ','line_number':460,'multiline':True]['text':' Brunei Darussalam','line_number':485,'multiline':True]['text':' Malaysia','line_number':486,'multiline':True]['text':' India','line_number':494,'multiline':True]['text':' Nepal','line_number':495,'multiline':True]['text':' The "no" locale split into nb and nn.  By default in ICU, "no" is nb.','line_number':504,'multiline':True]['text':' really nb_NO ','line_number':506,'multiline':True]['text':' really nb ','line_number':507,'multiline':True]['text':' really nb_NO. Keep first in the 414 list. ','line_number':508,'multiline':True]['text':' really nb_NO ','line_number':509,'multiline':True]['text':' really nn_NO. Keep first in the 814 list.  ','line_number':510,'multiline':True]['text':' It's 0x14 or 0x814, pick one to make the test program happy. ','line_number':511,'multiline':True]['text':' really nn_NO ','line_number':512,'multiline':True]['text':' TODO: Verify the ISO-639 code ','line_number':515,'multiline':True]['text':' TODO: Verify the country ','line_number':518,'multiline':True]['text':' Declared as or_IN to get around compiler errors','line_number':524,'multiline':True]['text':'
        "quc_Latn_GT" is an exceptional case. Language ID of "quc"
        is 0x93, but LCID of "quc_Latn_GT" is 0x486, which should be
        under the group of "qut". "qut" is a retired ISO 639-3 language
        code for West Central Quiche, and merged to "quc".
        It looks Windows previously reserved "qut" for K'iche', but,
        decided to use "quc" when adding a locale for K'iche' (Guatemala).

        This data structure used here assumes language ID bits in
        LCID is unique for alphabetic language code. But this is not true
        for "quc_Latn_GT". If we don't have the data below, LCID look up
        by alphabetic locale ID (POSIX) will fail. The same entry is found
        under "qut" below, which is required for reverse look up.
    ','line_number':561,'multiline':True]['text':'
        See the note in "quc" above.
    ','line_number':581,'multiline':True]['text':' TODO: Verify the country ','line_number':637,'multiline':True]['text':' Cyrillic based by default ','line_number':663,'multiline':True]['text':' Cyrillic based ','line_number':715,'multiline':True]['text':' Cyrillic based ','line_number':716,'multiline':True]['text':' Cyrillic based ','line_number':717,'multiline':True]['text':' Latin based ','line_number':718,'multiline':True]['text':' Latin based ','line_number':719,'multiline':True]['text':' TODO: Verify the country ','line_number':722,'multiline':True]['text':' Bopomofo order ','line_number':748,'multiline':True]['text':' Bopomofo order ','line_number':749,'multiline':True]['text':' This must be static and grouped by LCID. ','line_number':761,'multiline':True]['text':'  af  Afrikaans                 0x36 ','line_number':763,'multiline':True]['text':'  am  Amharic                   0x5e ','line_number':764,'multiline':True]['text':'  ar  Arabic                    0x01 ','line_number':765,'multiline':True]['text':'  arn Araucanian/Mapudungun     0x7a ','line_number':766,'multiline':True]['text':'  as  Assamese                  0x4d ','line_number':767,'multiline':True]['text':'  az  Azerbaijani               0x2c ','line_number':768,'multiline':True]['text':'  ba  Bashkir                   0x6d ','line_number':769,'multiline':True]['text':'  be  Belarusian                0x23 ','line_number':770,'multiline':True]['text':'    ILCID_POSIX_MAP(ber),     ber Berber/Tamazight          0x5f ','line_number':771,'multiline':True]['text':'  bg  Bulgarian                 0x02 ','line_number':772,'multiline':True]['text':'  bin Edo                       0x66 ','line_number':773,'multiline':True]['text':'  bn  Bengali; Bangla           0x45 ','line_number':774,'multiline':True]['text':'  bo  Tibetan                   0x51 ','line_number':775,'multiline':True]['text':'  br  Breton                    0x7e ','line_number':776,'multiline':True]['text':'  ca  Catalan                   0x03 ','line_number':777,'multiline':True]['text':'  chr Cherokee                  0x5c ','line_number':778,'multiline':True]['text':'  ckb Sorani (Central Kurdish)  0x92 ','line_number':779,'multiline':True]['text':'  co  Corsican                  0x83 ','line_number':780,'multiline':True]['text':'  cs  Czech                     0x05 ','line_number':781,'multiline':True]['text':'  cy  Welsh                     0x52 ','line_number':782,'multiline':True]['text':'  da  Danish                    0x06 ','line_number':783,'multiline':True]['text':'  de  German                    0x07 ','line_number':784,'multiline':True]['text':'  dv  Divehi                    0x65 ','line_number':785,'multiline':True]['text':'  el  Greek                     0x08 ','line_number':786,'multiline':True]['text':'  en  English                   0x09 ','line_number':787,'multiline':True]['text':'    invariant             0x7f ','line_number':788,'multiline':True]['text':'  es  Spanish                   0x0a ','line_number':789,'multiline':True]['text':'  et  Estonian                  0x25 ','line_number':790,'multiline':True]['text':'  eu  Basque                    0x2d ','line_number':791,'multiline':True]['text':'  fa  Persian/Farsi             0x29 ','line_number':792,'multiline':True]['text':'  fa  Persian/Dari              0x8c ','line_number':793,'multiline':True]['text':'  ff  Fula                      0x67 ','line_number':794,'multiline':True]['text':'  fi  Finnish                   0x0b ','line_number':795,'multiline':True]['text':'  fil Filipino                  0x64 ','line_number':796,'multiline':True]['text':'  fo  Faroese                   0x38 ','line_number':797,'multiline':True]['text':'  fr  French                    0x0c ','line_number':798,'multiline':True]['text':'  fuv Fulfulde - Nigeria        0x67 ','line_number':799,'multiline':True]['text':'  fy  Frisian                   0x62 ','line_number':800,'multiline':True]['text':'  *   Gaelic (Ireland,Scotland) 0x3c ','line_number':801,'multiline':True]['text':'  gd  Gaelic (United Kingdom)   0x91 ','line_number':802,'multiline':True]['text':'  gl  Galician                  0x56 ','line_number':803,'multiline':True]['text':'  gn  Guarani                   0x74 ','line_number':804,'multiline':True]['text':'  gsw Alemanic/Alsatian/Swiss German 0x84 ','line_number':805,'multiline':True]['text':'  gu  Gujarati                  0x47 ','line_number':806,'multiline':True]['text':'  ha  Hausa                     0x68 ','line_number':807,'multiline':True]['text':'  haw Hawaiian                  0x75 ','line_number':808,'multiline':True]['text':'  he  Hebrew (formerly iw)      0x0d ','line_number':809,'multiline':True]['text':'  hi  Hindi                     0x39 ','line_number':810,'multiline':True]['text':'  *   Croatian and others       0x1a ','line_number':811,'multiline':True]['text':'  hsb Upper Sorbian             0x2e ','line_number':812,'multiline':True]['text':'  hu  Hungarian                 0x0e ','line_number':813,'multiline':True]['text':'  hy  Armenian                  0x2b ','line_number':814,'multiline':True]['text':'  ibb Ibibio - Nigeria          0x69 ','line_number':815,'multiline':True]['text':'  id  Indonesian (formerly in)  0x21 ','line_number':816,'multiline':True]['text':'  ig  Igbo                      0x70 ','line_number':817,'multiline':True]['text':'  ii  Sichuan Yi                0x78 ','line_number':818,'multiline':True]['text':'  is  Icelandic                 0x0f ','line_number':819,'multiline':True]['text':'  it  Italian                   0x10 ','line_number':820,'multiline':True]['text':'  iu  Inuktitut                 0x5d ','line_number':821,'multiline':True]['text':'  iw  Hebrew                    0x0d ','line_number':822,'multiline':True]['text':'  ja  Japanese                  0x11 ','line_number':823,'multiline':True]['text':'  ka  Georgian                  0x37 ','line_number':824,'multiline':True]['text':'  kk  Kazakh                    0x3f ','line_number':825,'multiline':True]['text':'  kl  Kalaallisut               0x6f ','line_number':826,'multiline':True]['text':'  km  Khmer                     0x53 ','line_number':827,'multiline':True]['text':'  kn  Kannada                   0x4b ','line_number':828,'multiline':True]['text':'  ko  Korean                    0x12 ','line_number':829,'multiline':True]['text':'  kok Konkani                   0x57 ','line_number':830,'multiline':True]['text':'  kr  Kanuri                    0x71 ','line_number':831,'multiline':True]['text':'  ks  Kashmiri                  0x60 ','line_number':832,'multiline':True]['text':'  ky  Kyrgyz                    0x40 ','line_number':833,'multiline':True]['text':'  lb  Luxembourgish             0x6e ','line_number':834,'multiline':True]['text':'  la  Latin                     0x76 ','line_number':835,'multiline':True]['text':'  lo  Lao                       0x54 ','line_number':836,'multiline':True]['text':'  lt  Lithuanian                0x27 ','line_number':837,'multiline':True]['text':'  lv  Latvian, Lettish          0x26 ','line_number':838,'multiline':True]['text':'  mi  Maori                     0x81 ','line_number':839,'multiline':True]['text':'  mk  Macedonian                0x2f ','line_number':840,'multiline':True]['text':'  ml  Malayalam                 0x4c ','line_number':841,'multiline':True]['text':'  mn  Mongolian                 0x50 ','line_number':842,'multiline':True]['text':'  mni Manipuri                  0x58 ','line_number':843,'multiline':True]['text':'  moh Mohawk                    0x7c ','line_number':844,'multiline':True]['text':'  mr  Marathi                   0x4e ','line_number':845,'multiline':True]['text':'  ms  Malay                     0x3e ','line_number':846,'multiline':True]['text':'  mt  Maltese                   0x3a ','line_number':847,'multiline':True]['text':'  my  Burmese                   0x55 ','line_number':848,'multiline':True]['text':'    ILCID_POSIX_MAP(nb),    //  no  Norwegian                 0x14 ','line_number':849,'multiline':True]['text':'  ne  Nepali                    0x61 ','line_number':850,'multiline':True]['text':'  nl  Dutch                     0x13 ','line_number':851,'multiline':True]['text':'    ILCID_POSIX_MAP(nn),    //  no  Norwegian                 0x14 ','line_number':852,'multiline':True]['text':'  *   Norwegian                 0x14 ','line_number':853,'multiline':True]['text':'  nso Sotho, Northern (Sepedi dialect) 0x6c ','line_number':854,'multiline':True]['text':'  oc  Occitan                   0x82 ','line_number':855,'multiline':True]['text':'  om  Oromo                     0x72 ','line_number':856,'multiline':True]['text':'  or  Oriya                     0x48 ','line_number':857,'multiline':True]['text':'  pa  Punjabi                   0x46 ','line_number':858,'multiline':True]['text':'  pap Papiamentu                0x79 ','line_number':859,'multiline':True]['text':'  pl  Polish                    0x15 ','line_number':860,'multiline':True]['text':'  ps  Pashto                    0x63 ','line_number':861,'multiline':True]['text':'  pt  Portuguese                0x16 ','line_number':862,'multiline':True]['text':'  qu  Quechua                   0x6B ','line_number':863,'multiline':True]['text':'  quc K'iche                    0x93 ','line_number':864,'multiline':True]['text':'  qut K'iche                    0x86 ','line_number':865,'multiline':True]['text':'  rm  Raeto-Romance/Romansh     0x17 ','line_number':866,'multiline':True]['text':'  ro  Romanian                  0x18 ','line_number':867,'multiline':True]['text':'  root                          0x00 ','line_number':868,'multiline':True]['text':'  ru  Russian                   0x19 ','line_number':869,'multiline':True]['text':'  rw  Kinyarwanda               0x87 ','line_number':870,'multiline':True]['text':'  sa  Sanskrit                  0x4f ','line_number':871,'multiline':True]['text':'  sah Yakut                     0x85 ','line_number':872,'multiline':True]['text':'  sd  Sindhi                    0x59 ','line_number':873,'multiline':True]['text':'  se  Sami                      0x3b ','line_number':874,'multiline':True]['text':'    ILCID_POSIX_MAP(sh),    //  sh  Serbo-Croatian            0x1a ','line_number':875,'multiline':True]['text':'  si  Sinhalese                 0x5b ','line_number':876,'multiline':True]['text':'  sk  Slovak                    0x1b ','line_number':877,'multiline':True]['text':'  sl  Slovenian                 0x24 ','line_number':878,'multiline':True]['text':'  so  Somali                    0x77 ','line_number':879,'multiline':True]['text':'  sq  Albanian                  0x1c ','line_number':880,'multiline':True]['text':'    ILCID_POSIX_MAP(sr),    //  sr  Serbian                   0x1a ','line_number':881,'multiline':True]['text':'  st  Sutu                      0x30 ','line_number':882,'multiline':True]['text':'  sv  Swedish                   0x1d ','line_number':883,'multiline':True]['text':'  sw  Swahili                   0x41 ','line_number':884,'multiline':True]['text':'  syr Syriac                    0x5A ','line_number':885,'multiline':True]['text':'  ta  Tamil                     0x49 ','line_number':886,'multiline':True]['text':'  te  Telugu                    0x4a ','line_number':887,'multiline':True]['text':'  tg  Tajik                     0x28 ','line_number':888,'multiline':True]['text':'  th  Thai                      0x1e ','line_number':889,'multiline':True]['text':'  ti  Tigrigna                  0x73 ','line_number':890,'multiline':True]['text':'  tk  Turkmen                   0x42 ','line_number':891,'multiline':True]['text':'  tn  Tswana                    0x32 ','line_number':892,'multiline':True]['text':'  tr  Turkish                   0x1f ','line_number':893,'multiline':True]['text':'  ts  Tsonga                    0x31 ','line_number':894,'multiline':True]['text':'  tt  Tatar                     0x44 ','line_number':895,'multiline':True]['text':'  tzm Tamazight                 0x5f ','line_number':896,'multiline':True]['text':'  ug  Uighur                    0x80 ','line_number':897,'multiline':True]['text':'  uk  Ukrainian                 0x22 ','line_number':898,'multiline':True]['text':'  ur  Urdu                      0x20 ','line_number':899,'multiline':True]['text':'  uz  Uzbek                     0x43 ','line_number':900,'multiline':True]['text':'  ve  Venda                     0x33 ','line_number':901,'multiline':True]['text':'  vi  Vietnamese                0x2a ','line_number':902,'multiline':True]['text':'  wo  Wolof                     0x88 ','line_number':903,'multiline':True]['text':'  xh  Xhosa                     0x34 ','line_number':904,'multiline':True]['text':'  yi  Yiddish                   0x3d ','line_number':905,'multiline':True]['text':'  yo  Yoruba                    0x6a ','line_number':906,'multiline':True]['text':'  zh  Chinese                   0x04 ','line_number':907,'multiline':True]['text':'  zu  Zulu                      0x35 ','line_number':908,'multiline':True]['text':'*
 * Do not call this function. It is called by hostID.
 * The function is not private because this struct must stay as a C struct,
 * and this is an internal class.
 ','line_number':913,'multiline':True]['text':'*
 * Searches for a Windows LCID
 *
 * @param posixid the Posix style locale id.
 * @param status gets set to U_ILLEGAL_ARGUMENT_ERROR when the Posix ID has
 *               no equivalent Windows LCID.
 * @return the LCID
 ','line_number':930,'multiline':True]['text':' Exact match ','line_number':950,'multiline':True]['text':' We asked for something unusual, like en_ZZ, and we try to return the number for the same language. ','line_number':957,'multiline':True]['text':' We also have to make sure that sid and si and similar string subsets don't match. ','line_number':958,'multiline':True]['text':'no match found ','line_number':966,'multiline':True]['text':' If you get here, then no matching region was found,
       so return the language id with the wild card region. ','line_number':983,'multiline':True]['text':'
//////////////////////////////////////
//
// LCID --> POSIX
//
/////////////////////////////////////
','line_number':988,'multiline':True]['text':'
 * Various language tags needs to be changed:
 * quz -> qu
 * prs -> fa
 ','line_number':996,'multiline':True]['text':' ULOC_FULLNAME_CAPACITY ','line_number':1023,'multiline':True]['text':' Windows locale name may contain sorting variant, such as "es-ES_tradnl".
           In such case, we need special mapping data found in the hardcoded table
           in this source file. ','line_number':1027,'multiline':True]['text':' Keep the base locale, without variant ','line_number':1032,'multiline':True]['text':' No hardcoded table lookup necessary ','line_number':1036,'multiline':True]['text':' Change the tag separator from '-' to '_' ','line_number':1039,'multiline':True]['text':' On Windows, when locale name has a variant, we still look up the hardcoded table.
           If a match in the hardcoded table is longer than the Windows locale name without
           variant, we use the one as the result ','line_number':1062,'multiline':True]['text':' no match found ','line_number':1087,'multiline':True]['text':'
//////////////////////////////////////
//
// POSIX --> LCID
// This should only be called from uloc_getLCID.
// The locale ID must be in canonical form.
// langID is separate so that this file doesn't depend on the uloc_* API.
//
/////////////////////////////////////
','line_number':1092,'multiline':True]['text':' Check for incomplete id. ','line_number':1118,'multiline':True]['text':'Binary search for the map entry for normal cases ','line_number':1123,'multiline':True]['text':'binary search','line_number':1125,'multiline':True]['text':'Finds median','line_number':1127,'multiline':True]['text':'we found it','line_number':1139,'multiline':True]['text':'
     * Sometimes we can't do a binary search on posixID because some LCIDs
     * go to different locales.  We hit one of those special cases.
     ','line_number':1145,'multiline':True]['text':' no match found ','line_number':1165,'multiline':True]['text':' return international (root) ','line_number':1167,'multiline':True]