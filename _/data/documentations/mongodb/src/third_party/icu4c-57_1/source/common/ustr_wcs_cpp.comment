['text':'
*******************************************************************************
*
*   Copyright (C) 2001-2012, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  ustr_wcs.cpp
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2004sep07
*   created by: Markus W. Scherer
*
*   u_strToWCS() and u_strFromWCS() functions
*   moved here from ustrtrns.c for better modularization.
','line_number':1,'multiline':True]['text':' TODO: We should use CharString for char buffers and UnicodeString for UChar buffers.','line_number':34,'multiline':False]['text':' Then we could change this to work only with wchar_t buffers.','line_number':35,'multiline':False]['text':' Use char* not void* to avoid the compiler's strict-aliasing assumptions','line_number':40,'multiline':False]['text':' and related warnings.','line_number':41,'multiline':False]['text':' release the old pBuffer if it was not statically allocated ','line_number':52,'multiline':True]['text':' helper function ','line_number':61,'multiline':True]['text':' reset the error state ','line_number':96,'multiline':True]['text':' convert to chars using default converter ','line_number':99,'multiline':True]['text':' This should rarely occur ','line_number':103,'multiline':True]['text':' we dont have enough room on the stack grow the buffer ','line_number':107,'multiline':True]['text':' done with conversion null terminate the char buffer ','line_number':130,'multiline':True]['text':' we dont have enough room on the stack grow the buffer ','line_number':133,'multiline':True]['text':' allocate more space than required 
     * here we assume that every char requires 
     * no more than 2 wchar_ts
     ','line_number':144,'multiline':True]['text':'for null termination ','line_number':148,'multiline':True]['text':' now convert the mbs to wcs ','line_number':158,'multiline':True]['text':' we can call the system API since we are sure that
             * there is atleast 1 null in the input
             ','line_number':161,'multiline':True]['text':' should never occur ','line_number':169,'multiline':True]['text':'there are embedded nulls','line_number':179,'multiline':True]['text':'scan for nulls ','line_number':186,'multiline':True]['text':' we donot check for limit since tempBuf is null terminated ','line_number':187,'multiline':True]['text':' check if we have reached the source limit','line_number':194,'multiline':True]['text':' free the allocated memory ','line_number':210,'multiline':True]['text':' are we still using stack buffer ','line_number':217,'multiline':True]['text':' args check ','line_number':237,'multiline':True]['text':' wchar_t is UTF-16 just do a memcpy ','line_number':250,'multiline':True]['text':' helper function ','line_number':279,'multiline':True]['text':' if the wchar_t source is null terminated we can safely
         * assume that there are no embedded nulls, this is a fast
         * path for null terminated strings.
         ','line_number':310,'multiline':True]['text':' convert wchars  to chars ','line_number':315,'multiline':True]['text':' Should rarely occur ','line_number':322,'multiline':True]['text':' converted every thing ','line_number':327,'multiline':True]['text':' here the source is not null terminated 
         * so it may have nulls embeded and we need to
         * do some extra processing 
         ','line_number':334,'multiline':True]['text':' find nulls in the string ','line_number':345,'multiline':True]['text':' check if we have enough room in pCSrc ','line_number':350,'multiline':True]['text':' should rarely occur ','line_number':352,'multiline':True]['text':' we do not have enough room so grow the buffer','line_number':355,'multiline':True]['text':' we have found a null  so convert the 
                 * chunk from begining of non-null char to null
                 ','line_number':364,'multiline':True]['text':' an error occurred bail out ','line_number':370,'multiline':True]['text':' already null terminated ','line_number':375,'multiline':True]['text':' skip past the null ','line_number':377,'multiline':True]['text':' decrement the srcLength ','line_number':378,'multiline':True]['text':' the source is not null terminated and we are 
                 * end of source so we copy the source to a temp buffer
                 * null terminate it and convert wchar_ts to chars
                 ','line_number':383,'multiline':True]['text':' Should rarely occcur ','line_number':388,'multiline':True]['text':' allocate new buffer buffer ','line_number':389,'multiline':True]['text':' copy the contents to tempStack ','line_number':397,'multiline':True]['text':' null terminate the tempBuffer ','line_number':401,'multiline':True]['text':' Should rarely occur ','line_number':405,'multiline':True]['text':' we do not have enough room so grow the buffer','line_number':408,'multiline':True]['text':' convert to chars ','line_number':416,'multiline':True]['text':' decrement the srcLength ','line_number':421,'multiline':True]['text':' OK..now we have converted from wchar_ts to chars now 
     * convert chars to UChars 
     ','line_number':427,'multiline':True]['text':' convert to stack buffer','line_number':445,'multiline':True]['text':' increment count to number written to stack ','line_number':448,'multiline':True]['text':' args check ','line_number':492,'multiline':True]['text':' wchar_t is UTF-16 just do a memcpy ','line_number':505,'multiline':True]['text':' #if !defined(U_WCHAR_IS_UTF16) && !defined(U_WCHAR_IS_UTF32) && !UCONFIG_NO_CONVERSION ','line_number':533,'multiline':True]