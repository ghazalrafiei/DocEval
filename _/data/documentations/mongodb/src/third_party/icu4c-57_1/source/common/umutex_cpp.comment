['text':'
******************************************************************************
*
*   Copyright (C) 1997-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
******************************************************************************
*
* File umutex.cpp
*
* Modification History:
*
*   Date        Name        Description
*   04/02/97    aliu        Creation.
*   04/07/99    srl         updated
*   05/13/99    stephen     Changed to umutex (from cmutex).
*   11/22/99    aliu        Make non-global mutex autoinitialize [j151]
******************************************************************************
','line_number':1,'multiline':True]['text':' The ICU global mutex. Used when ICU implementation code passes NULL for the mutex pointer.','line_number':28,'multiline':False]['text':'
 * ICU Mutex wrappers.  Wrap operating system mutexes, giving the rest of ICU a
 * platform independent set of mutex operations.  For internal ICU use only.
 ','line_number':31,'multiline':True]['text':' Build time user mutex hook: #include "U_USER_MUTEX_CPP"','line_number':37,'multiline':False]['text':'-------------------------------------------------------------------------------------------','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':'    Windows Specific Definitions','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':'        Note: Cygwin (and possibly others) have both WIN32 and POSIX.','line_number':46,'multiline':False]['text':'              Prefer Win32 in these cases.  (Win32 comes ahead in the #if chain)','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':'-------------------------------------------------------------------------------------------','line_number':49,'multiline':False]['text':' Visual Studio, gcc, clang are OK. Shouldn't get here.','line_number':53,'multiline':False]['text':' This function is called when a test of a UInitOnce::fState reveals that','line_number':57,'multiline':False]['text':'   initialization has not completed, that we either need to call the','line_number':58,'multiline':False]['text':'   function on this thread, or wait for some other thread to complete.','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':' The actual call to the init function is made inline by template code','line_number':61,'multiline':False]['text':'   that knows the C++ types involved. This function returns TRUE if','line_number':62,'multiline':False]['text':'   the caller needs to call the Init function.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' this is the type given in the API doc for this function.','line_number':72,'multiline':False]['text':'  Destination','line_number':74,'multiline':False]['text':'  Exchange Value','line_number':75,'multiline':False]['text':'  Compare value','line_number':76,'multiline':False]['text':' Caller will next call the init function.','line_number':79,'multiline':False]['text':' Current state == 1.','line_number':80,'multiline':False]['text':' Another thread already completed the initialization.','line_number':82,'multiline':False]['text':'   We can simply return FALSE, indicating no','line_number':83,'multiline':False]['text':'   further action is needed by the caller.','line_number':84,'multiline':False]['text':' Another thread is currently running the initialization.','line_number':87,'multiline':False]['text':' Wait until it completes.','line_number':88,'multiline':False]['text':' This function is called by the thread that ran an initialization function,','line_number':97,'multiline':False]['text':' just after completing the function.','line_number':98,'multiline':False]['text':' We require that the associated mutex be held by the caller,','line_number':133,'multiline':False]['text':'  so access to fWaitCount is protected and safe. No other thread can','line_number':134,'multiline':False]['text':'  call condWait() while we are here.','line_number':135,'multiline':False]['text':' Function not implemented. There is no immediate requirement from ICU to have it.','line_number':145,'multiline':False]['text':' Once ICU drops support for Windows XP and Server 2003, ICU Condition Variables will be','line_number':146,'multiline':False]['text':' changed to be thin wrappers on native Windows CONDITION_VARIABLEs, and this function','line_number':147,'multiline':False]['text':' becomes trivial to provide.','line_number':148,'multiline':False]['text':' Note: because the associated mutex must be locked when calling','line_number':155,'multiline':False]['text':'       wait, we know that there can not be multiple threads','line_number':156,'multiline':False]['text':'       running here with the same condition variable.','line_number':157,'multiline':False]['text':'       Meaning that lazy initialization is safe.','line_number':158,'multiline':False]['text':' Security Attributes','line_number':160,'multiline':False]['text':' Manual Reset','line_number':161,'multiline':False]['text':' Initially reset','line_number':162,'multiline':False]['text':' Name.','line_number':163,'multiline':False]['text':' All threads that were waiting at the entry gate have woken up','line_number':175,'multiline':False]['text':' and moved through. Shut the entry gate and open the exit gate.','line_number':176,'multiline':False]['text':'-------------------------------------------------------------------------------------------','line_number':189,'multiline':False]['text':'','line_number':190,'multiline':False]['text':'  POSIX specific definitions','line_number':191,'multiline':False]['text':'','line_number':192,'multiline':False]['text':'-------------------------------------------------------------------------------------------','line_number':193,'multiline':False]['text':' Each UMutex consists of a pthread_mutex_t.','line_number':197,'multiline':False]['text':' All are statically initialized and ready for use.','line_number':198,'multiline':False]['text':' There is no runtime mutex initialization code needed.','line_number':199,'multiline':False]['text':' Suppress unused variable warnings.','line_number':207,'multiline':False]['text':' Suppress unused variable warnings.','line_number':219,'multiline':False]['text':' This function is called when a test of a UInitOnce::fState reveals that','line_number':256,'multiline':False]['text':'   initialization has not completed, that we either need to call the','line_number':257,'multiline':False]['text':'   function on this thread, or wait for some other thread to complete.','line_number':258,'multiline':False]['text':'','line_number':259,'multiline':False]['text':' The actual call to the init function is made inline by template code','line_number':260,'multiline':False]['text':'   that knows the C++ types involved. This function returns TRUE if','line_number':261,'multiline':False]['text':'   the caller needs to call the Init function.','line_number':262,'multiline':False]['text':'','line_number':263,'multiline':False]['text':' Caller will next call the init function.','line_number':271,'multiline':False]['text':' Another thread is currently running the initialization.','line_number':274,'multiline':False]['text':' Wait until it completes.','line_number':275,'multiline':False]['text':' This function is called by the thread that ran an initialization function,','line_number':286,'multiline':False]['text':' just after completing the function.','line_number':287,'multiline':False]['text':'   Some threads may be waiting on the condition, requiring the broadcast wakeup.','line_number':288,'multiline':False]['text':'   Some threads may be racing to test the fState variable outside of the mutex,','line_number':289,'multiline':False]['text':'   requiring the use of store/release when changing its value.','line_number':290,'multiline':False]['text':' End of POSIX specific umutex implementation.','line_number':302,'multiline':False]['text':' Platform #define chain.','line_number':304,'multiline':False]['text':' Platform #define chain.','line_number':308,'multiline':False]['text':'-------------------------------------------------------------------------------','line_number':311,'multiline':False]['text':'','line_number':312,'multiline':False]['text':'   Atomic Operations, out-of-line versions.','line_number':313,'multiline':False]['text':'                      These are conditional, only defined if better versions','line_number':314,'multiline':False]['text':'                      were not available for the platform.','line_number':315,'multiline':False]['text':'','line_number':316,'multiline':False]['text':'                      These versions are platform neutral.','line_number':317,'multiline':False]['text':'','line_number':318,'multiline':False]['text':'--------------------------------------------------------------------------------','line_number':319,'multiline':False]['text':'--------------------------------------------------------------------------','line_number':363,'multiline':False]['text':'','line_number':364,'multiline':False]['text':'  Deprecated functions for setting user mutexes.','line_number':365,'multiline':False]['text':'','line_number':366,'multiline':False]['text':'--------------------------------------------------------------------------','line_number':367,'multiline':False]['text':'context ','line_number':370,'multiline':True]['text':'context ','line_number':381,'multiline':True]