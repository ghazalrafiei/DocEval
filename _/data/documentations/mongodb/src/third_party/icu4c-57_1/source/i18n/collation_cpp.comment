['text':'
*******************************************************************************
* Copyright (C) 2010-2014, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* collation.cpp
*
* created on: 2010oct27
* created by: Markus W. Scherer
','line_number':1,'multiline':True]['text':' Some compilers don't care if constants are defined in the .cpp file.','line_number':21,'multiline':False]['text':' MS Visual C++ does not like it, but gcc requires it. clang does not care.','line_number':22,'multiline':False]['text':' Extract the second byte, minus the minimum byte value,','line_number':32,'multiline':False]['text':' plus the offset, modulo the number of usable byte values, plus the minimum.','line_number':33,'multiline':False]['text':' Reserve the PRIMARY_COMPRESSION_LOW_BYTE and high byte if necessary.','line_number':34,'multiline':False]['text':' First byte, assume no further overflow.','line_number':45,'multiline':False]['text':' Extract the third byte, minus the minimum byte value,','line_number':51,'multiline':False]['text':' plus the offset, modulo the number of usable byte values, plus the minimum.','line_number':52,'multiline':False]['text':' Same with the second byte,','line_number':56,'multiline':False]['text':' but reserve the PRIMARY_COMPRESSION_LOW_BYTE and high byte if necessary.','line_number':57,'multiline':False]['text':' First byte, assume no further overflow.','line_number':67,'multiline':False]['text':' Extract the second byte, minus the minimum byte value,','line_number':73,'multiline':False]['text':' minus the step, modulo the number of usable byte values, plus the minimum.','line_number':74,'multiline':False]['text':' Reserve the PRIMARY_COMPRESSION_LOW_BYTE and high byte if necessary.','line_number':75,'multiline':False]['text':' Assume no further underflow for the first byte.','line_number':76,'multiline':False]['text':' Extract the third byte, minus the minimum byte value,','line_number':95,'multiline':False]['text':' minus the step, modulo the number of usable byte values, plus the minimum.','line_number':96,'multiline':False]['text':' Same with the second byte,','line_number':103,'multiline':False]['text':' but reserve the PRIMARY_COMPRESSION_LOW_BYTE and high byte if necessary.','line_number':104,'multiline':False]['text':' First byte, assume no further underflow.','line_number':117,'multiline':False]['text':' three-byte primary pppppp00','line_number':123,'multiline':False]['text':' base code point b & step s: bbbbbbss (bit 7: isCompressible)','line_number':124,'multiline':False]['text':' delta * increment','line_number':125,'multiline':False]['text':' Create a gap before U+0000. Use c=-1 for [first unassigned].','line_number':132,'multiline':False]['text':' Fourth byte: 18 values, every 14th byte value (gap of 13).','line_number':134,'multiline':False]['text':' Third byte: 254 values.','line_number':137,'multiline':False]['text':' Second byte: 251 values 04..FE excluding the primary compression bytes.','line_number':140,'multiline':False]['text':' One lead byte covers all code points (c < 0x1182B4 = 1*251*254*18).','line_number':142,'multiline':False]['text':' !UCONFIG_NO_COLLATION','line_number':148,'multiline':False]