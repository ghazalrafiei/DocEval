['text':'
*******************************************************************************
*
*   Copyright (C) 1999-2010, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  uinvchar.c
*   encoding:   US-ASCII
*   tab size:   8 (not used)
*   indentation:2
*
*   created on: 2004sep14
*   created by: Markus W. Scherer
*
*   Functions for handling invariant characters, moved here from putil.c
*   for better modularization.
','line_number':1,'multiline':True]['text':' invariant-character handling --------------------------------------------- ','line_number':28,'multiline':True]['text':'
 * These maps for ASCII to/from EBCDIC map invariant characters (see utypes.h)
 * appropriately for most EBCDIC codepages.
 *
 * They currently also map most other ASCII graphic characters,
 * appropriately for codepages 37 and 1047.
 * Exceptions: The characters for []^ have different codes in 37 & 1047.
 * Both versions are mapped to ASCII.
 *
 *    ASCII 37 1047
 * [     5B BA   AD
 * ]     5D BB   BD
 * ^     5E B0   5F
 *
 * There are no mappings for variant characters from Unicode to EBCDIC.
 *
 * Currently, C0 control codes are also included in these maps.
 * Exceptions: S/390 Open Edition swaps LF and NEL codes compared with other
 * EBCDIC platforms; both codes (15 and 25) are mapped to ASCII LF (0A),
 * but there is no mapping for ASCII LF back to EBCDIC.
 *
 *    ASCII EBCDIC S/390-OE
 * LF    0A     25       15
 * NEL   85     15       25
 *
 * The maps below explicitly exclude the variant
 * control and graphical characters that are in ASCII-based
 * codepages at 0x80 and above.
 * "No mapping" is expressed by mapping to a 00 byte.
 *
 * These tables do not establish a converter or a codepage.
 ','line_number':30,'multiline':True]['text':' Same as asciiFromEbcdic[] except maps all letters to lowercase. ','line_number':107,'multiline':True]['text':'
 * Bit sets indicating which characters of the ASCII repertoire
 * (by ASCII/Unicode code) are "invariant".
 * See utypes.h for more details.
 *
 * As invariant are considered the characters of the ASCII repertoire except
 * for the following:
 * 21  '!' <exclamation mark>
 * 23  '#' <number sign>
 * 24  '$' <dollar sign>
 *
 * 40  '@' <commercial at>
 *
 * 5b  '[' <left bracket>
 * 5c  '\' <backslash>
 * 5d  ']' <right bracket>
 * 5e  '^' <circumflex>
 *
 * 60  '`' <grave accent>
 *
 * 7b  '{' <left brace>
 * 7c  '|' <vertical line>
 * 7d  '}' <right brace>
 * 7e  '~' <tilde>
 ','line_number':130,'multiline':True]['text':' 00..1f but not 0a ','line_number':156,'multiline':True]['text':' 20..3f but not 21 23 24 ','line_number':157,'multiline':True]['text':' 40..5f but not 40 5b..5e ','line_number':158,'multiline':True]['text':' 60..7f but not 60 7b..7e ','line_number':159,'multiline':True]['text':'
 * test unsigned types (or values known to be non-negative) for invariant characters,
 * tests ASCII-family character values
 ','line_number':162,'multiline':True]['text':' test signed types for invariant characters, adds test for positive values ','line_number':168,'multiline':True]['text':'
     * Allow the entire ASCII repertoire to be mapped _to_ Unicode.
     * For EBCDIC systems, this works for characters with codes from
     * codepages 37 and 1047 or compatible.
     ','line_number':187,'multiline':True]['text':' only invariant chars converted? ','line_number':195,'multiline':True]['text':' Variant characters were used. These are not portable in ICU. ','line_number':208,'multiline':True]['text':' NUL-terminated ','line_number':222,'multiline':True]['text':' count length ','line_number':228,'multiline':True]['text':' NUL is invariant ','line_number':235,'multiline':True]['text':' c!=0 now, one branch below checks c==0 for variant characters ','line_number':238,'multiline':True]['text':'
         * no assertions here because these functions are legitimately called
         * for strings with variant characters
         ','line_number':240,'multiline':True]['text':' found a variant char ','line_number':246,'multiline':True]['text':' found a variant char ','line_number':251,'multiline':True]['text':' NUL-terminated ','line_number':266,'multiline':True]['text':' count length ','line_number':272,'multiline':True]['text':'
         * no assertions here because these functions are legitimately called
         * for strings with variant characters
         ','line_number':280,'multiline':True]['text':' found a variant char ','line_number':285,'multiline':True]['text':' UDataSwapFn implementations used in udataswp.c ------- ','line_number':291,'multiline':True]['text':' convert ASCII to EBCDIC and verify that all characters are invariant ','line_number':293,'multiline':True]['text':' setup and swapping ','line_number':312,'multiline':True]['text':' this function only checks and copies ASCII strings without conversion ','line_number':331,'multiline':True]['text':' setup and checking ','line_number':349,'multiline':True]['text':' convert EBCDIC to ASCII and verify that all characters are invariant ','line_number':370,'multiline':True]['text':' setup and swapping ','line_number':389,'multiline':True]['text':' this function only checks and copies EBCDIC strings without conversion ','line_number':408,'multiline':True]['text':' setup and checking ','line_number':426,'multiline':True]['text':' compare invariant strings; variant characters compare less than others and unlike each other ','line_number':447,'multiline':True]['text':' strings start with same prefix, compare lengths ','line_number':489,'multiline':True]['text':' c1 is set ','line_number':519,'multiline':True]['text':' strings start with same prefix, compare lengths ','line_number':536,'multiline':True]['text':' copy NUL ','line_number':572,'multiline':True]['text':' copy non-null ','line_number':574,'multiline':True]['text':' pad ','line_number':579,'multiline':True]['text':' copy NUL ','line_number':593,'multiline':True]['text':' copy non-null ','line_number':595,'multiline':True]['text':' questionmark (subchar) ','line_number':599,'multiline':True]['text':' pad ','line_number':604,'multiline':True]