['text':'
*******************************************************************************
* Copyright (C) 2015, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* pluralaffix.h
*
* created on: 2015jan06
* created by: Travis Keep
','line_number':1,'multiline':True]['text':' Export an explicit template instantiation.','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':'    MSVC requires this, even though it should not be necessary. ','line_number':31,'multiline':False]['text':'    No direct access leaks out of the i18n library.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':'    Macintosh produces duplicate definition linker errors with the explicit template','line_number':34,'multiline':False]['text':'    instantiation.','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':'*
 * A plural aware prefix or suffix of a formatted number.
 *
 * PluralAffix is essentially a map of DigitAffix objects keyed by plural
 * category. The 'other' category is the default and always has some
 * value. The rest of the categories are optional. Querying for a category that
 * is not set always returns the DigitAffix stored in the 'other' category.
 *
 * To use one of these objects, build it up first using append() and
 * setVariant() methods. Once built, leave unchanged and let multiple threads
 * safely access.
 * 
 * The following code is sample code for building up:
 *   one: US Dollar -
 *   other: US Dollars -
 *
 * and storing it in "negativeCurrencyPrefix"
 *
 * UErrorCode status = U_ZERO_ERROR;
 *
 * PluralAffix negativeCurrencyPrefix;
 *
 * PluralAffix currencyName;
 * currencyName.setVariant("one", "US Dollar", status);
 * currencyName.setVariant("other", "US Dollars", status);
 *
 * negativeCurrencyPrefix.append(currencyName, UNUM_CURRENCY_FIELD, status);
 * negativeCurrencyPrefix.append(" ");
 * negativeCurrencyPrefix.append("-", UNUM_SIGN_FIELD, status);
 ','line_number':42,'multiline':True]['text':'*
     * Create empty PluralAffix.
     ','line_number':75,'multiline':True]['text':'*
     * Create a PluralAffix where the 'other' variant is otherVariant.
     ','line_number':80,'multiline':True]['text':'*
     * Sets a particular variant for a plural category while overwriting
     * anything that may have been previously stored for that plural
     * category. The set value has no field annotations.
     * @param category "one", "two", "few", ...
     * @param variant the variant to store under the particular category
     * @param status Any error returned here.
     ','line_number':85,'multiline':True]['text':'*
     * Make the 'other' variant be the empty string with no field annotations
     * and remove the variants for the rest of the plural categories.
     ','line_number':97,'multiline':True]['text':'*
     * Append value to all set plural categories. If fieldId present, value
     * is that field type.
     ','line_number':103,'multiline':True]['text':'*
     * Append value to all set plural categories. If fieldId present, value
     * is that field type.
     ','line_number':109,'multiline':True]['text':'*
     * Append value to all set plural categories. If fieldId present, value
     * is that field type.
     ','line_number':115,'multiline':True]['text':'*
     * Append the value for each plural category in rhs to the corresponding
     * plural category in this instance. Each value appended from rhs is
     * of type fieldId.
     ','line_number':121,'multiline':True]['text':'*
     * Get the DigitAffix for a paricular category such as "zero", "one", ...
     * If the particular category is not set, returns the 'other' category
     * which is always set.
     ','line_number':130,'multiline':True]['text':'*
     * Get the DigitAffix for a paricular category such as "zero", "one", ...
     * If the particular category is not set, returns the 'other' category
     * which is always set.
     ','line_number':137,'multiline':True]['text':'*
     * Get the DigitAffix for the other category which is always set.
     ','line_number':144,'multiline':True]['text':'*
     * Returns TRUE if this instance has variants stored besides the "other"
     * variant.
     ','line_number':151,'multiline':True]['text':'*
     * Returns TRUE if this instance equals rhs.
     ','line_number':157,'multiline':True]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':174,'multiline':True]['text':' __PLURALAFFIX_H__','line_number':175,'multiline':False]