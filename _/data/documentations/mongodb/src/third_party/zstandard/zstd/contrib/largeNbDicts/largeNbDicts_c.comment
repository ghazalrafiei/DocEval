['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]['text':' largeNbDicts
 * This is a benchmark test tool
 * dedicated to the specific case of dictionary decompression
 * using a very large nb of dictionaries
 * thus suffering latency from lots of cache misses.
 * It's created in a bid to investigate performance and find optimizations. ','line_number':11,'multiline':True]['text':'---  Dependencies  ---','line_number':19,'multiline':True]['text':' size_t ','line_number':21,'multiline':True]['text':' malloc, free, abort, qsort','line_number':22,'multiline':True]['text':' fprintf ','line_number':23,'multiline':True]['text':' UINT_MAX ','line_number':24,'multiline':True]['text':' assert ','line_number':25,'multiline':True]['text':'---  Constants  --- ','line_number':34,'multiline':True]['text':' no slicing into blocks ','line_number':39,'multiline':True]['text':'---  Macros  ---','line_number':53,'multiline':True]['text':'---  Display Macros  ---','line_number':60,'multiline':True]['text':' 0 : no display,  1: errors,  2 : + result + interaction + warnings,  3 : + progression,  4 : + information ','line_number':64,'multiline':True]['text':'---  buffer_t  ---','line_number':67,'multiline':True]['text':' @return : kBuffNull if any error ','line_number':77,'multiline':True]['text':' @return : kBuffNull if any error ','line_number':104,'multiline':True]['text':' check overflow ','line_number':111,'multiline':True]['text':' do nothing specific if fclose() fails ','line_number':122,'multiline':True]['text':' @return : kBuffNull if any error ','line_number':128,'multiline':True]['text':' note : result might be kBuffNull ','line_number':137,'multiline':True]['text':'! BMK_loadFiles() :
 *  Loads `buffer`, with content from files listed within `fileNamesTable`.
 *  Fills `buffer` entirely.
 * @return : 0 on success, !=0 on error ','line_number':160,'multiline':True]['text':'---  slice_collection_t  ---','line_number':202,'multiline':True]['text':' shrinkSizes() :
 * downsizes sizes of slices within collection, according to `newSizes`.
 * every `newSizes` entry must be <= than its corresponding collection size ','line_number':218,'multiline':True]['text':' presumed same size as collection ','line_number':222,'multiline':True]['text':' splitSlices() :
 * nbSlices : if == 0, nbSlices is automatically determined from srcSlices and blockSize.
 *            otherwise, creates exactly nbSlices slices,
 *            by either truncating input (when smaller)
 *            or repeating input from beginning ','line_number':232,'multiline':True]['text':' means "do not cut" ','line_number':240,'multiline':True]['text':' ---  buffer collection  --- ','line_number':291,'multiline':True]['text':' @return : kBuffNull if any error ','line_number':374,'multiline':True]['text':' Load input buffer ','line_number':390,'multiline':True]['text':'---  ddict_collection_t  ---','line_number':429,'multiline':True]['text':' returns .buffers=NULL if operation fails ','line_number':451,'multiline':True]['text':' returns .buffers=NULL if operation fails ','line_number':476,'multiline':True]['text':' mess with addresses, so that linear scanning dictionaries != linear address scanning ','line_number':493,'multiline':True]['text':' mess with addresses, so that linear scanning dictionaries != linear address scanning ','line_number':512,'multiline':True]['text':' ---   Compression  --- ','line_number':532,'multiline':True]['text':' compressBlocks() :
 * @return : total compressed size of all blocks,
 *        or 0 if error.
 ','line_number':534,'multiline':True]['text':' optional (can be NULL). If present, must contain at least nbBlocks fields ','line_number':538,'multiline':True]['text':' ---  Benchmark  --- ','line_number':571,'multiline':True]['text':' benched function ','line_number':621,'multiline':True]['text':' benched function ','line_number':638,'multiline':True]['text':' compareFunction() :
 * Sort input in decreasing order when used with qsort() ','line_number':659,'multiline':True]['text':' median ','line_number':678,'multiline':True]['text':' BMK_benchTimedFn may not run exactly nbRounds iterations ','line_number':739,'multiline':True]['text':' Print table headers ','line_number':755,'multiline':True]['text':' success ','line_number':784,'multiline':True]['text':'! bench() :
 *  fileName : file to load for benchmarking purpose
 *  dictionary : optional (can be NULL), file to load as dictionary,
 *              if none provided : will be calculated on the fly by the program.
 * @return : 0 is success, 1+ otherwise ','line_number':788,'multiline':True]['text':' dictionary determination ','line_number':845,'multiline':True]['text':' now dstSlices contain the real compressed size of each block, instead of the maximum capacity ','line_number':870,'multiline':True]['text':' free all heap objects in reverse order ','line_number':915,'multiline':True]['text':' ---  Command Line  --- ','line_number':931,'multiline':True]['text':'! readU32FromChar() :
 * @return : unsigned integer value read from input in `char` format.
 *  allows and interprets K, KB, KiB, M, MB and MiB suffix.
 *  Will also modify `*stringPtr`, advancing it to position where it stopped reading.
 *  Note : function will exit() program if digit sequence overflows ','line_number':933,'multiline':True]['text':' check overflow ','line_number':943,'multiline':True]['text':' check overflow ','line_number':948,'multiline':True]['text':' check overflow ','line_number':951,'multiline':True]['text':' skip `K` or `M` ','line_number':954,'multiline':True]['text':'* longCommandWArg() :
 *  check if *stringPtr is the same as longCommand.
 *  If yes, @return 1 and advances *stringPtr to the position which immediately follows longCommand.
 * @return 0 and doesn't modify *stringPtr otherwise.
 ','line_number':961,'multiline':True]['text':' determine nbDicts automatically: 1 dictionary per block ','line_number':1024,'multiline':True]['text':' determine nbBlocks automatically, from source and blockSize ','line_number':1025,'multiline':True]['text':' anything that's not a command is a filename ','line_number':1051,'multiline':True]['text':' missing capability, do not run ','line_number':1059,'multiline':True]['text':' follow_links ','line_number':1061,'multiline':True]['text':' UTIL_createFileNamesTable() takes ownership of nameTable ','line_number':1064,'multiline':True]