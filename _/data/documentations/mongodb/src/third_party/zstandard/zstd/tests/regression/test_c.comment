['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]['text':'* Check if a name contains a comma or is too long. ','line_number':22,'multiline':True]['text':'* Check if any of the names contain a comma. ','line_number':35,'multiline':True]['text':'*
 * Option parsing using getopt.
 * When you add a new option update: long_options, long_extras, and
 * short_options.
 ','line_number':55,'multiline':True]['text':'* Option variables filled by parse_args. ','line_number':61,'multiline':True]['text':'*
 * Extra state that we need to keep per-option that we can't store in getopt.
 ','line_number':76,'multiline':True]['text':'*< The short option name, used as an id. ','line_number':80,'multiline':True]['text':'*< The help message. ','line_number':81,'multiline':True]['text':'*< The option type: required, optional, or help. ','line_number':82,'multiline':True]['text':'*< The value to set or NULL if no_argument. ','line_number':83,'multiline':True]['text':'* The options. ','line_number':86,'multiline':True]['text':'* The extra info for the options. Must be in the same order as the options. ','line_number':100,'multiline':True]['text':'* The short options. Must correspond to the options. ','line_number':112,'multiline':True]['text':'* Return the help string for the option type. ','line_number':115,'multiline':True]['text':'* Print the help for the program. ','line_number':130,'multiline':True]['text':' Long / short  - help [option type] ','line_number':136,'multiline':True]['text':' Short / long  - help [option type] ','line_number':145,'multiline':True]['text':'* Parse the arguments. Return 0 on success. Print help on failure. ','line_number':156,'multiline':True]['text':'* Helper macro to print to stderr and a file. ','line_number':209,'multiline':True]['text':'* Helper macro to flush stderr and a file. ','line_number':215,'multiline':True]['text':'*
 * Run all the regression tests and record the results table to results and
 * stderr progressively.
 ','line_number':245,'multiline':True]['text':' Create the state common to all configs ','line_number':258,'multiline':True]['text':' Print the result for the (method, data, config) tuple. ','line_number':265,'multiline':True]['text':'* memcmp() the old results file and the new results file. ','line_number':291,'multiline':True]['text':' Parse args and validate modules. ','line_number':326,'multiline':True]['text':' Initialize modules. ','line_number':334,'multiline':True]['text':' Run the regression tests. ','line_number':342,'multiline':True]['text':' Diff the new results with the previous results. ','line_number':356,'multiline':True]