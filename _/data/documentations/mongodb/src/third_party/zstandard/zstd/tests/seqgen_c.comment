['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]['text':' Generates a single guard byte, then match length + 1 of a different byte,
 * then another guard byte.
 ','line_number':41,'multiline':True]['text':' Generate a single byte and pick a different byte for the match ','line_number':58,'multiline':True]['text':' State transition ','line_number':68,'multiline':True]['text':' fall-through ','line_number':71,'multiline':True]['text':' Copy matchLength + 1 bytes to the output buffer ','line_number':73,'multiline':True]['text':' State transition ','line_number':82,'multiline':True]['text':' fall-through ','line_number':85,'multiline':True]['text':' Generate a single byte and pick a different byte for the match ','line_number':87,'multiline':True]['text':' State transition ','line_number':96,'multiline':True]['text':' fall-through ','line_number':97,'multiline':True]['text':' Saves the current seed then generates kMatchBytes random bytes >= 128.
 * Generates literal length - kMatchBytes random bytes < 128.
 * Generates another kMatchBytes using the saved seed to generate a match.
 * This way the match is easy to find for the compressors.
 ','line_number':108,'multiline':True]['text':' fall-through ','line_number':130,'multiline':True]['text':' State transition ','line_number':138,'multiline':True]['text':' fall-through ','line_number':141,'multiline':True]['text':' State transition ','line_number':149,'multiline':True]['text':' fall-through ','line_number':152,'multiline':True]['text':' fall-through ','line_number':161,'multiline':True]['text':' Saves the current seed then generates kMatchBytes random bytes >= 128.
 * Generates offset - kMatchBytes of zeros to get a large offset without
 * polluting the hash tables.
 * Generates another kMatchBytes using the saved seed to generate a with the
 * required offset.
 ','line_number':172,'multiline':True]['text':' fall-through ','line_number':195,'multiline':True]['text':' State transition ','line_number':203,'multiline':True]['text':' fall-through ','line_number':207,'multiline':True]['text':' Copy matchLength + 1 bytes to the output buffer ','line_number':209,'multiline':True]['text':' State transition ','line_number':218,'multiline':True]['text':' fall-through ','line_number':222,'multiline':True]['text':' fall-through ','line_number':231,'multiline':True]['text':' Returns the number of bytes left to generate.
 * Must pass the same type/value until it returns 0.
 ','line_number':242,'multiline':True]['text':' fall-through ','line_number':251,'multiline':True]['text':' Returns the xxhash of the data produced so far ','line_number':256,'multiline':True]