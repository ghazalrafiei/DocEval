['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]['text':'
 * This header file has common utility functions used in examples.
 ','line_number':11,'multiline':True]['text':' malloc, free, exit','line_number':17,'multiline':False]['text':' fprintf, perror, fopen, etc.','line_number':18,'multiline':False]['text':' strerror','line_number':19,'multiline':False]['text':' errno','line_number':20,'multiline':False]['text':' stat','line_number':21,'multiline':False]['text':' UNUSED_ATTR tells the compiler it is okay if the function is unused. ','line_number':25,'multiline':True]['text':'
 * Define the returned error code from utility functions.
 ','line_number':35,'multiline':True]['text':'! CHECK
 * Check that the condition holds. If it doesn't print a message and die.
 ','line_number':50,'multiline':True]['text':'! CHECK_ZSTD
 * Check the zstd error code and die if an error occurred after printing a
 * message.
 ','line_number':67,'multiline':True]['text':'! fsize_orDie() :
 * Get the size of a given file path.
 *
 * @return The size of a given file path.
 ','line_number':77,'multiline':True]['text':' error ','line_number':86,'multiline':True]['text':' 1. fileSize should be non-negative,
     * 2. if off_t -> size_t type conversion results in discrepancy,
     *    the file size is too large for type size_t.
     ','line_number':93,'multiline':True]['text':'! fopen_orDie() :
 * Open a file using given file path and open option.
 *
 * @return If successful this function will return a FILE pointer to an
 * opened file otherwise it sends an error to stderr and exits.
 ','line_number':104,'multiline':True]['text':' error ','line_number':114,'multiline':True]['text':'! fclose_orDie() :
 * Close an opened file using given FILE pointer.
 ','line_number':119,'multiline':True]['text':' error ','line_number':125,'multiline':True]['text':'! fread_orDie() :
 *
 * Read sizeToRead bytes from a given file, storing them at the
 * location given by buffer.
 *
 * @return The number of bytes read.
 ','line_number':130,'multiline':True]['text':' good ','line_number':140,'multiline':True]['text':' good, reached end of file ','line_number':141,'multiline':True]['text':' error ','line_number':142,'multiline':True]['text':'! fwrite_orDie() :
 *
 * Write sizeToWrite bytes to a file pointed to by file, obtaining
 * them from a location given by buffer.
 *
 * Note: This function will send an error to stderr and exit if it
 * cannot write data to the given file pointer.
 *
 * @return The number of bytes written.
 ','line_number':147,'multiline':True]['text':' good ','line_number':160,'multiline':True]['text':' error ','line_number':161,'multiline':True]['text':'! malloc_orDie() :
 * Allocate memory.
 *
 * @return If successful this function returns a pointer to allo-
 * cated memory.  If there is an error, this function will send that
 * error to stderr and exit.
 ','line_number':166,'multiline':True]['text':' error ','line_number':177,'multiline':True]['text':'! loadFile_orDie() :
 * load file into buffer (memory).
 *
 * Note: This function will send an error to stderr and exit if it
 * cannot read data from the given file path.
 *
 * @return If successful this function will load file into buffer and
 * return file size, otherwise it will printout an error to stderr and exit.
 ','line_number':182,'multiline':True]['text':' can't fail, read only ','line_number':202,'multiline':True]['text':'! mallocAndLoadFile_orDie() :
 * allocate memory buffer and then load file into it.
 *
 * Note: This function will send an error to stderr and exit if memory allocation
 * fails or it cannot read data from the given file path.
 *
 * @return If successful this function will return buffer and bufferSize(=fileSize),
 * otherwise it will printout an error to stderr and exit.
 ','line_number':206,'multiline':True]['text':'! saveFile_orDie() :
 *
 * Save buffSize bytes to a given file path, obtaining them from a location pointed
 * to by buff.
 *
 * Note: This function will send an error to stderr and exit if it
 * cannot write to a given file.
 ','line_number':224,'multiline':True]