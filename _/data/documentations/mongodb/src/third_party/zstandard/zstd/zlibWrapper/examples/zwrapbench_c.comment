['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 ','line_number':1,'multiline':True]['text':' *************************************
*  Includes
**************************************','line_number':11,'multiline':True]['text':' Compiler options, UTIL_GetFileSize, UTIL_sleep ','line_number':14,'multiline':True]['text':' malloc, free ','line_number':15,'multiline':True]['text':' memset ','line_number':16,'multiline':True]['text':' fprintf, fopen, ftello64 ','line_number':17,'multiline':True]['text':' clock_t, clock, CLOCKS_PER_SEC ','line_number':18,'multiline':True]['text':' toupper ','line_number':19,'multiline':True]['text':' errno ','line_number':20,'multiline':True]['text':' UTIL_time_t, UTIL_getTime, UTIL_clockSpanMicro, UTIL_waitForNextTick ','line_number':22,'multiline':True]['text':' RDG_genBuffer ','line_number':26,'multiline':True]['text':'-************************************
*  Tuning parameters
*************************************','line_number':33,'multiline':True]['text':'-************************************
*  Constants
*************************************','line_number':41,'multiline':True]['text':' 1 second ','line_number':58,'multiline':True]['text':' 70 seconds ','line_number':59,'multiline':True]['text':' *************************************
*  console display
**************************************','line_number':71,'multiline':True]['text':' 0 : no display;   1: errors;   2 : + result + interaction + warnings;   3 : + progression;   4 : + information ','line_number':77,'multiline':True]['text':' *************************************
*  Exceptions
**************************************','line_number':88,'multiline':True]['text':' *************************************
*  Benchmark Parameters
**************************************','line_number':105,'multiline':True]['text':' ********************************************************
*  Bench functions
*********************************************************','line_number':129,'multiline':True]['text':' avoid div by 0 ','line_number':156,'multiline':True]['text':' add some room for safety ','line_number':160,'multiline':True]['text':' checks ','line_number':167,'multiline':True]['text':' init ','line_number':171,'multiline':True]['text':' can only display 17 characters ','line_number':172,'multiline':True]['text':' Init blockTable data ','line_number':174,'multiline':True]['text':' warming up memory ','line_number':196,'multiline':True]['text':' Bench ','line_number':199,'multiline':True]['text':' overheat protection ','line_number':218,'multiline':True]['text':' Compression ','line_number':225,'multiline':True]['text':' warm up and erase result buffer ','line_number':227,'multiline':True]['text':' give processor time to other processes ','line_number':229,'multiline':True]['text':' still some time to do compression tests ','line_number':233,'multiline':True]['text':'   if (ZWRAP_isUsingZSTDcompression()) {
                        ret = ZWRAP_setPledgedSrcSize(&def, avgSize);
                        if (ret != Z_OK) EXM_THROW(1, "ZWRAP_setPledgedSrcSize failure");
                    } ','line_number':316,'multiline':True]['text':' reuse dictionary to make compression faster ','line_number':324,'multiline':True]['text':' zstd doesn't require deflateSetDictionary after ZWRAP_deflateReset_keepDict ','line_number':331,'multiline':True]['text':'  unused when decompression disabled ','line_number':393,'multiline':True]['text':' Decompression ','line_number':395,'multiline':True]['text':' warm result buffer ','line_number':396,'multiline':True]['text':' give processor time to other processes ','line_number':398,'multiline':True]['text':' force immediate test end ','line_number':417,'multiline':True]['text':' reuse dictionary to make decompression faster; inflate will return Z_NEED_DICT only for the first time ','line_number':467,'multiline':True]['text':' CRC Checking ','line_number':535,'multiline':True]['text':' should never happen ','line_number':554,'multiline':True]['text':' CRC Checking ','line_number':558,'multiline':True]['text':' for (testNb = 1; testNb <= (g_nbIterations + !g_nbIterations); testNb++) ','line_number':560,'multiline':True]['text':' Bench ','line_number':571,'multiline':True]['text':' clean up ','line_number':573,'multiline':True]['text':' do not allocate zero bytes ','line_number':595,'multiline':True]['text':' avoid zero ','line_number':598,'multiline':True]['text':' Windows ','line_number':608,'multiline':True]['text':' Linux ','line_number':609,'multiline':True]['text':'! BMK_loadFiles() :
    Loads `buffer` with content of files listed within `fileNamesTable`.
    At most, fills `buffer` entirely ','line_number':691,'multiline':True]['text':' buffer too small - stop after this file ','line_number':716,'multiline':True]['text':' Load dictionary ','line_number':741,'multiline':True]['text':' Memory allocation & restrictions ','line_number':753,'multiline':True]['text':' Load input buffer ','line_number':761,'multiline':True]['text':' Bench ','line_number':764,'multiline':True]['text':' clean up ','line_number':773,'multiline':True]['text':' Memory allocation ','line_number':786,'multiline':True]['text':' Fill input buffer ','line_number':789,'multiline':True]['text':' Bench ','line_number':792,'multiline':True]['text':' clean up ','line_number':796,'multiline':True]['text':'-************************************
*  Command Line
*************************************','line_number':816,'multiline':True]['text':'! readU32FromChar() :
    @return : unsigned integer value reach from input in `char` format
    Will also modify `*stringPtr`, advancing it to position where it stopped reading.
    Note : this function can overflow if digit string > MAX_UINT ','line_number':860,'multiline':True]['text':' init ','line_number':890,'multiline':True]['text':' Pick out program name from path. Don't rely on stdlib because of conflicting behavior ','line_number':894,'multiline':True]['text':' command switches ','line_number':900,'multiline':True]['text':' Protection if argument empty ','line_number':903,'multiline':True]['text':' long commands (--long-word) ','line_number':907,'multiline':True]['text':' Decode commands (note : aggregated commands are allowed) ','line_number':914,'multiline':True]['text':' Display help ','line_number':921,'multiline':True]['text':' Version Only ','line_number':922,'multiline':True]['text':' Use file content as dictionary ','line_number':926,'multiline':True]['text':' Verbose mode ','line_number':929,'multiline':True]['text':' Quiet mode ','line_number':932,'multiline':True]['text':' recursive ','line_number':936,'multiline':True]['text':' Benchmark ','line_number':940,'multiline':True]['text':' first compression Level ','line_number':942,'multiline':True]['text':' range bench (benchmark only) ','line_number':947,'multiline':True]['text':' last compression Level ','line_number':949,'multiline':True]['text':' Modify Nb Iterations (benchmark only) ','line_number':954,'multiline':True]['text':' cut input into blocks (benchmark only) ','line_number':963,'multiline':True]['text':' allows using KB notation ','line_number':967,'multiline':True]['text':' Pause at the end (-p) or set an additional param (-p#) (hidden option) ','line_number':975,'multiline':True]['text':' unknown command ','line_number':982,'multiline':True]['text':' if (argument[0]=='-') ','line_number':987,'multiline':True]['text':' if (nextArgumentIsAFile==0) ','line_number':989,'multiline':True]['text':' add filename to list ','line_number':997,'multiline':True]['text':' Welcome message (if verbose) ','line_number':1001,'multiline':True]