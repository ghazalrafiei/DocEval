['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
*','line_number':1,'multiline':True]['text':' This example deals with Dictionary compression,
 * its counterpart is `examples/dictionary_decompression.c` .
 * These examples presume that a dictionary already exists.
 * The main method to create a dictionary is `zstd --train`,
 * look at the CLI documentation for details.
 * Another possible method is to employ dictionary training API,
 * published in `lib/zdict.h` .
*','line_number':11,'multiline':True]['text':' printf','line_number':20,'multiline':False]['text':' free','line_number':21,'multiline':False]['text':' memset, strcat','line_number':22,'multiline':False]['text':' presumes zstd library is installed','line_number':23,'multiline':False]['text':' Helper functions, CHECK(), and CHECK_ZSTD()','line_number':24,'multiline':False]['text':' createDict() :
** `dictFileName` is supposed already created using `zstd --train` ','line_number':26,'multiline':True]['text':' Compress using the dictionary.
     * This function writes the dictionary id, and content size into the header.
     * But, it doesn't use a checksum. You can control these options using the
     * advanced API: ZSTD_CCtx_setParameter(), ZSTD_CCtx_refCDict(),
     * and ZSTD_compress2().
     ','line_number':47,'multiline':True]['text':' success ','line_number':60,'multiline':True]['text':' never fails ','line_number':63,'multiline':True]['text':' load dictionary only once ','line_number':92,'multiline':True]