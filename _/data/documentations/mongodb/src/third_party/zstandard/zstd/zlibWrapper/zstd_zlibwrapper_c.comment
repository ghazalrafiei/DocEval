['text':'
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 * All rights reserved.
 *
 * This source code is licensed under both the BSD-style license (found in the
 * LICENSE file in the root directory of this source tree) and the GPLv2 (found
 * in the COPYING file in the root directory of this source tree).
 * You may select, at your option, one of the above-listed licenses.
 ','line_number':1,'multiline':True]['text':' ===   Tuning parameters   === ','line_number':12,'multiline':True]['text':' ===   Dependencies   === ','line_number':18,'multiline':True]['text':' vsprintf ','line_number':20,'multiline':True]['text':' va_list, for z_gzprintf ','line_number':21,'multiline':True]['text':' without #define Z_PREFIX ','line_number':25,'multiline':True]['text':' ZSTD_isFrame, ZSTD_MAGICNUMBER, ZSTD_customMem ','line_number':27,'multiline':True]['text':' ===   Constants   === ','line_number':31,'multiline':True]['text':' Z_DEFAULT_COMPRESSION is translated to ZWRAP_DEFAULT_CLEVEL for zstd ','line_number':35,'multiline':True]['text':' ===   Debug   === ','line_number':38,'multiline':True]['text':' fprintf(stderr, __VA_ARGS__) ','line_number':39,'multiline':True]['text':' fprintf(stderr, __VA_ARGS__) ','line_number':40,'multiline':True]['text':' ===   Utility   === ','line_number':45,'multiline':True]['text':' don't use static : performance detrimental  ','line_number':51,'multiline':True]['text':' Visual Studio ','line_number':61,'multiline':True]['text':' ===   Wrapper   === ','line_number':85,'multiline':True]['text':' 0 = don't use ZSTD ','line_number':86,'multiline':True]['text':' LOG_WRAPPERC("ZWRAP alloc %p, %d \n", address, (int)size); ','line_number':110,'multiline':True]['text':' if (address) LOG_WRAPPERC("ZWRAP free %p \n", address); ','line_number':118,'multiline':True]['text':' calloc implemented as malloc+memset;
         * not as efficient as calloc, but next best guess for custom malloc ','line_number':131,'multiline':True]['text':' ===   Compression   === ','line_number':152,'multiline':True]['text':' a flag to signal the end of a stream ','line_number':158,'multiline':True]['text':' we need it as strm->total_in can be reset by user ','line_number':159,'multiline':True]['text':' copy of zalloc, zfree, opaque ','line_number':161,'multiline':True]['text':' typedef ZWRAP_CCtx internal_state; ','line_number':168,'multiline':True]['text':' support free on NULL ','line_number':174,'multiline':True]['text':' use state which in not used by user ','line_number':282,'multiline':True]['text':' (zwc->totalInBytes == 0) ','line_number':401,'multiline':True]['text':' ! (zwc->zbc == NULL) ','line_number':402,'multiline':True]['text':' structures are already freed ','line_number':477,'multiline':True]['text':' ===   Decompression   === ','line_number':512,'multiline':True]['text':' must be >= ZSTD_frameHeaderSize_min ','line_number':518,'multiline':True]['text':' we need it as strm->total_in can be reset by user ','line_number':520,'multiline':True]['text':' zlib params ','line_number':525,'multiline':True]['text':' just to copy zalloc, zfree, opaque ','line_number':530,'multiline':True]['text':' support free on null ','line_number':564,'multiline':True]['text':' ! (zwd->totalInBytes == 0 && strm->avail_in >= ZLIB_HEADERSIZE) ','line_number':776,'multiline':True]['text':' inflate header ','line_number':799,'multiline':True]['text':' mark as zlib stream ','line_number':816,'multiline':True]['text':' if ! (zwd->totalInBytes == 0 && strm->avail_in >= ZLIB_HEADERSIZE) ','line_number':826,'multiline':True]['text':' (zwd->totalInBytes < ZLIB_HEADERSIZE) ','line_number':827,'multiline':True]['text':' mark as zstd steam ','line_number':829,'multiline':True]['text':' not consumed ','line_number':886,'multiline':True]['text':' (zwd->totalInBytes < ZSTD_HEADERSIZE) ','line_number':888,'multiline':True]['text':' dErr lifetime ','line_number':920,'multiline':True]['text':' structures are already freed ','line_number':939,'multiline':True]['text':' Advanced compression functions ','line_number':959,'multiline':True]['text':' Advanced decompression functions ','line_number':1014,'multiline':True]['text':' ===   utility functions  === ','line_number':1098,'multiline':True]['text':' !Z_SOLO ','line_number':1159,'multiline':True]['text':' checksum functions ','line_number':1162,'multiline':True]['text':' Error function ','line_number':1195,'multiline':True]['text':' Just use zlib Error function ','line_number':1198,'multiline':True]