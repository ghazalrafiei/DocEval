['text':' $Id$','line_number':1,'multiline':False]['text':' (C) Copyright Aaron W. LaFramboise, Roland Schwarz, Michael Glassford 2004.','line_number':2,'multiline':False]['text':' (C) Copyright 2007 Roland Schwarz','line_number':3,'multiline':False]['text':' (C) Copyright 2007 Anthony Williams','line_number':4,'multiline':False]['text':' (C) Copyright 2007 David Deakins','line_number':5,'multiline':False]['text':' Use, modification and distribution are subject to the','line_number':6,'multiline':False]['text':' Boost Software License, Version 1.0. (See accompanying file','line_number':7,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':' _pRawDllMainOrig can be defined by including boost/thread/win32/mfc_thread_init.hpp','line_number':84,'multiline':False]['text':' into your dll; it ensures that MFC-Dll-initialization will be done properly','line_number':85,'multiline':False]['text':' The following code is adapted from the MFC-Dll-init code','line_number':86,'multiline':False]['text':'
 * _pRawDllMainOrig MUST be an extern const variable, which will be aliased to
 * _pDefaultRawDllMainOrig if no real user definition is present, thanks to the
 * alternatename directive.
 ','line_number':87,'multiline':True]['text':' work at least with _MSC_VER 1500 (MSVC++ 9.0, VS 2008)','line_number':93,'multiline':False]['text':' unknown Windows target (not x86, x64, ARM, ARM64) ','line_number':103,'multiline':True]['text':' defined (_M_X64) || defined (_M_ARM) || defined (_M_ARM64) ','line_number':105,'multiline':True]['text':'Definitions required by implementation','line_number':113,'multiline':False]['text':' 1300 == VC++ 7.0, 1900 == VC++ 14.0, 1910 == VC++ 2017','line_number':114,'multiline':False]['text':'Symbols for connection to the runtime environment','line_number':139,'multiline':False]['text':'the tls directory (located in .rdata segment)','line_number':143,'multiline':False]['text':'tls initializers */','line_number':144,'multiline':False]['text':'Forward declarations','line_number':149,'multiline':False]['text':'The .CRT$Xxx information is taken from Codeguru:','line_number':159,'multiline':False]['text':'http://www.codeguru.com/Cpp/misc/misc/threadsprocesses/article.php/c6945__2/','line_number':160,'multiline':False]['text':' Variables below are not referenced anywhere and','line_number':162,'multiline':False]['text':' to not be optimized away has to have external linkage','line_number':163,'multiline':False]['text':' 1300 == VC++ 7.0','line_number':175,'multiline':False]['text':'Callback to run tls glue code first.','line_number':178,'multiline':False]['text':'I don't think it is necessary to run it','line_number':179,'multiline':False]['text':'at .CRT$XIB level, since we are only','line_number':180,'multiline':False]['text':'interested in thread detachement. But','line_number':181,'multiline':False]['text':'this could be changed easily if required.','line_number':182,'multiline':False]['text':'Callback after all global ctors.','line_number':188,'multiline':False]['text':'Callback for tls notifications.','line_number':194,'multiline':False]['text':'Callback for termination.','line_number':199,'multiline':False]['text':' 1300 == VC++ 7.0','line_number':204,'multiline':False]['text':' namespace boost','line_number':208,'multiline':False]['text':'The following line has an important side effect:','line_number':219,'multiline':False]['text':'if the TLS directory is not already there, it will','line_number':220,'multiline':False]['text':'be created by the linker. In other words, it forces a tls','line_number':221,'multiline':False]['text':'directory to be generated by the linker even when static tls','line_number':222,'multiline':False]['text':'(i.e. __declspec(thread)) is not used.','line_number':223,'multiline':False]['text':'The volatile should prevent the optimizer','line_number':224,'multiline':False]['text':'from removing the reference.','line_number':225,'multiline':False]['text':' 1300 == VC++ 7.0','line_number':229,'multiline':False]['text':'pfdst = (_TLSCB*)_tls_used.AddressOfCallBacks;','line_number':233,'multiline':False]['text':'The following loop will merge the address pointers','line_number':235,'multiline':False]['text':'into a contiguous area, since the tlssup code seems','line_number':236,'multiline':False]['text':'to require this (at least on MSVC 6)','line_number':237,'multiline':False]['text':'Schedule on_thread_exit() to be called for the main','line_number':260,'multiline':False]['text':'thread before destructors of global objects have been','line_number':261,'multiline':False]['text':'called.','line_number':262,'multiline':False]['text':'It will not be run when 'quick' exiting the','line_number':264,'multiline':False]['text':'library; however, this is the standard behaviour','line_number':265,'multiline':False]['text':'for destructors of global objects, so that','line_number':266,'multiline':False]['text':'shouldn't be a problem.','line_number':267,'multiline':False]['text':'Call Boost process entry callback here','line_number':271,'multiline':False]['text':'h','line_number':284,'multiline':True]['text':'pv','line_number':284,'multiline':True]['text':'namespace','line_number':318,'multiline':False]['text':'
        This function's sole purpose is to cause a link error in cases where
        automatic tss cleanup is not implemented by Boost.Threads as a
        reminder that user code is responsible for calling the necessary
        functions at the appropriate times (and for implementing an a
        tss_cleanup_implemented() function to eliminate the linker's
        missing symbol error).

        If Boost.Threads later implements automatic tss cleanup in cases
        where it currently doesn't (which is the plan), the duplicate
        symbol error will warn the user that their custom solution is no
        longer needed and can be removed.
        ','line_number':328,'multiline':True]['text':'defined(_MSC_VER) && !defined(UNDER_CE)','line_number':344,'multiline':False]['text':'defined(BOOST_THREAD_WIN32) && defined(BOOST_THREAD_BUILD_LIB)','line_number':346,'multiline':False]