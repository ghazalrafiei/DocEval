['text':' Copyright Vladimir Prus 2002-2004.','line_number':1,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt','line_number':3,'multiline':False]['text':' or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':' Initially, store the message in 'const char*' variable,','line_number':43,'multiline':False]['text':' to avoid conversion to string in all cases.','line_number':44,'multiline':False]['text':' none of the following are currently used:','line_number':57,'multiline':False]['text':' vc6 needs this, but borland chokes when this is added.','line_number':82,'multiline':False]['text':' Need to check that if guessing and long disguise are enabled','line_number':164,'multiline':False]['text':' -f will mean the same as -foo','line_number':165,'multiline':False]['text':' The parsing is done by having a set of 'style parsers'','line_number':208,'multiline':False]['text':' and trying then in order. Each parser is passed a vector','line_number':209,'multiline':False]['text':' of unparsed tokens and can consume some of them (by','line_number':210,'multiline':False]['text':' removing elements on front) and return a vector of options.','line_number':211,'multiline':False]['text':'','line_number':212,'multiline':False]['text':' We try each style parser in turn, untill some input','line_number':213,'multiline':False]['text':' is consumed. The returned vector of option may contain the','line_number':214,'multiline':False]['text':' result of just syntactic parsing of token, say --foo will','line_number':215,'multiline':False]['text':' be parsed as option with name 'foo', and the style parser','line_number':216,'multiline':False]['text':' is not required to care if that option is defined, and how','line_number':217,'multiline':False]['text':' many tokens the value may take.','line_number':218,'multiline':False]['text':' So, after vector is returned, we validate them.','line_number':219,'multiline':False]['text':' Check that option names','line_number':258,'multiline':False]['text':' are valid, and that all values are in place.','line_number':259,'multiline':False]['text':' For the last option, pass the unparsed tokens','line_number':266,'multiline':False]['text':' so that they can be added to next.back()'s values','line_number':267,'multiline':False]['text':' if appropriate.','line_number':268,'multiline':False]['text':' If an key option is followed by a positional option,
           can can consume more tokens (e.g. it's multitoken option),
           give those tokens to it.  ','line_number':289,'multiline':True]['text':' add context and rethrow','line_number':311,'multiline':False]['text':' This option may grab some more tokens.','line_number':323,'multiline':False]['text':' We only allow to grab tokens that are not already','line_number':324,'multiline':False]['text':' recognized as key options.','line_number':325,'multiline':False]['text':' We use INT_MAX to mark positional options that','line_number':337,'multiline':False]['text':' were found after the '--' terminator and therefore','line_number':338,'multiline':False]['text':' should stay positional forever.','line_number':339,'multiline':False]['text':' Assign position keys to positional options.','line_number':357,'multiline':False]['text':' set case sensitive flag','line_number':380,'multiline':False]['text':' it is a long option','line_number':385,'multiline':False]['text':' it is a short option','line_number':390,'multiline':False]['text':' ','line_number':406,'multiline':False]['text':' Be defensive:','line_number':407,'multiline':False]['text':' will have no original token if option created by handle_additional_parser()','line_number':408,'multiline':False]['text':' First check that the option is valid, and get its description.','line_number':415,'multiline':False]['text':' Canonize the name','line_number':432,'multiline':False]['text':' We check that the min/max number of tokens for the option','line_number':435,'multiline':False]['text':' agrees with the number of tokens we have. The 'adjacent_value'','line_number':436,'multiline':False]['text':' (the value in --foo=1) counts as a separate token, and if present','line_number':437,'multiline':False]['text':' must be consumed. The following tokens on the command line may be','line_number':438,'multiline':False]['text':' left unconsumed.','line_number':439,'multiline':False]['text':' Grab min_tokens values from other_tokens, but only if those tokens','line_number':453,'multiline':False]['text':' are not recognized as options themselves.','line_number':454,'multiline':False]['text':' Everything's OK, move the values to the result.','line_number':464,'multiline':False]['text':' check if extra parameter looks like a known option','line_number':467,'multiline':False]['text':' we use style parsers to check if it is syntactically an option, ','line_number':468,'multiline':False]['text':' additionally we check if an option_description exists','line_number':469,'multiline':False]['text':' use only original token for unknown_option / ambiguous_option since by definition','line_number':499,'multiline':False]['text':'    they are unrecognised / unparsable','line_number':500,'multiline':False]['text':' add context and rethrow','line_number':503,'multiline':False]['text':' Short options can be 'grouped', so that','line_number':558,'multiline':False]['text':' "-d -a" becomes "-da". Loop, processing one','line_number':559,'multiline':False]['text':' option at a time. We exit the loop when either','line_number':560,'multiline':False]['text':' we've processed all the token, or when the remainder','line_number':561,'multiline':False]['text':' of token is considered to be value, not further grouped','line_number':562,'multiline':False]['text':' option.','line_number':563,'multiline':False]['text':' add context and rethrow','line_number':574,'multiline':False]['text':' FIXME: check for 'allow_sticky'.','line_number':580,'multiline':False]['text':' 'adjacent' is in fact further option.','line_number':583,'multiline':False]['text':' add context and rethrow','line_number':657,'multiline':False]