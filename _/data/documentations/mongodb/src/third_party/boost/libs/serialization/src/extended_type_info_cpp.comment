['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':1,'multiline':False]['text':' extended_type_info.cpp: implementation for portable version of type_info','line_number':2,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com . ','line_number':4,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':5,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':9,'multiline':False]['text':' too long name, harmless warning','line_number':12,'multiline':False]['text':' NULL','line_number':19,'multiline':False]['text':' msvc needs this to suppress warning','line_number':26,'multiline':False]['text':' it marks our code with proper attributes as being exported when','line_number':30,'multiline':False]['text':' we're compiling it while marking it import when just the headers','line_number':31,'multiline':False]['text':' is being included.','line_number':32,'multiline':False]['text':' performance shortcut','line_number':55,'multiline':False]['text':' performance shortcut','line_number':62,'multiline':False]['text':' shortcut to exploit string pooling','line_number':63,'multiline':False]['text':' for exported types, use the string key so that','line_number':66,'multiline':False]['text':' multiple instances in different translation units','line_number':67,'multiline':False]['text':' can be matched up','line_number':68,'multiline':False]['text':'rhs','line_number':83,'multiline':True]['text':'rhs','line_number':88,'multiline':True]['text':'count','line_number':95,'multiline':True]['text':'p','line_number':99,'multiline':True]['text':' namespace detail','line_number':114,'multiline':False]['text':' note: it's been discovered that at least one platform is not guaranteed','line_number':127,'multiline':False]['text':' to destroy singletons reverse order of construction.  So we can't','line_number':128,'multiline':False]['text':' use a runtime assert here.  Leave this in a reminder not to do this!','line_number':129,'multiline':False]['text':' BOOST_ASSERT(! singleton<detail::ktmap>::is_destroyed());','line_number':130,'multiline':False]['text':' remove entry in map which corresponds to this type','line_number':135,'multiline':False]['text':' short cut for a common cases','line_number':172,'multiline':False]['text':' short cut for a common cases','line_number':185,'multiline':False]['text':' namespace serialization','line_number':194,'multiline':False]['text':' namespace boost','line_number':195,'multiline':False]