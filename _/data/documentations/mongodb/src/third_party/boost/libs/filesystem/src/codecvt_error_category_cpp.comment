['text':'  codecvt_error_category implementation file  ----------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2009 Beman Dawes','line_number':3,'multiline':False]['text':'  Copyright 2022 Andrey Semashev','line_number':4,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  Library home page at http://www.boost.org/libs/filesystem','line_number':9,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':11,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':25,'multiline':False]['text':' '(anonymous namespace)::codecvt_error_cat' has virtual functions but non-virtual destructor','line_number':34,'multiline':False]['text':' This is no a problem as instances of codecvt_error_cat are never destroyed through a pointer to base.','line_number':35,'multiline':False]['text':' clang up to version 3.8 requires a user-defined default constructor in order to be able to declare a static constant of the error category.','line_number':43,'multiline':False]['text':' unnamed namespace','line_number':82,'multiline':False]['text':' Try to initialize the error category instance as early as possible to make sure it is','line_number':96,'multiline':False]['text':' available during global deinitialization stage. For MSVC, codecvt_error_category() will','line_number':97,'multiline':False]['text':' be called early by MSVC-specific initialization routine in path.cpp.','line_number':98,'multiline':False]['text':' namespace','line_number':111,'multiline':False]['text':' !defined(BOOST_SYSTEM_HAS_CONSTEXPR) && !defined(_MSC_VER)','line_number':113,'multiline':False]['text':' namespace filesystem','line_number':115,'multiline':False]['text':' namespace boost','line_number':116,'multiline':False]