['text':'  platform_config.hpp  --------------------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2020 Andrey Semashev','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':6,'multiline':False]['text':'  See library home page at http://www.boost.org/libs/filesystem','line_number':8,'multiline':False]['text':'  define 64-bit offset macros BEFORE including boost/config.hpp (see ticket #5355)','line_number':13,'multiline':False]['text':' Android fully supports 64-bit file offsets only for API 24 and above.','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':' Trying to define _FILE_OFFSET_BITS=64 for APIs below 24','line_number':17,'multiline':False]['text':' leads to compilation failure for one or another reason,','line_number':18,'multiline':False]['text':' depending on target Android API level, Android NDK version,','line_number':19,'multiline':False]['text':' used STL, order of include paths and more.','line_number':20,'multiline':False]['text':' For more information, please see:','line_number':21,'multiline':False]['text':' - https://github.com/boostorg/filesystem/issues/65','line_number':22,'multiline':False]['text':' - https://github.com/boostorg/filesystem/pull/69','line_number':23,'multiline':False]['text':'','line_number':24,'multiline':False]['text':' Android NDK developers consider it the expected behavior.','line_number':25,'multiline':False]['text':' See their official position here:','line_number':26,'multiline':False]['text':' - https://github.com/android-ndk/ndk/issues/501#issuecomment-326447479','line_number':27,'multiline':False]['text':' - https://android.googlesource.com/platform/bionic/+/a34817457feee026e8702a1d2dffe9e92b51d7d1/docs/32-bit-abi.md#32_bit-abi-bugs','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' Thus we do not define _FILE_OFFSET_BITS in such case.','line_number':30,'multiline':False]['text':' Defining _FILE_OFFSET_BITS=64 should kick in 64-bit off_t's','line_number':32,'multiline':False]['text':' (and thus st_size) on 32-bit systems that provide the Large File','line_number':33,'multiline':False]['text':' Support (LFS) interface, such as Linux, Solaris, and IRIX.','line_number':34,'multiline':False]['text':'','line_number':35,'multiline':False]['text':' At the time of this comment writing (March 2018), on most systems','line_number':36,'multiline':False]['text':' _FILE_OFFSET_BITS=64 definition is harmless:','line_number':37,'multiline':False]['text':' either the definition is supported and enables 64-bit off_t,','line_number':38,'multiline':False]['text':' or the definition is not supported and is ignored, in which case','line_number':39,'multiline':False]['text':' off_t does not change its default size for the target system','line_number':40,'multiline':False]['text':' (which may be 32-bit or 64-bit already).','line_number':41,'multiline':False]['text':' Thus it makes sense to have _FILE_OFFSET_BITS=64 defined by default,','line_number':42,'multiline':False]['text':' instead of listing every system that supports the definition.','line_number':43,'multiline':False]['text':' Those few systems, on which _FILE_OFFSET_BITS=64 is harmful,','line_number':44,'multiline':False]['text':' for example this definition causes compilation failure on those systems,','line_number':45,'multiline':False]['text':' should be exempt from defining _FILE_OFFSET_BITS by adding','line_number':46,'multiline':False]['text':' an appropriate #elif block above with the appropriate comment.','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':' _FILE_OFFSET_BITS must be defined before any headers are included','line_number':49,'multiline':False]['text':' to ensure that the definition is available to all included headers.','line_number':50,'multiline':False]['text':' That is required at least on Solaris, and possibly on other','line_number':51,'multiline':False]['text':' systems as well.','line_number':52,'multiline':False]['text':' Enable newer ABI on Mac OS 10.5 and later, which is needed for struct stat to have birthtime members','line_number':57,'multiline':False]['text':' Sun readdir_r() needs this','line_number':62,'multiline':False]['text':' For HP-UX, request that WCHAR_MAX and WCHAR_MIN be defined as macros,','line_number':66,'multiline':False]['text':' not casts. See ticket 5048','line_number':67,'multiline':False]['text':' Define target Windows version macros before including any other headers','line_number':73,'multiline':False]['text':' BOOST_FILESYSTEM_PLATFORM_CONFIG_HPP_','line_number':83,'multiline':False]