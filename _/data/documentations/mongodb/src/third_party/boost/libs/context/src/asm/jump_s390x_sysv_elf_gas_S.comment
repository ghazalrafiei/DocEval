['text':'******************************************************
 *  -------------------------------------------------  *
 *  |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  *
 *  -------------------------------------------------  *
 *  |     0     |     8     |    16     |    24     |  *
 *  -------------------------------------------------  *
 *  |   t.fctx  |   t.data  |    r2     |    r6     |  *
 *  -------------------------------------------------  *
 *  -------------------------------------------------  *
 *  |  8  |  9  |  10 |  11 |  12 |  13 |  14 |  15 |  *
 *  -------------------------------------------------  *
 *  |     32    |    40     |     48    |     56    |  *
 *  -------------------------------------------------  *
 *  |     r7    |     r8    |     r9    |    r10    |  *
 *  -------------------------------------------------  *
 *  -------------------------------------------------  *
 *  |  16 |  17 |  18 |  19 |  20 |  21 |  22 |  23 |  *
 *  -------------------------------------------------  *
 *  |     64    |     72    |     80    |     88    |  *
 *  -------------------------------------------------  *
 *  |    r11    |    r12    |    r13    |    r14    |  *
 *  -------------------------------------------------  *
 *  -------------------------------------------------  *
 *  |  24 |  25 |  26 |  27 |  28 | 29  |  30 |  31 |  *
 *  -------------------------------------------------  *
 *  |     96    |    104    |    112    |    120    |  *
 *  -------------------------------------------------  *
 *  |     f8    |     f9    |    f10    |    f11    |  *
 *  -------------------------------------------------  *
 *  -------------------------------------------------  *
 *  |  32 |  33 |  34 |  35 |  36 |  37 |  38 |  39 |  *
 *  -------------------------------------------------  *
 *  |    128    |    136    |    144    |    152    |  *
 *  -------------------------------------------------  *
 *  |    f12    |    f13    |    f14    |    f15    |  *
 *  -------------------------------------------------  *
 *  -------------------------------------------------  *
 *  |  40 |  41 |  42 |  43 |  44 |  45 |  46 |  47 |  *
 *  -------------------------------------------------  *
 *  |    160    |    168    |    176    |           |  *
 *  -------------------------------------------------  *
 *  |    fpc    |     pc    |           |           |  *
 *  -------------------------------------------------  *
 ******************************************************','line_number':1,'multiline':True]['text':'

typedef void*   fcontext_t;

struct transfer_t {
   fcontext_t  fctx;
   void    *   data;
};

transfer_t jump_fcontext( fcontext_t const to,
			  void * data);

Incoming args
r2 - Hidden argument to the location where the return transfer_t needs to be returned
r3 - Context we want to switch to
r4 - Data pointer

','line_number':60,'multiline':True]['text':' Reserve stack space to store the current context.  ','line_number':81,'multiline':True]['text':' Save the argument register holding the location of the return value.  ','line_number':84,'multiline':True]['text':' Save the call-saved general purpose registers.  ','line_number':87,'multiline':True]['text':' Save call-saved floating point registers.  ','line_number':90,'multiline':True]['text':' Save the return address as current pc.  ','line_number':100,'multiline':True]['text':' Save the floating point control register.  ','line_number':103,'multiline':True]['text':' Backup the stack pointer pointing to the old context-data into r1.  ','line_number':106,'multiline':True]['text':' Load the new context pointer as stack pointer.  ','line_number':109,'multiline':True]['text':' Restore the call-saved GPRs from the new context.  ','line_number':112,'multiline':True]['text':' Restore call-saved floating point registers.  ','line_number':115,'multiline':True]['text':' Load the floating point control register.  ','line_number':125,'multiline':True]['text':' Restore PC - the location where we will jump to at the end.  ','line_number':128,'multiline':True]['text':' We restore a make_fcontext context.  Use the function
	   argument slot in the context we just saved and allocate the
	   register save area for the target function.  ','line_number':134,'multiline':True]['text':' Save the two fields in transfer_t.  When calling a
	   make_fcontext function this becomes the function argument of
	   the target function, otherwise it will be the return value of
	   jump_fcontext.  ','line_number':141,'multiline':True]['text':' Free the restored context.  ','line_number':148,'multiline':True]['text':' Jump to the PC loaded from the new context.  ','line_number':151,'multiline':True]