['text':'','line_number':1,'multiline':False]['text':'  Copyright (c) 2009-2015 Artyom Beilis (Tonkikh)','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' Under windows we have to use "_wfopen" to get','line_number':77,'multiline':False]['text':' access to path's with Unicode in them','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' As not all standard C++ libraries support nonstandard std::istream::open(wchar_t const *)','line_number':80,'multiline':False]['text':' we would use old and good stdio and _wfopen CRTL functions','line_number':81,'multiline':False]['text':'','line_number':82,'multiline':False]['text':' POSIX systems do not have all this Wide API crap, as native codepages are UTF-8','line_number':90,'multiline':False]['text':' We do not use encoding as we use native file name encoding','line_number':92,'multiline':False]['text':' encoding ','line_number':94,'multiline':True]['text':' EOT','line_number':138,'multiline':False]['text':'/ Not found','line_number':149,'multiline':False]['text':'/ If equal values return translation','line_number':152,'multiline':False]['text':'/ Rehash','line_number':155,'multiline':False]['text':' Read all format sizes','line_number':211,'multiline':False]['text':' if the size is wrong magic would be wrong','line_number':239,'multiline':False]['text':' ok to ingnore fread result','line_number':240,'multiline':False]['text':' shut GCC','line_number':242,'multiline':False]['text':' +1 to make sure the vector is not empty','line_number':257,'multiline':False]['text':'mo','line_number':302,'multiline':True]['text':'context','line_number':302,'multiline':True]['text':'key','line_number':302,'multiline':True]['text':'out_enc','line_number':322,'multiline':True]['text':' By default for wide types the conversion is not requiredyy','line_number':458,'multiline':False]['text':'buffer','line_number':461,'multiline':True]['text':'do_conversion','line_number':462,'multiline':True]['text':'locale_encoding','line_number':463,'multiline':True]['text':'key_encoding','line_number':464,'multiline':True]['text':' But still need to specialize for char','line_number':469,'multiline':False]['text':' Fallback to english plural form','line_number':517,'multiline':False]['text':'','line_number':549,'multiline':False]['text':' List of fallbacks: en_US@euro, en@euro, en_US, en. ','line_number':550,'multiline':False]['text':'','line_number':551,'multiline':False]['text':' Check if the mo file as-is is useful','line_number':679,'multiline':False]['text':' 1. It is char and not wide character','line_number':680,'multiline':False]['text':' 2. The locale encoding and mo encoding is same','line_number':681,'multiline':False]['text':' 3. The source strings encoding and mo encoding is same or all','line_number':682,'multiline':False]['text':'    mo key strings are US-ASCII','line_number':683,'multiline':False]['text':'/ size of charset=','line_number':711,'multiline':False]['text':'/ gnu_gettext','line_number':779,'multiline':False]['text':' locale','line_number':781,'multiline':False]['text':' boost','line_number':782,'multiline':False]['text':' vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4','line_number':783,'multiline':False]