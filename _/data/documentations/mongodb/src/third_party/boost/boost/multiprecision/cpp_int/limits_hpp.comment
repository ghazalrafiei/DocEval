['text':'/////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'  Copyright 2012 John Maddock. Distributed under the Boost','line_number':2,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':3,'multiline':False]['text':'  LICENSE_1_0.txt or copy at https://www.boost.org/LICENSE_1_0.txt','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' Comparison operators for cpp_int_backend:','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Bounded, signed, and no allocator.','line_number':26,'multiline':False]['text':' Bounded, signed, and an allocator (can't be constexpr).','line_number':42,'multiline':False]['text':' Bounded, unsigned, no allocator (can be constexpr):','line_number':53,'multiline':False]['text':' Bounded and std::size_t with allocator (no constexpr):','line_number':67,'multiline':False]['text':' Unbounded and signed, never constexpr because there must be an allocator.','line_number':76,'multiline':False]['text':' There is no minimum value, just return 0:','line_number':77,'multiline':False]['text':' Unbound and unsigned, never constexpr because there must be an allocator.','line_number':86,'multiline':False]['text':' Bounded and signed, no allocator, can be constexpr.','line_number':95,'multiline':False]['text':' Bounded and signed, has an allocator, never constexpr.','line_number':111,'multiline':False]['text':' Bound and unsigned, no allocator so can be constexpr:','line_number':122,'multiline':False]['text':' Bound and unsigned, has an allocator so can never be constexpr:','line_number':138,'multiline':False]['text':' Unbounded and signed.','line_number':149,'multiline':False]['text':' There is no maximum value, just return 0:','line_number':150,'multiline':False]['text':' Unbound and unsigned:','line_number':159,'multiline':False]['text':' namespace detail','line_number':164,'multiline':False]['text':'','line_number':174,'multiline':False]['text':' Largest and smallest numbers are bounded only by available memory, set','line_number':175,'multiline':False]['text':' to zero:','line_number':176,'multiline':False]['text':'','line_number':177,'multiline':False]['text':' namespace std','line_number':266,'multiline':False]