['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   date_time_format_parser.hpp
 * \author Andrey Semashev
 * \date   16.09.2012
 *
 * The header contains a parser for date and time format strings.
 ','line_number':7,'multiline':True]['text':'!
 * This is the interface the parser will use to notify the caller about various components of date in the format string.
 ','line_number':34,'multiline':True]['text':'! Character type used by the parser','line_number':40,'multiline':False]['text':'! Destructor','line_number':43,'multiline':False]['text':'!
     * \brief The function is called when the parser discovers a string literal in the format string
     *
     * \param lit The string of characters not interpreted as a placeholder
     ','line_number':46,'multiline':True]['text':'!
     * \brief The method is called when an unknown placeholder is found in the format string
     *
     * \param ph The placeholder with the leading percent sign
     ','line_number':53,'multiline':True]['text':' By default interpret all unrecognized placeholders as literals','line_number':60,'multiline':False]['text':'!
     * \brief The function is called when the short year placeholder is found in the format string
     ','line_number':64,'multiline':True]['text':'!
     * \brief The function is called when the full year placeholder is found in the format string
     ','line_number':73,'multiline':True]['text':'!
     * \brief The function is called when the numeric month placeholder is found in the format string
     ','line_number':82,'multiline':True]['text':'!
     * \brief The function is called when the short alphabetic month placeholder is found in the format string
     ','line_number':91,'multiline':True]['text':'!
     * \brief The function is called when the full alphabetic month placeholder is found in the format string
     ','line_number':100,'multiline':True]['text':'!
     * \brief The function is called when the numeric day of month placeholder is found in the format string
     *
     * \param leading_zero If \c true, the day should be formatted with leading zero, otherwise with leading space
     ','line_number':109,'multiline':True]['text':'!
     * \brief The function is called when the numeric day of week placeholder is found in the format string
     ','line_number':120,'multiline':True]['text':'!
     * \brief The function is called when the short alphabetic day of week placeholder is found in the format string
     ','line_number':129,'multiline':True]['text':'!
     * \brief The function is called when the full alphabetic day of week placeholder is found in the format string
     ','line_number':138,'multiline':True]['text':'!
     * \brief The function is called when the ISO-formatted date is found in the format string
     ','line_number':147,'multiline':True]['text':'!
     * \brief The function is called when the extended ISO-formatted date is found in the format string
     ','line_number':157,'multiline':True]['text':'!
 * This is the interface the parser will use to notify the caller about various components of date in the format string.
 ','line_number':171,'multiline':True]['text':'! Character type used by the parser','line_number':177,'multiline':False]['text':'! Destructor','line_number':180,'multiline':False]['text':'!
     * \brief The function is called when the parser discovers a string literal in the format string
     *
     * \param lit The string of characters not interpreted as a placeholder
     ','line_number':183,'multiline':True]['text':'!
     * \brief The method is called when an unknown placeholder is found in the format string
     *
     * \param ph The placeholder with the leading percent sign
     ','line_number':190,'multiline':True]['text':' By default interpret all unrecognized placeholders as literals','line_number':197,'multiline':False]['text':'!
     * \brief The function is called when the hours placeholder is found in the format string
     *
     * The placeholder is used for 24-hour clock and duration formatting.
     *
     * \param leading_zero If \c true, the one-digit number of hours should be formatted with leading zero, otherwise with leading space
     ','line_number':201,'multiline':True]['text':'!
     * \brief The function is called when the hours placeholder is found in the format string
     *
     * The placeholder is used for 12-hour clock formatting. It should not be used for duration formatting.
     *
     * \param leading_zero If \c true, the one-digit number of hours should be formatted with leading zero, otherwise with leading space
     ','line_number':214,'multiline':True]['text':'!
     * \brief The function is called when the minutes placeholder is found in the format string
     ','line_number':227,'multiline':True]['text':'!
     * \brief The function is called when the seconds placeholder is found in the format string
     ','line_number':236,'multiline':True]['text':'!
     * \brief The function is called when the fractional seconds placeholder is found in the format string
     ','line_number':245,'multiline':True]['text':'!
     * \brief The function is called when the day period (AM/PM) placeholder is found in the format string
     *
     * The placeholder is used for 12-hour clock formatting. It should not be used for duration formatting.
     *
     * \param upper_case If \c true, the day period will be upper case, and lower case otherwise
     ','line_number':254,'multiline':True]['text':'!
     * \brief The function is called when the time duration sign placeholder is found in the format string
     *
     * The placeholder is used for duration formatting. It should not be used for time point formatting.
     *
     * \param display_positive If \c true, the positive sign will be explicitly displayed, otherwise only negative sign will be displayed
     ','line_number':267,'multiline':True]['text':'!
     * \brief The function is called when the ISO time zone placeholder is found in the format string
     ','line_number':280,'multiline':True]['text':'!
     * \brief The function is called when the extended ISO time zone placeholder is found in the format string
     ','line_number':289,'multiline':True]['text':'!
     * \brief The function is called when the ISO-formatted time is found in the format string
     ','line_number':298,'multiline':True]['text':'!
     * \brief The function is called when the extended ISO-formatted time is found in the format string
     ','line_number':308,'multiline':True]['text':'!
     * \brief The function is called when the extended ISO-formatted time with fractional seconds is found in the format string
     ','line_number':321,'multiline':True]['text':'!
 * This is the interface the parser will use to notify the caller about various components of date in the format string.
 ','line_number':334,'multiline':True]['text':'! Character type used by the parser','line_number':342,'multiline':False]['text':'! Destructor','line_number':345,'multiline':False]['text':'!
     * \brief The function is called when the parser discovers a string literal in the format string
     *
     * \param lit The string of characters not interpreted as a placeholder
     ','line_number':348,'multiline':True]['text':'!
     * \brief The method is called when an unknown placeholder is found in the format string
     *
     * \param ph The placeholder with the leading percent sign
     ','line_number':355,'multiline':True]['text':' By default interpret all unrecognized placeholders as literals','line_number':362,'multiline':False]['text':'!
 * \brief Parses the date format string and invokes the callback object
 *
 * \pre <tt>begin <= end</tt>, both pointers must not be \c NULL
 * \param begin Pointer to the first character of the sequence
 * \param end Pointer to the after-the-last character of the sequence
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':367,'multiline':True]['text':'!
 * \brief Parses the date format string and invokes the callback object
 *
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':378,'multiline':True]['text':'!
 * \brief Parses the date format string and invokes the callback object
 *
 * \pre <tt>str != NULL</tt>, <tt>str</tt> points to a zero-terminated string.
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':391,'multiline':True]['text':'!
 * \brief Parses the time format string and invokes the callback object
 *
 * \pre <tt>begin <= end</tt>, both pointers must not be \c NULL
 * \param begin Pointer to the first character of the sequence
 * \param end Pointer to the after-the-last character of the sequence
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':404,'multiline':True]['text':'!
 * \brief Parses the time format string and invokes the callback object
 *
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':415,'multiline':True]['text':'!
 * \brief Parses the time format string and invokes the callback object
 *
 * \pre <tt>str != NULL</tt>, <tt>str</tt> points to a zero-terminated string.
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':428,'multiline':True]['text':'!
 * \brief Parses the date and time format string and invokes the callback object
 *
 * \pre <tt>begin <= end</tt>, both pointers must not be \c NULL
 * \param begin Pointer to the first character of the sequence
 * \param end Pointer to the after-the-last character of the sequence
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':441,'multiline':True]['text':'!
 * \brief Parses the date and time format string and invokes the callback object
 *
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':452,'multiline':True]['text':'!
 * \brief Parses the date and time format string and invokes the callback object
 *
 * \pre <tt>str != NULL</tt>, <tt>str</tt> points to a zero-terminated string.
 * \param str The format string to parse
 * \param callback Reference to the callback object that will be invoked by the parser as it processes the input
 ','line_number':465,'multiline':True]['text':' namespace aux','line_number':478,'multiline':False]['text':' namespace log','line_number':480,'multiline':False]['text':' namespace boost','line_number':482,'multiline':False]['text':' BOOST_LOG_DETAIL_DATE_TIME_FORMAT_PARSER_HPP_INCLUDED_','line_number':486,'multiline':False]