['text':'  Copyright (c) 2001-2013 Hartmut Kaiser','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':3,'multiline':False]['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':' Work around the MPL problem in BOOST_MPL_ASSERT_MSG generating','line_number':15,'multiline':False]['text':' multiple definition linker errors for certain compilers (VC++ 8).','line_number':16,'multiline':False]['text':' BOOST_SPIRIT_DONT_USE_MPL_ASSERT_MSG can also be defined by user.','line_number':17,'multiline':False]['text':' GCC 4.7 will overeagerly instantiate static_asserts in template functions,','line_number':39,'multiline':False]['text':' if the assert condition does not depend on template parameters','line_number':40,'multiline':False]['text':' (see https://svn.boost.org/trac/boost/ticket/8381).','line_number':41,'multiline':False]['text':' There are places where we want to use constant false as the condition in','line_number':42,'multiline':False]['text':' template functions to indicate that these function overloads should never','line_number':43,'multiline':False]['text':' be called. This allows to generate better error messages. To solve this','line_number':44,'multiline':False]['text':' problem we make the condition dependent on the template argument and use','line_number':45,'multiline':False]['text':' the following macro in such places.','line_number':46,'multiline':False]