['text':'/////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'  Copyright 2010 - 2021 Douglas Gregor','line_number':2,'multiline':False]['text':'  Copyright 2021 Matt Borland.','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':4,'multiline':False]['text':'  See accompanying file LICENSE_1_0.txt or copy at https://www.boost.org/LICENSE_1_0.txt','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'  Used to support configuration options depending on standalone context','line_number':7,'multiline':False]['text':'  by providing either required support or disabling functionality  ','line_number':8,'multiline':False]['text':' Boost.Config is dependency free so it is considered a requirement to use Boost.Multiprecision in standalone mode','line_number':14,'multiline':False]['text':' If any of the most frequently used boost headers are missing assume that standalone mode is supposed to be used','line_number':18,'multiline':False]['text':' Required typedefs for interoperability with standalone mode','line_number':33,'multiline':False]['text':' Boost.Math available by default','line_number':46,'multiline':False]['text':' Standalone mode','line_number':49,'multiline':False]['text':' Prevent Macro sub','line_number':59,'multiline':False]['text':' same again for __float128:','line_number':76,'multiline':False]['text':' BOOST_MP_STANDALONE','line_number':88,'multiline':False]['text':' Workarounds for numeric limits on old compilers','line_number':90,'multiline':False]['text':' BOOST_MP_STANDALONE_CONFIG_HPP','line_number':103,'multiline':False]