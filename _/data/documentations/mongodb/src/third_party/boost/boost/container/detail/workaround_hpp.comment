['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2013. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'Macros for documentation purposes. For code, expands to the argument','line_number':54,'multiline':False]['text':'Macros for memset optimization. In most platforms','line_number':58,'multiline':False]['text':'memsetting pointers and floatings is safe and faster.','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':'If your platform does not offer these guarantees','line_number':61,'multiline':False]['text':'define these to value zero.','line_number':62,'multiline':False]['text':'
   we need to import/export our code only if the user has specifically
   asked for it by defining either BOOST_ALL_DYN_LINK if they want all boost
   libraries to be dynamically linked, or BOOST_CONTAINER_DYN_LINK
   if they want just this one to be dynamically liked:
','line_number':76,'multiline':True]['text':' export if this is our own source, otherwise import: ','line_number':84,'multiline':True]['text':' BOOST_CONTAINER_SOURCE ','line_number':90,'multiline':True]['text':' DYN_LINK ','line_number':93,'multiline':True]['text':'#define BOOST_CONTAINER_DISABLE_FORCEINLINE','line_number':95,'multiline':False]['text':'"__forceinline" and MSVC seems to have some bugs in old versions and in debug mode','line_number':102,'multiline':False]['text':'#elif defined(__GNUC__) && ((__GNUC__ < 4) || (__GNUC__ == 4 && (__GNUC_MINOR__ < 5)))','line_number':104,'multiline':False]['text':'Older GCCs have problems with forceinline','line_number':106,'multiline':False]['text':'#define BOOST_CONTAINER_DISABLE_NOINLINE','line_number':112,'multiline':False]['text':'Detect address sanitizer','line_number':127,'multiline':False]['text':'Avoid using it in C++ < 17 and GCC < 10 because it warns in SFINAE contexts','line_number':141,'multiline':False]['text':'(see https://gcc.gnu.org/bugzilla/show_bug.cgi?id=89070)','line_number':142,'multiline':False]['text':'Configuration options:','line_number':150,'multiline':False]['text':'Define this to use std exception types instead of boost::container's own exception types','line_number':152,'multiline':False]['text':'#define BOOST_CONTAINER_USE_STD_EXCEPTIONS','line_number':153,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DETAIL_WORKAROUND_HPP','line_number':158,'multiline':False]