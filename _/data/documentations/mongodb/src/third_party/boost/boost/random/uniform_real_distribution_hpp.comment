['text':' boost random/uniform_real_distribution.hpp header file
 *
 * Copyright Jens Maurer 2000-2001
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 ','line_number':1,'multiline':True]['text':'* is_integral<Engine::result_type> ','line_number':35,'multiline':True]['text':'* is_integral<Engine::result_type> ','line_number':51,'multiline':True]['text':'*
 * The class template uniform_real_distribution models a \random_distribution.
 * On each invocation, it returns a random floating-point value uniformly
 * distributed in the range [min..max).
 ','line_number':77,'multiline':True]['text':'*
         * Constructs the parameters of a uniform_real_distribution.
         *
         * Requires min <= max
         ','line_number':95,'multiline':True]['text':'* Returns the minimum value of the distribution. ','line_number':107,'multiline':True]['text':'* Returns the maximum value of the distribution. ','line_number':109,'multiline':True]['text':'* Writes the parameters to a @c std::ostream. ','line_number':112,'multiline':True]['text':'* Reads the parameters from a @c std::istream. ','line_number':119,'multiline':True]['text':'* Returns true if the two sets of parameters are equal. ','line_number':134,'multiline':True]['text':'* Returns true if the two sets of parameters are different. ','line_number':138,'multiline':True]['text':'*
     * Constructs a uniform_real_distribution. @c min and @c max are
     * the parameters of the distribution.
     *
     * Requires: min <= max
     ','line_number':147,'multiline':True]['text':'* Constructs a uniform_real_distribution from its parameters. ','line_number':160,'multiline':True]['text':'*  Returns the minimum value of the distribution ','line_number':164,'multiline':True]['text':'*  Returns the maximum value of the distribution ','line_number':166,'multiline':True]['text':'*  Returns the minimum value of the distribution ','line_number':169,'multiline':True]['text':'*  Returns the maximum value of the distribution ','line_number':171,'multiline':True]['text':'* Returns the parameters of the distribution. ','line_number':174,'multiline':True]['text':'* Sets the parameters of the distribution. ','line_number':176,'multiline':True]['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':183,'multiline':True]['text':'* Returns a value uniformly distributed in the range [min, max). ','line_number':189,'multiline':True]['text':'*
     * Returns a value uniformly distributed in the range
     * [param.a(), param.b()).
     ','line_number':194,'multiline':True]['text':'* Writes the distribution to a @c std::ostream. ','line_number':202,'multiline':True]['text':'* Reads the distribution from a @c std::istream. ','line_number':209,'multiline':True]['text':'*
     * Returns true if the two distributions will produce identical sequences
     * of values given equal generators.
     ','line_number':219,'multiline':True]['text':'*
     * Returns true if the two distributions may produce different sequences
     * of values given equal generators.
     ','line_number':226,'multiline':True]['text':' namespace random','line_number':237,'multiline':False]['text':' namespace boost','line_number':238,'multiline':False]['text':' BOOST_RANDOM_UNIFORM_INT_HPP','line_number':240,'multiline':False]