['text':' Copyright (c) 2002,2003,2005 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 ','line_number':4,'multiline':True]['text':'! @file c_time.hpp
  Provide workarounds related to the ctime header
','line_number':13,'multiline':True]['text':' to be able to convert from string literals to exceptions','line_number':18,'multiline':False]['text':'Work around libraries that don't put time_t and time in namespace std','line_number':23,'multiline':False]['text':' BOOST_NO_STDC_NAMESPACE','line_number':27,'multiline':False]['text':'The following is used to support high precision time clocks','line_number':29,'multiline':False]['text':'! Provides a uniform interface to some 'ctime' functions','line_number':40,'multiline':False]['text':'! Provides a uniform interface to some ctime functions and
   * their '_r' counterparts. The '_r' functions require a pointer to a
   * user created std::tm struct whereas the regular functions use a
   * staticly created struct and return a pointer to that. These wrapper
   * functions require the user to create a std::tm struct and send in a
   * pointer to it. This struct may be used to store the resulting time.
   * The returned pointer may or may not point to this struct, however,
   * it will point to the result of the corresponding function.
   * All functions do proper checking of the C function results and throw
   * exceptions on error. Therefore the functions will never return NULL.
   ','line_number':41,'multiline':True]['text':'! requires a pointer to a user created std::tm struct','line_number':55,'multiline':False]['text':' localtime_r() not in namespace std???','line_number':59,'multiline':False]['text':'! requires a pointer to a user created std::tm struct','line_number':73,'multiline':False]['text':' gmtime_r() not in namespace std???','line_number':77,'multiline':False]['text':' BOOST_DATE_TIME_HAS_REENTRANT_STD_FUNCTIONS','line_number':91,'multiline':False]['text':' Clang has to be checked before MSVC','line_number':93,'multiline':False]['text':' preserve warning settings','line_number':97,'multiline':False]['text':' disable depricated localtime/gmtime warning on vc8','line_number':98,'multiline':False]['text':'! requires a pointer to a user created std::tm struct','line_number':100,'multiline':False]['text':'! requires a pointer to a user created std::tm struct','line_number':109,'multiline':False]['text':' Clang has to be checked before MSVC','line_number':118,'multiline':False]['text':' restore warnings to previous state','line_number':121,'multiline':False]['text':' BOOST_DATE_TIME_HAS_REENTRANT_STD_FUNCTIONS','line_number':124,'multiline':False]['text':' namespaces','line_number':126,'multiline':False]['text':' DATE_TIME_C_TIME_HPP___','line_number':128,'multiline':False]