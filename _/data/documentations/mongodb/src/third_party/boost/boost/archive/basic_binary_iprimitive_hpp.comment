['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':13,'multiline':False]['text':' basic_binary_iprimitive.hpp','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' archives stored as native binary - this should be the fastest way','line_number':16,'multiline':False]['text':' to archive the state of a group of obects.  It makes no attempt to','line_number':17,'multiline':False]['text':' convert to any canonical form.','line_number':18,'multiline':False]['text':' IN GENERAL, ARCHIVES CREATED WITH THIS CLASS WILL NOT BE READABLE','line_number':20,'multiline':False]['text':' ON PLATFORM APART FROM THE ONE THEY ARE CREATED ON','line_number':21,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':23,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':24,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':25,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':26,'multiline':False]['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':28,'multiline':False]['text':' std::memcpy','line_number':33,'multiline':False]['text':' std::size_t','line_number':34,'multiline':False]['text':' basic_streambuf','line_number':35,'multiline':False]['text':' namespace std','line_number':43,'multiline':False]['text':' must be the last header','line_number':58,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////////','line_number':63,'multiline':False]['text':' class binary_iarchive - read serialized objects from a input binary stream','line_number':64,'multiline':False]['text':' return a pointer to the most derived class','line_number':74,'multiline':False]['text':' note order! - if you change this, libstd++ will fail!','line_number':80,'multiline':False]['text':' a) create new locale with new codecvt facet','line_number':81,'multiline':False]['text':' b) save current locale','line_number':82,'multiline':False]['text':' c) change locale to new one','line_number':83,'multiline':False]['text':' d) use stream buffer','line_number':84,'multiline':False]['text':' e) change locale back to original','line_number':85,'multiline':False]['text':' f) destroy new codecvt facet','line_number':86,'multiline':False]['text':' main template for serilization of primitive types','line_number':92,'multiline':False]['text':'///////////////////////////////////////////////////////','line_number':98,'multiline':False]['text':' fundamental types that need special treatment','line_number':99,'multiline':False]['text':' trap usage of invalid uninitialized boolean','line_number':101,'multiline':False]['text':' warning suppression for release builds.','line_number':106,'multiline':False]['text':' we provide an optimized load for all fundamental types','line_number':129,'multiline':False]['text':' typedef serialization::is_bitwise_serializable<mpl::_1>','line_number':130,'multiline':False]['text':' use_array_optimization;','line_number':131,'multiline':False]['text':' the optimized load_array dispatches to load_binary','line_number':143,'multiline':False]['text':' note: an optimizer should eliminate the following for char files','line_number':160,'multiline':False]['text':' note: an optimizer should eliminate the following for char files','line_number':174,'multiline':False]['text':'        if(is.fail())','line_number':178,'multiline':False]['text':'            boost::serialization::throw_exception(','line_number':179,'multiline':False]['text':'                archive_exception(archive_exception::stream_error)','line_number':180,'multiline':False]['text':'        );','line_number':181,'multiline':False]['text':' namespace archive','line_number':192,'multiline':False]['text':' namespace boost','line_number':193,'multiline':False]['text':' pop pragmas','line_number':195,'multiline':False]['text':' BOOST_ARCHIVE_BINARY_IPRIMITIVE_HPP','line_number':197,'multiline':False]