['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   settings.hpp
 * \author Andrey Semashev
 * \date   11.10.2009
 *
 * The header contains definition of the library settings container.
 ','line_number':7,'multiline':True]['text':' This workaround is needed for MSVC 10 to work around ICE caused by stack overflow','line_number':48,'multiline':False]['text':' namespace aux','line_number':80,'multiline':False]['text':'!
 * \brief The class represents a reference to the settings container section
 *
 * The section refers to a sub-tree of the library settings container. It does not
 * own the referred sub-tree but allows for convenient access to parameters within the subsection.
 ','line_number':82,'multiline':True]['text':'! Character type','line_number':95,'multiline':False]['text':'! String type','line_number':97,'multiline':False]['text':'! Property tree type','line_number':99,'multiline':False]['text':'! Property tree path type','line_number':101,'multiline':False]['text':'! A reference proxy object','line_number':107,'multiline':False]['text':' GCC up to 4.5 (inclusively) segfaults on the following code, if C++11 mode is not enabled','line_number':236,'multiline':False]['text':'! An iterator over subsections and parameters','line_number':279,'multiline':False]['text':' NOTE: This typedef must not come from iterator_adaptor_::base_type in order to work around MSVC 10 ICE','line_number':293,'multiline':False]['text':'! Returns the section name','line_number':305,'multiline':False]['text':'!
     * Constant reference to the parameter value
     ','line_number':329,'multiline':True]['text':'!
     * Mutable reference to the parameter value
     ','line_number':333,'multiline':True]['text':'!
     * Constant iterator over nested parameters and subsections
     ','line_number':338,'multiline':True]['text':'!
     * Mutable iterator over nested parameters and subsections
     ','line_number':342,'multiline':True]['text':' !defined(BOOST_LOG_DOXYGEN_PASS)','line_number':347,'multiline':False]['text':'! Parameters','line_number':350,'multiline':False]['text':'!
     * Default constructor. Creates an empty settings container.
     ','line_number':354,'multiline':True]['text':'!
     * Copy constructor.
     ','line_number':361,'multiline':True]['text':'!
     * Checks if the section refers to the container.
     ','line_number':368,'multiline':True]['text':'!
     * Checks if the section refers to the container.
     ','line_number':373,'multiline':True]['text':'!
     * Returns an iterator over the nested subsections and parameters.
     ','line_number':378,'multiline':True]['text':'!
     * Returns an iterator over the nested subsections and parameters.
     ','line_number':389,'multiline':True]['text':'!
     * Returns an iterator over the nested subsections and parameters.
     ','line_number':400,'multiline':True]['text':'!
     * Returns an iterator over the nested subsections and parameters.
     ','line_number':411,'multiline':True]['text':'!
     * Returns a reverse iterator over the nested subsections and parameters.
     ','line_number':422,'multiline':True]['text':'!
     * Returns a reverse iterator over the nested subsections and parameters.
     ','line_number':427,'multiline':True]['text':'!
     * Returns a reverse iterator over the nested subsections and parameters.
     ','line_number':432,'multiline':True]['text':'!
     * Returns a reverse iterator over the nested subsections and parameters.
     ','line_number':437,'multiline':True]['text':'!
     * Checks if the container is empty (i.e. contains no sections and parameters).
     ','line_number':442,'multiline':True]['text':'!
     * Accessor to a single parameter. This operator should be used in conjunction
     * with the subsequent subscript operator that designates the parameter name.
     *
     * \param section_name The name of the section in which the parameter resides
     * \return An unspecified reference type that can be used for parameter name specifying
     ','line_number':447,'multiline':True]['text':'!
     * Accessor to a single parameter. This operator should be used in conjunction
     * with the subsequent subscript operator that designates the parameter name.
     *
     * \param section_name The name of the section in which the parameter resides
     * \return An unspecified reference type that can be used for parameter name specifying
     ','line_number':455,'multiline':True]['text':'!
     * Accessor to a single parameter. This operator should be used in conjunction
     * with the subsequent subscript operator that designates the parameter name.
     *
     * \param section_name The name of the section in which the parameter resides
     * \return An unspecified reference type that can be used for parameter name specifying
     ','line_number':464,'multiline':True]['text':'!
     * Accessor to a single parameter. This operator should be used in conjunction
     * with the subsequent subscript operator that designates the parameter name.
     *
     * \param section_name The name of the section in which the parameter resides
     * \return An unspecified reference type that can be used for parameter name specifying
     ','line_number':472,'multiline':True]['text':'!
     * Accessor for the embedded property tree
     ','line_number':481,'multiline':True]['text':'!
     * Accessor for the embedded property tree
     ','line_number':485,'multiline':True]['text':'!
     * Checks if the specified section is present in the container.
     *
     * \param section_name The name of the section
     ','line_number':490,'multiline':True]['text':'!
     * Checks if the specified parameter is present in the container.
     *
     * \param section_name The name of the section in which the parameter resides
     * \param param_name The name of the parameter
     ','line_number':499,'multiline':True]['text':'!
     * Swaps two references to settings sections.
     ','line_number':517,'multiline':True]['text':'!
 * \brief The class represents settings container
 *
 * All settings are presented as a number of named parameters divided into named sections.
 * The parameters values are stored as strings. Individual parameters may be queried via subscript operators, like this:
 *
 * <code><pre>
 * optional< string > param = settings["Section1"]["Param1"]; // reads parameter "Param1" in section "Section1"
 *                                                            // returns an empty value if no such parameter exists
 * settings["Section2"]["Param2"] = 10; // sets the parameter "Param2" in section "Section2"
 *                                      // to value "10"
 * </pre></code>
 *
 * There are also other methods to work with parameters.
 ','line_number':540,'multiline':True]['text':'! Section type','line_number':563,'multiline':False]['text':'! Property tree type','line_number':565,'multiline':False]['text':'!
     * Default constructor. Creates an empty settings container.
     ','line_number':569,'multiline':True]['text':'!
     * Copy constructor.
     ','line_number':576,'multiline':True]['text':'!
     * Move constructor.
     ','line_number':584,'multiline':True]['text':'!
     * Initializing constructor. Creates a settings container with the copy of the specified property tree.
     ','line_number':591,'multiline':True]['text':'!
     * Destructor
     ','line_number':598,'multiline':True]['text':'!
     * Copy assignment operator.
     ','line_number':606,'multiline':True]['text':'!
     * Move assignment operator.
     ','line_number':618,'multiline':True]['text':'!< Convenience typedef for narrow-character logging','line_number':629,'multiline':False]['text':'!< Convenience typedef for narrow-character logging','line_number':630,'multiline':False]['text':'!< Convenience typedef for wide-character logging','line_number':633,'multiline':False]['text':'!< Convenience typedef for wide-character logging','line_number':634,'multiline':False]['text':' namespace log','line_number':637,'multiline':False]['text':' namespace boost','line_number':639,'multiline':False]['text':' BOOST_LOG_UTILITY_SETUP_SETTINGS_HPP_INCLUDED_','line_number':643,'multiline':False]