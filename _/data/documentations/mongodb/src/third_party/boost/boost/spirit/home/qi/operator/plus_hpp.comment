['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman
    Copyright (c) 2001-2011 Hartmut Kaiser

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':29,'multiline':False]['text':' Enablers','line_number':30,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':31,'multiline':False]['text':' enables +p','line_number':33,'multiline':False]['text':' Build a std::vector from the subject's attribute. Note','line_number':47,'multiline':False]['text':' that build_std_vector may return unused_type if the','line_number':48,'multiline':False]['text':' subject's attribute is an unused_type.','line_number':49,'multiline':False]['text':' in order to succeed we need to match at least one element ','line_number':64,'multiline':False]['text':' ensure the attribute is actually a container type','line_number':82,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':103,'multiline':False]['text':' Parser generators: make_xxx function (objects)','line_number':104,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':105,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':114,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':119,'multiline':False]