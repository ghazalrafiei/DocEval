['text':'==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010      Eric Niebler
    Copyright (c) 2014-2015 John Fletcher
    Copyright (c) 2016      Kohei Takahashi

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]['text':'////////////////////////////////////////////////////////////////////////','line_number':16,'multiline':False]['text':' This section is to sort out whether hash types or unordered types','line_number':17,'multiline':False]['text':' are available. This depends on whether stdlib or libc++ is being used','line_number':18,'multiline':False]['text':' and also whether C++11 or C++03 is being used.','line_number':19,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////','line_number':20,'multiline':False]['text':' The idea is to set up the configuration without including the actual','line_number':21,'multiline':False]['text':' headers unless that is unavoidable.','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' The client code should contain the following to include headers','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':' #ifdef BOOST_PHOENIX_HAS_HASH','line_number':26,'multiline':False]['text':' #include BOOST_PHOENIX_HASH_SET_HEADER','line_number':27,'multiline':False]['text':' #include BOOST_PHOENIX_HASH_MAP_HEADER','line_number':28,'multiline':False]['text':' #endif','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':' #ifdef BOOST_PHOENIX_HAS_UNORDERED_SET_AND_MAP','line_number':31,'multiline':False]['text':' #include BOOST_PHOENIX_UNORDERED_SET_HEADER','line_number':32,'multiline':False]['text':' #include BOOST_PHOENIX_UNORDERED_MAP_HEADER','line_number':33,'multiline':False]['text':' #endif','line_number':34,'multiline':False]['text':'','line_number':35,'multiline':False]['text':' The client code can then chose the implementation provided.','line_number':36,'multiline':False]['text':' See the example in test/stl/querying_find2.cpp','line_number':37,'multiline':False]['text':' There is no specific thing in Boost Config for libc++','line_number':39,'multiline':False]['text':' This may not be true for some very old version of libc++','line_number':44,'multiline':False]['text':' Current libc++ supports unordered_set and unordered_map without C++11.','line_number':45,'multiline':False]['text':' This is either libc++ or C++11 or later','line_number':48,'multiline':False]['text':' This is to sort out case of Clang when using stdlib from gcc','line_number':56,'multiline':False]['text':' as Clang thinks it is gcc 4.2.1','line_number':57,'multiline':False]['text':' This prevents the failure to include a header with a warning.','line_number':58,'multiline':False]