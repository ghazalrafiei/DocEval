['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2014-2014. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'BOOST_INTRUSIVE_DETAIL_WORKAROUND_HPP','line_number':16,'multiline':False]['text':'/////////////////////////','line_number':29,'multiline':False]['text':'struct pointer_rebind_mode','line_number':30,'multiline':False]['text':'/////////////////////////','line_number':31,'multiline':False]['text':'//////////////////////','line_number':70,'multiline':False]['text':'struct pointer_rebinder','line_number':71,'multiline':False]['text':'//////////////////////','line_number':72,'multiline':False]['text':' Implementation of pointer_rebinder<U>::type if Ptr has','line_number':76,'multiline':False]['text':' its own rebind<U>::other type (C++03)','line_number':77,'multiline':False]['text':' Implementation of pointer_rebinder<U>::type if Ptr has','line_number':84,'multiline':False]['text':' its own rebind template.','line_number':85,'multiline':False]['text':' Specialization of pointer_rebinder if Ptr does not','line_number':92,'multiline':False]['text':' have its own rebind template but has a the form Ptr<A, An...>,','line_number':93,'multiline':False]['text':' where An... comprises zero or more type parameters.','line_number':94,'multiline':False]['text':' Many types fit this form, hence many pointers will get a','line_number':95,'multiline':False]['text':' reasonable default for rebind.','line_number':96,'multiline':False]['text':'Needed for non-conforming compilers like GCC 4.3','line_number':105,'multiline':False]['text':'C++03 compilers','line_number':112,'multiline':False]['text':'0arg','line_number':114,'multiline':False]['text':'1arg','line_number':120,'multiline':False]['text':'2arg','line_number':126,'multiline':False]['text':'3arg','line_number':132,'multiline':False]['text':'4arg','line_number':138,'multiline':False]['text':'5arg','line_number':144,'multiline':False]['text':'6arg','line_number':150,'multiline':False]['text':'7arg','line_number':156,'multiline':False]['text':'8arg','line_number':162,'multiline':False]['text':'9arg','line_number':168,'multiline':False]['text':'!defined(BOOST_NO_CXX11_VARIADIC_TEMPLATES)','line_number':174,'multiline':False]['text':'namespace container {','line_number':185,'multiline':False]['text':'namespace boost {','line_number':186,'multiline':False]['text':' defined(BOOST_INTRUSIVE_POINTER_REBIND_HPP)','line_number':188,'multiline':False]