['text':'','line_number':1,'multiline':False]['text':' buffered_stream.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':'/ Adds buffering to the read- and write-related operations of a stream.','line_number':32,'multiline':False]['text':'*
 * The buffered_stream class template can be used to add buffering to the
 * synchronous and asynchronous read and write operations of a stream.
 *
 * @par Thread Safety
 * @e Distinct @e objects: Safe.@n
 * @e Shared @e objects: Unsafe.
 *
 * @par Concepts:
 * AsyncReadStream, AsyncWriteStream, Stream, SyncReadStream, SyncWriteStream.
 ','line_number':33,'multiline':True]['text':'/ The type of the next layer.','line_number':49,'multiline':False]['text':'/ The type of the lowest layer.','line_number':52,'multiline':False]['text':'/ The type of the executor associated with the object.','line_number':55,'multiline':False]['text':'/ Construct, passing the specified argument to initialise the next layer.','line_number':58,'multiline':False]['text':'/ Construct, passing the specified argument to initialise the next layer.','line_number':66,'multiline':False]['text':'/ Get a reference to the next layer.','line_number':75,'multiline':False]['text':'/ Get a reference to the lowest layer.','line_number':81,'multiline':False]['text':'/ Get a const reference to the lowest layer.','line_number':87,'multiline':False]['text':'/ Get the executor associated with the object.','line_number':93,'multiline':False]['text':'/ Close the stream.','line_number':99,'multiline':False]['text':'/ Close the stream.','line_number':105,'multiline':False]['text':'/ Flush all data from the buffer to the next layer. Returns the number of','line_number':112,'multiline':False]['text':'/ bytes written to the next layer on the last write operation. Throws an','line_number':113,'multiline':False]['text':'/ exception on failure.','line_number':114,'multiline':False]['text':'/ Flush all data from the buffer to the next layer. Returns the number of','line_number':120,'multiline':False]['text':'/ bytes written to the next layer on the last write operation, or 0 if an','line_number':121,'multiline':False]['text':'/ error occurred.','line_number':122,'multiline':False]['text':'/ Start an asynchronous flush.','line_number':128,'multiline':False]['text':'*
   * @par Completion Signature
   * @code void(boost::system::error_code, std::size_t) @endcode
   ','line_number':129,'multiline':True]['text':'/ Write the given data to the stream. Returns the number of bytes written.','line_number':147,'multiline':False]['text':'/ Throws an exception on failure.','line_number':148,'multiline':False]['text':'/ Write the given data to the stream. Returns the number of bytes written,','line_number':155,'multiline':False]['text':'/ or 0 if an error occurred.','line_number':156,'multiline':False]['text':'/ Start an asynchronous write. The data being written must be valid for the','line_number':164,'multiline':False]['text':'/ lifetime of the asynchronous operation.','line_number':165,'multiline':False]['text':'*
   * @par Completion Signature
   * @code void(boost::system::error_code, std::size_t) @endcode
   ','line_number':166,'multiline':True]['text':'/ Fill the buffer with some data. Returns the number of bytes placed in the','line_number':184,'multiline':False]['text':'/ buffer as a result of the operation. Throws an exception on failure.','line_number':185,'multiline':False]['text':'/ Fill the buffer with some data. Returns the number of bytes placed in the','line_number':191,'multiline':False]['text':'/ buffer as a result of the operation, or 0 if an error occurred.','line_number':192,'multiline':False]['text':'/ Start an asynchronous fill.','line_number':198,'multiline':False]['text':'*
   * @par Completion Signature
   * @code void(boost::system::error_code, std::size_t) @endcode
   ','line_number':199,'multiline':True]['text':'/ Read some data from the stream. Returns the number of bytes read. Throws','line_number':216,'multiline':False]['text':'/ an exception on failure.','line_number':217,'multiline':False]['text':'/ Read some data from the stream. Returns the number of bytes read or 0 if','line_number':224,'multiline':False]['text':'/ an error occurred.','line_number':225,'multiline':False]['text':'/ Start an asynchronous read. The buffer into which the data will be read','line_number':233,'multiline':False]['text':'/ must be valid for the lifetime of the asynchronous operation.','line_number':234,'multiline':False]['text':'*
   * @par Completion Signature
   * @code void(boost::system::error_code, std::size_t) @endcode
   ','line_number':235,'multiline':True]['text':'/ Peek at the incoming data on the stream. Returns the number of bytes read.','line_number':253,'multiline':False]['text':'/ Throws an exception on failure.','line_number':254,'multiline':False]['text':'/ Peek at the incoming data on the stream. Returns the number of bytes read,','line_number':261,'multiline':False]['text':'/ or 0 if an error occurred.','line_number':262,'multiline':False]['text':'/ Determine the amount of data that may be read without blocking.','line_number':270,'multiline':False]['text':'/ Determine the amount of data that may be read without blocking.','line_number':276,'multiline':False]['text':' The buffered write stream.','line_number':283,'multiline':False]['text':' The buffered read stream.','line_number':287,'multiline':False]['text':' namespace asio','line_number':292,'multiline':False]['text':' namespace boost','line_number':293,'multiline':False]['text':' BOOST_ASIO_BUFFERED_STREAM_HPP','line_number':297,'multiline':False]