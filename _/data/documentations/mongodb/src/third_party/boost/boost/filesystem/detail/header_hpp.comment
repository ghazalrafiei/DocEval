['text':'
 *             Copyright Andrey Semashev 2021.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':' 'm_A' : class 'A' needs to have dll-interface to be used by clients of class 'B'','line_number':15,'multiline':False]['text':' non dll-interface class 'A' used as base for dll-interface class 'B'','line_number':17,'multiline':False]['text':' 'int' : forcing value to bool 'true' or 'false' (performance warning)','line_number':19,'multiline':False]['text':' unreferenced formal parameter','line_number':21,'multiline':False]['text':' conditional expression is constant','line_number':23,'multiline':False]['text':' function marked as __forceinline not inlined','line_number':25,'multiline':False]['text':' decorated name length exceeded, name was truncated','line_number':27,'multiline':False]['text':' 'X': This function or variable may be unsafe. Consider using Y instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.','line_number':29,'multiline':False]['text':' Note: clang-cl goes here as well, as it seems to support gcc-style warning control pragmas.','line_number':35,'multiline':False]['text':' unused parameter 'arg'','line_number':38,'multiline':False]['text':' !defined(BOOST_FILESYSTEM_ENABLE_WARNINGS)','line_number':43,'multiline':False]