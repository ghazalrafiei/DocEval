['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 ','line_number':1,'multiline':True]['text':'!
 * \file   atomic/detail/futex.hpp
 *
 * This header defines wrappers around futex syscall.
 *
 * http://man7.org/linux/man-pages/man2/futex.2.html
 * https://man.openbsd.org/futex
 ','line_number':8,'multiline':True]['text':' On some 32-bit targets (e.g. riscv32) SYS_futex is not defined and instead SYS_futex_time64 is implemented,','line_number':33,'multiline':False]['text':' which is equivalent to SYS_futex but uses 64-bit time_t.','line_number':34,'multiline':False]['text':' Some Android NDKs (Google NDK and older Crystax.NET NDK versions) don't define SYS_futex.','line_number':37,'multiline':False]['text':' NetBSD defines SYS___futex, which has slightly different parameters. Basically, it has decoupled timeout and val2 parameters:','line_number':40,'multiline':False]['text':' int __futex(int *addr1, int op, int val1, const struct timespec *timeout, int *addr2, int val2, int val3);','line_number':41,'multiline':False]['text':' https://ftp.netbsd.org/pub/NetBSD/NetBSD-current/src/sys/sys/syscall.h','line_number':42,'multiline':False]['text':' http://bxr.su/NetBSD/sys/kern/sys_futex.c','line_number':43,'multiline':False]['text':' On Android, futex.h is lacking many definitions, but the actual Linux kernel supports the API in full.','line_number':64,'multiline':False]['text':'! Invokes an operation on the futex','line_number':74,'multiline':False]['text':' Pass 0 in val2.','line_number':80,'multiline':False]['text':'! Invokes an operation on the futex','line_number':85,'multiline':False]['text':' Pass NULL in timeout.','line_number':91,'multiline':False]['text':'! Checks that the value \c pval is \c expected and blocks','line_number':96,'multiline':False]['text':'! Checks that the value \c pval is \c expected and blocks','line_number':102,'multiline':False]['text':'! Wakes the specified number of threads waiting on the futex','line_number':108,'multiline':False]['text':'! Wakes the specified number of threads waiting on the futex','line_number':114,'multiline':False]['text':'! Wakes all threads waiting on the futex','line_number':120,'multiline':False]['text':'! Wakes all threads waiting on the futex','line_number':126,'multiline':False]['text':'! Wakes the wake_count threads waiting on the futex pval1 and requeues up to requeue_count of the blocked threads onto another futex pval2','line_number':132,'multiline':False]['text':'! Wakes the wake_count threads waiting on the futex pval1 and requeues up to requeue_count of the blocked threads onto another futex pval2','line_number':138,'multiline':False]['text':' namespace detail','line_number':144,'multiline':False]['text':' namespace atomics','line_number':145,'multiline':False]['text':' namespace boost','line_number':146,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_SYS_FUTEX)','line_number':150,'multiline':False]['text':' defined(__linux__) || defined(__OpenBSD__) || defined(__NETBSD__) || defined(__NetBSD__)','line_number':152,'multiline':False]['text':' BOOST_ATOMIC_DETAIL_FUTEX_HPP_INCLUDED_','line_number':154,'multiline':False]