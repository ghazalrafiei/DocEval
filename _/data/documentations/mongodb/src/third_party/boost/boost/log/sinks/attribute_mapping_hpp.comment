['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   attribute_mapping.hpp
 * \author Andrey Semashev
 * \date   07.11.2008
 *
 * The header contains facilities that are used in different sinks to map attribute values
 * used throughout the application to values used with the specific native logging API.
 * These tools are mostly needed to map application severity levels on native levels,
 * required by OS-specific sink backends.
 ','line_number':7,'multiline':True]['text':'! Base class for attribute mapping function objects','line_number':40,'multiline':False]['text':'! Mapped value type','line_number':44,'multiline':False]['text':'! Result type','line_number':46,'multiline':False]['text':'! Attribute value visitor','line_number':52,'multiline':False]['text':'  Specialization for the tagged integer','line_number':72,'multiline':False]['text':' namespace aux','line_number':94,'multiline':False]['text':'!
 * \brief Straightforward mapping
 *
 * This type of mapping assumes that attribute with a particular name always
 * provides values that map directly onto the native values. The mapping
 * simply returns the extracted attribute value converted to the native value.
 ','line_number':96,'multiline':True]['text':'! Base type','line_number':107,'multiline':False]['text':'! Attribute contained value type','line_number':111,'multiline':False]['text':'! Mapped value type','line_number':113,'multiline':False]['text':'! Attribute name','line_number':117,'multiline':False]['text':'! Visitor invoker for the attribute value','line_number':119,'multiline':False]['text':'! Default native value','line_number':121,'multiline':False]['text':'!
     * Constructor
     *
     * \param name Attribute name
     * \param default_value The default native value that is returned if the attribute value is not found
     ','line_number':125,'multiline':True]['text':'!
     * Extraction operator
     *
     * \param rec A log record to extract value from
     * \return An extracted attribute value
     ','line_number':137,'multiline':True]['text':'!
 * \brief Customizable mapping
 *
 * The class allows to setup a custom mapping between an attribute and native values.
 * The mapping should be initialized similarly to the standard \c map container, by using
 * indexing operator and assignment.
 *
 * \note Unlike many other components of the library, exact type of the attribute value
 *       must be specified in the template parameter \c AttributeValueT. Type sequences
 *       are not supported.
 ','line_number':152,'multiline':True]['text':'! Base type','line_number':167,'multiline':False]['text':'! Attribute contained value type','line_number':171,'multiline':False]['text':'! Mapped value type','line_number':173,'multiline':False]['text':'! \cond','line_number':177,'multiline':False]['text':'! Mapping type','line_number':179,'multiline':False]['text':'! Smart reference class for implementing insertion into the map','line_number':181,'multiline':False]['text':'! Constructor','line_number':190,'multiline':False]['text':'! Insertion','line_number':192,'multiline':False]['text':'! Attribute value visitor','line_number':200,'multiline':False]['text':'! \endcond','line_number':225,'multiline':False]['text':'! Attribute name','line_number':228,'multiline':False]['text':'! Visitor invoker for the attribute value','line_number':230,'multiline':False]['text':'! Default native value','line_number':232,'multiline':False]['text':'! Conversion mapping','line_number':234,'multiline':False]['text':'!
     * Constructor
     *
     * \param name Attribute name
     * \param default_value The default native value that is returned if the conversion cannot be performed
     ','line_number':238,'multiline':True]['text':'!
     * Extraction operator. Extracts the attribute value and attempts to map it onto
     * the native value.
     *
     * \param rec A log record to extract value from
     * \return A mapped value, if mapping was successful, or the default value if
     *         mapping did not succeed.
     ','line_number':249,'multiline':True]['text':'!
     * Insertion operator
     *
     * \param key Attribute value to be mapped
     * \return An object of unspecified type that allows to insert a new mapping through assignment.
     *         The \a key argument becomes the key attribute value, and the assigned value becomes the
     *         mapped native value.
     ','line_number':264,'multiline':True]['text':' namespace sinks','line_number':282,'multiline':False]['text':' namespace log','line_number':284,'multiline':False]['text':' namespace boost','line_number':286,'multiline':False]['text':' BOOST_LOG_SINKS_ATTRIBUTE_MAPPING_HPP_INCLUDED_','line_number':290,'multiline':False]