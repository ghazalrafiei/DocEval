['text':' Copyright (c) 2004-2005 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author:  Martin Andrian, Jeff Garland, Bart Garst
 * $Date$
 ','line_number':5,'multiline':True]['text':' i/ostreambuf_iterator','line_number':16,'multiline':False]['text':' absolute_value','line_number':31,'multiline':False]['text':' f','line_number':40,'multiline':False]['text':' F','line_number':41,'multiline':False]['text':' s','line_number':42,'multiline':False]['text':' S','line_number':43,'multiline':False]['text':' H','line_number':44,'multiline':False]['text':' O','line_number':45,'multiline':False]['text':' T','line_number':46,'multiline':False]['text':' HH:MM:SS','line_number':47,'multiline':False]['text':' R','line_number':48,'multiline':False]['text':' HH:MM','line_number':49,'multiline':False]['text':' x X','line_number':50,'multiline':False]['text':' z','line_number':51,'multiline':False]['text':' Z','line_number':52,'multiline':False]['text':' q','line_number':53,'multiline':False]['text':' Q','line_number':54,'multiline':False]['text':' ZP','line_number':55,'multiline':False]['text':' -','line_number':56,'multiline':False]['text':' +','line_number':57,'multiline':False]['text':'-','line_number':59,'multiline':False]['text':'+','line_number':60,'multiline':False]['text':'default ptime format is YYYY-Mon-DD HH:MM:SS[.fff...][ zzz]','line_number':63,'multiline':False]['text':' default_time_input_format uses a posix_time_zone_string instead of a time zone abbrev','line_number':65,'multiline':False]['text':'default time_duration format is HH:MM:SS[.fff...]','line_number':67,'multiline':False]['text':'time_formats<CharT>::standard_format[5] =  {'%','c',' ','%','z'};','line_number':115,'multiline':False]['text':'! Facet used for format-based output of time types
   * This class provides for the use of format strings to output times.  In addition
   * to the flags for formatting date elements, the following are the allowed format flags:
   *  - %x %X => default format - enables addition of more flags to default (ie. "%x %X %z")
   *  - %f => fractional seconds ".123456"
   *  - %F => fractional seconds or none: like frac sec but empty if frac sec == 0
   *  - %s => seconds w/ fractional sec "02.123" (this is the same as "%S%f)
   *  - %S => seconds "02"
   *  - %z => abbreviated time zone "EDT"
   *  - %Z => full time zone name "Eastern Daylight Time"
   ','line_number':189,'multiline':True]['text':' %f','line_number':216,'multiline':False]['text':' %F','line_number':217,'multiline':False]['text':' %s','line_number':218,'multiline':False]['text':' %S','line_number':219,'multiline':False]['text':' %H','line_number':220,'multiline':False]['text':' %O','line_number':221,'multiline':False]['text':' %x X','line_number':222,'multiline':False]['text':' %z','line_number':223,'multiline':False]['text':' %Z','line_number':224,'multiline':False]['text':' %q','line_number':225,'multiline':False]['text':' %Q','line_number':226,'multiline':False]['text':' %ZP','line_number':227,'multiline':False]['text':' %+','line_number':229,'multiline':False]['text':' %-','line_number':230,'multiline':False]['text':'-','line_number':231,'multiline':False]['text':'+','line_number':232,'multiline':False]['text':'default ptime format is YYYY-Mon-DD HH:MM:SS[.fff...][ zzz]','line_number':236,'multiline':False]['text':'default time_duration format is HH:MM:SS[.fff...]','line_number':238,'multiline':False]['text':'! sets default formats for ptime, local_date_time, and time_duration','line_number':246,'multiline':False]['text':'! Construct the facet with an explicitly specified format','line_number':252,'multiline':False]['text':'! Changes format for time_duration','line_number':266,'multiline':False]['text':' %T and %R have to be replaced here since they are not standard','line_number':292,'multiline':False]['text':' replace %s with %S.nnn','line_number':302,'multiline':False]['text':' NOTE: replacing posix_zone_string_format must be done BEFORE
       * zone_name_format: "%ZP" & "%Z", if Z is checked first it will
       * incorrectly replace a zone_name where a posix_string should go ','line_number':314,'multiline':True]['text':' if zone_abbrev() returns an empty string, we want to','line_number':319,'multiline':False]['text':' erase posix_zone_string_format from format','line_number':320,'multiline':False]['text':' TODO: this'll probably create problems if a user places
           * the zone_*_format flag in the format with a ptime. This
           * code removes the flag from the default formats ','line_number':331,'multiline':True]['text':' if zone_name() returns an empty string, we want to','line_number':335,'multiline':False]['text':' erase zone_name_format & one preceeding space','line_number':336,'multiline':False]['text':' TODO: this'll probably create problems if a user places
           * the zone_*_format flag in the format with a ptime. This
           * code removes the flag from the default formats ','line_number':349,'multiline':True]['text':' if zone_abbrev() returns an empty string, we want to','line_number':353,'multiline':False]['text':' erase zone_abbrev_format & one preceeding space','line_number':354,'multiline':False]['text':' TODO: this'll probably create problems if a user places
           * the zone_*_format flag in the format with a ptime. This
           * code removes the flag from the default formats ','line_number':367,'multiline':True]['text':' if zone_name() returns an empty string, we want to','line_number':371,'multiline':False]['text':' erase zone_iso_extended_format from format','line_number':372,'multiline':False]['text':' TODO: this'll probably create problems if a user places
           * the zone_*_format flag in the format with a ptime. This
           * code removes the flag from the default formats ','line_number':384,'multiline':True]['text':' if zone_abbrev() returns an empty string, we want to','line_number':388,'multiline':False]['text':' erase zone_iso_format from format','line_number':389,'multiline':False]['text':' replace %f with nnnnnnn','line_number':399,'multiline':False]['text':' replace %F with nnnnnnn or nothing if fs == 0','line_number':409,'multiline':False]['text':'! put function for time_duration','line_number':431,'multiline':False]['text':' replace %- with minus sign.  Should we use the numpunct facet?','line_number':444,'multiline':False]['text':' remove all the %+ in the string with '-'','line_number':448,'multiline':False]['text':'duration is positive','line_number':453,'multiline':False]['text':' remove all the %- combos from the string','line_number':454,'multiline':False]['text':' remove all the %+ in the string with '+'','line_number':456,'multiline':False]['text':' %T and %R have to be replaced here since they are not standard','line_number':462,'multiline':False]['text':'
       * It is possible for a time duration to span more then 24 hours.
       * Standard time_put::put is obliged to behave the same as strftime
       * (See ISO 14882-2003 22.2.5.3.1 par. 1) and strftime's behavior is
       * unspecified for the case when tm_hour field is outside 0-23 range
       * (See ISO 9899-1999 7.23.3.5 par. 3). So we must output %H and %O
       * here ourself.
       ','line_number':470,'multiline':True]['text':' We still have to process restricted hours format specifier. In order to','line_number':483,'multiline':False]['text':' support parseability of durations in ISO format (%H%M%S), we'll have to','line_number':484,'multiline':False]['text':' restrict the stringified hours length to 2 characters.','line_number':485,'multiline':False]['text':' replace %s with %S.nnn','line_number':495,'multiline':False]['text':' replace %f with nnnnnnn','line_number':508,'multiline':False]['text':' replace %F with nnnnnnn or nothing if fs == 0','line_number':518,'multiline':False]['text':'make sure there is no sign','line_number':561,'multiline':False]['text':' don't want any formatting','line_number':580,'multiline':False]['text':' JDG [7/6/02 VC++ compatibility]','line_number':584,'multiline':False]['text':'! Facet for format-based input.','line_number':690,'multiline':False]['text':'!
   ','line_number':691,'multiline':True]['text':' f','line_number':717,'multiline':False]['text':' F','line_number':718,'multiline':False]['text':' s','line_number':719,'multiline':False]['text':' S','line_number':720,'multiline':False]['text':' x X','line_number':721,'multiline':False]['text':' z','line_number':722,'multiline':False]['text':' Z','line_number':723,'multiline':False]['text':' q','line_number':724,'multiline':False]['text':' Q','line_number':725,'multiline':False]['text':'! Constructor that takes a format string for a ptime','line_number':733,'multiline':False]['text':'! sets default formats for ptime, local_date_time, and time_duration','line_number':754,'multiline':False]['text':'! Set the format for time_duration','line_number':760,'multiline':False]['text':'default ptime format is YYYY-Mon-DD HH:MM:SS[.fff...][ zzz]','line_number':787,'multiline':False]['text':'default time_duration format is %H:%M:%S%F HH:MM:SS[.fff...]','line_number':788,'multiline':False]['text':' skip leading whitespace','line_number':795,'multiline':False]['text':' num_get will consume the +/-, we may need a copy if special_value','line_number':800,'multiline':False]['text':' A period may span more than 24 hours. In that case the format','line_number':830,'multiline':False]['text':' string should be composed with the unrestricted hours specifier.','line_number':831,'multiline':False]['text':' %s is the same as %S%f so we drop through into %f','line_number':867,'multiline':False]['text':' Falls through. ','line_number':869,'multiline':True]['text':' check for decimal, check special_values if missing','line_number':872,'multiline':False]['text':' sitr will point to next expected char after this parsing','line_number':876,'multiline':False]['text':' is complete so no need to advance it','line_number':877,'multiline':False]['text':' check for decimal, skip if missing','line_number':887,'multiline':False]['text':' sitr will point to next expected char after this parsing','line_number':891,'multiline':False]['text':' is complete so no need to advance it','line_number':892,'multiline':False]['text':' nothing was parsed so we don't want to advance sitr','line_number':896,'multiline':False]['text':' ignore what we don't understand?','line_number':902,'multiline':False]['text':' switch','line_number':903,'multiline':False]['text':' itr == '%', second consecutive','line_number':905,'multiline':False]['text':'advance past format specifier','line_number':909,'multiline':False]['text':'skip past chars in format and in buffer','line_number':911,'multiline':False]['text':' set use_current_char when sitr is already','line_number':913,'multiline':False]['text':' pointing at the next character to process','line_number':914,'multiline':False]['text':'! Parses a time object from the input stream','line_number':929,'multiline':False]['text':'! Expects a time_zone in the input stream','line_number':938,'multiline':False]['text':' skip leading whitespace','line_number':957,'multiline':False]['text':' used with two character flags','line_number':961,'multiline':False]['text':' num_get will consume the +/-, we may need a copy if special_value','line_number':963,'multiline':False]['text':' time elements','line_number':973,'multiline':False]['text':' date elements','line_number':978,'multiline':False]['text':' Initialized the following to their minimum values. These intermediate
         * objects are used so we get specific exceptions when part of the input
         * is unparsable.
         * Ex: "205-Jan-15" will throw a bad_year, "2005-Jsn-15"- bad_month, etc.','line_number':980,'multiline':True]['text':' the cases are grouped by date & time flags - not alphabetical order','line_number':1000,'multiline':False]['text':' date flags','line_number':1002,'multiline':False]['text':' base class for bad_year exception','line_number':1012,'multiline':False]['text':' rethrow bad_year','line_number':1018,'multiline':False]['text':' base class for bad_month exception','line_number':1033,'multiline':False]['text':' rethrow bad_month','line_number':1039,'multiline':False]['text':' did m_parser already advance sitr to next char?','line_number':1042,'multiline':False]['text':' weekday is not used in construction but we need to get it out of the stream','line_number':1052,'multiline':False]['text':' base class for bad_weekday exception','line_number':1060,'multiline':False]['text':' rethrow bad_weekday','line_number':1066,'multiline':False]['text':' did m_parser already advance sitr to next char?','line_number':1069,'multiline':False]['text':' code that gets julian day (from format_date_parser)','line_number':1077,'multiline':False]['text':' these next two lines are so we get an exception with bad input','line_number':1086,'multiline':False]['text':' base class for exception bad_day_of_month','line_number':1099,'multiline':False]['text':' rethrow bad_day_of_month','line_number':1106,'multiline':False]['text':' time flags','line_number':1111,'multiline':False]['text':' %s is the same as %S%f so we drop through into %f if we are','line_number':1140,'multiline':False]['text':' not at the end of the stream','line_number':1141,'multiline':False]['text':' MONGODB MODIFICATION: Without this we can't use','line_number':1143,'multiline':False]['text':' the automated fallthrough detection.','line_number':1144,'multiline':False]['text':' Falls through. ','line_number':1146,'multiline':True]['text':' check for decimal, check SV if missing','line_number':1149,'multiline':False]['text':' sitr will point to next expected char after this parsing','line_number':1153,'multiline':False]['text':' is complete so no need to advance it','line_number':1154,'multiline':False]['text':' check for decimal, skip if missing','line_number':1164,'multiline':False]['text':' sitr will point to next expected char after this parsing','line_number':1168,'multiline':False]['text':' is complete so no need to advance it','line_number':1169,'multiline':False]['text':' nothing was parsed so we don't want to advance sitr','line_number':1173,'multiline':False]['text':' time_zone flags','line_number':1178,'multiline':False]['text':'case 'q':','line_number':1179,'multiline':False]['text':'case 'Q':','line_number':1180,'multiline':False]['text':'case 'z':','line_number':1181,'multiline':False]['text':' skip if 't' is a ptime','line_number':1184,'multiline':False]['text':' skip leading whitespace','line_number':1187,'multiline':False]['text':' parse zone','line_number':1189,'multiline':False]['text':' nothing was parsed so we don't want to advance sitr','line_number':1201,'multiline':False]['text':' ignore what we don't understand?','line_number':1208,'multiline':False]['text':' switch','line_number':1209,'multiline':False]['text':' itr == '%', second consecutive','line_number':1211,'multiline':False]['text':'advance past format specifier','line_number':1219,'multiline':False]['text':'skip past chars in format and in buffer','line_number':1223,'multiline':False]['text':' set use_current_char when sitr is already','line_number':1225,'multiline':False]['text':' pointing at the next character to process','line_number':1226,'multiline':False]['text':'! Helper function to check for special_value','line_number':1249,'multiline':False]['text':'! First character may have been consumed during original parse
       * attempt. Parameter 'c' should be a copy of that character.
       * Throws ios_base::failure if parse fails. ','line_number':1250,'multiline':True]['text':' was the first character consumed?','line_number':1258,'multiline':False]['text':' should never reach','line_number':1265,'multiline':False]['text':'! Helper function for parsing a fractional second type from the stream','line_number':1271,'multiline':False]['text':' input may be only the first few decimal places','line_number':1283,'multiline':False]['text':' if input has too many decimal places, drop excess digits','line_number':1289,'multiline':False]['text':'! Helper function to adjust trailing zeros when parsing fractional digits','line_number':1298,'multiline':False]['text':' shift decimal to the right','line_number':1305,'multiline':False]['text':' namespaces','line_number':1371,'multiline':False]