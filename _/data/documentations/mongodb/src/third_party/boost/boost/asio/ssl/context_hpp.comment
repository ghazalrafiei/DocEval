['text':'','line_number':1,'multiline':False]['text':' ssl/context.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':'/ The native handle type of the SSL context.','line_number':41,'multiline':False]['text':'/ Constructor.','line_number':44,'multiline':False]['text':'/ Construct to take ownership of a native handle.','line_number':47,'multiline':False]['text':'/ Move-construct a context from another.','line_number':51,'multiline':False]['text':'*
   * This constructor moves an SSL context from one object to another.
   *
   * @param other The other context object from which the move will occur.
   *
   * @note Following the move, the following operations only are valid for the
   * moved-from object:
   * @li Destruction.
   * @li As a target for move-assignment.
   ','line_number':52,'multiline':True]['text':'/ Move-assign a context from another.','line_number':64,'multiline':False]['text':'*
   * This assignment operator moves an SSL context from one object to another.
   *
   * @param other The other context object from which the move will occur.
   *
   * @note Following the move, the following operations only are valid for the
   * moved-from object:
   * @li Destruction.
   * @li As a target for move-assignment.
   ','line_number':65,'multiline':True]['text':' defined(BOOST_ASIO_HAS_MOVE) || defined(GENERATING_DOCUMENTATION)','line_number':76,'multiline':False]['text':'/ Destructor.','line_number':78,'multiline':False]['text':'/ Get the underlying implementation in the native type.','line_number':81,'multiline':False]['text':'*
   * This function may be used to obtain the underlying implementation of the
   * context. This is intended to allow access to context functionality that is
   * not otherwise provided.
   ','line_number':82,'multiline':True]['text':'/ Clear options on the context.','line_number':89,'multiline':False]['text':'*
   * This function may be used to configure the SSL options used by the context.
   *
   * @param o A bitmask of options. The available option values are defined in
   * the context_base class. The specified options, if currently enabled on the
   * context, are cleared.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_clear_options.
   ','line_number':90,'multiline':True]['text':'/ Clear options on the context.','line_number':103,'multiline':False]['text':'*
   * This function may be used to configure the SSL options used by the context.
   *
   * @param o A bitmask of options. The available option values are defined in
   * the context_base class. The specified options, if currently enabled on the
   * context, are cleared.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_clear_options.
   ','line_number':104,'multiline':True]['text':'/ Set options on the context.','line_number':118,'multiline':False]['text':'*
   * This function may be used to configure the SSL options used by the context.
   *
   * @param o A bitmask of options. The available option values are defined in
   * the context_base class. The options are bitwise-ored with any existing
   * value for the options.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_options.
   ','line_number':119,'multiline':True]['text':'/ Set options on the context.','line_number':132,'multiline':False]['text':'*
   * This function may be used to configure the SSL options used by the context.
   *
   * @param o A bitmask of options. The available option values are defined in
   * the context_base class. The options are bitwise-ored with any existing
   * value for the options.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_options.
   ','line_number':133,'multiline':True]['text':'/ Set the peer verification mode.','line_number':147,'multiline':False]['text':'*
   * This function may be used to configure the peer verification mode used by
   * the context.
   *
   * @param v A bitmask of peer verification modes. See @ref verify_mode for
   * available values.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_verify.
   ','line_number':148,'multiline':True]['text':'/ Set the peer verification mode.','line_number':161,'multiline':False]['text':'*
   * This function may be used to configure the peer verification mode used by
   * the context.
   *
   * @param v A bitmask of peer verification modes. See @ref verify_mode for
   * available values.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_verify.
   ','line_number':162,'multiline':True]['text':'/ Set the peer verification depth.','line_number':176,'multiline':False]['text':'*
   * This function may be used to configure the maximum verification depth
   * allowed by the context.
   *
   * @param depth Maximum depth for the certificate chain verification that
   * shall be allowed.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_verify_depth.
   ','line_number':177,'multiline':True]['text':'/ Set the peer verification depth.','line_number':190,'multiline':False]['text':'*
   * This function may be used to configure the maximum verification depth
   * allowed by the context.
   *
   * @param depth Maximum depth for the certificate chain verification that
   * shall be allowed.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_verify_depth.
   ','line_number':191,'multiline':True]['text':'/ Set the callback used to verify peer certificates.','line_number':205,'multiline':False]['text':'*
   * This function is used to specify a callback function that will be called
   * by the implementation when it needs to verify a peer certificate.
   *
   * @param callback The function object to be used for verifying a certificate.
   * The function signature of the handler must be:
   * @code bool verify_callback(
   *   bool preverified, // True if the certificate passed pre-verification.
   *   verify_context& ctx // The peer certificate and other context.
   * ); @endcode
   * The return value of the callback is true if the certificate has passed
   * verification, false otherwise.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_verify.
   ','line_number':206,'multiline':True]['text':'/ Set the callback used to verify peer certificates.','line_number':226,'multiline':False]['text':'*
   * This function is used to specify a callback function that will be called
   * by the implementation when it needs to verify a peer certificate.
   *
   * @param callback The function object to be used for verifying a certificate.
   * The function signature of the handler must be:
   * @code bool verify_callback(
   *   bool preverified, // True if the certificate passed pre-verification.
   *   verify_context& ctx // The peer certificate and other context.
   * ); @endcode
   * The return value of the callback is true if the certificate has passed
   * verification, false otherwise.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_verify.
   ','line_number':227,'multiline':True]['text':'/ Load a certification authority file for performing verification.','line_number':248,'multiline':False]['text':'*
   * This function is used to load one or more trusted certification authorities
   * from a file.
   *
   * @param filename The name of a file containing certification authority
   * certificates in PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_load_verify_locations.
   ','line_number':249,'multiline':True]['text':'/ Load a certification authority file for performing verification.','line_number':262,'multiline':False]['text':'*
   * This function is used to load the certificates for one or more trusted
   * certification authorities from a file.
   *
   * @param filename The name of a file containing certification authority
   * certificates in PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_load_verify_locations.
   ','line_number':263,'multiline':True]['text':'/ Add certification authority for performing verification.','line_number':277,'multiline':False]['text':'*
   * This function is used to add one trusted certification authority
   * from a memory buffer.
   *
   * @param ca The buffer containing the certification authority certificate.
   * The certificate must use the PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_get_cert_store and @c X509_STORE_add_cert.
   ','line_number':278,'multiline':True]['text':'/ Add certification authority for performing verification.','line_number':291,'multiline':False]['text':'*
   * This function is used to add one trusted certification authority
   * from a memory buffer.
   *
   * @param ca The buffer containing the certification authority certificate.
   * The certificate must use the PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_get_cert_store and @c X509_STORE_add_cert.
   ','line_number':292,'multiline':True]['text':'/ Configures the context to use the default directories for finding','line_number':306,'multiline':False]['text':'/ certification authority certificates.','line_number':307,'multiline':False]['text':'*
   * This function specifies that the context should use the default,
   * system-dependent directories for locating certification authority
   * certificates.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_default_verify_paths.
   ','line_number':308,'multiline':True]['text':'/ Configures the context to use the default directories for finding','line_number':319,'multiline':False]['text':'/ certification authority certificates.','line_number':320,'multiline':False]['text':'*
   * This function specifies that the context should use the default,
   * system-dependent directories for locating certification authority
   * certificates.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_default_verify_paths.
   ','line_number':321,'multiline':True]['text':'/ Add a directory containing certificate authority files to be used for','line_number':333,'multiline':False]['text':'/ performing verification.','line_number':334,'multiline':False]['text':'*
   * This function is used to specify the name of a directory containing
   * certification authority certificates. Each file in the directory must
   * contain a single certificate. The files must be named using the subject
   * name's hash and an extension of ".0".
   *
   * @param path The name of a directory containing the certificates.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_load_verify_locations.
   ','line_number':335,'multiline':True]['text':'/ Add a directory containing certificate authority files to be used for','line_number':349,'multiline':False]['text':'/ performing verification.','line_number':350,'multiline':False]['text':'*
   * This function is used to specify the name of a directory containing
   * certification authority certificates. Each file in the directory must
   * contain a single certificate. The files must be named using the subject
   * name's hash and an extension of ".0".
   *
   * @param path The name of a directory containing the certificates.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_load_verify_locations.
   ','line_number':351,'multiline':True]['text':'/ Use a certificate from a memory buffer.','line_number':366,'multiline':False]['text':'*
   * This function is used to load a certificate into the context from a buffer.
   *
   * @param certificate The buffer containing the certificate.
   *
   * @param format The certificate format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_certificate or SSL_CTX_use_certificate_ASN1.
   ','line_number':367,'multiline':True]['text':'/ Use a certificate from a memory buffer.','line_number':381,'multiline':False]['text':'*
   * This function is used to load a certificate into the context from a buffer.
   *
   * @param certificate The buffer containing the certificate.
   *
   * @param format The certificate format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_certificate or SSL_CTX_use_certificate_ASN1.
   ','line_number':382,'multiline':True]['text':'/ Use a certificate from a file.','line_number':397,'multiline':False]['text':'*
   * This function is used to load a certificate into the context from a file.
   *
   * @param filename The name of the file containing the certificate.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_certificate_file.
   ','line_number':398,'multiline':True]['text':'/ Use a certificate from a file.','line_number':412,'multiline':False]['text':'*
   * This function is used to load a certificate into the context from a file.
   *
   * @param filename The name of the file containing the certificate.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_certificate_file.
   ','line_number':413,'multiline':True]['text':'/ Use a certificate chain from a memory buffer.','line_number':428,'multiline':False]['text':'*
   * This function is used to load a certificate chain into the context from a
   * buffer.
   *
   * @param chain The buffer containing the certificate chain. The certificate
   * chain must use the PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_certificate and SSL_CTX_add_extra_chain_cert.
   ','line_number':429,'multiline':True]['text':'/ Use a certificate chain from a memory buffer.','line_number':442,'multiline':False]['text':'*
   * This function is used to load a certificate chain into the context from a
   * buffer.
   *
   * @param chain The buffer containing the certificate chain. The certificate
   * chain must use the PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_certificate and SSL_CTX_add_extra_chain_cert.
   ','line_number':443,'multiline':True]['text':'/ Use a certificate chain from a file.','line_number':457,'multiline':False]['text':'*
   * This function is used to load a certificate chain into the context from a
   * file.
   *
   * @param filename The name of the file containing the certificate. The file
   * must use the PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_certificate_chain_file.
   ','line_number':458,'multiline':True]['text':'/ Use a certificate chain from a file.','line_number':471,'multiline':False]['text':'*
   * This function is used to load a certificate chain into the context from a
   * file.
   *
   * @param filename The name of the file containing the certificate. The file
   * must use the PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_certificate_chain_file.
   ','line_number':472,'multiline':True]['text':'/ Use a private key from a memory buffer.','line_number':486,'multiline':False]['text':'*
   * This function is used to load a private key into the context from a buffer.
   *
   * @param private_key The buffer containing the private key.
   *
   * @param format The private key format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_PrivateKey or SSL_CTX_use_PrivateKey_ASN1.
   ','line_number':487,'multiline':True]['text':'/ Use a private key from a memory buffer.','line_number':501,'multiline':False]['text':'*
   * This function is used to load a private key into the context from a buffer.
   *
   * @param private_key The buffer containing the private key.
   *
   * @param format The private key format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_PrivateKey or SSL_CTX_use_PrivateKey_ASN1.
   ','line_number':502,'multiline':True]['text':'/ Use a private key from a file.','line_number':517,'multiline':False]['text':'*
   * This function is used to load a private key into the context from a file.
   *
   * @param filename The name of the file containing the private key.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_PrivateKey_file.
   ','line_number':518,'multiline':True]['text':'/ Use a private key from a file.','line_number':532,'multiline':False]['text':'*
   * This function is used to load a private key into the context from a file.
   *
   * @param filename The name of the file containing the private key.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_PrivateKey_file.
   ','line_number':533,'multiline':True]['text':'/ Use an RSA private key from a memory buffer.','line_number':548,'multiline':False]['text':'*
   * This function is used to load an RSA private key into the context from a
   * buffer.
   *
   * @param private_key The buffer containing the RSA private key.
   *
   * @param format The private key format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_RSAPrivateKey or SSL_CTX_use_RSAPrivateKey_ASN1.
   ','line_number':549,'multiline':True]['text':'/ Use an RSA private key from a memory buffer.','line_number':564,'multiline':False]['text':'*
   * This function is used to load an RSA private key into the context from a
   * buffer.
   *
   * @param private_key The buffer containing the RSA private key.
   *
   * @param format The private key format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_RSAPrivateKey or SSL_CTX_use_RSAPrivateKey_ASN1.
   ','line_number':565,'multiline':True]['text':'/ Use an RSA private key from a file.','line_number':581,'multiline':False]['text':'*
   * This function is used to load an RSA private key into the context from a
   * file.
   *
   * @param filename The name of the file containing the RSA private key.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_use_RSAPrivateKey_file.
   ','line_number':582,'multiline':True]['text':'/ Use an RSA private key from a file.','line_number':597,'multiline':False]['text':'*
   * This function is used to load an RSA private key into the context from a
   * file.
   *
   * @param filename The name of the file containing the RSA private key.
   *
   * @param format The file format (ASN.1 or PEM).
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_use_RSAPrivateKey_file.
   ','line_number':598,'multiline':True]['text':'/ Use the specified memory buffer to obtain the temporary Diffie-Hellman','line_number':614,'multiline':False]['text':'/ parameters.','line_number':615,'multiline':False]['text':'*
   * This function is used to load Diffie-Hellman parameters into the context
   * from a buffer.
   *
   * @param dh The memory buffer containing the Diffie-Hellman parameters. The
   * buffer must use the PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_tmp_dh.
   ','line_number':616,'multiline':True]['text':'/ Use the specified memory buffer to obtain the temporary Diffie-Hellman','line_number':629,'multiline':False]['text':'/ parameters.','line_number':630,'multiline':False]['text':'*
   * This function is used to load Diffie-Hellman parameters into the context
   * from a buffer.
   *
   * @param dh The memory buffer containing the Diffie-Hellman parameters. The
   * buffer must use the PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_tmp_dh.
   ','line_number':631,'multiline':True]['text':'/ Use the specified file to obtain the temporary Diffie-Hellman parameters.','line_number':645,'multiline':False]['text':'*
   * This function is used to load Diffie-Hellman parameters into the context
   * from a file.
   *
   * @param filename The name of the file containing the Diffie-Hellman
   * parameters. The file must use the PEM format.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_tmp_dh.
   ','line_number':646,'multiline':True]['text':'/ Use the specified file to obtain the temporary Diffie-Hellman parameters.','line_number':659,'multiline':False]['text':'*
   * This function is used to load Diffie-Hellman parameters into the context
   * from a file.
   *
   * @param filename The name of the file containing the Diffie-Hellman
   * parameters. The file must use the PEM format.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_tmp_dh.
   ','line_number':660,'multiline':True]['text':'/ Set the password callback.','line_number':674,'multiline':False]['text':'*
   * This function is used to specify a callback function to obtain password
   * information about an encrypted key in PEM format.
   *
   * @param callback The function object to be used for obtaining the password.
   * The function signature of the handler must be:
   * @code std::string password_callback(
   *   std::size_t max_length,  // The maximum size for a password.
   *   password_purpose purpose // Whether password is for reading or writing.
   * ); @endcode
   * The return value of the callback is a string containing the password.
   *
   * @throws boost::system::system_error Thrown on failure.
   *
   * @note Calls @c SSL_CTX_set_default_passwd_cb.
   ','line_number':675,'multiline':True]['text':'/ Set the password callback.','line_number':694,'multiline':False]['text':'*
   * This function is used to specify a callback function to obtain password
   * information about an encrypted key in PEM format.
   *
   * @param callback The function object to be used for obtaining the password.
   * The function signature of the handler must be:
   * @code std::string password_callback(
   *   std::size_t max_length,  // The maximum size for a password.
   *   password_purpose purpose // Whether password is for reading or writing.
   * ); @endcode
   * The return value of the callback is a string containing the password.
   *
   * @param ec Set to indicate what error occurred, if any.
   *
   * @note Calls @c SSL_CTX_set_default_passwd_cb.
   ','line_number':695,'multiline':True]['text':' Helper function used to set a peer certificate verification callback.','line_number':722,'multiline':False]['text':' Callback used when the SSL implementation wants to verify a certificate.','line_number':726,'multiline':False]['text':' Helper function used to set a password callback.','line_number':730,'multiline':False]['text':' Callback used when the SSL implementation wants a password.','line_number':734,'multiline':False]['text':' Helper function to set the temporary Diffie-Hellman parameters from a BIO.','line_number':738,'multiline':False]['text':' Helper function to make a BIO from a memory buffer.','line_number':742,'multiline':False]['text':' Translate an SSL error into an error code.','line_number':745,'multiline':False]['text':' The underlying native implementation.','line_number':748,'multiline':False]['text':' Ensure openssl is initialised.','line_number':751,'multiline':False]['text':' namespace ssl','line_number':755,'multiline':False]['text':' namespace asio','line_number':756,'multiline':False]['text':' namespace boost','line_number':757,'multiline':False]['text':' defined(BOOST_ASIO_HEADER_ONLY)','line_number':764,'multiline':False]['text':' BOOST_ASIO_SSL_CONTEXT_HPP','line_number':766,'multiline':False]