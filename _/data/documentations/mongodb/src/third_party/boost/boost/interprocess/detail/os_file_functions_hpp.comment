['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/interprocess for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'make_unsigned','line_number':30,'multiline':False]['text':'wcsxxx()','line_number':34,'multiline':False]['text':'If fails, check that it's because it already exists','line_number':110,'multiline':False]['text':'std::size_t is always bigger or equal than unsigned long in Windows systems','line_number':128,'multiline':False]['text':'In case std::size_t is bigger than unsigned long','line_number':129,'multiline':False]['text':'maybe overflowed','line_number':131,'multiline':False]['text':'std::size_t is always bigger or equal than unsigned long in Windows systems','line_number':145,'multiline':False]['text':'In case std::size_t is bigger than unsigned long','line_number':146,'multiline':False]['text':'maybe overflowed','line_number':148,'multiline':False]['text':'Avoid unused variable warnings in 32 bit systems','line_number':203,'multiline':False]['text':'We will write zeros in the end of the file','line_number':213,'multiline':False]['text':'since set_end_of_file does not guarantee this','line_number':214,'multiline':False]['text':'   winapi::interprocess_overlapped overlapped;','line_number':264,'multiline':False]['text':'   std::memset(&overlapped, 0, sizeof(overlapped));','line_number':265,'multiline':False]['text':' Flag, indicating whether','line_number':363,'multiline':False]['text':' subdirectories have been found','line_number':364,'multiline':False]['text':' Handle to directory','line_number':365,'multiline':False]['text':' Filepath','line_number':366,'multiline':False]['text':' Pattern','line_number':367,'multiline':False]['text':' File information','line_number':369,'multiline':False]['text':'Find all files and directories','line_number':371,'multiline':False]['text':'If it's not "." or ".." or the pointed root_level dont_delete_this erase it','line_number':376,'multiline':False]['text':'If it's a directory, go recursive','line_number':382,'multiline':False]['text':' Delete subdirectory','line_number':384,'multiline':False]['text':'If it's a file, just delete it','line_number':390,'multiline':False]['text':' Set file attributes','line_number':392,'multiline':False]['text':'if(::SetFileAttributes(strFilePath.c_str(), winapi::file_attribute_normal) == 0)','line_number':393,'multiline':False]['text':'return winapi::get_last_error();','line_number':394,'multiline':False]['text':' Delete file','line_number':395,'multiline':False]['text':'Go to the next file','line_number':399,'multiline':False]['text':' Close handle','line_number':402,'multiline':False]['text':'See if the loop has ended with an error or just because we've traversed all the files','line_number':405,'multiline':False]['text':'Erase empty subdirectories or original refcstrRootDirectory','line_number':411,'multiline':False]['text':' Set directory attributes','line_number':414,'multiline':False]['text':'if(::SetFileAttributes(refcstrRootDirectory.c_str(), FILE_ATTRIBUTE_NORMAL) == 0)','line_number':415,'multiline':False]['text':'return ::GetLastError();','line_number':416,'multiline':False]['text':' Delete directory','line_number':417,'multiline':False]['text':'This function erases all the subdirectories of a directory except the one pointed by "dont_delete_this"','line_number':426,'multiline':False]['text':' Handle to directory','line_number':437,'multiline':False]['text':' File information','line_number':438,'multiline':False]['text':'Get base directory','line_number':440,'multiline':False]['text':'Find all files and directories','line_number':444,'multiline':False]['text':'Now loop every file','line_number':448,'multiline':False]['text':'If it's not "." or ".." skip it','line_number':450,'multiline':False]['text':'If it's a file, apply erase logic','line_number':453,'multiline':False]['text':'Go to the next file','line_number':458,'multiline':False]['text':' Close handle and see if the loop has ended with an error','line_number':461,'multiline':False]['text':'#if defined (BOOST_INTERPROCESS_WINDOWS)','line_number':471,'multiline':False]['text':'We need a loop to change permissions correctly using fchmod, since','line_number':559,'multiline':False]['text':'with "O_CREAT only" ::open we don't know if we've created or opened the file.','line_number':560,'multiline':False]['text':'If it's a file, apply erase logic','line_number':798,'multiline':False]['text':'This function erases all the subdirectories of a directory except the one pointed by "dont_delete_this"','line_number':807,'multiline':False]['text':'#if defined (BOOST_INTERPROCESS_WINDOWS)','line_number':813,'multiline':False]['text':'namespace ipcdetail{','line_number':845,'multiline':False]['text':'namespace interprocess {','line_number':846,'multiline':False]['text':'namespace boost {','line_number':847,'multiline':False]['text':'BOOST_INTERPROCESS_DETAIL_OS_FILE_FUNCTIONS_HPP','line_number':851,'multiline':False]