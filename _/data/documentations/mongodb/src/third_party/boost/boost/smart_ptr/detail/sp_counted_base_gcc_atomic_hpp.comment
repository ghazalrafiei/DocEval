['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':' detail/sp_counted_base_gcc_atomic.hpp - g++ 4.7+ __atomic intrinsics','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':' Copyright 2007, 2020 Peter Dimov','line_number':12,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':13,'multiline':False]['text':' https://www.boost.org/LICENSE_1_0.txt','line_number':14,'multiline':False]['text':' long r = *pw;','line_number':45,'multiline':False]['text':' if( r != 0 ) ++*pw;','line_number':46,'multiline':False]['text':' return r;','line_number':47,'multiline':False]['text':' #shared','line_number':77,'multiline':False]['text':' #weak + (#shared != 0)','line_number':78,'multiline':False]['text':' nothrow','line_number':86,'multiline':False]['text':' dispose() is called when use_count_ drops to zero, to release','line_number':90,'multiline':False]['text':' the resources managed by *this.','line_number':91,'multiline':False]['text':' nothrow','line_number':93,'multiline':False]['text':' destroy() is called when weak_count_ drops to zero.','line_number':95,'multiline':False]['text':' nothrow','line_number':97,'multiline':False]['text':' true on success','line_number':111,'multiline':False]['text':' nothrow','line_number':116,'multiline':False]['text':' nothrow','line_number':125,'multiline':False]['text':' nothrow','line_number':130,'multiline':False]['text':' nothrow','line_number':138,'multiline':False]['text':' namespace detail','line_number':144,'multiline':False]['text':' namespace boost','line_number':146,'multiline':False]['text':' #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_SYNC_HPP_INCLUDED','line_number':148,'multiline':False]