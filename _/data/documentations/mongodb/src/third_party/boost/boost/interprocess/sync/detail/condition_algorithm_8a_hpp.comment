['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/interprocess for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':32,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':33,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':34,'multiline':False]['text':'','line_number':35,'multiline':False]['text':' Condition variable algorithm taken from pthreads-win32 discussion.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' The algorithm was developed by Alexander Terekhov in colaboration with','line_number':38,'multiline':False]['text':' Louis Thomas.','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':'     Algorithm 8a / IMPL_SEM,UNBLOCK_STRATEGY == UNBLOCK_ALL','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':' semBlockLock - bin.semaphore','line_number':43,'multiline':False]['text':' semBlockQueue - semaphore','line_number':44,'multiline':False]['text':' mtxExternal - mutex or CS','line_number':45,'multiline':False]['text':' mtxUnblockLock - mutex or CS','line_number':46,'multiline':False]['text':' nWaitersGone - int','line_number':47,'multiline':False]['text':' nWaitersBlocked - int','line_number':48,'multiline':False]['text':' nWaitersToUnblock - int','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':' wait( timeout ) {','line_number':51,'multiline':False]['text':'','line_number':52,'multiline':False]['text':'   [auto: register int result          ]     // error checking omitted','line_number':53,'multiline':False]['text':'   [auto: register int nSignalsWasLeft ]','line_number':54,'multiline':False]['text':'   [auto: register int nWaitersWasGone ]','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':'   sem_wait( semBlockLock );','line_number':57,'multiline':False]['text':'   nWaitersBlocked++;','line_number':58,'multiline':False]['text':'   sem_post( semBlockLock );','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':'   unlock( mtxExternal );','line_number':61,'multiline':False]['text':'   bTimedOut = sem_wait( semBlockQueue,timeout );','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':'   lock( mtxUnblockLock );','line_number':64,'multiline':False]['text':'   if ( 0 != (nSignalsWasLeft = nWaitersToUnblock) ) {','line_number':65,'multiline':False]['text':'     if ( bTimedOut ) {                       // timeout (or canceled)','line_number':66,'multiline':False]['text':'       if ( 0 != nWaitersBlocked ) {','line_number':67,'multiline':False]['text':'         nWaitersBlocked--;','line_number':68,'multiline':False]['text':'       }','line_number':69,'multiline':False]['text':'       else {','line_number':70,'multiline':False]['text':'         nWaitersGone++;                     // count spurious wakeups.','line_number':71,'multiline':False]['text':'       }','line_number':72,'multiline':False]['text':'     }','line_number':73,'multiline':False]['text':'     if ( 0 == --nWaitersToUnblock ) {','line_number':74,'multiline':False]['text':'       if ( 0 != nWaitersBlocked ) {','line_number':75,'multiline':False]['text':'         sem_post( semBlockLock );           // open the gate.','line_number':76,'multiline':False]['text':'         nSignalsWasLeft = 0;                // do not open the gate','line_number':77,'multiline':False]['text':'                                             // below again.','line_number':78,'multiline':False]['text':'       }','line_number':79,'multiline':False]['text':'       else if ( 0 != (nWaitersWasGone = nWaitersGone) ) {','line_number':80,'multiline':False]['text':'         nWaitersGone = 0;','line_number':81,'multiline':False]['text':'       }','line_number':82,'multiline':False]['text':'     }','line_number':83,'multiline':False]['text':'   }','line_number':84,'multiline':False]['text':'   else if ( INT_MAX/2 == ++nWaitersGone ) { // timeout/canceled or','line_number':85,'multiline':False]['text':'                                             // spurious semaphore :-)','line_number':86,'multiline':False]['text':'     sem_wait( semBlockLock );','line_number':87,'multiline':False]['text':'     nWaitersBlocked -= nWaitersGone;     // something is going on here','line_number':88,'multiline':False]['text':'                                          //  - test of timeouts? :-)','line_number':89,'multiline':False]['text':'     sem_post( semBlockLock );','line_number':90,'multiline':False]['text':'     nWaitersGone = 0;','line_number':91,'multiline':False]['text':'   }','line_number':92,'multiline':False]['text':'   unlock( mtxUnblockLock );','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':'   if ( 1 == nSignalsWasLeft ) {','line_number':95,'multiline':False]['text':'     if ( 0 != nWaitersWasGone ) {','line_number':96,'multiline':False]['text':'       // sem_adjust( semBlockQueue,-nWaitersWasGone );','line_number':97,'multiline':False]['text':'       while ( nWaitersWasGone-- ) {','line_number':98,'multiline':False]['text':'         sem_wait( semBlockQueue );       // better now than spurious later','line_number':99,'multiline':False]['text':'       }','line_number':100,'multiline':False]['text':'     } sem_post( semBlockLock );          // open the gate','line_number':101,'multiline':False]['text':'   }','line_number':102,'multiline':False]['text':'','line_number':103,'multiline':False]['text':'   lock( mtxExternal );','line_number':104,'multiline':False]['text':'','line_number':105,'multiline':False]['text':'   return ( bTimedOut ) ? ETIMEOUT : 0;','line_number':106,'multiline':False]['text':' }','line_number':107,'multiline':False]['text':'','line_number':108,'multiline':False]['text':' signal(bAll) {','line_number':109,'multiline':False]['text':'','line_number':110,'multiline':False]['text':'   [auto: register int result         ]','line_number':111,'multiline':False]['text':'   [auto: register int nSignalsToIssue]','line_number':112,'multiline':False]['text':'','line_number':113,'multiline':False]['text':'   lock( mtxUnblockLock );','line_number':114,'multiline':False]['text':'','line_number':115,'multiline':False]['text':'   if ( 0 != nWaitersToUnblock ) {        // the gate is closed!!!','line_number':116,'multiline':False]['text':'     if ( 0 == nWaitersBlocked ) {        // NO-OP','line_number':117,'multiline':False]['text':'       return unlock( mtxUnblockLock );','line_number':118,'multiline':False]['text':'     }','line_number':119,'multiline':False]['text':'     if (bAll) {','line_number':120,'multiline':False]['text':'       nWaitersToUnblock += nSignalsToIssue=nWaitersBlocked;','line_number':121,'multiline':False]['text':'       nWaitersBlocked = 0;','line_number':122,'multiline':False]['text':'     }','line_number':123,'multiline':False]['text':'     else {','line_number':124,'multiline':False]['text':'       nSignalsToIssue = 1;','line_number':125,'multiline':False]['text':'       nWaitersToUnblock++;','line_number':126,'multiline':False]['text':'       nWaitersBlocked--;','line_number':127,'multiline':False]['text':'     }','line_number':128,'multiline':False]['text':'   }','line_number':129,'multiline':False]['text':'   else if ( nWaitersBlocked > nWaitersGone ) { // HARMLESS RACE CONDITION!','line_number':130,'multiline':False]['text':'     sem_wait( semBlockLock );                  // close the gate','line_number':131,'multiline':False]['text':'     if ( 0 != nWaitersGone ) {','line_number':132,'multiline':False]['text':'       nWaitersBlocked -= nWaitersGone;','line_number':133,'multiline':False]['text':'       nWaitersGone = 0;','line_number':134,'multiline':False]['text':'     }','line_number':135,'multiline':False]['text':'     if (bAll) {','line_number':136,'multiline':False]['text':'       nSignalsToIssue = nWaitersToUnblock = nWaitersBlocked;','line_number':137,'multiline':False]['text':'       nWaitersBlocked = 0;','line_number':138,'multiline':False]['text':'     }','line_number':139,'multiline':False]['text':'     else {','line_number':140,'multiline':False]['text':'       nSignalsToIssue = nWaitersToUnblock = 1;','line_number':141,'multiline':False]['text':'       nWaitersBlocked--;','line_number':142,'multiline':False]['text':'     }','line_number':143,'multiline':False]['text':'   }','line_number':144,'multiline':False]['text':'   else { // NO-OP','line_number':145,'multiline':False]['text':'     return unlock( mtxUnblockLock );','line_number':146,'multiline':False]['text':'   }','line_number':147,'multiline':False]['text':'','line_number':148,'multiline':False]['text':'   unlock( mtxUnblockLock );','line_number':149,'multiline':False]['text':'   sem_post( semBlockQueue,nSignalsToIssue );','line_number':150,'multiline':False]['text':'   return result;','line_number':151,'multiline':False]['text':' }','line_number':152,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':153,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':154,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':155,'multiline':False]['text':' Required interface for ConditionMembers','line_number':158,'multiline':False]['text':' class ConditionMembers','line_number':159,'multiline':False]['text':' {','line_number':160,'multiline':False]['text':'    typedef implementation_defined semaphore_type;','line_number':161,'multiline':False]['text':'    typedef implementation_defined mutex_type;','line_number':162,'multiline':False]['text':'    typedef implementation_defined integer_type;','line_number':163,'multiline':False]['text':'','line_number':164,'multiline':False]['text':'    integer_type    &get_nwaiters_blocked()','line_number':165,'multiline':False]['text':'    integer_type    &get_nwaiters_gone()','line_number':166,'multiline':False]['text':'    integer_type    &get_nwaiters_to_unblock()','line_number':167,'multiline':False]['text':'    semaphore_type  &get_sem_block_queue()','line_number':168,'multiline':False]['text':'    semaphore_type  &get_sem_block_lock()','line_number':169,'multiline':False]['text':'    mutex_type      &get_mtx_unblock_lock()','line_number':170,'multiline':False]['text':' };','line_number':171,'multiline':False]['text':'','line_number':172,'multiline':False]['text':' Must be initialized as following','line_number':173,'multiline':False]['text':'','line_number':174,'multiline':False]['text':'    get_nwaiters_blocked() == 0','line_number':175,'multiline':False]['text':'    get_nwaiters_gone() == 0','line_number':176,'multiline':False]['text':'    get_nwaiters_to_unblock() == 0','line_number':177,'multiline':False]['text':'    get_sem_block_queue() == initial count 0','line_number':178,'multiline':False]['text':'    get_sem_block_lock() == initial count 1','line_number':179,'multiline':False]['text':'    get_mtx_unblock_lock() (unlocked)','line_number':180,'multiline':False]['text':'','line_number':181,'multiline':False]['text':'Initialize to avoid warnings','line_number':199,'multiline':False]['text':'Unlock external lock and program for relock','line_number':207,'multiline':False]['text':' timeout (or canceled)','line_number':216,'multiline':False]['text':' count spurious wakeups.','line_number':221,'multiline':False]['text':' open the gate.','line_number':226,'multiline':False]['text':' do not open the gate below again.','line_number':227,'multiline':False]['text':' timeout/canceled or spurious semaphore :-)','line_number':235,'multiline':False]['text':' something is going on here - test of timeouts? :-)','line_number':237,'multiline':False]['text':'locker's destructor triggers data.get_mtx_unblock_lock().unlock()','line_number':241,'multiline':False]['text':' sem_adjust( data.get_sem_block_queue(),-nwaiters_was_gone );','line_number':246,'multiline':False]['text':' better now than spurious later','line_number':248,'multiline':False]['text':' open the gate','line_number':251,'multiline':False]['text':'lock.lock(); called from unlocker destructor','line_number':254,'multiline':False]['text':' the gate is closed!!!','line_number':266,'multiline':False]['text':' NO-OP','line_number':267,'multiline':False]['text':'locker's destructor triggers data.get_mtx_unblock_lock().unlock()','line_number':268,'multiline':False]['text':' HARMLESS RACE CONDITION!','line_number':281,'multiline':False]['text':' close the gate','line_number':282,'multiline':False]['text':' NO-OP','line_number':296,'multiline':False]['text':'locker's destructor triggers data.get_mtx_unblock_lock().unlock()','line_number':297,'multiline':False]['text':'locker's destructor triggers data.get_mtx_unblock_lock().unlock()','line_number':300,'multiline':False]['text':'Non-copyable','line_number':318,'multiline':False]['text':'Compiler-generated destructor is OK','line_number':329,'multiline':False]['text':'~condition_8a_wrapper(){}','line_number':330,'multiline':False]['text':'namespace ipcdetail','line_number':383,'multiline':False]['text':'namespace interprocess','line_number':384,'multiline':False]['text':'namespace boost','line_number':385,'multiline':False]['text':'BOOST_INTERPROCESS_DETAIL_CONDITION_ALGORITHM_8A_HPP','line_number':389,'multiline':False]