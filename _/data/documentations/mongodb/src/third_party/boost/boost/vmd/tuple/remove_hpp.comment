['text':'  (C) Copyright Edward Diener 2015','line_number':2,'multiline':False]['text':'  Use, modification and distribution are subject to the Boost Software License,','line_number':3,'multiline':False]['text':'  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt).','line_number':5,'multiline':False]['text':'

  The succeeding comments in this file are in doxygen format.

','line_number':21,'multiline':True]['text':'* \file
','line_number':27,'multiline':True]['text':'* \def BOOST_VMD_TUPLE_REMOVE(tuple,index)

    \brief removes an element from a tuple.

    tuple = tuple from which an element is to be removed. <br/>
    index = The zero-based position in tuple of the element to be removed.

    If index is greater or equal to the tuple size the result is undefined.
    If the tuple is a single element and the index is 0 the result is an empty tuple.
    Otherwise the result is a tuple after removing the index element.
','line_number':30,'multiline':True]['text':'','line_number':54,'multiline':True]['text':'* \def BOOST_VMD_TUPLE_REMOVE_D(d,tuple,index)

    \brief removes an element from a tuple. It reenters BOOST_PP_WHILE with maximum efficiency.

    d     = The next available BOOST_PP_WHILE iteration. <br/>
    tuple = tuple from which an element is to be removed. <br/>
    index = The zero-based position in tuple of the element to be removed.

    If index is greater or equal to the tuple size the result is undefined.
    If the tuple is a single element and the index is 0 the result is an empty tuple.
    Otherwise the result is a tuple after removing the index element.
','line_number':56,'multiline':True]['text':'','line_number':81,'multiline':True]['text':' BOOST_PP_VARIADICS ','line_number':83,'multiline':True]['text':' BOOST_VMD_TUPLE_REMOVE_HPP ','line_number':84,'multiline':True]