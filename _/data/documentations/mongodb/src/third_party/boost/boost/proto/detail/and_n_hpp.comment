['text':'/////////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'/ \file and_n.hpp','line_number':12,'multiline':False]['text':'/ Definitions of and_N, and_impl','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':15,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':16,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':17,'multiline':False]['text':' BOOST_PP_IS_ITERATING','line_number':31,'multiline':False]['text':' Assymetry here between the handling of and_N and or_N because','line_number':35,'multiline':False]['text':' and_N is used by lambda_matches up to BOOST_PROTO_MAX_ARITY,','line_number':36,'multiline':False]['text':' regardless of how low BOOST_PROTO_MAX_LOGICAL_ARITY is.','line_number':37,'multiline':False]['text':'','line_number':67,'multiline':True]['text':' Fix: jfalcou - 12/29/2010','line_number':79,'multiline':False]['text':' Avoid the use of comma operator here so as not to find Proto's','line_number':80,'multiline':False]['text':' by accident.','line_number':81,'multiline':False]['text':' expands to G0()(e,s,d); G1()(e,s,d); ... G{N-1}()(e,s,d);','line_number':82,'multiline':False]