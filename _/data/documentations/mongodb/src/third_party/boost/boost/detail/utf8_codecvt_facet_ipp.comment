['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':1,'multiline':False]['text':' utf8_codecvt_facet.ipp','line_number':2,'multiline':False]['text':' Copyright (c) 2001 Ronald Garcia, Indiana University (garcia@osl.iu.edu)','line_number':4,'multiline':False]['text':' Andrew Lumsdaine, Indiana University (lums@osl.iu.edu).','line_number':5,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':6,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':' Please see the comments in <boost/detail/utf8_codecvt_facet.hpp> to','line_number':10,'multiline':False]['text':' learn how this file should be used.','line_number':11,'multiline':False]['text':' for multi-byte converson routines','line_number':15,'multiline':False]['text':' If we don't have wstring, then Unicode support','line_number':21,'multiline':False]['text':' is not available anyway, so we don't need to even','line_number':22,'multiline':False]['text':' compiler this file. This also fixes the problem','line_number':23,'multiline':False]['text':' with mingw, which can compile this file, but will','line_number':24,'multiline':False]['text':' generate link error when building DLL.','line_number':25,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':30,'multiline':False]['text':' implementation for wchar_t','line_number':31,'multiline':False]['text':' namespace detail','line_number':43,'multiline':False]['text':' Translate incoming UTF-8 into UCS-4','line_number':55,'multiline':False]['text':'state','line_number':57,'multiline':True]['text':' Basic algorithm: The first octet determines how many','line_number':65,'multiline':False]['text':' octets total make up the UCS-4 character. The remaining','line_number':66,'multiline':False]['text':' "continuing octets" all begin with "10". To convert, subtract','line_number':67,'multiline':False]['text':' the amount that specifies the number of octets from the first','line_number':68,'multiline':False]['text':' octet. Subtract 0x80 (1000 0000) from each continuing octet,','line_number':69,'multiline':False]['text':' then mash the whole lot together. Note that each continuing','line_number':70,'multiline':False]['text':' octet only uses 6 bits as unique values, so only shift by','line_number':71,'multiline':False]['text':' multiples of 6 to combine.','line_number':72,'multiline':False]['text':' Error checking on the first octet','line_number':76,'multiline':False]['text':' The first octet is adjusted by a value dependent upon','line_number':83,'multiline':False]['text':' the number of "continuing octets" encoding the character','line_number':84,'multiline':False]['text':' The unsigned char conversion is necessary in case char is','line_number':87,'multiline':False]['text':' signed (I learned this the hard way)','line_number':88,'multiline':False]['text':' Invariants:','line_number':92,'multiline':False]['text':'   1) At the start of the loop, 'i' continuing characters have been','line_number':93,'multiline':False]['text':'      processed','line_number':94,'multiline':False]['text':'   2) *from points to the next continuing character to be processed.','line_number':95,'multiline':False]['text':' Error checking on continuing characters','line_number':99,'multiline':False]['text':' each continuing character has an extra (10xxxxxx)b attached to','line_number':108,'multiline':False]['text':' it that must be removed.','line_number':109,'multiline':False]['text':' If the buffer ends with an incomplete unicode character...','line_number':114,'multiline':False]['text':' rewind "from" to before the current character translation','line_number':116,'multiline':False]['text':' Were we done converting or did we run out of destination space?','line_number':126,'multiline':False]['text':'state','line_number':134,'multiline':True]['text':' Check for invalid UCS-4 character','line_number':147,'multiline':False]['text':' RG - comment this formula better','line_number':156,'multiline':False]['text':' Process the first character','line_number':159,'multiline':False]['text':' Process the continuation characters','line_number':163,'multiline':False]['text':' Invariants: At the start of the loop:','line_number':164,'multiline':False]['text':'   1) 'i' continuing octets have been generated','line_number':165,'multiline':False]['text':'   2) '*to' points to the next location to place an octet','line_number':166,'multiline':False]['text':'   3) shift_exponent is 6 more than needed for the next octet','line_number':167,'multiline':False]['text':' If we filled up the out buffer before encoding the character','line_number':174,'multiline':False]['text':' Were we done or did we run out of destination space','line_number':185,'multiline':False]['text':' How many char objects can I process to get <= max_limit','line_number':192,'multiline':False]['text':' wchar_t objects?','line_number':193,'multiline':False]['text':' The buffer may represent incomplete characters, so terminate early if one is found','line_number':207,'multiline':False]['text':' if the 0-bit (MSB) is 0, then 1 character','line_number':219,'multiline':False]['text':' Otherwise the count number of consecutive 1 bits starting at MSB','line_number':222,'multiline':False]['text':'    assert(0xc0 <= lead_octet && lead_octet <= 0xfd);','line_number':223,'multiline':False]['text':' Note that the following code will generate warnings on some platforms','line_number':254,'multiline':False]['text':' where wchar_t is defined as UCS2.  The warnings are superfluous as the','line_number':255,'multiline':False]['text':' specialization is never instantitiated with such compilers, but this','line_number':256,'multiline':False]['text':' can cause problems if warnings are being treated as errors, so we guard','line_number':257,'multiline':False]['text':' against that. Including <boost/detail/utf8_codecvt_facet.hpp> as we do','line_number':258,'multiline':False]['text':' should be enough to get WCHAR_MAX defined.','line_number':259,'multiline':False]['text':' cope with VC++ 7.1 or earlier having invalid WCHAR_MAX','line_number':263,'multiline':False]['text':' 7.1 or earlier','line_number':264,'multiline':False]['text':' namespace detail','line_number':284,'multiline':False]['text':' How many "continuing octets" will be needed for this word','line_number':286,'multiline':False]['text':' ==   total octets - 1.','line_number':287,'multiline':False]