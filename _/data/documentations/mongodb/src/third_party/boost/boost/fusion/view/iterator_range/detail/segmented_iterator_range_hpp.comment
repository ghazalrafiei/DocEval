['text':'=============================================================================
    Copyright (c) 2011 Eric Niebler

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]['text':'  Invariants:','line_number':29,'multiline':False]['text':'  - Each segmented iterator has a stack','line_number':30,'multiline':False]['text':'  - Each value in the stack is an iterator range','line_number':31,'multiline':False]['text':'  - The range at the top of the stack points to values','line_number':32,'multiline':False]['text':'  - All other ranges point to ranges','line_number':33,'multiline':False]['text':'  - The front of each range in the stack (besides the','line_number':34,'multiline':False]['text':'    topmost) is the range above it','line_number':35,'multiline':False]['text':'auto make_segment_sequence_front(stack_begin)','line_number':72,'multiline':False]['text':'{','line_number':73,'multiline':False]['text':'  switch (size(stack_begin))','line_number':74,'multiline':False]['text':'  {','line_number':75,'multiline':False]['text':'  case 1:','line_number':76,'multiline':False]['text':'    return nil_;','line_number':77,'multiline':False]['text':'  case 2:','line_number':78,'multiline':False]['text':'    // car(cdr(stack_begin)) is a range over values.','line_number':79,'multiline':False]['text':'    assert(end(front(car(stack_begin))) == end(car(cdr(stack_begin))));','line_number':80,'multiline':False]['text':'    return iterator_range(begin(car(cdr(stack_begin))), end(front(car(stack_begin))));','line_number':81,'multiline':False]['text':'  default:','line_number':82,'multiline':False]['text':'    // car(cdr(stack_begin)) is a range over segments. We replace the','line_number':83,'multiline':False]['text':'    // front with a view that is restricted.','line_number':84,'multiline':False]['text':'    assert(end(segments(front(car(stack_begin)))) == end(car(cdr(stack_begin))));','line_number':85,'multiline':False]['text':'    return segment_sequence(','line_number':86,'multiline':False]['text':'      push_front(','line_number':87,'multiline':False]['text':'        // The following could be a segment_sequence. It then gets wrapped','line_number':88,'multiline':False]['text':'        // in a single_view, and push_front puts it in a join_view with the','line_number':89,'multiline':False]['text':'        // following iterator_range.','line_number':90,'multiline':False]['text':'        iterator_range(next(begin(car(cdr(stack_begin)))), end(segments(front(car(stack_begin))))),','line_number':91,'multiline':False]['text':'        make_segment_sequence_front(cdr(stack_begin))));','line_number':92,'multiline':False]['text':'  }','line_number':93,'multiline':False]['text':'}','line_number':94,'multiline':False]['text':' assert(end(segments(front(car(stack_begin)))) == end(car(cdr(stack_begin))));','line_number':99,'multiline':False]['text':'return segment_sequence(','line_number':159,'multiline':False]['text':'  push_front(','line_number':160,'multiline':False]['text':'    iterator_range(next(begin(car(cdr(stack_begin)))), end(segments(front(car(stack_begin))))),','line_number':161,'multiline':False]['text':'    make_segment_sequence_front(cdr(stack_begin))));','line_number':162,'multiline':False]['text':' assert(end(front(car(stack_begin))) == end(car(cdr(stack_begin))));','line_number':173,'multiline':False]['text':' return iterator_range(begin(car(cdr(stack_begin))), end(front(car(stack_begin))));','line_number':206,'multiline':False]['text':' nil_','line_number':214,'multiline':False]['text':'auto make_segment_sequence_back(stack_end)','line_number':223,'multiline':False]['text':'{','line_number':224,'multiline':False]['text':'  switch (size(stack_end))','line_number':225,'multiline':False]['text':'  {','line_number':226,'multiline':False]['text':'  case 1:','line_number':227,'multiline':False]['text':'    return nil_;','line_number':228,'multiline':False]['text':'  case 2:','line_number':229,'multiline':False]['text':'    // car(cdr(stack_back)) is a range over values.','line_number':230,'multiline':False]['text':'    assert(end(front(car(stack_end))) == end(car(cdr(stack_end))));','line_number':231,'multiline':False]['text':'    return iterator_range(begin(front(car(stack_end))), begin(car(cdr(stack_end))));','line_number':232,'multiline':False]['text':'  default:','line_number':233,'multiline':False]['text':'    // car(cdr(stack_begin)) is a range over segments. We replace the','line_number':234,'multiline':False]['text':'    // back with a view that is restricted.','line_number':235,'multiline':False]['text':'    assert(end(segments(front(car(stack_end)))) == end(car(cdr(stack_end))));','line_number':236,'multiline':False]['text':'    return segment_sequence(','line_number':237,'multiline':False]['text':'      push_back(','line_number':238,'multiline':False]['text':'        iterator_range(begin(segments(front(car(stack_end)))), begin(car(cdr(stack_end)))),','line_number':239,'multiline':False]['text':'        make_segment_sequence_back(cdr(stack_end))));','line_number':240,'multiline':False]['text':'  }','line_number':241,'multiline':False]['text':'}','line_number':242,'multiline':False]['text':' assert(end(segments(front(car(stack_begin)))) == end(car(cdr(stack_begin))));','line_number':247,'multiline':False]['text':'  return segment_sequence(','line_number':305,'multiline':False]['text':'    push_back(','line_number':306,'multiline':False]['text':'      iterator_range(begin(segments(front(car(stack_end)))), begin(car(cdr(stack_end)))),','line_number':307,'multiline':False]['text':'      make_segment_sequence_back(cdr(stack_end))));','line_number':308,'multiline':False]['text':' assert(end(front(car(stack_end))) == end(car(cdr(stack_end))));','line_number':319,'multiline':False]['text':' return iterator_range(begin(front(car(stack_end))), begin(car(cdr(stack_end))));','line_number':352,'multiline':False]['text':' nil_','line_number':360,'multiline':False]['text':'auto make_segmented_range_reduce(stack_begin, stack_end)','line_number':369,'multiline':False]['text':'{','line_number':370,'multiline':False]['text':'  if (size(stack_begin) == 1 && size(stack_end) == 1)','line_number':371,'multiline':False]['text':'  {','line_number':372,'multiline':False]['text':'    return segment_sequence(','line_number':373,'multiline':False]['text':'      single_view(','line_number':374,'multiline':False]['text':'        iterator_range(begin(car(stack_begin)), begin(car(stack_end)))));','line_number':375,'multiline':False]['text':'  }','line_number':376,'multiline':False]['text':'  else','line_number':377,'multiline':False]['text':'  {','line_number':378,'multiline':False]['text':'    // We are in the case where both begin_stack and/or end_stack have','line_number':379,'multiline':False]['text':'    // more than one element. Throw away any part of the tree where','line_number':380,'multiline':False]['text':'    // begin and end refer to the same segment.','line_number':381,'multiline':False]['text':'    if (begin(car(stack_begin)) == begin(car(stack_end)))','line_number':382,'multiline':False]['text':'    {','line_number':383,'multiline':False]['text':'      return make_segmented_range_reduce(cdr(stack_begin), cdr(stack_end));','line_number':384,'multiline':False]['text':'    }','line_number':385,'multiline':False]['text':'    else','line_number':386,'multiline':False]['text':'    {','line_number':387,'multiline':False]['text':'      // We are in the case where begin_stack and end_stack (a) have','line_number':388,'multiline':False]['text':'      // more than one element each, and (b) they point to different','line_number':389,'multiline':False]['text':'      // segments. We must construct a segmented sequence.','line_number':390,'multiline':False]['text':'      return segment_sequence(','line_number':391,'multiline':False]['text':'          push_back(','line_number':392,'multiline':False]['text':'            push_front(','line_number':393,'multiline':False]['text':'                iterator_range(','line_number':394,'multiline':False]['text':'                    fusion::next(begin(car(stack_begin))),','line_number':395,'multiline':False]['text':'                    begin(car(stack_end))),                 // a range of (possibly segmented) ranges.','line_number':396,'multiline':False]['text':'              make_segment_sequence_front(stack_begin)),    // should be a (possibly segmented) range.','line_number':397,'multiline':False]['text':'            make_segment_sequence_back(stack_end)));        // should be a (possibly segmented) range.','line_number':398,'multiline':False]['text':'    }','line_number':399,'multiline':False]['text':'  }','line_number':400,'multiline':False]['text':'}','line_number':401,'multiline':False]['text':'return segment_sequence(','line_number':447,'multiline':False]['text':'    push_back(','line_number':448,'multiline':False]['text':'      push_front(','line_number':449,'multiline':False]['text':'        iterator_range(','line_number':450,'multiline':False]['text':'            fusion::next(begin(car(stack_begin))),','line_number':451,'multiline':False]['text':'            begin(car(stack_end))),                 // a range of (possibly segmented) ranges.','line_number':452,'multiline':False]['text':'        make_segment_sequence_front(stack_begin)),  // should be a (possibly segmented) range.','line_number':453,'multiline':False]['text':'      make_segment_sequence_back(stack_end)));      // should be a (possibly segmented) range.','line_number':454,'multiline':False]['text':'return segment_sequence(','line_number':518,'multiline':False]['text':'  single_view(','line_number':519,'multiline':False]['text':'    iterator_range(begin(car(stack_begin)), begin(car(stack_end)))));','line_number':520,'multiline':False]['text':'auto make_segmented_range(begin, end)','line_number':525,'multiline':False]['text':'{','line_number':526,'multiline':False]['text':'  return make_segmented_range_reduce(reverse(begin.context), reverse(end.context));','line_number':527,'multiline':False]['text':'}','line_number':528,'multiline':False]