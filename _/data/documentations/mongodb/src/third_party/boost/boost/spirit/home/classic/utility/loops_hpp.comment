['text':'=============================================================================
    Copyright (c) 1998-2003 Joel de Guzman
    Copyright (c) 2002 Raghavendra Satish
    Copyright (c) 2002 Jeff Westfahl
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':13,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':20,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':25,'multiline':False]['text':'','line_number':26,'multiline':False]['text':'  fixed_loop class','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':'      This class takes care of the construct:','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':'          repeat_p (exact) [p]','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':'      where 'p' is a parser and 'exact' is the number of times to','line_number':33,'multiline':False]['text':'      repeat. The parser iterates over the input exactly 'exact' times.','line_number':34,'multiline':False]['text':'      The parse function fails if the parser does not match the input','line_number':35,'multiline':False]['text':'      exactly 'exact' times.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':'      This class is parametizable and can accept constant arguments','line_number':38,'multiline':False]['text':'      (e.g. repeat_p (5) [p]) as well as references to variables (e.g.','line_number':39,'multiline':False]['text':'      repeat_p (ref (n)) [p]).','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':42,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':89,'multiline':False]['text':'','line_number':90,'multiline':False]['text':'  finite_loop class','line_number':91,'multiline':False]['text':'','line_number':92,'multiline':False]['text':'      This class takes care of the construct:','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':'          repeat_p (min, max) [p]','line_number':95,'multiline':False]['text':'','line_number':96,'multiline':False]['text':'      where 'p' is a parser, 'min' and 'max' specifies the minimum and','line_number':97,'multiline':False]['text':'      maximum iterations over 'p'. The parser iterates over the input','line_number':98,'multiline':False]['text':'      at least 'min' times and at most 'max' times. The parse function','line_number':99,'multiline':False]['text':'      fails if the parser does not match the input at least 'min' times','line_number':100,'multiline':False]['text':'      and at most 'max' times.','line_number':101,'multiline':False]['text':'','line_number':102,'multiline':False]['text':'      This class is parametizable and can accept constant arguments','line_number':103,'multiline':False]['text':'      (e.g. repeat_p (5, 10) [p]) as well as references to variables','line_number':104,'multiline':False]['text':'      (e.g. repeat_p (ref (n1), ref (n2)) [p]).','line_number':105,'multiline':False]['text':'','line_number':106,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':107,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':167,'multiline':False]['text':'','line_number':168,'multiline':False]['text':'  infinite_loop class','line_number':169,'multiline':False]['text':'','line_number':170,'multiline':False]['text':'      This class takes care of the construct:','line_number':171,'multiline':False]['text':'','line_number':172,'multiline':False]['text':'          repeat_p (min, more) [p]','line_number':173,'multiline':False]['text':'','line_number':174,'multiline':False]['text':'      where 'p' is a parser, 'min' is the minimum iteration over 'p'','line_number':175,'multiline':False]['text':'      and more specifies that the iteration should proceed','line_number':176,'multiline':False]['text':'      indefinitely. The parser iterates over the input at least 'min'','line_number':177,'multiline':False]['text':'      times and continues indefinitely until 'p' fails or all of the','line_number':178,'multiline':False]['text':'      input is parsed. The parse function fails if the parser does not','line_number':179,'multiline':False]['text':'      match the input at least 'min' times.','line_number':180,'multiline':False]['text':'','line_number':181,'multiline':False]['text':'      This class is parametizable and can accept constant arguments','line_number':182,'multiline':False]['text':'      (e.g. repeat_p (5, more) [p]) as well as references to variables','line_number':183,'multiline':False]['text':'      (e.g. repeat_p (ref (n), more) [p]).','line_number':184,'multiline':False]['text':'','line_number':185,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':186,'multiline':False]['text':' namespace impl','line_number':278,'multiline':False]['text':' namespace BOOST_SPIRIT_CLASSIC_NS','line_number':317,'multiline':False]['text':' #if !defined(BOOST_SPIRIT_LOOPS_HPP)','line_number':319,'multiline':False]