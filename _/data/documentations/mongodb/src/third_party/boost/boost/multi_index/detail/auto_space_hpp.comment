['text':' Copyright 2003-2022 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/multi_index for library home page.
 ','line_number':1,'multiline':True]['text':' keep it first to prevent nasty warns in MSVC ','line_number':16,'multiline':True]['text':' auto_space provides uninitialized space suitably to store
 * a given number of elements of a given type.
 ','line_number':30,'multiline':True]['text':' NB: it is not clear whether using an allocator to handle
 * zero-sized arrays of elements is conformant or not. GCC 3.3.1
 * and prior fail here, other stdlibs handle the issue gracefully.
 * To be on the safe side, the case n==0 is given special treatment.
 * References:
 *   GCC Bugzilla, "standard allocator crashes when deallocating segment
 *    "of zero length", http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14176
 *   C++ Standard Library Defect Report List (Revision 28), issue 199
 *     "What does allocate(0) return?",
 *     http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#199
 ','line_number':34,'multiline':True]['text':' swap_allocators ','line_number':74,'multiline':True]['text':' swap_allocators ','line_number':81,'multiline':True]['text':' namespace multi_index::detail ','line_number':99,'multiline':True]['text':' namespace multi_index ','line_number':101,'multiline':True]['text':' namespace boost ','line_number':103,'multiline':True]