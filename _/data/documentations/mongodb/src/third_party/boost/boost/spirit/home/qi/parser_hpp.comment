['text':'=============================================================================
    Copyright (c) 2001-2011 Joel de Guzman

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]['text':'[parser_base_parser','line_number':20,'multiline':False]['text':' Requirement: p.parse(f, l, context, skip, attr) -> bool','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':'  p:          a parser','line_number':30,'multiline':False]['text':'  f, l:       first/last iterator pair','line_number':31,'multiline':False]['text':'  context:    enclosing rule context (can be unused_type)','line_number':32,'multiline':False]['text':'  skip:       skipper (can be unused_type)','line_number':33,'multiline':False]['text':'  attr:       attribute (can be unused_type)','line_number':34,'multiline':False]['text':' Requirement: p.what(context) -> info','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':'  p:          a parser','line_number':38,'multiline':False]['text':'  context:    enclosing rule context (can be unused_type)','line_number':39,'multiline':False]['text':' Requirement: P::template attribute<Ctx, Iter>::type','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':'  P:          a parser type','line_number':43,'multiline':False]['text':'  Ctx:        A context type (can be unused_type)','line_number':44,'multiline':False]['text':'  Iter:       An iterator type (can be unused_type)','line_number':45,'multiline':False]['text':']','line_number':52,'multiline':False]['text':' Requirement: p.elements -> fusion sequence','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':' p:   a composite parser','line_number':67,'multiline':False]['text':' Requirement: P::elements_type -> fusion sequence','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' P:   a composite parser type','line_number':71,'multiline':False]['text':' Requirement: p.subject -> subject parser','line_number':79,'multiline':False]['text':'','line_number':80,'multiline':False]['text':' p:   a unary parser','line_number':81,'multiline':False]['text':' Requirement: P::subject_type -> subject parser type','line_number':83,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' P:   a unary parser type','line_number':85,'multiline':False]['text':' Requirement: p.left -> left parser','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' p:   a binary parser','line_number':95,'multiline':False]['text':' Requirement: P::left_type -> left parser type','line_number':97,'multiline':False]['text':'','line_number':98,'multiline':False]['text':' P:   a binary parser type','line_number':99,'multiline':False]['text':' Requirement: p.right -> right parser','line_number':101,'multiline':False]['text':'','line_number':102,'multiline':False]['text':' p:   a binary parser','line_number':103,'multiline':False]['text':' Requirement: P::right_type -> right parser type','line_number':105,'multiline':False]['text':'','line_number':106,'multiline':False]['text':' P:   a binary parser type','line_number':107,'multiline':False]['text':' classification','line_number':111,'multiline':False]['text':' parser type identification','line_number':122,'multiline':False]