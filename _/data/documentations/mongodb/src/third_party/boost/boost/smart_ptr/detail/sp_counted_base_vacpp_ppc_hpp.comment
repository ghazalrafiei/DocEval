['text':'','line_number':4,'multiline':False]['text':'  detail/sp_counted_base_vacpp_ppc.hpp - xlC(vacpp) on POWER','line_number':5,'multiline':False]['text':'   based on: detail/sp_counted_base_w32.hpp','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'  Copyright (c) 2001, 2002, 2003 Peter Dimov and Multi Media Ltd.','line_number':8,'multiline':False]['text':'  Copyright 2004-2005 Peter Dimov','line_number':9,'multiline':False]['text':'  Copyright 2006 Michael van der Westhuizen','line_number':10,'multiline':False]['text':'  Copyright 2012 IBM Corp.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':13,'multiline':False]['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':14,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':'  Lock-free algorithm by Alexander Terekhov','line_number':18,'multiline':False]['text':'','line_number':19,'multiline':False]['text':'  Thanks to Ben Hitchings for the #weak + (#shared != 0)','line_number':20,'multiline':False]['text':'  formulation','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' ++*pw;','line_number':50,'multiline':False]['text':' return --*pw;','line_number':58,'multiline':False]['text':' if( *pw != 0 ) ++*pw;','line_number':68,'multiline':False]['text':' return *pw;','line_number':69,'multiline':False]['text':' loop until state is known','line_number':74,'multiline':False]['text':' #shared','line_number':91,'multiline':False]['text':' #weak + (#shared != 0)','line_number':92,'multiline':False]['text':' pad to prevent false sharing','line_number':94,'multiline':False]['text':' nothrow','line_number':101,'multiline':False]['text':' dispose() is called when use_count_ drops to zero, to release','line_number':105,'multiline':False]['text':' the resources managed by *this.','line_number':106,'multiline':False]['text':' nothrow','line_number':108,'multiline':False]['text':' destroy() is called when weak_count_ drops to zero.','line_number':110,'multiline':False]['text':' nothrow','line_number':112,'multiline':False]['text':' true on success','line_number':126,'multiline':False]['text':' nothrow','line_number':131,'multiline':False]['text':' nothrow','line_number':140,'multiline':False]['text':' nothrow','line_number':145,'multiline':False]['text':' nothrow','line_number':153,'multiline':False]['text':' namespace detail','line_number':159,'multiline':False]['text':' namespace boost','line_number':161,'multiline':False]['text':' #ifndef BOOST_SMART_PTR_DETAIL_SP_COUNTED_BASE_VACPP_PPC_HPP_INCLUDED','line_number':163,'multiline':False]