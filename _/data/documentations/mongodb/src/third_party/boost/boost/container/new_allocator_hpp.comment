['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2014-2015. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'!\file','line_number':27,'multiline':False]['text':'/ @cond','line_number':32,'multiline':False]['text':'/ @endcond','line_number':41,'multiline':False]['text':'! Specialization of new_allocator for void types','line_number':43,'multiline':False]['text':'!A integral constant of type bool with value true','line_number':51,'multiline':False]['text':'!A integral constant of type bool with value true','line_number':53,'multiline':False]['text':' reference-to-void members are impossible','line_number':55,'multiline':False]['text':'!Obtains an new_allocator that allocates','line_number':57,'multiline':False]['text':'!objects of type T2','line_number':58,'multiline':False]['text':'!Default constructor','line_number':65,'multiline':False]['text':'!Never throws','line_number':66,'multiline':False]['text':'!Constructor from other new_allocator.','line_number':70,'multiline':False]['text':'!Never throws','line_number':71,'multiline':False]['text':'!Copy assignment operator from other new_allocator.','line_number':75,'multiline':False]['text':'!Never throws','line_number':76,'multiline':False]['text':'!Constructor from related new_allocator.','line_number':82,'multiline':False]['text':'!Never throws','line_number':83,'multiline':False]['text':'!Swaps two allocators, does nothing','line_number':88,'multiline':False]['text':'!because this new_allocator is stateless','line_number':89,'multiline':False]['text':'!An new_allocator always compares to true, as memory allocated with one','line_number':93,'multiline':False]['text':'!instance can be deallocated by another instance','line_number':94,'multiline':False]['text':'!An new_allocator always compares to false, as memory allocated with one','line_number':98,'multiline':False]['text':'!instance can be deallocated by another instance','line_number':99,'multiline':False]['text':'! This class is a reduced STL-compatible allocator that allocates memory using operator new','line_number':105,'multiline':False]['text':'!A integral constant of type bool with value true','line_number':117,'multiline':False]['text':'!A integral constant of type bool with value true','line_number':119,'multiline':False]['text':'!Obtains an new_allocator that allocates','line_number':122,'multiline':False]['text':'!objects of type T2','line_number':123,'multiline':False]['text':'!Default constructor','line_number':130,'multiline':False]['text':'!Never throws','line_number':131,'multiline':False]['text':'!Constructor from other new_allocator.','line_number':135,'multiline':False]['text':'!Never throws','line_number':136,'multiline':False]['text':'!Copy assignment operator from other new_allocator.','line_number':140,'multiline':False]['text':'!Never throws','line_number':141,'multiline':False]['text':'!Constructor from related new_allocator.','line_number':147,'multiline':False]['text':'!Never throws','line_number':148,'multiline':False]['text':'!Allocates memory for an array of count elements.','line_number':153,'multiline':False]['text':'!Throws bad_alloc if there is no enough memory','line_number':154,'multiline':False]['text':'!Deallocates previously allocated memory.','line_number':163,'multiline':False]['text':'!Never throws','line_number':164,'multiline':False]['text':'!Returns the maximum number of elements that could be allocated.','line_number':168,'multiline':False]['text':'!Never throws','line_number':169,'multiline':False]['text':'!Swaps two allocators, does nothing','line_number':173,'multiline':False]['text':'!because this new_allocator is stateless','line_number':174,'multiline':False]['text':'!An new_allocator always compares to true, as memory allocated with one','line_number':178,'multiline':False]['text':'!instance can be deallocated by another instance','line_number':179,'multiline':False]['text':'!An new_allocator always compares to false, as memory allocated with one','line_number':183,'multiline':False]['text':'!instance can be deallocated by another instance','line_number':184,'multiline':False]['text':'namespace container {','line_number':189,'multiline':False]['text':'namespace boost {','line_number':190,'multiline':False]['text':'BOOST_CONTAINER_NEW_ALLOCATOR_HPP','line_number':194,'multiline':False]