['text':'  Copyright John Maddock 2007.','line_number':1,'multiline':False]['text':'  Copyright Paul A. Bristow 2007','line_number':2,'multiline':False]['text':'  Use, modification and distribution are subject to the','line_number':3,'multiline':False]['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' The main method used is due to Hill:','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' G. W. Hill, Algorithm 396, Student's t-Quantiles,','line_number':23,'multiline':False]['text':' Communications of the ACM, 13(10): 619-620, Oct., 1970.','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':'','line_number':45,'multiline':False]['text':' Asymptotic inverse expansion about normal:','line_number':46,'multiline':False]['text':'','line_number':47,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' Tail and body series are due to Shaw:','line_number':68,'multiline':False]['text':'','line_number':69,'multiline':False]['text':' www.mth.kcl.ac.uk/~shaww/web_page/papers/Tdistribution06.pdf','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':' Shaw, W.T., 2006, "Sampling Student's T distribution - use of','line_number':72,'multiline':False]['text':' the inverse cumulative distribution function."','line_number':73,'multiline':False]['text':' Journal of Computational Finance, Vol 9 Issue 4, pp 37-73, Summer 2006','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' Tail series expansion, see section 6 of Shaw's paper.','line_number':80,'multiline':False]['text':' w is calculated using Eq 60:','line_number':81,'multiline':False]['text':' define some variables:','line_number':84,'multiline':False]['text':'','line_number':88,'multiline':False]['text':' Calculate the coefficients d(k), these depend only on the','line_number':89,'multiline':False]['text':' number of degrees of freedom df, so at least in theory','line_number':90,'multiline':False]['text':' we could tabulate these for fixed df, see p15 of Shaw:','line_number':91,'multiline':False]['text':'','line_number':92,'multiline':False]['text':'','line_number':114,'multiline':False]['text':' Now bring everything together to provide the result,','line_number':115,'multiline':False]['text':' this is Eq 62 of Shaw:','line_number':116,'multiline':False]['text':'','line_number':117,'multiline':False]['text':'','line_number':131,'multiline':False]['text':' Body series for small N:','line_number':132,'multiline':False]['text':'','line_number':133,'multiline':False]['text':' Start with Eq 56 of Shaw:','line_number':134,'multiline':False]['text':'','line_number':135,'multiline':False]['text':'','line_number':138,'multiline':False]['text':' Workspace for the polynomial coefficients:','line_number':139,'multiline':False]['text':'','line_number':140,'multiline':False]['text':'','line_number':142,'multiline':False]['text':' Figure out what the coefficients are, note these depend','line_number':143,'multiline':False]['text':' only on the degrees of freedom (Eq 57 of Shaw):','line_number':144,'multiline':False]['text':'','line_number':145,'multiline':False]['text':'','line_number':200,'multiline':False]['text':' The result is then a polynomial in v (see Eq 56 of Shaw):','line_number':201,'multiline':False]['text':'','line_number':202,'multiline':False]['text':'','line_number':209,'multiline':False]['text':' df = number of degrees of freedom.','line_number':210,'multiline':False]['text':' u = probability.','line_number':211,'multiline':False]['text':' v = 1 - u.','line_number':212,'multiline':False]['text':' l = lanczos type to use.','line_number':213,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' function is symmetric, invert it:','line_number':222,'multiline':False]['text':'','line_number':228,'multiline':False]['text':' we have integer degrees of freedom, try for the special','line_number':229,'multiline':False]['text':' cases first:','line_number':230,'multiline':False]['text':'','line_number':231,'multiline':False]['text':'','line_number':238,'multiline':False]['text':' df = 1 is the same as the Cauchy distribution, see','line_number':239,'multiline':False]['text':' Shaw Eq 35:','line_number':240,'multiline':False]['text':'','line_number':241,'multiline':False]['text':'','line_number':252,'multiline':False]['text':' df = 2 has an exact result, see Shaw Eq 36:','line_number':253,'multiline':False]['text':'','line_number':254,'multiline':False]['text':'','line_number':262,'multiline':False]['text':' df = 4 has an exact result, see Shaw Eq 38 & 39:','line_number':263,'multiline':False]['text':'','line_number':264,'multiline':False]['text':'','line_number':276,'multiline':False]['text':' We get numeric overflow in this area:','line_number':277,'multiline':False]['text':'','line_number':278,'multiline':False]['text':'','line_number':281,'multiline':False]['text':' Newton-Raphson iteration of a polynomial case,','line_number':282,'multiline':False]['text':' choice of seed value is taken from Shaw's online','line_number':283,'multiline':False]['text':' supplement:','line_number':284,'multiline':False]['text':'','line_number':285,'multiline':False]['text':'1 - 4 * (u - 0.5f) * (u - 0.5f);','line_number':286,'multiline':False]['text':' next term is given by Eq 41:','line_number':296,'multiline':False]['text':'','line_number':299,'multiline':False]['text':' Use Eq 45 to extract the result:','line_number':300,'multiline':False]['text':'','line_number':301,'multiline':False]['text':'','line_number':307,'multiline':False]['text':' These are Shaw's "exact" but iterative solutions','line_number':308,'multiline':False]['text':' for even df, the numerical accuracy of these is','line_number':309,'multiline':False]['text':' rather less than Hill's method, so these are disabled','line_number':310,'multiline':False]['text':' for now, which is a shame because they are reasonably','line_number':311,'multiline':False]['text':' quick to evaluate...','line_number':312,'multiline':False]['text':'','line_number':313,'multiline':False]['text':'','line_number':316,'multiline':False]['text':' Newton-Raphson iteration of a polynomial case,','line_number':317,'multiline':False]['text':' choice of seed value is taken from Shaw's online','line_number':318,'multiline':False]['text':' supplement:','line_number':319,'multiline':False]['text':'','line_number':320,'multiline':False]['text':'1 - 4 * (u - 0.5f) * (u - 0.5f);','line_number':322,'multiline':False]['text':' Next term is given by Eq 42:','line_number':330,'multiline':False]['text':'','line_number':333,'multiline':False]['text':' Use Eq 45 to extract the result:','line_number':334,'multiline':False]['text':'','line_number':335,'multiline':False]['text':'','line_number':342,'multiline':False]['text':' Newton-Raphson iteration of a polynomial case,','line_number':343,'multiline':False]['text':' choice of seed value is taken from Shaw's online','line_number':344,'multiline':False]['text':' supplement:','line_number':345,'multiline':False]['text':'','line_number':346,'multiline':False]['text':'1 - 4 * (u - 0.5f) * (u - 0.5f);','line_number':348,'multiline':False]['text':' Next term given by Eq 43:','line_number':356,'multiline':False]['text':'','line_number':360,'multiline':False]['text':' Use Eq 45 to extract the result:','line_number':361,'multiline':False]['text':'','line_number':362,'multiline':False]['text':'','line_number':383,'multiline':False]['text':' Use a roughly linear scheme to choose between Shaw's','line_number':384,'multiline':False]['text':' tail series and body series:','line_number':385,'multiline':False]['text':'','line_number':386,'multiline':False]['text':'','line_number':399,'multiline':False]['text':' Use Hill's method except in the extreme tails','line_number':400,'multiline':False]['text':' where we use Shaw's tail series.','line_number':401,'multiline':False]['text':' The crossover point is roughly exponential in -df:','line_number':402,'multiline':False]['text':'','line_number':403,'multiline':False]['text':'q','line_number':419,'multiline':True]['text':'','line_number':433,'multiline':False]['text':' Need to use inverse incomplete beta to get','line_number':434,'multiline':False]['text':' required precision so not so fast:','line_number':435,'multiline':False]['text':'','line_number':436,'multiline':False]['text':'','line_number':444,'multiline':False]['text':' Figure out sign based on the size of p:','line_number':445,'multiline':False]['text':'','line_number':446,'multiline':False]['text':'','line_number':464,'multiline':False]['text':' Get an estimate of the result:','line_number':465,'multiline':False]['text':'','line_number':466,'multiline':False]['text':' can't do better!','line_number':470,'multiline':False]['text':'','line_number':471,'multiline':False]['text':' Change variables to inverse incomplete beta:','line_number':472,'multiline':False]['text':'','line_number':473,'multiline':False]['text':'','line_number':478,'multiline':False]['text':' t can be so large that x underflows,','line_number':479,'multiline':False]['text':' just return our estimate in that case:','line_number':480,'multiline':False]['text':'','line_number':481,'multiline':False]['text':'','line_number':484,'multiline':False]['text':' Get incomplete beta and it's derivative:','line_number':485,'multiline':False]['text':'','line_number':486,'multiline':False]['text':' Get cdf from incomplete beta result:','line_number':491,'multiline':False]['text':' Get pdf from derivative:','line_number':493,'multiline':False]['text':'','line_number':495,'multiline':False]['text':' Second derivative divided by p1:','line_number':496,'multiline':False]['text':'','line_number':497,'multiline':False]['text':' yacas gives:','line_number':498,'multiline':False]['text':'','line_number':499,'multiline':False]['text':' In> PrettyForm(Simplify(D(t) (1 + t^2/v) ^ (-(v+1)/2)))','line_number':500,'multiline':False]['text':'','line_number':501,'multiline':False]['text':'  |                        | v + 1     |     |','line_number':502,'multiline':False]['text':'  |                       -| ----- + 1 |     |','line_number':503,'multiline':False]['text':'  |                        |   2       |     |','line_number':504,'multiline':False]['text':' -|             |  2     |                   |','line_number':505,'multiline':False]['text':'  |             | t      |                   |','line_number':506,'multiline':False]['text':'  |             | -- + 1 |                   |','line_number':507,'multiline':False]['text':'  | ( v + 1 ) * | v      |               * t |','line_number':508,'multiline':False]['text':' ---------------------------------------------','line_number':509,'multiline':False]['text':'                       v','line_number':510,'multiline':False]['text':'','line_number':511,'multiline':False]['text':' Which after some manipulation is:','line_number':512,'multiline':False]['text':'','line_number':513,'multiline':False]['text':' -p1 * t * (df + 1) / (t^2 + df)','line_number':514,'multiline':False]['text':'','line_number':515,'multiline':False]['text':' Halley step:','line_number':517,'multiline':False]['text':' namespaces','line_number':544,'multiline':False]['text':' BOOST_MATH_SF_DETAIL_INV_T_HPP','line_number':546,'multiline':False]