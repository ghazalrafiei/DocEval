['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2008-2013. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'std::size_t','line_number':27,'multiline':False]['text':' Construct tuple from another tuple.','line_number':55,'multiline':False]['text':'//////////////////////////////////////////////////','line_number':133,'multiline':False]['text':' Builds an index_tuple<0, 1, 2, ..., Num-1>, that will','line_number':134,'multiline':False]['text':' be used to "unpack" into comma-separated values','line_number':135,'multiline':False]['text':' in a function call.','line_number':136,'multiline':False]['text':'//////////////////////////////////////////////////','line_number':137,'multiline':False]['text':'namespace boost { namespace container { namespace dtl {','line_number':159,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DETAIL_VARIADIC_TEMPLATES_TOOLS_HPP','line_number':163,'multiline':False]