['text':'','line_number':1,'multiline':False]['text':' experimental/use_coro.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2021-2022 Klemens D. Morgenstern','line_number':5,'multiline':False]['text':'                         (klemens dot morgenstern at gmx dot net)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':8,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':17,'multiline':False]['text':'/ A @ref completion_token that represents the currently executing resumable','line_number':35,'multiline':False]['text':'/ coroutine.','line_number':36,'multiline':False]['text':'*
 * The @c use_coro_t class, with its value @c use_coro, is used to represent an
 * operation that can be awaited by the current resumable coroutine. This
 * completion token may be passed as a handler to an asynchronous operation.
 * For example:
 *
 * @code coro<void> my_coroutine(tcp::socket my_socket)
 * {
 *   std::size_t n = co_await my_socket.async_read_some(buffer, use_coro);
 *   ...
 * } @endcode
 *
 * When used with co_await, the initiating function (@c async_read_some in the
 * above example) suspends the current coroutine. The coroutine is resumed when
 * the asynchronous operation completes, and the result of the operation is
 * returned.
 ','line_number':37,'multiline':True]['text':'/ Default constructor.','line_number':57,'multiline':False]['text':' defined(BOOST_ASIO_HAS_SOURCE_LOCATION)','line_number':63,'multiline':False]['text':' defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':64,'multiline':False]['text':' defined(BOOST_ASIO_HAS_SOURCE_LOCATION)','line_number':71,'multiline':False]['text':' defined(BOOST_ASIO_HAS_SOURCE_LOCATION)','line_number':75,'multiline':False]['text':' defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':76,'multiline':False]['text':'/ Constructor used to specify file name, line, and function name.','line_number':80,'multiline':False]['text':' defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':87,'multiline':False]['text':' !defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':93,'multiline':False]['text':'/ Adapts an executor to add the @c use_coro_t completion token as the','line_number':96,'multiline':False]['text':'/ default.','line_number':97,'multiline':False]['text':'/ Specify @c use_coro_t as the default completion token type.','line_number':101,'multiline':False]['text':'/ Construct the adapted executor from the inner executor type.','line_number':104,'multiline':False]['text':'/ Type alias to adapt an I/O object to use @c use_coro_t as its','line_number':119,'multiline':False]['text':'/ default completion token type.','line_number':120,'multiline':False]['text':' defined(BOOST_ASIO_HAS_ALIAS_TEMPLATES)','line_number':126,'multiline':False]['text':'   || defined(GENERATING_DOCUMENTATION)','line_number':127,'multiline':False]['text':'/ Function helper to adapt an I/O object to use @c use_coro_t as its','line_number':129,'multiline':False]['text':'/ default completion token type.','line_number':130,'multiline':False]['text':' defined(BOOST_ASIO_ENABLE_HANDLER_TRACKING)','line_number':146,'multiline':False]['text':'/ A @ref completion_token object that represents the currently executing','line_number':149,'multiline':False]['text':'/ resumable coroutine.','line_number':150,'multiline':False]['text':'*
 * See the documentation for boost::asio::use_coro_t for a usage example.
 ','line_number':151,'multiline':True]['text':' namespace experimental','line_number':162,'multiline':False]['text':' namespace asio','line_number':163,'multiline':False]['text':' namespace boost','line_number':164,'multiline':False]['text':' BOOST_ASIO_EXPERIMENTAL_USE_CORO_HPP','line_number':171,'multiline':False]