['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga  2006-2014','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'std::pair','line_number':19,'multiline':False]['text':'/ @cond','line_number':41,'multiline':False]['text':'/ @endcond','line_number':56,'multiline':False]['text':'! The class template rbtree is an intrusive red-black tree container, that','line_number':58,'multiline':False]['text':'! is used to construct intrusive set and multiset containers. The no-throw','line_number':59,'multiline':False]['text':'! guarantee holds only, if the key_compare object','line_number':60,'multiline':False]['text':'! doesn't throw.','line_number':61,'multiline':False]['text':'!','line_number':62,'multiline':False]['text':'! The template parameter \c T is the type to be managed by the container.','line_number':63,'multiline':False]['text':'! The user can specify additional options and if no options are provided','line_number':64,'multiline':False]['text':'! default options are used.','line_number':65,'multiline':False]['text':'!','line_number':66,'multiline':False]['text':'! The container supports the following options:','line_number':67,'multiline':False]['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':68,'multiline':False]['text':'! \c constant_time_size<>, \c size_type<> and','line_number':69,'multiline':False]['text':'! \c compare<>.','line_number':70,'multiline':False]['text':'/ @cond','line_number':77,'multiline':False]['text':'/ @endcond','line_number':79,'multiline':False]['text':'/ @cond','line_number':83,'multiline':False]['text':'/ @endcond','line_number':88,'multiline':False]['text':'/ @cond','line_number':112,'multiline':False]['text':'noncopyable','line_number':115,'multiline':False]['text':'/ @endcond','line_number':118,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree()','line_number':124,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(const key_compare &,const value_traits &)','line_number':129,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':134,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bstree &&)','line_number':142,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::operator=(bstree &&)','line_number':147,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::~bstree()','line_number':152,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()','line_number':155,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()const','line_number':158,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cbegin()const','line_number':161,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()','line_number':164,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()const','line_number':167,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cend()const','line_number':170,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()','line_number':173,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()const','line_number':176,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crbegin()const','line_number':179,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()','line_number':182,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()const','line_number':185,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crend()const','line_number':188,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()','line_number':191,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()const','line_number':194,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::croot()const','line_number':197,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(iterator)','line_number':200,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(const_iterator)','line_number':203,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(iterator)','line_number':206,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(const_iterator)','line_number':209,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::key_comp()const','line_number':212,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::value_comp()const','line_number':215,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::empty()const','line_number':218,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::size()const','line_number':221,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::swap','line_number':224,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(const bstree&,Cloner,Disposer)','line_number':227,'multiline':False]['text':'BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':231,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':235,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(bstree&&,Cloner,Disposer)','line_number':237,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(bstree&&,Cloner,Disposer)','line_number':244,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(reference)','line_number':248,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(const_iterator,reference)','line_number':251,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(Iterator,Iterator)','line_number':254,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(reference)','line_number':258,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(const_iterator,reference)','line_number':261,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':264,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':269,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':275,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':279,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_commit','line_number':283,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(Iterator,Iterator)','line_number':286,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_before','line_number':290,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_back','line_number':293,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_front','line_number':296,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator)','line_number':299,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator,const_iterator)','line_number':302,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const key_type &key)','line_number':305,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':308,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,Disposer)','line_number':312,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':316,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const key_type &, Disposer)','line_number':320,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':324,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear','line_number':328,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear_and_dispose','line_number':331,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const key_type &)const','line_number':335,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':338,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)','line_number':342,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':345,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)const','line_number':349,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':352,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)','line_number':356,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':359,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)const','line_number':363,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':366,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)','line_number':370,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)','line_number':373,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)const','line_number':377,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':380,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)','line_number':384,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':387,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)const','line_number':391,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':395,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':400,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':404,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':409,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':413,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(reference)','line_number':418,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(const_reference)','line_number':421,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(reference)','line_number':424,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(const_reference)const','line_number':427,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::init_node(reference)','line_number':430,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::unlink_leftmost_without_rebalance','line_number':433,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::replace_node','line_number':436,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::remove_node','line_number':439,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_unique(bstree<T, Options2...>&)','line_number':442,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_equal(bstree<T, Options2...>&)','line_number':446,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':463,'multiline':False]['text':'! Helper metafunction to define a \c rbtree that yields to the same type when the','line_number':467,'multiline':False]['text':'! same options (either explicitly or implicitly) are used.','line_number':468,'multiline':False]['text':'/ @cond','line_number':478,'multiline':False]['text':'/ @endcond','line_number':499,'multiline':False]['text':'Assert if passed value traits are compatible with the type','line_number':538,'multiline':False]['text':'namespace intrusive','line_number':586,'multiline':False]['text':'namespace boost','line_number':587,'multiline':False]['text':'BOOST_INTRUSIVE_RBTREE_HPP','line_number':591,'multiline':False]