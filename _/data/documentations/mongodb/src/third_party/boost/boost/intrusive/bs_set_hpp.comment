['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga  2013-2014','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'! The class template bs_set is an intrusive container, that mimics most of','line_number':34,'multiline':False]['text':'! the interface of std::set as described in the C++ standard.','line_number':35,'multiline':False]['text':'!','line_number':36,'multiline':False]['text':'! The template parameter \c T is the type to be managed by the container.','line_number':37,'multiline':False]['text':'! The user can specify additional options and if no options are provided','line_number':38,'multiline':False]['text':'! default options are used.','line_number':39,'multiline':False]['text':'!','line_number':40,'multiline':False]['text':'! The container supports the following options:','line_number':41,'multiline':False]['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':42,'multiline':False]['text':'! \c constant_time_size<>, \c size_type<> and','line_number':43,'multiline':False]['text':'! \c compare<>.','line_number':44,'multiline':False]['text':'/ @cond','line_number':55,'multiline':False]['text':'/ @endcond','line_number':60,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree()','line_number':88,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(const key_compare &,const value_traits &)','line_number':93,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':98,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bstree &&)','line_number':106,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::operator=(bstree &&)','line_number':111,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::~bstree()','line_number':116,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()','line_number':119,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()const','line_number':122,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cbegin()const','line_number':125,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()','line_number':128,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()const','line_number':131,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cend()const','line_number':134,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()','line_number':137,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()const','line_number':140,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crbegin()const','line_number':143,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()','line_number':146,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()const','line_number':149,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crend()const','line_number':152,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()','line_number':155,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()const','line_number':158,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::croot()const','line_number':161,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(iterator)','line_number':164,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(const_iterator)','line_number':167,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(iterator)','line_number':170,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(const_iterator)','line_number':173,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::key_comp()const','line_number':176,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::value_comp()const','line_number':179,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::empty()const','line_number':182,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::size()const','line_number':185,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::swap','line_number':188,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(const bstree&,Cloner,Disposer)','line_number':191,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':199,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(bstree&&,Cloner,Disposer)','line_number':201,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(reference)','line_number':206,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(const_iterator,reference)','line_number':210,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':214,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':219,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':225,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':231,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique(Iterator,Iterator)','line_number':238,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_unique_commit','line_number':243,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_before','line_number':248,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_back','line_number':251,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_front','line_number':254,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator)','line_number':257,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator,const_iterator)','line_number':260,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const key_type &)','line_number':263,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':266,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,Disposer)','line_number':270,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':274,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const key_type &, Disposer)','line_number':278,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':282,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear','line_number':286,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear_and_dispose','line_number':289,'multiline':False]['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':293,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const key_type &)const','line_number':295,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':299,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)','line_number':306,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':309,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)const','line_number':313,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':316,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)','line_number':320,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':323,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)const','line_number':327,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':330,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)','line_number':334,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)','line_number':337,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)const','line_number':341,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':344,'multiline':False]['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':348,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)','line_number':350,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':354,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)const','line_number':359,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':364,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type&,const key_type&,bool,bool)','line_number':372,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':376,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type&,const key_type&,bool,bool)const','line_number':381,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':385,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(reference)','line_number':390,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(const_reference)','line_number':393,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(reference)','line_number':396,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(const_reference)const','line_number':399,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::init_node(reference)','line_number':402,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::unlink_leftmost_without_rebalance','line_number':405,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::replace_node','line_number':408,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::remove_node','line_number':411,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_unique','line_number':414,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_unique','line_number':418,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':433,'multiline':False]['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':453,'multiline':False]['text':'! Helper metafunction to define a \c bs_set that yields to the same type when the','line_number':455,'multiline':False]['text':'! same options (either explicitly or implicitly) are used.','line_number':456,'multiline':False]['text':'/ @cond','line_number':466,'multiline':False]['text':'/ @endcond','line_number':487,'multiline':False]['text':'Assert if passed value traits are compatible with the type','line_number':522,'multiline':False]['text':'! The class template bs_multiset is an intrusive container, that mimics most of','line_number':570,'multiline':False]['text':'! the interface of std::multiset as described in the C++ standard.','line_number':571,'multiline':False]['text':'!','line_number':572,'multiline':False]['text':'! The template parameter \c T is the type to be managed by the container.','line_number':573,'multiline':False]['text':'! The user can specify additional options and if no options are provided','line_number':574,'multiline':False]['text':'! default options are used.','line_number':575,'multiline':False]['text':'!','line_number':576,'multiline':False]['text':'! The container supports the following options:','line_number':577,'multiline':False]['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':578,'multiline':False]['text':'! \c constant_time_size<>, \c size_type<> and','line_number':579,'multiline':False]['text':'! \c compare<>.','line_number':580,'multiline':False]['text':'/ @cond','line_number':591,'multiline':False]['text':'/ @endcond','line_number':596,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree()','line_number':624,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(const key_compare &,const value_traits &)','line_number':629,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':634,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bstree(bstree &&)','line_number':642,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::operator=(bstree &&)','line_number':647,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::~bstree()','line_number':652,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()','line_number':655,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::begin()const','line_number':658,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cbegin()const','line_number':661,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()','line_number':664,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::end()const','line_number':667,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::cend()const','line_number':670,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()','line_number':673,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rbegin()const','line_number':676,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crbegin()const','line_number':679,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()','line_number':682,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::rend()const','line_number':685,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::crend()const','line_number':688,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()','line_number':691,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::root()const','line_number':694,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::croot()const','line_number':697,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(iterator)','line_number':700,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_end_iterator(const_iterator)','line_number':703,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(iterator)','line_number':706,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::container_from_iterator(const_iterator)','line_number':709,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::key_comp()const','line_number':712,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::value_comp()const','line_number':715,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::empty()const','line_number':718,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::size()const','line_number':721,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::swap','line_number':724,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(const bstree&,Cloner,Disposer)','line_number':727,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':735,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clone_from(bstree&&,Cloner,Disposer)','line_number':737,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(reference)','line_number':742,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(const_iterator,reference)','line_number':746,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_equal(Iterator,Iterator)','line_number':750,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::insert_before','line_number':756,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_back','line_number':759,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::push_front','line_number':762,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator)','line_number':765,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const_iterator,const_iterator)','line_number':768,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const key_type &)','line_number':771,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':774,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,Disposer)','line_number':778,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':782,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const key_type &, Disposer)','line_number':786,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':790,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear','line_number':794,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::clear_and_dispose','line_number':797,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const key_type &)const','line_number':801,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':804,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)','line_number':808,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':811,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const key_type &)const','line_number':815,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':818,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)','line_number':822,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':825,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const key_type &)const','line_number':829,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':832,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)','line_number':836,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)','line_number':839,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const key_type &)const','line_number':843,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':846,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)','line_number':850,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':853,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const key_type &)const','line_number':857,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':861,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)','line_number':866,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':870,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const key_type &,const key_type &,bool,bool)const','line_number':875,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':879,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(reference)','line_number':884,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::s_iterator_to(const_reference)','line_number':887,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(reference)','line_number':890,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::iterator_to(const_reference)const','line_number':893,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::init_node(reference)','line_number':896,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::unlink_leftmost_without_rebalance','line_number':899,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::replace_node','line_number':902,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::remove_node','line_number':905,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_equal','line_number':908,'multiline':False]['text':'! @copydoc ::boost::intrusive::bstree::merge_equal','line_number':912,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':926,'multiline':False]['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':946,'multiline':False]['text':'! Helper metafunction to define a \c bs_multiset that yields to the same type when the','line_number':948,'multiline':False]['text':'! same options (either explicitly or implicitly) are used.','line_number':949,'multiline':False]['text':'/ @cond','line_number':959,'multiline':False]['text':'/ @endcond','line_number':980,'multiline':False]['text':'Assert if passed value traits are compatible with the type','line_number':1016,'multiline':False]['text':'namespace intrusive','line_number':1064,'multiline':False]['text':'namespace boost','line_number':1065,'multiline':False]['text':'BOOST_INTRUSIVE_BS_SET_HPP','line_number':1069,'multiline':False]