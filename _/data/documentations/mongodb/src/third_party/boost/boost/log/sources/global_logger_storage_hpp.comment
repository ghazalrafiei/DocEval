['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   global_logger_storage.hpp
 * \author Andrey Semashev
 * \date   21.04.2008
 *
 * The header contains implementation of facilities to declare global loggers.
 ','line_number':7,'multiline':True]['text':'! The base class for logger holders','line_number':39,'multiline':False]['text':'! The source file name where the logger was registered','line_number':42,'multiline':False]['text':'! The line number where the logger was registered','line_number':44,'multiline':False]['text':'! Stored logger type','line_number':46,'multiline':False]['text':'! The actual logger holder class','line_number':57,'multiline':False]['text':'! The logger instance','line_number':62,'multiline':False]['text':'! The class implements a global repository of tagged loggers','line_number':80,'multiline':False]['text':'! Finds or creates the logger and returns its holder','line_number':85,'multiline':False]['text':'  Non-constructible, non-copyable, non-assignable','line_number':88,'multiline':False]['text':'! Throws the \c odr_violation exception','line_number':94,'multiline':False]['text':'! The class implements a logger singleton','line_number':100,'multiline':False]['text':'! Base type','line_number':108,'multiline':False]['text':'! Logger type','line_number':113,'multiline':False]['text':'! Returns the logger instance','line_number':116,'multiline':False]['text':'! Initializes the logger instance (called only once)','line_number':122,'multiline':False]['text':' Note: dynamic_cast may fail here if logger_type is not visible (for example, with Clang on Linux, if the original logger','line_number':131,'multiline':False]['text':'       instance was initialized in a different DSO than where it's being queried). logger_holder visibility doesn't','line_number':132,'multiline':False]['text':'       have effect since it is inhibited by the template parameter visibility.','line_number':133,'multiline':False]['text':' In pure C++ this should never happen, since there cannot be two','line_number':138,'multiline':False]['text':' different tag types that have equal type_infos. In real life it can','line_number':139,'multiline':False]['text':' happen if the same-named tag is defined differently in two or more','line_number':140,'multiline':False]['text':' dlls. This check is intended to detect such ODR violations. However, there','line_number':141,'multiline':False]['text':' is no protection against different definitions of the logger type itself.','line_number':142,'multiline':False]['text':'! Constructs a logger holder','line_number':148,'multiline':False]['text':' namespace aux','line_number':158,'multiline':False]['text':'! The macro forward-declares a global logger with a custom initialization','line_number':160,'multiline':False]['text':'! The macro defines a global logger initialization routine','line_number':174,'multiline':False]['text':'! The macro defines a global logger initializer that will default-construct the logger','line_number':178,'multiline':False]['text':'! The macro defines a global logger initializer that will construct the logger with the specified constructor arguments','line_number':185,'multiline':False]['text':'! The macro declares a global logger with a custom initialization','line_number':192,'multiline':False]['text':'! The macro declares a global logger that will be default-constructed','line_number':197,'multiline':False]['text':'! The macro declares a global logger that will be constructed with the specified arguments','line_number':204,'multiline':False]['text':' namespace sources','line_number':211,'multiline':False]['text':' namespace log','line_number':213,'multiline':False]['text':' namespace boost','line_number':215,'multiline':False]['text':' BOOST_LOG_SOURCES_GLOBAL_LOGGER_STORAGE_HPP_INCLUDED_','line_number':219,'multiline':False]