['text':' Copyright 2017 Joaquin M Lopez Munoz.
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org/libs/poly_collection for library home page.
 ','line_number':1,'multiline':True]['text':'','line_number':20,'multiline':False]['text':' We don't need or use this, just define a dummy class:','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' Stateless lambda expressions have one (and only one) call operator and are
 * convertible to a function pointer with the same signature. Non-lambda types
 * could satisfy this too, hence the "likely" qualifier.
 ','line_number':40,'multiline':True]['text':' namespace type_traits_detail ','line_number':78,'multiline':True]['text':' namespace boost ','line_number':80,'multiline':True]['text':'','line_number':83,'multiline':False]['text':' Can't implement this:','line_number':84,'multiline':False]['text':'','line_number':85,'multiline':False]