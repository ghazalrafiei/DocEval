['text':' (C) Copyright David Abrahams 2002.','line_number':1,'multiline':False]['text':' (C) Copyright Jeremy Siek    2002.','line_number':2,'multiline':False]['text':' (C) Copyright Thomas Witt    2002.','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' must appear last','line_number':15,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' Meta function that determines whether two','line_number':21,'multiline':False]['text':' iterator types are considered interoperable.','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' Two iterator types A,B are considered interoperable if either','line_number':24,'multiline':False]['text':' A is convertible to B or vice versa.','line_number':25,'multiline':False]['text':' This interoperability definition is in sync with the','line_number':26,'multiline':False]['text':' standards requirements on constant/mutable container','line_number':27,'multiline':False]['text':' iterators (23.1 [lib.container.requirements]).','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' For compilers that don't support is_convertible','line_number':30,'multiline':False]['text':' is_interoperable gives false positives. See comments','line_number':31,'multiline':False]['text':' on operator implementation for consequences.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' namespace iterators','line_number':46,'multiline':False]['text':' namespace boost','line_number':50,'multiline':False]['text':' BOOST_INTEROPERABLE_23022003THW_HPP','line_number':54,'multiline':False]