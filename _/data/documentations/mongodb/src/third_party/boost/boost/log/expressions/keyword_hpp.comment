['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   keyword.hpp
 * \author Andrey Semashev
 * \date   29.01.2012
 *
 * The header contains attribute keyword declaration.
 ','line_number':7,'multiline':True]['text':'!
 * This class implements an expression template keyword. It is used to start template expressions involving attribute values.
 ','line_number':46,'multiline':True]['text':'! Self type','line_number':52,'multiline':False]['text':'! Attribute descriptor type','line_number':54,'multiline':False]['text':'! Attribute value type','line_number':59,'multiline':False]['text':'! Returns attribute name','line_number':62,'multiline':False]['text':'! Expression with cached attribute name','line_number':65,'multiline':False]['text':'! Generates an expression that extracts the attribute value or a default value','line_number':73,'multiline':False]['text':'! Expression with cached attribute name','line_number':81,'multiline':False]['text':'! Generates an expression that extracts the attribute value or throws an exception','line_number':89,'multiline':False]['text':'! Generates an expression that extracts the attribute value or a default value','line_number':97,'multiline':False]['text':' namespace expressions','line_number':118,'multiline':False]['text':' namespace log','line_number':120,'multiline':False]['text':' This hack is needed in order to cache attribute name into the expression terminal when the template','line_number':128,'multiline':False]['text':' expression is constructed. The standard way through a custom domain doesn't work because phoenix::actor','line_number':129,'multiline':False]['text':' is bound to phoenix_domain.','line_number':130,'multiline':False]['text':' namespace detail','line_number':179,'multiline':False]['text':' namespace proto','line_number':181,'multiline':False]['text':' !defined(BOOST_LOG_DOXYGEN_PASS)','line_number':183,'multiline':False]['text':' namespace boost','line_number':185,'multiline':False]['text':' BOOST_LOG_DOXYGEN_PASS','line_number':205,'multiline':False]['text':'!
 * \brief The macro declares an attribute keyword type
 *
 * The macro should be used at a namespace scope. It expands into an attribute keyword type definition, including the
 * \c tag namespace and the keyword tag type within which has the following layout:
 *
 * \code
 * namespace tag
 * {
 *   struct keyword_ :
 *     public boost::log::expressions::keyword_descriptor
 *   {
 *     typedef value_type_ value_type;
 *     static boost::log::attribute_name get_name();
 *   };
 * }
 *
 * typedef boost::log::expressions::attribute_keyword< tag::keyword_ > keyword_type;
 * \endcode
 *
 * The \c get_name method returns the attribute name.
 *
 * \note This macro only defines the type of the keyword. To also define the keyword object, use
 *       the \c BOOST_LOG_ATTRIBUTE_KEYWORD macro instead.
 *
 * \param keyword_ Keyword name
 * \param name_ Attribute name string
 * \param value_type_ Attribute value type
 ','line_number':207,'multiline':True]['text':'!
 * \brief The macro declares an attribute keyword
 *
 * The macro provides definitions similar to \c BOOST_LOG_ATTRIBUTE_KEYWORD_TYPE and additionally
 * defines the keyword object.
 *
 * \param keyword_ Keyword name
 * \param name_ Attribute name string
 * \param value_type_ Attribute value type
 ','line_number':239,'multiline':True]['text':' BOOST_LOG_EXPRESSIONS_KEYWORD_HPP_INCLUDED_','line_number':258,'multiline':False]