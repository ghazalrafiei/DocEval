['text':'  (C) Copyright Edward Diener 2011-2015','line_number':2,'multiline':False]['text':'  Use, modification and distribution are subject to the Boost Software License,','line_number':3,'multiline':False]['text':'  Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt).','line_number':5,'multiline':False]['text':'

  The succeeding comments in this file are in doxygen format.

','line_number':16,'multiline':True]['text':'* \file
','line_number':22,'multiline':True]['text':'* \def BOOST_VMD_IS_NUMBER(sequence)

    \brief Tests whether a sequence is a Boost PP number.

    The macro checks to see if a sequence is a Boost PP number.
    A Boost PP number is a value from 0 to BOOST_PP_LIMIT_MAG.
    
    sequence = a possible number

    returns = 1 if the sequence is a Boost PP number,
              0 if it is not.
              
    If the input is not a VMD data type this macro could lead to
    a preprocessor error. This is because the macro
    uses preprocessor concatenation to determine if the input
    is a number once it is determined that the input does not
    start with parenthesis. If the data being concatenated would
    lead to an invalid preprocessor token the compiler can issue
    a preprocessor error.
              
','line_number':25,'multiline':True]['text':'','line_number':49,'multiline':True]['text':' BOOST_PP_VARIADICS ','line_number':51,'multiline':True]['text':' BOOST_VMD_IS_NUMBER_HPP ','line_number':52,'multiline':True]