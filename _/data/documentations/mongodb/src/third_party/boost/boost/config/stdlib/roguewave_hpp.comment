['text':'  (C) Copyright John Maddock 2001 - 2003. ','line_number':1,'multiline':False]['text':'  (C) Copyright Jens Maurer 2001. ','line_number':2,'multiline':False]['text':'  (C) Copyright David Abrahams 2003. ','line_number':3,'multiline':False]['text':'  (C) Copyright Boris Gubenko 2007. ','line_number':4,'multiline':False]['text':'  Use, modification and distribution are subject to the ','line_number':5,'multiline':False]['text':'  Boost Software License, Version 1.0. (See accompanying file ','line_number':6,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org for most recent version.','line_number':9,'multiline':False]['text':'  Rogue Wave std lib:','line_number':11,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' figure out a consistent version number:','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':'','line_number':44,'multiline':False]['text':' Prior to version 2.2.0 the primary template for std::numeric_limits','line_number':45,'multiline':False]['text':' does not have compile time constants, even though specializations of that','line_number':46,'multiline':False]['text':' template do:','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':' Sun CC 5.5 patch 113817-07 adds long long specialization, but does not change the','line_number':53,'multiline':False]['text':' library version number (http://sunsolve6.sun.com/search/document.do?assetkey=1-21-113817):','line_number':54,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' Borland version of numeric_limits lacks __int64 specialisation:','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':'','line_number':66,'multiline':False]['text':' No std::iterator if it can't figure out default template args:','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':'','line_number':73,'multiline':False]['text':' No iterator traits without partial specialization:','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':'','line_number':80,'multiline':False]['text':' Prior to version 2.0, std::auto_ptr was buggy, and there were no','line_number':81,'multiline':False]['text':' new-style iostreams, and no conformant std::allocator:','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':'','line_number':91,'multiline':False]['text':' No template iterator constructors without member template support:','line_number':92,'multiline':False]['text':'','line_number':93,'multiline':False]['text':'','line_number':98,'multiline':False]['text':' RW defines _RWSTD_ALLOCATOR if the allocator is conformant and in use','line_number':99,'multiline':False]['text':' (the or _HPACC_ part is a hack - the library seems to define _RWSTD_ALLOCATOR','line_number':100,'multiline':False]['text':' on HP aCC systems even though the allocator is in fact broken):','line_number':101,'multiline':False]['text':'','line_number':102,'multiline':False]['text':'','line_number':107,'multiline':False]['text':' If we have a std::locale, we still may not have std::use_facet:','line_number':108,'multiline':False]['text':'','line_number':109,'multiline':False]['text':'','line_number':115,'multiline':False]['text':' There's no std::distance prior to version 2, or without','line_number':116,'multiline':False]['text':' partial specialization support:','line_number':117,'multiline':False]['text':'','line_number':118,'multiline':False]['text':'','line_number':123,'multiline':False]['text':' Some versions of the rogue wave library don't have assignable','line_number':124,'multiline':False]['text':' OutputIterators:','line_number':125,'multiline':False]['text':'','line_number':126,'multiline':False]['text':'','line_number':131,'multiline':False]['text':' Disable BOOST_HAS_LONG_LONG when the library has no support for it.','line_number':132,'multiline':False]['text':'','line_number':133,'multiline':False]['text':'','line_number':138,'multiline':False]['text':' check that on HP-UX, the proper RW library is used','line_number':139,'multiline':False]['text':'','line_number':140,'multiline':False]['text':'','line_number':145,'multiline':False]['text':' Define macros specific to RW V2.2 on HP-UX','line_number':146,'multiline':False]['text':'','line_number':147,'multiline':False]['text':' type_traits header is incomplete:','line_number':160,'multiline':False]['text':'','line_number':162,'multiline':False]['text':'  C++0x headers not yet implemented','line_number':163,'multiline':False]['text':'','line_number':164,'multiline':False]['text':' C++14 features','line_number':202,'multiline':False]['text':' C++17 features','line_number':205,'multiline':False]