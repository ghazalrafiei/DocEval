['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 ','line_number':1,'multiline':True]['text':'!
 * \file   atomic/detail/fence_ops_gcc_atomic.hpp
 *
 * This header contains implementation of the \c fence_operations struct.
 ','line_number':8,'multiline':True]['text':' This is used to suppress warning #32013 described in gcc_atomic_memory_order_utils.hpp','line_number':28,'multiline':False]['text':' for Intel Compiler.','line_number':29,'multiline':False]['text':' In debug builds the compiler does not inline any functions, so basically','line_number':30,'multiline':False]['text':' every atomic function call results in this warning. I don't know any other','line_number':31,'multiline':False]['text':' way to selectively disable just this one warning.','line_number':32,'multiline':False]['text':'! Fence operations based on gcc __atomic* intrinsics','line_number':40,'multiline':False]['text':' gcc, clang, icc and probably other compilers generate mfence for a seq_cst fence,','line_number':52,'multiline':False]['text':' while a dummy lock-prefixed instruction would be enough and faster. See the comment in fence_ops_gcc_x86.hpp.','line_number':53,'multiline':False]['text':' namespace detail','line_number':69,'multiline':False]['text':' namespace atomics','line_number':70,'multiline':False]['text':' namespace boost','line_number':71,'multiline':False]['text':' BOOST_ATOMIC_DETAIL_FENCE_OPS_GCC_ATOMIC_HPP_INCLUDED_','line_number':75,'multiline':False]