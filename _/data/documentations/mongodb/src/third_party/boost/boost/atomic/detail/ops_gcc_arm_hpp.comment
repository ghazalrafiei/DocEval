['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2009 Helge Bahmann
 * Copyright (c) 2013 Tim Blechmann
 * Copyright (c) 2014 Andrey Semashev
 ','line_number':1,'multiline':True]['text':'!
 * \file   atomic/detail/ops_gcc_arm.hpp
 *
 * This header contains implementation of the \c operations template.
 ','line_number':10,'multiline':True]['text':' From the ARM Architecture Reference Manual for architecture v6:','line_number':37,'multiline':False]['text':'','line_number':38,'multiline':False]['text':' LDREX{<cond>} <Rd>, [<Rn>]','line_number':39,'multiline':False]['text':' <Rd> Specifies the destination register for the memory word addressed by <Rd>','line_number':40,'multiline':False]['text':' <Rn> Specifies the register containing the address.','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':' STREX{<cond>} <Rd>, <Rm>, [<Rn>]','line_number':43,'multiline':False]['text':' <Rd> Specifies the destination register for the returned status value.','line_number':44,'multiline':False]['text':'      0  if the operation updates memory','line_number':45,'multiline':False]['text':'      1  if the operation fails to update memory','line_number':46,'multiline':False]['text':' <Rm> Specifies the register containing the word to be stored to memory.','line_number':47,'multiline':False]['text':' <Rn> Specifies the register containing the address.','line_number':48,'multiline':False]['text':' Rd must not be the same register as Rm or Rn.','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':' ARM v7 is like ARM v6 plus:','line_number':51,'multiline':False]['text':' There are half-word and byte versions of the LDREX and STREX instructions,','line_number':52,'multiline':False]['text':' LDREXH, LDREXB, STREXH and STREXB.','line_number':53,'multiline':False]['text':' There are also double-word versions, LDREXD and STREXD.','line_number':54,'multiline':False]['text':' (Actually it looks like these are available from version 6k onwards.)','line_number':55,'multiline':False]['text':' FIXME these are not yet used; should be mostly a matter of copy-and-paste.','line_number':56,'multiline':False]['text':' I think you can supply an immediate offset to the address.','line_number':57,'multiline':False]['text':' load the original value','line_number':92,'multiline':False]['text':' store the replacement, tmp = store failed','line_number':93,'multiline':False]['text':' check if store succeeded','line_number':94,'multiline':False]['text':' success = 0','line_number':115,'multiline':False]['text':' original = *(&storage)','line_number':116,'multiline':False]['text':' flags = original==expected','line_number':117,'multiline':False]['text':' [hint that the following 2 instructions are conditional on flags.equal]','line_number':118,'multiline':False]['text':' if (flags.equal) *(&storage) = desired, success = store failed','line_number':119,'multiline':False]['text':' if (flags.equal) success ^= 1 (i.e. make it 1 if store succeeded)','line_number':120,'multiline':False]['text':' %0','line_number':122,'multiline':False]['text':' %1','line_number':123,'multiline':False]['text':' %2','line_number':124,'multiline':False]['text':' %3','line_number':125,'multiline':False]['text':' %4','line_number':126,'multiline':False]['text':' %5','line_number':127,'multiline':False]['text':' success = 0','line_number':148,'multiline':False]['text':' original = *(&storage)','line_number':150,'multiline':False]['text':' flags = original==expected','line_number':151,'multiline':False]['text':' if (!flags.equal) goto end','line_number':152,'multiline':False]['text':' *(&storage) = desired, success = store failed','line_number':153,'multiline':False]['text':' success ^= 1 (i.e. make it 1 if store succeeded); flags.equal = success == 0','line_number':154,'multiline':False]['text':' if (flags.equal) goto retry','line_number':155,'multiline':False]['text':' %0','line_number':158,'multiline':False]['text':' %1','line_number':159,'multiline':False]['text':' %2','line_number':160,'multiline':False]['text':' %3','line_number':161,'multiline':False]['text':' %4','line_number':162,'multiline':False]['text':' %5','line_number':163,'multiline':False]['text':' original = *(&storage)','line_number':183,'multiline':False]['text':' result = original + value','line_number':184,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':185,'multiline':False]['text':' flags = tmp==0','line_number':186,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':187,'multiline':False]['text':' %0','line_number':189,'multiline':False]['text':' %1','line_number':190,'multiline':False]['text':' %2','line_number':191,'multiline':False]['text':' %3','line_number':192,'multiline':False]['text':' %4','line_number':193,'multiline':False]['text':' original = *(&storage)','line_number':209,'multiline':False]['text':' result = original - value','line_number':210,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':211,'multiline':False]['text':' flags = tmp==0','line_number':212,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':213,'multiline':False]['text':' %0','line_number':215,'multiline':False]['text':' %1','line_number':216,'multiline':False]['text':' %2','line_number':217,'multiline':False]['text':' %3','line_number':218,'multiline':False]['text':' %4','line_number':219,'multiline':False]['text':' original = *(&storage)','line_number':235,'multiline':False]['text':' result = original & value','line_number':236,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':237,'multiline':False]['text':' flags = tmp==0','line_number':238,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':239,'multiline':False]['text':' %0','line_number':241,'multiline':False]['text':' %1','line_number':242,'multiline':False]['text':' %2','line_number':243,'multiline':False]['text':' %3','line_number':244,'multiline':False]['text':' %4','line_number':245,'multiline':False]['text':' original = *(&storage)','line_number':261,'multiline':False]['text':' result = original | value','line_number':262,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':263,'multiline':False]['text':' flags = tmp==0','line_number':264,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':265,'multiline':False]['text':' %0','line_number':267,'multiline':False]['text':' %1','line_number':268,'multiline':False]['text':' %2','line_number':269,'multiline':False]['text':' %3','line_number':270,'multiline':False]['text':' %4','line_number':271,'multiline':False]['text':' original = *(&storage)','line_number':287,'multiline':False]['text':' result = original ^ value','line_number':288,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':289,'multiline':False]['text':' flags = tmp==0','line_number':290,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':291,'multiline':False]['text':' %0','line_number':293,'multiline':False]['text':' %1','line_number':294,'multiline':False]['text':' %2','line_number':295,'multiline':False]['text':' %3','line_number':296,'multiline':False]['text':' %4','line_number':297,'multiline':False]['text':' load the original value and zero-extend to 32 bits','line_number':351,'multiline':False]['text':' store the replacement, tmp = store failed','line_number':352,'multiline':False]['text':' check if store succeeded','line_number':353,'multiline':False]['text':' success = 0','line_number':374,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':375,'multiline':False]['text':' flags = original==expected','line_number':376,'multiline':False]['text':' [hint that the following 2 instructions are conditional on flags.equal]','line_number':377,'multiline':False]['text':' if (flags.equal) *(&storage) = desired, success = store failed','line_number':378,'multiline':False]['text':' if (flags.equal) success ^= 1 (i.e. make it 1 if store succeeded)','line_number':379,'multiline':False]['text':' %0','line_number':381,'multiline':False]['text':' %1','line_number':382,'multiline':False]['text':' %2','line_number':383,'multiline':False]['text':' %3','line_number':384,'multiline':False]['text':' %4','line_number':385,'multiline':False]['text':' %5','line_number':386,'multiline':False]['text':' success = 0','line_number':407,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':409,'multiline':False]['text':' flags = original==expected','line_number':410,'multiline':False]['text':' if (!flags.equal) goto end','line_number':411,'multiline':False]['text':' *(&storage) = desired, success = store failed','line_number':412,'multiline':False]['text':' success ^= 1 (i.e. make it 1 if store succeeded); flags.equal = success == 0','line_number':413,'multiline':False]['text':' if (flags.equal) goto retry','line_number':414,'multiline':False]['text':' %0','line_number':417,'multiline':False]['text':' %1','line_number':418,'multiline':False]['text':' %2','line_number':419,'multiline':False]['text':' %3','line_number':420,'multiline':False]['text':' %4','line_number':421,'multiline':False]['text':' %5','line_number':422,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':442,'multiline':False]['text':' result = original + value','line_number':443,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':444,'multiline':False]['text':' flags = tmp==0','line_number':445,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':446,'multiline':False]['text':' %0','line_number':448,'multiline':False]['text':' %1','line_number':449,'multiline':False]['text':' %2','line_number':450,'multiline':False]['text':' %3','line_number':451,'multiline':False]['text':' %4','line_number':452,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':468,'multiline':False]['text':' result = original - value','line_number':469,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':470,'multiline':False]['text':' flags = tmp==0','line_number':471,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':472,'multiline':False]['text':' %0','line_number':474,'multiline':False]['text':' %1','line_number':475,'multiline':False]['text':' %2','line_number':476,'multiline':False]['text':' %3','line_number':477,'multiline':False]['text':' %4','line_number':478,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':494,'multiline':False]['text':' result = original & value','line_number':495,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':496,'multiline':False]['text':' flags = tmp==0','line_number':497,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':498,'multiline':False]['text':' %0','line_number':500,'multiline':False]['text':' %1','line_number':501,'multiline':False]['text':' %2','line_number':502,'multiline':False]['text':' %3','line_number':503,'multiline':False]['text':' %4','line_number':504,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':520,'multiline':False]['text':' result = original | value','line_number':521,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':522,'multiline':False]['text':' flags = tmp==0','line_number':523,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':524,'multiline':False]['text':' %0','line_number':526,'multiline':False]['text':' %1','line_number':527,'multiline':False]['text':' %2','line_number':528,'multiline':False]['text':' %3','line_number':529,'multiline':False]['text':' %4','line_number':530,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':546,'multiline':False]['text':' result = original ^ value','line_number':547,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':548,'multiline':False]['text':' flags = tmp==0','line_number':549,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':550,'multiline':False]['text':' %0','line_number':552,'multiline':False]['text':' %1','line_number':553,'multiline':False]['text':' %2','line_number':554,'multiline':False]['text':' %3','line_number':555,'multiline':False]['text':' %4','line_number':556,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_ARM_HAS_LDREXB_STREXB)','line_number':574,'multiline':False]['text':' original = *(&storage)','line_number':592,'multiline':False]['text':' result = original + value','line_number':593,'multiline':False]['text':' zero extend result from 8 to 32 bits','line_number':594,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':595,'multiline':False]['text':' flags = tmp==0','line_number':596,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':597,'multiline':False]['text':' %0','line_number':599,'multiline':False]['text':' %1','line_number':600,'multiline':False]['text':' %2','line_number':601,'multiline':False]['text':' %3','line_number':602,'multiline':False]['text':' %4','line_number':603,'multiline':False]['text':' original = *(&storage)','line_number':619,'multiline':False]['text':' result = original - value','line_number':620,'multiline':False]['text':' zero extend result from 8 to 32 bits','line_number':621,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':622,'multiline':False]['text':' flags = tmp==0','line_number':623,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':624,'multiline':False]['text':' %0','line_number':626,'multiline':False]['text':' %1','line_number':627,'multiline':False]['text':' %2','line_number':628,'multiline':False]['text':' %3','line_number':629,'multiline':False]['text':' %4','line_number':630,'multiline':False]['text':' original = *(&storage)','line_number':654,'multiline':False]['text':' result = original + value','line_number':655,'multiline':False]['text':' sign extend result from 8 to 32 bits','line_number':656,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':657,'multiline':False]['text':' flags = tmp==0','line_number':658,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':659,'multiline':False]['text':' %0','line_number':661,'multiline':False]['text':' %1','line_number':662,'multiline':False]['text':' %2','line_number':663,'multiline':False]['text':' %3','line_number':664,'multiline':False]['text':' %4','line_number':665,'multiline':False]['text':' original = *(&storage)','line_number':681,'multiline':False]['text':' result = original - value','line_number':682,'multiline':False]['text':' sign extend result from 8 to 32 bits','line_number':683,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':684,'multiline':False]['text':' flags = tmp==0','line_number':685,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':686,'multiline':False]['text':' %0','line_number':688,'multiline':False]['text':' %1','line_number':689,'multiline':False]['text':' %2','line_number':690,'multiline':False]['text':' %3','line_number':691,'multiline':False]['text':' %4','line_number':692,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_ARM_HAS_LDREXB_STREXB)','line_number':700,'multiline':False]['text':' load the original value and zero-extend to 32 bits','line_number':738,'multiline':False]['text':' store the replacement, tmp = store failed','line_number':739,'multiline':False]['text':' check if store succeeded','line_number':740,'multiline':False]['text':' success = 0','line_number':761,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':762,'multiline':False]['text':' flags = original==expected','line_number':763,'multiline':False]['text':' [hint that the following 2 instructions are conditional on flags.equal]','line_number':764,'multiline':False]['text':' if (flags.equal) *(&storage) = desired, success = store failed','line_number':765,'multiline':False]['text':' if (flags.equal) success ^= 1 (i.e. make it 1 if store succeeded)','line_number':766,'multiline':False]['text':' %0','line_number':768,'multiline':False]['text':' %1','line_number':769,'multiline':False]['text':' %2','line_number':770,'multiline':False]['text':' %3','line_number':771,'multiline':False]['text':' %4','line_number':772,'multiline':False]['text':' %5','line_number':773,'multiline':False]['text':' success = 0','line_number':794,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':796,'multiline':False]['text':' flags = original==expected','line_number':797,'multiline':False]['text':' if (!flags.equal) goto end','line_number':798,'multiline':False]['text':' *(&storage) = desired, success = store failed','line_number':799,'multiline':False]['text':' success ^= 1 (i.e. make it 1 if store succeeded); flags.equal = success == 0','line_number':800,'multiline':False]['text':' if (flags.equal) goto retry','line_number':801,'multiline':False]['text':' %0','line_number':804,'multiline':False]['text':' %1','line_number':805,'multiline':False]['text':' %2','line_number':806,'multiline':False]['text':' %3','line_number':807,'multiline':False]['text':' %4','line_number':808,'multiline':False]['text':' %5','line_number':809,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':829,'multiline':False]['text':' result = original + value','line_number':830,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':831,'multiline':False]['text':' flags = tmp==0','line_number':832,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':833,'multiline':False]['text':' %0','line_number':835,'multiline':False]['text':' %1','line_number':836,'multiline':False]['text':' %2','line_number':837,'multiline':False]['text':' %3','line_number':838,'multiline':False]['text':' %4','line_number':839,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':855,'multiline':False]['text':' result = original - value','line_number':856,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':857,'multiline':False]['text':' flags = tmp==0','line_number':858,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':859,'multiline':False]['text':' %0','line_number':861,'multiline':False]['text':' %1','line_number':862,'multiline':False]['text':' %2','line_number':863,'multiline':False]['text':' %3','line_number':864,'multiline':False]['text':' %4','line_number':865,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':881,'multiline':False]['text':' result = original & value','line_number':882,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':883,'multiline':False]['text':' flags = tmp==0','line_number':884,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':885,'multiline':False]['text':' %0','line_number':887,'multiline':False]['text':' %1','line_number':888,'multiline':False]['text':' %2','line_number':889,'multiline':False]['text':' %3','line_number':890,'multiline':False]['text':' %4','line_number':891,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':907,'multiline':False]['text':' result = original | value','line_number':908,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':909,'multiline':False]['text':' flags = tmp==0','line_number':910,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':911,'multiline':False]['text':' %0','line_number':913,'multiline':False]['text':' %1','line_number':914,'multiline':False]['text':' %2','line_number':915,'multiline':False]['text':' %3','line_number':916,'multiline':False]['text':' %4','line_number':917,'multiline':False]['text':' original = zero_extend(*(&storage))','line_number':933,'multiline':False]['text':' result = original ^ value','line_number':934,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':935,'multiline':False]['text':' flags = tmp==0','line_number':936,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':937,'multiline':False]['text':' %0','line_number':939,'multiline':False]['text':' %1','line_number':940,'multiline':False]['text':' %2','line_number':941,'multiline':False]['text':' %3','line_number':942,'multiline':False]['text':' %4','line_number':943,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_ARM_HAS_LDREXH_STREXH)','line_number':961,'multiline':False]['text':' original = *(&storage)','line_number':979,'multiline':False]['text':' result = original + value','line_number':980,'multiline':False]['text':' zero extend result from 16 to 32 bits','line_number':981,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':982,'multiline':False]['text':' flags = tmp==0','line_number':983,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':984,'multiline':False]['text':' %0','line_number':986,'multiline':False]['text':' %1','line_number':987,'multiline':False]['text':' %2','line_number':988,'multiline':False]['text':' %3','line_number':989,'multiline':False]['text':' %4','line_number':990,'multiline':False]['text':' original = *(&storage)','line_number':1006,'multiline':False]['text':' result = original - value','line_number':1007,'multiline':False]['text':' zero extend result from 16 to 32 bits','line_number':1008,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1009,'multiline':False]['text':' flags = tmp==0','line_number':1010,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1011,'multiline':False]['text':' %0','line_number':1013,'multiline':False]['text':' %1','line_number':1014,'multiline':False]['text':' %2','line_number':1015,'multiline':False]['text':' %3','line_number':1016,'multiline':False]['text':' %4','line_number':1017,'multiline':False]['text':' original = *(&storage)','line_number':1041,'multiline':False]['text':' result = original + value','line_number':1042,'multiline':False]['text':' sign extend result from 16 to 32 bits','line_number':1043,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1044,'multiline':False]['text':' flags = tmp==0','line_number':1045,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1046,'multiline':False]['text':' %0','line_number':1048,'multiline':False]['text':' %1','line_number':1049,'multiline':False]['text':' %2','line_number':1050,'multiline':False]['text':' %3','line_number':1051,'multiline':False]['text':' %4','line_number':1052,'multiline':False]['text':' original = *(&storage)','line_number':1068,'multiline':False]['text':' result = original - value','line_number':1069,'multiline':False]['text':' sign extend result from 16 to 32 bits','line_number':1070,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1071,'multiline':False]['text':' flags = tmp==0','line_number':1072,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1073,'multiline':False]['text':' %0','line_number':1075,'multiline':False]['text':' %1','line_number':1076,'multiline':False]['text':' %2','line_number':1077,'multiline':False]['text':' %3','line_number':1078,'multiline':False]['text':' %4','line_number':1079,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_ARM_HAS_LDREXH_STREXH)','line_number':1087,'multiline':False]['text':' Unlike 32-bit operations, for 64-bit loads and stores we must use ldrexd/strexd.','line_number':1091,'multiline':False]['text':' Any other instructions result in a non-atomic sequence of 32-bit accesses.','line_number':1092,'multiline':False]['text':' See "ARM Architecture Reference Manual ARMv7-A and ARMv7-R edition",','line_number':1093,'multiline':False]['text':' Section A3.5.3 "Atomicity in the ARM architecture".','line_number':1094,'multiline':False]['text':' In the asm blocks below we have to use 32-bit register pairs to compose 64-bit values.','line_number':1096,'multiline':False]['text':' In order to pass the 64-bit operands to/from asm blocks, we use undocumented gcc feature:','line_number':1097,'multiline':False]['text':' the lower half (Rt) of the operand is accessible normally, via the numbered placeholder (e.g. %0),','line_number':1098,'multiline':False]['text':' and the upper half (Rt2) - via the same placeholder with an 'H' after the '%' sign (e.g. %H0).','line_number':1099,'multiline':False]['text':' See: http://hardwarebug.org/2010/07/06/arm-inline-asm-secrets/','line_number':1100,'multiline':False]['text':' %0','line_number':1126,'multiline':False]['text':' %1','line_number':1127,'multiline':False]['text':' %2','line_number':1128,'multiline':False]['text':' load the original value','line_number':1143,'multiline':False]['text':' store the replacement, tmp = store failed','line_number':1144,'multiline':False]['text':' check if store succeeded','line_number':1145,'multiline':False]['text':' %0','line_number':1148,'multiline':False]['text':' %1','line_number':1149,'multiline':False]['text':' %2','line_number':1150,'multiline':False]['text':' %3','line_number':1151,'multiline':False]['text':' original = *(&storage)','line_number':1167,'multiline':False]['text':' flags = original.lo==old_val.lo','line_number':1168,'multiline':False]['text':' [hint that the following 3 instructions are conditional on flags.equal]','line_number':1169,'multiline':False]['text':' if (flags.equal) flags = original.hi==old_val.hi','line_number':1170,'multiline':False]['text':' if (flags.equal) *(&storage) = desired, tmp = store failed','line_number':1171,'multiline':False]['text':' if (flags.equal) flags = tmp==0','line_number':1172,'multiline':False]['text':' [hint that the following 2 instructions are conditional on flags.equal]','line_number':1173,'multiline':False]['text':' if (flags.equal) old_val.lo = 1','line_number':1174,'multiline':False]['text':' if (!flags.equal) old_val.lo = 0','line_number':1175,'multiline':False]['text':' %0','line_number':1177,'multiline':False]['text':' %1','line_number':1178,'multiline':False]['text':' %2','line_number':1179,'multiline':False]['text':' %3','line_number':1180,'multiline':False]['text':' %4','line_number':1181,'multiline':False]['text':' original = *(&storage)','line_number':1203,'multiline':False]['text':' flags = original.lo==old_val.lo','line_number':1204,'multiline':False]['text':' [hint that the following instruction is conditional on flags.equal]','line_number':1205,'multiline':False]['text':' if (flags.equal) flags = original.hi==old_val.hi','line_number':1206,'multiline':False]['text':' if (!flags.equal) goto end','line_number':1207,'multiline':False]['text':' *(&storage) = desired, tmp = store failed','line_number':1208,'multiline':False]['text':' flags.equal = tmp == 0','line_number':1209,'multiline':False]['text':' if (flags.equal) goto retry','line_number':1210,'multiline':False]['text':' [hint that the following 2 instructions are conditional on flags.equal]','line_number':1212,'multiline':False]['text':' if (flags.equal) old_val.lo = 1','line_number':1213,'multiline':False]['text':' if (!flags.equal) old_val.lo = 0','line_number':1214,'multiline':False]['text':' %0','line_number':1216,'multiline':False]['text':' %1','line_number':1217,'multiline':False]['text':' %2','line_number':1218,'multiline':False]['text':' %3','line_number':1219,'multiline':False]['text':' %4','line_number':1220,'multiline':False]['text':' original = *(&storage)','line_number':1241,'multiline':False]['text':' result = original + value','line_number':1242,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1244,'multiline':False]['text':' flags = tmp==0','line_number':1245,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1246,'multiline':False]['text':' %0','line_number':1248,'multiline':False]['text':' %1','line_number':1249,'multiline':False]['text':' %2','line_number':1250,'multiline':False]['text':' %3','line_number':1251,'multiline':False]['text':' %4','line_number':1252,'multiline':False]['text':' original = *(&storage)','line_number':1268,'multiline':False]['text':' result = original - value','line_number':1269,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1271,'multiline':False]['text':' flags = tmp==0','line_number':1272,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1273,'multiline':False]['text':' %0','line_number':1275,'multiline':False]['text':' %1','line_number':1276,'multiline':False]['text':' %2','line_number':1277,'multiline':False]['text':' %3','line_number':1278,'multiline':False]['text':' %4','line_number':1279,'multiline':False]['text':' original = *(&storage)','line_number':1295,'multiline':False]['text':' result = original & value','line_number':1296,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1298,'multiline':False]['text':' flags = tmp==0','line_number':1299,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1300,'multiline':False]['text':' %0','line_number':1302,'multiline':False]['text':' %1','line_number':1303,'multiline':False]['text':' %2','line_number':1304,'multiline':False]['text':' %3','line_number':1305,'multiline':False]['text':' %4','line_number':1306,'multiline':False]['text':' original = *(&storage)','line_number':1322,'multiline':False]['text':' result = original | value','line_number':1323,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1325,'multiline':False]['text':' flags = tmp==0','line_number':1326,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1327,'multiline':False]['text':' %0','line_number':1329,'multiline':False]['text':' %1','line_number':1330,'multiline':False]['text':' %2','line_number':1331,'multiline':False]['text':' %3','line_number':1332,'multiline':False]['text':' %4','line_number':1333,'multiline':False]['text':' original = *(&storage)','line_number':1349,'multiline':False]['text':' result = original ^ value','line_number':1350,'multiline':False]['text':' *(&storage) = result, tmp = store failed','line_number':1352,'multiline':False]['text':' flags = tmp==0','line_number':1353,'multiline':False]['text':' if (!flags.equal) goto retry','line_number':1354,'multiline':False]['text':' %0','line_number':1356,'multiline':False]['text':' %1','line_number':1357,'multiline':False]['text':' %2','line_number':1358,'multiline':False]['text':' %3','line_number':1359,'multiline':False]['text':' %4','line_number':1360,'multiline':False]['text':' defined(BOOST_ATOMIC_DETAIL_ARM_HAS_LDREXD_STREXD)','line_number':1378,'multiline':False]['text':' namespace detail','line_number':1393,'multiline':False]['text':' namespace atomics','line_number':1394,'multiline':False]['text':' namespace boost','line_number':1395,'multiline':False]['text':' BOOST_ATOMIC_DETAIL_OPS_GCC_ARM_HPP_INCLUDED_','line_number':1397,'multiline':False]