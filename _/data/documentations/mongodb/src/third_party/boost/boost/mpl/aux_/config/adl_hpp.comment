['text':' Copyright Aleksey Gurtovoy 2002-2004','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. ','line_number':7,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at ','line_number':8,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' See http://www.boost.org/libs/mpl for documentation.','line_number':11,'multiline':False]['text':' $Id$','line_number':13,'multiline':False]['text':' $Date$','line_number':14,'multiline':False]['text':' $Revision$','line_number':15,'multiline':False]['text':' agurt, 25/apr/04: technically, the ADL workaround is only needed for GCC,','line_number':22,'multiline':False]['text':' but putting everything expect public, user-specializable metafunctions into','line_number':23,'multiline':False]['text':' a separate global namespace has a nice side effect of reducing the length ','line_number':24,'multiline':False]['text':' of template instantiation symbols, so we apply the workaround on all ','line_number':25,'multiline':False]['text':' platforms that can handle it','line_number':26,'multiline':False]['text':' BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED','line_number':40,'multiline':False]