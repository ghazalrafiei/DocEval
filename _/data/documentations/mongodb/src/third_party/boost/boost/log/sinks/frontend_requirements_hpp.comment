['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   sinks/frontend_requirements.hpp
 * \author Andrey Semashev
 * \date   22.04.2007
 *
 * The header contains definition of requirement tags that sink backend may declare
 * with regard to frontends. These requirements ensure that a backend will not
 * be used with an incompatible frontend.
 ','line_number':7,'multiline':True]['text':'! The macro specifies the maximum number of requirements that can be combined with the \c combine_requirements metafunction','line_number':36,'multiline':False]['text':'!
 * The sink backend expects pre-synchronized calls, all needed synchronization is implemented
 * in the frontend (IOW, only one thread is feeding records to the backend concurrently, but
 * it is possible for several threads to write sequentially). Note that if a frontend supports
 * synchronized record feeding, it will also report capable of concurrent record feeding.
 ','line_number':46,'multiline':True]['text':'!
 * The sink backend ensures all needed synchronization, it is capable to handle multithreaded calls
 ','line_number':56,'multiline':True]['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':61,'multiline':False]['text':'  If multithreading is disabled, threading models become redundant','line_number':63,'multiline':False]['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':66,'multiline':False]['text':'!
 * The sink backend requires the frontend to perform log record formatting before feeding
 ','line_number':68,'multiline':True]['text':'!
 * The sink backend supports flushing
 ','line_number':73,'multiline':True]['text':'!
 * The metafunction combines multiple requirement tags into one type. The resulting type will
 * satisfy all specified requirements (i.e. \c has_requirement metafunction will return positive result).
 ','line_number':80,'multiline':True]['text':' BOOST_LOG_DOXYGEN_PASS','line_number':98,'multiline':False]['text':'!
 * A helper metafunction to check if a requirement is satisfied. The \c TestedT template argument
 * should be the type combining one or several requirements and \c RequiredT is the requirement
 * to test against. The metafunction will yield a positive result if \c TestedT supports \c RequiredT.
 ','line_number':100,'multiline':True]['text':' namespace sinks','line_number':111,'multiline':False]['text':' namespace log','line_number':113,'multiline':False]['text':' namespace boost','line_number':115,'multiline':False]['text':' BOOST_LOG_SINKS_FRONTEND_REQUIREMENTS_HPP_INCLUDED_','line_number':119,'multiline':False]