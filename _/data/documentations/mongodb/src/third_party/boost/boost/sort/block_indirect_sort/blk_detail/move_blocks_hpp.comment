['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file move_blocks.hpp','line_number':2,'multiline':False]['text':'/ @brief contains the class move_blocks, which is part of the','line_number':3,'multiline':False]['text':'/        block_indirect_sort algorithm','line_number':4,'multiline':False]['text':'/','line_number':5,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':6,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':7,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':9,'multiline':False]['text':'/ @version 0.1','line_number':10,'multiline':False]['text':'/','line_number':11,'multiline':False]['text':'/ @remarks','line_number':12,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':13,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':29,'multiline':False]['text':'                          USING SENTENCES','line_number':30,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':31,'multiline':False]['text':'','line_number':33,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':34,'multiline':False]['text':'/ @struct move_blocks','line_number':35,'multiline':False]['text':'/ @brief This class move the blocks, trnasforming a logical sort by an index,','line_number':36,'multiline':False]['text':'/        in physical sort','line_number':37,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':38,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':42,'multiline':False]['text':'                  D E F I N I T I O N S','line_number':43,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':44,'multiline':False]['text':'------------------------------------------------------------------------','line_number':54,'multiline':False]['text':'                V A R I A B L E S','line_number':55,'multiline':False]['text':'------------------------------------------------------------------------','line_number':56,'multiline':False]['text':' Object with the elements to sort and all internal data structures of the','line_number':57,'multiline':False]['text':' algorithm','line_number':58,'multiline':False]['text':'------------------------------------------------------------------------','line_number':61,'multiline':False]['text':'                F U N C T I O N S','line_number':62,'multiline':False]['text':'------------------------------------------------------------------------','line_number':63,'multiline':False]['text':'','line_number':69,'multiline':False]['text':'------------------------------------------------------------------------','line_number':70,'multiline':False]['text':'  function : function_move_sequence','line_number':71,'multiline':False]['text':'/ @brief create a function_t with a call to move_sequence, and insert','line_number':72,'multiline':False]['text':'/        in the stack of the backbone','line_number':73,'multiline':False]['text':'/','line_number':74,'multiline':False]['text':'/ @param sequence :sequence of positions for to move the blocks','line_number':75,'multiline':False]['text':'/ @param counter : atomic variable which is decremented when finish','line_number':76,'multiline':False]['text':'/                  the function. This variable is used for to know','line_number':77,'multiline':False]['text':'/                  when are finished all the function_t created','line_number':78,'multiline':False]['text':'/                  inside an object','line_number':79,'multiline':False]['text':'/ @param error : global indicator of error.','line_number':80,'multiline':False]['text':'------------------------------------------------------------------------','line_number':81,'multiline':False]['text':'','line_number':104,'multiline':False]['text':'------------------------------------------------------------------------','line_number':105,'multiline':False]['text':'  function : function_move_long_sequence','line_number':106,'multiline':False]['text':'/ @brief create a function_t with a call to move_long_sequence, and','line_number':107,'multiline':False]['text':'/        insert in the stack of the backbone','line_number':108,'multiline':False]['text':'','line_number':109,'multiline':False]['text':'/ @param sequence :sequence of positions for to move the blocks','line_number':110,'multiline':False]['text':'/ @param counter : atomic variable which is decremented when finish','line_number':111,'multiline':False]['text':'/                  the function. This variable is used for to know','line_number':112,'multiline':False]['text':'/                  when are finished all the function_t created','line_number':113,'multiline':False]['text':'/                  inside an object','line_number':114,'multiline':False]['text':'/ @param error : global indicator of error.','line_number':115,'multiline':False]['text':'------------------------------------------------------------------------','line_number':116,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':139,'multiline':False]['text':' end of struct move_blocks','line_number':140,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':141,'multiline':False]['text':'','line_number':142,'multiline':False]['text':'############################################################################','line_number':143,'multiline':False]['text':'                                                                          ##','line_number':144,'multiline':False]['text':'                                                                          ##','line_number':145,'multiline':False]['text':'            N O N     I N L I N E      F U N C T I O N S                  ##','line_number':146,'multiline':False]['text':'                                                                          ##','line_number':147,'multiline':False]['text':'                                                                          ##','line_number':148,'multiline':False]['text':'############################################################################','line_number':149,'multiline':False]['text':'','line_number':150,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':151,'multiline':False]['text':'  function : move_blocks','line_number':152,'multiline':False]['text':'/ @brief constructor of the class for to move the blocks to their true','line_number':153,'multiline':False]['text':'/        position obtained from the index','line_number':154,'multiline':False]['text':'','line_number':155,'multiline':False]['text':'/ @param bkb : backbone with the index and the blocks','line_number':156,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':157,'multiline':False]['text':'','line_number':206,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':207,'multiline':False]['text':'  function : move_sequence','line_number':208,'multiline':False]['text':'/ @brief move the blocks, following the positions of the init_sequence','line_number':209,'multiline':False]['text':'','line_number':210,'multiline':False]['text':'/ @param init_sequence : vector with the positions from and where move the','line_number':211,'multiline':False]['text':'/                        blocks','line_number':212,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':213,'multiline':False]['text':'','line_number':233,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':234,'multiline':False]['text':'  function : move_long_sequence','line_number':235,'multiline':False]['text':'/ @brief move the blocks, following the positions of the init_sequence.','line_number':236,'multiline':False]['text':'/        if the sequence is greater than Group_size, it is divided in small','line_number':237,'multiline':False]['text':'/        sequences, creating function_t elements, for to be inserted in the','line_number':238,'multiline':False]['text':'/        concurrent stack','line_number':239,'multiline':False]['text':'','line_number':240,'multiline':False]['text':'/ @param init_sequence : vector with the positions from and where move the','line_number':241,'multiline':False]['text':'/                        blocks','line_number':242,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':243,'multiline':False]['text':'','line_number':277,'multiline':False]['text':'****************************************************************************','line_number':278,'multiline':False]['text':'    End namespace blk_detail','line_number':279,'multiline':False]['text':'    End namespace sort','line_number':280,'multiline':False]['text':'    End namespace boost','line_number':281,'multiline':False]['text':'****************************************************************************','line_number':282,'multiline':False]['text':'','line_number':283,'multiline':False]