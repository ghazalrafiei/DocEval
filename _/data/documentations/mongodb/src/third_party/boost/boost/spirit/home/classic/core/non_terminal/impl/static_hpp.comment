['text':'=============================================================================
    Copyright (c) 2006 Joao Abecasis
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':' for placement new','line_number':20,'multiline':False]['text':'','line_number':28,'multiline':False]['text':'  Provides thread-safe initialization of a single static instance of T.','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':'  This instance is guaranteed to be constructed on static storage in a','line_number':31,'multiline':False]['text':'  thread-safe manner, on the first call to the constructor of static_.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':'  Requirements:','line_number':34,'multiline':False]['text':'      T is default constructible','line_number':35,'multiline':False]['text':'          (There's an alternate implementation that relaxes this','line_number':36,'multiline':False]['text':'              requirement -- Joao Abecasis)','line_number':37,'multiline':False]['text':'      T::T() MUST not throw!','line_number':38,'multiline':False]['text':'          this is a requirement of boost::call_once.','line_number':39,'multiline':False]['text':'','line_number':40,'multiline':False]['text':' namespace BOOST_SPIRIT_CLASSIC_NS','line_number':122,'multiline':False]['text':' include guard','line_number':124,'multiline':False]