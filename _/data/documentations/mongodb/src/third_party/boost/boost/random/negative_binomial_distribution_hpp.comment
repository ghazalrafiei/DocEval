['text':' boost random/negative_binomial_distribution.hpp header file
 *
 * Copyright Steven Watanabe 2010
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 ','line_number':1,'multiline':True]['text':'*
 * The negative binomial distribution is an integer valued
 * distribution with two parameters, @c k and @c p.  The
 * distribution produces non-negative values.
 *
 * The distribution function is
 * \f$\displaystyle P(i) = {k+i-1\choose i}p^k(1-p)^i\f$.
 *
 * This implementation uses a gamma-poisson mixture.
 ','line_number':26,'multiline':True]['text':'*
         * Construct a param_type object.  @c k and @c p
         * are the parameters of the distribution.
         *
         * Requires: k >=0 && 0 <= p <= 1
         ','line_number':45,'multiline':True]['text':'* Returns the @c k parameter of the distribution. ','line_number':54,'multiline':True]['text':'* Returns the @c p parameter of the distribution. ','line_number':56,'multiline':True]['text':'* Writes the parameters of the distribution to a @c std::ostream. ','line_number':59,'multiline':True]['text':'* Reads the parameters of the distribution from a @c std::istream. ','line_number':69,'multiline':True]['text':'* Returns true if the parameters have the same values. ','line_number':78,'multiline':True]['text':'* Returns true if the parameters have different values. ','line_number':83,'multiline':True]['text':'*
     * Construct a @c negative_binomial_distribution object. @c k and @c p
     * are the parameters of the distribution.
     *
     * Requires: k >=0 && 0 <= p <= 1
     ','line_number':93,'multiline':True]['text':'*
     * Construct an @c negative_binomial_distribution object from the
     * parameters.
     ','line_number':104,'multiline':True]['text':'*
     * Returns a random variate distributed according to the
     * negative binomial distribution.
     ','line_number':112,'multiline':True]['text':'*
     * Returns a random variate distributed according to the negative
     * binomial distribution with parameters specified by @c param.
     ','line_number':124,'multiline':True]['text':'* Returns the @c k parameter of the distribution. ','line_number':134,'multiline':True]['text':'* Returns the @c p parameter of the distribution. ','line_number':136,'multiline':True]['text':'* Returns the smallest value that the distribution can produce. ','line_number':139,'multiline':True]['text':'* Returns the largest value that the distribution can produce. ','line_number':141,'multiline':True]['text':'* Returns the parameters of the distribution. ','line_number':145,'multiline':True]['text':'* Sets parameters of the distribution. ','line_number':147,'multiline':True]['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':154,'multiline':True]['text':'* Writes the parameters of the distribution to a @c std::ostream. ','line_number':161,'multiline':True]['text':'* Reads the parameters of the distribution from a @c std::istream. ','line_number':171,'multiline':True]['text':'* Returns true if the two distributions will produce the same
        sequence of values, given equal generators. ','line_number':182,'multiline':True]['text':'* Returns true if the two distributions could produce different
        sequences of values, given equal generators. ','line_number':189,'multiline':True]['text':'/ @cond \show_private','line_number':199,'multiline':False]['text':' parameters','line_number':209,'multiline':False]['text':'/ @endcond','line_number':213,'multiline':False]