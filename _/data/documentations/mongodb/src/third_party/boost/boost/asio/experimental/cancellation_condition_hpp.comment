['text':'','line_number':1,'multiline':False]['text':' experimental/cancellation_condition.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':'/ Wait for all operations to complete.','line_number':30,'multiline':False]['text':'/ Wait until an operation completes, then cancel the others.','line_number':42,'multiline':False]['text':'/ Wait until an operation completes without an error, then cancel the others.','line_number':63,'multiline':False]['text':'*
 * If no operation completes without an error, waits for completion of all
 * operations.
 ','line_number':64,'multiline':True]['text':'/ Wait until an operation completes with an error, then cancel the others.','line_number':107,'multiline':False]['text':'*
 * If no operation completes with an error, waits for completion of all
 * operations.
 ','line_number':108,'multiline':True]['text':' namespace experimental','line_number':151,'multiline':False]['text':' namespace asio','line_number':152,'multiline':False]['text':' namespace boost','line_number':153,'multiline':False]['text':' BOOST_ASIO_EXPERIMENTAL_CANCELLATION_CONDITION_HPP','line_number':157,'multiline':False]