['text':' (C) Copyright 2002-2008, Fernando Luis Cacciola Carballal.','line_number':1,'multiline':False]['text':' Copyright 2020 Peter Dimov','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' 21 Ago 2002 (Created) Fernando Cacciola','line_number':8,'multiline':False]['text':' 24 Dec 2007 (Refactored and worked around various compiler bugs) Fernando Cacciola, Niels Dekker','line_number':9,'multiline':False]['text':' 23 May 2008 (Fixed operator= const issue, added initialized_value) Niels Dekker, Fernando Cacciola','line_number':10,'multiline':False]['text':' 21 Ago 2008 (Added swap) Niels Dekker, Fernando Cacciola','line_number':11,'multiline':False]['text':' 20 Feb 2009 (Fixed logical const-ness issues) Niels Dekker, Fernando Cacciola','line_number':12,'multiline':False]['text':' 03 Apr 2010 (Added initialized<T>, suggested by Jeffrey Hellrung, fixing #3472) Niels Dekker','line_number':13,'multiline':False]['text':' 30 May 2010 (Made memset call conditional, fixing #3869) Niels Dekker','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' Note: The implementation of boost::value_initialized had to deal with the','line_number':19,'multiline':False]['text':' fact that various compilers haven't fully implemented value-initialization.','line_number':20,'multiline':False]['text':' The constructor of boost::value_initialized<T> works around these compiler','line_number':21,'multiline':False]['text':' issues, by clearing the bytes of T, before constructing the T object it','line_number':22,'multiline':False]['text':' contains. More details on these issues are at libs/utility/value_init.htm','line_number':23,'multiline':False]['text':' For BOOST_NO_COMPLETE_VALUE_INITIALIZATION.','line_number':25,'multiline':False]['text':' It is safe to ignore the following warning from MSVC 7.1 or higher:','line_number':32,'multiline':False]['text':' "warning C4351: new behavior: elements of array will be default initialized"','line_number':33,'multiline':False]['text':' It is safe to ignore the following MSVC warning, which may pop up when T is ','line_number':35,'multiline':False]['text':' a const type: "warning C4512: assignment operator could not be generated".','line_number':36,'multiline':False]['text':' Implementation detail: The macro BOOST_DETAIL_VALUE_INIT_WORKAROUND_SUGGESTED ','line_number':43,'multiline':False]['text':' suggests that a workaround should be applied, because of compiler issues ','line_number':44,'multiline':False]['text':' regarding value-initialization.','line_number':45,'multiline':False]['text':' Implementation detail: The macro BOOST_DETAIL_VALUE_INIT_WORKAROUND','line_number':49,'multiline':False]['text':' switches the value-initialization workaround either on or off.','line_number':50,'multiline':False]['text':' BOOST_UTILITY_DOCS','line_number':59,'multiline':False]['text':' namespace detail','line_number':77,'multiline':False]['text':' initialized<T> does value-initialization by default.','line_number':163,'multiline':False]['text':' namespace boost','line_number':241,'multiline':False]