['text':'','line_number':1,'multiline':False]['text':' detail/executor_function.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' Lightweight, move-only function object wrapper.','line_number':31,'multiline':False]['text':' Allocate and construct an object to wrap the function.','line_number':38,'multiline':False]['text':' Base class for polymorphic function implementations.','line_number':69,'multiline':False]['text':' Polymorphic function implementation.','line_number':75,'multiline':False]['text':' Helper to complete function invocation.','line_number':94,'multiline':False]['text':' Take ownership of the function object.','line_number':98,'multiline':False]['text':' Make a copy of the function so that the memory can be deallocated before','line_number':104,'multiline':False]['text':' the upcall is made. Even if we're not about to make an upcall, a','line_number':105,'multiline':False]['text':' sub-object of the function may be the true owner of the memory','line_number':106,'multiline':False]['text':' associated with the function. Consequently, a local copy of the function','line_number':107,'multiline':False]['text':' is required to ensure that any owning sub-object remains valid until','line_number':108,'multiline':False]['text':' after we have deallocated the memory here.','line_number':109,'multiline':False]['text':' Make the upcall if required.','line_number':113,'multiline':False]['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':123,'multiline':False]['text':' Not so lightweight, copyable function object wrapper.','line_number':125,'multiline':False]['text':' Base class for polymorphic function implementations.','line_number':141,'multiline':False]['text':' Polymorphic function implementation.','line_number':147,'multiline':False]['text':' Helper to complete function invocation.','line_number':160,'multiline':False]['text':' defined(BOOST_ASIO_HAS_MOVE)','line_number':170,'multiline':False]['text':' Lightweight, non-owning, copyable function object wrapper.','line_number':172,'multiline':False]['text':' Helper to complete function invocation.','line_number':189,'multiline':False]['text':' namespace detail','line_number':200,'multiline':False]['text':' namespace asio','line_number':201,'multiline':False]['text':' namespace boost','line_number':202,'multiline':False]['text':' BOOST_ASIO_DETAIL_EXECUTOR_FUNCTION_HPP','line_number':206,'multiline':False]