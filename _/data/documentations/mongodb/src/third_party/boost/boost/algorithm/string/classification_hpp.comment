['text':'  Boost string_algo library classification.hpp header file  ---------------------------//','line_number':1,'multiline':False]['text':'  Copyright Pavol Droba 2002-2003.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org/ for updates, documentation, and revision history.','line_number':9,'multiline':False]['text':'! \file
    Classification predicates are included in the library to give 
    some more convenience when using algorithms like \c trim() and \c all(). 
    They wrap functionality of STL classification functions ( e.g. \c std::isspace() )
    into generic functors. 
','line_number':22,'multiline':True]['text':'  classification functor generator -------------------------------------//','line_number':32,'multiline':False]['text':'! is_classified predicate','line_number':34,'multiline':False]['text':'!
            Construct the \c is_classified predicate. This predicate holds if the input is
            of specified \c std::ctype category.

            \param Type A \c std::ctype category
            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':35,'multiline':True]['text':'! is_space predicate','line_number':49,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::space category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate
        ','line_number':50,'multiline':True]['text':'! is_alnum predicate','line_number':62,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::alnum category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':63,'multiline':True]['text':'! is_alpha predicate','line_number':75,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::alpha category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':76,'multiline':True]['text':'! is_cntrl predicate','line_number':88,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::cntrl category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':89,'multiline':True]['text':'! is_digit predicate','line_number':101,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::digit category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':102,'multiline':True]['text':'! is_graph predicate','line_number':114,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::graph category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':115,'multiline':True]['text':'! is_lower predicate','line_number':127,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::lower category.   

            \param Loc A locale used for classification
            \return An instance of \c is_classified predicate 
        ','line_number':128,'multiline':True]['text':'! is_print predicate','line_number':140,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::print category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':141,'multiline':True]['text':'! is_punct predicate','line_number':153,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::punct category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':154,'multiline':True]['text':'! is_upper predicate','line_number':166,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::upper category.   

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':167,'multiline':True]['text':'! is_xdigit predicate','line_number':179,'multiline':False]['text':'!
            Construct the \c is_classified predicate for the \c ctype_base::xdigit category.  

            \param Loc A locale used for classification
            \return An instance of the \c is_classified predicate 
        ','line_number':180,'multiline':True]['text':'! is_any_of predicate','line_number':192,'multiline':False]['text':'!
            Construct the \c is_any_of predicate. The predicate holds if the input
            is included in the specified set of characters.

            \param Set A set of characters to be recognized
            \return An instance of the \c is_any_of predicate 
        ','line_number':193,'multiline':True]['text':'! is_from_range predicate','line_number':209,'multiline':False]['text':'!
            Construct the \c is_from_range predicate. The predicate holds if the input
            is included in the specified range. (i.e. From <= Ch <= To )

            \param From The start of the range
            \param To The end of the range
            \return An instance of the \c is_from_range predicate 
        ','line_number':210,'multiline':True]['text':' predicate combinators ---------------------------------------------------//','line_number':224,'multiline':False]['text':'! predicate 'and' composition predicate','line_number':226,'multiline':False]['text':'!
            Construct the \c class_and predicate. This predicate can be used
            to logically combine two classification predicates. \c class_and holds,
            if both predicates return true.

            \param Pred1 The first predicate
            \param Pred2 The second predicate
            \return An instance of the \c class_and predicate     
        ','line_number':227,'multiline':True]['text':' Doing the static_cast with the pointer instead of the reference','line_number':242,'multiline':False]['text':' is a workaround for some compilers which have problems with','line_number':243,'multiline':False]['text':' static_cast's of template references, i.e. CW8. /grafik/','line_number':244,'multiline':False]['text':'! predicate 'or' composition predicate','line_number':250,'multiline':False]['text':'!
            Construct the \c class_or predicate. This predicate can be used
            to logically combine two classification predicates. \c class_or holds,
            if one of the predicates return true.

            \param Pred1 The first predicate
            \param Pred2 The second predicate
            \return An instance of the \c class_or predicate     
        ','line_number':251,'multiline':True]['text':' Doing the static_cast with the pointer instead of the reference','line_number':266,'multiline':False]['text':' is a workaround for some compilers which have problems with','line_number':267,'multiline':False]['text':' static_cast's of template references, i.e. CW8. /grafik/','line_number':268,'multiline':False]['text':'! predicate negation operator','line_number':274,'multiline':False]['text':'!
            Construct the \c class_not predicate. This predicate represents a negation. 
            \c class_or holds if of the predicates return false.

            \param Pred The predicate to be negated
            \return An instance of the \c class_not predicate     
        ','line_number':275,'multiline':True]['text':' Doing the static_cast with the pointer instead of the reference','line_number':286,'multiline':False]['text':' is a workaround for some compilers which have problems with','line_number':287,'multiline':False]['text':' static_cast's of template references, i.e. CW8. /grafik/','line_number':288,'multiline':False]['text':' namespace algorithm','line_number':292,'multiline':False]['text':' pull names to the boost namespace','line_number':294,'multiline':False]['text':' namespace boost','line_number':310,'multiline':False]['text':' BOOST_STRING_PREDICATE_HPP','line_number':312,'multiline':False]