['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'  boost/core/lightweight_test.hpp - lightweight test library','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':'  Copyright (c) 2002, 2009, 2014 Peter Dimov','line_number':13,'multiline':False]['text':'  Copyright (2) Beman Dawes 2010, 2011','line_number':14,'multiline':False]['text':'  Copyright (3) Ion Gaztanaga 2013','line_number':15,'multiline':False]['text':'','line_number':16,'multiline':False]['text':'  Copyright 2018 Glen Joseph Fernandes','line_number':17,'multiline':False]['text':'  (glenjofe@gmail.com)','line_number':18,'multiline':False]['text':'','line_number':19,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':20,'multiline':False]['text':'  See accompanying file LICENSE_1_0.txt or copy at','line_number':21,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':'  IDE's like Visual Studio perform better if output goes to std::cout or','line_number':41,'multiline':False]['text':'  some other stream, so allow user to configure output stream:','line_number':42,'multiline':False]['text':' disable message boxes on assert(), abort()','line_number':59,'multiline':False]['text':' disable message boxes on iterator debugging violations','line_number':63,'multiline':False]['text':' In the comparisons below, it is possible that T and U are signed and unsigned integer types, which generates warnings in some compilers.','line_number':149,'multiline':False]['text':' A cleaner fix would require common_type trait or some meta-programming, which would introduce a dependency on Boost.TypeTraits. To avoid','line_number':150,'multiline':False]['text':' the dependency we just disable the warnings.','line_number':151,'multiline':False]['text':' specialize test output for char pointers to avoid printing as cstring','line_number':165,'multiline':False]['text':' print chars as numeric','line_number':179,'multiline':False]['text':' Whether wchar_t is signed is implementation-defined','line_number':184,'multiline':False]['text':' predicates','line_number':224,'multiline':False]['text':' lwt_predicate_name','line_number':262,'multiline':False]['text':'','line_number':299,'multiline':False]['text':' do-while','line_number':381,'multiline':False]['text':' do-while','line_number':452,'multiline':False]['text':' namespace detail','line_number':509,'multiline':False]['text':' `return report_errors();` from main only supports 8 bit exit codes','line_number':529,'multiline':False]['text':' namespace boost','line_number':533,'multiline':False]['text':'','line_number':570,'multiline':False]['text':'','line_number':586,'multiline':False]['text':' #ifndef BOOST_CORE_LIGHTWEIGHT_TEST_HPP','line_number':591,'multiline':False]