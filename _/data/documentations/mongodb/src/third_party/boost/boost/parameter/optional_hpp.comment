['text':' Copyright David Abrahams, Daniel Wallin 2003.','line_number':1,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':' This metafunction can be used to describe the treatment of particular','line_number':13,'multiline':False]['text':' named parameters for the purposes of overload elimination with SFINAE,','line_number':14,'multiline':False]['text':' by placing specializations in the parameters<...> list.  In order for','line_number':15,'multiline':False]['text':' a treated function to participate in overload resolution:','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':'   - The actual argument type matched by every keyword tag','line_number':18,'multiline':False]['text':'     associated with a predicate must satisfy that predicate','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':'   - If a keyword k is specified without an optional<...> or','line_number':21,'multiline':False]['text':'     required<...> wrapper, it is treated as though','line_number':22,'multiline':False]['text':'     optional<k> were specified.','line_number':23,'multiline':False]['text':' namespace boost::parameter::aux','line_number':64,'multiline':False]['text':' include guard','line_number':66,'multiline':False]