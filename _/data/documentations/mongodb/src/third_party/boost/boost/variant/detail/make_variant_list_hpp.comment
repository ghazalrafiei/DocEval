['text':'-----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':' boost variant/detail/make_variant_list.hpp header file','line_number':2,'multiline':False]['text':' See http://www.boost.org for updates, documentation, and revision history.','line_number':3,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' Copyright (c) 2002-2003 Eric Friedman, Itay Maman','line_number':6,'multiline':False]['text':' Copyright (c) 2013-2022 Antony Polukhin','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':9,'multiline':False]['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':10,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':11,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':25,'multiline':False]['text':' (detail) metafunction make_variant_list','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' Provides a MPL-compatible sequence with the specified non-void types','line_number':28,'multiline':False]['text':' as arguments.','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':' Rationale: see class template convert_void (variant_fwd.hpp) and using-','line_number':31,'multiline':False]['text':' declaration workaround (below).','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' defined(BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES)','line_number':43,'multiline':False]['text':' metafunction result','line_number':48,'multiline':False]['text':' [Define a macro to convert any void(NN) tags to mpl::void...]','line_number':50,'multiline':False]['text':' [...so that the specified types can be passed to mpl::list...]','line_number':54,'multiline':False]['text':' [...and, finally, the conversion macro can be undefined:]','line_number':63,'multiline':False]['text':' BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES workaround','line_number':68,'multiline':False]['text':' namespace detail::variant','line_number':70,'multiline':False]['text':' namespace boost','line_number':71,'multiline':False]['text':' BOOST_VARIANT_DETAIL_MAKE_VARIANT_LIST_HPP','line_number':73,'multiline':False]