['text':'','line_number':1,'multiline':False]['text':'  Copyright (c) 2009-2011 Artyom Beilis (Tonkikh)','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See','line_number':4,'multiline':False]['text':'  accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'/','line_number':17,'multiline':False]['text':'/ \addtogroup boundary','line_number':18,'multiline':False]['text':'/ @{','line_number':19,'multiline':False]['text':'/','line_number':21,'multiline':False]['text':'/ \brief This class represents a boundary point in the text. ','line_number':22,'multiline':False]['text':'/','line_number':23,'multiline':False]['text':'/ It represents a pair - an iterator and a rule that defines this ','line_number':24,'multiline':False]['text':'/ point.','line_number':25,'multiline':False]['text':'/','line_number':26,'multiline':False]['text':'/ This type of object is dereference by the iterators of boundary_point_index. Using a rule()','line_number':27,'multiline':False]['text':'/ member function you can get the reason why this specific boundary point was selected. ','line_number':28,'multiline':False]['text':'/','line_number':29,'multiline':False]['text':'/ For example, When you use a sentence boundary analysis, the (rule() & \ref sentence_term) != 0 means','line_number':30,'multiline':False]['text':'/ that this boundary point was selected because a sentence terminator (like .?!) was spotted','line_number':31,'multiline':False]['text':'/ and the (rule() & \ref sentence_sep)!=0 means that a separator like line feed or carriage','line_number':32,'multiline':False]['text':'/ return was observed.','line_number':33,'multiline':False]['text':'/','line_number':34,'multiline':False]['text':'/ \note','line_number':35,'multiline':False]['text':'/','line_number':36,'multiline':False]['text':'/ -   The beginning of analyzed range is always considered a boundary point and its rule is always 0.','line_number':37,'multiline':False]['text':'/ -   when using a word boundary analysis the returned rule relates to a chunk of text preceding','line_number':38,'multiline':False]['text':'/     this point.','line_number':39,'multiline':False]['text':'/','line_number':40,'multiline':False]['text':'/ \see','line_number':41,'multiline':False]['text':'/','line_number':42,'multiline':False]['text':'/ -   \ref boundary_point_index','line_number':43,'multiline':False]['text':'/ -   \ref segment','line_number':44,'multiline':False]['text':'/ -   \ref segment_index','line_number':45,'multiline':False]['text':'/','line_number':46,'multiline':False]['text':'/','line_number':50,'multiline':False]['text':'/ The type of the base iterator that iterates the original text','line_number':51,'multiline':False]['text':'/','line_number':52,'multiline':False]['text':'/','line_number':55,'multiline':False]['text':'/ Empty default constructor','line_number':56,'multiline':False]['text':'/','line_number':57,'multiline':False]['text':'/','line_number':60,'multiline':False]['text':'/ Create a new boundary_point using iterator \p and a rule \a r','line_number':61,'multiline':False]['text':'/','line_number':62,'multiline':False]['text':'/','line_number':68,'multiline':False]['text':'/ Set an new iterator value \a i','line_number':69,'multiline':False]['text':'/','line_number':70,'multiline':False]['text':'/','line_number':75,'multiline':False]['text':'/ Set an new rule value \a r','line_number':76,'multiline':False]['text':'/','line_number':77,'multiline':False]['text':'/','line_number':82,'multiline':False]['text':'/ Fetch an iterator','line_number':83,'multiline':False]['text':'/','line_number':84,'multiline':False]['text':'/','line_number':89,'multiline':False]['text':'/ Fetch a rule','line_number':90,'multiline':False]['text':'/','line_number':91,'multiline':False]['text':'/','line_number':96,'multiline':False]['text':'/ Check if two boundary points are the same','line_number':97,'multiline':False]['text':'/','line_number':98,'multiline':False]['text':'/','line_number':103,'multiline':False]['text':'/ Check if two boundary points are different','line_number':104,'multiline':False]['text':'/','line_number':105,'multiline':False]['text':'/','line_number':110,'multiline':False]['text':'/ Check if the boundary point points to same location as an iterator \a other','line_number':111,'multiline':False]['text':'/','line_number':112,'multiline':False]['text':'/','line_number':117,'multiline':False]['text':'/ Check if the boundary point points to different location from an iterator \a other','line_number':118,'multiline':False]['text':'/','line_number':119,'multiline':False]['text':'/','line_number':125,'multiline':False]['text':'/ Automatic cast to the iterator it represents','line_number':126,'multiline':False]['text':'/','line_number':127,'multiline':False]['text':'/','line_number':138,'multiline':False]['text':'/ Check if the boundary point \a r points to same location as an iterator \a l','line_number':139,'multiline':False]['text':'/','line_number':140,'multiline':False]['text':'/','line_number':146,'multiline':False]['text':'/ Check if the boundary point \a r points to different location from an iterator \a l','line_number':147,'multiline':False]['text':'/','line_number':148,'multiline':False]['text':'/ @}','line_number':155,'multiline':False]['text':'/< convenience typedef','line_number':157,'multiline':False]['text':'/< convenience typedef','line_number':158,'multiline':False]['text':'/< convenience typedef','line_number':160,'multiline':False]['text':'/< convenience typedef','line_number':163,'multiline':False]['text':'/< convenience typedef','line_number':166,'multiline':False]['text':'/< convenience typedef','line_number':167,'multiline':False]['text':'/< convenience typedef','line_number':169,'multiline':False]['text':'/< convenience typedef','line_number':172,'multiline':False]['text':' boundary','line_number':176,'multiline':False]['text':' locale','line_number':177,'multiline':False]['text':' boost','line_number':178,'multiline':False]['text':' vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4','line_number':183,'multiline':False]