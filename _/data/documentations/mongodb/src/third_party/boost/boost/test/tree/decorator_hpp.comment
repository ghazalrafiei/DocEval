['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'  File        : $RCSfile$','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'  Version     : $Revision: 62016 $','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':'  Description : defines decorators to be using with auto registered test units','line_number':12,'multiline':False]['text':' ***************************************************************************','line_number':13,'multiline':False]['text':' Boost.Test','line_number':18,'multiline':False]['text':' Boost','line_number':27,'multiline':False]['text':' STL','line_number':34,'multiline':False]['text':'____________________________________________________________________________//','line_number':37,'multiline':False]['text':' ************************************************************************** //','line_number':46,'multiline':False]['text':' **************             decorator::collector_t             ************** //','line_number':47,'multiline':False]['text':' ************************************************************************** //','line_number':48,'multiline':False]['text':' singleton pattern without ctor','line_number':66,'multiline':False]['text':' Class invariant: minimal size is 1.','line_number':70,'multiline':False]['text':' Data members','line_number':73,'multiline':False]['text':' ************************************************************************** //','line_number':78,'multiline':False]['text':' **************              decorator::base                 ************** //','line_number':79,'multiline':False]['text':' ************************************************************************** //','line_number':80,'multiline':False]['text':' composition interface','line_number':84,'multiline':False]['text':' application interface','line_number':87,'multiline':False]['text':' deep cloning interface','line_number':90,'multiline':False]['text':' ************************************************************************** //','line_number':97,'multiline':False]['text':' **************         decorator::stack_decorator           ************** //','line_number':98,'multiline':False]['text':' ************************************************************************** //','line_number':99,'multiline':False]['text':'!@ A decorator that creates a new stack in the collector','line_number':101,'multiline':False]['text':'!','line_number':102,'multiline':False]['text':'! This decorator may be used in places where the currently accumulated decorators','line_number':103,'multiline':False]['text':'! in the collector should be applied to lower levels of the hierarchy rather','line_number':104,'multiline':False]['text':'! than the current one. This is for instance for dataset test cases, where the','line_number':105,'multiline':False]['text':'! macro does not let the user specify decorators for the underlying generated tests','line_number':106,'multiline':False]['text':'! (but rather on the main generator function), applying the stack_decorator at the','line_number':107,'multiline':False]['text':'! parent level lets us consume the decorator at the underlying test cases level.','line_number':108,'multiline':False]['text':' decorator::base interface','line_number':116,'multiline':False]['text':' ************************************************************************** //','line_number':121,'multiline':False]['text':' **************               decorator::label               ************** //','line_number':122,'multiline':False]['text':' ************************************************************************** //','line_number':123,'multiline':False]['text':' decorator::base interface','line_number':130,'multiline':False]['text':' Data members','line_number':134,'multiline':False]['text':' ************************************************************************** //','line_number':138,'multiline':False]['text':' **************         decorator::expected_failures         ************** //','line_number':139,'multiline':False]['text':' ************************************************************************** //','line_number':140,'multiline':False]['text':' decorator::base interface','line_number':147,'multiline':False]['text':' Data members','line_number':151,'multiline':False]['text':' ************************************************************************** //','line_number':155,'multiline':False]['text':' **************              decorator::timeout              ************** //','line_number':156,'multiline':False]['text':' ************************************************************************** //','line_number':157,'multiline':False]['text':' decorator::base interface','line_number':164,'multiline':False]['text':' Data members','line_number':168,'multiline':False]['text':' ************************************************************************** //','line_number':172,'multiline':False]['text':' **************            decorator::description            ************** //','line_number':173,'multiline':False]['text':' ************************************************************************** //','line_number':174,'multiline':False]['text':' decorator::base interface','line_number':181,'multiline':False]['text':' Data members','line_number':185,'multiline':False]['text':' ************************************************************************** //','line_number':189,'multiline':False]['text':' **************            decorator::depends_on             ************** //','line_number':190,'multiline':False]['text':' ************************************************************************** //','line_number':191,'multiline':False]['text':' decorator::base interface','line_number':198,'multiline':False]['text':' Data members','line_number':202,'multiline':False]['text':' ************************************************************************** //','line_number':206,'multiline':False]['text':' **************    decorator::enable_if/enabled/disabled     ************** //','line_number':207,'multiline':False]['text':' ************************************************************************** //','line_number':208,'multiline':False]['text':' decorator::base interface','line_number':218,'multiline':False]['text':' ************************************************************************** //','line_number':226,'multiline':False]['text':' **************              decorator::fixture              ************** //','line_number':227,'multiline':False]['text':' ************************************************************************** //','line_number':228,'multiline':False]['text':' Constructor','line_number':232,'multiline':False]['text':' decorator::base interface','line_number':236,'multiline':False]['text':' Data members','line_number':240,'multiline':False]['text':'____________________________________________________________________________//','line_number':244,'multiline':False]['text':'____________________________________________________________________________//','line_number':253,'multiline':False]['text':'____________________________________________________________________________//','line_number':262,'multiline':False]['text':'____________________________________________________________________________//','line_number':270,'multiline':False]['text':' ************************************************************************** //','line_number':272,'multiline':False]['text':' **************            decorator::depends_on             ************** //','line_number':273,'multiline':False]['text':' ************************************************************************** //','line_number':274,'multiline':False]['text':' decorator::base interface','line_number':283,'multiline':False]['text':' Data members','line_number':287,'multiline':False]['text':' namespace decorator','line_number':291,'multiline':False]['text':' namespace unit_test','line_number':304,'multiline':False]['text':' namespace boost','line_number':305,'multiline':False]['text':' BOOST_TEST_TREE_DECORATOR_HPP_091911GER','line_number':309,'multiline':False]