['text':'  (C) Copyright Gennadiy Rozental 2001.','line_number':1,'multiline':False]['text':'  (C) Copyright Beman Dawes and Ullrich Koethe 1995-2001.','line_number':2,'multiline':False]['text':'  Use, modification, and distribution are subject to the','line_number':3,'multiline':False]['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'/  @file','line_number':9,'multiline':False]['text':'/  Provides execution monitor implementation for all supported','line_number':10,'multiline':False]['text':'/  configurations, including Microsoft structured exception based, unix signals','line_number':11,'multiline':False]['text':'/  based and special workarounds for borland','line_number':12,'multiline':False]['text':'/','line_number':13,'multiline':False]['text':'/  Note that when testing requirements or user wishes preclude use of this','line_number':14,'multiline':False]['text':'/  file as a separate compilation unit, it may be included as a header file.','line_number':15,'multiline':False]['text':'/','line_number':16,'multiline':False]['text':'/  Header dependencies are deliberately restricted to reduce coupling to other','line_number':17,'multiline':False]['text':'/  boost libraries.','line_number':18,'multiline':False]['text':' ***************************************************************************','line_number':19,'multiline':False]['text':' Boost.Test','line_number':24,'multiline':False]['text':' Boost','line_number':30,'multiline':False]['text':' for exit codes','line_number':31,'multiline':False]['text':' for workarounds','line_number':32,'multiline':False]['text':' for ignore_unused','line_number':33,'multiline':False]['text':' for get_error_info','line_number':35,'multiline':False]['text':' for current_exception_cast','line_number':36,'multiline':False]['text':' STL','line_number':40,'multiline':False]['text':' for std::string','line_number':41,'multiline':False]['text':' for std::bad_alloc','line_number':42,'multiline':False]['text':' for std::bad_cast, std::bad_typeid','line_number':43,'multiline':False]['text':' for std::exception, std::bad_exception','line_number':44,'multiline':False]['text':' for std exception hierarchy','line_number':45,'multiline':False]['text':' for C string API','line_number':46,'multiline':False]['text':' for assert','line_number':47,'multiline':False]['text':' for NULL','line_number':48,'multiline':False]['text':' for vsnprintf','line_number':49,'multiline':False]['text':' for varargs','line_number':51,'multiline':False]['text':' for ceil','line_number':53,'multiline':False]['text':' for varargs','line_number':55,'multiline':False]['text':' to use vsnprintf','line_number':61,'multiline':False]['text':' WinXP','line_number':72,'multiline':False]['text':' WinXP ','line_number':109,'multiline':True]['text':' ILL_RESAD_FAULT','line_number':150,'multiline':False]['text':' ILL_RESOP_FAULT','line_number':152,'multiline':False]['text':' documentation of BOOST_TEST_DISABLE_ALT_STACK in execution_monitor.hpp','line_number':164,'multiline':False]['text':'____________________________________________________________________________//','line_number':199,'multiline':False]['text':' ************************************************************************** //','line_number':203,'multiline':False]['text':' **************                 throw_exception              ************** //','line_number':204,'multiline':False]['text':' ************************************************************************** //','line_number':205,'multiline':False]['text':' ************************************************************************** //','line_number':211,'multiline':False]['text':' **************                  report_error                ************** //','line_number':212,'multiline':False]['text':' ************************************************************************** //','line_number':213,'multiline':False]['text':' checks the printf formatting by adding a decorator to the function ','line_number':229,'multiline':True]['text':'____________________________________________________________________________//','line_number':250,'multiline':False]['text':'____________________________________________________________________________//','line_number':269,'multiline':False]['text':'____________________________________________________________________________//','line_number':283,'multiline':False]['text':'____________________________________________________________________________//','line_number':295,'multiline':False]['text':'____________________________________________________________________________//','line_number':304,'multiline':False]['text':' prepare fp exceptions control','line_number':310,'multiline':False]['text':' ************************************************************************** //','line_number':328,'multiline':False]['text':' **************                  typeid_name                 ************** //','line_number':329,'multiline':False]['text':' ************************************************************************** //','line_number':330,'multiline':False]['text':' namespace detail','line_number':341,'multiline':False]['text':' ************************************************************************** //','line_number':345,'multiline':False]['text':' **************       Sigaction based signal handling        ************** //','line_number':346,'multiline':False]['text':' ************************************************************************** //','line_number':347,'multiline':False]['text':' ************************************************************************** //','line_number':351,'multiline':False]['text':' **************    boost::detail::system_signal_exception    ************** //','line_number':352,'multiline':False]['text':' ************************************************************************** //','line_number':353,'multiline':False]['text':' Constructor','line_number':357,'multiline':False]['text':' Access methods','line_number':363,'multiline':False]['text':' Data members','line_number':372,'multiline':False]['text':' system signal detailed info','line_number':373,'multiline':False]['text':' signal context','line_number':374,'multiline':False]['text':'____________________________________________________________________________//','line_number':377,'multiline':False]['text':' no error actually occur?','line_number':383,'multiline':False]['text':' a bit of a hack to adapt code to small m_sig_info VxWorks uses','line_number':387,'multiline':False]['text':' OpenBSD was missing SI_ASYNCIO and SI_MESGQ','line_number':405,'multiline':False]['text':'____________________________________________________________________________//','line_number':638,'multiline':False]['text':' ************************************************************************** //','line_number':640,'multiline':False]['text':' **************         boost::detail::signal_action         ************** //','line_number':641,'multiline':False]['text':' ************************************************************************** //','line_number':642,'multiline':False]['text':' Forward declaration','line_number':644,'multiline':False]['text':'Constructor','line_number':653,'multiline':False]['text':' Data members','line_number':659,'multiline':False]['text':'____________________________________________________________________________//','line_number':666,'multiline':False]['text':'____________________________________________________________________________//','line_number':672,'multiline':False]['text':'____________________________________________________________________________//','line_number':703,'multiline':False]['text':'____________________________________________________________________________//','line_number':711,'multiline':False]['text':' ************************************************************************** //','line_number':713,'multiline':False]['text':' **************        boost::detail::signal_handler         ************** //','line_number':714,'multiline':False]['text':' ************************************************************************** //','line_number':715,'multiline':False]['text':' Constructor','line_number':719,'multiline':False]['text':' Destructor','line_number':726,'multiline':False]['text':' access methods','line_number':729,'multiline':False]['text':' Data members','line_number':745,'multiline':False]['text':' Note: We intentionality do not catch SIGCHLD. Users have to deal with it themselves','line_number':749,'multiline':False]['text':' !! need to be placed in thread specific storage','line_number':765,'multiline':False]['text':'____________________________________________________________________________//','line_number':769,'multiline':False]['text':' alarm has a precision to the seconds','line_number':792,'multiline':False]['text':'____________________________________________________________________________//','line_number':812,'multiline':False]['text':' We shouldn't need to explicitly initialize all the members here,','line_number':823,'multiline':False]['text':' but gcc warns if we don't, so add initializers for each of the','line_number':824,'multiline':False]['text':' members specified in the POSIX std:','line_number':825,'multiline':False]['text':'____________________________________________________________________________//','line_number':844,'multiline':False]['text':' ************************************************************************** //','line_number':846,'multiline':False]['text':' **************       execution_monitor_signal_handler       ************** //','line_number':847,'multiline':False]['text':' ************************************************************************** //','line_number':848,'multiline':False]['text':'____________________________________________________________________________//','line_number':859,'multiline':False]['text':' debugger attached; it will handle the signal','line_number':866,'multiline':False]['text':'____________________________________________________________________________//','line_number':870,'multiline':False]['text':' namespace detail','line_number':874,'multiline':False]['text':' ************************************************************************** //','line_number':876,'multiline':False]['text':' **************        execution_monitor::catch_signals      ************** //','line_number':877,'multiline':False]['text':' ************************************************************************** //','line_number':878,'multiline':False]['text':'____________________________________________________________________________//','line_number':908,'multiline':False]['text':' ************************************************************************** //','line_number':912,'multiline':False]['text':' **************   Microsoft structured exception handling    ************** //','line_number':913,'multiline':False]['text':' ************************************************************************** //','line_number':914,'multiline':False]['text':' ************************************************************************** //','line_number':922,'multiline':False]['text':' **************    boost::detail::system_signal_exception    ************** //','line_number':923,'multiline':False]['text':' ************************************************************************** //','line_number':924,'multiline':False]['text':' Constructor','line_number':928,'multiline':False]['text':' Data members','line_number':942,'multiline':False]['text':'____________________________________________________________________________//','line_number':951,'multiline':False]['text':' id ','line_number':955,'multiline':True]['text':' exps ','line_number':955,'multiline':True]['text':'____________________________________________________________________________//','line_number':961,'multiline':False]['text':'____________________________________________________________________________//','line_number':969,'multiline':False]['text':' EMSC','line_number':974,'multiline':False]['text':' C++ exception - allow to go through','line_number':976,'multiline':False]['text':' FPE detection is enabled, while system exception detection is not - check if this is actually FPE','line_number':980,'multiline':False]['text':'____________________________________________________________________________//','line_number':1018,'multiline':False]['text':' cases classified as system_fatal_error','line_number':1024,'multiline':False]['text':' cases classified as (non-fatal) system_trap','line_number':1059,'multiline':False]['text':'____________________________________________________________________________//','line_number':1132,'multiline':False]['text':' ************************************************************************** //','line_number':1134,'multiline':False]['text':' **************          assert_reporting_function           ************** //','line_number':1135,'multiline':False]['text':' ************************************************************************** //','line_number':1136,'multiline':False]['text':' write this way instead of switch to avoid unreachable statements','line_number':1141,'multiline':False]['text':' assert_reporting_function','line_number':1146,'multiline':False]['text':'____________________________________________________________________________//','line_number':1148,'multiline':False]['text':' expr ','line_number':1151,'multiline':True]['text':' func ','line_number':1152,'multiline':True]['text':' file ','line_number':1153,'multiline':True]['text':' line ','line_number':1154,'multiline':True]['text':' reserved ','line_number':1155,'multiline':True]['text':'____________________________________________________________________________//','line_number':1161,'multiline':False]['text':' namespace detail','line_number':1163,'multiline':False]['text':' ************************************************************************** //','line_number':1165,'multiline':False]['text':' **************        execution_monitor::catch_signals      ************** //','line_number':1166,'multiline':False]['text':' ************************************************************************** //','line_number':1167,'multiline':False]['text':' naming the timer might create collisions','line_number':1194,'multiline':False]['text':' resolution of 100 ns','line_number':1198,'multiline':False]['text':' Do not restore a suspended system','line_number':1206,'multiline':False]['text':' clang windows workaround: this not available in __finally scope','line_number':1214,'multiline':False]['text':' we check for time outs: we do not have any signaling facility on Win32','line_number':1225,'multiline':False]['text':' however, we signal a timeout as a hard error as for the other operating systems','line_number':1226,'multiline':False]['text':' and throw the signal error handler','line_number':1227,'multiline':False]['text':'____________________________________________________________________________//','line_number':1254,'multiline':False]['text':' default signal handler','line_number':1256,'multiline':False]['text':' namespace detail','line_number':1265,'multiline':False]['text':'____________________________________________________________________________//','line_number':1273,'multiline':False]['text':' choose signal handler','line_number':1275,'multiline':False]['text':' ************************************************************************** //','line_number':1277,'multiline':False]['text':' **************              execution_monitor               ************** //','line_number':1278,'multiline':False]['text':' ************************************************************************** //','line_number':1279,'multiline':False]['text':'____________________________________________________________________________//','line_number':1289,'multiline':False]['text':'  Catch-clause reference arguments are a bit different from function','line_number':1306,'multiline':False]['text':'  arguments (ISO 15.3 paragraphs 18 & 19).  Apparently const isn't','line_number':1307,'multiline':False]['text':'  required.  Programmers ask for const anyhow, so we supply it.  That's','line_number':1308,'multiline':False]['text':'  easier than answering questions about non-const usage.','line_number':1309,'multiline':False]['text':' boost::exception (before std::exception, with extended diagnostic)','line_number':1318,'multiline':False]['text':'  std:: exceptions','line_number':1324,'multiline':False]['text':'','line_number':1331,'multiline':True]['text':'','line_number':1338,'multiline':True]['text':' system errors','line_number':1357,'multiline':False]['text':' not an error','line_number':1364,'multiline':False]['text':' just forward','line_number':1368,'multiline':False]['text':' unknown error','line_number':1372,'multiline':False]['text':' !BOOST_NO_EXCEPTIONS','line_number':1376,'multiline':False]['text':' never reached; supplied to quiet compiler warnings','line_number':1378,'multiline':False]['text':' execute','line_number':1379,'multiline':False]['text':'____________________________________________________________________________//','line_number':1381,'multiline':False]['text':' namespace detail','line_number':1393,'multiline':False]['text':' ************************************************************************** //','line_number':1400,'multiline':False]['text':' **************                  system_error                ************** //','line_number':1401,'multiline':False]['text':' ************************************************************************** //','line_number':1402,'multiline':False]['text':'____________________________________________________________________________//','line_number':1413,'multiline':False]['text':' ************************************************************************** //','line_number':1415,'multiline':False]['text':' **************              execution_exception             ************** //','line_number':1416,'multiline':False]['text':' ************************************************************************** //','line_number':1417,'multiline':False]['text':'____________________________________________________________________________//','line_number':1425,'multiline':False]['text':'____________________________________________________________________________//','line_number':1439,'multiline':False]['text':' ************************************************************************** //','line_number':1441,'multiline':False]['text':' **************Floating point exception management interface ************** //','line_number':1442,'multiline':False]['text':' ************************************************************************** //','line_number':1443,'multiline':False]['text':' Set the control word','line_number':1462,'multiline':False]['text':' same macro definition as in execution_monitor.hpp','line_number':1469,'multiline':False]['text':' Not Implemented ','line_number':1471,'multiline':True]['text':' Not Implemented  ','line_number':1477,'multiline':True]['text':'____________________________________________________________________________//','line_number':1482,'multiline':False]['text':' Set the control word','line_number':1499,'multiline':False]['text':' Not Implemented ','line_number':1507,'multiline':True]['text':' Not Implemented ','line_number':1513,'multiline':True]['text':'____________________________________________________________________________//','line_number':1518,'multiline':False]['text':' namespace fpe','line_number':1520,'multiline':False]['text':' namespace boost','line_number':1522,'multiline':False]['text':' BOOST_TEST_EXECUTION_MONITOR_IPP_012205GER','line_number':1526,'multiline':False]