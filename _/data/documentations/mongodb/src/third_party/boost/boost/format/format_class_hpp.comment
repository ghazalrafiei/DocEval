['text':' ----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'  format_class.hpp :  class interface','line_number':2,'multiline':False]['text':' ----------------------------------------------------------------------------','line_number':3,'multiline':False]['text':'  Copyright Samuel Krempp 2003. Use, modification, and distribution are','line_number':5,'multiline':False]['text':'  subject to the Boost Software License, Version 1.0. (See accompanying','line_number':6,'multiline':False]['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org/libs/format for library home page','line_number':9,'multiline':False]['text':' ----------------------------------------------------------------------------','line_number':11,'multiline':False]['text':' to store locale when needed','line_number':20,'multiline':False]['text':' borland fails in operator% if we use Ch and Tr directly','line_number':34,'multiline':False]['text':' empty all converted string buffers (except bound items)','line_number':53,'multiline':False]['text':' unbind all bound items, and call clear()','line_number':54,'multiline':False]['text':' resets buffers and parse a new format string','line_number':55,'multiline':False]['text':' ** formatted result ** //','line_number':57,'multiline':False]['text':' sum of the current string pieces sizes','line_number':58,'multiline':False]['text':' final string ','line_number':59,'multiline':False]['text':' ** arguments passing ** //','line_number':61,'multiline':False]['text':' make a non-volatile copy ','line_number':73,'multiline':True]['text':' pass the copy along      ','line_number':74,'multiline':True]['text':' make a non-volatile copy ','line_number':79,'multiline':True]['text':' pass the copy along      ','line_number':80,'multiline':True]['text':' GCC can't handle anonymous enums without some help','line_number':84,'multiline':False]['text':' ** arguments passing ** //','line_number':85,'multiline':False]['text':' The total number of arguments expected to be passed to the format objectt','line_number':95,'multiline':False]['text':' The number of arguments currently bound (see bind_arg(..) )','line_number':98,'multiline':False]['text':' The number of arguments currently fed to the format object','line_number':100,'multiline':False]['text':' The index (1-based) of the current argument (i.e. next to be formatted)','line_number':102,'multiline':False]['text':' The number of arguments still required to be fed','line_number':104,'multiline':False]['text':' same as expected_args() - bound_args() - fed_args()','line_number':105,'multiline':False]['text':' ** object modifying **//','line_number':108,'multiline':False]['text':' Choosing which errors will throw exceptions :','line_number':117,'multiline':False]['text':' use friend templates and private members only if supported','line_number':125,'multiline':False]['text':' flag bits, used for style_','line_number':157,'multiline':False]['text':' set only if all directives are  positional','line_number':158,'multiline':False]['text':' used for (re-)initialisation','line_number':161,'multiline':False]['text':' member data --------------------------------------------//','line_number':163,'multiline':False]['text':' each '%..' directive leads to a format_item','line_number':164,'multiline':False]['text':' stores which arguments were bound. size() == 0 || num_args','line_number':165,'multiline':False]['text':' style of format-string :  positional or not, etc','line_number':167,'multiline':False]['text':' keep track of wich argument is current','line_number':168,'multiline':False]['text':' number of expected arguments','line_number':169,'multiline':False]['text':' true only after call to str() or <<','line_number':170,'multiline':False]['text':' piece of string to insert before first item','line_number':171,'multiline':False]['text':' the internal stream buffer.','line_number':173,'multiline':False]['text':' class basic_format','line_number':175,'multiline':False]['text':' namespace boost','line_number':177,'multiline':False]['text':' BOOST_FORMAT_CLASS_HPP','line_number':180,'multiline':False]