['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':' regex_byref_matcher.hpp','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':29,'multiline':False]['text':' regex_byref_matcher','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' avoid cyclic references by holding a weak_ptr to the','line_number':36,'multiline':False]['text':' regex_impl struct','line_number':37,'multiline':False]['text':' the basic_regex object holds a ref-count to this regex_impl, so','line_number':40,'multiline':False]['text':' we don't have to worry about it going away.','line_number':41,'multiline':False]['text':' wrap the static xpression in a matchable interface','line_number':64,'multiline':False]