['text':'  Boost compiler configuration selection header file','line_number':1,'multiline':False]['text':'  (C) Copyright John Maddock 2001 - 2003. ','line_number':3,'multiline':False]['text':'  (C) Copyright Martin Wille 2003.','line_number':4,'multiline':False]['text':'  (C) Copyright Guillaume Melquiond 2003.','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':7,'multiline':False]['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]['text':'   http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]['text':'  See http://www.boost.org/ for most recent version.','line_number':11,'multiline':False]['text':' locate which compiler we are using and define','line_number':13,'multiline':False]['text':' BOOST_COMPILER_CONFIG as needed: ','line_number':14,'multiline':False]['text':'  NVIDIA CUDA C++ compiler for GPU','line_number':17,'multiline':False]['text':' GCC-XML emulates other compilers, it has to appear first here!','line_number':23,'multiline':False]['text':' EDG based Cray compiler:','line_number':27,'multiline':False]['text':'  Comeau C++','line_number':31,'multiline':False]['text':' PathScale EKOPath compiler (has to come before clang and gcc)','line_number':35,'multiline':False]['text':'  Intel','line_number':39,'multiline':False]['text':'  Clang C++ emulates GCC, so it has to appear early.','line_number':43,'multiline':False]['text':'  Digital Mars C++','line_number':47,'multiline':False]['text':'  Wind River Diab C++','line_number':51,'multiline':False]['text':'  Portland Group Inc.','line_number':55,'multiline':False]['text':'  GNU C++:','line_number':59,'multiline':False]['text':'  Kai C++','line_number':63,'multiline':False]['text':'  SGI MIPSpro C++','line_number':67,'multiline':False]['text':'  Compaq Tru64 Unix cxx','line_number':71,'multiline':False]['text':'  Greenhills C++','line_number':75,'multiline':False]['text':'  CodeGear - must be checked for before Borland','line_number':79,'multiline':False]['text':'  Borland','line_number':83,'multiline':False]['text':'  Metrowerks CodeWarrior','line_number':87,'multiline':False]['text':'  Sun Workshop Compiler C++','line_number':91,'multiline':False]['text':'  HP aCC','line_number':95,'multiline':False]['text':'  MPW MrCpp or SCpp','line_number':99,'multiline':False]['text':'  IBM z/OS XL C/C++','line_number':103,'multiline':False]['text':'  IBM XL C/C++ for Linux (Little Endian)','line_number':107,'multiline':False]['text':'  IBM Visual Age or IBM XL C/C++ for Linux (Big Endian)','line_number':111,'multiline':False]['text':'  Microsoft Visual C++','line_number':115,'multiline':False]['text':'','line_number':116,'multiline':False]['text':'  Must remain the last #elif since some other vendors (Metrowerks, for','line_number':117,'multiline':False]['text':'  example) also #define _MSC_VER','line_number':118,'multiline':False]['text':' this must come last - generate an error if we don't','line_number':122,'multiline':False]['text':' recognise the compiler:','line_number':123,'multiline':False]['text':'','line_number':129,'multiline':False]['text':' This section allows dependency scanners to find all the headers we *might* include:','line_number':130,'multiline':False]['text':'','line_number':131,'multiline':False]