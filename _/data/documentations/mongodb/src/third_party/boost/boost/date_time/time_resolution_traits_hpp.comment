['text':' Copyright (c) 2002,2003 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 ','line_number':4,'multiline':True]['text':'! Simple function to calculate absolute value of a numeric type','line_number':21,'multiline':False]['text':' JDG [7/6/02 made a template],','line_number':23,'multiline':False]['text':' moved here from time_duration.hpp 2003-Sept-4.','line_number':24,'multiline':False]['text':'! traits struct for time_resolution_traits implementation type','line_number':30,'multiline':False]['text':'! Used to determine if implemented type is int_adapter or int','line_number':35,'multiline':False]['text':'! traits struct for time_resolution_traits implementation type','line_number':38,'multiline':False]['text':'! Used to determine if implemented type is int_adapter or int','line_number':43,'multiline':False]['text':'! traits struct for time_resolution_traits implementation type','line_number':46,'multiline':False]['text':'! Used to determine if implemented type is int_adapter or int','line_number':51,'multiline':False]['text':'! traits struct for time_resolution_traits implementation type','line_number':54,'multiline':False]['text':'! Used to determine if implemented type is int_adapter or int','line_number':59,'multiline':False]['text':'','line_number':63,'multiline':False]['text':' Note about var_type, which is used to define the variable that','line_number':64,'multiline':False]['text':' stores hours, minutes, and seconds values:','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':' In Boost 1.65.1 and earlier var_type was boost::int32_t which suffers','line_number':67,'multiline':False]['text':' the year 2038 problem.  Binary serialization of posix_time uses','line_number':68,'multiline':False]['text':' 32-bit values, and uses serialization version 0.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' In Boost 1.66.0 the var_type changed to std::time_t, however','line_number':71,'multiline':False]['text':' binary serialization was not properly versioned, so on platforms','line_number':72,'multiline':False]['text':' where std::time_t is 32-bits, it remains compatible, however on','line_number':73,'multiline':False]['text':' platforms where std::time_t is 64-bits, binary serialization ingest','line_number':74,'multiline':False]['text':' will be incompatible with previous versions.  Furthermore, binary','line_number':75,'multiline':False]['text':' serialized output from 1.66.0 will not be compatible with future','line_number':76,'multiline':False]['text':' versions.  Yes, it's a mess.  Static assertions were not present','line_number':77,'multiline':False]['text':' in the serialization code to protect against this possibility.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' In Boost 1.67.0 the var_type was changed to boost::int64_t, ','line_number':80,'multiline':False]['text':' ensuring the output size is 64 bits, and the serialization version','line_number':81,'multiline':False]['text':' was bumped.  Static assertions were added as well, protecting','line_number':82,'multiline':False]['text':' future changes in this area.','line_number':83,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' see note above','line_number':94,'multiline':False]['text':' bring in function from frac_sec_type traits structs','line_number':105,'multiline':False]['text':'Would like this to be frac_sec_type, but some compilers complain','line_number':115,'multiline':False]['text':'! Any negative argument results in a negative tick_count','line_number':134,'multiline':False]['text':'namespace date_time','line_number':163,'multiline':False]