['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]['text':' basic_binary_oprimitive.hpp','line_number':10,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':12,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':13,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':14,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':15,'multiline':False]['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':17,'multiline':False]['text':' archives stored as native binary - this should be the fastest way','line_number':19,'multiline':False]['text':' to archive the state of a group of obects.  It makes no attempt to','line_number':20,'multiline':False]['text':' convert to any canonical form.','line_number':21,'multiline':False]['text':' IN GENERAL, ARCHIVES CREATED WITH THIS CLASS WILL NOT BE READABLE','line_number':23,'multiline':False]['text':' ON PLATFORM APART FROM THE ONE THEY ARE CREATE ON','line_number':24,'multiline':False]['text':' basic_streambuf','line_number':29,'multiline':False]['text':' size_t','line_number':31,'multiline':False]['text':' namespace std','line_number':37,'multiline':False]['text':' must be the last header','line_number':53,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////','line_number':58,'multiline':False]['text':' class basic_binary_oprimitive - binary output of prmitives','line_number':59,'multiline':False]['text':' return a pointer to the most derived class','line_number':70,'multiline':False]['text':' note order! - if you change this, libstd++ will fail!','line_number':75,'multiline':False]['text':' a) create new locale with new codecvt facet','line_number':76,'multiline':False]['text':' b) save current locale','line_number':77,'multiline':False]['text':' c) change locale to new one','line_number':78,'multiline':False]['text':' d) use stream buffer','line_number':79,'multiline':False]['text':' e) change locale back to original','line_number':80,'multiline':False]['text':' f) destroy new codecvt facet','line_number':81,'multiline':False]['text':' default saving of primitives.','line_number':86,'multiline':False]['text':'///////////////////////////////////////////////////////','line_number':93,'multiline':False]['text':' fundamental types that need special treatment','line_number':94,'multiline':False]['text':' trap usage of invalid uninitialized boolean which would','line_number':96,'multiline':False]['text':' otherwise crash on load.','line_number':97,'multiline':False]['text':' we provide an optimized save for all fundamental types','line_number':125,'multiline':False]['text':' typedef serialization::is_bitwise_serializable<mpl::_1>','line_number':126,'multiline':False]['text':' use_array_optimization;','line_number':127,'multiline':False]['text':' workaround without using mpl lambdas','line_number':128,'multiline':False]['text':' the optimized save_array dispatches to save_binary','line_number':140,'multiline':False]['text':' BOOST_ASSERT(count <= std::size_t(boost::integer_traits<std::streamsize>::const_max));','line_number':156,'multiline':False]['text':' note: if the following assertions fail','line_number':157,'multiline':False]['text':' a likely cause is that the output stream is set to "text"','line_number':158,'multiline':False]['text':' mode where by cr characters recieve special treatment.','line_number':159,'multiline':False]['text':' be sure that the output stream is opened with ios::binary','line_number':160,'multiline':False]['text':'if(os.fail())','line_number':161,'multiline':False]['text':'    boost::serialization::throw_exception(','line_number':162,'multiline':False]['text':'        archive_exception(archive_exception::output_stream_error)','line_number':163,'multiline':False]['text':'    );','line_number':164,'multiline':False]['text':' figure number of elements to output - round up','line_number':165,'multiline':False]['text':'os.write(','line_number':175,'multiline':False]['text':'    static_cast<const typename OStream::char_type *>(address),','line_number':176,'multiline':False]['text':'    count','line_number':177,'multiline':False]['text':');','line_number':178,'multiline':False]['text':'BOOST_ASSERT(os.good());','line_number':179,'multiline':False]['text':'namespace boost','line_number':182,'multiline':False]['text':'namespace archive','line_number':183,'multiline':False]['text':' pop pragmas','line_number':185,'multiline':False]['text':' BOOST_ARCHIVE_BASIC_BINARY_OPRIMITIVE_HPP','line_number':187,'multiline':False]