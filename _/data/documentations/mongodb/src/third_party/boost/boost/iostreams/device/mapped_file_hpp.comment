['text':' (C) Copyright Jorge Lodos 2008.','line_number':1,'multiline':False]['text':' (C) Copyright Jonathan Turkanis 2003.','line_number':2,'multiline':False]['text':' (C) Copyright Craig Henderson 2002.   'boost/memmap.hpp' from sandbox','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':4,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)','line_number':5,'multiline':False]['text':' make sure size_t is in std.','line_number':14,'multiline':False]['text':' size_t.','line_number':15,'multiline':False]['text':' pathnames.','line_number':16,'multiline':False]['text':' pair.','line_number':17,'multiline':False]['text':' BOOST_MSVC.','line_number':18,'multiline':False]['text':' openmode, failure','line_number':25,'multiline':False]['text':' Must come last.','line_number':34,'multiline':False]['text':' Missing DLL interface for shared_ptr','line_number':37,'multiline':False]['text':'------------------Definition of mapped_file_base and mapped_file_params-----//','line_number':43,'multiline':False]['text':' Forward declarations','line_number':45,'multiline':False]['text':' Bitmask operations for mapped_file_base::mapmode','line_number':60,'multiline':False]['text':'------------------Definition of mapped_file_params--------------------------//','line_number':82,'multiline':False]['text':' Deprecated','line_number':97,'multiline':False]['text':' End namespace detail.','line_number':104,'multiline':False]['text':' This template allows Boost.Filesystem paths to be specified when creating or','line_number':106,'multiline':False]['text':' reopening a memory mapped file, without creating a dependence on','line_number':107,'multiline':False]['text':' Boost.Filesystem. Possible values of Path include std::string,','line_number':108,'multiline':False]['text':' boost::filesystem::path, boost::filesystem::wpath, ','line_number':109,'multiline':False]['text':' and boost::iostreams::detail::path (used to store either a std::string or a','line_number':110,'multiline':False]['text':' std::wstring).','line_number':111,'multiline':False]['text':' For wide paths, instantiate basic_mapped_file_params ','line_number':118,'multiline':False]['text':' with boost::filesystem::wpath','line_number':119,'multiline':False]['text':' Default constructor','line_number':124,'multiline':False]['text':' Construction from a Path','line_number':127,'multiline':False]['text':' Construction from a path of a different type','line_number':130,'multiline':False]['text':' Copy constructor','line_number':134,'multiline':False]['text':' Templated copy constructor','line_number':139,'multiline':False]['text':'------------------Definition of mapped_file_source--------------------------//','line_number':151,'multiline':False]['text':' Default constructor','line_number':173,'multiline':False]['text':' Constructor taking a parameters object','line_number':176,'multiline':False]['text':' Constructor taking a list of parameters','line_number':180,'multiline':False]['text':' Copy Constructor','line_number':186,'multiline':False]['text':'--------------Stream interface------------------------------------------//','line_number':189,'multiline':False]['text':'--------------Container interface---------------------------------------//','line_number':205,'multiline':False]['text':'--------------Query admissible offsets----------------------------------//','line_number':212,'multiline':False]['text':' Returns the allocation granularity for virtual memory. Values passed','line_number':214,'multiline':False]['text':' as offsets must be multiples of this value.','line_number':215,'multiline':False]['text':'------------------Definition of mapped_file---------------------------------//','line_number':225,'multiline':False]['text':' Default constructor','line_number':246,'multiline':False]['text':' Construstor taking a parameters object','line_number':249,'multiline':False]['text':' Constructor taking a list of parameters','line_number':253,'multiline':False]['text':' Constructor taking a list of parameters, including a ','line_number':260,'multiline':False]['text':' std::ios_base::openmode (deprecated)','line_number':261,'multiline':False]['text':' Copy Constructor','line_number':269,'multiline':False]['text':'--------------Conversion to mapped_file_source (deprecated)-------------//','line_number':272,'multiline':False]['text':'--------------Stream interface------------------------------------------//','line_number':277,'multiline':False]['text':' open overload taking a parameters object','line_number':279,'multiline':False]['text':' open overload taking a list of parameters','line_number':283,'multiline':False]['text':' open overload taking a list of parameters, including a ','line_number':290,'multiline':False]['text':' std::ios_base::openmode (deprecated)','line_number':291,'multiline':False]['text':'--------------Container interface---------------------------------------//','line_number':305,'multiline':False]['text':'--------------Query admissible offsets----------------------------------//','line_number':315,'multiline':False]['text':' Returns the allocation granularity for virtual memory. Values passed','line_number':317,'multiline':False]['text':' as offsets must be multiples of this value.','line_number':318,'multiline':False]['text':'--------------File access----------------------------------------------//','line_number':321,'multiline':False]['text':'------------------Definition of mapped_file_sink----------------------------//','line_number':328,'multiline':False]['text':' Default constructor','line_number':358,'multiline':False]['text':' Constructor taking a parameters object','line_number':361,'multiline':False]['text':' Constructor taking a list of parameters','line_number':365,'multiline':False]['text':' Copy Constructor','line_number':372,'multiline':False]['text':' open overload taking a parameters object','line_number':375,'multiline':False]['text':' open overload taking a list of parameters','line_number':379,'multiline':False]['text':'------------------Implementation of mapped_file_source----------------------//','line_number':387,'multiline':False]['text':'------------------Implementation of mapped_file-----------------------------//','line_number':423,'multiline':False]['text':'------------------Implementation of mapped_file_sink------------------------//','line_number':475,'multiline':False]['text':'------------------Specialization of direct_impl-----------------------------//','line_number':514,'multiline':False]['text':'------------------Definition of mapmode operators---------------------------//','line_number':555,'multiline':False]['text':' End namespaces iostreams, boost.','line_number':602,'multiline':False]['text':' pops abi_suffix.hpp pragmas','line_number':604,'multiline':False]['text':' pops #pragma warning(disable:4251)','line_number':606,'multiline':False]['text':' #ifndef BOOST_IOSTREAMS_MAPPED_FILE_HPP_INCLUDED','line_number':609,'multiline':False]