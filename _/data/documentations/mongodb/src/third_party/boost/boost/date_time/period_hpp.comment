['text':' Copyright (c) 2002,2003 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the 
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst 
 * $Date$
 ','line_number':4,'multiline':True]['text':'! \file period.hpp
  This file contain the implementation of the period abstraction. This is
  basically the same idea as a range.  Although this class is intended for
  use in the time library, it is pretty close to general enough for other
  numeric uses.

','line_number':12,'multiline':True]['text':'!Provides generalized period type useful in date-time systems','line_number':26,'multiline':False]['text':'!This template uses a class to represent a time point within the period
    and another class to represent a duration.  As a result, this class is
    not appropriate for use when the number and duration representation 
    are the same (eg: in the regular number domain).
    
    A period can be specified by providing either the begining point and 
    a duration or the begining point and the end point( end is NOT part 
    of the period but 1 unit past it. A period will be "invalid" if either
    end_point <= begin_point or the given duration is <= 0. Any valid period 
    will return false for is_null().
    
    Zero length periods are also considered invalid. Zero length periods are
    periods where the begining and end points are the same, or, the given 
    duration is zero. For a zero length period, the last point will be one 
    unit less than the begining point.

    In the case that the begin and last are the same, the period has a 
    length of one unit.
    
    The best way to handle periods is usually to provide a begining point and
    a duration.  So, day1 + 7 days is a week period which includes all of the
    first day and 6 more days (eg: Sun to Sat).

   ','line_number':27,'multiline':True]['text':'! create a period from begin to last eg: [begin,end)','line_number':86,'multiline':False]['text':'! If end <= begin then the period will be invalid
   ','line_number':87,'multiline':True]['text':'! create a period as [begin, begin+len)','line_number':97,'multiline':False]['text':'! If len is <= 0 then the period will be invalid
   ','line_number':98,'multiline':True]['text':'! Return the first element in the period','line_number':108,'multiline':False]['text':'! Return one past the last element ','line_number':116,'multiline':False]['text':'! Return the last item in the period','line_number':124,'multiline':False]['text':'! True if period is ill formed (length is zero or less)','line_number':132,'multiline':False]['text':'! Return the length of the period','line_number':140,'multiline':False]['text':' invalid period','line_number':145,'multiline':False]['text':' normal case','line_number':149,'multiline':False]['text':'! Equality operator','line_number':153,'multiline':False]['text':'! Strict as defined by rhs.last <= lhs.last','line_number':162,'multiline':False]['text':'! Shift the start and end by the specified amount','line_number':171,'multiline':False]['text':'* Expands the size of the period by the duration on both ends.
   *
   *So before expand 
   *@code
   *
   *         [-------]
   * ^   ^   ^   ^   ^   ^  ^
   * 1   2   3   4   5   6  7
   * 
   *@endcode
   * After expand(2)
   *@code
   *
   * [----------------------]
   * ^   ^   ^   ^   ^   ^  ^
   * 1   2   3   4   5   6  7
   * 
   *@endcode
   ','line_number':180,'multiline':True]['text':'! True if the point is inside the period, zero length periods contain no points','line_number':207,'multiline':False]['text':'! True if this period fully contains (or equals) the other period','line_number':217,'multiline':False]['text':'! True if periods are next to each other without a gap.','line_number':226,'multiline':False]['text':' In the example below, p1 and p2 are adjacent, but p3 is not adjacent
   * with either of p1 or p2.
   *@code
   *   [-p1-)
   *        [-p2-)
   *          [-p3-) 
   *@endcode
   ','line_number':227,'multiline':True]['text':'! True if all of the period is prior or t < start','line_number':244,'multiline':False]['text':' In the example below only point 1 would evaluate to true.
   *@code
   *     [---------])
   * ^   ^    ^     ^   ^
   * 1   2    3     4   5
   * 
   *@endcode
   ','line_number':245,'multiline':True]['text':'null period isn't after','line_number':259,'multiline':False]['text':'! True if all of the period is prior to the passed point or end <= t','line_number':265,'multiline':False]['text':' In the example below points 4 and 5 return true.
   *@code
   *     [---------])
   * ^   ^    ^     ^   ^
   * 1   2    3     4   5
   * 
   *@endcode
   ','line_number':266,'multiline':True]['text':'null period isn't before anything','line_number':280,'multiline':False]['text':'! True if the periods overlap in any way','line_number':287,'multiline':False]['text':' In the example below p1 intersects with p2, p4, and p6.
   *@code
   *       [---p1---)
   *             [---p2---)
   *                [---p3---) 
   *  [---p4---) 
   * [-p5-) 
   *         [-p6-) 
   *@endcode
   ','line_number':288,'multiline':True]['text':'! Returns the period of intersection or invalid range no intersection','line_number':307,'multiline':False]['text':'case2','line_number':314,'multiline':False]['text':'case 1','line_number':317,'multiline':False]['text':'case3','line_number':321,'multiline':False]['text':'case4','line_number':324,'multiline':False]['text':'unreachable','line_number':327,'multiline':False]['text':'! Returns the union of intersecting periods -- or null period','line_number':330,'multiline':False]['text':'! 
   ','line_number':331,'multiline':True]['text':' no intersect return null','line_number':346,'multiline':False]['text':'! Combine two periods with earliest start and latest end.','line_number':349,'multiline':False]['text':'! Combines two periods and any gap between them such that 
   *  start = min(p1.start, p2.start)
   *  end   = max(p1.end  , p2.end)
   *@code
   *        [---p1---)
   *                       [---p2---)
   * result:
   *        [-----------p3----------) 
   *@endcode
   ','line_number':350,'multiline':True]['text':'namespace date_time','line_number':371,'multiline':False]