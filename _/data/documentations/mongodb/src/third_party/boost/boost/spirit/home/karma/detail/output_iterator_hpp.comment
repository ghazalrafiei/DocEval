['text':'  Copyright (c) 2001-2011 Hartmut Kaiser','line_number':1,'multiline':False]['text':' ','line_number':2,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See accompanying ','line_number':3,'multiline':False]['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':31,'multiline':False]['text':'  This class is used to keep track of the current position in the output.','line_number':32,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':33,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':62,'multiline':False]['text':' track position in the output ','line_number':72,'multiline':False]['text':' return the current count in the output','line_number':76,'multiline':False]['text':' return the current line in the output','line_number':82,'multiline':False]['text':' return the current column in the output','line_number':88,'multiline':False]['text':' for position tracking','line_number':95,'multiline':False]['text':'value','line_number':104,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':107,'multiline':False]['text':'  This class is used to count the number of characters streamed into the ','line_number':108,'multiline':False]['text':'  output.','line_number':109,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':110,'multiline':False]['text':' propagate count ','line_number':123,'multiline':False]['text':' propagate count from embedded counters','line_number':134,'multiline':False]['text':' previous counter in chain','line_number':143,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':147,'multiline':False]['text':' functions related to counting','line_number':155,'multiline':False]['text':' count characters, if appropriate','line_number':167,'multiline':False]['text':' for counting','line_number':173,'multiline':False]['text':'value','line_number':182,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':185,'multiline':False]['text':'  The following classes are used to intercept the output into a buffer','line_number':186,'multiline':False]['text':'  allowing to do things like alignment, character escaping etc.','line_number':187,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':188,'multiline':False]['text':' wchar_t is only 16-bits on Windows. If BOOST_SPIRIT_UNICODE is','line_number':191,'multiline':False]['text':' defined, the character type is 32-bits wide so we need to make','line_number':192,'multiline':False]['text':' sure the buffer is at least that wide.','line_number':193,'multiline':False]['text':' release existing buffer','line_number':211,'multiline':False]['text':' conversion from 'x' to 'y', possible loss of data','line_number':240,'multiline':False]['text':' conversion from 'x' to 'y', possible loss of data','line_number':259,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':278,'multiline':False]['text':' functions related to buffering','line_number':285,'multiline':False]['text':' buffer characters, if appropriate','line_number':296,'multiline':False]['text':'value','line_number':316,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':324,'multiline':False]['text':'  forward declaration only','line_number':325,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':333,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':382,'multiline':False]['text':' get the most derived type of this class','line_number':386,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':416,'multiline':False]['text':'  Karma uses an output iterator wrapper for all output operations. This','line_number':417,'multiline':False]['text':'  is necessary to avoid the dreaded 'scanner business' problem, i.e. the','line_number':418,'multiline':False]['text':'  dependency of rules and grammars on the used output iterator. ','line_number':419,'multiline':False]['text':'','line_number':420,'multiline':False]['text':'  By default the user supplied output iterator is wrapped inside an ','line_number':421,'multiline':False]['text':'  instance of this internal output_iterator class. ','line_number':422,'multiline':False]['text':'','line_number':423,'multiline':False]['text':'  This output_iterator class normally just forwards to the embedded user','line_number':424,'multiline':False]['text':'  supplied iterator. But it is possible to enable additional functionality','line_number':425,'multiline':False]['text':'  on demand, such as counting, buffering, and position tracking.','line_number':426,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':427,'multiline':False]['text':' base iterator type','line_number':433,'multiline':False]['text':' increment only if not buffering','line_number':455,'multiline':False]['text':' 'argument' : conversion from '...' to '...', possible loss of data','line_number':469,'multiline':False]['text':' plain output iterators are considered to be good all the time','line_number':483,'multiline':False]['text':' allow to access underlying output iterator','line_number':486,'multiline':False]['text':' this is the wrapped user supplied output iterator','line_number':490,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':494,'multiline':False]['text':' expose good bit of underlying stream object','line_number':514,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':518,'multiline':False]['text':'  Helper class for exception safe enabling of character counting in the','line_number':519,'multiline':False]['text':'  output iterator','line_number':520,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':521,'multiline':False]['text':' get number of characters counted since last enable','line_number':528,'multiline':False]['text':' for counting','line_number':535,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':548,'multiline':False]['text':'  Helper class for exception safe enabling of character buffering in the','line_number':549,'multiline':False]['text':'  output iterator','line_number':550,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':551,'multiline':False]['text':' reset buffer chain to initial state','line_number':568,'multiline':False]['text':' copy to the underlying sink whatever is in the local buffer','line_number':577,'multiline':False]['text':' return number of characters stored in the buffer','line_number':586,'multiline':False]['text':' copy to the remaining characters to the specified sink','line_number':592,'multiline':False]['text':' copy the contents to the given output iterator','line_number':599,'multiline':False]['text':' for buffering','line_number':609,'multiline':False]['text':' previous buffer in chain','line_number':610,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':614,'multiline':False]['text':'  Helper class for exception safe disabling of output','line_number':615,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':616,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':634,'multiline':False]['text':' the general case is always good','line_number':638,'multiline':False]['text':' our own output iterators are handled separately','line_number':644,'multiline':False]