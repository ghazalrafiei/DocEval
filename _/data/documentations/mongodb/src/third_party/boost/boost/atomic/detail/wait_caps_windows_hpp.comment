['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2020 Andrey Semashev
 ','line_number':1,'multiline':True]['text':'!
 * \file   atomic/detail/wait_caps_windows.hpp
 *
 * This header defines waiting/notifying operations capabilities macros.
 ','line_number':8,'multiline':True]['text':' MSDN says WaitOnAddress, WakeByAddressSingle and WakeByAddressAll only support notifications between threads of the same process, so no address-free operations.','line_number':25,'multiline':False]['text':' https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-waitonaddress','line_number':26,'multiline':False]['text':' https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-wakebyaddresssingle','line_number':27,'multiline':False]['text':' https://docs.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-wakebyaddressall','line_number':28,'multiline':False]['text':' BOOST_USE_WINAPI_VERSION >= BOOST_WINAPI_VERSION_WIN8 && (BOOST_WINAPI_PARTITION_APP || BOOST_WINAPI_PARTITION_SYSTEM)','line_number':39,'multiline':False]['text':' Since we'll detect availability of WaitOnAddress etc. at run time, we have to define capability macros to 1 instead of 2','line_number':41,'multiline':False]['text':' BOOST_USE_WINAPI_VERSION >= BOOST_WINAPI_VERSION_WIN8 && (BOOST_WINAPI_PARTITION_APP || BOOST_WINAPI_PARTITION_SYSTEM)','line_number':55,'multiline':False]['text':' BOOST_ATOMIC_DETAIL_WAIT_CAPS_WINDOWS_HPP_INCLUDED_','line_number':57,'multiline':False]