['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file backbone.hpp','line_number':2,'multiline':False]['text':'/ @brief This file constains the class backbone, which is part of the','line_number':3,'multiline':False]['text':'/        block_indirect_sort algorithm','line_number':4,'multiline':False]['text':'/','line_number':5,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':6,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':7,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':9,'multiline':False]['text':'/ @version 0.1','line_number':10,'multiline':False]['text':'/','line_number':11,'multiline':False]['text':'/ @remarks','line_number':12,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':13,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':35,'multiline':False]['text':'                 USING SENTENCES','line_number':36,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':37,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':43,'multiline':False]['text':'/ @struct backbone','line_number':44,'multiline':False]['text':'/ @brief This contains all the information shared betwen the classes of the','line_number':45,'multiline':False]['text':'/        block indirect sort algorithm','line_number':46,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':48,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':52,'multiline':False]['text':'                  D E F I N I T I O N S','line_number':53,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':54,'multiline':False]['text':'------------------------------------------------------------------------','line_number':63,'multiline':False]['text':'                V A R I A B L E S','line_number':64,'multiline':False]['text':'------------------------------------------------------------------------','line_number':65,'multiline':False]['text':' range with all the element to sort','line_number':66,'multiline':False]['text':' index vector of block_pos elements','line_number':69,'multiline':False]['text':' Number of elements to sort','line_number':72,'multiline':False]['text':' Number of blocks to sort','line_number':75,'multiline':False]['text':' Number of elements in the last block (tail)','line_number':78,'multiline':False]['text':' object for to compare two elements','line_number':81,'multiline':False]['text':' range  of elements of the last block (tail)','line_number':84,'multiline':False]['text':' thread local varible. It is a pointer to the buffer','line_number':87,'multiline':False]['text':' concurrent stack where store the function_t elements','line_number':90,'multiline':False]['text':' global indicator of error','line_number':93,'multiline':False]['text':'','line_number':95,'multiline':False]['text':'------------------------------------------------------------------------','line_number':96,'multiline':False]['text':'                F U N C T I O N S','line_number':97,'multiline':False]['text':'------------------------------------------------------------------------','line_number':98,'multiline':False]['text':'------------------------------------------------------------------------','line_number':101,'multiline':False]['text':'  function : get_block','line_number':102,'multiline':False]['text':'/ @brief obtain the block in the position pos','line_number':103,'multiline':False]['text':'/ @param pos : position of the range','line_number':104,'multiline':False]['text':'/ @return block required','line_number':105,'multiline':False]['text':'------------------------------------------------------------------------','line_number':106,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':111,'multiline':False]['text':'  function : get_range','line_number':112,'multiline':False]['text':'/ @brief obtain the range in the position pos','line_number':113,'multiline':False]['text':'/ @param pos : position of the range','line_number':114,'multiline':False]['text':'/ @return range required','line_number':115,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':116,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':124,'multiline':False]['text':'  function : get_range_buf','line_number':125,'multiline':False]['text':'/ @brief obtain the auxiliary buffer of the thread','line_number':126,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':127,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':133,'multiline':False]['text':'  function : exec','line_number':134,'multiline':False]['text':'/ @brief Initialize the thread local buffer with the ptr_buf pointer,','line_number':135,'multiline':False]['text':'/        and begin with the execution of the functions stored in works','line_number':136,'multiline':False]['text':'','line_number':137,'multiline':False]['text':'/ @param ptr_buf : Pointer to the memory assigned to the thread_local','line_number':138,'multiline':False]['text':'/                  buffer','line_number':139,'multiline':False]['text':'/ @param counter : atomic counter for to invoke to the exec function','line_number':140,'multiline':False]['text':'/                  with only 1 parameter','line_number':141,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':142,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':151,'multiline':False]['text':' end struct backbone','line_number':152,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':153,'multiline':False]['text':'','line_number':154,'multiline':False]['text':'############################################################################','line_number':155,'multiline':False]['text':'                                                                          ##','line_number':156,'multiline':False]['text':'                                                                          ##','line_number':157,'multiline':False]['text':'            N O N     I N L I N E      F U N C T I O N S                  ##','line_number':158,'multiline':False]['text':'                                                                          ##','line_number':159,'multiline':False]['text':'                                                                          ##','line_number':160,'multiline':False]['text':'############################################################################','line_number':161,'multiline':False]['text':'','line_number':162,'multiline':False]['text':' initialization of the thread_local pointer to the auxiliary buffer','line_number':163,'multiline':False]['text':'------------------------------------------------------------------------','line_number':168,'multiline':False]['text':'  function : backbone','line_number':169,'multiline':False]['text':'/ @brief constructor of the class','line_number':170,'multiline':False]['text':'','line_number':171,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':172,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':173,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':174,'multiline':False]['text':'/               iterators','line_number':175,'multiline':False]['text':'------------------------------------------------------------------------','line_number':176,'multiline':False]['text':' nothing to do','line_number':183,'multiline':False]['text':'','line_number':196,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':197,'multiline':False]['text':'  function : exec','line_number':198,'multiline':False]['text':'/ @brief execute the function_t stored in works, until counter is zero','line_number':199,'multiline':False]['text':'','line_number':200,'multiline':False]['text':'/ @param counter : atomic counter. When 0 exits the function','line_number':201,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':202,'multiline':False]['text':'','line_number':213,'multiline':False]['text':'****************************************************************************','line_number':214,'multiline':False]['text':'    End namespace blk_detail','line_number':215,'multiline':False]['text':'    End namespace sort','line_number':216,'multiline':False]['text':'    End namespace boost','line_number':217,'multiline':False]['text':'****************************************************************************','line_number':218,'multiline':False]