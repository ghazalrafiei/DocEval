['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file sample_sort.hpp','line_number':2,'multiline':False]['text':'/ @brief contains the class sample_sort','line_number':3,'multiline':False]['text':'/','line_number':4,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]['text':'/ @version 0.1','line_number':9,'multiline':False]['text':'/','line_number':10,'multiline':False]['text':'/ @remarks','line_number':11,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':37,'multiline':False]['text':'                    USING SENTENCES','line_number':38,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':39,'multiline':False]['text':'','line_number':49,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':50,'multiline':False]['text':'/ @struct sample_sort','line_number':51,'multiline':False]['text':'/ @brief This a structure for to implement a sample sort, exception','line_number':52,'multiline':False]['text':'/        safe','line_number':53,'multiline':False]['text':'/ @tparam','line_number':54,'multiline':False]['text':'/ @remarks','line_number':55,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':56,'multiline':False]['text':'------------------------------------------------------------------------','line_number':60,'multiline':False]['text':'                     DEFINITIONS','line_number':61,'multiline':False]['text':'------------------------------------------------------------------------','line_number':62,'multiline':False]['text':'------------------------------------------------------------------------','line_number':68,'multiline':False]['text':'                VARIABLES AND CONSTANTS','line_number':69,'multiline':False]['text':'------------------------------------------------------------------------','line_number':70,'multiline':False]['text':' minimun numbers of elements for to be sortd in parallel mode','line_number':71,'multiline':False]['text':' Number of threads to use in the algorithm','line_number':74,'multiline':False]['text':' Number of intervals for to do the internal division of the data','line_number':75,'multiline':False]['text':' Bool variables indicating if the auxiliary memory is constructed','line_number':78,'multiline':False]['text':' and indicating in the auxiliary memory had been obtained inside the','line_number':79,'multiline':False]['text':'/ algorithm or had been received as a parameter','line_number':80,'multiline':False]['text':' Comparison object for to compare two elements','line_number':83,'multiline':False]['text':' Range with all the elements to sort','line_number':86,'multiline':False]['text':' range with the auxiliary memory','line_number':89,'multiline':False]['text':' vector of futures','line_number':92,'multiline':False]['text':' vector of vectors which contains the ranges to merge obtained in the','line_number':95,'multiline':False]['text':' subdivision','line_number':96,'multiline':False]['text':' each vector of ranges of the vv_range_it, need their corresponding buffer','line_number':99,'multiline':False]['text':' for to do the merge','line_number':100,'multiline':False]['text':' Initial vector of ranges','line_number':103,'multiline':False]['text':' Initial vector of buffers','line_number':106,'multiline':False]['text':' atomic counter for to know when are finished the function_t created','line_number':109,'multiline':False]['text':' inside a function','line_number':110,'multiline':False]['text':' Indicate if an error in the algorithm for to undo all','line_number':113,'multiline':False]['text':'------------------------------------------------------------------------','line_number':116,'multiline':False]['text':'                       FUNCTIONS OF THE STRUCT','line_number':117,'multiline':False]['text':'------------------------------------------------------------------------','line_number':118,'multiline':False]['text':'','line_number':144,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':145,'multiline':False]['text':'  function :~sample_sort','line_number':146,'multiline':False]['text':'/ @brief destructor of the class. The utility is to destroy the temporary','line_number':147,'multiline':False]['text':'/        buffer used in the sorting process','line_number':148,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':149,'multiline':False]['text':'','line_number':151,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':152,'multiline':False]['text':'  function : execute first','line_number':153,'multiline':False]['text':'/ @brief this a function to assign to each thread in the first merge','line_number':154,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':155,'multiline':False]['text':'','line_number':165,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':166,'multiline':False]['text':'  function : execute','line_number':167,'multiline':False]['text':'/ @brief this is a function to assignt each thread the final merge','line_number':168,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':169,'multiline':False]['text':'','line_number':179,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':180,'multiline':False]['text':'  function : first merge','line_number':181,'multiline':False]['text':'/ @brief Implement the merge of the initially sparse ranges','line_number':182,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':183,'multiline':False]['text':'---------------------------------- begin --------------------------','line_number':185,'multiline':False]['text':'','line_number':196,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':197,'multiline':False]['text':'  function : final merge','line_number':198,'multiline':False]['text':'/ @brief Implement the final merge of the ranges','line_number':199,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':200,'multiline':False]['text':'---------------------------------- begin --------------------------','line_number':202,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':212,'multiline':False]['text':'                    End class sample_sort','line_number':214,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':215,'multiline':False]['text':'','line_number':216,'multiline':False]['text':'############################################################################','line_number':217,'multiline':False]['text':'                                                                          ##','line_number':218,'multiline':False]['text':'              N O N    I N L I N E      F U N C T I O N S                 ##','line_number':219,'multiline':False]['text':'                                                                          ##','line_number':220,'multiline':False]['text':'                                                                          ##','line_number':221,'multiline':False]['text':'############################################################################','line_number':222,'multiline':False]['text':'','line_number':223,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':224,'multiline':False]['text':'  function : sample_sort','line_number':225,'multiline':False]['text':'/ @brief constructor of the class','line_number':226,'multiline':False]['text':'/','line_number':227,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':228,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':229,'multiline':False]['text':'/ @param cmp : object for to compare two elements pointed by Iter_t iterators','line_number':230,'multiline':False]['text':'/ @param num_thread : Number of threads to use in the process. When this value','line_number':231,'multiline':False]['text':'/                     is lower than 2, the sorting is done with 1 thread','line_number':232,'multiline':False]['text':'/ @param paux : pointer to the auxiliary memory. If nullptr, the memory is','line_number':233,'multiline':False]['text':'/               created inside the class','line_number':234,'multiline':False]['text':'/ @param naux : number of elements of the memory pointed by paux','line_number':235,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':236,'multiline':False]['text':' Adjust when have many threads and only a few elements','line_number':250,'multiline':False]['text':'------------------- check if sort --------------------------------------','line_number':263,'multiline':False]['text':'------------------- check if reverse sort ---------------------------','line_number':269,'multiline':False]['text':'------------------------------------------------------------------------','line_number':296,'multiline':False]['text':'                    PROCESS','line_number':297,'multiline':False]['text':'------------------------------------------------------------------------','line_number':298,'multiline':False]['text':'','line_number':319,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':320,'multiline':False]['text':'  function : destroy_all','line_number':321,'multiline':False]['text':'/ @brief destructor of the class. The utility is to destroy the temporary','line_number':322,'multiline':False]['text':'/        buffer used in the sorting process','line_number':323,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':324,'multiline':False]['text':'','line_number':336,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':337,'multiline':False]['text':'  function : initial_configuration','line_number':338,'multiline':False]['text':'/ @brief Create the internal data structures, and obtain the inital set of','line_number':339,'multiline':False]['text':'/        ranges to merge','line_number':340,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':341,'multiline':False]['text':'------------------------------------------------------------------------','line_number':349,'multiline':False]['text':'------------------------------------------------------------------------','line_number':366,'multiline':False]['text':' Sorting of the ranges','line_number':367,'multiline':False]['text':'------------------------------------------------------------------------','line_number':368,'multiline':False]['text':'------------------------------------------------------------------------','line_number':385,'multiline':False]['text':' Obtain the vector of milestones','line_number':386,'multiline':False]['text':'------------------------------------------------------------------------','line_number':387,'multiline':False]['text':'------------------------------------------------------------------------','line_number':405,'multiline':False]['text':' Create the final milestone vector','line_number':406,'multiline':False]['text':'------------------------------------------------------------------------','line_number':407,'multiline':False]['text':'------------------------------------------------------------------------','line_number':416,'multiline':False]['text':' Creation of the first vector of ranges','line_number':417,'multiline':False]['text':'------------------------------------------------------------------------','line_number':418,'multiline':False]['text':'------------------------------------------------------------------------','line_number':436,'multiline':False]['text':' Copy in buffer and  creation of the final matrix of ranges','line_number':437,'multiline':False]['text':'------------------------------------------------------------------------','line_number':438,'multiline':False]['text':'','line_number':475,'multiline':False]['text':'****************************************************************************','line_number':476,'multiline':False]['text':'    End namespace sample_detail','line_number':479,'multiline':False]['text':'****************************************************************************','line_number':480,'multiline':False]['text':'','line_number':481,'multiline':False]['text':'','line_number':483,'multiline':False]['text':'############################################################################','line_number':484,'multiline':False]['text':'                                                                          ##','line_number':485,'multiline':False]['text':'                                                                          ##','line_number':486,'multiline':False]['text':'                       S A M P L E _ S O R T                              ##','line_number':487,'multiline':False]['text':'                                                                          ##','line_number':488,'multiline':False]['text':'                                                                          ##','line_number':489,'multiline':False]['text':'############################################################################','line_number':490,'multiline':False]['text':'','line_number':491,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':492,'multiline':False]['text':'  function : sample_sort','line_number':493,'multiline':False]['text':'/ @brief parallel sample sort  algorithm (stable sort)','line_number':494,'multiline':False]['text':'/','line_number':495,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':496,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':497,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':498,'multiline':False]['text':'','line_number':505,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':506,'multiline':False]['text':'  function : sample_sort','line_number':507,'multiline':False]['text':'/ @brief parallel sample sort  algorithm (stable sort)','line_number':508,'multiline':False]['text':'/','line_number':509,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':510,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':511,'multiline':False]['text':'/ @param nthread : Number of threads to use in the process. When this value','line_number':512,'multiline':False]['text':'/                  is lower than 2, the sorting is done with 1 thread','line_number':513,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':514,'multiline':False]['text':'','line_number':521,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':522,'multiline':False]['text':'  function : sample_sort','line_number':523,'multiline':False]['text':'/ @brief parallel sample sort  algorithm (stable sort)','line_number':524,'multiline':False]['text':'/','line_number':525,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':526,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':527,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':528,'multiline':False]['text':'/               iterators','line_number':529,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':530,'multiline':False]['text':'','line_number':537,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':538,'multiline':False]['text':'  function : sample_sort','line_number':539,'multiline':False]['text':'/ @brief parallel sample sort  algorithm (stable sort)','line_number':540,'multiline':False]['text':'/','line_number':541,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':542,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':543,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':544,'multiline':False]['text':'/               iterators','line_number':545,'multiline':False]['text':'/ @param nthread : Number of threads to use in the process. When this value','line_number':546,'multiline':False]['text':'/                  is lower than 2, the sorting is done with 1 thread','line_number':547,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':548,'multiline':False]['text':'','line_number':554,'multiline':False]['text':'****************************************************************************','line_number':555,'multiline':False]['text':'    End namespace sort','line_number':556,'multiline':False]['text':'    End namespace boost','line_number':557,'multiline':False]['text':'****************************************************************************','line_number':558,'multiline':False]['text':'','line_number':559,'multiline':False]