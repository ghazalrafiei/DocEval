['text':'','line_number':1,'multiline':False]['text':' detail/select_reactor.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':43,'multiline':False]['text':' !defined(BOOST_ASIO_HAS_IOCP)','line_number':55,'multiline':False]['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':61,'multiline':False]['text':' defined(BOOST_ASIO_WINDOWS) || defined(__CYGWIN__)','line_number':64,'multiline':False]['text':' Per-descriptor data.','line_number':66,'multiline':False]['text':' Constructor.','line_number':71,'multiline':False]['text':' Destructor.','line_number':74,'multiline':False]['text':' Destroy all user-defined handler objects owned by the service.','line_number':77,'multiline':False]['text':' Recreate internal descriptors following a fork.','line_number':80,'multiline':False]['text':' Initialise the task, but only if the reactor is not in its own thread.','line_number':84,'multiline':False]['text':' Register a socket with the reactor. Returns 0 on success, system error','line_number':87,'multiline':False]['text':' code on failure.','line_number':88,'multiline':False]['text':' Register a descriptor with an associated single operation. Returns 0 on','line_number':91,'multiline':False]['text':' success, system error code on failure.','line_number':92,'multiline':False]['text':' Post a reactor operation for immediate completion.','line_number':97,'multiline':False]['text':' Start a new operation. The reactor operation will be performed when the','line_number':100,'multiline':False]['text':' given descriptor is flagged as ready, or an error has occurred.','line_number':101,'multiline':False]['text':' Cancel all operations associated with the given descriptor. The','line_number':105,'multiline':False]['text':' handlers associated with the descriptor will be invoked with the','line_number':106,'multiline':False]['text':' operation_aborted error.','line_number':107,'multiline':False]['text':' Cancel all operations associated with the given descriptor and key. The','line_number':110,'multiline':False]['text':' handlers associated with the descriptor will be invoked with the','line_number':111,'multiline':False]['text':' operation_aborted error.','line_number':112,'multiline':False]['text':' Cancel any operations that are running against the descriptor and remove','line_number':117,'multiline':False]['text':' its registration from the reactor. The reactor resources associated with','line_number':118,'multiline':False]['text':' the descriptor must be released by calling cleanup_descriptor_data.','line_number':119,'multiline':False]['text':' Remove the descriptor's registration from the reactor. The reactor','line_number':123,'multiline':False]['text':' resources associated with the descriptor must be released by calling','line_number':124,'multiline':False]['text':' cleanup_descriptor_data.','line_number':125,'multiline':False]['text':' Perform any post-deregistration cleanup tasks associated with the','line_number':129,'multiline':False]['text':' descriptor data.','line_number':130,'multiline':False]['text':' Move descriptor registration from one descriptor_data object to another.','line_number':133,'multiline':False]['text':' Add a new timer queue to the reactor.','line_number':138,'multiline':False]['text':' Remove a timer queue from the reactor.','line_number':142,'multiline':False]['text':' Schedule a new operation in the given timer queue to expire at the','line_number':146,'multiline':False]['text':' specified absolute time.','line_number':147,'multiline':False]['text':' Cancel the timer operations associated with the given token. Returns the','line_number':153,'multiline':False]['text':' number of operations that have been posted or dispatched.','line_number':154,'multiline':False]['text':' Cancel the timer operations associated with the given key.','line_number':160,'multiline':False]['text':' Move the timer operations associated with the given timer.','line_number':166,'multiline':False]['text':' Run select once until interrupted or events are ready to be dispatched.','line_number':172,'multiline':False]['text':' Interrupt the select loop.','line_number':175,'multiline':False]['text':' Run the select loop in the thread.','line_number':180,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':182,'multiline':False]['text':' Helper function to add a new timer queue.','line_number':184,'multiline':False]['text':' Helper function to remove a timer queue.','line_number':187,'multiline':False]['text':' Get the timeout value for the select call.','line_number':190,'multiline':False]['text':' Cancel all operations associated with the given descriptor. This function','line_number':193,'multiline':False]['text':' does not acquire the select_reactor's mutex.','line_number':194,'multiline':False]['text':' The scheduler implementation used to post completions.','line_number':198,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':201,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':203,'multiline':False]['text':' Mutex to protect access to internal data.','line_number':206,'multiline':False]['text':' The interrupter is used to break a blocking select call.','line_number':209,'multiline':False]['text':' The queues of read, write and except operations.','line_number':212,'multiline':False]['text':' The file descriptor sets to be passed to the select system call.','line_number':215,'multiline':False]['text':' The timer queues.','line_number':218,'multiline':False]['text':' Helper class to run the reactor loop in a thread.','line_number':222,'multiline':False]['text':' Does the reactor loop thread need to stop.','line_number':226,'multiline':False]['text':' The thread that is running the reactor loop.','line_number':229,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':231,'multiline':False]['text':' Whether the service has been shut down.','line_number':233,'multiline':False]['text':' namespace detail','line_number':237,'multiline':False]['text':' namespace asio','line_number':238,'multiline':False]['text':' namespace boost','line_number':239,'multiline':False]['text':' defined(BOOST_ASIO_HEADER_ONLY)','line_number':246,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IOCP)','line_number':248,'multiline':False]['text':'   || (!defined(BOOST_ASIO_HAS_DEV_POLL)','line_number':249,'multiline':False]['text':'       && !defined(BOOST_ASIO_HAS_EPOLL)','line_number':250,'multiline':False]['text':'       && !defined(BOOST_ASIO_HAS_KQUEUE)','line_number':251,'multiline':False]['text':'       && !defined(BOOST_ASIO_WINDOWS_RUNTIME))','line_number':252,'multiline':False]['text':' BOOST_ASIO_DETAIL_SELECT_REACTOR_HPP','line_number':254,'multiline':False]