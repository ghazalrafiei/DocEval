['text':'
 *
 * Copyright (c) 2004
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]['text':'
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         static_mutex.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Declares static_mutex lock type, there are three different
  *                implementations: POSIX pthreads, WIN32 threads, and portable,
  *                these are described in more detail below.
  ','line_number':12,'multiline':True]['text':' dll import/export options.','line_number':25,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' pthreads version:','line_number':33,'multiline':False]['text':' simple wrap around a pthread_mutex_t initialized with','line_number':34,'multiline':False]['text':' PTHREAD_MUTEX_INITIALIZER.','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':' namespace boost','line_number':70,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' Win32 version:','line_number':73,'multiline':False]['text':' Use a 32-bit int as a lock, along with a test-and-set','line_number':74,'multiline':False]['text':' implementation using InterlockedCompareExchange.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' namespace','line_number':115,'multiline':False]['text':'','line_number':118,'multiline':False]['text':' Portable version of a static mutex based on Boost.Thread library:','line_number':119,'multiline':False]['text':' This has to use a single mutex shared by all instances of static_mutex','line_number':120,'multiline':False]['text':' because boost::call_once doesn't alow us to pass instance information','line_number':121,'multiline':False]['text':' down to the initialisation proceedure.  In fact the initialisation routine','line_number':122,'multiline':False]['text':' may need to be called more than once - but only once per instance.','line_number':123,'multiline':False]['text':'','line_number':124,'multiline':False]['text':' Since this preprocessor path is almost never taken, we hide these header','line_number':125,'multiline':False]['text':' dependencies so that build tools don't find them.','line_number':126,'multiline':False]['text':'','line_number':127,'multiline':False]['text':' namespace','line_number':178,'multiline':False]