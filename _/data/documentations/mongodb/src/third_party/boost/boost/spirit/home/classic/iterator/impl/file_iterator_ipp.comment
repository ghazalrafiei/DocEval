['text':'=============================================================================
    Copyright (c) 2003 Giovanni Bajo
    Copyright (c) 2003 Martin Wille
    Copyright (c) 2003 Hartmut Kaiser
    http://spirit.sourceforge.net/

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':' open, stat, mmap, munmap','line_number':27,'multiline':False]['text':' stat','line_number':28,'multiline':False]['text':' open','line_number':29,'multiline':False]['text':' stat, mmap, munmap','line_number':30,'multiline':False]['text':' mmap, mmunmap','line_number':31,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':34,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':39,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':'  std_file_iterator','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':'  Base class that implements iteration through a file using standard C','line_number':46,'multiline':False]['text':'  stream library (fopen and friends). This class and the following are','line_number':47,'multiline':False]['text':'  the base components on which the iterator is built (through the','line_number':48,'multiline':False]['text':'  iterator adaptor library).','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':'  The opened file stream (FILE) is held with a shared_ptr<>, whose','line_number':51,'multiline':False]['text':'  custom deleter invokes fcose(). This makes the syntax of the class','line_number':52,'multiline':False]['text':'  very easy, especially everything related to copying.','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':55,'multiline':False]['text':' If the file was opened, store it into','line_number':71,'multiline':False]['text':'  the smart pointer.','line_number':72,'multiline':False]['text':' Nasty bug in Comeau up to 4.3.0.1, we need explicit boolean context','line_number':95,'multiline':False]['text':'  for shared_ptr to evaluate correctly','line_number':96,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':159,'multiline':False]['text':'','line_number':160,'multiline':False]['text':'  mmap_file_iterator','line_number':161,'multiline':False]['text':'','line_number':162,'multiline':False]['text':'  File iterator for memory mapped files, for now implemented on Windows and','line_number':163,'multiline':False]['text':'  POSIX  platforms. This class has the same interface of std_file_iterator,','line_number':164,'multiline':False]['text':'  and can be used in its place (in fact, it's the default for Windows and','line_number':165,'multiline':False]['text':'  POSIX).','line_number':166,'multiline':False]['text':'','line_number':167,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':168,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':170,'multiline':False]['text':' mmap_file_iterator, Windows version','line_number':171,'multiline':False]['text':' Store the size of the file, it's used to construct','line_number':199,'multiline':False]['text':'  the end iterator','line_number':200,'multiline':False]['text':' We hold both the file handle and the memory pointer.','line_number':230,'multiline':False]['text':' We can close the hMap handle now because Windows holds internally','line_number':231,'multiline':False]['text':'  a reference to it since there is a view mapped.','line_number':232,'multiline':False]['text':' It seems like we can close the file handle as well (because','line_number':235,'multiline':False]['text':'  a reference is hold by the filemap object).','line_number':236,'multiline':False]['text':' Store the handles inside the shared_ptr (with the custom destructors)','line_number':239,'multiline':False]['text':' Start of the file','line_number':242,'multiline':False]['text':' Nasty bug in Comeau up to 4.3.0.1, we need explicit boolean context','line_number':258,'multiline':False]['text':'  for shared_ptr to evaluate correctly','line_number':259,'multiline':False]['text':' BOOST_SPIRIT_FILEITERATOR_WINDOWS','line_number':295,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':297,'multiline':False]['text':' mmap_file_iterator, POSIX version','line_number':298,'multiline':False]['text':' open the file','line_number':341,'multiline':False]['text':' if stdin was closed then opening a file','line_number':344,'multiline':False]['text':' would cause the file to become the controlling','line_number':345,'multiline':False]['text':' terminal if the filename refers to a tty. Setting','line_number':346,'multiline':False]['text':' O_NOCTTY inhibits this.','line_number':347,'multiline':False]['text':' call fstat to find get information about the file just','line_number':354,'multiline':False]['text':' opened (size and file type)','line_number':355,'multiline':False]['text':' if fstat returns an error or if the file isn't a','line_number':358,'multiline':False]['text':' regular file we give up.','line_number':359,'multiline':False]['text':' perform the actual mapping','line_number':364,'multiline':False]['text':' it is safe to close() here. POSIX requires that the OS keeps a','line_number':366,'multiline':False]['text':' second handle to the file while the file is mmapped.','line_number':367,'multiline':False]['text':' Start of the file','line_number':386,'multiline':False]['text':' Nasty bug in Comeau up to 4.3.0.1, we need explicit boolean context','line_number':401,'multiline':False]['text':'  for shared_ptr to evaluate correctly','line_number':402,'multiline':False]['text':' BOOST_SPIRIT_FILEITERATOR_POSIX','line_number':435,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':437,'multiline':False]['text':' namespace boost::spirit::fileiter_impl ','line_number':438,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':457,'multiline':False]['text':' namespace boost::spirit ','line_number':460,'multiline':True]['text':' BOOST_SPIRIT_FILE_ITERATOR_IPP ','line_number':463,'multiline':True]