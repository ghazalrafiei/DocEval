['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]['text':' ostream_iterator.hpp','line_number':10,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':12,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':13,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':14,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':15,'multiline':False]['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':17,'multiline':False]['text':' note: this is a custom version of the standard ostream_iterator.','line_number':19,'multiline':False]['text':' This is necessary as the standard version doesn't work as expected','line_number':20,'multiline':False]['text':' for wchar_t based streams on systems for which wchar_t not a true','line_number':21,'multiline':False]['text':' type but rather a synonym for some integer type.','line_number':22,'multiline':False]['text':' given a type, make an input iterator based on a pointer to that type','line_number':31,'multiline':False]['text':'emulate the behavior of std::ostream','line_number':46,'multiline':False]['text':' namespace iterators','line_number':79,'multiline':False]['text':' namespace archive','line_number':80,'multiline':False]['text':' namespace boost','line_number':81,'multiline':False]['text':' BOOST_ARCHIVE_ITERATORS_OSTREAM_ITERATOR_HPP','line_number':83,'multiline':False]