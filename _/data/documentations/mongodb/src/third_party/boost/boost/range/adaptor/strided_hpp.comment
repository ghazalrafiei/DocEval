['text':' Boost.Range library','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':'  Copyright Neil Groves 2007. Use, modification and','line_number':3,'multiline':False]['text':'  distribution is subject to the Boost Software License, Version','line_number':4,'multiline':False]['text':'  1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' For more information, see http://www.boost.org/libs/range/','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' strided_iterator for wrapping a forward traversal iterator','line_number':23,'multiline':False]['text':' strided_iterator for wrapping a bidirectional iterator','line_number':126,'multiline':False]['text':' strided_iterator implementation for wrapping a random access iterator','line_number':257,'multiline':False]['text':' Implementation detail: only update the actual underlying iterator','line_number':359,'multiline':False]['text':' at the point of dereference. This is done so that the increment','line_number':360,'multiline':False]['text':' and decrement can overshoot the valid sequence as is required','line_number':361,'multiline':False]['text':' by striding. Since we can do all comparisons just with the index','line_number':362,'multiline':False]['text':' simply, and all dereferences must be within the valid range.','line_number':363,'multiline':False]['text':' namespace range_detail','line_number':666,'multiline':False]['text':' namespace 'adaptors'','line_number':694,'multiline':False]['text':' namespace 'boost'','line_number':695,'multiline':False]