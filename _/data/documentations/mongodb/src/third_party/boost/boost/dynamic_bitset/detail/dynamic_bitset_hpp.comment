['text':' -----------------------------------------------------------','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':'   Copyright (c) 2001-2002 Chuck Allison and Jeremy Siek','line_number':3,'multiline':False]['text':'   Copyright (c) 2003-2006, 2008 Gennaro Prota','line_number':4,'multiline':False]['text':'   Copyright (c) 2014 Glen Joseph Fernandes','line_number':5,'multiline':False]['text':'       (glenjofe@gmail.com)','line_number':6,'multiline':False]['text':'   Copyright (c) 2018 Evgeny Shulgin','line_number':7,'multiline':False]['text':'   Copyright (c) 2019 Andrey Semashev','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':10,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':11,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':12,'multiline':False]['text':'','line_number':13,'multiline':False]['text':' -----------------------------------------------------------','line_number':14,'multiline':False]['text':' Gives (read-)access to the object representation','line_number':42,'multiline':False]['text':' of an object of type T (3.9p4). CANNOT be used','line_number':43,'multiline':False]['text':' on a base sub-object','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':' = default ','line_number':52,'multiline':True]['text':' ------- count function implementation --------------','line_number':61,'multiline':False]['text':' These two entities','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':'     enum mode { access_by_bytes, access_by_blocks };','line_number':67,'multiline':False]['text':'     template <mode> struct mode_to_type {};','line_number':68,'multiline':False]['text':'','line_number':69,'multiline':False]['text':' were removed, since the regression logs (as of 24 Aug 2008)','line_number':70,'multiline':False]['text':' showed that several compilers had troubles with recognizing','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':'   const mode m = access_by_bytes','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' as a constant expression','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' * So, we'll use bool, instead of enum *.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':' the table: wrapped in a class template, so','line_number':88,'multiline':False]['text':' that it is only instantiated if/when needed','line_number':89,'multiline':False]['text':'','line_number':90,'multiline':False]['text':' no table ','line_number':95,'multiline':True]['text':' Automatically generated by GPTableGen.exe v.1.0','line_number':102,'multiline':False]['text':'','line_number':103,'multiline':False]['text':' Some platforms have fast popcount operation, that allow us to implement','line_number':115,'multiline':False]['text':' counting bits much more efficiently','line_number':116,'multiline':False]['text':'','line_number':117,'multiline':False]['text':' Note: gcc builtins are implemented by compiler runtime when the target CPU may not support the necessary instructions','line_number':156,'multiline':False]['text':' overload for access by blocks','line_number':183,'multiline':False]['text':'','line_number':184,'multiline':False]['text':' overload for access by bytes','line_number':204,'multiline':False]['text':'','line_number':205,'multiline':False]['text':'dummy param','line_number':208,'multiline':True]['text':' -------------------------------------------------------','line_number':222,'multiline':False]['text':' Some library implementations simply return a dummy','line_number':225,'multiline':False]['text':' value such as','line_number':226,'multiline':False]['text':'','line_number':227,'multiline':False]['text':'   size_type(-1) / sizeof(T)','line_number':228,'multiline':False]['text':'','line_number':229,'multiline':False]['text':' from vector<>::max_size. This tries to get more','line_number':230,'multiline':False]['text':' meaningful info.','line_number':231,'multiline':False]['text':'','line_number':232,'multiline':False]['text':' for static_asserts','line_number':249,'multiline':False]['text':' ensure T has no sign','line_number':252,'multiline':False]['text':'','line_number':270,'multiline':True]['text':' intentionally omitted','line_number':294,'multiline':False]['text':'BOOST_dynamic_bitset_is_numeric(float);','line_number':295,'multiline':False]['text':'BOOST_dynamic_bitset_is_numeric(double);','line_number':296,'multiline':False]['text':'BOOST_dynamic_bitset_is_numeric(long double);','line_number':297,'multiline':False]['text':' dynamic_bitset_impl','line_number':301,'multiline':False]['text':' namespace detail','line_number':302,'multiline':False]['text':' namespace boost','line_number':304,'multiline':False]['text':' include guard','line_number':306,'multiline':False]