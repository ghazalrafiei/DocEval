['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':' grammar.hpp','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////','line_number':43,'multiline':False]['text':'**********************************************************************//','line_number':44,'multiline':False]['text':'*                            << NOTE! >>                             *//','line_number':45,'multiline':False]['text':'*                                                                    *//','line_number':46,'multiline':False]['text':'* Whenever you change this grammar, you MUST also make corresponding *//','line_number':47,'multiline':False]['text':'* changes to width_of.hpp and is_pure.hpp.                           *//','line_number':48,'multiline':False]['text':'*                                                                    *//','line_number':49,'multiline':False]['text':'**********************************************************************//','line_number':50,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////','line_number':51,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':63,'multiline':False]['text':' CharLiteral','line_number':64,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':68,'multiline':False]['text':' ListSet','line_number':69,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':73,'multiline':False]['text':' as_repeat','line_number':74,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':84,'multiline':False]['text':' NonGreedyRepeatCases','line_number':85,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':115,'multiline':False]['text':' InvertibleCases','line_number':116,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':171,'multiline':False]['text':' Cases','line_number':172,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':316,'multiline':False]['text':' ActionableCases','line_number':317,'multiline':False]['text':' Only in sub-expressions with actions attached do we allow attribute assignements','line_number':326,'multiline':False]['text':' namespace detail','line_number':336,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':338,'multiline':False]['text':' Grammar','line_number':339,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':350,'multiline':False]['text':' INVALID_REGULAR_EXPRESSION','line_number':351,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':356,'multiline':False]['text':' is_valid_regex','line_number':357,'multiline':False]['text':' namespace boost::xpressive','line_number':363,'multiline':False]