['text':' Copyright (C) 2001-2003','line_number':1,'multiline':False]['text':' William E. Kempf','line_number':2,'multiline':False]['text':' Copyright (C) 2011-2013 Vicente J. Botet Escriba','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':5,'multiline':False]['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'#define BOOST_THREAD_DONT_PROVIDE_INTERRUPTIONS','line_number':16,'multiline':False]['text':' ATTRIBUTE_MAY_ALIAS','line_number':17,'multiline':False]['text':'#if defined(__GNUC__) && !defined(__INTEL_COMPILER)','line_number':19,'multiline':False]['text':' GCC since 3.3 and some other compilers have may_alias attribute that helps','line_number':22,'multiline':False]['text':' to alleviate optimizer issues with regard to violation of the strict aliasing rules.','line_number':23,'multiline':False]['text':' This compiler doesn't support Boost.Chrono','line_number':76,'multiline':False]['text':' This compiler doesn't support Boost.Move','line_number':85,'multiline':False]['text':' This compiler doesn't support Boost.Container Allocators files','line_number':91,'multiline':False]['text':' C++ features supported by VC++ 10 (aka 2010)','line_number':114,'multiline':False]['text':'/ BASIC_THREAD_ID','line_number':119,'multiline':False]['text':'/ RVALUE_REFERENCES_DONT_MATCH_FUNTION_PTR','line_number':125,'multiline':False]['text':'#if defined BOOST_NO_CXX11_RVALUE_REFERENCES || defined BOOST_MSVC','line_number':126,'multiline':False]['text':'#endif','line_number':128,'multiline':False]['text':' Default version','line_number':130,'multiline':False]['text':' CHRONO','line_number':139,'multiline':False]['text':' Uses Boost.Chrono by default if not stated the opposite defining BOOST_THREAD_DONT_USE_CHRONO','line_number':140,'multiline':False]['text':'#define BOOST_THREAD_DONT_USE_ATOMIC','line_number':149,'multiline':False]['text':' Andrey Semashev','line_number':153,'multiline':False]['text':'#elif ! defined BOOST_NO_CXX11_THREAD_LOCAL && ! defined BOOST_NO_THREAD_LOCAL && ! defined BOOST_THREAD_NO_UINT32_PSEUDO_ATOMIC','line_number':156,'multiline':False]['text':' http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2444.html#Appendix','line_number':157,'multiline':False]['text':' PROVIDE_PROMISE_LAZY','line_number':162,'multiline':False]['text':' PROVIDE_THREAD_EQ','line_number':168,'multiline':False]['text':' ONCE_CXX11','line_number':178,'multiline':False]['text':' fixme BOOST_THREAD_PROVIDES_ONCE_CXX11 doesn't works when thread.cpp is compiled BOOST_THREAD_VERSION 3','line_number':179,'multiline':False]['text':' THREAD_DESTRUCTOR_CALLS_TERMINATE_IF_JOINABLE','line_number':185,'multiline':False]['text':' THREAD_MOVE_ASSIGN_CALLS_TERMINATE_IF_JOINABLE','line_number':191,'multiline':False]['text':' PROVIDE_FUTURE','line_number':197,'multiline':False]['text':' FUTURE_CTOR_ALLOCATORS','line_number':203,'multiline':False]['text':' SHARED_MUTEX_UPWARDS_CONVERSIONS','line_number':209,'multiline':False]['text':' PROVIDE_EXPLICIT_LOCK_CONVERSION','line_number':215,'multiline':False]['text':' GENERIC_SHARED_MUTEX_ON_WIN','line_number':221,'multiline':False]['text':' USE_MOVE','line_number':227,'multiline':False]['text':' deprecated since version 4','line_number':235,'multiline':False]['text':' NESTED_LOCKS','line_number':238,'multiline':False]['text':' CONDITION','line_number':244,'multiline':False]['text':' USE_DATETIME','line_number':250,'multiline':False]['text':' SIGNATURE_PACKAGED_TASK','line_number':259,'multiline':False]['text':' VARIADIC_THREAD','line_number':265,'multiline':False]['text':'    ! defined(BOOST_NO_SFINAE_EXPR) &&','line_number':291,'multiline':False]['text':'    ! defined(BOOST_NO_CXX11_RVALUE_REFERENCES) &&','line_number':292,'multiline':False]['text':'    ! defined(BOOST_NO_CXX11_AUTO) &&','line_number':293,'multiline':False]['text':'    ! defined(BOOST_NO_CXX11_DECLTYPE) &&','line_number':294,'multiline':False]['text':'    ! defined(BOOST_NO_CXX11_DECLTYPE_N3276) &&','line_number':295,'multiline':False]['text':' MAKE_READY_AT_THREAD_EXIT','line_number':298,'multiline':False]['text':'#if defined BOOST_THREAD_PROVIDES_SIGNATURE_PACKAGED_TASK && defined(BOOST_THREAD_PROVIDES_VARIADIC_THREAD)','line_number':302,'multiline':False]['text':'#endif','line_number':304,'multiline':False]['text':' FUTURE_CONTINUATION','line_number':307,'multiline':False]['text':' FUTURE_INVALID_AFTER_GET','line_number':318,'multiline':False]['text':' NESTED_LOCKS','line_number':324,'multiline':False]['text':' CONDITION','line_number':330,'multiline':False]['text':' BOOST_THREAD_VERSION>=4','line_number':336,'multiline':False]['text':'#define BOOST_THREAD_FUTURE_BLOCKING','line_number':340,'multiline':False]['text':'#define BOOST_THREAD_FUTURE_BLOCKING','line_number':348,'multiline':False]['text':' INTERRUPTIONS','line_number':353,'multiline':False]['text':' CORRELATIONS','line_number':359,'multiline':False]['text':' EXPLICIT_LOCK_CONVERSION.','line_number':361,'multiline':False]['text':' BOOST_THREAD_PROVIDES_GENERIC_SHARED_MUTEX_ON_WIN is defined if BOOST_THREAD_PROVIDES_SHARED_MUTEX_UPWARDS_CONVERSIONS','line_number':368,'multiline':False]['text':' For C++11 call_once interface the compiler MUST support constexpr.','line_number':374,'multiline':False]['text':' Otherwise once_flag would be initialized during dynamic initialization stage, which is not thread-safe.','line_number':375,'multiline':False]['text':' BOOST_THREAD_PROVIDES_DEPRECATED_FEATURES_SINCE_V3_0_0 defined by default up to Boost 1.55','line_number':392,'multiline':False]['text':' BOOST_THREAD_DONT_PROVIDE_DEPRECATED_FEATURES_SINCE_V3_0_0 defined by default up to Boost 1.55','line_number':393,'multiline':False]['text':'#if ! defined BOOST_NO_CXX11_RVALUE_REFERENCES || defined BOOST_THREAD_USES_MOVE','line_number':403,'multiline':False]['text':' Condition always true/false','line_number':409,'multiline':False]['text':' Identifier declared but never used','line_number':410,'multiline':False]['text':' Parameter never used','line_number':411,'multiline':False]['text':' Unreachable code','line_number':412,'multiline':False]['text':' check for CLOCK_MONOTONIC','line_number':435,'multiline':False]['text':' provided for backwards compatibility, since this','line_number':452,'multiline':False]['text':' macro was used for several releases by mistake.','line_number':453,'multiline':False]['text':' compatibility with the rest of Boost's auto-linking code:','line_number':458,'multiline':False]['text':'Build dll','line_number':466,'multiline':False]['text':'Build lib','line_number':467,'multiline':False]['text':'Use dll','line_number':468,'multiline':False]['text':'Use lib','line_number':469,'multiline':False]['text':'Use default','line_number':470,'multiline':False]['text':'For compilers supporting auto-tss cleanup','line_number':475,'multiline':False]['text':'with Boost.Threads lib, use Boost.Threads lib','line_number':476,'multiline':False]['text':'For compilers not yet supporting auto-tss cleanup','line_number':479,'multiline':False]['text':'with Boost.Threads lib, use Boost.Threads dll','line_number':480,'multiline':False]['text':'Build dll','line_number':489,'multiline':False]['text':'#       define BOOST_THREAD_DECL __declspec(dllexport)','line_number':491,'multiline':False]['text':'Use dll','line_number':493,'multiline':False]['text':'#       define BOOST_THREAD_DECL __declspec(dllimport)','line_number':495,'multiline':False]['text':' BOOST_HAS_DECLSPEC','line_number':504,'multiline':False]['text':'','line_number':506,'multiline':False]['text':' Automatically link to the correct build variant where possible.','line_number':507,'multiline':False]['text':'','line_number':508,'multiline':False]['text':'','line_number':510,'multiline':False]['text':' Tell the autolink to link dynamically, this will get undef'ed by auto_link.hpp','line_number':511,'multiline':False]['text':' once it's done with it:','line_number':512,'multiline':False]['text':'','line_number':513,'multiline':False]['text':'','line_number':517,'multiline':False]['text':' Set the name of our library, this will get undef'ed by auto_link.hpp','line_number':518,'multiline':False]['text':' once it's done with it:','line_number':519,'multiline':False]['text':'','line_number':520,'multiline':False]['text':'','line_number':526,'multiline':False]['text':' If we're importing code from a dll, then tell auto_link.hpp about it:','line_number':527,'multiline':False]['text':'','line_number':528,'multiline':False]['text':' And include the header that does the work:','line_number':529,'multiline':False]['text':'','line_number':530,'multiline':False]['text':' auto-linking disabled','line_number':532,'multiline':False]['text':' BOOST_THREAD_CONFIG_WEK1032003_HPP','line_number':534,'multiline':False]['text':' Change Log:','line_number':536,'multiline':False]['text':'   22 Jan 05 Roland Schwarz (speedsnail)','line_number':537,'multiline':False]['text':'      Usage of BOOST_HAS_DECLSPEC macro.','line_number':538,'multiline':False]['text':'      Default again is static lib usage.','line_number':539,'multiline':False]['text':'      BOOST_DYN_LINK only defined when autolink included.','line_number':540,'multiline':False]