['text':'  boost/chrono/utility/ios_base_pword_ptr.hpp  ------------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2011 Vicente J. Botet Escriba','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':5,'multiline':False]['text':'  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'  See http://www.boost.org/libs/chrono for documentation.','line_number':8,'multiline':False]['text':'*
 *


 ','line_number':16,'multiline':True]['text':'*
       * xalloc key holder.
       ','line_number':28,'multiline':True]['text':'< the xalloc value associated to T.','line_number':34,'multiline':False]['text':'< whether the value has been initialized or not.','line_number':35,'multiline':False]['text':'*
     * xalloc key initialiazer.
     *
     * Declare a static variable of this type to ensure that the xalloc_key_holder<T> is initialized correctly.
     ','line_number':46,'multiline':True]['text':'*
     * @c ios_state_ptr is a smart pointer to a ios_base specific state.
     ','line_number':63,'multiline':True]['text':'*
       * The pointee type
       ','line_number':72,'multiline':True]['text':'*
       * Explicit constructor.
       * @param ios the ios
       * @Effects Constructs a @c ios_state_ptr by storing the associated @c ios.
       ','line_number':76,'multiline':True]['text':'*
       * Nothing to do as xalloc index can not be removed.
       ','line_number':86,'multiline':True]['text':'*
       * @Effects Allocates the index if not already done.
       * Registers the callback responsible of maintaining the state pointer coherency, if not already done.
       * Retrieves the associated ios pointer
       * @return the retrieved pointer statically casted to const.
       ','line_number':93,'multiline':True]['text':'*
       * @Effects Allocates the index if not already done.
       * Registers the callback responsible of maintaining the state pointer coherency, if not already done.
       * Retrieves the associated ios pointer
       * @return the retrieved pointer.
       ','line_number':109,'multiline':True]['text':'*
       * @Effects as if @c return get();
       * @return the retrieved pointer.
       ','line_number':125,'multiline':True]['text':'*
       * @Effects as if @c return get();
       * @return the retrieved pointer.
       ','line_number':133,'multiline':True]['text':'*
       * @Effects as if @c return *get();
       * @return a reference to the retrieved state.
       * @Remark The behavior is undefined if @c get()==0.
       ','line_number':142,'multiline':True]['text':'*
       * @Effects as if @c return *get();
       * @return a reference to the retrieved state.
       * @Remark The behavior is undefined if @c get()==0.
       ','line_number':151,'multiline':True]['text':'*
       * @Effects reset the current pointer after storing in a temporary variable the pointer to the current state.
       * @return the stored state pointer.
       ','line_number':161,'multiline':True]['text':'*
       *
       * @param new_ptr the new pointer.
       * @Effects deletes the current state and replace it with the new one.
       ','line_number':173,'multiline':True]['text':'*
         * Explicit conversion to bool.
         ','line_number':197,'multiline':True]['text':'*
       * Implicit conversion to the ios_base
       ','line_number':214,'multiline':True]['text':'*
       * Implicit conversion to the ios_base const
       ','line_number':221,'multiline':True]['text':' needs a mask registered','line_number':275,'multiline':False]['text':'static detail::xalloc_key_initializer<Final> xalloc_key_initializer_;','line_number':286,'multiline':False]['text':'template <typename Final, typename T>','line_number':289,'multiline':False]['text':'detail::xalloc_key_initializer<Final> ios_state_ptr<Final,T>::xalloc_key_initializer_;','line_number':290,'multiline':False]['text':'*
     * @c ios_state_not_null_ptr is a non null variant of @c ios_state_ptr.
     * @tparm T
     * @Requires @c T must be @c DefaultConstructible and @c HeapAllocatable
     ','line_number':293,'multiline':True]['text':'*
     * This class is useful to associate some flags to an std::ios_base.
     ','line_number':323,'multiline':True]['text':'*
       *
       * @param ios the associated std::ios_base.
       * @Postcondition <c>flags()==0</c>
       ','line_number':330,'multiline':True]['text':'*
       * @Returns The format control information.
       ','line_number':342,'multiline':True]['text':'*
       * @param v the new bit mask.
       * @Postcondition <c>v == flags()</c>.
       * @Returns The previous value of @c flags().
       ','line_number':350,'multiline':True]['text':'*
       * @param v the new value
       * @Effects: Sets @c v in @c flags().
       * @Returns: The previous value of @c flags().
       ','line_number':362,'multiline':True]['text':'*
       * @param mask the bit mask to clear.
       * @Effects: Clears @c mask in @c flags().
       ','line_number':374,'multiline':True]['text':'*
       *
       * @param v
       * @param mask
       * @Effects: Clears @c mask in @c flags(), sets <c>v & mask</c> in @c flags().
       * @Returns: The previous value of flags().
       ','line_number':383,'multiline':True]['text':'*
       * implicit conversion to the @c ios_base
       ','line_number':398,'multiline':True]['text':'*
       * implicit conversion to the @c ios_base const
       ','line_number':405,'multiline':True]['text':'static detail::xalloc_key_initializer<Final> xalloc_key_initializer_;','line_number':428,'multiline':False]['text':'template <typename Final>','line_number':431,'multiline':False]['text':'detail::xalloc_key_initializer<Final> ios_flags<Final>::xalloc_key_initializer_;','line_number':432,'multiline':False]['text':' namespace chrono','line_number':434,'multiline':False]['text':' namespace boost','line_number':435,'multiline':False]['text':' header','line_number':437,'multiline':False]