['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   channel_severity_filter.hpp
 * \author Andrey Semashev
 * \date   25.11.2012
 *
 * The header contains implementation of a minimal severity per channel filter.
 ','line_number':7,'multiline':True]['text':'! Internal typedef for type categorization','line_number':63,'multiline':False]['text':'! Function result type','line_number':67,'multiline':False]['text':'! Channel attribute value type','line_number':70,'multiline':False]['text':'! Channel fallback policy','line_number':72,'multiline':False]['text':'! Severity level attribute value type','line_number':74,'multiline':False]['text':'! Severity level fallback policy','line_number':76,'multiline':False]['text':'! Channel to severity mapping type','line_number':80,'multiline':False]['text':'! Attribute value visitor invoker for channel','line_number':87,'multiline':False]['text':'! Attribute value visitor invoker for severity level','line_number':89,'multiline':False]['text':'! Channel visitor','line_number':92,'multiline':False]['text':'! Severity level visitor','line_number':113,'multiline':False]['text':'! Channel attribute name','line_number':134,'multiline':False]['text':'! Severity level attribute name','line_number':136,'multiline':False]['text':'! Channel value visitor invoker','line_number':138,'multiline':False]['text':'! Severity level value visitor invoker','line_number':140,'multiline':False]['text':'! Channel to severity level mapping','line_number':143,'multiline':False]['text':'! Severity checking predicate','line_number':145,'multiline':False]['text':'! Default result','line_number':148,'multiline':False]['text':'! Initializing constructor','line_number':152,'multiline':False]['text':'! Adds a new element to the mapping','line_number':172,'multiline':False]['text':'! Sets the default result of the predicate','line_number':181,'multiline':False]['text':'! Invokation operator','line_number':187,'multiline':False]['text':'! Visits channel name','line_number':206,'multiline':False]['text':'! Visits severity level','line_number':217,'multiline':False]['text':'! Self type','line_number':238,'multiline':False]['text':'! Terminal type','line_number':242,'multiline':False]['text':'! Base actor type','line_number':244,'multiline':False]['text':'! Channel attribute value type','line_number':247,'multiline':False]['text':'! Channel fallback policy','line_number':249,'multiline':False]['text':'! Severity level attribute value type','line_number':251,'multiline':False]['text':'! Severity level fallback policy','line_number':253,'multiline':False]['text':'! An auxiliary pseudo-reference to implement insertion through subscript operator','line_number':257,'multiline':False]['text':'! Initializing constructor','line_number':276,'multiline':False]['text':'! Copy constructor','line_number':280,'multiline':False]['text':'! Sets the default function result','line_number':285,'multiline':False]['text':'! Adds a new element to the mapping','line_number':292,'multiline':False]['text':'! Alternative interface for adding a new element to the mapping','line_number':299,'multiline':False]['text':'!
 * The function generates a filtering predicate that checks the severity levels of log records in different channels. The predicate will return \c true
 * if the record severity level is not less than the threshold for the channel the record belongs to.
 ','line_number':306,'multiline':True]['text':'! \overload','line_number':320,'multiline':False]['text':'! \overload','line_number':331,'multiline':False]['text':'! \overload','line_number':342,'multiline':False]['text':'! \overload','line_number':353,'multiline':False]['text':'! \overload','line_number':364,'multiline':False]['text':'! \overload','line_number':375,'multiline':False]['text':'! \overload','line_number':387,'multiline':False]['text':'! \overload','line_number':398,'multiline':False]['text':'! \overload','line_number':409,'multiline':False]['text':'! \overload','line_number':420,'multiline':False]['text':'! \overload','line_number':431,'multiline':False]['text':'! \overload','line_number':442,'multiline':False]['text':'! \overload','line_number':453,'multiline':False]['text':'! \overload','line_number':465,'multiline':False]['text':'! \overload','line_number':476,'multiline':False]['text':'! \overload','line_number':487,'multiline':False]['text':'! \overload','line_number':498,'multiline':False]['text':'! \overload','line_number':509,'multiline':False]['text':'! \overload','line_number':520,'multiline':False]['text':'! \overload','line_number':531,'multiline':False]['text':' namespace expressions','line_number':542,'multiline':False]['text':' namespace log','line_number':544,'multiline':False]['text':' namespace result_of','line_number':566,'multiline':False]['text':' namespace phoenix','line_number':568,'multiline':False]['text':' namespace boost','line_number':572,'multiline':False]['text':' BOOST_LOG_EXPRESSIONS_PREDICATES_CHANNEL_SEVERITY_FILTER_HPP_INCLUDED_','line_number':576,'multiline':False]