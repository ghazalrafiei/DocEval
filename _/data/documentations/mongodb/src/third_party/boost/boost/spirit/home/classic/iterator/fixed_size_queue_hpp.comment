['text':'=============================================================================
    Copyright (c) 2001, Daniel C. Nuffer
    Copyright (c) 2003, Hartmut Kaiser
    http://spirit.sourceforge.net/

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':' for BOOST_SPIRIT_ASSERT','line_number':17,'multiline':False]['text':' FIXES for broken compilers','line_number':19,'multiline':False]['text':'','line_number':25,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':27,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':32,'multiline':False]['text':' BOOST_ITERATOR_ADAPTORS_VERSION < 0x0200','line_number':38,'multiline':False]['text':' Undefined behaviour if the iterators come from different','line_number':111,'multiline':False]['text':'  containers','line_number':112,'multiline':False]['text':' Notice that we don't care values of n that can','line_number':128,'multiline':False]['text':'  wrap around more than one time, since it would','line_number':129,'multiline':False]['text':'  be undefined behaviour anyway (going outside','line_number':130,'multiline':False]['text':'  the begin/end range). Negative wrapping is a bit','line_number':131,'multiline':False]['text':'  cumbersome because we don't want to case p.pos','line_number':132,'multiline':False]['text':'  to signed.','line_number':133,'multiline':False]['text':' BOOST_ITERATOR_ADAPTORS_VERSION < 0x0200','line_number':154,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':156,'multiline':False]['text':' namespace impl ','line_number':157,'multiline':True]['text':' The const_cast here is just to avoid to have two different','line_number':170,'multiline':False]['text':'  position structures for the const and non-const case.','line_number':171,'multiline':False]['text':' The const semantic is guaranteed by the iterator itself','line_number':172,'multiline':False]['text':' Declare the iterators','line_number':179,'multiline':False]['text':' Redefine the template parameters to avoid using partial template','line_number':244,'multiline':False]['text':'  specialization on the iterator policy to extract N.','line_number':245,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':395,'multiline':False]['text':' namespace BOOST_SPIRIT_CLASSIC_NS','line_number':398,'multiline':False]