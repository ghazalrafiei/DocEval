['text':' Copyright (c) 2004-2005 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the 
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 ','line_number':4,'multiline':True]['text':' Define versions for serialization compatibility','line_number':18,'multiline':False]['text':' alows the unit tests to make an older version to check compatibility','line_number':19,'multiline':False]['text':' A macro to split serialize functions into save & load functions.','line_number':36,'multiline':False]['text':' It is here to avoid dependency on Boost.Serialization just for the','line_number':37,'multiline':False]['text':' BOOST_SERIALIZATION_SPLIT_FREE macro','line_number':38,'multiline':False]['text':'** time_duration **','line_number':54,'multiline':True]['text':'! Function to save posix_time::time_duration objects using serialization lib','line_number':56,'multiline':False]['text':'! time_duration objects are broken down into 4 parts for serialization:
 * types are hour_type, min_type, sec_type, and fractional_seconds_type
 * as defined in the time_duration class
 ','line_number':57,'multiline':True]['text':' serialize a bool so we know how to read this back in later','line_number':79,'multiline':False]['text':' Write support for earlier versions allows for upgrade compatibility testing','line_number':87,'multiline':False]['text':' See load comments for version information','line_number':88,'multiline':False]['text':'! Function to load posix_time::time_duration objects using serialization lib','line_number':97,'multiline':False]['text':'! time_duration objects are broken down into 4 parts for serialization:
 * types are hour_type, min_type, sec_type, and fractional_seconds_type
 * as defined in the time_duration class
 ','line_number':98,'multiline':True]['text':' Version "0"   (Boost 1.65.1 or earlier, which used int32_t for day/hour/minute/second and','line_number':130,'multiline':False]['text':'                therefore suffered from the year 2038 issue.)','line_number':131,'multiline':False]['text':' Version "0.5" (Boost 1.66.0 changed to std::time_t but did not increase the version;','line_number':132,'multiline':False]['text':'                it was missed in the original change, all code reviews, and there were no','line_number':133,'multiline':False]['text':'                static assertions to protect the code; further std::time_t can be 32-bit','line_number':134,'multiline':False]['text':'                or 64-bit so it reduced portability.  This makes 1.66.0 hard to handle...)','line_number':135,'multiline':False]['text':' Version "1"   (Boost 1.67.0 or later uses int64_t and is properly versioned)','line_number':136,'multiline':False]['text':' If the size of any of these items changes, a new version is needed.','line_number':138,'multiline':False]['text':' no load_construct_data function provided as time_duration provides a','line_number':152,'multiline':False]['text':' default constructor','line_number':153,'multiline':False]['text':'** ptime **','line_number':155,'multiline':True]['text':'! Function to save posix_time::ptime objects using serialization lib','line_number':157,'multiline':False]['text':'! ptime objects are broken down into 2 parts for serialization:
 * a date object and a time_duration onject
 ','line_number':158,'multiline':True]['text':'version','line_number':164,'multiline':True]['text':' from_iso_string does not include fractional seconds','line_number':166,'multiline':False]['text':' therefore date and time_duration are used','line_number':167,'multiline':False]['text':'! Function to load posix_time::ptime objects using serialization lib','line_number':176,'multiline':False]['text':'! ptime objects are broken down into 2 parts for serialization:
 * a date object and a time_duration onject
 ','line_number':177,'multiline':True]['text':'version','line_number':183,'multiline':True]['text':' from_iso_string does not include fractional seconds','line_number':185,'multiline':False]['text':' therefore date and time_duration are used','line_number':186,'multiline':False]['text':'!override needed b/c no default constructor','line_number':200,'multiline':False]['text':'ar','line_number':202,'multiline':True]['text':'file_version','line_number':204,'multiline':True]['text':' retrieve data from archive required to construct new ','line_number':206,'multiline':False]['text':' invoke inplace constructor to initialize instance of date','line_number':207,'multiline':False]['text':'** time_period **','line_number':211,'multiline':True]['text':'! Function to save posix_time::time_period objects using serialization lib','line_number':213,'multiline':False]['text':'! time_period objects are broken down into 2 parts for serialization:
 * a begining ptime object and an ending ptime object
 ','line_number':214,'multiline':True]['text':'version','line_number':220,'multiline':True]['text':'! Function to load posix_time::time_period objects using serialization lib','line_number':228,'multiline':False]['text':'! time_period objects are broken down into 2 parts for serialization:
 * a begining ptime object and an ending ptime object
 ','line_number':229,'multiline':True]['text':'version','line_number':235,'multiline':True]['text':'!override needed b/c no default constructor','line_number':246,'multiline':False]['text':'ar','line_number':248,'multiline':True]['text':'file_version','line_number':250,'multiline':True]['text':' namespace serialization','line_number':259,'multiline':False]['text':' namespace boost','line_number':260,'multiline':False]