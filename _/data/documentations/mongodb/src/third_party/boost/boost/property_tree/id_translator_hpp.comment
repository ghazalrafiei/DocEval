['text':' ----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':' Copyright (C) 2009 Sebastian Redl','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. ','line_number':4,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at ','line_number':5,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' For more information, see www.boost.org','line_number':8,'multiline':False]['text':' ----------------------------------------------------------------------------','line_number':9,'multiline':False]['text':'/ Simple implementation of the Translator concept. It does no translation.','line_number':22,'multiline':False]['text':' This is the default translator whenever you get two equal types.','line_number':33,'multiline':False]['text':' A more specific specialization for std::basic_string. Otherwise,','line_number':40,'multiline':False]['text':' stream_translator's specialization wins.','line_number':41,'multiline':False]