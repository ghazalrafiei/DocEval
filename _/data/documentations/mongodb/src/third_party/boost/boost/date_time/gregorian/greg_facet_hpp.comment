['text':' Copyright (c) 2002,2003 CrystalClear Software, Inc.
 * Use, modification and distribution is subject to the 
 * Boost Software License, Version 1.0. (See accompanying
 * file LICENSE_1_0.txt or http://www.boost.org/LICENSE_1_0.txt)
 * Author: Jeff Garland, Bart Garst
 * $Date$
 ','line_number':4,'multiline':True]['text':' sets BOOST_DATE_TIME_NO_LOCALE','line_number':14,'multiline':False]['text':'This file is basically commented out if locales are not supported','line_number':18,'multiline':False]['text':'! Configuration of the output facet template','line_number':30,'multiline':False]['text':'! Create the base facet type for gregorian::date','line_number':40,'multiline':False]['text':'! ostream operator for gregorian::date','line_number':43,'multiline':False]['text':'! Uses the date facet to determine various output parameters including:
   *  - string values for the month (eg: Jan, Feb, Mar) (default: English)
   *  - string values for special values (eg: not-a-date-time) (default: English)
   *  - selection of long, short strings, or numerical month representation (default: short string)
   *  - month day year order (default yyyy-mmm-dd)
   ','line_number':44,'multiline':True]['text':'! operator<< for gregorian::greg_month typically streaming: Jan, Feb, Mar...','line_number':61,'multiline':False]['text':'! Uses the date facet to determine output string as well as selection of long or short strings.
   *  Default if no facet is installed is to output a 2 wide numeric value for the month
   *  eg: 01 == Jan, 02 == Feb, ... 12 == Dec.
   ','line_number':62,'multiline':True]['text':' default to numeric','line_number':79,'multiline':False]['text':'! operator<< for gregorian::greg_weekday typically streaming: Sun, Mon, Tue, ...','line_number':87,'multiline':False]['text':'! Uses the date facet to determine output string as well as selection of long or short string.
   *  Default if no facet is installed is to output a 3 char english string for the
   *  day of the week.
   ','line_number':88,'multiline':True]['text':'default to short English string eg: Sun, Mon, Tue, Wed...','line_number':104,'multiline':False]['text':'! operator<< for gregorian::date_period typical output: [2002-Jan-01/2002-Jan-31]','line_number':111,'multiline':False]['text':'! Uses the date facet to determine output string as well as selection of long 
   *  or short string fr dates.
   *  Default if no facet is installed is to output a 3 char english string for the
   *  day of the week.
   ','line_number':112,'multiline':True]['text':'TODO: facet or manipulator for periods?','line_number':122,'multiline':False]['text':'TODO: facet or manipulator for periods?','line_number':124,'multiline':False]['text':'os << dd.days();','line_number':135,'multiline':False]['text':'! operator<< for gregorian::partial_date. Output: "Jan 1"','line_number':140,'multiline':False]['text':'! operator<< for gregorian::nth_kday_of_month. Output: "first Mon of Jun"','line_number':152,'multiline':False]['text':'! operator<< for gregorian::first_kday_of_month. Output: "first Mon of Jun"','line_number':165,'multiline':False]['text':'! operator<< for gregorian::last_kday_of_month. Output: "last Mon of Jun"','line_number':177,'multiline':False]['text':'! operator<< for gregorian::first_kday_after. Output: "first Mon after"','line_number':189,'multiline':False]['text':'! operator<< for gregorian::first_kday_before. Output: "first Mon before"','line_number':200,'multiline':False]['text':' USE_DATE_TIME_PRE_1_33_FACET_IO','line_number':210,'multiline':False]['text':'*************** Input Streaming *****************','line_number':211,'multiline':True]['text':'! operator>> for gregorian::date','line_number':214,'multiline':False]['text':' BOOST_NO_STD_ITERATOR_TRAITS','line_number':223,'multiline':False]['text':'! operator>> for gregorian::date_duration','line_number':225,'multiline':False]['text':'! operator>> for gregorian::date_period','line_number':237,'multiline':False]['text':'! generates a locale with the set of gregorian name-strings of type char*','line_number':249,'multiline':False]['text':'! Returns a pointer to a facet with a default set of names (English)','line_number':252,'multiline':False]['text':' Necessary in the event an exception is thrown from op>> for 
   * weekday or month. See comments in those functions for more info ','line_number':253,'multiline':True]['text':'! generates a locale with the set of gregorian name-strings of type wchar_t*','line_number':258,'multiline':False]['text':'! Returns a pointer to a facet with a default set of names (English)','line_number':260,'multiline':False]['text':' Necessary in the event an exception is thrown from op>> for 
   * weekday or month. See comments in those functions for more info ','line_number':261,'multiline':True]['text':' BOOST_NO_STD_WSTRING','line_number':264,'multiline':False]['text':'! operator>> for gregorian::greg_month - throws exception if invalid month given','line_number':266,'multiline':False]['text':' greg_month spans 1..12, so max returns the array size,','line_number':288,'multiline':False]['text':' which is needed by find_match','line_number':289,'multiline':False]['text':' bad_cast will be thrown if the desired facet is not accessible
     * so we can generate the facet. This has the drawback of using english
     * names as a default. ','line_number':291,'multiline':True]['text':' greg_month spans 1..12, so max returns the array size,','line_number':309,'multiline':False]['text':' which is needed by find_match','line_number':310,'multiline':False]['text':' months numbered 1-12','line_number':313,'multiline':False]['text':'! operator>> for gregorian::greg_weekday  - throws exception if invalid weekday given','line_number':319,'multiline':False]['text':' greg_weekday spans 0..6, so increment is needed','line_number':340,'multiline':False]['text':' to form the array size which is needed by find_match','line_number':341,'multiline':False]['text':' bad_cast will be thrown if the desired facet is not accessible
     * so we can generate the facet. This has the drawback of using english
     * names as a default. ','line_number':343,'multiline':True]['text':' greg_weekday spans 0..6, so increment is needed','line_number':361,'multiline':False]['text':' to form the array size which is needed by find_match','line_number':362,'multiline':False]['text':' weekdays numbered 0-6','line_number':365,'multiline':False]['text':'namespace gregorian','line_number':369,'multiline':False]