['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2014. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'! \file','line_number':22,'multiline':False]['text':'! This header file forward declares the following containers:','line_number':23,'multiline':False]['text':'!   - boost::container::vector','line_number':24,'multiline':False]['text':'!   - boost::container::stable_vector','line_number':25,'multiline':False]['text':'!   - boost::container::static_vector','line_number':26,'multiline':False]['text':'!   - boost::container::small_vector_base','line_number':27,'multiline':False]['text':'!   - boost::container::small_vector','line_number':28,'multiline':False]['text':'!   - boost::container::devector','line_number':29,'multiline':False]['text':'!   - boost::container::slist','line_number':30,'multiline':False]['text':'!   - boost::container::list','line_number':31,'multiline':False]['text':'!   - boost::container::set','line_number':32,'multiline':False]['text':'!   - boost::container::multiset','line_number':33,'multiline':False]['text':'!   - boost::container::map','line_number':34,'multiline':False]['text':'!   - boost::container::multimap','line_number':35,'multiline':False]['text':'!   - boost::container::flat_set','line_number':36,'multiline':False]['text':'!   - boost::container::flat_multiset','line_number':37,'multiline':False]['text':'!   - boost::container::flat_map','line_number':38,'multiline':False]['text':'!   - boost::container::flat_multimap','line_number':39,'multiline':False]['text':'!   - boost::container::basic_string','line_number':40,'multiline':False]['text':'!   - boost::container::string','line_number':41,'multiline':False]['text':'!   - boost::container::wstring','line_number':42,'multiline':False]['text':'!','line_number':43,'multiline':False]['text':'! Forward declares the following allocators:','line_number':44,'multiline':False]['text':'!   - boost::container::allocator','line_number':45,'multiline':False]['text':'!   - boost::container::node_allocator','line_number':46,'multiline':False]['text':'!   - boost::container::adaptive_pool','line_number':47,'multiline':False]['text':'!','line_number':48,'multiline':False]['text':'! Forward declares the following polymorphic resource classes:','line_number':49,'multiline':False]['text':'!   - boost::container::pmr::memory_resource','line_number':50,'multiline':False]['text':'!   - boost::container::pmr::polymorphic_allocator','line_number':51,'multiline':False]['text':'!   - boost::container::pmr::monotonic_buffer_resource','line_number':52,'multiline':False]['text':'!   - boost::container::pmr::pool_options','line_number':53,'multiline':False]['text':'!   - boost::container::pmr::unsynchronized_pool_resource','line_number':54,'multiline':False]['text':'!   - boost::container::pmr::synchronized_pool_resource','line_number':55,'multiline':False]['text':'!','line_number':56,'multiline':False]['text':'! And finally it defines the following types','line_number':57,'multiline':False]['text':'Std forward declarations','line_number':61,'multiline':False]['text':'Create namespace to avoid compilation errors','line_number':69,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED','line_number':84,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':86,'multiline':False]['text':'                             Containers','line_number':87,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':88,'multiline':False]['text':'! Alias templates for small_flat_[multi]{set|map} using small_vector as container','line_number':191,'multiline':False]['text':' #ifndef BOOST_NO_CXX11_TEMPLATE_ALIASES','line_number':223,'multiline':False]['text':'! A portable metafunction to obtain a small_flat_set','line_number':226,'multiline':False]['text':'! A portable metafunction to obtain a small_flat_multiset','line_number':237,'multiline':False]['text':'! A portable metafunction to obtain a small_flat_map','line_number':248,'multiline':False]['text':'! A portable metafunction to obtain a small_flat_multimap','line_number':260,'multiline':False]['text':'namespace pmr {','line_number':324,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED','line_number':326,'multiline':False]['text':'! Type used to tag that the input range is','line_number':328,'multiline':False]['text':'! guaranteed to be ordered','line_number':329,'multiline':False]['text':'! Value used to tag that the input range is','line_number':333,'multiline':False]['text':'! guaranteed to be ordered','line_number':334,'multiline':False]['text':'! Type used to tag that the input range is','line_number':337,'multiline':False]['text':'! guaranteed to be ordered and unique','line_number':338,'multiline':False]['text':'! Value used to tag that the input range is','line_number':343,'multiline':False]['text':'! guaranteed to be ordered and unique','line_number':344,'multiline':False]['text':'! Type used to tag that the inserted values','line_number':347,'multiline':False]['text':'! should be default initialized','line_number':348,'multiline':False]['text':'! Value used to tag that the inserted values','line_number':352,'multiline':False]['text':'! should be default initialized','line_number':353,'multiline':False]['text':'! Type used to tag that the inserted values','line_number':357,'multiline':False]['text':'! should be value initialized','line_number':358,'multiline':False]['text':'! Value used to tag that the inserted values','line_number':362,'multiline':False]['text':'! should be value initialized','line_number':363,'multiline':False]['text':'Otherwise, gcc issues a warning of previously defined','line_number':368,'multiline':False]['text':'anonymous_instance and unique_instance','line_number':369,'multiline':False]['text':'detail_really_deep_namespace {','line_number':380,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED','line_number':384,'multiline':False]['text':'namespace boost { namespace container {','line_number':386,'multiline':False]['text':'#ifndef BOOST_CONTAINER_CONTAINER_FWD_HPP','line_number':388,'multiline':False]