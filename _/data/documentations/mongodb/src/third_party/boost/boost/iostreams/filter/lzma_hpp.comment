['text':' (C) Copyright Milan Svoboda 2008.','line_number':1,'multiline':False]['text':' Originally developed under the fusecompress project.','line_number':2,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':3,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)','line_number':4,'multiline':False]['text':' See http://www.boost.org/libs/iostreams for documentation.','line_number':6,'multiline':False]['text':' Note: custom allocators are not supported on VC6, since that compiler','line_number':8,'multiline':False]['text':' had trouble finding the function lzma_base::do_init.','line_number':9,'multiline':False]['text':' streamsize.','line_number':19,'multiline':False]['text':' allocator, bad_alloc.','line_number':20,'multiline':False]['text':' MSVC, STATIC_CONSTANT, DEDUCED_TYPENAME, DINKUM.','line_number':22,'multiline':False]['text':' buffer size.','line_number':24,'multiline':False]['text':' failure, streamsize.','line_number':28,'multiline':False]['text':' Must come last.','line_number':33,'multiline':False]['text':' Dependencies not exported.','line_number':36,'multiline':False]['text':' Compression levels','line_number':47,'multiline':False]['text':' Status codes','line_number':54,'multiline':False]['text':' Flush codes','line_number':65,'multiline':False]['text':' Code for current OS','line_number':72,'multiline':False]['text':' Null pointer constant.','line_number':74,'multiline':False]['text':' Default values','line_number':78,'multiline':False]['text':' End namespace lzma.','line_number':80,'multiline':False]['text':'','line_number':82,'multiline':False]['text':' Class name: lzma_params.','line_number':83,'multiline':False]['text':' Description: Encapsulates the parameters passed to lzmadec_init','line_number':84,'multiline':False]['text':'      to customize compression and decompression.','line_number':85,'multiline':False]['text':'','line_number':86,'multiline':False]['text':' Non-explicit constructor.','line_number':89,'multiline':False]['text':'','line_number':98,'multiline':False]['text':' Class name: lzma_error.','line_number':99,'multiline':False]['text':' Description: Subclass of std::ios::failure thrown to indicate','line_number':100,'multiline':False]['text':'     lzma errors other than out-of-memory conditions.','line_number':101,'multiline':False]['text':'','line_number':102,'multiline':False]['text':' VC6 workaround (C2516)','line_number':128,'multiline':False]['text':' Actual type: lzma_stream*.','line_number':176,'multiline':False]['text':'','line_number':181,'multiline':False]['text':' Template name: lzma_compressor_impl','line_number':182,'multiline':False]['text':' Description: Model of C-Style Filter implementing compression by','line_number':183,'multiline':False]['text':'      delegating to the lzma function deflate.','line_number':184,'multiline':False]['text':'','line_number':185,'multiline':False]['text':'','line_number':196,'multiline':False]['text':' Template name: lzma_compressor_impl','line_number':197,'multiline':False]['text':' Description: Model of C-Style Filte implementing decompression by','line_number':198,'multiline':False]['text':'      delegating to the lzma function inflate.','line_number':199,'multiline':False]['text':'','line_number':200,'multiline':False]['text':' End namespace detail.','line_number':212,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' Template name: lzma_compressor','line_number':215,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':216,'multiline':False]['text':'      compression using lzma.','line_number':217,'multiline':False]['text':'','line_number':218,'multiline':False]['text':'','line_number':236,'multiline':False]['text':' Template name: lzma_decompressor','line_number':237,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':238,'multiline':False]['text':'      decompression using lzma.','line_number':239,'multiline':False]['text':'','line_number':240,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':259,'multiline':False]['text':'------------------Implementation of lzma_allocator--------------------------//','line_number':261,'multiline':False]['text':'------------------Implementation of lzma_compressor_impl--------------------//','line_number':289,'multiline':False]['text':'------------------Implementation of lzma_decompressor_impl------------------//','line_number':314,'multiline':False]['text':' End namespace detail.','line_number':346,'multiline':False]['text':'------------------Implementation of lzma_compressor-----------------------//','line_number':348,'multiline':False]['text':'------------------Implementation of lzma_decompressor-----------------------//','line_number':355,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':367,'multiline':False]['text':' End namespaces iostreams, boost.','line_number':369,'multiline':False]['text':' Pops abi_suffix.hpp pragmas.','line_number':371,'multiline':False]['text':' #ifndef BOOST_IOSTREAMS_LZMA_HPP_INCLUDED','line_number':376,'multiline':False]