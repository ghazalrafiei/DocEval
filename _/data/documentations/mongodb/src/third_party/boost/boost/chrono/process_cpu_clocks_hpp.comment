['text':'  boost/chrono/process_cpu_clocks.hpp  -----------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2009-2011 Vicente J. Botet Escriba','line_number':3,'multiline':False]['text':'  Copyright (c) Microsoft Corporation 2014','line_number':4,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':7,'multiline':False]['text':'  See http://www.boost.org/libs/system for documentation.','line_number':9,'multiline':False]['text':' must be the last #include','line_number':28,'multiline':False]['text':'typedef process_real_cpu_clock::rep rep;','line_number':83,'multiline':False]['text':' real (i.e wall clock) time','line_number':112,'multiline':False]['text':' user cpu time','line_number':113,'multiline':False]['text':' system cpu time','line_number':114,'multiline':False]['text':' mandatory '{'','line_number':196,'multiline':False]['text':' Duration <','line_number':271,'multiline':False]['text':' namespace chrono','line_number':455,'multiline':False]['text':' namespace boost','line_number':456,'multiline':False]['text':'~ static Res epsilon() throw() { return 0; }','line_number':493,'multiline':False]['text':'~ static Res round_error() throw() { return 0; }','line_number':494,'multiline':False]['text':'~ static const int min_exponent = 0;','line_number':495,'multiline':False]['text':'~ static const int min_exponent10 = 0;','line_number':496,'multiline':False]['text':'~ static const int max_exponent = 0;','line_number':497,'multiline':False]['text':'~ static const int max_exponent10 = 0;','line_number':498,'multiline':False]['text':'~ static const bool has_infinity = false;','line_number':499,'multiline':False]['text':'~ static const bool has_quiet_NaN = false;','line_number':500,'multiline':False]['text':'~ static const bool has_signaling_NaN = false;','line_number':501,'multiline':False]['text':'~ static const float_denorm_style has_denorm = denorm_absent;','line_number':502,'multiline':False]['text':'~ static const bool has_denorm_loss = false;','line_number':503,'multiline':False]['text':'~ static Res infinity() throw() { return 0; }','line_number':504,'multiline':False]['text':'~ static Res quiet_NaN() throw() { return 0; }','line_number':505,'multiline':False]['text':'~ static Res signaling_NaN() throw() { return 0; }','line_number':506,'multiline':False]['text':'~ static Res denorm_min() throw() { return 0; }','line_number':507,'multiline':False]['text':'~ static const bool is_iec559 = false;','line_number':508,'multiline':False]['text':'~ static const bool is_bounded = true;','line_number':509,'multiline':False]['text':'~ static const bool is_modulo = false;','line_number':510,'multiline':False]['text':'~ static const bool traps = false;','line_number':511,'multiline':False]['text':'~ static const bool tinyness_before = false;','line_number':512,'multiline':False]['text':'~ static const float_round_style round_style = round_toward_zero;','line_number':513,'multiline':False]['text':' pops abi_prefix.hpp pragmas','line_number':519,'multiline':False]['text':' BOOST_CHRONO_PROCESS_CPU_CLOCKS_HPP','line_number':525,'multiline':False]