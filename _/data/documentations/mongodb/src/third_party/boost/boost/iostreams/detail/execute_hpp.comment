['text':'
 * Distributed under the Boost Software License, Version 1.0.(See accompanying 
 * file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)
 * 
 * See http://www.boost.org/libs/iostreams for documentation.

 * File:        boost/iostreams/detail/execute.hpp
 * Date:        Thu Dec 06 13:21:54 MST 2007
 * Copyright:   2007-2008 CodeRage, LLC
 * Author:      Jonathan Turkanis
 * Contact:     turkanis at coderage dot com

 * Defines the overloaded function template 
 * boost::iostreams::detail::execute_all() and the function template 
 * boost::iostreams::detail::execute_foreach().
 *
 * execute_all() invokes a primary operation and performs a sequence of cleanup 
 * operations, returning the result of the primary operation if no exceptions
 * are thrown. If one of the operations throws an exception, performs the
 * remaining operations and rethrows the initial exception.
 *
 * execute_foreach() is a variant of std::foreach which invokes a function 
 * object for each item in a sequence, catching all execptions and rethrowing
 * the first caught exception after the function object has been invoked on each
 * item.
 ','line_number':1,'multiline':True]['text':' MAX_EXECUTE_ARITY','line_number':37,'multiline':False]['text':' Helper for class template execute_traits.','line_number':48,'multiline':False]['text':' Specialization for void return. For simplicity, execute() returns int ','line_number':56,'multiline':False]['text':' for operations returning void. This could be avoided with additional work.','line_number':57,'multiline':False]['text':' Deduces the result type of Op and allows uniform treatment of operations ','line_number':65,'multiline':False]['text':' returning void and non-void.','line_number':66,'multiline':False]['text':' VC6.5 workaround.','line_number':68,'multiline':False]['text':' Implementation with no cleanup operations.','line_number':80,'multiline':False]['text':' Implementation with one or more cleanup operations','line_number':88,'multiline':False]['text':'','line_number':109,'multiline':True]['text':' End namespaces detail, iostreams, boost.','line_number':133,'multiline':False]['text':' #ifndef BOOST_IOSTREAMS_DETAIL_EXECUTE_HPP_INCLUDED','line_number':135,'multiline':False]