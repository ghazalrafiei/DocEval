['text':'','line_number':1,'multiline':False]['text':' detail/posix_serial_port_service.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':' Copyright (c) 2008 Rep Invariant Systems, Inc. (info@repinvariant.com)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':8,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':17,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)','line_number':32,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)','line_number':34,'multiline':False]['text':' Extend a descriptor_service to provide serial port support.','line_number':42,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)','line_number':49,'multiline':False]['text':' defined(BOOST_ASIO_HAS_IO_URING_AS_DEFAULT)','line_number':51,'multiline':False]['text':' The native type of a serial port.','line_number':53,'multiline':False]['text':' The implementation type of the serial port.','line_number':56,'multiline':False]['text':' Destroy all user-defined handler objects owned by the service.','line_number':61,'multiline':False]['text':' Construct a new serial port implementation.','line_number':64,'multiline':False]['text':' Move-construct a new serial port implementation.','line_number':70,'multiline':False]['text':' Move-assign from another serial port implementation.','line_number':77,'multiline':False]['text':' Destroy a serial port implementation.','line_number':86,'multiline':False]['text':' Open the serial port using the specified device name.','line_number':92,'multiline':False]['text':' Assign a native descriptor to a serial port implementation.','line_number':96,'multiline':False]['text':' Determine whether the serial port is open.','line_number':104,'multiline':False]['text':' Destroy a serial port implementation.','line_number':110,'multiline':False]['text':' Get the native serial port representation.','line_number':117,'multiline':False]['text':' Cancel all operations associated with the serial port.','line_number':123,'multiline':False]['text':' Set an option on the serial port.','line_number':130,'multiline':False]['text':' Get an option from the serial port.','line_number':140,'multiline':False]['text':' Send a break sequence to the serial port.','line_number':150,'multiline':False]['text':' Write the given data. Returns the number of bytes sent.','line_number':159,'multiline':False]['text':' Start an asynchronous write. The data being written must be valid for the','line_number':167,'multiline':False]['text':' lifetime of the asynchronous operation.','line_number':168,'multiline':False]['text':' Read some data. Returns the number of bytes received.','line_number':177,'multiline':False]['text':' Start an asynchronous read. The buffer for the data being received must be','line_number':185,'multiline':False]['text':' valid for the lifetime of the asynchronous operation.','line_number':186,'multiline':False]['text':' Function pointer type for storing a serial port option.','line_number':197,'multiline':False]['text':' Helper function template to store a serial port option.','line_number':201,'multiline':False]['text':' Helper function to set a serial port option.','line_number':210,'multiline':False]['text':' Function pointer type for loading a serial port option.','line_number':215,'multiline':False]['text':' Helper function template to load a serial port option.','line_number':219,'multiline':False]['text':' Helper function to get a serial port option.','line_number':228,'multiline':False]['text':' The implementation used for initiating asynchronous operations.','line_number':233,'multiline':False]['text':' namespace detail','line_number':237,'multiline':False]['text':' namespace asio','line_number':238,'multiline':False]['text':' namespace boost','line_number':239,'multiline':False]['text':' defined(BOOST_ASIO_HEADER_ONLY)','line_number':245,'multiline':False]['text':' !defined(BOOST_ASIO_WINDOWS) && !defined(__CYGWIN__)','line_number':247,'multiline':False]['text':' defined(BOOST_ASIO_HAS_SERIAL_PORT)','line_number':248,'multiline':False]['text':' BOOST_ASIO_DETAIL_POSIX_SERIAL_PORT_SERVICE_HPP','line_number':250,'multiline':False]