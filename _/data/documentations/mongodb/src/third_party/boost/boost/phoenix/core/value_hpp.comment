['text':'==============================================================================
    Copyright (c) 2001-2010 Joel de Guzman
    Copyright (c) 2010 Thomas Heller

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]['text':'//////////////////////////////////////////////////////////////////////////','line_number':20,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' values','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':'      function for evaluating values, e.g. val(123)','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////////','line_number':26,'multiline':False]['text':'
            static const type make(T & t)
            {
                typename value<T>::type const e = {{t}};
                return e;
            }
           ','line_number':37,'multiline':True]['text':' Identifies this Expr as a value.','line_number':55,'multiline':False]['text':' I think this is wrong. It is identifying all actors as values.','line_number':56,'multiline':False]['text':' Yes, it is giving false positives and needs a rethink.','line_number':57,'multiline':False]['text':' And this gives no positives.','line_number':58,'multiline':False]['text':'template <typename T>','line_number':59,'multiline':False]['text':'struct is_value<expression::value<T> >','line_number':60,'multiline':False]['text':'    : mpl::true_','line_number':61,'multiline':False]['text':'{};','line_number':62,'multiline':False]['text':' Call out actor for special handling','line_number':64,'multiline':False]['text':' Is this correct? It applies to any actor.','line_number':65,'multiline':False]['text':' In which case why is it here?','line_number':66,'multiline':False]['text':' Special handling for actor','line_number':72,'multiline':False]['text':' std::cout << "Evaluating val() = " << r << std::endl;','line_number':94,'multiline':False]