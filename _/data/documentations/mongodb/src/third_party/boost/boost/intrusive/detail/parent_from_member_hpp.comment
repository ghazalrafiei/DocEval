['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga  2007-2013','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'The implementation of a pointer to member is compiler dependent.','line_number':39,'multiline':False]['text':'MSVC compliant compilers use their the first 32 bits as offset (even in 64 bit mode)','line_number':42,'multiline':False]['text':'MSVC ABI can use up to 3 int32 to represent pointer to member data','line_number':49,'multiline':False]['text':'with virtual base classes, in those cases there is no simple to','line_number':50,'multiline':False]['text':'obtain the address of the parent. So static assert to avoid runtime errors','line_number':51,'multiline':False]['text':'Additional info on MSVC behaviour for the future. For 2/3 int ptr-to-member','line_number':56,'multiline':False]['text':'types dereference seems to be:','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' vboffset = [compile_time_offset if 2-int ptr2memb] /','line_number':59,'multiline':False]['text':'            [ptr2memb.i32[2] if 3-int ptr2memb].','line_number':60,'multiline':False]['text':' vbtable = *(this + vboffset);','line_number':61,'multiline':False]['text':' adj = vbtable[ptr2memb.i32[1]];','line_number':62,'multiline':False]['text':' var = adj + (this + vboffset) + ptr2memb.i32[0];','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':'To reverse the operation we need to','line_number':65,'multiline':False]['text':' - obtain vboffset (in 2-int ptr2memb implementation only)','line_number':66,'multiline':False]['text':' - Go to Parent's vbtable and obtain adjustment at index ptr2memb.i32[1]','line_number':67,'multiline':False]['text':' - parent = member - adj - vboffset - ptr2memb.i32[0]','line_number':68,'multiline':False]['text':'','line_number':69,'multiline':False]['text':'Even accessing to RTTI we might not be able to obtain this information','line_number':70,'multiline':False]['text':'so anyone who thinks it's possible, please send a patch.','line_number':71,'multiline':False]['text':'This works with gcc, msvc, ac++, ibmcpp','line_number':73,'multiline':False]['text':'This is the traditional C-front approach: __MWERKS__, __DMC__, __SUNPRO_CC','line_number':80,'multiline':False]['text':'namespace detail {','line_number':115,'multiline':False]['text':'namespace intrusive {','line_number':116,'multiline':False]['text':'namespace boost {','line_number':117,'multiline':False]['text':'#ifndef BOOST_INTRUSIVE_DETAIL_PARENT_FROM_MEMBER_HPP','line_number':121,'multiline':False]