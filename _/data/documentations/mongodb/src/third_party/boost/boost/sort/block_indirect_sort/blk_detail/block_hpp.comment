['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file block.hpp','line_number':2,'multiline':False]['text':'/ @brief This file contains the internal data structures used in the','line_number':3,'multiline':False]['text':'/        block_indirect_sort algorithm','line_number':4,'multiline':False]['text':'/','line_number':5,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':6,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':7,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':8,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':9,'multiline':False]['text':'/ @version 0.1','line_number':10,'multiline':False]['text':'/','line_number':11,'multiline':False]['text':'/ @remarks','line_number':12,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':13,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':25,'multiline':False]['text':'                 USING SENTENCES','line_number':26,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':27,'multiline':False]['text':'','line_number':29,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':30,'multiline':False]['text':'/ @struct block_pos','line_number':31,'multiline':False]['text':'/ @brief represent a pair of values, a position represented as an unsigned','line_number':32,'multiline':False]['text':'/        variable ( position ), and a bool variable ( side ). They are packed','line_number':33,'multiline':False]['text':'/        in a size_t variable. The Least Significant Bit is the bool variable,','line_number':34,'multiline':False]['text':'/        and the others bits are the position','line_number':35,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':36,'multiline':False]['text':'------------------------------------------------------------------------','line_number':39,'multiline':False]['text':'                   VARIABLES','line_number':40,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':41,'multiline':False]['text':' number which store a position and a bool side','line_number':42,'multiline':False]['text':'----------------------------- FUNCTIONS ------------------------------','line_number':45,'multiline':False]['text':'','line_number':47,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':48,'multiline':False]['text':'  function : block_pos','line_number':49,'multiline':False]['text':'/ @brief constructor from a position and a side','line_number':50,'multiline':False]['text':'/ @param position : position to sotre','line_number':51,'multiline':False]['text':'/ @param side : side to store','line_number':52,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':53,'multiline':False]['text':'','line_number':58,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':59,'multiline':False]['text':'  function : pos','line_number':60,'multiline':False]['text':'/ @brief obtain the position stored inside the block_pos','line_number':61,'multiline':False]['text':'/ @return position','line_number':62,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':63,'multiline':False]['text':'','line_number':65,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':66,'multiline':False]['text':'  function : pos','line_number':67,'multiline':False]['text':'/ @brief store a position inside the block_pos','line_number':68,'multiline':False]['text':'/ @param position : value to store','line_number':69,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':70,'multiline':False]['text':'','line_number':72,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':73,'multiline':False]['text':'  function : side','line_number':74,'multiline':False]['text':'/ @brief obtain the side stored inside the block_pos','line_number':75,'multiline':False]['text':'/ @return bool value','line_number':76,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':77,'multiline':False]['text':'','line_number':79,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':80,'multiline':False]['text':'  function : side','line_number':81,'multiline':False]['text':'/ @brief store a bool value the block_pos','line_number':82,'multiline':False]['text':'/ @param sd : bool value to store','line_number':83,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':84,'multiline':False]['text':' end struct block_pos','line_number':86,'multiline':False]['text':'','line_number':88,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':89,'multiline':False]['text':'/ @struct block','line_number':90,'multiline':False]['text':'/ @brief represent a group of Block_size contiguous elements, beginning','line_number':91,'multiline':False]['text':'/        with the pointed by first','line_number':92,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':93,'multiline':False]['text':'----------------------------------------------------------------------','line_number':97,'multiline':False]['text':'                     VARIABLES','line_number':98,'multiline':False]['text':'----------------------------------------------------------------------','line_number':99,'multiline':False]['text':' iterator to the first element of the block','line_number':100,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':102,'multiline':False]['text':'  function : block','line_number':103,'multiline':False]['text':'/ @brief constructor from an iterator to the first element of the block','line_number':104,'multiline':False]['text':'/ @param it : iterator to the first element of the block','line_number':105,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':106,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':109,'multiline':False]['text':'  function : get_range','line_number':110,'multiline':False]['text':'/ @brief convert a block in a range','line_number':111,'multiline':False]['text':'/ @return range','line_number':112,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':113,'multiline':False]['text':' end struct block','line_number':119,'multiline':False]['text':'','line_number':121,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':122,'multiline':False]['text':'  function : compare_block','line_number':123,'multiline':False]['text':'/ @brief compare two blocks using the content of the pointed by first','line_number':124,'multiline':False]['text':'/ @param block1 : first block to compare','line_number':125,'multiline':False]['text':'/ @param block2 : second block to compare','line_number':126,'multiline':False]['text':'/ @param cmp : comparison operator','line_number':127,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':128,'multiline':False]['text':'','line_number':136,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':137,'multiline':False]['text':'/ @struct compare_block_pos','line_number':138,'multiline':False]['text':'/ @brief This is a object for to compare two block_pos objects','line_number':139,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':140,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':144,'multiline':False]['text':'                        VARIABLES','line_number':145,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':146,'multiline':False]['text':' iterator to the first element to sort','line_number':147,'multiline':False]['text':' comparison object for to compare two elements','line_number':148,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':150,'multiline':False]['text':'  function : compare_block_pos','line_number':151,'multiline':False]['text':'/ @brief constructor','line_number':152,'multiline':False]['text':'/ @param g_first : itertor to the first element to sort','line_number':153,'multiline':False]['text':'/ @param cmp : comparison operator','line_number':154,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':155,'multiline':False]['text':'','line_number':158,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':159,'multiline':False]['text':'  function : operator ()','line_number':160,'multiline':False]['text':'/ @brief compare two blocks using the content of the pointed by','line_number':161,'multiline':False]['text':'/        global_first','line_number':162,'multiline':False]['text':'/ @param block_pos1 : first block to compare','line_number':163,'multiline':False]['text':'/ @param block_pos2 : second block to compare','line_number':164,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':165,'multiline':False]['text':' end struct compare_block_pos','line_number':172,'multiline':False]['text':'****************************************************************************','line_number':174,'multiline':False]['text':'    End namespace blk_detail','line_number':175,'multiline':False]['text':'    End namespace sort','line_number':176,'multiline':False]['text':'    End namespace boost','line_number':177,'multiline':False]['text':'****************************************************************************','line_number':178,'multiline':False]['text':'','line_number':179,'multiline':False]