['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   bounded_ordering_queue.hpp
 * \author Andrey Semashev
 * \date   06.01.2012
 *
 * The header contains implementation of bounded ordering queueing strategy for
 * the asynchronous sink frontend.
 ','line_number':7,'multiline':True]['text':'!
 * \brief Bounded ordering log record queueing strategy
 *
 * The \c bounded_ordering_queue class is intended to be used with
 * the \c asynchronous_sink frontend as a log record queueing strategy.
 *
 * This strategy provides the following properties to the record queueing mechanism:
 *
 * \li The queue has limited capacity specified by the \c MaxQueueSizeV template parameter.
 * \li Upon reaching the size limit, the queue invokes the overflow handling strategy
 *     specified in the \c OverflowStrategyT template parameter to handle the situation.
 *     The library provides overflow handling strategies for most common cases:
 *     \c drop_on_overflow will silently discard the log record, and \c block_on_overflow
 *     will put the enqueueing thread to wait until there is space in the queue.
 * \li The queue has a fixed latency window. This means that each log record put
 *     into the queue will normally not be dequeued for a certain period of time.
 * \li The queue performs stable record ordering within the latency window.
 *     The ordering predicate can be specified in the \c OrderT template parameter.
 ','line_number':51,'multiline':True]['text':'! Ordering window duration, in milliseconds','line_number':86,'multiline':False]['text':'! Synchronization primitive','line_number':88,'multiline':False]['text':'! Condition to block the consuming thread on','line_number':90,'multiline':False]['text':'! Log record queue','line_number':92,'multiline':False]['text':'! Interruption flag','line_number':94,'multiline':False]['text':'!
     * Returns ordering window size specified during initialization
     ','line_number':98,'multiline':True]['text':'!
     * Returns default ordering window size.
     * The default window size is specific to the operating system thread scheduling mechanism.
     ','line_number':106,'multiline':True]['text':' The main idea behind this parameter is that the ordering window should be large enough','line_number':112,'multiline':False]['text':' to allow the frontend to order records from different threads on an attribute','line_number':113,'multiline':False]['text':' that contains system time. Thus this value should be:','line_number':114,'multiline':False]['text':' * No less than the minimum time resolution quant that Boost.DateTime provides on the current OS.','line_number':115,'multiline':False]['text':'   For instance, on Windows it defaults to around 15-16 ms.','line_number':116,'multiline':False]['text':' * No less than thread switching quant on the current OS. For now 30 ms is large enough window size to','line_number':117,'multiline':False]['text':'   switch threads on any known OS. It can be tuned for other platforms as needed.','line_number':118,'multiline':False]['text':'! Initializing constructor','line_number':123,'multiline':False]['text':'! Enqueues log record to the queue','line_number':132,'multiline':False]['text':'! Attempts to enqueue log record to the queue','line_number':148,'multiline':False]['text':' Do not invoke the bounding strategy in case of overflow as it may block','line_number':156,'multiline':False]['text':'! Attempts to dequeue a log record ready for processing from the queue, does not block if the queue is empty','line_number':169,'multiline':False]['text':' We got a new element','line_number':180,'multiline':False]['text':'! Attempts to dequeue log record from the queue, does not block if the queue is empty','line_number':191,'multiline':False]['text':'! Dequeues log record from the queue, blocks if the queue is empty','line_number':208,'multiline':False]['text':' Wait until the element becomes ready to be processed','line_number':230,'multiline':False]['text':'! Wakes a thread possibly blocked in the \c dequeue method','line_number':244,'multiline':False]['text':' namespace sinks','line_number':254,'multiline':False]['text':' namespace log','line_number':256,'multiline':False]['text':' namespace boost','line_number':258,'multiline':False]['text':' BOOST_LOG_SINKS_BOUNDED_ORDERING_QUEUE_HPP_INCLUDED_','line_number':262,'multiline':False]