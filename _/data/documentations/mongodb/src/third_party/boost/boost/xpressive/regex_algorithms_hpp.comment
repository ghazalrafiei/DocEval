['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'/ \file regex_algorithms.hpp','line_number':2,'multiline':False]['text':'/ Contains the regex_match(), regex_search() and regex_replace() algorithms.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':5,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':6,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':' MS compatible compilers support #pragma once','line_number':12,'multiline':False]['text':'/ INTERNAL ONLY','line_number':32,'multiline':False]['text':'/','line_number':33,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':39,'multiline':False]['text':' regex_match','line_number':40,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':41,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':45,'multiline':False]['text':' regex_match_impl','line_number':46,'multiline':False]['text':' the state object holds matching state and','line_number':60,'multiline':False]['text':' is passed by reference to all the matchers','line_number':61,'multiline':False]['text':' handle partial matches','line_number':72,'multiline':False]['text':' namespace detail','line_number':82,'multiline':False]['text':'/ \brief See if a regex matches a sequence from beginning to end.','line_number':84,'multiline':False]['text':'/','line_number':85,'multiline':False]['text':'/ Determines whether there is an exact match between the regular expression \c re,','line_number':86,'multiline':False]['text':'/ and all of the sequence <tt>[begin, end)</tt>.','line_number':87,'multiline':False]['text':'/','line_number':88,'multiline':False]['text':'/ \pre Type \c BidiIter meets the requirements of a Bidirectional Iterator (24.1.4).','line_number':89,'multiline':False]['text':'/ \pre <tt>[begin,end)</tt> denotes a valid iterator range.','line_number':90,'multiline':False]['text':'/ \param begin The beginning of the sequence.','line_number':91,'multiline':False]['text':'/ \param end The end of the sequence.','line_number':92,'multiline':False]['text':'/ \param what The \c match_results struct into which the sub_matches will be written','line_number':93,'multiline':False]['text':'/ \param re The regular expression object to use','line_number':94,'multiline':False]['text':'/ \param flags Optional match flags, used to control how the expression is matched','line_number':95,'multiline':False]['text':'/        against the sequence. (See \c match_flag_type.)','line_number':96,'multiline':False]['text':'/ \return \c true if a match is found, \c false otherwise','line_number':97,'multiline':False]['text':'/ \throw regex_error on stack exhaustion','line_number':98,'multiline':False]['text':'/ \overload','line_number':120,'multiline':False]['text':'/','line_number':121,'multiline':False]['text':' BUGBUG this is inefficient','line_number':136,'multiline':False]['text':'/ \overload','line_number':141,'multiline':False]['text':'/','line_number':142,'multiline':False]['text':' BUGBUG this is inefficient','line_number':160,'multiline':False]['text':'/ \overload','line_number':166,'multiline':False]['text':'/','line_number':167,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':186,'multiline':False]['text':' to BidiIter here.','line_number':187,'multiline':False]['text':'/ \overload','line_number':192,'multiline':False]['text':'/','line_number':193,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':212,'multiline':False]['text':' to BidiIter here.','line_number':213,'multiline':False]['text':'/ \overload','line_number':218,'multiline':False]['text':'/','line_number':219,'multiline':False]['text':' BUGBUG this is inefficient','line_number':233,'multiline':False]['text':'/ \overload','line_number':240,'multiline':False]['text':'/','line_number':241,'multiline':False]['text':' BUGBUG this is inefficient','line_number':256,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':258,'multiline':False]['text':' to BidiIter here.','line_number':259,'multiline':False]['text':'/ \overload','line_number':264,'multiline':False]['text':'/','line_number':265,'multiline':False]['text':' BUGBUG this is inefficient','line_number':280,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':282,'multiline':False]['text':' to BidiIter here.','line_number':283,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':289,'multiline':False]['text':' regex_search','line_number':290,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':291,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':295,'multiline':False]['text':' regex_search_impl','line_number':296,'multiline':False]['text':' If match_continuous is set, we only need to check for a match at the current position','line_number':318,'multiline':False]['text':' handle partial matches','line_number':327,'multiline':False]['text':' If we have a finder, use it to find where a potential match can start','line_number':335,'multiline':False]['text':' handle partial matches','line_number':355,'multiline':False]['text':' Otherwise, use brute force search at every position.','line_number':369,'multiline':False]['text':' handle partial matches','line_number':380,'multiline':False]['text':' namespace detail','line_number':401,'multiline':False]['text':'/ \brief Determines whether there is some sub-sequence within <tt>[begin,end)</tt>','line_number':404,'multiline':False]['text':'/ that matches the regular expression \c re.','line_number':405,'multiline':False]['text':'/','line_number':406,'multiline':False]['text':'/ Determines whether there is some sub-sequence within <tt>[begin,end)</tt> that matches','line_number':407,'multiline':False]['text':'/ the regular expression \c re.','line_number':408,'multiline':False]['text':'/','line_number':409,'multiline':False]['text':'/ \pre Type \c BidiIter meets the requirements of a Bidirectional Iterator (24.1.4).','line_number':410,'multiline':False]['text':'/ \pre <tt>[begin,end)</tt> denotes a valid iterator range.','line_number':411,'multiline':False]['text':'/ \param begin The beginning of the sequence','line_number':412,'multiline':False]['text':'/ \param end The end of the sequence','line_number':413,'multiline':False]['text':'/ \param what The \c match_results struct into which the sub_matches will be written','line_number':414,'multiline':False]['text':'/ \param re The regular expression object to use','line_number':415,'multiline':False]['text':'/ \param flags Optional match flags, used to control how the expression is matched against','line_number':416,'multiline':False]['text':'/        the sequence. (See \c match_flag_type.)','line_number':417,'multiline':False]['text':'/ \return \c true if a match is found, \c false otherwise','line_number':418,'multiline':False]['text':'/ \throw regex_error on stack exhaustion','line_number':419,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':432,'multiline':False]['text':' the state object holds matching state and','line_number':439,'multiline':False]['text':' is passed by reference to all the matchers','line_number':440,'multiline':False]['text':'/ \overload','line_number':445,'multiline':False]['text':'/','line_number':446,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':458,'multiline':False]['text':' BUGBUG this is inefficient','line_number':464,'multiline':False]['text':' the state object holds matching state and','line_number':466,'multiline':False]['text':' is passed by reference to all the matchers','line_number':467,'multiline':False]['text':'/ \overload','line_number':472,'multiline':False]['text':'/','line_number':473,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':485,'multiline':False]['text':' BUGBUG this is inefficient','line_number':492,'multiline':False]['text':' the state object holds matching state and','line_number':495,'multiline':False]['text':' is passed by reference to all the matchers','line_number':496,'multiline':False]['text':'/ \overload','line_number':501,'multiline':False]['text':'/','line_number':502,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':515,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':522,'multiline':False]['text':' to BidiIter here.','line_number':523,'multiline':False]['text':' the state object holds matching state and','line_number':525,'multiline':False]['text':' is passed by reference to all the matchers','line_number':526,'multiline':False]['text':'/ \overload','line_number':531,'multiline':False]['text':'/','line_number':532,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':545,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':552,'multiline':False]['text':' to BidiIter here.','line_number':553,'multiline':False]['text':' the state object holds matching state and','line_number':555,'multiline':False]['text':' is passed by reference to all the matchers','line_number':556,'multiline':False]['text':'/ \overload','line_number':561,'multiline':False]['text':'/','line_number':562,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':573,'multiline':False]['text':' BUGBUG this is inefficient','line_number':579,'multiline':False]['text':' BUGBUG this is inefficient','line_number':581,'multiline':False]['text':' the state object holds matching state and','line_number':584,'multiline':False]['text':' is passed by reference to all the matchers','line_number':585,'multiline':False]['text':'/ \overload','line_number':590,'multiline':False]['text':'/','line_number':591,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':603,'multiline':False]['text':' BUGBUG this is inefficient','line_number':609,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':611,'multiline':False]['text':' to BidiIter here.','line_number':612,'multiline':False]['text':' the state object holds matching state and','line_number':614,'multiline':False]['text':' is passed by reference to all the matchers','line_number':615,'multiline':False]['text':'/ \overload','line_number':620,'multiline':False]['text':'/','line_number':621,'multiline':False]['text':' a default-constructed regex matches nothing','line_number':633,'multiline':False]['text':' BUGBUG this is inefficient','line_number':639,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':641,'multiline':False]['text':' to BidiIter here.','line_number':642,'multiline':False]['text':' the state object holds matching state and','line_number':644,'multiline':False]['text':' is passed by reference to all the matchers','line_number':645,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':651,'multiline':False]['text':' regex_replace','line_number':652,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':653,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':657,'multiline':False]['text':' regex_replace_impl','line_number':658,'multiline':False]['text':' namespace detail','line_number':716,'multiline':False]['text':'/ \brief Build an output sequence given an input sequence, a regex, and a format string or','line_number':718,'multiline':False]['text':'/ a formatter object, function, or expression.','line_number':719,'multiline':False]['text':'/','line_number':720,'multiline':False]['text':'/ Constructs a \c regex_iterator object: <tt>regex_iterator\< BidiIter \> i(begin, end, re, flags)</tt>,','line_number':721,'multiline':False]['text':'/ and uses \c i to enumerate through all of the matches m of type <tt>match_results\< BidiIter \></tt> that','line_number':722,'multiline':False]['text':'/ occur within the sequence <tt>[begin, end)</tt>. If no such matches are found and <tt>!(flags \& format_no_copy)</tt>','line_number':723,'multiline':False]['text':'/ then calls <tt>std::copy(begin, end, out)</tt>. Otherwise, for each match found, if <tt>!(flags \& format_no_copy)</tt>','line_number':724,'multiline':False]['text':'/ calls <tt>std::copy(m.prefix().first, m.prefix().second, out)</tt>, and then calls <tt>m.format(out, format, flags)</tt>.','line_number':725,'multiline':False]['text':'/ Finally if <tt>!(flags \& format_no_copy)</tt> calls <tt>std::copy(last_m.suffix().first, last_m.suffix().second, out)</tt>','line_number':726,'multiline':False]['text':'/ where \c last_m is a copy of the last match found.','line_number':727,'multiline':False]['text':'/','line_number':728,'multiline':False]['text':'/ If <tt>flags \& format_first_only</tt> is non-zero then only the first match found is replaced.','line_number':729,'multiline':False]['text':'/','line_number':730,'multiline':False]['text':'/ \pre Type \c BidiIter meets the requirements of a Bidirectional Iterator (24.1.4).','line_number':731,'multiline':False]['text':'/ \pre Type \c OutIter meets the requirements of an Output Iterator (24.1.2).','line_number':732,'multiline':False]['text':'/ \pre Type \c Formatter models \c ForwardRange, <tt>Callable\<match_results\<BidiIter\> \></tt>,','line_number':733,'multiline':False]['text':'/      <tt>Callable\<match_results\<BidiIter\>, OutIter\></tt>, or','line_number':734,'multiline':False]['text':'/      <tt>Callable\<match_results\<BidiIter\>, OutIter, regex_constants::match_flag_type\></tt>;','line_number':735,'multiline':False]['text':'/      or else it is a null-terminated format string, or an expression template','line_number':736,'multiline':False]['text':'/      representing a formatter lambda expression.','line_number':737,'multiline':False]['text':'/ \pre <tt>[begin,end)</tt> denotes a valid iterator range.','line_number':738,'multiline':False]['text':'/ \param out An output iterator into which the output sequence is written.','line_number':739,'multiline':False]['text':'/ \param begin The beginning of the input sequence.','line_number':740,'multiline':False]['text':'/ \param end The end of the input sequence.','line_number':741,'multiline':False]['text':'/ \param re The regular expression object to use.','line_number':742,'multiline':False]['text':'/ \param format The format string used to format the replacement sequence,','line_number':743,'multiline':False]['text':'/        or a formatter function, function object, or expression.','line_number':744,'multiline':False]['text':'/ \param flags Optional match flags, used to control how the expression is matched against','line_number':745,'multiline':False]['text':'/        the sequence. (See \c match_flag_type.)','line_number':746,'multiline':False]['text':'/ \return The value of the output iterator after the output sequence has been written to it.','line_number':747,'multiline':False]['text':'/ \throw regex_error on stack exhaustion or invalid format string.','line_number':748,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':761,'multiline':False]['text':'/ \overload','line_number':775,'multiline':False]['text':'/','line_number':776,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':788,'multiline':False]['text':'/ \overload','line_number':802,'multiline':False]['text':'/','line_number':803,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':815,'multiline':False]['text':' to BidiIter here.','line_number':816,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':819,'multiline':False]['text':'/ \overload','line_number':834,'multiline':False]['text':'/','line_number':835,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':847,'multiline':False]['text':' to BidiIter here.','line_number':848,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':851,'multiline':False]['text':'/ \overload','line_number':866,'multiline':False]['text':'/','line_number':867,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':881,'multiline':False]['text':'/ \overload','line_number':897,'multiline':False]['text':'/','line_number':898,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':910,'multiline':False]['text':' to BidiIter here.','line_number':911,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':914,'multiline':False]['text':'/ \overload','line_number':929,'multiline':False]['text':'/','line_number':930,'multiline':False]['text':' Note that the result iterator of the range must be convertible','line_number':942,'multiline':False]['text':' to BidiIter here.','line_number':943,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':946,'multiline':False]['text':'/ \overload','line_number':961,'multiline':False]['text':'/','line_number':962,'multiline':False]['text':' Default-constructed regexes match nothing','line_number':975,'multiline':False]['text':' namespace boost::xpressive','line_number':991,'multiline':False]