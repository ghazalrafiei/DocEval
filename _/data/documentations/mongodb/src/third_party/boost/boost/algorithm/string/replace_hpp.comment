['text':'  Boost string_algo library replace.hpp header file  ---------------------------//','line_number':1,'multiline':False]['text':'  Copyright Pavol Droba 2002-2006.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org/ for updates, documentation, and revision history.','line_number':9,'multiline':False]['text':'! \file
    Defines various replace algorithms. Each algorithm replaces
    part(s) of the input according to set of searching and replace criteria.
','line_number':27,'multiline':True]['text':'  replace_range --------------------------------------------------------------------//','line_number':35,'multiline':False]['text':'! Replace range algorithm','line_number':37,'multiline':False]['text':'!
            Replace the given range in the input string.
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            
            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param SearchRange A range in the input to be substituted
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                a modified copy of the input

              \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':38,'multiline':True]['text':'! Replace range algorithm','line_number':71,'multiline':False]['text':'!
            \overload
        ','line_number':72,'multiline':True]['text':'! Replace range algorithm','line_number':89,'multiline':False]['text':'!
            Replace the given range in the input string. 
            The input sequence is modified in-place.

            \param Input An input string
            \param SearchRange A range in the input to be substituted
            \param Format A substitute string
        ','line_number':90,'multiline':True]['text':'  replace_first --------------------------------------------------------------------//','line_number':112,'multiline':False]['text':'! Replace first algorithm','line_number':114,'multiline':False]['text':'!
            Replace the first match of the search substring in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            
            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input

              \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':115,'multiline':True]['text':'! Replace first algorithm','line_number':148,'multiline':False]['text':'!
            \overload
        ','line_number':149,'multiline':True]['text':'! Replace first algorithm','line_number':164,'multiline':False]['text':'!
            replace the first match of the search substring in the input 
            with the format string. The input sequence is modified in-place.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
        ','line_number':165,'multiline':True]['text':'  replace_first ( case insensitive ) ---------------------------------------------//','line_number':185,'multiline':False]['text':'! Replace first algorithm ( case insensitive )','line_number':187,'multiline':False]['text':'!
            Replace the first match of the search substring in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            Searching is case insensitive.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
            \return An output iterator pointing just after the last inserted character or
                a modified copy of the input

             \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':188,'multiline':True]['text':'! Replace first algorithm ( case insensitive )','line_number':224,'multiline':False]['text':'!
            \overload
        ','line_number':225,'multiline':True]['text':'! Replace first algorithm ( case insensitive )','line_number':241,'multiline':False]['text':'!
            Replace the first match of the search substring in the input 
            with the format string. Input sequence is modified in-place.
            Searching is case insensitive.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
        ','line_number':242,'multiline':True]['text':'  replace_last --------------------------------------------------------------------//','line_number':265,'multiline':False]['text':'! Replace last algorithm','line_number':267,'multiline':False]['text':'!
            Replace the last match of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input            

              \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':268,'multiline':True]['text':'! Replace last algorithm','line_number':301,'multiline':False]['text':'!
            \overload
        ','line_number':302,'multiline':True]['text':'! Replace last algorithm','line_number':317,'multiline':False]['text':'!
            Replace the last match of the search string in the input 
            with the format string. Input sequence is modified in-place.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
        ','line_number':318,'multiline':True]['text':'  replace_last ( case insensitive ) -----------------------------------------------//','line_number':338,'multiline':False]['text':'! Replace last algorithm ( case insensitive )','line_number':340,'multiline':False]['text':'!
            Replace the last match of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            Searching is case insensitive.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input  

            \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':341,'multiline':True]['text':'! Replace last algorithm ( case insensitive )','line_number':377,'multiline':False]['text':'!
            \overload
        ','line_number':378,'multiline':True]['text':'! Replace last algorithm ( case insensitive )','line_number':394,'multiline':False]['text':'!
            Replace the last match of the search string in the input 
            with the format string.The input sequence is modified in-place.
            Searching is case insensitive.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
        ','line_number':395,'multiline':True]['text':'  replace_nth --------------------------------------------------------------------//','line_number':418,'multiline':False]['text':'! Replace nth algorithm','line_number':420,'multiline':False]['text':'!
            Replace an Nth (zero-indexed) match of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Nth An index of the match to be replaced. The index is 0-based.
                For negative N, matches are counted from the end of string.
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                a modified copy of the input

            \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':421,'multiline':True]['text':'! Replace nth algorithm','line_number':457,'multiline':False]['text':'!
            \overload
        ','line_number':458,'multiline':True]['text':'! Replace nth algorithm','line_number':474,'multiline':False]['text':'!
            Replace an Nth (zero-indexed) match of the search string in the input 
            with the format string. Input sequence is modified in-place.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Nth An index of the match to be replaced. The index is 0-based.
                For negative N, matches are counted from the end of string.
            \param Format A substitute string
        ','line_number':475,'multiline':True]['text':'  replace_nth ( case insensitive ) -----------------------------------------------//','line_number':498,'multiline':False]['text':'! Replace nth algorithm ( case insensitive )','line_number':500,'multiline':False]['text':'!
            Replace an Nth (zero-indexed) match of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            Searching is case insensitive.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Nth An index of the match to be replaced. The index is 0-based.
                For negative N, matches are counted from the end of string.
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input            

            \note The second variant of this function provides the strong exception-safety guarantee
       ','line_number':501,'multiline':True]['text':'! Replace nth algorithm ( case insensitive )','line_number':540,'multiline':False]['text':'!
            \overload
        ','line_number':541,'multiline':True]['text':'! Replace nth algorithm ( case insensitive )','line_number':558,'multiline':False]['text':'!
            Replace an Nth (zero-indexed) match of the search string in the input 
            with the format string. Input sequence is modified in-place.
            Searching is case insensitive.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Nth An index of the match to be replaced. The index is 0-based.
                For negative N, matches are counted from the end of string.
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
        ','line_number':559,'multiline':True]['text':'  replace_all --------------------------------------------------------------------//','line_number':585,'multiline':False]['text':'! Replace all algorithm','line_number':587,'multiline':False]['text':'!
            Replace all occurrences of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input 

             \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':588,'multiline':True]['text':'! Replace all algorithm','line_number':621,'multiline':False]['text':'!
            \overload
        ','line_number':622,'multiline':True]['text':'! Replace all algorithm','line_number':637,'multiline':False]['text':'!
            Replace all occurrences of the search string in the input 
            with the format string. The input sequence is modified in-place.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
        ','line_number':638,'multiline':True]['text':'  replace_all ( case insensitive ) -----------------------------------------------//','line_number':658,'multiline':False]['text':'! Replace all algorithm ( case insensitive )','line_number':660,'multiline':False]['text':'!
            Replace all occurrences of the search string in the input 
            with the format string. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            Searching is case insensitive.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input 

            \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':661,'multiline':True]['text':'! Replace all algorithm ( case insensitive )','line_number':697,'multiline':False]['text':'!
            \overload
        ','line_number':698,'multiline':True]['text':'! Replace all algorithm ( case insensitive )','line_number':714,'multiline':False]['text':'!
            Replace all occurrences of the search string in the input 
            with the format string.The input sequence is modified in-place.
            Searching is case insensitive.

            \param Input An input string
            \param Search A substring to be searched for 
            \param Format A substitute string
            \param Loc A locale used for case insensitive comparison
        ','line_number':715,'multiline':True]['text':'  replace_head --------------------------------------------------------------------//','line_number':738,'multiline':False]['text':'! Replace head algorithm','line_number':740,'multiline':False]['text':'!
            Replace the head of the input with the given format string. 
            The head is a prefix of a string of given size. 
            If the sequence is shorter then required, whole string if 
            considered to be the head. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.
            
            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param N Length of the head.
                For N>=0, at most N characters are extracted.
                For N<0, size(Input)-|N| characters are extracted.
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                a modified copy of the input  

            \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':741,'multiline':True]['text':'! Replace head algorithm','line_number':777,'multiline':False]['text':'!
            \overload
        ','line_number':778,'multiline':True]['text':'! Replace head algorithm','line_number':793,'multiline':False]['text':'!
            Replace the head of the input with the given format string. 
            The head is a prefix of a string of given size. 
            If the sequence is shorter then required, the whole string is 
            considered to be the head. The input sequence is modified in-place.

            \param Input An input string
            \param N Length of the head.
                For N>=0, at most N characters are extracted.
                For N<0, size(Input)-|N| characters are extracted.
            \param Format A substitute string
        ','line_number':794,'multiline':True]['text':'  replace_tail --------------------------------------------------------------------//','line_number':818,'multiline':False]['text':'! Replace tail algorithm','line_number':820,'multiline':False]['text':'!
            Replace the tail of the input with the given format string. 
            The tail is a suffix of a string of given size. 
            If the sequence is shorter then required, whole string is 
            considered to be the tail. 
            The result is a modified copy of the input. It is returned as a sequence 
            or copied to the output iterator.

            \param Output An output iterator to which the result will be copied
            \param Input An input string
            \param N Length of the tail.
                For N>=0, at most N characters are extracted.
                For N<0, size(Input)-|N| characters are extracted.
            \param Format A substitute string
            \return An output iterator pointing just after the last inserted character or
                    a modified copy of the input   

              \note The second variant of this function provides the strong exception-safety guarantee
        ','line_number':821,'multiline':True]['text':'! Replace tail algorithm','line_number':857,'multiline':False]['text':'!
            \overload
        ','line_number':858,'multiline':True]['text':'! Replace tail algorithm','line_number':873,'multiline':False]['text':'!
            Replace the tail of the input with the given format sequence. 
            The tail is a suffix of a string of given size. 
            If the sequence is shorter then required, the whole string is 
            considered to be the tail. The input sequence is modified in-place.

            \param Input An input string
            \param N Length of the tail.
                For N>=0, at most N characters are extracted.
                For N<0, size(Input)-|N| characters are extracted.
            \param Format A substitute string
        ','line_number':874,'multiline':True]['text':' namespace algorithm','line_number':898,'multiline':False]['text':' pull names to the boost namespace','line_number':900,'multiline':False]['text':' namespace boost','line_number':924,'multiline':False]['text':' BOOST_REPLACE_HPP','line_number':926,'multiline':False]