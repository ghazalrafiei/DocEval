['text':'  boost/filesystem/fstream.hpp  ------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright Beman Dawes 2002','line_number':3,'multiline':False]['text':'  Copyright Andrey Semashev 2021','line_number':4,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':6,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':7,'multiline':False]['text':'  Library home page: http://www.boost.org/libs/filesystem','line_number':9,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':11,'multiline':False]['text':' must be the last #include','line_number':21,'multiline':False]['text':' On Windows, except for standard libaries known to have wchar_t overloads for','line_number':24,'multiline':False]['text':' file stream I/O, use path::string() to get a narrow character c_str()','line_number':25,'multiline':False]['text':' Use wide characters directly','line_number':28,'multiline':False]['text':' Note: We don't use C++17 std::filesystem::path as a means to pass wide paths','line_number':29,'multiline':False]['text':' to file streams because of various problems:','line_number':30,'multiline':False]['text':' - std::filesystem is available in gcc 8 but it is broken there (fails to compile path definition','line_number':31,'multiline':False]['text':'   on Windows). Compilation errors seem to be fixed since gcc 9.','line_number':32,'multiline':False]['text':' - In gcc 10.2 and clang 8.0.1 on Cygwin64, the path attempts to convert the wide string to narrow','line_number':33,'multiline':False]['text':'   and fails in runtime. This may be system locale dependent, and performing character code conversion','line_number':34,'multiline':False]['text':'   is against the purpose of using std::filesystem::path anyway.','line_number':35,'multiline':False]['text':' - Other std::filesystem implementations were not tested, so it is not known if they actually work','line_number':36,'multiline':False]['text':'   with wide paths.','line_number':37,'multiline':False]['text':' Use narrow characters, since wide not available','line_number':40,'multiline':False]['text':' defined(BOOST_WINDOWS_API)','line_number':43,'multiline':False]['text':' 'boost::filesystem::basic_fstream<charT>' : inherits 'std::basic_istream<_Elem,_Traits>::std::basic_istream<_Elem,_Traits>::_Add_vtordisp1' via dominance','line_number':51,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':58,'multiline':False]['text':'                                  basic_filebuf                                       //','line_number':59,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':60,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':78,'multiline':False]['text':'                                 basic_ifstream                                       //','line_number':79,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':80,'multiline':False]['text':' use two signatures, rather than one signature with default second','line_number':89,'multiline':False]['text':' argument, to workaround VC++ 7.1 bug (ID VSWhidbey 38416)','line_number':90,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':113,'multiline':False]['text':'                                 basic_ofstream                                       //','line_number':114,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':115,'multiline':False]['text':' use two signatures, rather than one signature with default second','line_number':124,'multiline':False]['text':' argument, to workaround VC++ 7.1 bug (ID VSWhidbey 38416)','line_number':125,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':148,'multiline':False]['text':'                                  basic_fstream                                       //','line_number':149,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':150,'multiline':False]['text':' use two signatures, rather than one signature with default second','line_number':159,'multiline':False]['text':' argument, to workaround VC++ 7.1 bug (ID VSWhidbey 38416)','line_number':160,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':183,'multiline':False]['text':'                                    typedefs                                          //','line_number':184,'multiline':False]['text':'--------------------------------------------------------------------------------------//','line_number':185,'multiline':False]['text':' namespace filesystem','line_number':197,'multiline':False]['text':' namespace boost','line_number':198,'multiline':False]['text':' BOOST_FILESYSTEM_FSTREAM_HPP','line_number':206,'multiline':False]