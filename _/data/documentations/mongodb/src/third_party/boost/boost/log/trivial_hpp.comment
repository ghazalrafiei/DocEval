['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   log/trivial.hpp
 * \author Andrey Semashev
 * \date   07.11.2009
 *
 * This header defines tools for trivial logging support
 ','line_number':7,'multiline':True]['text':'! Trivial severity levels','line_number':41,'multiline':False]['text':'! Returns stringized enumeration value or \c NULL, if the value is not valid','line_number':52,'multiline':False]['text':'! Returns stringized enumeration value or \c NULL, if the value is not valid','line_number':56,'multiline':False]['text':'! Parses enumeration value from string and returns \c true on success and \c false otherwise','line_number':62,'multiline':False]['text':'! Outputs stringized representation of the severity level to the stream','line_number':66,'multiline':False]['text':'! Reads stringized representation of the severity level from the stream','line_number':79,'multiline':False]['text':'! Trivial logger type','line_number':84,'multiline':False]['text':'!
 * \brief Trivial logger tag
 *
 * This tag can be used to acquire the logger that is used with trivial logging macros.
 * This may be useful when the logger is used with other macros which require a logger.
 ','line_number':91,'multiline':True]['text':'! Logger type','line_number':99,'multiline':False]['text':'!
     * Returns a reference to the trivial logger instance
     ','line_number':102,'multiline':True]['text':' Implementation details - never use these','line_number':107,'multiline':False]['text':'!
 * The macro is used to initiate logging. The \c lvl argument of the macro specifies one of the following
 * severity levels: \c trace, \c debug, \c info, \c warning, \c error or \c fatal (see \c severity_level enum).
 * Following the macro, there may be a streaming expression that composes the record message string. For example:
 *
 * \code
 * BOOST_LOG_TRIVIAL(info) << "Hello, world!";
 * \endcode
 ','line_number':115,'multiline':True]['text':' namespace trivial','line_number':128,'multiline':False]['text':' namespace log','line_number':130,'multiline':False]['text':' namespace boost','line_number':132,'multiline':False]['text':' BOOST_LOG_TRIVIAL_HPP_INCLUDED_','line_number':139,'multiline':False]