['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file block_indirect_sort.hpp','line_number':2,'multiline':False]['text':'/ @brief block indirect sort algorithm','line_number':3,'multiline':False]['text':'/','line_number':4,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]['text':'/ @version 0.1','line_number':9,'multiline':False]['text':'/','line_number':10,'multiline':False]['text':'/ @remarks','line_number':11,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]['text':' This value is the minimal number of threads for to use the','line_number':26,'multiline':False]['text':' block_indirect_sort algorithm','line_number':27,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':36,'multiline':False]['text':'         USING SENTENCES','line_number':37,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':38,'multiline':False]['text':'','line_number':52,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':53,'multiline':False]['text':'/ @struct block_indirect_sort','line_number':54,'multiline':False]['text':'/ @brief This class is the entry point of the block indirect sort. The code','line_number':55,'multiline':False]['text':'/        of this algorithm is divided in several classes:','line_number':56,'multiline':False]['text':'/        bis/block.hpp : basic structures used in the algorithm','line_number':57,'multiline':False]['text':'/        bis/backbone.hpp : data used by all the classes','line_number':58,'multiline':False]['text':'/        bis/merge_blocks.hpp : merge the internal blocks','line_number':59,'multiline':False]['text':'/        bis/move_blocks.hpp : move the blocks, and obtain all the elements','line_number':60,'multiline':False]['text':'/                              phisicaly sorted','line_number':61,'multiline':False]['text':'/        bis/parallel_sort.hpp : make the parallel sort of each part in the','line_number':62,'multiline':False]['text':'/                                initial division of the data','line_number':63,'multiline':False]['text':'/','line_number':64,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':65,'multiline':False]['text':'------------------------------------------------------------------------','line_number':70,'multiline':False]['text':'                  D E F I N I T I O N S','line_number':71,'multiline':False]['text':'------------------------------------------------------------------------','line_number':72,'multiline':False]['text':' classes used in the internal operations of the algorithm','line_number':80,'multiline':False]['text':'','line_number':89,'multiline':False]['text':'------------------------------------------------------------------------','line_number':90,'multiline':False]['text':'       V A R I A B L E S   A N D  C O N S T A N T S','line_number':91,'multiline':False]['text':'------------------------------------------------------------------------','line_number':92,'multiline':False]['text':' contains the data and the internal data structures of the algorithm for','line_number':93,'multiline':False]['text':' to be shared between the classes which are part of the algorithm','line_number':94,'multiline':False]['text':' atomic counter for to detect the end of the works created inside','line_number':96,'multiline':False]['text':' the object','line_number':97,'multiline':False]['text':' pointer to the uninitialized memory used for the thread buffers','line_number':99,'multiline':False]['text':' indicate if the memory pointed by ptr is initialized','line_number':101,'multiline':False]['text':' range from extract the buffers for the threads','line_number':103,'multiline':False]['text':' number of threads to use','line_number':105,'multiline':False]['text':'','line_number':107,'multiline':False]['text':'------------------------------------------------------------------------','line_number':108,'multiline':False]['text':'                F U N C T I O N S','line_number':109,'multiline':False]['text':'------------------------------------------------------------------------','line_number':110,'multiline':False]['text':'','line_number':128,'multiline':False]['text':'------------------------------------------------------------------------','line_number':129,'multiline':False]['text':'  function :destroy_all','line_number':130,'multiline':False]['text':'/ @brief destructor all the data structures of the class (if the memory','line_number':131,'multiline':False]['text':'/        is constructed, is destroyed) and  return the uninitialized','line_number':132,'multiline':False]['text':'/        memory','line_number':133,'multiline':False]['text':'------------------------------------------------------------------------','line_number':134,'multiline':False]['text':'','line_number':148,'multiline':False]['text':'------------------------------------------------------------------------','line_number':149,'multiline':False]['text':'  function :~block_indirect_sort','line_number':150,'multiline':False]['text':'/ @brief destructor of the class (if the memory is constructed, is','line_number':151,'multiline':False]['text':'/        destroyed) and  return the uninitialized memory','line_number':152,'multiline':False]['text':'------------------------------------------------------------------------','line_number':153,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':164,'multiline':False]['text':' End class block_indirect_sort','line_number':165,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':166,'multiline':False]['text':'','line_number':167,'multiline':False]['text':'############################################################################','line_number':168,'multiline':False]['text':'                                                                          ##','line_number':169,'multiline':False]['text':'                                                                          ##','line_number':170,'multiline':False]['text':'            N O N     I N L I N E      F U N C T I O N S                  ##','line_number':171,'multiline':False]['text':'                                                                          ##','line_number':172,'multiline':False]['text':'                                                                          ##','line_number':173,'multiline':False]['text':'############################################################################','line_number':174,'multiline':False]['text':'','line_number':175,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':176,'multiline':False]['text':'  function : block_indirect_sort','line_number':177,'multiline':False]['text':'/ @brief begin with the execution of the functions stored in works','line_number':178,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':179,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':180,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':181,'multiline':False]['text':'/               iterators','line_number':182,'multiline':False]['text':'/ @param nthr : Number of threads to use in the process.When this value','line_number':183,'multiline':False]['text':'/               is lower than 2, the sorting is done with 1 thread','line_number':184,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':185,'multiline':False]['text':'------------------- check if sort -----------------------------------','line_number':198,'multiline':False]['text':'------------------- check if reverse sort ---------------------------','line_number':204,'multiline':False]['text':'---------------- check if only single thread -----------------------','line_number':220,'multiline':False]['text':'intro_sort (first, last, bk.cmp);','line_number':230,'multiline':False]['text':'----------- creation of the temporary buffer --------------------','line_number':235,'multiline':False]['text':' creation of the buffers for the threads','line_number':247,'multiline':False]['text':' Insert the first work in the stack','line_number':254,'multiline':False]['text':'---------------------------------------------------------------------','line_number':263,'multiline':False]['text':'                    PROCESS','line_number':264,'multiline':False]['text':'---------------------------------------------------------------------','line_number':265,'multiline':False]['text':' The function launched with the futures is "execute the functions of','line_number':268,'multiline':False]['text':' the stack until this->counter is zero','line_number':269,'multiline':False]['text':' vbuf[i] is the memory from the main thread for to configure the','line_number':270,'multiline':False]['text':' thread local buffer','line_number':271,'multiline':False]['text':'','line_number':288,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':289,'multiline':False]['text':'  function : split_rage','line_number':290,'multiline':False]['text':'/ @brief this function splits a range of positions in the index, and','line_number':291,'multiline':False]['text':'/        depending of the size, sort directly or make to a recursive call','line_number':292,'multiline':False]['text':'/        to split_range','line_number':293,'multiline':False]['text':'/ @param pos_index1 : first position in the index','line_number':294,'multiline':False]['text':'/ @param pos_index2 : position after the last in the index','line_number':295,'multiline':False]['text':'/ @param level_thread : depth of the call. When 0 sort the blocks','line_number':296,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':297,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':304,'multiline':False]['text':' In the blocks not sorted, the physical position is the logical position','line_number':305,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':306,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':319,'multiline':False]['text':' Insert in the stack the work for the second part, and the actual thread,','line_number':320,'multiline':False]['text':' execute the first part','line_number':321,'multiline':False]['text':'-------------------------------------------------------------------------','line_number':322,'multiline':False]['text':'','line_number':351,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':352,'multiline':False]['text':'  function : start_function','line_number':353,'multiline':False]['text':'/ @brief this function init the process. When the number of threads is lower','line_number':354,'multiline':False]['text':'/        than a predefined value, sort the elements with a parallel pdqsort.','line_number':355,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':356,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':374,'multiline':False]['text':'  function block_indirect_sort_call','line_number':375,'multiline':False]['text':'/ @brief This class is select the block size in the block_indirect_sort','line_number':376,'multiline':False]['text':'/        algorithm depending of the type and size of the data to sort','line_number':377,'multiline':False]['text':'/','line_number':378,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':379,'multiline':False]['text':'','line_number':397,'multiline':False]['text':'/---------------------------------------------------------------------------','line_number':398,'multiline':False]['text':'/ @struct block_indirect_sort_call','line_number':399,'multiline':False]['text':'/ @brief This class is select the block size in the block_indirect_sort','line_number':400,'multiline':False]['text':'/        algorithm depending of the type and size of the data to sort','line_number':401,'multiline':False]['text':'/','line_number':402,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':403,'multiline':False]['text':'','line_number':413,'multiline':False]['text':'****************************************************************************','line_number':414,'multiline':False]['text':'    End namespace blk_detail','line_number':415,'multiline':False]['text':'****************************************************************************','line_number':416,'multiline':False]['text':'','line_number':417,'multiline':False]['text':'','line_number':419,'multiline':False]['text':'############################################################################','line_number':420,'multiline':False]['text':'                                                                          ##','line_number':421,'multiline':False]['text':'                                                                          ##','line_number':422,'multiline':False]['text':'               B L O C K _ I N D I R E C T _ S O R T                      ##','line_number':423,'multiline':False]['text':'                                                                          ##','line_number':424,'multiline':False]['text':'                                                                          ##','line_number':425,'multiline':False]['text':'############################################################################','line_number':426,'multiline':False]['text':'','line_number':427,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':428,'multiline':False]['text':'  function : block_indirect_sort','line_number':429,'multiline':False]['text':'/ @brief invocation of block_indirtect_sort with 2 parameters','line_number':430,'multiline':False]['text':'/','line_number':431,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':432,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':433,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':434,'multiline':False]['text':'','line_number':443,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':444,'multiline':False]['text':'  function : block_indirect_sort','line_number':445,'multiline':False]['text':'/ @brief invocation of block_indirtect_sort with 3 parameters. The third is ','line_number':446,'multiline':False]['text':'/        the number of threads','line_number':447,'multiline':False]['text':'/','line_number':448,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':449,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':450,'multiline':False]['text':'/ @param nthread : Number of threads to use in the process. When this value','line_number':451,'multiline':False]['text':'/                  is lower than 2, the sorting is done with 1 thread','line_number':452,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':453,'multiline':False]['text':'','line_number':460,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':461,'multiline':False]['text':'  function : block_indirect_sort','line_number':462,'multiline':False]['text':'/ @brief invocation of block_indirtect_sort with 3 parameters. The third is ','line_number':463,'multiline':False]['text':'/        the comparison object','line_number':464,'multiline':False]['text':'/','line_number':465,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':466,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':467,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':468,'multiline':False]['text':'/               iterators','line_number':469,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':470,'multiline':False]['text':'','line_number':479,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':480,'multiline':False]['text':'  function : block_indirect_sort','line_number':481,'multiline':False]['text':'/ @brief invocation of block_indirtect_sort with 4 parameters. ','line_number':482,'multiline':False]['text':'/','line_number':483,'multiline':False]['text':'/ @param first : iterator to the first element of the range to sort','line_number':484,'multiline':False]['text':'/ @param last : iterator after the last element to the range to sort','line_number':485,'multiline':False]['text':'/ @param comp : object for to compare two elements pointed by Iter_t','line_number':486,'multiline':False]['text':'/               iterators','line_number':487,'multiline':False]['text':'/ @param nthread : Number of threads to use in the process. When this value','line_number':488,'multiline':False]['text':'/                  is lower than 2, the sorting is done with 1 thread','line_number':489,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':490,'multiline':False]['text':'','line_number':497,'multiline':False]['text':'****************************************************************************','line_number':498,'multiline':False]['text':'    End namespace sort','line_number':499,'multiline':False]['text':'    End namespace boost','line_number':500,'multiline':False]['text':'****************************************************************************','line_number':501,'multiline':False]['text':'','line_number':502,'multiline':False]