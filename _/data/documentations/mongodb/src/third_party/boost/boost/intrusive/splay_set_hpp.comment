['text':'///////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga  2007-2014','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/intrusive for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'! The class template splay_set is an intrusive container, that mimics most of','line_number':34,'multiline':False]['text':'! the interface of std::set as described in the C++ standard.','line_number':35,'multiline':False]['text':'!','line_number':36,'multiline':False]['text':'! The template parameter \c T is the type to be managed by the container.','line_number':37,'multiline':False]['text':'! The user can specify additional options and if no options are provided','line_number':38,'multiline':False]['text':'! default options are used.','line_number':39,'multiline':False]['text':'!','line_number':40,'multiline':False]['text':'! The container supports the following options:','line_number':41,'multiline':False]['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':42,'multiline':False]['text':'! \c constant_time_size<>, \c size_type<> and','line_number':43,'multiline':False]['text':'! \c compare<>.','line_number':44,'multiline':False]['text':'/ @cond','line_number':55,'multiline':False]['text':'/ @endcond','line_number':60,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree()','line_number':89,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(const key_compare &,const value_traits &)','line_number':94,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':99,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(splaytree &&)','line_number':107,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::operator=(splaytree &&)','line_number':112,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::~splaytree()','line_number':117,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::begin()','line_number':120,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::begin()const','line_number':123,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::cbegin()const','line_number':126,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::end()','line_number':129,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::end()const','line_number':132,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::cend()const','line_number':135,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rbegin()','line_number':138,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rbegin()const','line_number':141,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::crbegin()const','line_number':144,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rend()','line_number':147,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rend()const','line_number':150,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::crend()const','line_number':153,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::root()','line_number':156,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::root()const','line_number':159,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::croot()const','line_number':162,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_end_iterator(iterator)','line_number':165,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_end_iterator(const_iterator)','line_number':168,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_iterator(iterator)','line_number':171,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_iterator(const_iterator)','line_number':174,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::key_comp()const','line_number':177,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::value_comp()const','line_number':180,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::empty()const','line_number':183,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::size()const','line_number':186,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::swap','line_number':189,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clone_from(const splaytree&,Cloner,Disposer)','line_number':192,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':200,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clone_from(splaytree&&,Cloner,Disposer)','line_number':202,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique(reference)','line_number':207,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique(const_iterator,reference)','line_number':211,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::insert_unique_check(const key_type&,insert_commit_data&)','line_number':215,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::insert_unique_check(const_iterator,const key_type&,insert_commit_data&)','line_number':220,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique_check(const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':226,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique_check(const_iterator,const KeyType&,KeyTypeKeyCompare,insert_commit_data&)','line_number':232,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique(Iterator,Iterator)','line_number':239,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_unique_commit','line_number':244,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_before','line_number':249,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::push_back','line_number':252,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::push_front','line_number':255,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const_iterator)','line_number':258,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const_iterator,const_iterator)','line_number':261,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const key_type &)','line_number':264,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':267,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const_iterator,Disposer)','line_number':271,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':275,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const key_type &, Disposer)','line_number':279,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':283,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clear','line_number':287,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clear_and_dispose','line_number':290,'multiline':False]['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':294,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const key_type &)const','line_number':296,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':300,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const key_type &)const','line_number':307,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':310,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const key_type &)','line_number':314,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':317,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const key_type &)const','line_number':321,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':324,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const key_type &)','line_number':328,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':331,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const key_type &)const','line_number':335,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':338,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const key_type &)','line_number':342,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const KeyType&,KeyTypeKeyCompare)','line_number':345,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const key_type &)const','line_number':349,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':352,'multiline':False]['text':'   #ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':356,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::equal_range(const key_type &)','line_number':358,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':362,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::equal_range(const key_type &)const','line_number':367,'multiline':False]['text':'! @copydoc ::boost::intrusive::rbtree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':372,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const key_type&,const key_type&,bool,bool)','line_number':380,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':384,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const key_type&,const key_type&,bool,bool)const','line_number':389,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':393,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::s_iterator_to(reference)','line_number':398,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::s_iterator_to(const_reference)','line_number':401,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::iterator_to(reference)','line_number':404,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::iterator_to(const_reference)const','line_number':407,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::init_node(reference)','line_number':410,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::unlink_leftmost_without_rebalance','line_number':413,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::replace_node','line_number':416,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::remove_node','line_number':419,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_up(iterator)','line_number':422,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_down(const KeyType&,KeyTypeKeyCompare)','line_number':425,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_down(const key_type &key)','line_number':429,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rebalance','line_number':432,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rebalance_subtree','line_number':435,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::merge_unique','line_number':438,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::merge_unique','line_number':442,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':457,'multiline':False]['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':477,'multiline':False]['text':'! Helper metafunction to define a \c splay_set that yields to the same type when the','line_number':479,'multiline':False]['text':'! same options (either explicitly or implicitly) are used.','line_number':480,'multiline':False]['text':'/ @cond','line_number':490,'multiline':False]['text':'/ @endcond','line_number':511,'multiline':False]['text':'Assert if passed value traits are compatible with the type','line_number':546,'multiline':False]['text':'! The class template splay_multiset is an intrusive container, that mimics most of','line_number':594,'multiline':False]['text':'! the interface of std::multiset as described in the C++ standard.','line_number':595,'multiline':False]['text':'!','line_number':596,'multiline':False]['text':'! The template parameter \c T is the type to be managed by the container.','line_number':597,'multiline':False]['text':'! The user can specify additional options and if no options are provided','line_number':598,'multiline':False]['text':'! default options are used.','line_number':599,'multiline':False]['text':'!','line_number':600,'multiline':False]['text':'! The container supports the following options:','line_number':601,'multiline':False]['text':'! \c base_hook<>/member_hook<>/value_traits<>,','line_number':602,'multiline':False]['text':'! \c constant_time_size<>, \c size_type<> and','line_number':603,'multiline':False]['text':'! \c compare<>.','line_number':604,'multiline':False]['text':'/ @cond','line_number':615,'multiline':False]['text':'/ @endcond','line_number':620,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree()','line_number':649,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(const key_compare &,const value_traits &)','line_number':654,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(bool,Iterator,Iterator,const key_compare &,const value_traits &)','line_number':659,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splaytree(splaytree &&)','line_number':667,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::operator=(splaytree &&)','line_number':672,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::~splaytree()','line_number':677,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::begin()','line_number':680,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::begin()const','line_number':683,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::cbegin()const','line_number':686,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::end()','line_number':689,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::end()const','line_number':692,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::cend()const','line_number':695,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rbegin()','line_number':698,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rbegin()const','line_number':701,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::crbegin()const','line_number':704,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rend()','line_number':707,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rend()const','line_number':710,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::crend()const','line_number':713,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::root()','line_number':716,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::root()const','line_number':719,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::croot()const','line_number':722,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_end_iterator(iterator)','line_number':725,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_end_iterator(const_iterator)','line_number':728,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_iterator(iterator)','line_number':731,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::container_from_iterator(const_iterator)','line_number':734,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::key_comp()const','line_number':737,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::value_comp()const','line_number':740,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::empty()const','line_number':743,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::size()const','line_number':746,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::swap','line_number':749,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clone_from(const splaytree&,Cloner,Disposer)','line_number':752,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':760,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clone_from(splaytree&&,Cloner,Disposer)','line_number':762,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_equal(reference)','line_number':767,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_equal(const_iterator,reference)','line_number':771,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_equal(Iterator,Iterator)','line_number':775,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::insert_before','line_number':781,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::push_back','line_number':784,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::push_front','line_number':787,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const_iterator)','line_number':790,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const_iterator,const_iterator)','line_number':793,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const key_type&)','line_number':796,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase(const KeyType&,KeyTypeKeyCompare)','line_number':799,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const_iterator,Disposer)','line_number':803,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const_iterator,const_iterator,Disposer)','line_number':807,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const key_type&, Disposer)','line_number':811,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::erase_and_dispose(const KeyType&,KeyTypeKeyCompare,Disposer)','line_number':815,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clear','line_number':819,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::clear_and_dispose','line_number':822,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const key_type&)','line_number':826,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::count(const KeyType&,KeyTypeKeyCompare)const','line_number':829,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const key_type&)','line_number':833,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const KeyType&,KeyTypeKeyCompare)','line_number':836,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const key_type&)const','line_number':840,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::lower_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':843,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const key_type&)','line_number':847,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const KeyType&,KeyTypeKeyCompare)','line_number':850,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const key_type&)const','line_number':854,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::upper_bound(const KeyType&,KeyTypeKeyCompare)const','line_number':857,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const key_type&)','line_number':861,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const KeyType&,KeyTypeKeyCompare)','line_number':864,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const key_type&)const','line_number':868,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::find(const KeyType&,KeyTypeKeyCompare)const','line_number':871,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::equal_range(const key_type&)','line_number':875,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::equal_range(const KeyType&,KeyTypeKeyCompare)','line_number':878,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::equal_range(const key_type&)const','line_number':882,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::equal_range(const KeyType&,KeyTypeKeyCompare)const','line_number':886,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const key_type&, const key_type&,bool,bool)','line_number':891,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)','line_number':895,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const key_type&, const key_type&,bool,bool)const','line_number':900,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::bounded_range(const KeyType&,const KeyType&,KeyTypeKeyCompare,bool,bool)const','line_number':904,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::s_iterator_to(reference)','line_number':909,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::s_iterator_to(const_reference)','line_number':912,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::iterator_to(reference)','line_number':915,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::iterator_to(const_reference)const','line_number':918,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::init_node(reference)','line_number':921,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::unlink_leftmost_without_rebalance','line_number':924,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::replace_node','line_number':927,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::remove_node','line_number':930,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_up(iterator)','line_number':933,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_down(const KeyType&,KeyTypeKeyCompare)','line_number':936,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::splay_down(const key_type &key)','line_number':940,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rebalance','line_number':943,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::rebalance_subtree','line_number':946,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::merge_equal','line_number':949,'multiline':False]['text':'! @copydoc ::boost::intrusive::splaytree::merge_equal','line_number':953,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DOXYGEN_INVOKED','line_number':967,'multiline':False]['text':'#if defined(BOOST_INTRUSIVE_DOXYGEN_INVOKED)','line_number':987,'multiline':False]['text':'! Helper metafunction to define a \c splay_multiset that yields to the same type when the','line_number':989,'multiline':False]['text':'! same options (either explicitly or implicitly) are used.','line_number':990,'multiline':False]['text':'/ @cond','line_number':1000,'multiline':False]['text':'/ @endcond','line_number':1021,'multiline':False]['text':'Assert if passed value traits are compatible with the type','line_number':1057,'multiline':False]['text':'namespace intrusive','line_number':1105,'multiline':False]['text':'namespace boost','line_number':1106,'multiline':False]['text':'BOOST_INTRUSIVE_SPLAY_SET_HPP','line_number':1110,'multiline':False]