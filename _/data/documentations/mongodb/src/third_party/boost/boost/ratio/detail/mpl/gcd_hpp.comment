['text':'//////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Copyright Vicente J. Botet Escriba 2010','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/mpl for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'//////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':' Workaround for error: the type of partial specialization template parameter constant "n2"','line_number':72,'multiline':False]['text':' depends on another template parameter','line_number':73,'multiline':False]['text':' Note: this solution could be wrong for n1 or n2 = [2**63 .. 2**64-1]','line_number':74,'multiline':False]['text':' defined(BOOST_MPL_CFG_NO_DEPENDENT_NONTYPE_PARAMETER_IN_PARTIAL_SPEC)','line_number':91,'multiline':False]['text':'~ T1,','line_number':98,'multiline':False]['text':' defined(BOOST_MPL_CFG_NO_DEPENDENT_NONTYPE_PARAMETER_IN_PARTIAL_SPEC)','line_number':109,'multiline':False]['text':' BOOST_MPL_GCD_HPP_INCLUDED','line_number':124,'multiline':False]