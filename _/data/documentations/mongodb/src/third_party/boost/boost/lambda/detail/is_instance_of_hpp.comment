['text':' Boost Lambda Library - is_instance_of.hpp ---------------------','line_number':1,'multiline':False]['text':' Copyright (C) 2001 Jaakko Jarvi (jaakko.jarvi@cs.utu.fi)','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':5,'multiline':False]['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' For more information, see www.boost.org','line_number':9,'multiline':False]['text':' ---------------------------------------------------------------','line_number':11,'multiline':False]['text':' for BOOST_STATIC_CONSTANT','line_number':16,'multiline':False]['text':' for is_convertible','line_number':17,'multiline':False]['text':' is_instance_of --------------------------------','line_number':21,'multiline':False]['text':' ','line_number':22,'multiline':False]['text':' is_instance_of_n<A, B>::value is true, if type A is ','line_number':23,'multiline':False]['text':' an instantiation of a template B, or A derives from an instantiation ','line_number':24,'multiline':False]['text':' of template B','line_number':25,'multiline':False]['text':'','line_number':26,'multiline':False]['text':' n is the number of template arguments for B','line_number':27,'multiline':False]['text':' ','line_number':28,'multiline':False]['text':' Example:','line_number':29,'multiline':False]['text':' is_instance_of_2<std::istream, basic_stream>::value == true','line_number':30,'multiline':False]['text':' The original implementation was somewhat different, with different versions','line_number':32,'multiline':False]['text':' for different compilers. However, there was still a problem','line_number':33,'multiline':False]['text':' with gcc.3.0.2 and 3.0.3 compilers, which didn't think regard','line_number':34,'multiline':False]['text':' is_instance_of_N<...>::value was a constant.','line_number':35,'multiline':False]['text':' John Maddock suggested the way around this problem by building ','line_number':36,'multiline':False]['text':' is_instance_of templates using boost::is_convertible.','line_number':37,'multiline':False]['text':' Now we only have one version of is_instance_of templates, which delagate','line_number':38,'multiline':False]['text':' all the nasty compiler tricks to is_convertible. ','line_number':39,'multiline':False]['text':' end detail ','line_number':65,'multiline':True]['text':' Generate the traits for 1-4 argument templates','line_number':83,'multiline':False]['text':' lambda','line_number':96,'multiline':False]['text':' boost','line_number':97,'multiline':False]