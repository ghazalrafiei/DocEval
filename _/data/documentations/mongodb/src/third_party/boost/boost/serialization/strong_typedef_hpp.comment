['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]['text':' strong_typedef.hpp:','line_number':10,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':12,'multiline':False]['text':' (C) Copyright 2016 Ashish Sadanandan','line_number':13,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':14,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':15,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':16,'multiline':False]['text':'  See http://www.boost.org/libs/serialization for updates, documentation, and revision history.','line_number':18,'multiline':False]['text':' macro used to implement a strong typedef.  strong typedef','line_number':20,'multiline':False]['text':' guarentees that two types are distinguised even though the','line_number':21,'multiline':False]['text':' share the same underlying implementation.  typedef does not create','line_number':22,'multiline':False]['text':' a new type.  BOOST_STRONG_TYPEDEF(T, D) creates a new type named D','line_number':23,'multiline':False]['text':' that operates as a type T.','line_number':24,'multiline':False]['text':' BOOST_SERIALIZATION_STRONG_TYPEDEF_HPP','line_number':50,'multiline':False]