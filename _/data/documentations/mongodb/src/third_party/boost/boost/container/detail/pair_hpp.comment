['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2013.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'swap','line_number':37,'multiline':False]['text':'pair','line_number':39,'multiline':False]['text':'namespace detail {','line_number':80,'multiline':False]['text':'Avoid sanitizer errors on references to null pointers','line_number':92,'multiline':False]['text':'! The piecewise_construct_t struct is an empty structure type used as a unique type to','line_number':96,'multiline':False]['text':'! disambiguate used to disambiguate between different functions that take two tuple arguments.','line_number':97,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DOXYGEN_INVOKED','line_number':100,'multiline':False]['text':'! A instance of type','line_number':102,'multiline':False]['text':'! piecewise_construct_t','line_number':103,'multiline':False]['text':'/@cond','line_number':106,'multiline':False]['text':'Avoid warnings of unused "piecewise_construct"','line_number':112,'multiline':False]['text':'to enable ADL','line_number':120,'multiline':False]['text':'/@endcond','line_number':122,'multiline':False]['text':'Libc++, in some versions, has an ABI breakage that needs some','line_number':125,'multiline':False]['text':'padding in dtl::pair, as "std::pair::first" is not at offset zero.','line_number':126,'multiline':False]['text':'See: https://reviews.llvm.org/D56357 for more information.','line_number':127,'multiline':False]['text':'','line_number':128,'multiline':False]['text':'Default constructor','line_number':165,'multiline':False]['text':'pair copy assignment','line_number':172,'multiline':False]['text':'pair move constructor','line_number':179,'multiline':False]['text':'pair from two values','line_number':200,'multiline':False]['text':'And now compatibility with std::pair','line_number':216,'multiline':False]['text':'piecewise construction from boost::tuple','line_number':252,'multiline':False]['text':'','line_number':260,'multiline':False]['text':'BOOST_NO_CXX11_VARIADIC_TEMPLATES','line_number':264,'multiline':False]['text':'piecewise construction from boost::tuple','line_number':266,'multiline':False]['text':'','line_number':282,'multiline':False]['text':'piecewise construction from variadic tuple (with delegating constructors)','line_number':286,'multiline':False]['text':'piecewise construction from variadic tuple (suboptimal, without delegating constructors)','line_number':305,'multiline':False]['text':'BOOST_NO_CXX11_VARIADIC_TEMPLATES','line_number':324,'multiline':False]['text':'MSVC 2010 tuple implementation','line_number':326,'multiline':False]['text':'','line_number':337,'multiline':False]['text':'MSVC 2012 tuple implementation','line_number':347,'multiline':False]['text':'','line_number':358,'multiline':False]['text':'pair copy assignment','line_number':364,'multiline':False]['text':'pair move assignment','line_number':372,'multiline':False]['text':'std::pair copy assignment','line_number':405,'multiline':False]['text':'std::pair move assignment','line_number':421,'multiline':False]['text':'swap','line_number':437,'multiline':False]['text':'namespace dtl {','line_number':478,'multiline':False]['text':'namespace container {','line_number':479,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':498,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':499,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':506,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':507,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':517,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':518,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':525,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':526,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':536,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':537,'multiline':False]['text':'This specialization is needed to avoid instantiation of pair in','line_number':544,'multiline':False]['text':'is_class, and allow recursive maps.','line_number':545,'multiline':False]['text':'Triviality of pair','line_number':551,'multiline':False]['text':'namespace move_detail{','line_number':605,'multiline':False]['text':'namespace boost {','line_number':607,'multiline':False]['text':'#ifndef BOOST_CONTAINER_DETAIL_PAIR_HPP','line_number':611,'multiline':False]