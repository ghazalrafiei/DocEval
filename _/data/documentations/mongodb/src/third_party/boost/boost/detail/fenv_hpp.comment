['text':'=============================================================================
    Copyright (c) 2010      Bryce Lelbach

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':' If we're using clang + glibc, we have to get hacky.
 * See http://llvm.org/bugs/show_bug.cgi?id=6907 ','line_number':17,'multiline':True]['text':' up to version 5 ','line_number':20,'multiline':True]['text':' version 6 + ','line_number':21,'multiline':True]['text':' MinGW (32-bit) has a bug in mingw32/bits/c++config.h, it does not define _GLIBCXX_HAVE_FENV_H,','line_number':66,'multiline':False]['text':' which prevents the C fenv.h header contents to be included in the C++ wrapper header fenv.h. This is at least','line_number':67,'multiline':False]['text':' the case with gcc 4.8.1 packages tested so far, up to 4.8.1-4. Note that there is no issue with','line_number':68,'multiline':False]['text':' MinGW-w64.','line_number':69,'multiline':False]['text':' To work around the bug we avoid including the C++ wrapper header and include the C header directly','line_number':70,'multiline':False]['text':' and import all relevant symbols into std:: ourselves.','line_number':71,'multiline':False]['text':' if we're not using GNU's C stdlib, fenv.h should work with clang ','line_number':91,'multiline':True]['text':' lol suncc ','line_number':93,'multiline':True]['text':' BOOST_DETAIL_FENV_HPP ','line_number':101,'multiline':True]