['text':'
 * Distributed under the Boost Software License, Version 1.0.
 * (See accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * Copyright (c) 2011 Helge Bahmann
 * Copyright (c) 2013 Tim Blechmann
 * Copyright (c) 2014 Andrey Semashev
 ','line_number':1,'multiline':True]['text':'!
 * \file   atomic/detail/ops_gcc_sync.hpp
 *
 * This header contains implementation of the \c operations template.
 ','line_number':10,'multiline':True]['text':' GCC docs mention that not all architectures may support full exchange semantics for this intrinsic. However, GCC's implementation of','line_number':95,'multiline':False]['text':' std::atomic<> uses this intrinsic unconditionally. We do so as well. In case if some architectures actually don't support this, we can always','line_number':96,'multiline':False]['text':' add a check here and fall back to a CAS loop.','line_number':97,'multiline':False]['text':' namespace detail','line_number':236,'multiline':False]['text':' namespace atomics','line_number':237,'multiline':False]['text':' namespace boost','line_number':238,'multiline':False]['text':' BOOST_ATOMIC_DETAIL_OPS_GCC_SYNC_HPP_INCLUDED_','line_number':240,'multiline':False]