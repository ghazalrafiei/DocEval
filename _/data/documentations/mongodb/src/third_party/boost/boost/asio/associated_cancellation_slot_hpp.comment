['text':'','line_number':1,'multiline':False]['text':' associated_cancellation_slot.hpp','line_number':2,'multiline':False]['text':' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2003-2022 Christopher M. Kohlhoff (chris at kohlhoff dot com)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':7,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':' defined(_MSC_VER) && (_MSC_VER >= 1200)','line_number':16,'multiline':False]['text':' namespace detail','line_number':81,'multiline':False]['text':'/ Traits type used to obtain the cancellation_slot associated with an object.','line_number':83,'multiline':False]['text':'*
 * A program may specialise this traits type if the @c T template parameter in
 * the specialisation is a user-defined type. The template parameter @c
 * CancellationSlot shall be a type meeting the CancellationSlot requirements.
 *
 * Specialisations shall meet the following requirements, where @c t is a const
 * reference to an object of type @c T, and @c s is an object of type @c
 * CancellationSlot.
 *
 * @li Provide a nested typedef @c type that identifies a type meeting the
 * CancellationSlot requirements.
 *
 * @li Provide a noexcept static member function named @c get, callable as @c
 * get(t) and with return type @c type.
 *
 * @li Provide a noexcept static member function named @c get, callable as @c
 * get(t,s) and with return type @c type.
 ','line_number':84,'multiline':True]['text':' !defined(GENERATING_DOCUMENTATION)','line_number':106,'multiline':False]['text':'/ If @c T has a nested type @c cancellation_slot_type,','line_number':109,'multiline':False]['text':'/ <tt>T::cancellation_slot_type</tt>. Otherwise','line_number':110,'multiline':False]['text':'/ @c CancellationSlot.','line_number':111,'multiline':False]['text':'/ If @c T has a nested type @c cancellation_slot_type, returns','line_number':114,'multiline':False]['text':'/ <tt>t.get_cancellation_slot()</tt>. Otherwise returns @c s.','line_number':115,'multiline':False]['text':' defined(GENERATING_DOCUMENTATION)','line_number':118,'multiline':False]['text':'/ Helper function to obtain an object's associated cancellation_slot.','line_number':121,'multiline':False]['text':'*
 * @returns <tt>associated_cancellation_slot<T>::get(t)</tt>
 ','line_number':122,'multiline':True]['text':'/ Helper function to obtain an object's associated cancellation_slot.','line_number':132,'multiline':False]['text':'*
 * @returns <tt>associated_cancellation_slot<T,
 * CancellationSlot>::get(t, st)</tt>
 ','line_number':133,'multiline':True]['text':' defined(BOOST_ASIO_HAS_ALIAS_TEMPLATES)','line_number':152,'multiline':False]['text':' namespace detail','line_number':174,'multiline':False]['text':' namespace asio','line_number':175,'multiline':False]['text':' namespace boost','line_number':176,'multiline':False]['text':' BOOST_ASIO_ASSOCIATED_CANCELLATION_SLOT_HPP','line_number':180,'multiline':False]