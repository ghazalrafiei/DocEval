['text':'
 *          Copyright Andrey Semashev 2007 - 2015.
 * Distributed under the Boost Software License, Version 1.0.
 *    (See accompanying file LICENSE_1_0.txt or copy at
 *          http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'!
 * \file   channel_logger.hpp
 * \author Andrey Semashev
 * \date   28.02.2008
 *
 * The header contains implementation of a logger with channel support.
 ','line_number':7,'multiline':True]['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':21,'multiline':False]['text':'! Narrow-char logger with channel support','line_number':43,'multiline':False]['text':'! Narrow-char thread-safe logger with channel support','line_number':65,'multiline':False]['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':85,'multiline':False]['text':' BOOST_LOG_USE_CHAR','line_number':87,'multiline':False]['text':'! Wide-char logger with channel support','line_number':91,'multiline':False]['text':'! Wide-char thread-safe logger with channel support','line_number':113,'multiline':False]['text':' !defined(BOOST_LOG_NO_THREADS)','line_number':133,'multiline':False]['text':' BOOST_LOG_USE_WCHAR_T','line_number':135,'multiline':False]['text':' BOOST_LOG_DOXYGEN_PASS','line_number':137,'multiline':False]['text':'!
 * \brief Narrow-char logger. Functionally equivalent to \c basic_channel_logger.
 *
 * See \c channel class template for a more detailed description
 ','line_number':139,'multiline':True]['text':'!
     * Default constructor
     ','line_number':154,'multiline':True]['text':'!
     * Copy constructor
     ','line_number':158,'multiline':True]['text':'!
     * Constructor with named arguments
     ','line_number':162,'multiline':True]['text':'!
     * The constructor creates the logger with the specified channel name
     *
     * \param channel The channel name
     ','line_number':167,'multiline':True]['text':'!
     * Assignment operator
     ','line_number':173,'multiline':True]['text':'!
     * Swaps two loggers
     ','line_number':177,'multiline':True]['text':'!
 * \brief Narrow-char thread-safe logger. Functionally equivalent to \c basic_channel_logger.
 *
 * See \c channel class template for a more detailed description
 ','line_number':183,'multiline':True]['text':'!
     * Default constructor
     ','line_number':198,'multiline':True]['text':'!
     * Copy constructor
     ','line_number':202,'multiline':True]['text':'!
     * Constructor with named arguments
     ','line_number':206,'multiline':True]['text':'!
     * The constructor creates the logger with the specified channel name
     *
     * \param channel The channel name
     ','line_number':211,'multiline':True]['text':'!
     * Assignment operator
     ','line_number':217,'multiline':True]['text':'!
     * Swaps two loggers
     ','line_number':221,'multiline':True]['text':'!
 * \brief Wide-char logger. Functionally equivalent to \c basic_channel_logger.
 *
 * See \c channel class template for a more detailed description
 ','line_number':227,'multiline':True]['text':'!
     * Default constructor
     ','line_number':242,'multiline':True]['text':'!
     * Copy constructor
     ','line_number':246,'multiline':True]['text':'!
     * Constructor with named arguments
     ','line_number':250,'multiline':True]['text':'!
     * The constructor creates the logger with the specified channel name
     *
     * \param channel The channel name
     ','line_number':255,'multiline':True]['text':'!
     * Assignment operator
     ','line_number':261,'multiline':True]['text':'!
     * Swaps two loggers
     ','line_number':265,'multiline':True]['text':'!
 * \brief Wide-char thread-safe logger. Functionally equivalent to \c basic_channel_logger.
 *
 * See \c channel class template for a more detailed description
 ','line_number':271,'multiline':True]['text':'!
     * Default constructor
     ','line_number':286,'multiline':True]['text':'!
     * Copy constructor
     ','line_number':290,'multiline':True]['text':'!
     * Constructor with named arguments
     ','line_number':294,'multiline':True]['text':'!
     * The constructor creates the logger with the specified channel name
     *
     * \param channel The channel name
     ','line_number':299,'multiline':True]['text':'!
     * Assignment operator
     ','line_number':305,'multiline':True]['text':'!
     * Swaps two loggers
     ','line_number':309,'multiline':True]['text':' BOOST_LOG_DOXYGEN_PASS','line_number':315,'multiline':False]['text':' namespace sources','line_number':317,'multiline':False]['text':' namespace log','line_number':319,'multiline':False]['text':' namespace boost','line_number':321,'multiline':False]['text':' BOOST_LOG_SOURCES_CHANNEL_LOGGER_HPP_INCLUDED_','line_number':325,'multiline':False]