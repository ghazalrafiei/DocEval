['text':' (C) Copyright 2008 CodeRage, LLC (turkanis at coderage dot com)','line_number':1,'multiline':False]['text':' (C) Copyright 2003-2007 Jonathan Turkanis','line_number':2,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':3,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)','line_number':4,'multiline':False]['text':' See http://www.boost.org/libs/iostreams for documentation.','line_number':6,'multiline':False]['text':' Note: custom allocators are not supported on VC6, since that compiler','line_number':8,'multiline':False]['text':' had trouble finding the function zlib_base::do_init.','line_number':9,'multiline':False]['text':' allocator.','line_number':19,'multiline':False]['text':' bad_alloc.','line_number':20,'multiline':False]['text':' MSVC, STATIC_CONSTANT, DEDUCED_TYPENAME, DINKUM.','line_number':21,'multiline':False]['text':' buffer size.','line_number':23,'multiline':False]['text':' failure, streamsize.','line_number':28,'multiline':False]['text':' Must come last.','line_number':33,'multiline':False]['text':' Temporary fix.','line_number':40,'multiline':False]['text':' Typedefs.','line_number':47,'multiline':False]['text':' Status codes','line_number':52,'multiline':False]['text':' Action codes','line_number':69,'multiline':False]['text':' Default values','line_number':74,'multiline':False]['text':' End namespace bzip2. ','line_number':80,'multiline':False]['text':'','line_number':82,'multiline':False]['text':' Class name: bzip2_params.','line_number':83,'multiline':False]['text':' Description: Encapsulates the parameters passed to deflateInit2','line_number':84,'multiline':False]['text':'      to customize compression.','line_number':85,'multiline':False]['text':'','line_number':86,'multiline':False]['text':' Non-explicit constructor for compression.','line_number':89,'multiline':False]['text':' Constructor for decompression.','line_number':95,'multiline':False]['text':' For compression.','line_number':101,'multiline':False]['text':' For decompression.','line_number':102,'multiline':False]['text':'','line_number':107,'multiline':False]['text':' Class name: bzip2_error.','line_number':108,'multiline':False]['text':' Description: Subclass of std::ios_base::failure thrown to indicate','line_number':109,'multiline':False]['text':'     bzip2 errors other than out-of-memory conditions.','line_number':110,'multiline':False]['text':'','line_number':111,'multiline':False]['text':' VC6 workaround (C2516)','line_number':137,'multiline':False]['text':' Actual type: bz_stream*.','line_number':186,'multiline':False]['text':'','line_number':190,'multiline':False]['text':' Template name: bzip2_compressor_impl','line_number':191,'multiline':False]['text':' Description: Model of SymmetricFilter implementing compression by','line_number':192,'multiline':False]['text':'      delegating to the libbzip2 function BZ_bzCompress.','line_number':193,'multiline':False]['text':'','line_number':194,'multiline':False]['text':' Guard to make sure filter() isn't called after it returns false.','line_number':211,'multiline':False]['text':'','line_number':214,'multiline':False]['text':' Template name: bzip2_compressor','line_number':215,'multiline':False]['text':' Description: Model of SymmetricFilter implementing decompression by','line_number':216,'multiline':False]['text':'      delegating to the libbzip2 function BZ_bzDecompress.','line_number':217,'multiline':False]['text':'','line_number':218,'multiline':False]['text':' Guard to make sure filter() isn't called after it returns false.','line_number':235,'multiline':False]['text':' End namespace detail.','line_number':238,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' Template name: bzip2_compressor','line_number':241,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':242,'multiline':False]['text':'      compression using libbzip2.','line_number':243,'multiline':False]['text':'','line_number':244,'multiline':False]['text':'','line_number':262,'multiline':False]['text':' Template name: bzip2_decompressor','line_number':263,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':264,'multiline':False]['text':'      decompression using libbzip2.','line_number':265,'multiline':False]['text':'','line_number':266,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':284,'multiline':False]['text':'------------------Implementation of bzip2_allocator-------------------------//','line_number':286,'multiline':False]['text':'------------------Implementation of bzip2_compressor_impl-------------------//','line_number':313,'multiline':False]['text':'------------------Implementation of bzip2_decompressor_impl-----------------//','line_number':353,'multiline':False]['text':' reset the stream if there are more characters','line_number':370,'multiline':False]['text':' End namespace detail.','line_number':404,'multiline':False]['text':'------------------Implementation of bzip2_decompressor----------------------//','line_number':406,'multiline':False]['text':'------------------Implementation of bzip2_decompressor----------------------//','line_number':414,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':422,'multiline':False]['text':' End namespaces iostreams, boost.','line_number':424,'multiline':False]['text':' Pops abi_suffix.hpp pragmas.','line_number':426,'multiline':False]['text':' #ifndef BOOST_IOSTREAMS_BZIP2_HPP_INCLUDED','line_number':431,'multiline':False]