['text':' boost random/gamma_distribution.hpp header file
 *
 * Copyright Jens Maurer 2002
 * Copyright Steven Watanabe 2010
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 ','line_number':1,'multiline':True]['text':' The algorithm is taken from Knuth','line_number':30,'multiline':False]['text':'*
 * The gamma distribution is a continuous distribution with two
 * parameters alpha and beta.  It produces values > 0.
 *
 * It has
 * \f$\displaystyle p(x) = x^{\alpha-1}\frac{e^{-x/\beta}}{\beta^\alpha\Gamma(\alpha)}\f$.
 ','line_number':32,'multiline':True]['text':'*
         * Constructs a @c param_type object from the "alpha" and "beta"
         * parameters.
         *
         * Requires: alpha > 0 && beta > 0
         ','line_number':51,'multiline':True]['text':'* Returns the "alpha" parameter of the distribution. ','line_number':63,'multiline':True]['text':'* Returns the "beta" parameter of the distribution. ','line_number':65,'multiline':True]['text':'* Writes the parameters to a @c std::ostream. ','line_number':69,'multiline':True]['text':'* Reads the parameters from a @c std::istream. ','line_number':79,'multiline':True]['text':'* Returns true if the two sets of parameters are the same. ','line_number':89,'multiline':True]['text':'* Returns true if the two sets fo parameters are different. ','line_number':94,'multiline':True]['text':'*
     * Creates a new gamma_distribution with parameters "alpha" and "beta".
     *
     * Requires: alpha > 0 && beta > 0
     ','line_number':108,'multiline':True]['text':'* Constructs a @c gamma_distribution from its parameters. ','line_number':122,'multiline':True]['text':' compiler-generated copy ctor and assignment operator are fine','line_number':129,'multiline':False]['text':'* Returns the "alpha" paramter of the distribution. ','line_number':131,'multiline':True]['text':'* Returns the "beta" parameter of the distribution. ','line_number':133,'multiline':True]['text':'* Returns the smallest value that the distribution can produce. ','line_number':135,'multiline':True]['text':' Returns the largest value that the distribution can produce. ','line_number':137,'multiline':True]['text':'* Returns the parameters of the distribution. ','line_number':141,'multiline':True]['text':'* Sets the parameters of the distribution. ','line_number':143,'multiline':True]['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':151,'multiline':True]['text':'*
     * Returns a random variate distributed according to
     * the gamma distribution.
     ','line_number':157,'multiline':True]['text':' allow for Koenig lookup','line_number':165,'multiline':False]['text':' Can we have a boost::mathconst please?','line_number':172,'multiline':False]['text':' alpha < 1.0 ','line_number':188,'multiline':True]['text':'* Writes a @c gamma_distribution to a @c std::ostream. ','line_number':214,'multiline':True]['text':'* Reads a @c gamma_distribution from a @c std::istream. ','line_number':224,'multiline':True]['text':'*
     * Returns true if the two distributions will produce identical
     * sequences of random variates given equal generators.
     ','line_number':234,'multiline':True]['text':'*
     * Returns true if the two distributions can produce different
     * sequences of random variates, given equal generators.
     ','line_number':246,'multiline':True]['text':'/ \cond hide_private_members','line_number':257,'multiline':False]['text':' allow for Koenig lookup','line_number':271,'multiline':False]['text':'/ \endcond','line_number':276,'multiline':False]['text':' some data precomputed from the parameters','line_number':281,'multiline':False]['text':' namespace random','line_number':286,'multiline':False]['text':' namespace boost','line_number':290,'multiline':False]['text':' BOOST_RANDOM_GAMMA_DISTRIBUTION_HPP','line_number':292,'multiline':False]