['text':' Copyright Vladimir Prus 2004.','line_number':1,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt','line_number':3,'multiline':False]['text':' or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':' This file defines template functions that are declared in','line_number':6,'multiline':False]['text':' ../value_semantic.hpp.','line_number':7,'multiline':False]['text':' forward declaration','line_number':11,'multiline':False]['text':' If v.size() > 1, throw validation_error. 
           If v.size() == 1, return v.front()
           Otherwise, returns a reference to a statically allocated
           empty string if 'allow_empty' and throws validation_error
           otherwise. ','line_number':50,'multiline':True]['text':' Throws multiple_occurrences if 'value' is not empty. ','line_number':70,'multiline':True]['text':'* Validates 's' and updates 'v'.
        @pre 'v' is either empty or in the state assigned by the previous
        invocation of 'validate'.
        The target type is specified via a parameter which has the type of 
        pointer to the desired type. This is workaround for compilers without
        partial template ordering, just like the last 'long/int' parameter.
    ','line_number':77,'multiline':True]['text':' For some reason, this declaration, which is require by the standard,','line_number':110,'multiline':False]['text':' cause msvc 7.1 to not generate code to specialization defined in','line_number':111,'multiline':False]['text':' value_semantic.cpp','line_number':112,'multiline':False]['text':'* Validates sequences. Allows multiple values per option occurrence
       and multiple occurrences. ','line_number':127,'multiline':True]['text':' We call validate so that if user provided
                   a validator for class T, we use it even
                   when parsing vector<T>.  ','line_number':143,'multiline':True]['text':'e','line_number':152,'multiline':True]['text':'* Validates optional arguments. ','line_number':158,'multiline':True]['text':' If no tokens were given, and the option accepts an implicit','line_number':178,'multiline':False]['text':' value, then assign the implicit value as the stored value;','line_number':179,'multiline':False]['text':' otherwise, validate the user-provided token(s).','line_number':180,'multiline':False]['text':' Explicit qualification is vc6 workaround.','line_number':191,'multiline':False]