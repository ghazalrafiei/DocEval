['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2015-2015. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/container for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'Needed to support smart references to value types','line_number':29,'multiline':False]['text':'This function object takes a KeyCompare function object','line_number':46,'multiline':False]['text':'and compares values that contains keys using KeyOfValue','line_number':47,'multiline':False]['text':'namespace intrusive{','line_number':183,'multiline':False]['text':'namespace boost{','line_number':184,'multiline':False]['text':'#ifdef BOOST_INTRUSIVE_DETAIL_TREE_VALUE_COMPARE_HPP','line_number':186,'multiline':False]