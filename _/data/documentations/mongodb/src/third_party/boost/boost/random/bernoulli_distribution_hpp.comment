['text':' boost random/bernoulli_distribution.hpp header file
 *
 * Copyright Jens Maurer 2000-2001
 * Copyright Steven Watanabe 2011
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 *
 * See http://www.boost.org for most recent version including documentation.
 *
 * $Id$
 *
 * Revision history
 *  2001-02-18  moved to individual header files
 ','line_number':1,'multiline':True]['text':'*
 * Instantiations of class template \bernoulli_distribution model a
 * \random_distribution. Such a random distribution produces bool values
 * distributed with probabilities P(true) = p and P(false) = 1-p. p is
 * the parameter of the distribution.
 ','line_number':28,'multiline':True]['text':' In principle, this could work with both integer and floating-point','line_number':38,'multiline':False]['text':' types.  Generating floating-point random numbers in the first','line_number':39,'multiline':False]['text':' place is probably more expensive, so use integer as input.','line_number':40,'multiline':False]['text':'* 
         * Constructs the parameters of the distribution.
         *
         * Requires: 0 <= p <= 1
         ','line_number':50,'multiline':True]['text':'* Returns the p parameter of the distribution. ','line_number':62,'multiline':True]['text':'* Writes the parameters to a std::ostream. ','line_number':65,'multiline':True]['text':'* Reads the parameters from a std::istream. ','line_number':72,'multiline':True]['text':'* Returns true if the two sets of parameters are equal. ','line_number':79,'multiline':True]['text':'* Returns true if the two sets of parameters are different. ','line_number':83,'multiline':True]['text':'* 
     * Constructs a \bernoulli_distribution object.
     * p is the parameter of the distribution.
     *
     * Requires: 0 <= p <= 1
     ','line_number':90,'multiline':True]['text':'*
     * Constructs \bernoulli_distribution from its parameters
     ','line_number':102,'multiline':True]['text':' compiler-generated copy ctor and assignment operator are fine','line_number':108,'multiline':False]['text':'*
     * Returns: The "p" parameter of the distribution.
     ','line_number':110,'multiline':True]['text':'* Returns the smallest value that the distribution can produce. ','line_number':115,'multiline':True]['text':'* Returns the largest value that the distribution can produce. ','line_number':118,'multiline':True]['text':'* Returns the parameters of the distribution. ','line_number':122,'multiline':True]['text':'* Sets the parameters of the distribution. ','line_number':124,'multiline':True]['text':'*
     * Effects: Subsequent uses of the distribution do not depend
     * on values produced by any engine prior to invoking reset.
     ','line_number':127,'multiline':True]['text':'*
     * Returns: a random variate distributed according to the
     * \bernoulli_distribution.
     ','line_number':133,'multiline':True]['text':'*
     * Returns: a random variate distributed according to the
     * \bernoulli_distribution with parameters specified by param.
     ','line_number':146,'multiline':True]['text':'*
     * Writes the parameters of the distribution to a @c std::ostream.
     ','line_number':156,'multiline':True]['text':'*
     * Reads the parameters of the distribution from a @c std::istream.
     ','line_number':165,'multiline':True]['text':'*
     * Returns true iff the two distributions will produce identical
     * sequences of values given equal generators.
     ','line_number':174,'multiline':True]['text':'*
     * Returns true iff the two distributions will produce different
     * sequences of values given equal generators.
     ','line_number':181,'multiline':True]['text':' namespace random','line_number':191,'multiline':False]['text':' namespace boost','line_number':195,'multiline':False]['text':' BOOST_RANDOM_BERNOULLI_DISTRIBUTION_HPP','line_number':197,'multiline':False]