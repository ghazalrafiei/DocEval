['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file sort_basic.hpp','line_number':2,'multiline':False]['text':'/ @brief Spin Sort algorithm','line_number':3,'multiline':False]['text':'/','line_number':4,'multiline':False]['text':'/ @author Copyright (c) 2016 Francisco Jos√© Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]['text':'/ @version 0.1','line_number':9,'multiline':False]['text':'/','line_number':10,'multiline':False]['text':'/ @remarks','line_number':11,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':12,'multiline':False]['text':'#include <boost/sort/spinsort/util/indirect.hpp>','line_number':16,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':35,'multiline':False]['text':'                USING SENTENCES','line_number':36,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':37,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':40,'multiline':False]['text':'  function : is_stable_sorted_forward','line_number':41,'multiline':False]['text':'/ @brief examine the elements in the range first, last if they are stable','line_number':42,'multiline':False]['text':'/        sorted, and return an iterator to the first element not sorted','line_number':43,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':44,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':45,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':46,'multiline':False]['text':'/ @return iterator to the first element not stable sorted. The number of','line_number':47,'multiline':False]['text':'/         elements sorted is the iterator returned minus first','line_number':48,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':49,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':62,'multiline':False]['text':'  function : is_reverse_stable_sorted_forward','line_number':63,'multiline':False]['text':'/ @brief examine the elements in the range first, last if they are reverse','line_number':64,'multiline':False]['text':'/        stable sorted, and return an iterator to the first element not','line_number':65,'multiline':False]['text':'/        reverse stable sorted','line_number':66,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':67,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':68,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':69,'multiline':False]['text':'/ @return iterator to the first element not  reverse stable sorted. The number','line_number':70,'multiline':False]['text':'/         of elements sorted is the iterator returned minus first','line_number':71,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':72,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':85,'multiline':False]['text':'  function : number_stable_sorted_forward','line_number':86,'multiline':False]['text':'/ @brief examine the elements in the range first, last if they are stable','line_number':87,'multiline':False]['text':'/        sorted, and return the number of elements sorted','line_number':88,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':89,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':90,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':91,'multiline':False]['text':'/ @param min_process : minimal number of elements to be consideer','line_number':92,'multiline':False]['text':'/ @return number of element sorted. I f the number is lower than min_process','line_number':93,'multiline':False]['text':'/         return 0','line_number':94,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':95,'multiline':False]['text':' sorted elements','line_number':106,'multiline':False]['text':' reverse sorted elements','line_number':113,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':123,'multiline':False]['text':'  function : is_stable_sorted_backward','line_number':124,'multiline':False]['text':'/ @brief examine the elements in the range first, last beginning at end, and','line_number':125,'multiline':False]['text':'/        if they are stablesorted, and return an iterator to the last element','line_number':126,'multiline':False]['text':'/        sorted','line_number':127,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':128,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':129,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':130,'multiline':False]['text':'/ @return iterator to the last element stable sorted. The number of','line_number':131,'multiline':False]['text':'/         elements sorted is the last minus the iterator returned','line_number':132,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':133,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':146,'multiline':False]['text':'  function : is_reverse_stable_sorted_backward','line_number':147,'multiline':False]['text':'/ @brief examine the elements in the range first, last beginning at end, and','line_number':148,'multiline':False]['text':'/        if they are stablesorted, and return an iterator to the last element','line_number':149,'multiline':False]['text':'/        sorted','line_number':150,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':151,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':152,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':153,'multiline':False]['text':'/ @return iterator to the last element stable sorted. The number of','line_number':154,'multiline':False]['text':'/         elements sorted is the last minus the iterator returned','line_number':155,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':156,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':170,'multiline':False]['text':'  function : number_stable_sorted_backward','line_number':171,'multiline':False]['text':'/ @brief examine the elements in the range first, last if they are stable','line_number':172,'multiline':False]['text':'/        sorted, and return the number of elements sorted','line_number':173,'multiline':False]['text':'/ @param first : iterator to the first element in the range','line_number':174,'multiline':False]['text':'/ @param last : ierator after the last element of the range','line_number':175,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':176,'multiline':False]['text':'/ @param min_process : minimal number of elements to be consideer','line_number':177,'multiline':False]['text':'/ @return number of element sorted. I f the number is lower than min_process','line_number':178,'multiline':False]['text':'/         return 0','line_number':179,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':180,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':203,'multiline':False]['text':'  function : internal_sort','line_number':204,'multiline':False]['text':'/ @brief this function divide r_input in two parts, sort it,and merge moving','line_number':205,'multiline':False]['text':'/        the elements to range_buf','line_number':206,'multiline':False]['text':'/ @param range_input : range with the elements to sort','line_number':207,'multiline':False]['text':'/ @param range_buffer : range with the elements sorted','line_number':208,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':209,'multiline':False]['text':'/ @param level : when is 1, sort with the insertionsort algorithm','line_number':210,'multiline':False]['text':'/                if not make a recursive call splitting the ranges','line_number':211,'multiline':False]['text':'','line_number':212,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':213,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':219,'multiline':False]['text':'                  metaprogram','line_number':220,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':221,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':227,'multiline':False]['text':'                  program','line_number':228,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':229,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':253,'multiline':False]['text':'  function : range_sort_data','line_number':254,'multiline':False]['text':'/ @brief this sort elements using the range_sort function and receiving a','line_number':255,'multiline':False]['text':'/        buffer of initialized memory','line_number':256,'multiline':False]['text':'/ @param rng_data : range with the elements to sort','line_number':257,'multiline':False]['text':'/ @param rng_aux : range of at least the same memory than rng_data used as','line_number':258,'multiline':False]['text':'/                  auxiliary memory in the sorting','line_number':259,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':260,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':261,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':266,'multiline':False]['text':'                  metaprogram','line_number':267,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':268,'multiline':False]['text':'------------------------------------------------------------------------','line_number':274,'multiline':False]['text':'                    program','line_number':275,'multiline':False]['text':'------------------------------------------------------------------------','line_number':276,'multiline':False]['text':' minimal number of element before to jump to insertionsort','line_number':280,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':290,'multiline':False]['text':'  function : range_sort_buffer','line_number':291,'multiline':False]['text':'/ @brief this sort elements using the range_sort function and receiving a','line_number':292,'multiline':False]['text':'/        buffer of initialized memory','line_number':293,'multiline':False]['text':'/ @param rng_data : range with the elements to sort','line_number':294,'multiline':False]['text':'/ @param rng_aux : range of at least the same memory than rng_data used as','line_number':295,'multiline':False]['text':'/                  auxiliary memory in the sorting','line_number':296,'multiline':False]['text':'/ @param comp : object for to compare two elements','line_number':297,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':298,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':303,'multiline':False]['text':'                  metaprogram','line_number':304,'multiline':False]['text':'-----------------------------------------------------------------------','line_number':305,'multiline':False]['text':'------------------------------------------------------------------------','line_number':311,'multiline':False]['text':'                    program','line_number':312,'multiline':False]['text':'------------------------------------------------------------------------','line_number':313,'multiline':False]['text':' minimal number of element before to jump to insertionsort','line_number':317,'multiline':False]['text':'****************************************************************************','line_number':328,'multiline':False]['text':'    End namespace common','line_number':329,'multiline':False]['text':'    End namespace sort','line_number':330,'multiline':False]['text':'    End namepspace boost','line_number':331,'multiline':False]['text':'****************************************************************************','line_number':332,'multiline':False]['text':'','line_number':333,'multiline':False]