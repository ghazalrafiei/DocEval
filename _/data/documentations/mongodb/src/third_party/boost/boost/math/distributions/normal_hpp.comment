['text':'  Copyright John Maddock 2006, 2007.','line_number':1,'multiline':False]['text':'  Copyright Paul A. Bristow 2006, 2007.','line_number':2,'multiline':False]['text':'  Use, modification and distribution are subject to the','line_number':4,'multiline':False]['text':'  Boost Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' http://en.wikipedia.org/wiki/Normal_distribution','line_number':11,'multiline':False]['text':' http://www.itl.nist.gov/div898/handbook/eda/section3/eda3661.htm','line_number':12,'multiline':False]['text':' Also:','line_number':13,'multiline':False]['text':' Weisstein, Eric W. "Normal Distribution."','line_number':14,'multiline':False]['text':' From MathWorld--A Wolfram Web Resource.','line_number':15,'multiline':False]['text':' http://mathworld.wolfram.com/NormalDistribution.html','line_number':16,'multiline':False]['text':' for erf/erfc.','line_number':19,'multiline':False]['text':' Default is a 'standard' normal distribution N01.','line_number':36,'multiline':False]['text':' alias for location.','line_number':45,'multiline':False]['text':' alias for scale.','line_number':50,'multiline':False]['text':' Synonyms, provided to allow generic use of find_location and find_scale.','line_number':54,'multiline':False]['text':' location.','line_number':56,'multiline':False]['text':' scale.','line_number':60,'multiline':False]['text':'','line_number':65,'multiline':False]['text':' Data members:','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' distribution mean or location.','line_number':68,'multiline':False]['text':' distribution standard deviation or scale.','line_number':69,'multiline':False]['text':' class normal_distribution','line_number':70,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' Deduction guides, note we don't check the ','line_number':75,'multiline':False]['text':' value of __cpp_deduction_guides, just assume','line_number':76,'multiline':False]['text':' they work as advertised, even if this is pre-final C++17.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':'dist','line_number':94,'multiline':True]['text':' Range of permissible values for random variable x.','line_number':95,'multiline':False]['text':' - to + infinity.','line_number':98,'multiline':False]['text':' Can only use max_value.','line_number':101,'multiline':False]['text':' - to + max value.','line_number':103,'multiline':False]['text':'dist','line_number':108,'multiline':True]['text':' This is range values for random variable x where cdf rises from 0 to 1, and outside it, the pdf is zero.','line_number':109,'multiline':False]['text':' - to + infinity.','line_number':112,'multiline':False]['text':' Can only use max_value.','line_number':115,'multiline':False]['text':' - to + max value.','line_number':117,'multiline':False]['text':' for ADL of std functions','line_number':128,'multiline':False]['text':' pdf + and - infinity is zero.','line_number':146,'multiline':False]['text':' Below produces MSVC 4127 warnings, so the above used instead.','line_number':148,'multiline':False]['text':'if(std::numeric_limits<RealType>::has_infinity && abs(x) == std::numeric_limits<RealType>::infinity())','line_number':149,'multiline':False]['text':'{ // pdf + and - infinity is zero.','line_number':150,'multiline':False]['text':'  return 0;','line_number':151,'multiline':False]['text':'}','line_number':152,'multiline':False]['text':' pdf','line_number':166,'multiline':False]['text':' for ADL of std functions','line_number':171,'multiline':False]['text':' -infinity','line_number':187,'multiline':False]['text':' + infinity','line_number':188,'multiline':False]['text':' These produce MSVC 4127 warnings, so the above used instead.','line_number':190,'multiline':False]['text':'if(std::numeric_limits<RealType>::has_infinity && x == std::numeric_limits<RealType>::infinity())','line_number':191,'multiline':False]['text':'{ // cdf +infinity is unity.','line_number':192,'multiline':False]['text':'  return 1;','line_number':193,'multiline':False]['text':'}','line_number':194,'multiline':False]['text':'if(std::numeric_limits<RealType>::has_infinity && x == -std::numeric_limits<RealType>::infinity())','line_number':195,'multiline':False]['text':'{ // cdf -infinity is zero.','line_number':196,'multiline':False]['text':'  return 0;','line_number':197,'multiline':False]['text':'}','line_number':198,'multiline':False]['text':' cdf','line_number':206,'multiline':False]['text':' for ADL of std functions','line_number':211,'multiline':False]['text':' quantile','line_number':230,'multiline':False]['text':' for ADL of std functions','line_number':235,'multiline':False]['text':' cdf complement -infinity is unity.','line_number':249,'multiline':False]['text':' cdf complement +infinity is zero','line_number':250,'multiline':False]['text':' These produce MSVC 4127 warnings, so the above used instead.','line_number':252,'multiline':False]['text':'if(std::numeric_limits<RealType>::has_infinity && x == std::numeric_limits<RealType>::infinity())','line_number':253,'multiline':False]['text':'{ // cdf complement +infinity is zero.','line_number':254,'multiline':False]['text':'  return 0;','line_number':255,'multiline':False]['text':'}','line_number':256,'multiline':False]['text':'if(std::numeric_limits<RealType>::has_infinity && x == -std::numeric_limits<RealType>::infinity())','line_number':257,'multiline':False]['text':'{ // cdf complement -infinity is unity.','line_number':258,'multiline':False]['text':'  return 1;','line_number':259,'multiline':False]['text':'}','line_number':260,'multiline':False]['text':' cdf complement','line_number':267,'multiline':False]['text':' for ADL of std functions','line_number':272,'multiline':False]['text':' quantile','line_number':289,'multiline':False]['text':'dist','line_number':316,'multiline':True]['text':'dist','line_number':322,'multiline':True]['text':'dist','line_number':328,'multiline':True]['text':' namespace math','line_number':341,'multiline':False]['text':' namespace boost','line_number':342,'multiline':False]['text':' This include must be at the end, *after* the accessors','line_number':344,'multiline':False]['text':' for this distribution have been defined, in order to','line_number':345,'multiline':False]['text':' keep compilers that support two-phase lookup happy.','line_number':346,'multiline':False]['text':' BOOST_STATS_NORMAL_HPP','line_number':349,'multiline':False]