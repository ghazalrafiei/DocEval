['text':'=============================================================================
    Phoenix V1.2.1
    Copyright (c) 2001-2002 Joel de Guzman

  Distributed under the Boost Software License, Version 1.0. (See accompanying
  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
==============================================================================','line_number':1,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':11,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':14,'multiline':False]['text':'assignment operator could not be generated','line_number':19,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':'  composite class','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':'      A composite is an actor base class composed of zero or more','line_number':26,'multiline':False]['text':'      actors (see actor.hpp) and an operation. A composite is itself','line_number':27,'multiline':False]['text':'      an actor superclass and conforms to its conceptual interface.','line_number':28,'multiline':False]['text':'      Its eval member function un-funnels the tupled actual arguments','line_number':29,'multiline':False]['text':'      from the tuple by invoking each of the actors' eval member','line_number':30,'multiline':False]['text':'      function. The results of each are then passed on as arguments to','line_number':31,'multiline':False]['text':'      the operation. Specializations are provided to handle different','line_number':32,'multiline':False]['text':'      numbers of actors.','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':'      Schematically:','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':'          actor0.eval(tupled_args) --> arg0 --> |','line_number':37,'multiline':False]['text':'          actor1.eval(tupled_args) --> arg1 --> |','line_number':38,'multiline':False]['text':'          actor2.eval(tupled_args) --> arg3 --> | --> operation(arg0...argN)','line_number':39,'multiline':False]['text':'            ...                                 |','line_number':40,'multiline':False]['text':'          actorN.eval(tupled_args) --> argN --> |','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':'      The operation can be any suitable functor that can accept the','line_number':43,'multiline':False]['text':'      arguments passed in by the composite. The operation is expected','line_number':44,'multiline':False]['text':'      to have a member operator() that carries out the actual','line_number':45,'multiline':False]['text':'      operation. There should be a one to one correspondence between','line_number':46,'multiline':False]['text':'      actors of the composite and the arguments of the operation's','line_number':47,'multiline':False]['text':'      member operator().','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':'      The operation is also expected to have a nested template class','line_number':50,'multiline':False]['text':'      result<T0...TN>. The nested template class result should have a','line_number':51,'multiline':False]['text':'      typedef 'type' that reflects the return type of its member','line_number':52,'multiline':False]['text':'      operator(). This is essentially a type computer that answers the','line_number':53,'multiline':False]['text':'      metaprogramming question "Given arguments of type T0...TN, what','line_number':54,'multiline':False]['text':'      will be its operator()'s return type?".','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':'      There is a special case for operations that accept no arguments.','line_number':57,'multiline':False]['text':'      Such nullary operations are only required to define a typedef','line_number':58,'multiline':False]['text':'      result_type that reflects the return type of its operator().','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':'      Here's an example of a simple operation that squares a number:','line_number':61,'multiline':False]['text':'','line_number':62,'multiline':False]['text':'          struct square {','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':'              template <typename ArgT>','line_number':65,'multiline':False]['text':'              struct result { typedef ArgT type; };','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':'              template <typename ArgT>','line_number':68,'multiline':False]['text':'              ArgT operator()(ArgT n) const { return n * n; }','line_number':69,'multiline':False]['text':'          };','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':'      As can be seen, operations can be polymorphic. Its arguments and','line_number':72,'multiline':False]['text':'      return type are not fixed to a particular type. The example','line_number':73,'multiline':False]['text':'      above for example, can handle any ArgT type as long as it has a','line_number':74,'multiline':False]['text':'      multiplication operator.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':'      Composites are not created directly. Instead, there are meta-','line_number':77,'multiline':False]['text':'      programs provided that indirectly create composites. See','line_number':78,'multiline':False]['text':'      operators.hpp, binders.hpp and functions.hpp for examples.','line_number':79,'multiline':False]['text':'','line_number':80,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':81,'multiline':False]['text':' Not used','line_number':113,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':117,'multiline':False]['text':'','line_number':118,'multiline':False]['text':'  composite <0 actor> class','line_number':119,'multiline':False]['text':'','line_number':120,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':121,'multiline':False]['text':'////////////////////////////////','line_number':128,'multiline':False]['text':'  Unused','line_number':144,'multiline':False]['text':'args','line_number':162,'multiline':True]['text':'  operation','line_number':167,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':170,'multiline':False]['text':'','line_number':171,'multiline':False]['text':'  composite <1 actor> class','line_number':172,'multiline':False]['text':'','line_number':173,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':174,'multiline':False]['text':'////////////////////////////////','line_number':184,'multiline':False]['text':'  Unused','line_number':201,'multiline':False]['text':'  operation','line_number':226,'multiline':False]['text':'  actors','line_number':227,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':230,'multiline':False]['text':'','line_number':231,'multiline':False]['text':'  composite <2 actors> class','line_number':232,'multiline':False]['text':'','line_number':233,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':234,'multiline':False]['text':'////////////////////////////////','line_number':245,'multiline':False]['text':'  Unused','line_number':262,'multiline':False]['text':'  operation','line_number':288,'multiline':False]['text':'  actors','line_number':289,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':292,'multiline':False]['text':'','line_number':293,'multiline':False]['text':'  composite <3 actors> class','line_number':294,'multiline':False]['text':'','line_number':295,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':296,'multiline':False]['text':'////////////////////////////////','line_number':308,'multiline':False]['text':'  Unused','line_number':325,'multiline':False]['text':'  operation','line_number':352,'multiline':False]['text':'  actors','line_number':353,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':357,'multiline':False]['text':'','line_number':358,'multiline':False]['text':'  composite <4 actors> class','line_number':359,'multiline':False]['text':'','line_number':360,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':361,'multiline':False]['text':'////////////////////////////////','line_number':374,'multiline':False]['text':'  Unused','line_number':388,'multiline':False]['text':'  operation','line_number':416,'multiline':False]['text':'  actors','line_number':417,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':420,'multiline':False]['text':'','line_number':421,'multiline':False]['text':'  composite <5 actors> class','line_number':422,'multiline':False]['text':'','line_number':423,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':424,'multiline':False]['text':'////////////////////////////////','line_number':438,'multiline':False]['text':'  Unused','line_number':452,'multiline':False]['text':'  operation','line_number':481,'multiline':False]['text':'  actors','line_number':482,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':485,'multiline':False]['text':'','line_number':486,'multiline':False]['text':'  composite <6 actors> class','line_number':487,'multiline':False]['text':'','line_number':488,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':489,'multiline':False]['text':'////////////////////////////////','line_number':505,'multiline':False]['text':'  Unused','line_number':520,'multiline':False]['text':'  operation','line_number':552,'multiline':False]['text':'  actors','line_number':553,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':557,'multiline':False]['text':'','line_number':558,'multiline':False]['text':'  composite <7 actors> class','line_number':559,'multiline':False]['text':'','line_number':560,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':561,'multiline':False]['text':'////////////////////////////////','line_number':578,'multiline':False]['text':'  Unused','line_number':590,'multiline':False]['text':'  operation','line_number':623,'multiline':False]['text':'  actors','line_number':624,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':627,'multiline':False]['text':'','line_number':628,'multiline':False]['text':'  composite <8 actors> class','line_number':629,'multiline':False]['text':'','line_number':630,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':631,'multiline':False]['text':'////////////////////////////////','line_number':649,'multiline':False]['text':'  Unused','line_number':661,'multiline':False]['text':'  operation','line_number':695,'multiline':False]['text':'  actors','line_number':696,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':699,'multiline':False]['text':'','line_number':700,'multiline':False]['text':'  composite <9 actors> class','line_number':701,'multiline':False]['text':'','line_number':702,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':703,'multiline':False]['text':'////////////////////////////////','line_number':722,'multiline':False]['text':'  Unused','line_number':734,'multiline':False]['text':'  operation','line_number':769,'multiline':False]['text':'  actors','line_number':770,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':774,'multiline':False]['text':'','line_number':775,'multiline':False]['text':'  composite <10 actors> class','line_number':776,'multiline':False]['text':'','line_number':777,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':778,'multiline':False]['text':'////////////////////////////////','line_number':798,'multiline':False]['text':'  Unused','line_number':807,'multiline':False]['text':'  operation','line_number':843,'multiline':False]['text':'  actors','line_number':844,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':847,'multiline':False]['text':'','line_number':848,'multiline':False]['text':'  composite <11 actors> class','line_number':849,'multiline':False]['text':'','line_number':850,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':851,'multiline':False]['text':'////////////////////////////////','line_number':873,'multiline':False]['text':'  Unused','line_number':883,'multiline':False]['text':'  operation','line_number':923,'multiline':False]['text':'  actors','line_number':925,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':928,'multiline':False]['text':'','line_number':929,'multiline':False]['text':'  composite <12 actors> class','line_number':930,'multiline':False]['text':'','line_number':931,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':932,'multiline':False]['text':'////////////////////////////////','line_number':955,'multiline':False]['text':'  Unused','line_number':965,'multiline':False]['text':'  operation','line_number':1006,'multiline':False]['text':'  actors','line_number':1008,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1012,'multiline':False]['text':'','line_number':1013,'multiline':False]['text':'  composite <13 actors> class','line_number':1014,'multiline':False]['text':'','line_number':1015,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1016,'multiline':False]['text':'////////////////////////////////','line_number':1040,'multiline':False]['text':'  operation','line_number':1088,'multiline':False]['text':'  actors','line_number':1090,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1093,'multiline':False]['text':'','line_number':1094,'multiline':False]['text':'  composite <14 actors> class','line_number':1095,'multiline':False]['text':'','line_number':1096,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1097,'multiline':False]['text':'////////////////////////////////','line_number':1122,'multiline':False]['text':'  operation','line_number':1171,'multiline':False]['text':'  actors','line_number':1173,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1176,'multiline':False]['text':'','line_number':1177,'multiline':False]['text':'  composite <15 actors> class','line_number':1178,'multiline':False]['text':'','line_number':1179,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1180,'multiline':False]['text':'////////////////////////////////','line_number':1206,'multiline':False]['text':'  operation','line_number':1256,'multiline':False]['text':'  actors','line_number':1258,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':1268,'multiline':False]['text':'','line_number':1269,'multiline':False]['text':'      make_composite is basically a type computer that answers the','line_number':1270,'multiline':False]['text':'      question "Given types T0..TN, what composite type should I','line_number':1271,'multiline':False]['text':'      create <composite_type> and if I were to generate an actual','line_number':1272,'multiline':False]['text':'      composite, what type <type> should I return?"','line_number':1273,'multiline':False]['text':'','line_number':1274,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':1275,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':1343,'multiline':False]['text':'','line_number':1344,'multiline':False]['text':'      make_unary, make_binary, make_binary1, make_binary2 and','line_number':1345,'multiline':False]['text':'      make_binary3 utilities are provided here for easy creation of','line_number':1346,'multiline':False]['text':'      unary and binary composites.','line_number':1347,'multiline':False]['text':'','line_number':1348,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':1349,'multiline':False]['text':'////////////////////////////////  input is an actor','line_number':1351,'multiline':False]['text':'////////////////////////////////  LHS is an actor, RHS is unknown','line_number':1369,'multiline':False]['text':'////////////////////////////////  LHS is unknown, RHS is an actor','line_number':1387,'multiline':False]['text':'////////////////////////////////  Both LHS and RHS are actors','line_number':1405,'multiline':False]['text':' namespace impl','line_number':1423,'multiline':False]['text':'  namespace phoenix','line_number':1429,'multiline':False]