['text':'  declval.hpp  -------------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2010 Vicente J. Botet Escriba','line_number':3,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':6,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':13,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':17,'multiline':False]['text':'                                                                            //','line_number':18,'multiline':False]['text':'                           C++03 implementation of                          //','line_number':19,'multiline':False]['text':'                   20.2.4 Function template declval [declval]               //','line_number':20,'multiline':False]['text':'                          Written by Vicente J. Botet Escriba               //','line_number':21,'multiline':False]['text':'                                                                            //','line_number':22,'multiline':False]['text':' 1 The library provides the function template declval to simplify the','line_number':23,'multiline':False]['text':' definition of expressions which occur as unevaluated operands.','line_number':24,'multiline':False]['text':' 2 Remarks: If this function is used, the program is ill-formed.','line_number':25,'multiline':False]['text':' 3 Remarks: The template parameter T of declval may be an incomplete type.','line_number':26,'multiline':False]['text':' [ Example:','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' template <class To, class From>','line_number':29,'multiline':False]['text':' decltype(static_cast<To>(declval<From>())) convert(From&&);','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' declares a function template convert which only participates in overloading','line_number':32,'multiline':False]['text':' if the type From can be explicitly converted to type To. For another example','line_number':33,'multiline':False]['text':' see class template common_type (20.9.7.6). -end example ]','line_number':34,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':35,'multiline':False]['text':' as unevaluated operand','line_number':40,'multiline':False]['text':' namespace boost','line_number':42,'multiline':False]['text':' BOOST_TYPE_TRAITS_DECLVAL_HPP_INCLUDED','line_number':44,'multiline':False]