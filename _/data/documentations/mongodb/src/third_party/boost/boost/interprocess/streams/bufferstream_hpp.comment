['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/interprocess for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'','line_number':10,'multiline':False]['text':' This file comes from SGI's sstream file. Modified by Ion Gaztanaga 2005-2012.','line_number':11,'multiline':False]['text':' Changed internal SGI string to a buffer. Added efficient','line_number':12,'multiline':False]['text':' internal buffer get/set/swap functions, so that we can obtain/establish the','line_number':13,'multiline':False]['text':' internal buffer without any reallocation or copy. Kill those temporaries!','line_number':14,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':15,'multiline':False]['text':'
 * Copyright (c) 1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided "as is" without express or implied warranty.
 ','line_number':16,'multiline':True]['text':'!\file','line_number':29,'multiline':False]['text':'!This file defines basic_bufferbuf, basic_ibufferstream,','line_number':30,'multiline':False]['text':'!basic_obufferstream, and basic_bufferstream classes. These classes','line_number':31,'multiline':False]['text':'!represent streamsbufs and streams whose sources or destinations','line_number':32,'multiline':False]['text':'!are fixed size character buffers.','line_number':33,'multiline':False]['text':' char traits','line_number':53,'multiline':False]['text':' ptrdiff_t','line_number':54,'multiline':False]['text':'!A streambuf class that controls the transmission of elements to and from','line_number':60,'multiline':False]['text':'!a basic_xbufferstream. The elements are transmitted from a to a fixed','line_number':61,'multiline':False]['text':'!size buffer','line_number':62,'multiline':False]['text':'!Constructor.','line_number':76,'multiline':False]['text':'!Does not throw.','line_number':77,'multiline':False]['text':'!Constructor. Assigns formatting buffer.','line_number':83,'multiline':False]['text':'!Does not throw.','line_number':84,'multiline':False]['text':'!Returns the pointer and size of the internal buffer.','line_number':94,'multiline':False]['text':'!Does not throw.','line_number':95,'multiline':False]['text':'!Sets the underlying buffer to a new value','line_number':99,'multiline':False]['text':'!Does not throw.','line_number':100,'multiline':False]['text':' The initial read position is the beginning of the buffer.','line_number':108,'multiline':False]['text':' The initial write position is the beginning of the buffer.','line_number':112,'multiline':False]['text':' Precondition: gptr() >= egptr(). Returns a character, if available.','line_number':120,'multiline':False]['text':'            if(!(m_mode & std::ios_base::in)) {','line_number':154,'multiline':False]['text':'               if(this->pptr() != this->epptr()) {','line_number':155,'multiline':False]['text':'                  *this->pptr() = CharTraits::to_char_type(c);','line_number':156,'multiline':False]['text':'                  this->pbump(1);','line_number':157,'multiline':False]['text':'                  return c;','line_number':158,'multiline':False]['text':'               }','line_number':159,'multiline':False]['text':'               else','line_number':160,'multiline':False]['text':'                  return CharTraits::eof();','line_number':161,'multiline':False]['text':'            }','line_number':162,'multiline':False]['text':'            else {','line_number':163,'multiline':False]['text':'We can't append to a static buffer','line_number':165,'multiline':False]['text':'            }','line_number':173,'multiline':False]['text':' c is EOF, so we don't have to do anything','line_number':175,'multiline':False]['text':' Overflow always fails if it's read-only.','line_number':178,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':256,'multiline':False]['text':'!A basic_istream class that uses a fixed size character buffer','line_number':259,'multiline':False]['text':'!as its formatting buffer.','line_number':260,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':265,'multiline':False]['text':' Typedefs','line_number':268,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':283,'multiline':False]['text':'!Constructor.','line_number':286,'multiline':False]['text':'!Does not throw.','line_number':287,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':289,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':290,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':291,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':292,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':293,'multiline':False]['text':'!Constructor. Assigns formatting buffer.','line_number':298,'multiline':False]['text':'!Does not throw.','line_number':299,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':302,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':303,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':304,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':305,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':306,'multiline':False]['text':'!Returns the address of the stored','line_number':314,'multiline':False]['text':'!stream buffer.','line_number':315,'multiline':False]['text':'!Returns the pointer and size of the internal buffer.','line_number':319,'multiline':False]['text':'!Does not throw.','line_number':320,'multiline':False]['text':'!Sets the underlying buffer to a new value. Resets','line_number':324,'multiline':False]['text':'!stream position. Does not throw.','line_number':325,'multiline':False]['text':'!A basic_ostream class that uses a fixed size character buffer','line_number':330,'multiline':False]['text':'!as its formatting buffer.','line_number':331,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':336,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':354,'multiline':False]['text':'!Constructor.','line_number':357,'multiline':False]['text':'!Does not throw.','line_number':358,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':360,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':361,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':362,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':363,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':364,'multiline':False]['text':'!Constructor. Assigns formatting buffer.','line_number':369,'multiline':False]['text':'!Does not throw.','line_number':370,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':373,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':374,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':375,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':376,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':377,'multiline':False]['text':'!Returns the address of the stored','line_number':385,'multiline':False]['text':'!stream buffer.','line_number':386,'multiline':False]['text':'!Returns the pointer and size of the internal buffer.','line_number':390,'multiline':False]['text':'!Does not throw.','line_number':391,'multiline':False]['text':'!Sets the underlying buffer to a new value. Resets','line_number':395,'multiline':False]['text':'!stream position. Does not throw.','line_number':396,'multiline':False]['text':'!A basic_iostream class that uses a fixed size character buffer','line_number':402,'multiline':False]['text':'!as its formatting buffer.','line_number':403,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':408,'multiline':False]['text':' Typedefs','line_number':411,'multiline':False]['text':'#ifndef BOOST_INTERPROCESS_DOXYGEN_INVOKED','line_number':426,'multiline':False]['text':'!Constructor.','line_number':429,'multiline':False]['text':'!Does not throw.','line_number':430,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':433,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':434,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':435,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':436,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':437,'multiline':False]['text':'!Constructor. Assigns formatting buffer.','line_number':442,'multiline':False]['text':'!Does not throw.','line_number':443,'multiline':False]['text':'basic_ios_t() is called first (lefting it uninitialized) as it's a','line_number':447,'multiline':False]['text':'virtual base of basic_istream. The class will be initialized when','line_number':448,'multiline':False]['text':'basic_istream is constructed calling basic_ios_t::init().','line_number':449,'multiline':False]['text':'As bufferbuf_t's constructor does not throw there is no risk of','line_number':450,'multiline':False]['text':'calling the basic_ios_t's destructor without calling basic_ios_t::init()','line_number':451,'multiline':False]['text':'!Returns the address of the stored','line_number':459,'multiline':False]['text':'!stream buffer.','line_number':460,'multiline':False]['text':'!Returns the pointer and size of the internal buffer.','line_number':464,'multiline':False]['text':'!Does not throw.','line_number':465,'multiline':False]['text':'!Sets the underlying buffer to a new value. Resets','line_number':469,'multiline':False]['text':'!stream position. Does not throw.','line_number':470,'multiline':False]['text':'Some typedefs to simplify usage','line_number':475,'multiline':False]['text':'namespace boost {  namespace interprocess {','line_number':487,'multiline':False]['text':' BOOST_INTERPROCESS_BUFFERSTREAM_HPP ','line_number':491,'multiline':True]