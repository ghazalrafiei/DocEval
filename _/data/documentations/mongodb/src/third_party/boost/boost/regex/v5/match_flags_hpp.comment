['text':'
 *
 * Copyright (c) 1998-2002
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]['text':'
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         match_flags.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Declares match_flags type.
  ','line_number':12,'multiline':True]['text':' first is not start of line ','line_number':41,'multiline':True]['text':' last is not end of line ','line_number':42,'multiline':True]['text':' first is not start of buffer ','line_number':43,'multiline':True]['text':' last is not end of buffer ','line_number':44,'multiline':True]['text':' first is not start of word ','line_number':45,'multiline':True]['text':' last is not end of word ','line_number':46,'multiline':True]['text':' \n is not matched by '.' ','line_number':47,'multiline':True]['text':' '\0' is not matched by '.' ','line_number':48,'multiline':True]['text':' *--first is a valid expression ','line_number':49,'multiline':True]['text':' internal use ','line_number':50,'multiline':True]['text':' don't care what we match ','line_number':51,'multiline':True]['text':' string can't be null ','line_number':52,'multiline':True]['text':' each grep match must continue from ','line_number':53,'multiline':True]['text':' uninterrupted from the previous one ','line_number':54,'multiline':True]['text':' find partial matches ','line_number':55,'multiline':True]['text':' stop after first match (grep) V3 only ','line_number':57,'multiline':True]['text':' don't match initial null, V4 only ','line_number':58,'multiline':True]['text':' must find the whole of input even if match_any is set ','line_number':59,'multiline':True]['text':' Use perl matching rules ','line_number':60,'multiline':True]['text':' Use POSIX matching rules ','line_number':61,'multiline':True]['text':' don't trap marked subs ','line_number':62,'multiline':True]['text':' include full capture information for repeated captures ','line_number':63,'multiline':True]['text':' treat text as single line and ignore any \n's when matching ^ and $. ','line_number':64,'multiline':True]['text':' unused ','line_number':65,'multiline':True]['text':' unused ','line_number':66,'multiline':True]['text':' unused ','line_number':67,'multiline':True]['text':' perl style replacement ','line_number':70,'multiline':True]['text':' ditto. ','line_number':71,'multiline':True]['text':' sed style replacement. ','line_number':72,'multiline':True]['text':' enable all extensions to syntax. ','line_number':73,'multiline':True]['text':' don't copy non-matching segments. ','line_number':74,'multiline':True]['text':' Only replace first occurrence. ','line_number':75,'multiline':True]['text':' internal use only. ','line_number':76,'multiline':True]['text':' treat string as a literal ','line_number':77,'multiline':True]['text':' namespace regex_constants ','line_number':112,'multiline':True]['text':'
 * import names into boost for backwards compatibility:
 ','line_number':113,'multiline':True]['text':' using regex_constants::match_init; ','line_number':127,'multiline':True]['text':'using regex_constants::match_stop; ','line_number':132,'multiline':True]['text':'using regex_constants::match_max; ','line_number':139,'multiline':True]['text':'using regex_constants::format_is_if;','line_number':146,'multiline':True]['text':' namespace boost ','line_number':153,'multiline':True]['text':' __cplusplus ','line_number':154,'multiline':True]['text':' include guard ','line_number':155,'multiline':True]