['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2005-2012. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/interprocess for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'!Makes pthread_mutexattr_t cleanup easy when using exceptions','line_number':35,'multiline':False]['text':'!Constructor','line_number':38,'multiline':False]['text':'!Destructor','line_number':52,'multiline':False]['text':'!This allows using mutexattr_wrapper as pthread_mutexattr_t','line_number':55,'multiline':False]['text':'!Makes pthread_condattr_t cleanup easy when using exceptions','line_number':61,'multiline':False]['text':'!Constructor','line_number':64,'multiline':False]['text':'!Destructor','line_number':72,'multiline':False]['text':'!This allows using condattr_wrapper as pthread_condattr_t','line_number':75,'multiline':False]['text':'!Makes initialized pthread_mutex_t cleanup easy when using exceptions','line_number':81,'multiline':False]['text':'!Constructor. Takes interprocess_mutex attributes to initialize the interprocess_mutex','line_number':85,'multiline':False]['text':'!Makes initialized pthread_cond_t cleanup easy when using exceptions','line_number':101,'multiline':False]['text':'   #if defined BOOST_INTERPROCESS_POSIX_PROCESS_SHARED','line_number':120,'multiline':False]['text':'!Makes pthread_barrierattr_t cleanup easy when using exceptions','line_number':124,'multiline':False]['text':'!Constructor','line_number':127,'multiline':False]['text':'!Destructor','line_number':135,'multiline':False]['text':'!This allows using mutexattr_wrapper as pthread_barrierattr_t','line_number':138,'multiline':False]['text':'!Makes initialized pthread_barrier_t cleanup easy when using exceptions','line_number':144,'multiline':False]['text':'!Constructor. Takes barrier attributes to initialize the barrier','line_number':148,'multiline':False]['text':'#if defined(BOOST_INTERPROCESS_POSIX_BARRIERS) && defined(BOOST_INTERPROCESS_POSIX_PROCESS_SHARED)','line_number':166,'multiline':False]['text':'namespace ipcdetail','line_number':168,'multiline':False]['text':'namespace interprocess','line_number':170,'multiline':False]['text':'namespace boost','line_number':172,'multiline':False]['text':'ifdef BOOST_INTERPROCESS_PTHREAD_HELPERS_HPP','line_number':176,'multiline':False]