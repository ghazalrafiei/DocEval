['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2006-2014. Distributed under the Boost','line_number':3,'multiline':False]['text':' Software License, Version 1.0. (See accompanying file','line_number':4,'multiline':False]['text':' LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' See http://www.boost.org/libs/move for documentation.','line_number':7,'multiline':False]['text':'','line_number':8,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':9,'multiline':False]['text':'for std::size_t','line_number':26,'multiline':False]['text':'!\file','line_number':32,'multiline':False]['text':'! Defines "make_unique" functions, which are factories to create instances','line_number':33,'multiline':False]['text':'! of unique_ptr depending on the passed arguments.','line_number':34,'multiline':False]['text':'!','line_number':35,'multiline':False]['text':'! This header can be a bit heavyweight in C++03 compilers due to the use of the','line_number':36,'multiline':False]['text':'! preprocessor library, that's why it's a a separate header from <tt>unique_ptr.hpp</tt>','line_number':37,'multiline':False]['text':' Forward declaring 'X' in namespace std is not permitted by the C++ Standard','line_number':43,'multiline':False]['text':'no namespace versioning in clang+libc++','line_number':46,'multiline':False]['text':'namespace std {','line_number':50,'multiline':False]['text':'Compile time switch between','line_number':60,'multiline':False]['text':'single element, unknown bound array','line_number':61,'multiline':False]['text':'and known bound array','line_number':62,'multiline':False]['text':'Avoid reference to null errors in sanitizers','line_number':89,'multiline':False]['text':'namespace move_upmu {','line_number':91,'multiline':False]['text':'namespace boost{','line_number':92,'multiline':False]['text':'!defined(BOOST_MOVE_DOXYGEN_INVOKED)','line_number':94,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is not an array.','line_number':101,'multiline':False]['text':'!','line_number':102,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new T(std::forward<Args>(args)...))</tt>.','line_number':103,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is not an array.','line_number':110,'multiline':False]['text':'!','line_number':111,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new T(std::nothrow)(std::forward<Args>(args)...))</tt>.','line_number':112,'multiline':False]['text':'','line_number':130,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is not an array.','line_number':136,'multiline':False]['text':'!','line_number':137,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new T)</tt> (default initialization)','line_number':138,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is not an array.','line_number':147,'multiline':False]['text':'!','line_number':148,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new T(std::nothrow)</tt> (default initialization)','line_number':149,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is an array of ','line_number':158,'multiline':False]['text':'!   unknown bound.','line_number':159,'multiline':False]['text':'!','line_number':160,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new remove_extent_t<T>[n]())</tt> (value initialization)','line_number':161,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is an array of ','line_number':171,'multiline':False]['text':'!   unknown bound.','line_number':172,'multiline':False]['text':'!','line_number':173,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new (std::nothrow)remove_extent_t<T>[n]())</tt> (value initialization)','line_number':174,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is an array of ','line_number':184,'multiline':False]['text':'!   unknown bound.','line_number':185,'multiline':False]['text':'!','line_number':186,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new remove_extent_t<T>[n])</tt> (default initialization)','line_number':187,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is an array of ','line_number':197,'multiline':False]['text':'!   unknown bound.','line_number':198,'multiline':False]['text':'!','line_number':199,'multiline':False]['text':'! <b>Returns</b>: <tt>unique_ptr<T>(new (std::nothrow)remove_extent_t<T>[n])</tt> (default initialization)','line_number':200,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is','line_number':212,'multiline':False]['text':'!   an array of known bound.','line_number':213,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is','line_number':219,'multiline':False]['text':'!   an array of known bound.','line_number':220,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is','line_number':226,'multiline':False]['text':'!   an array of known bound.','line_number':227,'multiline':False]['text':'! <b>Remarks</b>: This function shall not participate in overload resolution unless T is','line_number':233,'multiline':False]['text':'!   an array of known bound.','line_number':234,'multiline':False]['text':'namespace movelib {','line_number':242,'multiline':False]['text':'namespace boost{','line_number':244,'multiline':False]['text':'#ifndef BOOST_MOVE_MAKE_UNIQUE_HPP_INCLUDED','line_number':248,'multiline':False]