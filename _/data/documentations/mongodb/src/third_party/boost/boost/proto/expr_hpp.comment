['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'/ \file expr.hpp','line_number':2,'multiline':False]['text':'/ Contains definition of expr\<\> class template.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':5,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':6,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':' default constructor could not be generated','line_number':31,'multiline':False]['text':' assignment operator could not be generated','line_number':32,'multiline':False]['text':' user defined constructor required','line_number':33,'multiline':False]['text':' function 'xxx' marked as __forceinline not inlined','line_number':34,'multiline':False]['text':' Work-around for:','line_number':93,'multiline':False]['text':' https://connect.microsoft.com/VisualStudio/feedback/details/765449/codegen-stack-corruption-using-runtime-checks-when-aggregate-initializing-struct','line_number':94,'multiline':False]['text':'/ \brief A helper metafunction for computing the','line_number':121,'multiline':False]['text':'/ return type of \c proto::expr\<\>::operator().','line_number':122,'multiline':False]['text':' This is where the basic_expr specializations are','line_number':131,'multiline':False]['text':' actually defined:','line_number':132,'multiline':False]['text':' The warning cannot be fixed for aggregates','line_number':137,'multiline':False]['text':' Sadly, GCC currently emits the warning at the use location:','line_number':138,'multiline':False]['text':' https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94492','line_number':139,'multiline':False]['text':' This is where the expr specialization are','line_number':143,'multiline':False]['text':' actually defined:','line_number':144,'multiline':False]['text':'/ \brief Lets you inherit the interface of an expression','line_number':152,'multiline':False]['text':'/ while hiding from Proto the fact that the type is a Proto','line_number':153,'multiline':False]['text':'/ expression.','line_number':154,'multiline':False]['text':' BOOST_PROTO_EXPR_HPP_EAN_04_01_2005','line_number':175,'multiline':False]