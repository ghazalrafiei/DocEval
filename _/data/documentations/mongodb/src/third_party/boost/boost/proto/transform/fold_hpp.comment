['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'/ \file fold.hpp','line_number':2,'multiline':False]['text':'/ Contains definition of the fold<> and reverse_fold<> transforms.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':5,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':6,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':' namespace detail','line_number':81,'multiline':False]['text':'/ \brief A PrimitiveTransform that invokes the <tt>fusion::fold\<\></tt>','line_number':83,'multiline':False]['text':'/ algorithm to accumulate','line_number':84,'multiline':False]['text':'/ \brief A Fusion sequence.','line_number':91,'multiline':False]['text':'/ \brief An initial state for the fold.','line_number':98,'multiline':False]['text':'/ \brief <tt>fun(d)(e,s) == when\<_,Fun\>()(e,s,d)</tt>','line_number':105,'multiline':False]['text':'/ Let \c seq be <tt>when\<_, Sequence\>()(e, s, d)</tt>, let','line_number':118,'multiline':False]['text':'/ \c state0 be <tt>when\<_, State0\>()(e, s, d)</tt>, and','line_number':119,'multiline':False]['text':'/ let \c fun(d) be an object such that <tt>fun(d)(e, s)</tt>','line_number':120,'multiline':False]['text':'/ is equivalent to <tt>when\<_, Fun\>()(e, s, d)</tt>. Then, this','line_number':121,'multiline':False]['text':'/ function returns <tt>fusion::fold(seq, state0, fun(d))</tt>.','line_number':122,'multiline':False]['text':'/','line_number':123,'multiline':False]['text':'/ \param e The current expression','line_number':124,'multiline':False]['text':'/ \param s The current state','line_number':125,'multiline':False]['text':'/ \param d An arbitrary data','line_number':126,'multiline':False]['text':'/ \brief A PrimitiveTransform that is the same as the','line_number':144,'multiline':False]['text':'/ <tt>fold\<\></tt> transform, except that it folds','line_number':145,'multiline':False]['text':'/ back-to-front instead of front-to-back.','line_number':146,'multiline':False]['text':'/ \brief A Fusion sequence.','line_number':153,'multiline':False]['text':'/ \brief An initial state for the fold.','line_number':160,'multiline':False]['text':'/ \brief <tt>fun(d)(e,s) == when\<_,Fun\>()(e,s,d)</tt>','line_number':167,'multiline':False]['text':'/ Let \c seq be <tt>when\<_, Sequence\>()(e, s, d)</tt>, let','line_number':180,'multiline':False]['text':'/ \c state0 be <tt>when\<_, State0\>()(e, s, d)</tt>, and','line_number':181,'multiline':False]['text':'/ let \c fun(d) be an object such that <tt>fun(d)(e, s)</tt>','line_number':182,'multiline':False]['text':'/ is equivalent to <tt>when\<_, Fun\>()(e, s, d)</tt>. Then, this','line_number':183,'multiline':False]['text':'/ function returns <tt>fusion::fold(seq, state0, fun(d))</tt>.','line_number':184,'multiline':False]['text':'/','line_number':185,'multiline':False]['text':'/ \param e The current expression','line_number':186,'multiline':False]['text':'/ \param s The current state','line_number':187,'multiline':False]['text':'/ \param d An arbitrary data','line_number':188,'multiline':False]['text':' This specialization is only for improved compile-time performance','line_number':206,'multiline':False]['text':' in the commom case when the Sequence transform is \c proto::_.','line_number':207,'multiline':False]['text':'','line_number':208,'multiline':False]['text':'/ INTERNAL ONLY','line_number':209,'multiline':False]['text':'/','line_number':210,'multiline':False]['text':' This specialization is only for improved compile-time performance','line_number':220,'multiline':False]['text':' in the commom case when the Sequence transform is \c proto::_.','line_number':221,'multiline':False]['text':'','line_number':222,'multiline':False]['text':'/ INTERNAL ONLY','line_number':223,'multiline':False]['text':'/','line_number':224,'multiline':False]['text':'/ INTERNAL ONLY','line_number':234,'multiline':False]['text':'/','line_number':235,'multiline':False]['text':'/ INTERNAL ONLY','line_number':241,'multiline':False]['text':'/','line_number':242,'multiline':False]