['text':'  Boost string_algo library formatter.hpp header file  ---------------------------//','line_number':1,'multiline':False]['text':'  Copyright Pavol Droba 2002-2003.','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':5,'multiline':False]['text':'    (See accompanying file LICENSE_1_0.txt or copy at','line_number':6,'multiline':False]['text':'          http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':'  See http://www.boost.org/ for updates, documentation, and revision history.','line_number':9,'multiline':False]['text':'! \file
    Defines Formatter generators. Formatter is a functor which formats
    a string according to given parameters. A Formatter works
    in conjunction with a Finder. A Finder can provide additional information
    for a specific Formatter. An example of such a cooperation is regex_finder
    and regex_formatter.

    Formatters are used as pluggable components for replace facilities. 
    This header contains generator functions for the Formatters provided in this library.
','line_number':20,'multiline':True]['text':' generic formatters  ---------------------------------------------------------------//','line_number':34,'multiline':False]['text':'! Constant formatter','line_number':36,'multiline':False]['text':'!
            Constructs a \c const_formatter. Const formatter always returns
            the same value, regardless of the parameter.

            \param Format A predefined value used as a result for formatting
            \return An instance of the \c const_formatter object.
        ','line_number':37,'multiline':True]['text':'! Identity formatter','line_number':55,'multiline':False]['text':'!
            Constructs an \c identity_formatter. Identity formatter always returns
            the parameter.

            \return An instance of the \c identity_formatter object.
        ','line_number':56,'multiline':True]['text':'! Empty formatter','line_number':73,'multiline':False]['text':'!
            Constructs an \c empty_formatter. Empty formatter always returns an empty
            sequence. 

            \param Input container used to select a correct value_type for the
                         resulting empty_container<>.
            \return An instance of the \c empty_formatter object.
        ','line_number':74,'multiline':True]['text':'! Empty formatter','line_number':91,'multiline':False]['text':'!
            Constructs a \c dissect_formatter. Dissect formatter uses a specified finder
            to extract a portion of the formatted sequence. The first finder's match is returned 
            as a result

            \param Finder a finder used to select a portion of the formatted sequence
            \return An instance of the \c dissect_formatter object.
        ','line_number':92,'multiline':True]['text':' namespace algorithm','line_number':108,'multiline':False]['text':' pull the names to the boost namespace','line_number':110,'multiline':False]['text':' namespace boost','line_number':116,'multiline':False]['text':' BOOST_FORMATTER_HPP','line_number':119,'multiline':False]