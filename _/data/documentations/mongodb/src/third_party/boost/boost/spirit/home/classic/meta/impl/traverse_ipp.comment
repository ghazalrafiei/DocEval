['text':'=============================================================================
    Copyright (c) 2002-2003 Joel de Guzman
    Copyright (c) 2002-2003 Hartmut Kaiser
    http://spirit.sourceforge.net/

    Use, modification and distribution is subject to the Boost Software
    License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
    http://www.boost.org/LICENSE_1_0.txt)
=============================================================================','line_number':1,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':13,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':16,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':21,'multiline':False]['text':' namespace impl','line_number':28,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':'  Environment class for post_order_traversal','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':34,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':'  traverse_post_order_return template','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':'      This template is a helper for dispatching the calculation of a parser','line_number':49,'multiline':False]['text':'      type result for a traversal level to the corresponding parser_category','line_number':50,'multiline':False]['text':'      based specialization.','line_number':51,'multiline':False]['text':'','line_number':52,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':53,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':'  parser_traversal_..._result templates','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':'      These are metafunctions, which calculate the resulting parser type','line_number':67,'multiline':False]['text':'      for all subparsers and feed these types to the user supplied','line_number':68,'multiline':False]['text':'      metafunctions to get back the resulting parser type of this traversal','line_number':69,'multiline':False]['text':'      level.','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':72,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':80,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':88,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':96,'multiline':False]['text':' left traversal environment and resulting parser type','line_number':112,'multiline':False]['text':' right traversal environment and resulting parser type','line_number':121,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':136,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':139,'multiline':False]['text':'','line_number':140,'multiline':False]['text':'  Meta functions, which dispatch the calculation of the return type of','line_number':141,'multiline':False]['text':'  of the post_order traverse function to the result template of the','line_number':142,'multiline':False]['text':'  corresponding parser_category based metafunction template.','line_number':143,'multiline':False]['text':'','line_number':144,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':145,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':203,'multiline':False]['text':'','line_number':204,'multiline':False]['text':'  Post-order parser traversal','line_number':205,'multiline':False]['text':'','line_number':206,'multiline':False]['text':'      The following templates contain the parser_category based code for','line_number':207,'multiline':False]['text':'','line_number':208,'multiline':False]['text':'        - calculating the type of the resulting parser, which is to be','line_number':209,'multiline':False]['text':'          returned from a level of traversal','line_number':210,'multiline':False]['text':'        - traversing down the composite parser structure, this traversal','line_number':211,'multiline':False]['text':'          returnes a new parser object','line_number':212,'multiline':False]['text':'','line_number':213,'multiline':False]['text':'      Both tasks are delegated to the MetaT metafunction supplied by the','line_number':214,'multiline':False]['text':'      user.','line_number':215,'multiline':False]['text':'','line_number':216,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':217,'multiline':False]['text':'env','line_number':351,'multiline':True]['text':'  namespace impl','line_number':386,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':388,'multiline':False]['text':' namespace boost::spirit','line_number':391,'multiline':False]['text':' !defined(BOOST_SPIRIT_TRAVERSE_IPP)','line_number':393,'multiline':False]