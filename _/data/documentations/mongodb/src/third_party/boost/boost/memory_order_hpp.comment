['text':'  boost/memory_order.hpp','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':'  Defines enum boost::memory_order per the C++0x working draft','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Copyright (c) 2008, 2009 Peter Dimov','line_number':5,'multiline':False]['text':'  Copyright (c) 2018 Andrey Semashev','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':8,'multiline':False]['text':'  See accompanying file LICENSE_1_0.txt or copy at','line_number':9,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':10,'multiline':False]['text':'','line_number':24,'multiline':False]['text':' Enum values are chosen so that code that needs to insert','line_number':25,'multiline':False]['text':' a trailing fence for acquire semantics can use a single','line_number':26,'multiline':False]['text':' test such as:','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' if( mo & memory_order_acquire ) { ...fence... }','line_number':29,'multiline':False]['text':'','line_number':30,'multiline':False]['text':' For leading fences one can use:','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' if( mo & memory_order_release ) { ...fence... }','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' Architectures such as Alpha that need a fence on consume','line_number':35,'multiline':False]['text':' can use:','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' if( mo & ( memory_order_acquire | memory_order_consume ) ) { ...fence... }','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' The values are also in the order of increasing "strength"','line_number':40,'multiline':False]['text':' of the fences so that success/failure orders can be checked','line_number':41,'multiline':False]['text':' efficiently in compare_exchange methods.','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' acquire | release','line_number':53,'multiline':False]['text':' acq_rel | 8','line_number':54,'multiline':False]['text':' !defined(BOOST_NO_CXX11_SCOPED_ENUMS)','line_number':66,'multiline':False]['text':' acquire | release','line_number':74,'multiline':False]['text':' acq_rel | 8','line_number':75,'multiline':False]['text':' !defined(BOOST_NO_CXX11_SCOPED_ENUMS)','line_number':78,'multiline':False]['text':' namespace boost','line_number':80,'multiline':False]['text':' #ifndef BOOST_MEMORY_ORDER_HPP_INCLUDED','line_number':82,'multiline':False]