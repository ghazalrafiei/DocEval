['text':'  (C) Copyright 2016 Raffi Enficiaud.','line_number':1,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':2,'multiline':False]['text':'  (See accompanying file LICENSE_1_0.txt or copy at','line_number':3,'multiline':False]['text':'  http://www.boost.org/LICENSE_1_0.txt)','line_number':4,'multiline':False]['text':'  See http://www.boost.org/libs/test for the library home page.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':'/@file','line_number':8,'multiline':False]['text':'/@brief Contains the definition of the Junit log formatter (OF_JUNIT)','line_number':9,'multiline':False]['text':' ***************************************************************************','line_number':10,'multiline':False]['text':' Boost.Test','line_number':15,'multiline':False]['text':'#include <boost/test/results_collector.hpp>','line_number':20,'multiline':False]['text':' STL','line_number':22,'multiline':False]['text':' std::size_t','line_number':23,'multiline':False]['text':'____________________________________________________________________________//','line_number':29,'multiline':False]['text':' helper for the JUnit logger','line_number':38,'multiline':False]['text':' the message associated to the JUnit error/entry','line_number':52,'multiline':False]['text':' the one that will get expanded in the final junit (failure, error)','line_number':53,'multiline':False]['text':' additional information/message generated by the assertion','line_number':54,'multiline':False]['text':' the type associated to the assertion (or error)','line_number':56,'multiline':False]['text':' indicates if the entry can accept additional information','line_number':58,'multiline':False]['text':' sysout: additional information','line_number':61,'multiline':False]['text':' syserr: additional information','line_number':62,'multiline':False]['text':' list of failure, errors and messages (assertions message and the full log)','line_number':65,'multiline':False]['text':' ************************************************************************** //','line_number':84,'multiline':False]['text':' **************               junit_log_formatter              ************** //','line_number':85,'multiline':False]['text':' ************************************************************************** //','line_number':86,'multiline':False]['text':'/ JUnit logger class','line_number':88,'multiline':False]['text':' we log everything from the logger singleton point of view','line_number':94,'multiline':False]['text':' because we need to know about all the messages/commands going to the logger','line_number':95,'multiline':False]['text':' we decide what we put inside the logs internally','line_number':96,'multiline':False]['text':' Formatter interface','line_number':101,'multiline':False]['text':' bring base class functions into overload set','line_number':117,'multiline':False]['text':'! Discards changes in the log level','line_number':125,'multiline':False]['text':'! Instead of a regular stream, returns a file name corresponding to','line_number':136,'multiline':False]['text':'! the current master test suite. If the file already exists, adds an index','line_number':137,'multiline':False]['text':'! to it.','line_number':138,'multiline':False]['text':' true if failure, false if error','line_number':156,'multiline':False]['text':' namespace output','line_number':162,'multiline':False]['text':' namespace unit_test','line_number':163,'multiline':False]['text':' namespace boost','line_number':164,'multiline':False]['text':' BOOST_TEST_JUNIT_LOG_FORMATTER__','line_number':168,'multiline':False]