['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'','line_number':10,'multiline':False]['text':'  detail/quick_allocator.hpp','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':'  Copyright (c) 2003 David Abrahams','line_number':13,'multiline':False]['text':'  Copyright (c) 2003 Peter Dimov','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See','line_number':16,'multiline':False]['text':' accompanying file LICENSE_1_0.txt or copy at','line_number':17,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':18,'multiline':False]['text':'','line_number':19,'multiline':False]['text':' ::operator new, ::operator delete','line_number':27,'multiline':False]['text':' std::size_t','line_number':28,'multiline':False]['text':' It may seem odd to use such small pages.','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':' However, on a typical Windows implementation that uses','line_number':50,'multiline':False]['text':' the OS allocator, "normal size" pages interact with the','line_number':51,'multiline':False]['text':' "ordinary" operator new, slowing it down dramatically.','line_number':52,'multiline':False]['text':'','line_number':53,'multiline':False]['text':' 512 byte pages are handled by the small object allocator,','line_number':54,'multiline':False]['text':' and don't interfere with ::new.','line_number':55,'multiline':False]['text':'','line_number':56,'multiline':False]['text':' The other alternative is to use much bigger pages (1M.)','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' It is surprisingly easy to hit pathological behavior by','line_number':59,'multiline':False]['text':' varying the page size. g++ 2.96 on Red Hat Linux 7.2,','line_number':60,'multiline':False]['text':' for example, passionately dislikes 496. 512 seems OK.','line_number':61,'multiline':False]['text':' 1048560 / size','line_number':69,'multiline':False]['text':' "Listen to me carefully: there is no memory leak"','line_number':104,'multiline':False]['text':' -- Scott Meyers, Eff C++ 2nd Ed Item 10','line_number':105,'multiline':False]['text':' class-specific new called for a derived object','line_number':116,'multiline':False]['text':' 18.4.1.1/13','line_number':145,'multiline':False]['text':' class-specific delete called for a derived object','line_number':158,'multiline':False]['text':' 18.4.1.1/13','line_number':162,'multiline':False]['text':' namespace detail','line_number':195,'multiline':False]['text':' namespace boost','line_number':197,'multiline':False]['text':' #ifndef BOOST_SMART_PTR_DETAIL_QUICK_ALLOCATOR_HPP_INCLUDED','line_number':199,'multiline':False]