['text':'
   Copyright (c) Marshall Clow 2012-2015.
   Copyright (c) Glen Joseph Fernandes 2019 (glenjofe@gmail.com)

   Distributed under the Boost Software License, Version 1.0. (See accompanying
   file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    For more information, see http://www.boost.org

    Based on the StringRef implementation in LLVM (http://llvm.org) and
    N3422 by Jeffrey Yasskin
        http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3442.html

','line_number':1,'multiline':True]['text':' GCC 4.6 cannot handle a defaulted function with noexcept specifier','line_number':33,'multiline':False]['text':'  A helper functor because sometimes we don't have lambdas','line_number':40,'multiline':False]['text':' types','line_number':53,'multiline':False]['text':' impl-defined','line_number':58,'multiline':False]['text':' construct/copy','line_number':66,'multiline':False]['text':' by defaulting these functions, basic_string_ref becomes','line_number':70,'multiline':False]['text':'  trivially copy/move constructible.','line_number':71,'multiline':False]['text':' #if !defined(BOOST_NO_CXX11_RVALUE_REFERENCES) && !defined(BOOST_NO_CXX11_DELETED_FUNCTIONS)','line_number':97,'multiline':False]['text':'         // Constructing a string_ref from a temporary string is a bad idea','line_number':98,'multiline':False]['text':'         template<typename Allocator>','line_number':99,'multiline':False]['text':'         basic_string_ref(      std::basic_string<charT, traits, Allocator>&&)','line_number':100,'multiline':False]['text':'             = delete;','line_number':101,'multiline':False]['text':' #endif','line_number':102,'multiline':False]['text':' iterators','line_number':118,'multiline':False]['text':' capacity','line_number':128,'multiline':False]['text':' element access','line_number':134,'multiline':False]['text':' modifiers','line_number':147,'multiline':False]['text':' basic_string_ref string operations','line_number':163,'multiline':False]['text':'  Comparison operators','line_number':267,'multiline':False]['text':'  Equality','line_number':268,'multiline':False]['text':'  Inequality','line_number':295,'multiline':False]['text':'  Less than','line_number':322,'multiline':False]['text':'  Greater than','line_number':348,'multiline':False]['text':'  Less than or equal to','line_number':374,'multiline':False]['text':'  Greater than or equal to','line_number':400,'multiline':False]['text':' Inserter','line_number':426,'multiline':False]['text':' numeric conversions','line_number':434,'multiline':False]['text':'','line_number':435,'multiline':False]['text':'  These are short-term implementations.','line_number':436,'multiline':False]['text':'  In a production environment, I would rather avoid the copying.','line_number':437,'multiline':False]['text':'','line_number':438,'multiline':False]['text':' Hashing','line_number':508,'multiline':False]