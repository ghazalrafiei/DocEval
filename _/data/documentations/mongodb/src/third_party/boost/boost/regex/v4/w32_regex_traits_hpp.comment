['text':'
 *
 * Copyright (c) 2004
 * John Maddock
 *
 * Use, modification and distribution are subject to the 
 * Boost Software License, Version 1.0. (See accompanying file 
 * LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 *
 ','line_number':1,'multiline':True]['text':'
  *   LOCATION:    see http://www.boost.org for most recent version.
  *   FILE         w32_regex_traits.hpp
  *   VERSION      see <boost/version.hpp>
  *   DESCRIPTION: Declares regular expression traits class w32_regex_traits.
  ','line_number':12,'multiline':True]['text':'','line_number':70,'multiline':False]['text':' forward declaration is needed by some compilers:','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':'','line_number':78,'multiline':False]['text':' start by typedeffing the types we'll need:','line_number':79,'multiline':False]['text':'','line_number':80,'multiline':False]['text':' placeholder for LCID.','line_number':81,'multiline':False]['text':' placeholder for dll HANDLE.','line_number':82,'multiline':False]['text':'','line_number':84,'multiline':False]['text':' then add wrappers around the actual Win32 API's (ie implementation hiding):','line_number':85,'multiline':False]['text':'','line_number':86,'multiline':False]['text':'','line_number':117,'multiline':False]['text':' class w32_regex_traits_base:','line_number':118,'multiline':False]['text':' acts as a container for locale and the facets we are using.','line_number':119,'multiline':False]['text':'','line_number':120,'multiline':False]['text':'','line_number':139,'multiline':False]['text':' class w32_regex_traits_char_layer:','line_number':140,'multiline':False]['text':' implements methods that require specialisation for narrow characters:','line_number':141,'multiline':False]['text':'','line_number':142,'multiline':False]['text':' TODO: use a hash table when available!','line_number':179,'multiline':False]['text':' we need to start by initialising our syntax map so we know which','line_number':187,'multiline':False]['text':' character is used for which purpose:','line_number':188,'multiline':False]['text':'','line_number':201,'multiline':False]['text':' if we have a valid catalog then load our messages:','line_number':202,'multiline':False]['text':'','line_number':203,'multiline':False]['text':'','line_number':243,'multiline':False]['text':' specialised version for narrow characters:','line_number':244,'multiline':False]['text':'','line_number':245,'multiline':False]['text':'','line_number':282,'multiline':False]['text':' class w32_regex_traits_implementation:','line_number':283,'multiline':False]['text':' provides pimpl implementation for w32_regex_traits.','line_number':284,'multiline':False]['text':'','line_number':285,'multiline':False]['text':' must be C1_DEFINED << 1','line_number':291,'multiline':False]['text':' must be C1_DEFINED << 2','line_number':292,'multiline':False]['text':' must be C1_DEFINED << 3','line_number':293,'multiline':False]['text':' must be C1_DEFINED << 4','line_number':294,'multiline':False]['text':' all the masks used by the CT_CTYPE1 group','line_number':295,'multiline':False]['text':' error messages indexed by numberic ID','line_number':329,'multiline':False]['text':' character class names','line_number':330,'multiline':False]['text':' collating element names','line_number':331,'multiline':False]['text':' the form of the collation string','line_number':332,'multiline':False]['text':' the collation group delimiter','line_number':333,'multiline':False]['text':'','line_number':334,'multiline':False]['text':' helpers:','line_number':335,'multiline':False]['text':'','line_number':336,'multiline':False]['text':'','line_number':345,'multiline':False]['text':' What we do here depends upon the format of the sort key returned by','line_number':346,'multiline':False]['text':' sort key returned by this->transform:','line_number':347,'multiline':False]['text':'','line_number':348,'multiline':False]['text':' the best we can do is translate to lower case, then get a regular sort key:','line_number':353,'multiline':False]['text':' get a regular sort key, and then truncate it:','line_number':364,'multiline':False]['text':' get a regular sort key, and then truncate everything after the delim:','line_number':370,'multiline':False]['text':'','line_number':444,'multiline':False]['text':' if we have a valid catalog then load our messages:','line_number':445,'multiline':False]['text':'','line_number':446,'multiline':False]['text':'','line_number':449,'multiline':False]['text':' Error messages:','line_number':450,'multiline':False]['text':'','line_number':451,'multiline':False]['text':'','line_number':471,'multiline':False]['text':' Custom class names:','line_number':472,'multiline':False]['text':'','line_number':473,'multiline':False]['text':' C1_ALPHA | C1_DIGIT','line_number':476,'multiline':False]['text':' C1_ALPHA','line_number':477,'multiline':False]['text':' C1_CNTRL','line_number':478,'multiline':False]['text':' C1_DIGIT','line_number':479,'multiline':False]['text':' not C1_CNTRL or C1_SPACE','line_number':480,'multiline':False]['text':' C1_LOWER','line_number':481,'multiline':False]['text':' not C1_CNTRL','line_number':482,'multiline':False]['text':' C1_PUNCT','line_number':483,'multiline':False]['text':' C1_SPACE','line_number':484,'multiline':False]['text':' C1_UPPER','line_number':485,'multiline':False]['text':' C1_XDIGIT','line_number':486,'multiline':False]['text':' C1_BLANK','line_number':487,'multiline':False]['text':'','line_number':499,'multiline':False]['text':' get the collation format used by m_pcollate:','line_number':500,'multiline':False]['text':'','line_number':501,'multiline':False]['text':' C1_ALPHA | C1_DIGIT','line_number':512,'multiline':False]['text':' C1_ALPHA','line_number':513,'multiline':False]['text':' C1_BLANK','line_number':514,'multiline':False]['text':' C1_CNTRL','line_number':515,'multiline':False]['text':' C1_DIGIT','line_number':516,'multiline':False]['text':' C1_DIGIT','line_number':517,'multiline':False]['text':' not C1_CNTRL or C1_SPACE or C1_BLANK','line_number':518,'multiline':False]['text':' C1_LOWER','line_number':520,'multiline':False]['text':' C1_LOWER','line_number':521,'multiline':False]['text':' not C1_CNTRL','line_number':522,'multiline':False]['text':' C1_PUNCT','line_number':523,'multiline':False]['text':' C1_SPACE','line_number':524,'multiline':False]['text':' C1_SPACE','line_number':525,'multiline':False]['text':' C1_UPPER','line_number':526,'multiline':False]['text':' C1_UPPER','line_number':528,'multiline':False]['text':' C1_XDIGIT','line_number':532,'multiline':False]['text':' TODO: create a cache for previously constructed objects.','line_number':551,'multiline':False]['text':' BOOST_REGEX_DETAIL_NS','line_number':555,'multiline':False]['text':'','line_number':661,'multiline':False]['text':' extension:','line_number':662,'multiline':False]['text':' set the name of the message catalog in use (defaults to "boost_regex").','line_number':663,'multiline':False]['text':'','line_number':664,'multiline':False]['text':'','line_number':670,'multiline':False]['text':' catalog name handler:','line_number':671,'multiline':False]['text':'','line_number':672,'multiline':False]['text':' we need to start by initialising our syntax map so we know which','line_number':733,'multiline':False]['text':' character is used for which purpose:','line_number':734,'multiline':False]['text':'','line_number':748,'multiline':False]['text':' if we have a valid catalog then load our messages:','line_number':749,'multiline':False]['text':'','line_number':750,'multiline':False]['text':'','line_number':774,'multiline':False]['text':' finish off by calculating our escape types:','line_number':775,'multiline':False]['text':'','line_number':776,'multiline':False]['text':'','line_number':789,'multiline':False]['text':' fill in lower case map:','line_number':790,'multiline':False]['text':'','line_number':791,'multiline':False]['text':' if we have multibyte characters then not all may have been given','line_number':815,'multiline':False]['text':' a lower case mapping:','line_number':816,'multiline':False]['text':' failed conversion.','line_number':944,'multiline':False]['text':' locale identifier','line_number':969,'multiline':False]['text':' mapping transformation type','line_number':970,'multiline':False]['text':' source string','line_number':971,'multiline':False]['text':' number of characters in source string','line_number':972,'multiline':False]['text':' destination buffer','line_number':973,'multiline':False]['text':' size of destination buffer','line_number':974,'multiline':False]['text':' locale identifier','line_number':980,'multiline':False]['text':' mapping transformation type','line_number':981,'multiline':False]['text':' source string','line_number':982,'multiline':False]['text':' number of characters in source string','line_number':983,'multiline':False]['text':' destination buffer','line_number':984,'multiline':False]['text':' size of destination buffer','line_number':985,'multiline':False]['text':' locale identifier','line_number':998,'multiline':False]['text':' mapping transformation type','line_number':999,'multiline':False]['text':' source string','line_number':1000,'multiline':False]['text':' number of characters in source string','line_number':1001,'multiline':False]['text':' destination buffer','line_number':1002,'multiline':False]['text':' size of destination buffer','line_number':1003,'multiline':False]['text':' locale identifier','line_number':1009,'multiline':False]['text':' mapping transformation type','line_number':1010,'multiline':False]['text':' source string','line_number':1011,'multiline':False]['text':' number of characters in source string','line_number':1012,'multiline':False]['text':' destination buffer','line_number':1013,'multiline':False]['text':' size of destination buffer','line_number':1014,'multiline':False]['text':' locale identifier','line_number':1030,'multiline':False]['text':' mapping transformation type','line_number':1031,'multiline':False]['text':' source string','line_number':1032,'multiline':False]['text':' number of characters in source string','line_number':1033,'multiline':False]['text':' destination buffer','line_number':1034,'multiline':False]['text':' size of destination buffer','line_number':1035,'multiline':False]['text':' locale identifier','line_number':1041,'multiline':False]['text':' mapping transformation type','line_number':1042,'multiline':False]['text':' source string','line_number':1043,'multiline':False]['text':' number of characters in source string','line_number':1044,'multiline':False]['text':' destination buffer *of bytes*','line_number':1045,'multiline':False]['text':' size of destination buffer','line_number':1046,'multiline':False]['text':' locale identifier','line_number':1065,'multiline':False]['text':' mapping transformation type','line_number':1066,'multiline':False]['text':' source string','line_number':1067,'multiline':False]['text':' number of characters in source string','line_number':1068,'multiline':False]['text':' destination buffer','line_number':1069,'multiline':False]['text':' size of destination buffer','line_number':1070,'multiline':False]['text':' locale identifier','line_number':1084,'multiline':False]['text':' mapping transformation type','line_number':1085,'multiline':False]['text':' source string','line_number':1086,'multiline':False]['text':' number of characters in source string','line_number':1087,'multiline':False]['text':' destination buffer','line_number':1088,'multiline':False]['text':' size of destination buffer','line_number':1089,'multiline':False]['text':' No single byte lower case equivalent available','line_number':1094,'multiline':False]['text':' locale identifier','line_number':1104,'multiline':False]['text':' mapping transformation type','line_number':1105,'multiline':False]['text':' source string','line_number':1106,'multiline':False]['text':' number of characters in source string','line_number':1107,'multiline':False]['text':' destination buffer','line_number':1108,'multiline':False]['text':' size of destination buffer','line_number':1109,'multiline':False]['text':' locale identifier','line_number':1120,'multiline':False]['text':' mapping transformation type','line_number':1121,'multiline':False]['text':' source string','line_number':1122,'multiline':False]['text':' number of characters in source string','line_number':1123,'multiline':False]['text':' destination buffer','line_number':1124,'multiline':False]['text':' size of destination buffer','line_number':1125,'multiline':False]['text':' locale identifier','line_number':1139,'multiline':False]['text':' mapping transformation type','line_number':1140,'multiline':False]['text':' source string','line_number':1141,'multiline':False]['text':' number of characters in source string','line_number':1142,'multiline':False]['text':' destination buffer','line_number':1143,'multiline':False]['text':' size of destination buffer','line_number':1144,'multiline':False]['text':' No single byte upper case equivalent available.','line_number':1149,'multiline':False]['text':' locale identifier','line_number':1159,'multiline':False]['text':' mapping transformation type','line_number':1160,'multiline':False]['text':' source string','line_number':1161,'multiline':False]['text':' number of characters in source string','line_number':1162,'multiline':False]['text':' destination buffer','line_number':1163,'multiline':False]['text':' size of destination buffer','line_number':1164,'multiline':False]['text':' BOOST_REGEX_DETAIL_NS','line_number':1207,'multiline':False]['text':' boost','line_number':1210,'multiline':False]['text':' BOOST_REGEX_NO_WIN32_LOCALE','line_number':1227,'multiline':False]