['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':' static.hpp','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]['text':' Random thoughts:','line_number':24,'multiline':False]['text':' - must support indirect repeat counts {$n,$m}','line_number':25,'multiline':False]['text':' - add ws to eat whitespace (make *ws illegal)','line_number':26,'multiline':False]['text':' - a{n,m}    -> repeat<n,m>(a)','line_number':27,'multiline':False]['text':' - a{$n,$m}  -> repeat(n,m)(a)','line_number':28,'multiline':False]['text':' - add nil to match nothing','line_number':29,'multiline':False]['text':' - instead of s1, s2, etc., how about s[1], s[2], etc.? Needlessly verbose?','line_number':30,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':35,'multiline':False]['text':' stacked_xpression','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' match','line_number':42,'multiline':False]['text':'  delegates to Next','line_number':43,'multiline':False]['text':' top_match','line_number':51,'multiline':False]['text':'   jump back to the xpression on top of the xpression stack,','line_number':52,'multiline':False]['text':'   and keep the xpression on the stack.','line_number':53,'multiline':False]['text':' pop_match','line_number':61,'multiline':False]['text':'   jump back to the xpression on top of the xpression stack,','line_number':62,'multiline':False]['text':'   pop the xpression off the stack.','line_number':63,'multiline':False]['text':' skip_match','line_number':70,'multiline':False]['text':'   pop the xpression off the top of the stack and ignore it; call','line_number':71,'multiline':False]['text':'   match on next.','line_number':72,'multiline':False]['text':' could be static_xpression::skip_impl or stacked_xpression::skip_impl','line_number':76,'multiline':False]['text':' depending on if there is 1 or more than 1 xpression on the','line_number':77,'multiline':False]['text':' xpression stack','line_number':78,'multiline':False]['text':'protected:','line_number':82,'multiline':False]['text':' skip_impl','line_number':84,'multiline':False]['text':'   implementation of skip_match.','line_number':85,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':93,'multiline':False]['text':' stacked_xpression_cast','line_number':94,'multiline':False]['text':'','line_number':95,'multiline':False]['text':' NOTE: this is a little white lie. The "next" object doesn't really have','line_number':99,'multiline':False]['text':' the type to which we're casting it. It is harmless, though. We are only using','line_number':100,'multiline':False]['text':' the cast to decorate the next object with type information. It is done','line_number':101,'multiline':False]['text':' this way to save stack space.','line_number':102,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':107,'multiline':False]['text':' static_xpression','line_number':108,'multiline':False]['text':'','line_number':109,'multiline':False]['text':' match','line_number':131,'multiline':False]['text':'  delegates to the Matcher','line_number':132,'multiline':False]['text':' push_match','line_number':139,'multiline':False]['text':'   call match on this, but also push "Top" onto the xpression','line_number':140,'multiline':False]['text':'   stack so we know what we are jumping back to later.','line_number':141,'multiline':False]['text':' skip_impl','line_number':148,'multiline':False]['text':'   implementation of skip_match, called from stacked_xpression::skip_match','line_number':149,'multiline':False]['text':' for linking a compiled regular xpression','line_number':156,'multiline':False]['text':' for building a lead-follow','line_number':164,'multiline':False]['text':' for getting xpression width','line_number':171,'multiline':False]['text':' no-op','line_number':190,'multiline':False]['text':' Should only be called in contexts where the width is','line_number':201,'multiline':False]['text':' known to be fixed.','line_number':202,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':207,'multiline':False]['text':' make_static','line_number':208,'multiline':False]['text':'','line_number':209,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':224,'multiline':False]['text':' no_next','line_number':225,'multiline':False]['text':'','line_number':226,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':249,'multiline':False]['text':' get_mark_number','line_number':250,'multiline':False]['text':'','line_number':251,'multiline':False]['text':' namespace boost::xpressive::detail','line_number':257,'multiline':False]