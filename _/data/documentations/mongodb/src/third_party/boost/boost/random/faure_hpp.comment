['text':' boost random/faure.hpp header file
 *
 * Copyright Justinas Vygintas Daugmaudis 2010-2018
 * Distributed under the Boost Software License, Version 1.0. (See
 * accompanying file LICENSE_1_0.txt or copy at
 * http://www.boost.org/LICENSE_1_0.txt)
 ','line_number':1,'multiline':True]['text':'* @cond ','line_number':23,'multiline':True]['text':' There is no particular reason why 187 first primes were chosen','line_number':28,'multiline':False]['text':' to be put into this table. The only reason was, perhaps, that','line_number':29,'multiline':False]['text':' the number of dimensions for Faure generator would be around','line_number':30,'multiline':False]['text':' the same order of magnitude as the number of dimensions supported','line_number':31,'multiline':False]['text':' by the Sobol qrng.','line_number':32,'multiline':False]['text':' A function that returns lower bound prime for a given n','line_number':39,'multiline':False]['text':' namespace qrng_tables','line_number':66,'multiline':False]['text':' namespace detail','line_number':67,'multiline':False]['text':' Returns the integer part of the logarithm base Base of arg.','line_number':72,'multiline':False]['text':' In erroneous situations, e.g., integer_log(base, 0) the function','line_number':73,'multiline':False]['text':' returns 0 and does not report the error. This is the intended','line_number':74,'multiline':False]['text':' behavior.','line_number':75,'multiline':False]['text':' Perform exponentiation by squaring (potential for code reuse in multiprecision::powm)','line_number':87,'multiline':False]['text':' namespace fr','line_number':102,'multiline':False]['text':' Computes a table of binomial coefficients modulo qs.','line_number':104,'multiline':False]['text':' Binomial values modulo qs_base will never be bigger than qs_base.','line_number':111,'multiline':False]['text':' We can choose an appropriate integer type to hold modulo values and','line_number':112,'multiline':False]['text':' shave off memory footprint.','line_number':113,'multiline':False]['text':' default copy c-tor is fine','line_number':116,'multiline':False]['text':' Throw away previously computed coefficients.','line_number':127,'multiline':False]['text':' This will trigger recomputation on next update','line_number':128,'multiline':False]['text':' cast safe because log is small','line_number':140,'multiline':False]['text':' Find other components using the Faure method.','line_number':147,'multiline':False]['text':' Sum ( J <= I <= HISUM ) ( old ytemp(i) * binom(i,j) ) mod QS.','line_number':160,'multiline':False]['text':' Here we do','line_number':186,'multiline':False]['text':'   Sum ( 0 <= J <= HISUM ) YTEMP(J) * QS**J','line_number':187,'multiline':False]['text':'   Sum ( 0 <= J <= HISUM ) YTEMP(J) / QS**(J+1)','line_number':188,'multiline':False]['text':' in one go','line_number':189,'multiline':False]['text':' RealType <- size type','line_number':195,'multiline':False]['text':' saves double dereference','line_number':198,'multiline':False]['text':' Resize and initialize to zero','line_number':205,'multiline':False]['text':' The first row and the diagonal is assigned to 1','line_number':209,'multiline':False]['text':' Computes binomial coefficients MOD qs_base','line_number':217,'multiline':False]['text':' here we cache precomputed data; note that binomial coefficients have','line_number':231,'multiline':False]['text':' to be recomputed iff the integer part of the logarithm of seq changes,','line_number':232,'multiline':False]['text':' which happens relatively rarely.','line_number':233,'multiline':False]['text':' packed upper (!) triangular matrix','line_number':234,'multiline':False]['text':' namespace qrng_detail','line_number':239,'multiline':False]['text':'* @endcond ','line_number':243,'multiline':True]['text':'!Instantiations of class template faure_engine model a \quasi_random_number_generator.','line_number':245,'multiline':False]['text':'!The faure_engine uses the algorithm described in','line_number':246,'multiline':False]['text':'! \blockquote','line_number':247,'multiline':False]['text':'!Henri Faure,','line_number':248,'multiline':False]['text':'!Discrepance de suites associees a un systeme de numeration (en dimension s),','line_number':249,'multiline':False]['text':'!Acta Arithmetica,','line_number':250,'multiline':False]['text':'!Volume 41, 1982, pages 337-351.','line_number':251,'multiline':False]['text':'! \endblockquote','line_number':252,'multiline':False]['text':'','line_number':253,'multiline':False]['text':'! \blockquote','line_number':254,'multiline':False]['text':'!Bennett Fox,','line_number':255,'multiline':False]['text':'!Algorithm 647:','line_number':256,'multiline':False]['text':'!Implementation and Relative Efficiency of Quasirandom','line_number':257,'multiline':False]['text':'!Sequence Generators,','line_number':258,'multiline':False]['text':'!ACM Transactions on Mathematical Software,','line_number':259,'multiline':False]['text':'!Volume 12, Number 4, December 1986, pages 362-376.','line_number':260,'multiline':False]['text':'! \endblockquote','line_number':261,'multiline':False]['text':'!','line_number':262,'multiline':False]['text':'!In the following documentation @c X denotes the concrete class of the template','line_number':263,'multiline':False]['text':'!faure_engine returning objects of type @c RealType, u and v are the values of @c X.','line_number':264,'multiline':False]['text':'!','line_number':265,'multiline':False]['text':'!Some member functions may throw exceptions of type @c std::bad_alloc.','line_number':266,'multiline':False]['text':'* @copydoc boost::random::niederreiter_base2_engine::min() ','line_number':285,'multiline':True]['text':'* @copydoc boost::random::niederreiter_base2_engine::max() ','line_number':289,'multiline':True]['text':'!Effects: Constructs the `s`-dimensional default Faure quasi-random number generator.','line_number':293,'multiline':False]['text':'!','line_number':294,'multiline':False]['text':'!Throws: bad_alloc, invalid_argument.','line_number':295,'multiline':False]['text':' initialize the binomial table here','line_number':297,'multiline':False]['text':'* @copydetails boost::random::niederreiter_base2_engine::seed(UIntType)
   * Throws: bad_alloc.
   ','line_number':300,'multiline':True]['text':'=========================Doxygen needs this!==============================','line_number':310,'multiline':False]['text':'* @copydoc boost::random::niederreiter_base2_engine::dimension() ','line_number':312,'multiline':True]['text':'* @copydoc boost::random::niederreiter_base2_engine::operator()() ','line_number':315,'multiline':True]['text':'* @copydoc boost::random::niederreiter_base2_engine::discard(boost::uintmax_t)
   * Throws: bad_alloc.
   ','line_number':321,'multiline':True]['text':'* Returns true if the two generators will produce identical sequences of outputs. ','line_number':329,'multiline':True]['text':'* Returns true if the two generators will produce different sequences of outputs. ','line_number':333,'multiline':True]['text':'* Writes the textual representation of the generator to a @c std::ostream. ','line_number':336,'multiline':True]['text':'* Reads the textual representation of the generator from a @c std::istream. ','line_number':340,'multiline':True]['text':' BOOST_RANDOM_DOXYGEN','line_number':344,'multiline':False]['text':'* @cond hide_private_members ','line_number':347,'multiline':True]['text':'* @endcond ','line_number':353,'multiline':True]['text':'*
 * @attention This specialization of \faure_engine supports up to 1117 dimensions.
 *
 * However, it is possible to provide your own prime table to \faure_engine should the default one be insufficient.
 ','line_number':356,'multiline':True]['text':' namespace random','line_number':363,'multiline':False]['text':' namespace boost','line_number':365,'multiline':False]['text':' BOOST_RANDOM_FAURE_HPP','line_number':367,'multiline':False]