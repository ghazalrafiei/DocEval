['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'/ \file is_noncopyable.hpp','line_number':2,'multiline':False]['text':'/ Utility for detecting when types are non-copyable','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':5,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':6,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':7,'multiline':False]['text':' All classes derived from std::ios_base have these public nested types,','line_number':22,'multiline':False]['text':' and are non-copyable. This is an imperfect test, but it's the best we','line_number':23,'multiline':False]['text':' we can do.','line_number':24,'multiline':False]['text':'/ INTERNAL ONLY','line_number':45,'multiline':False]['text':' This should be a customization point. And it serves the same purpose','line_number':46,'multiline':False]['text':' as the is_noncopyable trait in Boost.Foreach. ','line_number':47,'multiline':False]