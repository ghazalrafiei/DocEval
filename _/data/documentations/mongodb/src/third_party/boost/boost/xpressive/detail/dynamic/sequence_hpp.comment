['text':'/////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':' sequence.hpp','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'  Copyright 2008 Eric Niebler. Distributed under the Boost','line_number':4,'multiline':False]['text':'  Software License, Version 1.0. (See accompanying file','line_number':5,'multiline':False]['text':'  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':' MS compatible compilers support #pragma once','line_number':11,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////////','line_number':24,'multiline':False]['text':' sequence','line_number':25,'multiline':False]['text':' keep track of sequence width and purity','line_number':79,'multiline':False]['text':' Keep track of width and purity','line_number':92,'multiline':False]['text':' through the wonders of reference counting, all alternates_ can share an end_alternate','line_number':104,'multiline':False]['text':' terminate each alternate with an alternate_end_matcher','line_number':110,'multiline':False]['text':' namespace boost::xpressive::detail','line_number':173,'multiline':False]