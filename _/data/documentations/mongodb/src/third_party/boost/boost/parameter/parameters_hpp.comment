['text':' Copyright David Abrahams, Daniel Wallin 2003.','line_number':1,'multiline':False]['text':' Copyright Cromwell D. Enage 2017.','line_number':2,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':3,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':4,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':5,'multiline':False]['text':' The make_arg_list<> metafunction produces a reversed arg_list,','line_number':16,'multiline':False]['text':' so pass the arguments to the arg_list constructor reversed in turn.','line_number':17,'multiline':False]['text':' namespace boost::parameter::aux','line_number':20,'multiline':False]['text':' TODO: Reduce template code bloat. -- Cromwell D. Enage','line_number':35,'multiline':False]['text':' namespace boost::parameter::aux','line_number':81,'multiline':False]['text':'#include <boost/mp11/mpl.hpp>','line_number':100,'multiline':False]['text':' Newer versions of MSVC fail on the evaluate_category and','line_number':105,'multiline':False]['text':' preprocessor_eval_category test programs when parameters uses','line_number':106,'multiline':False]['text':' boost::fusion::list.','line_number':107,'multiline':False]['text':' -- Cromwell D. Enage','line_number':108,'multiline':False]['text':' BOOST_FUSION_HAS_VARIADIC_DEQUE','line_number':125,'multiline':False]['text':' BOOST_FUSION_HAS_VARIADIC_LIST','line_number':126,'multiline':False]['text':' BOOST_PARAMETER_CAN_USE_MP11','line_number':127,'multiline':False]['text':' BOOST_PARAMETER_VARIADIC_MPL_SEQUENCE','line_number':128,'multiline':False]['text':' If the elements of NamedList match the criteria of overload','line_number':140,'multiline':False]['text':' resolution, returns a type which can be constructed from','line_number':141,'multiline':False]['text':' parameters.  Otherwise, this is not a valid metafunction','line_number':142,'multiline':False]['text':' (no nested ::type).','line_number':143,'multiline':False]['text':' Specializations are to be used as an optional argument','line_number':173,'multiline':False]['text':' to eliminate overloads via SFINAE.','line_number':174,'multiline':False]['text':' Don't emit errors when doing SFINAE.','line_number':184,'multiline':False]['text':' Metafunction that returns an ArgumentPack.','line_number':195,'multiline':False]['text':' The function call operator is used to build an arg_list that','line_number':222,'multiline':False]['text':' labels the positional parameters and maintains whatever other','line_number':223,'multiline':False]['text':' tags may have been specified by the caller.','line_number':224,'multiline':False]['text':' namespace boost::parameter','line_number':278,'multiline':False]['text':' !defined(BOOST_PARAMETER_HAS_PERFECT_FORWARDING)','line_number':280,'multiline':False]['text':' If the elements of NamedList match the criteria of overload','line_number':343,'multiline':False]['text':' resolution, returns a type which can be constructed from','line_number':344,'multiline':False]['text':' parameters.  Otherwise, this is not a valid metafunction','line_number':345,'multiline':False]['text':' (no nested ::type).','line_number':346,'multiline':False]['text':' If NamedList satisfies the PS0, PS1, ..., this is a metafunction','line_number':349,'multiline':False]['text':' returning parameters.  Otherwise it has no nested ::type.','line_number':350,'multiline':False]['text':' ::boost::mpl::and_<','line_number':354,'multiline':False]['text':'    aux::satisfies_requirements_of<NamedList,PS0>','line_number':355,'multiline':False]['text':'  , ::boost::mpl::and_<','line_number':356,'multiline':False]['text':'       aux::satisfies_requirements_of<NamedList,PS1>...','line_number':357,'multiline':False]['text':'           ..., ::boost::mpl::true_','line_number':358,'multiline':False]['text':' ...> >','line_number':359,'multiline':False]['text':' SFINAE enabled, not Borland','line_number':384,'multiline':False]['text':' Specializations are to be used as an optional argument','line_number':386,'multiline':False]['text':' to eliminate overloads via SFINAE.','line_number':387,'multiline':False]['text':' Borland simply can't handle default arguments in member','line_number':390,'multiline':False]['text':' class templates.  People wishing to write portable code can','line_number':391,'multiline':False]['text':' explicitly specify BOOST_PARAMETER_MAX_ARITY arguments.','line_number':392,'multiline':False]['text':' Don't emit errors when doing SFINAE.','line_number':417,'multiline':False]['text':' SFINAE enabled, not Borland','line_number':429,'multiline':False]['text':' Metafunction that returns an ArgumentPack.','line_number':431,'multiline':False]['text':' TODO, bind has to instantiate the error type in the result','line_number':433,'multiline':False]['text':' of make_arg_list.','line_number':434,'multiline':False]['text':' Borland simply can't handle default arguments in member','line_number':438,'multiline':False]['text':' class templates.  People wishing to write portable code can','line_number':439,'multiline':False]['text':' explicitly specify BOOST_PARAMETER_MAX_ARITY arguments.','line_number':440,'multiline':False]['text':' The function call operator is used to build an arg_list that','line_number':472,'multiline':False]['text':' labels the positional parameters and maintains whatever other','line_number':473,'multiline':False]['text':' tags may have been specified by the caller.','line_number':474,'multiline':False]['text':'','line_number':475,'multiline':False]['text':' !!!NOTE!!!','line_number':476,'multiline':False]['text':'','line_number':477,'multiline':False]['text':' The make_arg_list<> metafunction produces a reversed arg_list,','line_number':478,'multiline':False]['text':' so pass the arguments to the arg_list constructor reversed in turn.','line_number':479,'multiline':False]['text':' (0 == BOOST_PARAMETER_EXPONENTIAL_OVERLOAD_THRESHOLD_ARITY)','line_number':506,'multiline':False]['text':' , void_(), void_(), void_() ...','line_number':533,'multiline':False]['text':' , void_(), void_() ...','line_number':574,'multiline':False]['text':' Higher arities are handled by the preprocessor','line_number':583,'multiline':False]['text':' exponential overloads','line_number':592,'multiline':False]['text':' namespace boost::parameter','line_number':594,'multiline':False]['text':' BOOST_PARAMETER_HAS_PERFECT_FORWARDING','line_number':598,'multiline':False]['text':' include guard','line_number':599,'multiline':False]