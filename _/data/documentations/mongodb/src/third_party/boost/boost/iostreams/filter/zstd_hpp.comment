['text':' (C) Copyright Reimar DÃ¶ffinger 2018.','line_number':1,'multiline':False]['text':' Based on zstd.hpp by:','line_number':2,'multiline':False]['text':' (C) Copyright Milan Svoboda 2008.','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0. (See accompanying','line_number':4,'multiline':False]['text':' file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt.)','line_number':5,'multiline':False]['text':' See http://www.boost.org/libs/iostreams for documentation.','line_number':7,'multiline':False]['text':' streamsize.','line_number':17,'multiline':False]['text':' allocator, bad_alloc.','line_number':18,'multiline':False]['text':' MSVC, STATIC_CONSTANT, DEDUCED_TYPENAME, DINKUM.','line_number':20,'multiline':False]['text':' buffer size.','line_number':22,'multiline':False]['text':' failure, streamsize.','line_number':26,'multiline':False]['text':' Must come last.','line_number':31,'multiline':False]['text':' Dependencies not exported.','line_number':34,'multiline':False]['text':' Compression levels','line_number':45,'multiline':False]['text':' Status codes','line_number':51,'multiline':False]['text':' Flush codes','line_number':56,'multiline':False]['text':' Code for current OS','line_number':62,'multiline':False]['text':' Null pointer constant.','line_number':64,'multiline':False]['text':' Default values','line_number':68,'multiline':False]['text':' End namespace zstd.','line_number':70,'multiline':False]['text':'','line_number':72,'multiline':False]['text':' Class name: zstd_params.','line_number':73,'multiline':False]['text':' Description: Encapsulates the parameters passed to zstddec_init','line_number':74,'multiline':False]['text':'      to customize compression and decompression.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' Non-explicit constructor.','line_number':79,'multiline':False]['text':'','line_number':86,'multiline':False]['text':' Class name: zstd_error.','line_number':87,'multiline':False]['text':' Description: Subclass of std::ios::failure thrown to indicate','line_number':88,'multiline':False]['text':'     zstd errors other than out-of-memory conditions.','line_number':89,'multiline':False]['text':'','line_number':90,'multiline':False]['text':' VC6 workaround (C2516)','line_number':116,'multiline':False]['text':' Actual type: ZSTD_CStream *','line_number':162,'multiline':False]['text':' Actual type: ZSTD_DStream *','line_number':163,'multiline':False]['text':' Actual type: ZSTD_inBuffer *','line_number':164,'multiline':False]['text':' Actual type: ZSTD_outBuffer *','line_number':165,'multiline':False]['text':'','line_number':170,'multiline':False]['text':' Template name: zstd_compressor_impl','line_number':171,'multiline':False]['text':' Description: Model of C-Style Filter implementing compression by','line_number':172,'multiline':False]['text':'      delegating to the zstd function deflate.','line_number':173,'multiline':False]['text':'','line_number':174,'multiline':False]['text':'','line_number':185,'multiline':False]['text':' Template name: zstd_compressor_impl','line_number':186,'multiline':False]['text':' Description: Model of C-Style Filte implementing decompression by','line_number':187,'multiline':False]['text':'      delegating to the zstd function inflate.','line_number':188,'multiline':False]['text':'','line_number':189,'multiline':False]['text':' End namespace detail.','line_number':201,'multiline':False]['text':'','line_number':203,'multiline':False]['text':' Template name: zstd_compressor','line_number':204,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':205,'multiline':False]['text':'      compression using zstd.','line_number':206,'multiline':False]['text':'','line_number':207,'multiline':False]['text':'','line_number':225,'multiline':False]['text':' Template name: zstd_decompressor','line_number':226,'multiline':False]['text':' Description: Model of InputFilter and OutputFilter implementing','line_number':227,'multiline':False]['text':'      decompression using zstd.','line_number':228,'multiline':False]['text':'','line_number':229,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':248,'multiline':False]['text':'------------------Implementation of zstd_allocator--------------------------//','line_number':250,'multiline':False]['text':'------------------Implementation of zstd_compressor_impl--------------------//','line_number':278,'multiline':False]['text':'------------------Implementation of zstd_decompressor_impl------------------//','line_number':302,'multiline':False]['text':' End namespace detail.','line_number':333,'multiline':False]['text':'------------------Implementation of zstd_compressor-----------------------//','line_number':335,'multiline':False]['text':'------------------Implementation of zstd_decompressor-----------------------//','line_number':342,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':354,'multiline':False]['text':' End namespaces iostreams, boost.','line_number':356,'multiline':False]['text':' Pops abi_suffix.hpp pragmas.','line_number':358,'multiline':False]['text':' #ifndef BOOST_IOSTREAMS_ZSTD_HPP_INCLUDED','line_number':363,'multiline':False]