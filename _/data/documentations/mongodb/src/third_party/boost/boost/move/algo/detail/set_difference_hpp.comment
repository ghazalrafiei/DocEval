['text':'////////////////////////////////////////////////////////////////////////////','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' (C) Copyright Ion Gaztanaga 2017-2017.','line_number':3,'multiline':False]['text':' Distributed under the Boost Software License, Version 1.0.','line_number':4,'multiline':False]['text':' (See accompanying file LICENSE_1_0.txt or copy at','line_number':5,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' See http://www.boost.org/libs/move for documentation.','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'////////////////////////////////////////////////////////////////////////////','line_number':10,'multiline':False]['text':'namespace move_detail{','line_number':37,'multiline':False]['text':'Moves the elements from the sorted range [first1, last1) which are not found in the sorted','line_number':41,'multiline':False]['text':'range [first2, last2) to the range beginning at result.','line_number':42,'multiline':False]['text':'The resulting range is also sorted. Equivalent elements are treated individually,','line_number':43,'multiline':False]['text':'that is, if some element is found m times in [first1, last1) and n times in [first2, last2),','line_number':44,'multiline':False]['text':'it will be moved to result exactly max(m-n, 0) times.','line_number':45,'multiline':False]['text':'The resulting range cannot overlap with either of the input ranges.','line_number':46,'multiline':False]['text':'Moves the elements from the sorted range [first1, last1) which are not found in the sorted','line_number':71,'multiline':False]['text':'range [first2, last2) to the range beginning at first1 (in place operation in range1).','line_number':72,'multiline':False]['text':'The resulting range is also sorted. Equivalent elements are treated individually,','line_number':73,'multiline':False]['text':'that is, if some element is found m times in [first1, last1) and n times in [first2, last2),','line_number':74,'multiline':False]['text':'it will be moved to result exactly max(m-n, 0) times.','line_number':75,'multiline':False]['text':'Skip copying from range 1 if no element has to be skipped','line_number':81,'multiline':False]['text':'An element from range 1 must be skipped, no longer an inplace operation','line_number':91,'multiline':False]['text':'Moves the elements from the sorted range [first1, last1) which are not found in the sorted','line_number':103,'multiline':False]['text':'range [first2, last2) to the range beginning at first1.','line_number':104,'multiline':False]['text':'The resulting range is also sorted. Equivalent elements from range 1 are moved past to end','line_number':105,'multiline':False]['text':'of the result,','line_number':106,'multiline':False]['text':'that is, if some element is found m times in [first1, last1) and n times in [first2, last2),','line_number':107,'multiline':False]['text':'it will be moved to result exactly max(m-n, 0) times.','line_number':108,'multiline':False]['text':'The resulting range cannot overlap with either of the input ranges.','line_number':109,'multiline':False]['text':'unique_copy-like sequence with forward iterators but don't write i','line_number':117,'multiline':False]['text':'to result before comparing as moving *i could alter the value in i.','line_number':118,'multiline':False]['text':'Skip equivalent elements in range1 but don't write i','line_number':133,'multiline':False]['text':'to result before comparing as moving *i could alter the value in i.','line_number':134,'multiline':False]['text':'Moves the elements from the sorted range [first1, last1) which are not found in the sorted','line_number':156,'multiline':False]['text':'range [first2, last2) to the range beginning at first1 (in place operation in range1).','line_number':157,'multiline':False]['text':'The resulting range is also sorted. Equivalent elements are treated individually,','line_number':158,'multiline':False]['text':'that is, if some element is found m times in [first1, last1) and n times in [first2, last2),','line_number':159,'multiline':False]['text':'it will be moved to result exactly max(m-n, 0) times.','line_number':160,'multiline':False]['text':'Skip copying from range 1 if no element has to be skipped','line_number':166,'multiline':False]['text':'unique-like algorithm for the remaining range 1','line_number':168,'multiline':False]['text':'skip any adjacent equivalent element in range 1','line_number':181,'multiline':False]['text':'Some elements from range 1 must be skipped, no longer an inplace operation','line_number':184,'multiline':False]['text':'Some elements from range 1 must be skipped, no longer an inplace operation','line_number':194,'multiline':False]['text':'An element from range 1 must be skipped, no longer an inplace operation','line_number':196,'multiline':False]['text':'namespace movelib {','line_number':210,'multiline':False]['text':'namespace boost {','line_number':211,'multiline':False]['text':'#define BOOST_MOVE_SET_DIFFERENCE_HPP','line_number':213,'multiline':False]