['text':' MS compatible compilers support #pragma once','line_number':4,'multiline':False]['text':'///////1/////////2/////////3/////////4/////////5/////////6/////////7/////////8','line_number':9,'multiline':False]['text':' basic_xml_iarchive.hpp','line_number':10,'multiline':False]['text':' (C) Copyright 2002 Robert Ramey - http://www.rrsd.com .','line_number':12,'multiline':False]['text':' Use, modification and distribution is subject to the Boost Software','line_number':13,'multiline':False]['text':' License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at','line_number':14,'multiline':False]['text':' http://www.boost.org/LICENSE_1_0.txt)','line_number':15,'multiline':False]['text':'  See http://www.boost.org for updates, documentation, and revision history.','line_number':17,'multiline':False]['text':' must be the last header','line_number':26,'multiline':False]['text':' namespace detail','line_number':38,'multiline':False]['text':'///////////////////////////////////////////////////////////////////////','line_number':40,'multiline':False]['text':' class basic_xml_iarchive - read serialized objects from a input text stream','line_number':41,'multiline':False]['text':' Anything not an attribute and not a name-value pair is an','line_number':58,'multiline':False]['text':' should be trapped here.','line_number':59,'multiline':False]['text':' If your program fails to compile here, its most likely due to','line_number':63,'multiline':False]['text':' not specifying an nvp wrapper around the variable to','line_number':64,'multiline':False]['text':' be serialized.','line_number':65,'multiline':False]['text':' Anything not an attribute - see below - should be a name value','line_number':70,'multiline':False]['text':' pair and be processed here','line_number':71,'multiline':False]['text':' specific overrides for attributes - handle as','line_number':82,'multiline':False]['text':' primitives. These are not name-value pairs','line_number':83,'multiline':False]['text':' so they have to be intercepted here and passed on to load.','line_number':84,'multiline':False]['text':' although the class_id is included in the xml text file in order','line_number':85,'multiline':False]['text':' to make the file self describing, it isn't used when loading','line_number':86,'multiline':False]['text':' an xml archive.  So we can skip it here.  Note: we MUST override','line_number':87,'multiline':False]['text':' it otherwise it will be loaded as a normal primitive w/o tag and','line_number':88,'multiline':False]['text':' leaving the archive in an undetermined state','line_number':89,'multiline':False]['text':' t ','line_number':92,'multiline':True]['text':' class_name_type can't be handled here as it depends upon the','line_number':99,'multiline':False]['text':' char type used by the stream.  So require the derived implementation','line_number':100,'multiline':False]['text':' handle this.','line_number':101,'multiline':False]['text':' void load_override(class_name_type & t);','line_number':102,'multiline':False]['text':' namespace archive','line_number':110,'multiline':False]['text':' namespace boost','line_number':111,'multiline':False]['text':' pops abi_suffix.hpp pragmas','line_number':117,'multiline':False]['text':' BOOST_ARCHIVE_BASIC_XML_IARCHIVE_HPP','line_number':119,'multiline':False]