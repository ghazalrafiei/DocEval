['text':'  ratio.hpp  ---------------------------------------------------------------//','line_number':1,'multiline':False]['text':'  Copyright 2008 Howard Hinnant','line_number':3,'multiline':False]['text':'  Copyright 2008 Beman Dawes','line_number':4,'multiline':False]['text':'  Copyright 2009 Vicente J. Botet Escriba','line_number':5,'multiline':False]['text':'  Distributed under the Boost Software License, Version 1.0.','line_number':7,'multiline':False]['text':'  See http://www.boost.org/LICENSE_1_0.txt','line_number':8,'multiline':False]['text':'

This code was derived by Beman Dawes from Howard Hinnant's time2_demo prototype.
Many thanks to Howard for making his code available under the Boost license.
The original code was modified to conform to Boost conventions and to section
20.4 Compile-time rational arithmetic [ratio], of the C++ committee working
paper N2798.
See http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2798.pdf.

time2_demo contained this comment:

    Much thanks to Andrei Alexandrescu,
                   Walter Brown,
                   Peter Dimov,
                   Jeff Garland,
                   Terry Golubiewski,
                   Daniel Krugler,
                   Anthony Williams.
','line_number':10,'multiline':True]['text':' The way overflow is managed for ratio_less is taken from llvm/libcxx/include/ratio','line_number':30,'multiline':False]['text':'','line_number':46,'multiline':False]['text':' We simply cannot include this header on gcc without getting copious warnings of the kind:','line_number':47,'multiline':False]['text':'','line_number':48,'multiline':False]['text':' boost/integer.hpp:77:30: warning: use of C99 long long integer constant','line_number':49,'multiline':False]['text':'','line_number':50,'multiline':False]['text':' And yet there is no other reasonable implementation, so we declare this a system header','line_number':51,'multiline':False]['text':' to suppress these warnings.','line_number':52,'multiline':False]['text':'','line_number':53,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':61,'multiline':False]['text':'                                 helpers                                    //','line_number':62,'multiline':False]['text':'----------------------------------------------------------------------------//','line_number':63,'multiline':False]['text':' Not actually used but left here in case needed in future maintenance','line_number':171,'multiline':False]['text':' ratio arithmetic','line_number':186,'multiline':False]['text':'The nested typedef type shall be a synonym for ratio<T1, T2>::type where T1 has the value R1::num *','line_number':195,'multiline':False]['text':'R2::den + R2::num * R1::den and T2 has the value R1::den * R2::den.','line_number':196,'multiline':False]['text':' As the preceding doesn't works because of overflow on boost::intmax_t we need something more elaborated.','line_number':197,'multiline':False]['text':' No need to normalize as ratio_multiply is already normalized','line_number':202,'multiline':False]['text':'The nested typedef type shall be a synonym for ratio<T1, T2>::type where T1 has the value','line_number':226,'multiline':False]['text':' R1::num *R2::den - R2::num * R1::den and T2 has the value R1::den * R2::den.','line_number':227,'multiline':False]['text':' As the preceding doesn't works because of overflow on boost::intmax_t we need something more elaborated.','line_number':228,'multiline':False]['text':' No need to normalize as ratio_multiply is already normalized','line_number':233,'multiline':False]['text':' The nested typedef type  shall be a synonym for ratio<R1::num * R2::den - R2::num * R1::den, R1::den * R2::den>::type.','line_number':258,'multiline':False]['text':' As the preceding doesn't works because of overflow on boost::intmax_t we need something more elaborated.','line_number':259,'multiline':False]['text':' The nested typedef type  shall be a synonym for ratio<R1::num * R2::den, R2::num * R1::den>::type.','line_number':274,'multiline':False]['text':' As the preceding doesn't works because of overflow on boost::intmax_t we need something more elaborated.','line_number':275,'multiline':False]['text':' namespace ratio_detail','line_number':363,'multiline':False]['text':' namespace boost','line_number':365,'multiline':False]['text':' BOOST_RATIO_HPP','line_number':367,'multiline':False]