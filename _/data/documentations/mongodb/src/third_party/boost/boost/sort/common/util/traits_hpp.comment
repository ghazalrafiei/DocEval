['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':'/ @file traits.hpp','line_number':2,'multiline':False]['text':'/ @brief this file contains the metaprogramming classes  compare_iter and','line_number':3,'multiline':False]['text':'/         enable_if_not_integral','line_number':4,'multiline':False]['text':'/ @author Copyright(c) 2016 Francisco Jose Tapia (fjtapia@gmail.com )\n','line_number':5,'multiline':False]['text':'/         Distributed under the Boost Software License, Version 1.0.\n','line_number':6,'multiline':False]['text':'/         ( See accompanying file LICENSE_1_0.txt or copy at','line_number':7,'multiline':False]['text':'/           http://www.boost.org/LICENSE_1_0.txt  )','line_number':8,'multiline':False]['text':'/ @version 0.1','line_number':9,'multiline':False]['text':'/','line_number':10,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':11,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':27,'multiline':False]['text':'                  USING SENTENCES','line_number':28,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':29,'multiline':False]['text':'','line_number':32,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':33,'multiline':False]['text':'/ @class value_iter','line_number':34,'multiline':False]['text':'/ @brief From the iterator, obtain the type pointed by it','line_number':35,'multiline':False]['text':'/ @remarks The main utility of this, is simplify the default template','line_number':36,'multiline':False]['text':'/          parameter of comparison','line_number':37,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':38,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':42,'multiline':False]['text':'/ @class compare_iter','line_number':43,'multiline':False]['text':'/ @brief From the iterator, received as template parameter, obtain the type','line_number':44,'multiline':False]['text':'/        of the object pointed by the iterator, and with this define the','line_number':45,'multiline':False]['text':'/        std::less with this type obtained','line_number':46,'multiline':False]['text':'/ @remarks The main utility of this, is simplify the default template','line_number':47,'multiline':False]['text':'/          parameter of comparison','line_number':48,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':49,'multiline':False]['text':'','line_number':53,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':54,'multiline':False]['text':'/ @class enable_if_not_integral','line_number':55,'multiline':False]['text':'/ @brief This is a SFINAE class for to detect if the third parameter in the','line_number':56,'multiline':False]['text':'/        invocation of the parallel sorting algorithms is an integer','line_number':57,'multiline':False]['text':'/        representing the number of threads to use or is a comparison object','line_number':58,'multiline':False]['text':'/ @remarks','line_number':59,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':60,'multiline':False]['text':'','line_number':64,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':65,'multiline':False]['text':'/ @class enable_if_integral','line_number':66,'multiline':False]['text':'/ @brief This is a SFINAE class for to detect if the third parameter in the','line_number':67,'multiline':False]['text':'/        invocation of the parallel sorting algorithms is an integer','line_number':68,'multiline':False]['text':'/        representing the number of threads to use or is a comparison object','line_number':69,'multiline':False]['text':'/ @remarks','line_number':70,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':71,'multiline':False]['text':'','line_number':76,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':77,'multiline':False]['text':'/ @class enable_if_string','line_number':78,'multiline':False]['text':'/ @brief This is a SFINAE class for to detect if the parameter is a','line_number':79,'multiline':False]['text':'/        std::string for to apply specialized parameters in the invocation','line_number':80,'multiline':False]['text':'/        of the block_indirect_sort algorithm','line_number':81,'multiline':False]['text':'/ @remarks','line_number':82,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':83,'multiline':False]['text':'','line_number':88,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':89,'multiline':False]['text':'/ @class enable_if_not_string','line_number':90,'multiline':False]['text':'/ @brief This is a SFINAE class for to detect if the parameter is a','line_number':91,'multiline':False]['text':'/        std::string for to apply specialized parameters in the invocation','line_number':92,'multiline':False]['text':'/        of the block_indirect_sort algorithm','line_number':93,'multiline':False]['text':'/ @remarks','line_number':94,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':95,'multiline':False]['text':'','line_number':100,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':101,'multiline':False]['text':'/ @class constructor','line_number':102,'multiline':False]['text':'/ @brief create a functor with the constructor of a class for to be invoked','line_number':103,'multiline':False]['text':'/        from a bind or a lambda','line_number':104,'multiline':False]['text':'/ @remarks','line_number':105,'multiline':False]['text':'---------------------------------------------------------------------------','line_number':106,'multiline':False]['text':'','line_number':116,'multiline':False]['text':'****************************************************************************','line_number':117,'multiline':False]['text':' End namespace util','line_number':118,'multiline':False]['text':' End namespace common','line_number':119,'multiline':False]['text':' End namespace sort','line_number':120,'multiline':False]['text':' End namespace boost','line_number':121,'multiline':False]['text':'****************************************************************************','line_number':122,'multiline':False]