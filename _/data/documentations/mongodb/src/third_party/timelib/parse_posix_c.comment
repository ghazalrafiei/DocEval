['text':'
 * The MIT License (MIT)
 *
 * Copyright (c) 2021 MongoDB, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':' This section adds the missing 'strndup' implementation on Windows.','line_number':28,'multiline':False]['text':'*
 * char* timelib_strndup(const char* s, size_t n)
 *
 * Returns a pointer to a copy of 's' with at most 'n' characters
 * in memory obtained from 'malloc', or 'NULL' if insufficient
 * memory was available.  The result is always 'NULL' terminated.
 ','line_number':33,'multiline':True]['text':' Forwards declrations ','line_number':59,'multiline':True]['text':' "<" [+-]? .+? ">" ','line_number':63,'multiline':True]['text':' skip '<'','line_number':68,'multiline':False]['text':' Abbreviation may not be empty','line_number':83,'multiline':False]['text':' [A-Z]+ ','line_number':91,'multiline':True]['text':' Find the end','line_number':96,'multiline':False]['text':' Abbreviation may not be empty','line_number':101,'multiline':False]['text':' "<" [+-]? .+? ">" | [A-Z]+ ','line_number':109,'multiline':True]['text':' [+-]? ','line_number':119,'multiline':True]['text':' [0-9]+ ','line_number':134,'multiline':True]['text':' skip leading 0's','line_number':140,'multiline':False]['text':' [+-]? [0-9]+ ( ":" [0-9]+ ( ":" [0-9]+ )? )? ','line_number':158,'multiline':True]['text':' read through to : or non-digit for hours','line_number':169,'multiline':False]['text':' check for optional minutes','line_number':175,'multiline':False]['text':' skip ':'','line_number':177,'multiline':False]['text':' check for optional seconds','line_number':184,'multiline':False]['text':' skip ':'','line_number':186,'multiline':False]['text':' multiplication with -1, because the offset in the identifier is the','line_number':197,'multiline':False]['text':' 'wrong' way around as for example EST5 is UTC-5 (and not +5)','line_number':198,'multiline':False]['text':' Mw.m.d','line_number':203,'multiline':False]['text':' Skip 'M'','line_number':210,'multiline':False]['text':' check for '.' and skip it','line_number':218,'multiline':False]['text':' check for '.' and skip it','line_number':229,'multiline':False]['text':' (Jn | n | Mw.m.d) ( /time )?','line_number':247,'multiline':False]['text':' Check for the optional hour','line_number':271,'multiline':False]['text':' as the bias for normal offsets = -1, we need to reverse it here','line_number':278,'multiline':False]['text':' read standard description (ie. EST or <-03>)','line_number':328,'multiline':False]['text':' read required offset','line_number':335,'multiline':False]['text':' if we're at the end return, otherwise we'll continue to try to parse','line_number':342,'multiline':False]['text':' the dst abbreviation and spec','line_number':343,'multiline':False]['text':' assume dst is there, and initialise offset','line_number':348,'multiline':False]['text':' if we have a "," here, then the dst offset is the standard offset +','line_number':357,'multiline':False]['text':' 3600 seconds, otherwise, try to parse the dst offset','line_number':358,'multiline':False]['text':' if we *don't* have a "," here, we're missing the dst transitions','line_number':367,'multiline':False]['text':' ,start[/time],end[/time]','line_number':368,'multiline':False]['text':' skip ','','line_number':374,'multiline':False]['text':' start[/time]','line_number':376,'multiline':False]['text':' if we *don't* have a "," here, we're missing the dst end transition','line_number':383,'multiline':False]['text':' ,end[/time]','line_number':384,'multiline':False]['text':' skip ','','line_number':390,'multiline':False]['text':' end[/time]','line_number':392,'multiline':False]['text':' make sure there is no trailing data','line_number':399,'multiline':False]['text':' normal year','line_number':409,'multiline':False]['text':' leap year','line_number':410,'multiline':False]['text':' This function is adapted from the 'localtime.c' function 'transtime' as bundled with the 'tzcode' project
 * from IANA, and is public domain licensed. ','line_number':413,'multiline':True]['text':'
			 * Mm.n.d - nth "dth day" of month m.
			 ','line_number':435,'multiline':True]['text':' Use Zeller's Congruence to get day-of-week of first day of
			 * month. ','line_number':442,'multiline':True]['text':' "dow" is the day-of-week of the first day of the month. Get the
			 * day-of-month (zero-origin) of the first "dow" day of the month. ','line_number':453,'multiline':True]['text':' "d" is the day-of-month (zero-origin) of the day we want. ','line_number':466,'multiline':True]['text':' Because we want this for Jan 1, the leap day hasn't happend yet, so
	 * subtract one of year before we calculate ','line_number':481,'multiline':True]['text':' Since start of the year ','line_number':502,'multiline':True]['text':' If there is no second (dst_end) information, the UTC offset is valid for the whole year, so no need to
	 * do clever logic ','line_number':538,'multiline':True]['text':' Find 'year' (UTC) for 'ts' ','line_number':547,'multiline':True]['text':' Calculate transition times for 'year-1', 'year', and 'year+1' ','line_number':551,'multiline':True]['text':' Check where the 'ts' falls in the 4 transitions ','line_number':556,'multiline':True]