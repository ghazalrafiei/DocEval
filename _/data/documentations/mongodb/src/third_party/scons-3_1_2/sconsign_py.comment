['text':'! /usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' SCons - a Software Constructor','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Copyright (c) 2001 - 2019 The SCons Foundation','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':7,'multiline':False]['text':' a copy of this software and associated documentation files (the','line_number':8,'multiline':False]['text':' "Software"), to deal in the Software without restriction, including','line_number':9,'multiline':False]['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':10,'multiline':False]['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':11,'multiline':False]['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':12,'multiline':False]['text':' the following conditions:','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' The above copyright notice and this permission notice shall be included','line_number':15,'multiline':False]['text':' in all copies or substantial portions of the Software.','line_number':16,'multiline':False]['text':'','line_number':17,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':18,'multiline':False]['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':19,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':20,'multiline':False]['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':21,'multiline':False]['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':22,'multiline':False]['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':23,'multiline':False]['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':24,'multiline':False]['text':'#############################################################################','line_number':43,'multiline':False]['text':' BEGIN STANDARD SCons SCRIPT HEADER','line_number':44,'multiline':False]['text':'','line_number':45,'multiline':False]['text':' This is the cut-and-paste logic so that a self-contained script can','line_number':46,'multiline':False]['text':' interoperate correctly with different SCons versions and installation','line_number':47,'multiline':False]['text':' locations for the engine.  If you modify anything in this section, you','line_number':48,'multiline':False]['text':' should also change other scripts that use this same header.','line_number':49,'multiline':False]['text':'#############################################################################','line_number':50,'multiline':False]['text':' compatibility check','line_number':52,'multiline':False]['text':' Strip the script directory from sys.path so on case-insensitive','line_number':59,'multiline':False]['text':' (WIN32) systems Python doesn't think that the "scons" script is the','line_number':60,'multiline':False]['text':' "SCons" package.','line_number':61,'multiline':False]['text':' running from source takes 2nd priority (since 2.3.2), following SCONS_LIB_DIR','line_number':72,'multiline':False]['text':' add local-install locations','line_number':77,'multiline':False]['text':' preferred order of scons lookup paths','line_number':90,'multiline':False]['text':' if we can find package information, use it','line_number':93,'multiline':False]['text':' Use only sys.prefix on Windows','line_number':107,'multiline':False]['text':' On other (POSIX) platforms, things are more complicated due to','line_number':111,'multiline':False]['text':' the variety of path names and library locations.','line_number':112,'multiline':False]['text':' Build up some possibilities, then transform them into candidates','line_number':113,'multiline':False]['text':' script_dir is `pwd`/bin;','line_number':116,'multiline':False]['text':' check `pwd`/lib/scons*.','line_number':117,'multiline':False]['text':' script_dir is /foo/bin;','line_number':124,'multiline':False]['text':' check /foo/lib/scons*.','line_number':125,'multiline':False]['text':' sys.prefix is /foo/usr;','line_number':130,'multiline':False]['text':' check /foo/usr/lib/scons* first,','line_number':131,'multiline':False]['text':' then /foo/usr/local/lib/scons*.','line_number':132,'multiline':False]['text':' sys.prefix is /foo/usr/local;','line_number':138,'multiline':False]['text':' check /foo/usr/local/lib/scons* first,','line_number':139,'multiline':False]['text':' then /foo/usr/lib/scons*.','line_number':140,'multiline':False]['text':' sys.prefix is /foo/local;','line_number':144,'multiline':False]['text':' check only /foo/local/lib/scons*.','line_number':145,'multiline':False]['text':' sys.prefix is /foo (ends in neither /usr or /local);','line_number':148,'multiline':False]['text':' check only /foo/lib/scons*.','line_number':149,'multiline':False]['text':' suffix these to add to our original prefs:','line_number':152,'multiline':False]['text':' Add the parent directory of the current python's library to the','line_number':158,'multiline':False]['text':' preferences.  This picks up differences between, e.g., lib and lib64,','line_number':159,'multiline':False]['text':' and finds the base location in case of a non-copying virtualenv.','line_number':160,'multiline':False]['text':' Split /usr/libfoo/python*/os.py to /usr/libfoo/python*.','line_number':166,'multiline':False]['text':' Split /usr/libfoo/python* to /usr/libfoo','line_number':168,'multiline':False]['text':' Check /usr/libfoo/scons*.','line_number':170,'multiline':False]['text':' Look first for 'scons-__version__' in all of our preference libs,','line_number':173,'multiline':False]['text':' then for 'scons'.  Skip paths that do not exist.','line_number':174,'multiline':False]['text':'#############################################################################','line_number':180,'multiline':False]['text':' END STANDARD SCons SCRIPT HEADER','line_number':181,'multiline':False]['text':'#############################################################################','line_number':182,'multiline':False]['text':' Should work on python2','line_number':210,'multiline':False]['text':' was changed for python3','line_number':214,'multiline':False]['text':'_orig_whichdb = whichdb.whichdb','line_number':215,'multiline':False]['text':'dbm.whichdb = my_whichdb','line_number':216,'multiline':False]['text':' This is a dirty hack for py 2/3 compatibility. csig is a bytes object','line_number':267,'multiline':False]['text':' in Python3 while Python2 bytes are str. Hence, we decode the csig to a','line_number':268,'multiline':False]['text':' Python3 string','line_number':269,'multiline':False]['text':' add warning to result rather than direct print so it will line up','line_number':334,'multiline':False]['text':' This just formats the dictionary, which we would normally use str()','line_number':369,'multiline':False]['text':' to do, except that we want the keys sorted for deterministic output.','line_number':370,'multiline':False]['text':' The *dbm modules stick their own file suffixes on the names','line_number':452,'multiline':False]['text':' that are passed in.  This causes us to jump through some','line_number':453,'multiline':False]['text':' hoops here.','line_number':454,'multiline':False]['text':' Try opening the specified file name.  Example:','line_number':456,'multiline':False]['text':'   SPECIFIED                  OPENED BY self.dbm.open()','line_number':457,'multiline':False]['text':'   ---------                  -------------------------','line_number':458,'multiline':False]['text':'   .sconsign               => .sconsign.dblite','line_number':459,'multiline':False]['text':'   .sconsign.dblite        => .sconsign.dblite.dblite','line_number':460,'multiline':False]['text':' That didn't work, so try opening the base name,','line_number':465,'multiline':False]['text':' so that if they actually passed in 'sconsign.dblite'','line_number':466,'multiline':False]['text':' (for example), the dbm module will put the suffix back','line_number':467,'multiline':False]['text':' on for us and open it anyway.','line_number':468,'multiline':False]['text':' That didn't work either.  See if the file name','line_number':471,'multiline':False]['text':' they specified even exists (independent of the dbm','line_number':472,'multiline':False]['text':' suffix-mangling).','line_number':473,'multiline':False]['text':' this is a touch only, we don't use it here.','line_number':476,'multiline':False]['text':' Nope, that file doesn't even exist, so report that','line_number':478,'multiline':False]['text':' fact back.','line_number':479,'multiline':False]['text':'#############################################################################','line_number':540,'multiline':False]['text':' Try to map the given DB format to a known module','line_number':583,'multiline':False]['text':' name, that we can then try to import...','line_number':584,'multiline':False]['text':' Ensure that we don't ignore corrupt DB files,','line_number':595,'multiline':False]['text':' this was handled by calling my_import('SCons.dblite')','line_number':596,'multiline':False]['text':' again in earlier versions...','line_number':597,'multiline':False]['text':' Ensure that we don't ignore corrupt DB files,','line_number':638,'multiline':False]['text':' this was handled by calling my_import('SCons.dblite')','line_number':639,'multiline':False]['text':' again in earlier versions...','line_number':640,'multiline':False]['text':' Local Variables:','line_number':650,'multiline':False]['text':' tab-width:4','line_number':651,'multiline':False]['text':' indent-tabs-mode:nil','line_number':652,'multiline':False]['text':' End:','line_number':653,'multiline':False]['text':' vim: set expandtab tabstop=4 shiftwidth=4:','line_number':654,'multiline':False]