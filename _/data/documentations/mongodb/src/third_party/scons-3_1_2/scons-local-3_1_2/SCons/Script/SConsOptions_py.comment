['text':'','line_number':1,'multiline':False]['text':' Copyright (c) 2001 - 2019 The SCons Foundation','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':4,'multiline':False]['text':' a copy of this software and associated documentation files (the','line_number':5,'multiline':False]['text':' "Software"), to deal in the Software without restriction, including','line_number':6,'multiline':False]['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':7,'multiline':False]['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':8,'multiline':False]['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':9,'multiline':False]['text':' the following conditions:','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':' The above copyright notice and this permission notice shall be included','line_number':12,'multiline':False]['text':' in all copies or substantial portions of the Software.','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':15,'multiline':False]['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':16,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':17,'multiline':False]['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':18,'multiline':False]['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':19,'multiline':False]['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':20,'multiline':False]['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' Added because with py3 this is a new class,','line_number':120,'multiline':False]['text':' not a classic class, and due to the way','line_number':121,'multiline':False]['text':' In that case it will create an object without','line_number':122,'multiline':False]['text':' __defaults__, and then query for __setstate__','line_number':123,'multiline':False]['text':' which will throw an exception of KeyError','line_number':124,'multiline':False]['text':' deepcopy() is expecting AttributeError if __setstate__','line_number':125,'multiline':False]['text':' is not available.','line_number':126,'multiline':False]['text':' Set the duplicate style right away so it can affect linking','line_number':172,'multiline':False]['text':' of SConscript files.','line_number':173,'multiline':False]['text':' No --diskcheck= option was specified on the command line.','line_number':181,'multiline':False]['text':' Set this right away so it can affect the rest of the','line_number':182,'multiline':False]['text':' file/Node lookups while processing the SConscript files.','line_number':183,'multiline':False]['text':' First, convert the value(s) to the right type.  Howl if any','line_number':214,'multiline':False]['text':' value(s) are bogus.','line_number':215,'multiline':False]['text':' And then take whatever action is expected of us.','line_number':218,'multiline':False]['text':' This is a separate method to make life easier for','line_number':219,'multiline':False]['text':' subclasses to add new actions.','line_number':220,'multiline':False]['text':' overridden OptionValueError exception handler','line_number':255,'multiline':False]['text':' Value explicitly attached to arg?  Pretend it's the next argument.','line_number':272,'multiline':False]['text':' SCons-specific:  if requested, add unknown options to','line_number':289,'multiline':False]['text':' the "leftover arguments" list for later processing.','line_number':290,'multiline':False]['text':' The unknown option will be re-processed later,','line_number':293,'multiline':False]['text':' so undo the insertion of the explicit value.','line_number':294,'multiline':False]['text':' Loop over all remaining arguments','line_number':363,'multiline':False]['text':' Accept all remaining arguments as they are','line_number':367,'multiline':False]['text':' Check long option','line_number':371,'multiline':False]['text':' Split into option and value','line_number':374,'multiline':False]['text':' Argument is already known','line_number':378,'multiline':False]['text':' Not known yet, so reject for now','line_number':381,'multiline':False]['text':' Stop normal processing and don't','line_number':385,'multiline':False]['text':' process the rest of the command-line opts','line_number':386,'multiline':False]['text':' Parse the filtered list','line_number':392,'multiline':False]['text':' Restore the list of remaining arguments for the','line_number':394,'multiline':False]['text':' next call of AddOption/add_local_option...','line_number':395,'multiline':False]['text':' The option was added successfully.  We now have to add the','line_number':416,'multiline':False]['text':' default value to our object that holds the default values','line_number':417,'multiline':False]['text':' (so that an attempt to fetch the option's attribute will','line_number':418,'multiline':False]['text':' yield the default value when not overridden) and then','line_number':419,'multiline':False]['text':' we re-parse the leftover command-line options, so that','line_number':420,'multiline':False]['text':' any value overridden on the command line is immediately','line_number':421,'multiline':False]['text':' available if the user turns around and does a GetOption()','line_number':422,'multiline':False]['text':' right away.','line_number':423,'multiline':False]['text':' The help for each option consists of two parts:','line_number':457,'multiline':False]['text':'   * the opt strings and metavars','line_number':458,'multiline':False]['text':'     eg. ("-x", or "-fFILENAME, --file=FILENAME")','line_number':459,'multiline':False]['text':'   * the user-supplied help string','line_number':460,'multiline':False]['text':'     eg. ("turn on expert mode", "read data from FILENAME")','line_number':461,'multiline':False]['text':'','line_number':462,'multiline':False]['text':' If possible, we write both of these on the same line:','line_number':463,'multiline':False]['text':'   -x      turn on expert mode','line_number':464,'multiline':False]['text':'','line_number':465,'multiline':False]['text':' But if the opt string list is too long, we put the help','line_number':466,'multiline':False]['text':' string on a second line, indented to the same column it would','line_number':467,'multiline':False]['text':' start in if it fit on the first line.','line_number':468,'multiline':False]['text':'   -fFILENAME, --file=FILENAME','line_number':469,'multiline':False]['text':'           read data from FILENAME','line_number':470,'multiline':False]['text':' start help on same line as opts','line_number':482,'multiline':False]['text':' SCons:  indent every line of the help text but the first.','line_number':490,'multiline':False]['text':' Add the options to the parser we just created.','line_number':518,'multiline':False]['text':'','line_number':519,'multiline':False]['text':' These are in the order we want them to show up in the -H help','line_number':520,'multiline':False]['text':' text, basically alphabetical.  Each op.add_option() call below','line_number':521,'multiline':False]['text':' should have a consistent format:','line_number':522,'multiline':False]['text':'','line_number':523,'multiline':False]['text':'   op.add_option("-L", "--long-option-name",','line_number':524,'multiline':False]['text':'                 nargs=1, type="string",','line_number':525,'multiline':False]['text':'                 dest="long_option_name", default='foo',','line_number':526,'multiline':False]['text':'                 action="callback", callback=opt_long_option,','line_number':527,'multiline':False]['text':'                 help="help text goes here",','line_number':528,'multiline':False]['text':'                 metavar="VAR")','line_number':529,'multiline':False]['text':'','line_number':530,'multiline':False]['text':' Even though the optparse module constructs reasonable default','line_number':531,'multiline':False]['text':' destination names from the long option names, we're going to be','line_number':532,'multiline':False]['text':' explicit about each one for easier readability and so this code','line_number':533,'multiline':False]['text':' will at least show up when grepping the source for option attribute','line_number':534,'multiline':False]['text':' names, or otherwise browsing the source code.','line_number':535,'multiline':False]['text':' options ignored for compatibility','line_number':537,'multiline':False]['text':' Set the duplicate style right away so it can affect linking','line_number':681,'multiline':False]['text':' of SConscript files.','line_number':682,'multiline':False]['text':' Options from Make and Cons classic that we do not yet support,','line_number':906,'multiline':False]['text':' but which we may support someday and whose (potential) meanings','line_number':907,'multiline':False]['text':' we don't want to change.  These all get a "the -X option is not','line_number':908,'multiline':False]['text':' yet implemented" message and don't show up in the help output.','line_number':909,'multiline':False]['text':' action="store",','line_number':919,'multiline':False]['text':' help="Don't start multiple jobs unless load is below "','line_number':920,'multiline':False]['text':'      "LOAD-AVERAGE."','line_number':921,'multiline':False]['text':' help="Don't build; list files and build actions."','line_number':926,'multiline':False]['text':' help="Don't build; list files that would be built."','line_number':931,'multiline':False]['text':' help="Don't build; list files and where defined."','line_number':936,'multiline':False]['text':' action="append",','line_number':942,'multiline':False]['text':' help = "Consider FILE to be old; don't rebuild it."','line_number':943,'multiline':False]['text':' help="Override variables as specified in FILE."','line_number':949,'multiline':False]['text':' help="Print internal environments/objects."','line_number':954,'multiline':False]['text':' help="Clear default environments and variables."','line_number':959,'multiline':False]['text':' help="Write all filenames examined into FILE."','line_number':965,'multiline':False]['text':' help="Consider FILE to be changed."','line_number':971,'multiline':False]['text':' help="Warn when an undefined variable is referenced."','line_number':976,'multiline':False]['text':' Local Variables:','line_number':980,'multiline':False]['text':' tab-width:4','line_number':981,'multiline':False]['text':' indent-tabs-mode:nil','line_number':982,'multiline':False]['text':' End:','line_number':983,'multiline':False]['text':' vim: set expandtab tabstop=4 shiftwidth=4:','line_number':984,'multiline':False]