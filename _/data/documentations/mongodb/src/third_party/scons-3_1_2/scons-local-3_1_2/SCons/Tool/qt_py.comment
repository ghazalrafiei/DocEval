['text':'','line_number':12,'multiline':False]['text':' Copyright (c) 2001 - 2019 The SCons Foundation','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':15,'multiline':False]['text':' a copy of this software and associated documentation files (the','line_number':16,'multiline':False]['text':' "Software"), to deal in the Software without restriction, including','line_number':17,'multiline':False]['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':18,'multiline':False]['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':19,'multiline':False]['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':20,'multiline':False]['text':' the following conditions:','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' The above copyright notice and this permission notice shall be included','line_number':23,'multiline':False]['text':' in all copies or substantial portions of the Software.','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':26,'multiline':False]['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':27,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':28,'multiline':False]['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':29,'multiline':False]['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':30,'multiline':False]['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':31,'multiline':False]['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' qt_bin_dirs = []','line_number':82,'multiline':False]['text':' Centos installs QT under /usr/{lib,lib64}/qt{4,5,-3.3}/bin','line_number':89,'multiline':False]['text':' so we need to handle this differently','line_number':90,'multiline':False]['text':' qt_bin_dirs = glob.glob('/usr/lib64/qt*/bin')','line_number':91,'multiline':False]['text':' TODO: all current Fedoras do the same, need to look deeper here.','line_number':92,'multiline':False]['text':' looks like cpp.includes is cleared before the build stage :-(','line_number':103,'multiline':False]['text':' not really sure about the path transformations (moc.cwd? cpp.cwd?) :-/','line_number':104,'multiline':False]['text':' some shortcuts used in the scanner','line_number':144,'multiline':False]['text':' some regular expressions:','line_number':148,'multiline':False]['text':' Q_OBJECT detection','line_number':149,'multiline':False]['text':' cxx and c comment 'eater'','line_number':151,'multiline':False]['text':'comment = re.compile(r'(//.*)|(/\*(([^*])|(\*[^/]))*\*/)')','line_number':152,'multiline':False]['text':' CW: something must be wrong with the regexp. See also bug #998222','line_number':153,'multiline':False]['text':'     CURRENTLY THERE IS NO TEST CASE FOR THAT','line_number':154,'multiline':False]['text':' The following is kind of hacky to get builders working properly (FIXME)','line_number':156,'multiline':False]['text':' make a deep copy for the result; MocH objects will be appended','line_number':162,'multiline':False]['text':' binary obj file provided','line_number':167,'multiline':False]['text':' c or fortran source','line_number':175,'multiline':False]['text':'cpp_contents = comment.sub('', cpp.get_text_contents())','line_number':177,'multiline':False]['text':' try to find the header file in the corresponding source','line_number':183,'multiline':False]['text':' directory','line_number':184,'multiline':False]['text':'h_contents = comment.sub('', h.get_text_contents())','line_number':190,'multiline':False]['text':' h file with the Q_OBJECT macro found -> add moc_cpp','line_number':196,'multiline':False]['text':'moc_cpp.target_scanner = SCons.Defaults.CScan','line_number':200,'multiline':False]['text':' cpp file with Q_OBJECT macro found -> add moc','line_number':204,'multiline':False]['text':' (to be included in cpp)','line_number':205,'multiline':False]['text':'moc.source_scanner = SCons.Defaults.CScan','line_number':210,'multiline':False]['text':' restore the original env attributes (FIXME)','line_number':211,'multiline':False]['text':' first target (header) is automatically added by builder','line_number':244,'multiline':False]['text':' second target is implementation','line_number':246,'multiline':False]['text':' third target is moc file','line_number':251,'multiline':False]['text':' may be set to qt-mt','line_number':287,'multiline':False]['text':' scan for moc'able sources','line_number':289,'multiline':False]['text':' Some QT specific flags. I don't expect someone wants to','line_number':291,'multiline':False]['text':' manipulate those ...','line_number':292,'multiline':False]['text':' suffixes/prefixes for the headers / sources to generate','line_number':298,'multiline':False]['text':' Commands for the qt support ...','line_number':309,'multiline':False]['text':' command to generate header, implementation and moc-file','line_number':310,'multiline':False]['text':' from a .ui file','line_number':311,'multiline':False]['text':' command to generate meta object information for a class','line_number':317,'multiline':False]['text':' declarated in a header','line_number':318,'multiline':False]['text':' command to generate meta object information for a class','line_number':321,'multiline':False]['text':' declarated in a cpp file','line_number':322,'multiline':False]['text':' ... and the corresponding builders','line_number':327,'multiline':False]['text':' register the builders','line_number':346,'multiline':False]['text':' We use the emitters of Program / StaticLibrary / SharedLibrary','line_number':353,'multiline':False]['text':' to scan for moc'able files','line_number':354,'multiline':False]['text':' We can't refer to the builders directly, we have to fetch them','line_number':355,'multiline':False]['text':' as Environment attributes because that sets them up to be called','line_number':356,'multiline':False]['text':' correctly later by our emitter.','line_number':357,'multiline':False]['text':' Of course, we need to link against the qt libraries','line_number':362,'multiline':False]['text':' Local Variables:','line_number':370,'multiline':False]['text':' tab-width:4','line_number':371,'multiline':False]['text':' indent-tabs-mode:nil','line_number':372,'multiline':False]['text':' End:','line_number':373,'multiline':False]['text':' vim: set expandtab tabstop=4 shiftwidth=4:','line_number':374,'multiline':False]