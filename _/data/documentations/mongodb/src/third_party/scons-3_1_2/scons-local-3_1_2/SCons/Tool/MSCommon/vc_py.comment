['text':'','line_number':1,'multiline':False]['text':' Copyright (c) 2001 - 2019 The SCons Foundation','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Permission is hereby granted, free of charge, to any person obtaining','line_number':4,'multiline':False]['text':' a copy of this software and associated documentation files (the','line_number':5,'multiline':False]['text':' "Software"), to deal in the Software without restriction, including','line_number':6,'multiline':False]['text':' without limitation the rights to use, copy, modify, merge, publish,','line_number':7,'multiline':False]['text':' distribute, sublicense, and/or sell copies of the Software, and to','line_number':8,'multiline':False]['text':' permit persons to whom the Software is furnished to do so, subject to','line_number':9,'multiline':False]['text':' the following conditions:','line_number':10,'multiline':False]['text':'','line_number':11,'multiline':False]['text':' The above copyright notice and this permission notice shall be included','line_number':12,'multiline':False]['text':' in all copies or substantial portions of the Software.','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY','line_number':15,'multiline':False]['text':' KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE','line_number':16,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND','line_number':17,'multiline':False]['text':' NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE','line_number':18,'multiline':False]['text':' LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION','line_number':19,'multiline':False]['text':' OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION','line_number':20,'multiline':False]['text':' WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' TODO:','line_number':24,'multiline':False]['text':'   * supported arch for versions: for old versions of batch file without','line_number':25,'multiline':False]['text':'     argument, giving bogus argument cannot be detected, so we have to hardcode','line_number':26,'multiline':False]['text':'     this here','line_number':27,'multiline':False]['text':'   * print warning when msvc version specified but not found','line_number':28,'multiline':False]['text':'   * find out why warning do not print','line_number':29,'multiline':False]['text':'   * test on 64 bits XP +  VS 2005 (and VS 6 if possible)','line_number':30,'multiline':False]['text':'   * SDK','line_number':31,'multiline':False]['text':'   * Assembly','line_number':32,'multiline':False]['text':' Dict to 'canonalize' the arch','line_number':81,'multiline':False]['text':' deprecated','line_number':89,'multiline':False]['text':' deprecated','line_number':90,'multiline':False]['text':' get path to the cl.exe dir for older VS versions','line_number':109,'multiline':False]['text':' based off a tuple of (host, target) platforms','line_number':110,'multiline':False]['text':' Given a (host, target) tuple, return the argument for the bat file.','line_number':122,'multiline':False]['text':' Both host and targets should be canonalized.','line_number':123,'multiline':False]['text':' This is present in (at least) VS2012 express','line_number':128,'multiline':False]['text':' gone since 14.0','line_number':131,'multiline':False]['text':' since 14.0, maybe gone 14.1?','line_number':132,'multiline':False]['text':' since 14.0','line_number':133,'multiline':False]['text':' since 14.1','line_number':134,'multiline':False]['text':' since 14.0','line_number':135,'multiline':False]['text':' since 14.1','line_number':136,'multiline':False]['text':' Solaris returns i86pc for both 32 and 64 bit architectures','line_number':164,'multiline':False]['text':' Retain user requested TARGET_ARCH','line_number':171,'multiline':False]['text':' If user requested a specific platform then only try that one.','line_number':176,'multiline':False]['text':' If you update this, update SupportedVSList in Tool/MSCommon/vs.py, and the','line_number':195,'multiline':False]['text':' MSVC_VERSION documentation in Tool/msvc.xml.','line_number':196,'multiline':False]['text':' if using vswhere, a further mapping is needed','line_number':199,'multiline':False]['text':' not set by this version','line_number':208,'multiline':False]['text':' VS 2019 doesn't set this key','line_number':210,'multiline':False]['text':' VS 2017 doesn't set this key','line_number':212,'multiline':False]['text':' We assume that any Visual Studio version supports x86 as a target','line_number':282,'multiline':False]['text':' For bug 3333 - support default location of vswhere for both 64 and 32 bit windows','line_number':305,'multiline':False]['text':' installs.','line_number':306,'multiline':False]['text':' If we found vswhere, then use it.','line_number':316,'multiline':False]['text':' No vswhere on system, no install info available','line_number':319,'multiline':False]['text':'TODO PY27 cannot use Popen as context manager','line_number':327,'multiline':False]['text':' try putting it back to the old way for now','line_number':328,'multiline':False]['text':' vswhere could easily return multiple lines','line_number':335,'multiline':False]['text':' we could define a way to pick the one we prefer, but since','line_number':336,'multiline':False]['text':' this data is currently only used to make a check for existence,','line_number':337,'multiline':False]['text':' returning the first hit should be good enough for now.','line_number':338,'multiline':False]['text':' No vswhere on system, no install info available','line_number':342,'multiline':False]['text':' ordinally at win64, try Wow6432Node first.','line_number':386,'multiline':False]['text':' at Microsoft Visual Studio for Python 2.7, value is not in Wow6432Node','line_number':389,'multiline':False]['text':' not Win64, or Microsoft Visual Studio for Python 2.7','line_number':392,'multiline':False]['text':' filter out e.g. "Exp" from the version name','line_number':416,'multiline':False]['text':' vernum >= 14.1  VS2017 and above','line_number':427,'multiline':False]['text':' determine if there is a specific target platform we want to build for and','line_number':472,'multiline':False]['text':' use that to find a list of valid VCs, default is host platform == target platform','line_number':473,'multiline':False]['text':' and same for if no env is specified to extract target platform from','line_number':474,'multiline':False]['text':' make sure the cl.exe exists meaning the tool is installed','line_number':488,'multiline':False]['text':' 2017 and newer allowed multiple versions of the VC toolset to be installed at the same time.','line_number':490,'multiline':False]['text':' Just get the default tool version for now','line_number':491,'multiline':False]['text':'TODO: support setting a specific minor VC version','line_number':492,'multiline':False]['text':' Set default value to be -1 as "" which is the value for x86/x86 yields true when tested','line_number':517,'multiline':False]['text':' if not host_trgt_dir','line_number':518,'multiline':False]['text':' older versions of visual studio only had x86 binaries,','line_number':529,'multiline':False]['text':' so if the host platform is amd64, we need to check cross','line_number':530,'multiline':False]['text':' compile options (x86 binary compiles some other target on a 64 bit os)','line_number':531,'multiline':False]['text':' Set default value to be -1 as "" which is the value for x86/x86 yields true when tested','line_number':533,'multiline':False]['text':' if not host_trgt_dir','line_number':534,'multiline':False]['text':' not sure about these versions so if a walk the VC dir (could be slow)','line_number':548,'multiline':False]['text':' version not support return false','line_number':555,'multiline':False]['text':' Allow this exception to propagate further as it should cause','line_number':585,'multiline':False]['text':' SCons to exit with an error code','line_number':586,'multiline':False]['text':' Running these batch files isn't cheap: most of the time spent in','line_number':596,'multiline':False]['text':' msvs.generate() is due to vcvars*.bat.  In a build that uses "tools='msvs'"','line_number':597,'multiline':False]['text':' in multiple environments, for example:','line_number':598,'multiline':False]['text':'    env1 = Environment(tools='msvs')','line_number':599,'multiline':False]['text':'    env2 = Environment(tools='msvs')','line_number':600,'multiline':False]['text':' we can greatly improve the speed of the second and subsequent Environment','line_number':601,'multiline':False]['text':' (or Clone) calls by memoizing the environment variables set by vcvars*.bat.','line_number':602,'multiline':False]['text':'','line_number':603,'multiline':False]['text':' Updated: by 2018, vcvarsall.bat had gotten so expensive (vs2017 era)','line_number':604,'multiline':False]['text':' it was breaking CI builds because the test suite starts scons so many','line_number':605,'multiline':False]['text':' times and the existing memo logic only helped with repeated calls','line_number':606,'multiline':False]['text':' within the same scons run. Windows builds on the CI system were split','line_number':607,'multiline':False]['text':' into chunks to get around single-build time limits.','line_number':608,'multiline':False]['text':' With VS2019 it got even slower and an optional persistent cache file','line_number':609,'multiline':False]['text':' was introduced. The cache now also stores only the parsed vars, ','line_number':610,'multiline':False]['text':' not the entire output of running the batch file - saves a bit','line_number':611,'multiline':False]['text':' of time not parsing every time.','line_number':612,'multiline':False]['text':' Stupid batch files do not set return code: we take a look at the','line_number':626,'multiline':False]['text':' beginning of the output for an error message instead','line_number':627,'multiline':False]['text':' once we updated cache, give a chance to write out if user wanted','line_number':634,'multiline':False]['text':'TODO: Python 2 cleanup','line_number':637,'multiline':False]['text':' If we "hit" data from the json file, we have a Py2 problem:','line_number':638,'multiline':False]['text':' keys & values will be unicode. don't detect, just convert.','line_number':639,'multiline':False]['text':'msg = 'No installed VCs'','line_number':681,'multiline':False]['text':'debug('msv %s' % repr(msg))','line_number':682,'multiline':False]['text':'SCons.Warnings.warn(SCons.Warnings.VisualCMissingWarning, msg)','line_number':683,'multiline':False]['text':' Find the host platform, target platform, and if present the requested','line_number':703,'multiline':False]['text':' target platform','line_number':704,'multiline':False]['text':' VS2012 has a "cross compile" environment to build 64 bit','line_number':711,'multiline':False]['text':' with x86_amd64 as the argument to the batch setup script','line_number':712,'multiline':False]['text':' There may not be "native" amd64, but maybe "cross" x86_amd64 tools','line_number':716,'multiline':False]['text':' If the user hasn't specifically requested a TARGET_ARCH, and','line_number':718,'multiline':False]['text':' The TARGET_ARCH is amd64 then also try 32 bits if there are no viable','line_number':719,'multiline':False]['text':' 64 bit tools installed','line_number':720,'multiline':False]['text':' Set to current arch.','line_number':727,'multiline':False]['text':' Get just version numbers','line_number':738,'multiline':False]['text':' VS2015+','line_number':740,'multiline':False]['text':' Initialize environment variables with store/universal paths','line_number':743,'multiline':False]['text':' Try to locate a batch file for this host/target platform combo','line_number':746,'multiline':False]['text':' Try to use the located batch file for this host/target platform combo','line_number':760,'multiline':False]['text':' We've found a working target_platform, so stop looking','line_number':784,'multiline':False]['text':' If we cannot find a viable installed compiler, reset the TARGET_ARCH','line_number':786,'multiline':False]['text':' To it's initial value','line_number':787,'multiline':False]['text':' XXX: we set-up both MSVS version for backward','line_number':805,'multiline':False]['text':' compatibility with the msvs tool','line_number':806,'multiline':False]['text':' final check to issue a warning if the compiler is not present','line_number':832,'multiline':False]