['text':'************************************************
*      Perl-Compatible Regular Expressions       *
************************************************','line_number':1,'multiline':True]['text':' PCRE is a library of functions to support regular expressions whose syntax
and semantics are as close as possible to those of the Perl 5 language.

                       Written by Philip Hazel
     Original API code Copyright (c) 1997-2012 University of Cambridge
          New API code Copyright (c) 2016-2018 University of Cambridge

-----------------------------------------------------------------------------
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.

    * Neither the name of the University of Cambridge nor the names of its
      contributors may be used to endorse or promote products derived from
      this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.
-----------------------------------------------------------------------------
','line_number':5,'multiline':True]['text':'************************************************
*          Default malloc/free functions         *
************************************************','line_number':50,'multiline':True]['text':' Ignore the "user data" argument in each case. ','line_number':54,'multiline':True]['text':'************************************************
*        Get a block and save memory control     *
************************************************','line_number':71,'multiline':True]['text':' This internal function is called to get a block of memory in which the
memory control data is to be stored at the start for future use.

Arguments:
  size        amount of memory required
  memctl      pointer to a memctl block or NULL

Returns:      pointer to memory or NULL on failure
','line_number':75,'multiline':True]['text':'************************************************
*          Create and initialize contexts        *
************************************************','line_number':105,'multiline':True]['text':' Initializing for compile and match contexts is done in separate, private
functions so that these can be called from functions such as pcre2_compile()
when an external context is not supplied. The initializing functions have an
option to set up default memory management. ','line_number':109,'multiline':True]['text':' A default compile context is set up to save having to initialize at run time
when no context is supplied to the compile function. ','line_number':130,'multiline':True]['text':' Default memory handling ','line_number':134,'multiline':True]['text':' Stack guard ','line_number':135,'multiline':True]['text':' Stack guard data ','line_number':136,'multiline':True]['text':' Character tables ','line_number':137,'multiline':True]['text':' Max pattern length ','line_number':138,'multiline':True]['text':' Backslash R default ','line_number':139,'multiline':True]['text':' Newline convention ','line_number':140,'multiline':True]['text':' As it says ','line_number':141,'multiline':True]['text':' Extra options ','line_number':142,'multiline':True]['text':' The create function copies the default into the new memory, but must
override the default memory handling functions if a gcontext was provided. ','line_number':144,'multiline':True]['text':' A default match context is set up to save having to initialize at run time
when no context is supplied to a match function. ','line_number':160,'multiline':True]['text':' JIT callback ','line_number':166,'multiline':True]['text':' JIT callback data ','line_number':167,'multiline':True]['text':' Callout function ','line_number':169,'multiline':True]['text':' Callout data ','line_number':170,'multiline':True]['text':' Substitute callout function ','line_number':171,'multiline':True]['text':' Substitute callout data ','line_number':172,'multiline':True]['text':' Offset limit ','line_number':173,'multiline':True]['text':' The create function copies the default into the new memory, but must
override the default memory handling functions if a gcontext was provided. ','line_number':178,'multiline':True]['text':' A default convert context is set up to save having to initialize at run time
when no context is supplied to the convert function. ','line_number':194,'multiline':True]['text':' Default memory handling ','line_number':198,'multiline':True]['text':' Default path separator ','line_number':200,'multiline':True]['text':' Default escape character ','line_number':201,'multiline':True]['text':' Not Windows ','line_number':202,'multiline':True]['text':' Default path separator ','line_number':203,'multiline':True]['text':' Default escape character ','line_number':204,'multiline':True]['text':' The create function copies the default into the new memory, but must
override the default memory handling functions if a gcontext was provided. ','line_number':208,'multiline':True]['text':'************************************************
*              Context copy functions            *
************************************************','line_number':224,'multiline':True]['text':'************************************************
*              Context free functions            *
************************************************','line_number':277,'multiline':True]['text':'************************************************
*             Set values in contexts             *
************************************************','line_number':313,'multiline':True]['text':' All these functions return 0 for success or PCRE2_ERROR_BADDATA if invalid
data is given. Only some of the functions are able to test the validity of the
data. ','line_number':317,'multiline':True]['text':' ------------ Compile context ------------ ','line_number':322,'multiline':True]['text':' ------------ Match context ------------ ','line_number':397,'multiline':True]['text':' This function became obsolete at release 10.30. It is kept as a synonym for
backwards compatibility. ','line_number':446,'multiline':True]['text':' ------------ Convert context ------------ ','line_number':467,'multiline':True]['text':' End of pcre2_context.c ','line_number':487,'multiline':True]