['text':'************************************************
*      Perl-Compatible Regular Expressions       *
************************************************','line_number':1,'multiline':True]['text':' This file was automatically written by the pcre2_dftables auxiliary
program. It contains character tables that are used when no external
tables are passed to PCRE2 by the application that calls it. The tables
are used only for characters whose code values are less than 256. ','line_number':5,'multiline':True]['text':' This set of tables was written in the C locale. ','line_number':10,'multiline':True]['text':' The pcre2_ftables program (which is distributed with PCRE2) can be used
to build alternative versions of this file. This is necessary if you are
running in an EBCDIC environment, or if you want to default to a different
encoding, for example ISO-8859-1. When pcre2_dftables is run, it creates
these tables in the "C" locale by default. This happens automatically if
PCRE2 is configured with --enable-rebuild-chartables. However, you can run
pcre2_dftables manually with the -L option to build tables using the LC_ALL
locale. ','line_number':12,'multiline':True]['text':' The following #include is present because without it gcc 4.x may remove
the array definition from the final binary if PCRE2 is built into a static
library and dead code stripping is activated. This leads to link errors.
Pulling in the header ensures that the array gets flagged as "someone
outside this compilation unit might reference this" and so it will always
be supplied to the linker. ','line_number':21,'multiline':True]['text':' This table is a lower casing table. ','line_number':36,'multiline':True]['text':' This table is a case flipping table. ','line_number':71,'multiline':True]['text':' This table contains bit maps for various character classes. Each map is 32
bytes long and the bits run from the least significant end of each byte. The
classes that have their own maps are: space, xdigit, digit, upper, lower, word,
graph, print, punct, and cntrl. Other classes are built from combinations. ','line_number':106,'multiline':True]['text':' space ','line_number':111,'multiline':True]['text':' xdigit ','line_number':116,'multiline':True]['text':' digit ','line_number':121,'multiline':True]['text':' upper ','line_number':126,'multiline':True]['text':' lower ','line_number':131,'multiline':True]['text':' word ','line_number':136,'multiline':True]['text':' graph ','line_number':141,'multiline':True]['text':' print ','line_number':146,'multiline':True]['text':' punct ','line_number':151,'multiline':True]['text':' cntrl ','line_number':156,'multiline':True]['text':' This table identifies various classes of character by individual bits:
  0x01   white space character
  0x02   letter
  0x04   lower case letter
  0x08   decimal digit
  0x10   alphanumeric or '_'
','line_number':161,'multiline':True]['text':'   0-  7 ','line_number':169,'multiline':True]['text':'   8- 15 ','line_number':170,'multiline':True]['text':'  16- 23 ','line_number':171,'multiline':True]['text':'  24- 31 ','line_number':172,'multiline':True]['text':'    - '  ','line_number':173,'multiline':True]['text':'  ( - /  ','line_number':174,'multiline':True]['text':'  0 - 7  ','line_number':175,'multiline':True]['text':'  8 - ?  ','line_number':176,'multiline':True]['text':'  @ - G  ','line_number':177,'multiline':True]['text':'  H - O  ','line_number':178,'multiline':True]['text':'  P - W  ','line_number':179,'multiline':True]['text':'  X - _  ','line_number':180,'multiline':True]['text':'  ` - g  ','line_number':181,'multiline':True]['text':'  h - o  ','line_number':182,'multiline':True]['text':'  p - w  ','line_number':183,'multiline':True]['text':'  x -127 ','line_number':184,'multiline':True]['text':' 128-135 ','line_number':185,'multiline':True]['text':' 136-143 ','line_number':186,'multiline':True]['text':' 144-151 ','line_number':187,'multiline':True]['text':' 152-159 ','line_number':188,'multiline':True]['text':' 160-167 ','line_number':189,'multiline':True]['text':' 168-175 ','line_number':190,'multiline':True]['text':' 176-183 ','line_number':191,'multiline':True]['text':' 184-191 ','line_number':192,'multiline':True]['text':' 192-199 ','line_number':193,'multiline':True]['text':' 200-207 ','line_number':194,'multiline':True]['text':' 208-215 ','line_number':195,'multiline':True]['text':' 216-223 ','line_number':196,'multiline':True]['text':' 224-231 ','line_number':197,'multiline':True]['text':' 232-239 ','line_number':198,'multiline':True]['text':' 240-247 ','line_number':199,'multiline':True]['text':' 248-255 ','line_number':200,'multiline':True]['text':' End of pcre2_chartables.c ','line_number':202,'multiline':True]