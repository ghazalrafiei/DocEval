['text':'
 *    Stack-less Just-In-Time compiler
 *
 *    Copyright Zoltan Herczeg (hzmester@freemail.hu). All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this list of
 *      conditions and the following disclaimer.
 *
 *   2. Redistributions in binary form must reproduce the above copyright notice, this list
 *      of conditions and the following disclaimer in the documentation and/or other materials
 *      provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) AND CONTRIBUTORS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDER(S) OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ','line_number':1,'multiline':True]['text':' _WIN32 ','line_number':33,'multiline':True]['text':' These libraries are needed for the macros below. ','line_number':37,'multiline':True]['text':' SLJIT_STD_MACROS_DEFINED ','line_number':41,'multiline':True]['text':' !SLJIT_64BIT_ARCHITECTURE ','line_number':111,'multiline':True]['text':' SLJIT_64BIT_ARCHITECTURE ','line_number':114,'multiline':True]['text':' Parameter parsing. ','line_number':124,'multiline':True]['text':' When reg cannot be unused. ','line_number':129,'multiline':True]['text':' Mask for argument types. ','line_number':132,'multiline':True]['text':' Jump flags. ','line_number':136,'multiline':True]['text':' SLJIT_REWRITABLE_JUMP is 0x1000. ','line_number':139,'multiline':True]['text':' conditional + imm8 ','line_number':162,'multiline':True]['text':' conditional + imm20 ','line_number':164,'multiline':True]['text':' IT + imm24 ','line_number':166,'multiline':True]['text':' imm11 ','line_number':168,'multiline':True]['text':' imm24 ','line_number':170,'multiline':True]['text':' BL + imm24 ','line_number':172,'multiline':True]['text':' 0xf00 cc code for branches ','line_number':174,'multiline':True]['text':' instruction types ','line_number':217,'multiline':True]['text':' 1 - 31 last destination register ','line_number':219,'multiline':True]['text':' no destination (i.e: store) ','line_number':220,'multiline':True]['text':' FPU status register ','line_number':222,'multiline':True]['text':' instruction types ','line_number':234,'multiline':True]['text':' 1 - 31 last destination register ','line_number':236,'multiline':True]['text':' no destination (i.e: store) ','line_number':237,'multiline':True]['text':' ICC_SET is the same as SET_FLAGS. ','line_number':242,'multiline':True]['text':' Stack management. ','line_number':247,'multiline':True]['text':' !(defined SLJIT_CONFIG_UNSUPPORTED && SLJIT_CONFIG_UNSUPPORTED) ','line_number':261,'multiline':True]['text':' Utils can still be used even if SLJIT_CONFIG_UNSUPPORTED is set. ','line_number':263,'multiline':True]['text':' Argument checking features. ','line_number':290,'multiline':True]['text':' Returns with error when an invalid argument is passed. ','line_number':294,'multiline':True]['text':' Assertion failure occures if an invalid argument is passed. ','line_number':330,'multiline':True]['text':' Arguments are not checked. ','line_number':343,'multiline':True]['text':' Arguments are not checked. ','line_number':352,'multiline':True]['text':' SLJIT_ARGUMENT_CHECKS ','line_number':357,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':359,'multiline':True]['text':'  Public functions                                                     ','line_number':360,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':361,'multiline':True]['text':' A thread safe initialization. ','line_number':366,'multiline':True]['text':' Only the non-zero members must be set. ','line_number':391,'multiline':True]['text':' Remove thumb mode flag. ','line_number':499,'multiline':True]['text':' Resolve indirection. ','line_number':507,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':564,'multiline':True]['text':'  Private functions                                                    ','line_number':565,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':566,'multiline':True]['text':' Only used in RISC architectures where the instruction size is constant ','line_number':638,'multiline':True]['text':' !SLJIT_CONFIG_X86 && !SLJIT_CONFIG_S390X ','line_number':662,'multiline':True]['text':' SLJIT_ARGUMENT_CHECKS ','line_number':905,'multiline':True]['text':' SLJIT_VERBOSE ','line_number':1047,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':1049,'multiline':True]['text':'  Arch dependent                                                       ','line_number':1050,'multiline':True]['text':' --------------------------------------------------------------------- ','line_number':1051,'multiline':True]['text':' All jumps have target. ','line_number':1068,'multiline':True]['text':' Context not initialized, void, etc. ','line_number':1199,'multiline':True]['text':' Only SLJIT_32 and SLJIT_SET_Z are allowed. ','line_number':1270,'multiline':True]['text':' Nothing allowed ','line_number':1276,'multiline':True]['text':' Only SLJIT_32 is allowed. ','line_number':1280,'multiline':True]['text':' Any offset is allowed. ','line_number':1967,'multiline':True]['text':' SLJIT_ARGUMENT_CHECKS || SLJIT_VERBOSE ','line_number':2015,'multiline':True]['text':' At the moment the pointer size is always equal to sljit_sw. May be changed in the future. ','line_number':2045,'multiline':True]['text':' CPU description section ','line_number':2116,'multiline':True]['text':' Default compare for most architectures. ','line_number':2168,'multiline':True]['text':' Immediate is preferred as second argument by most architectures. ','line_number':2190,'multiline':True]['text':' SLJIT_CONFIG_UNSUPPORTED ','line_number':2330,'multiline':True]['text':' Empty function bodies for those machines, which are not (yet) supported. ','line_number':2332,'multiline':True]['text':' !SLJIT_CONFIG_UNSUPPORTED ','line_number':2761,'multiline':True]