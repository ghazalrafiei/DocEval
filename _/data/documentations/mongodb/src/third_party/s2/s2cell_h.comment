['text':' Copyright 2005 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]['text':' An S2Cell is an S2Region object that represents a cell.  Unlike S2CellIds,','line_number':13,'multiline':False]['text':' it supports efficient containment and intersection tests.  However, it is','line_number':14,'multiline':False]['text':' also a more expensive representation (currently 48 bytes rather than 8).','line_number':15,'multiline':False]['text':' This class is intended to be copied by value as desired.  It uses','line_number':17,'multiline':False]['text':' the default copy constructor and assignment operator, however it is','line_number':18,'multiline':False]['text':' not a "plain old datatype" (POD) because it has virtual functions.','line_number':19,'multiline':False]['text':' The default constructor is required in order to use freelists.','line_number':22,'multiline':False]['text':' Cells should otherwise always be constructed explicitly.','line_number':23,'multiline':False]['text':' An S2Cell always corresponds to a particular S2CellId.  The other','line_number':26,'multiline':False]['text':' constructors are just convenience methods.','line_number':27,'multiline':False]['text':' This is a static method in order to provide named parameters.','line_number':31,'multiline':False]['text':' Convenience methods.  The S2LatLng must be normalized.','line_number':34,'multiline':False]['text':' These are equivalent to the S2CellId methods, but have a more efficient','line_number':44,'multiline':False]['text':' implementation since the level has been precomputed.','line_number':45,'multiline':False]['text':' Return the k-th vertex of the cell (k = 0,1,2,3).  Vertices are returned','line_number':49,'multiline':False]['text':' in CCW order.  The points returned by GetVertexRaw are not necessarily','line_number':50,'multiline':False]['text':' unit length.','line_number':51,'multiline':False]['text':' Return the inward-facing normal of the great circle passing through','line_number':55,'multiline':False]['text':' the edge from vertex k to vertex k+1 (mod 4).  The normals returned','line_number':56,'multiline':False]['text':' by GetEdgeRaw are not necessarily unit length.','line_number':57,'multiline':False]['text':' If this is not a leaf cell, set children[0..3] to the four children of','line_number':61,'multiline':False]['text':' this cell (in traversal order) and return true.  Otherwise returns false.','line_number':62,'multiline':False]['text':' This method is equivalent to the following:','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' for (pos=0, id=child_begin(); id != child_end(); id = id.next(), ++pos)','line_number':65,'multiline':False]['text':'   children[i] = S2Cell(id);','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' except that it is more than two times faster.','line_number':68,'multiline':False]['text':' Return the direction vector corresponding to the center in (s,t)-space of','line_number':71,'multiline':False]['text':' the given cell.  This is the point at which the cell is divided into four','line_number':72,'multiline':False]['text':' subcells; it is not necessarily the centroid of the cell in (u,v)-space','line_number':73,'multiline':False]['text':' or (x,y,z)-space.  The point returned by GetCenterRaw is not necessarily','line_number':74,'multiline':False]['text':' unit length.','line_number':75,'multiline':False]['text':' Return the average area for cells at the given level.','line_number':79,'multiline':False]['text':' Return the average area of cells at this level.  This is accurate to','line_number':82,'multiline':False]['text':' within a factor of 1.7 (for S2_QUADRATIC_PROJECTION) and is extremely','line_number':83,'multiline':False]['text':' cheap to compute.','line_number':84,'multiline':False]['text':' Return the approximate area of this cell.  This method is accurate to','line_number':87,'multiline':False]['text':' within 3% percent for all cell sizes and accurate to within 0.1% for','line_number':88,'multiline':False]['text':' cells at level 5 or higher (i.e. squares 350km to a side or smaller','line_number':89,'multiline':False]['text':' on the Earth's surface).  It is moderately cheap to compute.','line_number':90,'multiline':False]['text':' Return the area of this cell as accurately as possible.  This method is','line_number':93,'multiline':False]['text':' more expensive but it is accurate to 6 digits of precision even for leaf','line_number':94,'multiline':False]['text':' cells (whose area is approximately 1e-18).','line_number':95,'multiline':False]['text':'//////////////////////////////////////////////////////////////////////','line_number':98,'multiline':False]['text':' S2Region interface (see s2region.h for details):','line_number':99,'multiline':False]['text':' The same as Contains() below, just virtual.','line_number':107,'multiline':False]['text':' The point 'p' does not need to be normalized.','line_number':110,'multiline':False]['text':' Internal method that does the actual work in the constructors.','line_number':119,'multiline':False]['text':' Return the latitude or longitude of the cell vertex given by (i,j),','line_number':122,'multiline':False]['text':' where "i" and "j" are either 0 or 1.','line_number':123,'multiline':False]['text':' This structure occupies 44 bytes plus one pointer for the vtable.','line_number':127,'multiline':False]['text':' UTIL_GEOMETRY_S2CELL_H_','line_number':143,'multiline':False]