['text':' Copyright 2005 Google Inc. All Rights Reserved.','line_number':1,'multiline':False]['text':' An R1Interval represents a closed, bounded interval on the real line.','line_number':23,'multiline':False]['text':' It is capable of representing the empty interval (containing no points)','line_number':24,'multiline':False]['text':' and zero-length intervals (containing a single point).','line_number':25,'multiline':False]['text':'','line_number':26,'multiline':False]['text':' This class is intended to be copied by value as desired.  It uses','line_number':27,'multiline':False]['text':' the default copy constructor and assignment operator.','line_number':28,'multiline':False]['text':' Constructor.  If lo > hi, the interval is empty.','line_number':31,'multiline':False]['text':' The default constructor creates an empty interval.  (Any interval where','line_number':34,'multiline':False]['text':' lo > hi is considered to be empty.)','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':' Note: Don't construct an interval using the default constructor and','line_number':37,'multiline':False]['text':' set_lo()/set_hi(), since this technique doesn't work with S1Interval and','line_number':38,'multiline':False]['text':' is bad programming style anyways.  If you need to set both endpoints, use','line_number':39,'multiline':False]['text':' the constructor above:','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'   lat_bounds_ = R1Interval(lat_lo, lat_hi);','line_number':42,'multiline':False]['text':' Returns an empty interval.','line_number':45,'multiline':False]['text':' Convenience method to construct an interval containing a single point.','line_number':48,'multiline':False]['text':' Convenience method to construct the minimal interval containing','line_number':53,'multiline':False]['text':' the two given points.  This is equivalent to starting with an empty','line_number':54,'multiline':False]['text':' interval and calling AddPoint() twice, but it is more efficient.','line_number':55,'multiline':False]['text':' Methods to modify one endpoint of an existing R1Interval.  Do not use','line_number':69,'multiline':False]['text':' these methods if you want to replace both endpoints of the interval; use','line_number':70,'multiline':False]['text':' a constructor instead.  For example:','line_number':71,'multiline':False]['text':'','line_number':72,'multiline':False]['text':'   *lat_bounds = R1Interval(lat_lo, lat_hi);','line_number':73,'multiline':False]['text':' Return true if the interval is empty, i.e. it contains no points.','line_number':77,'multiline':False]['text':' Return the center of the interval.  For empty intervals,','line_number':80,'multiline':False]['text':' the result is arbitrary.','line_number':81,'multiline':False]['text':' Return the length of the interval.  The length of an empty interval','line_number':84,'multiline':False]['text':' is negative.','line_number':85,'multiline':False]['text':' Return true if this interval contains the interval 'y'.','line_number':96,'multiline':False]['text':' Return true if the interior of this interval contains the entire','line_number':102,'multiline':False]['text':' interval 'y' (including its boundary).','line_number':103,'multiline':False]['text':' Return true if this interval intersects the given interval,','line_number':109,'multiline':False]['text':' i.e. if they have any points in common.','line_number':110,'multiline':False]['text':' Return true if the interior of this interval intersects','line_number':119,'multiline':False]['text':' any point of the given interval (including its boundary).','line_number':120,'multiline':False]['text':' Return the Hausdorff distance to the given interval 'y'. For two','line_number':125,'multiline':False]['text':' R1Intervals x and y, this distance is defined as','line_number':126,'multiline':False]['text':'     h(x, y) = max_{p in x} min_{q in y} d(p, q).','line_number':127,'multiline':False]['text':' Expand the interval so that it contains the given point "p".','line_number':134,'multiline':False]['text':' Return an interval that contains all points with a distance "radius" of','line_number':141,'multiline':False]['text':' a point in this interval.  Note that the expansion of an empty interval','line_number':142,'multiline':False]['text':' is always empty.','line_number':143,'multiline':False]['text':' Return the smallest interval that contains this interval and the','line_number':150,'multiline':False]['text':' given interval "y".','line_number':151,'multiline':False]['text':' Return the intersection of this interval with the given interval.','line_number':158,'multiline':False]['text':' Empty intervals do not need to be special-cased.','line_number':159,'multiline':False]['text':' Return true if two intervals contain the same set of points.','line_number':164,'multiline':False]['text':' Return true if length of the symmetric difference between the two','line_number':169,'multiline':False]['text':' intervals is at most the given tolerance.','line_number':170,'multiline':False]['text':' UTIL_GEOMETRY_R1INTERVAL_H_','line_number':186,'multiline':False]