['text':' Copyright 2001 and onwards Google Inc.','line_number':1,'multiline':False]['text':' sys/types.h is only needed by this file if !defined(NDEBUG),','line_number':9,'multiline':False]['text':' but including it conditionally can cause hard-to-track-down','line_number':10,'multiline':False]['text':' compilation failures that only happen when doing optimized builds.','line_number':11,'multiline':False]['text':' Let's include it unconditionally to reduce the number of such breakages','line_number':12,'multiline':False]['text':' we need to track down.','line_number':13,'multiline':False]['text':' Note that uint is defined by sys/types.h only if _GNU_SOURCE or its ilk is','line_number':14,'multiline':False]['text':' defined, and that mysql.h seems to define _GNU_SOURCE, so the problem','line_number':15,'multiline':False]['text':' may only happen if sys/types.h is included after mysql.h.','line_number':16,'multiline':False]['text':' We now define uint in base/port.h if needed, and in a way that won't clash.','line_number':17,'multiline':False]['text':' for size_t','line_number':18,'multiline':False]['text':' The following help ensure type safety for docids.  Use them when','line_number':25,'multiline':False]['text':' you want to printf/scanf a docid.  Note that even so, when the','line_number':26,'multiline':False]['text':' type of docid changes you'll need to change all the format args','line_number':27,'multiline':False]['text':' for these printf/scanf statements by hand (to be %qu, say).','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' We do two kinds of docids to facilitate the transition from 32-bit','line_number':30,'multiline':False]['text':' docids to 64-bit docids. We need both in the transition period','line_number':31,'multiline':False]['text':' as the base index will use 32 bit docids and the incremental index','line_number':32,'multiline':False]['text':' will use 64-bit docids.','line_number':33,'multiline':False]['text':' Used with the SparseBitmap class, primarily','line_number':41,'multiline':False]['text':' Used with the docservercache stuff, for odd but reasonable reasons','line_number':43,'multiline':False]['text':' Used with the protocol-buffer stuff','line_number':45,'multiline':False]['text':' Used during anchor processing','line_number':47,'multiline':False]['text':' Used for checkpointing','line_number':49,'multiline':False]['text':' Used for approximate dups detection','line_number':51,'multiline':False]['text':' Used for SWIG','line_number':53,'multiline':False]['text':' Used for miscellaneous arithmetic.','line_number':56,'multiline':False]['text':' ------------------------------------------------------------------','line_number':59,'multiline':False]['text':' 32 bit docids','line_number':60,'multiline':False]['text':' ------------------------------------------------------------------','line_number':61,'multiline':False]['text':' return true if the value cannot fit in DocId32Bit','line_number':86,'multiline':False]['text':' In debug mode, we make docid its own type so we can be sure of','line_number':90,'multiline':False]['text':' type-safety.  In particular, we're concerned with people who treat','line_number':91,'multiline':False]['text':' docids as if they were signed, or who assume they're 32 bits long.','line_number':92,'multiline':False]['text':' We don't define this always because it results in 14% bigger executables.','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' DocId is thread-compatible.','line_number':95,'multiline':False]['text':' ONLY use here','line_number':106,'multiline':False]['text':' ie in this file','line_number':107,'multiline':False]['text':' These two are required for delta encoding','line_number':112,'multiline':False]['text':' needed in incrementalpr.cc','line_number':116,'multiline':False]['text':' Required for hashing, typically','line_number':119,'multiline':False]['text':' Required for sortedrepptrs.cc and partialindexreader.cc','line_number':121,'multiline':False]['text':' Required for moreoverreposwriter.cc & sortpageranks.cc','line_number':126,'multiline':False]['text':' Required by dup_docid_categorizer.cc and some other twiddlers, who needs','line_number':135,'multiline':False]['text':' to convert 64-bit doc id into 32-bit category id. Now the only intended use','line_number':136,'multiline':False]['text':' of this operator is to mask off the top bits of a docid.','line_number':137,'multiline':False]['text':' Comparators','line_number':139,'multiline':False]['text':' Required for anchorbucket.cc','line_number':145,'multiline':False]['text':' Required for restrict-tool.cc','line_number':148,'multiline':False]['text':' Required for index-request.cc','line_number':150,'multiline':False]['text':' Required for linksreader.cc','line_number':153,'multiline':False]['text':' Required for indexdefs.h (really should be HitPosition, not uint64)','line_number':155,'multiline':False]['text':' Required for hashing docids.  docservercache.cc needs to fingerprint them.','line_number':158,'multiline':False]['text':' taken from stl_decl.h','line_number':159,'multiline':False]['text':' These are defined in non-debug mode too; they're always-on type-safety','line_number':174,'multiline':False]['text':' ---------------------------------------------------------------------','line_number':190,'multiline':False]['text':' 32 bit docids','line_number':191,'multiline':False]['text':'','line_number':192,'multiline':False]['text':' ---------------------------------------------------------------------','line_number':193,'multiline':False]['text':' we can't use kMaxDocId32Bit as it is not yet defined','line_number':209,'multiline':False]['text':' ONLY use here','line_number':213,'multiline':False]['text':' ie in this file','line_number':214,'multiline':False]['text':' These two are required for delta encoding','line_number':219,'multiline':False]['text':' needed in incrementalpr.cc','line_number':223,'multiline':False]['text':' Required for hashing, typically','line_number':226,'multiline':False]['text':' Required for sortedrepptrs.cc and partialindexreader.cc','line_number':228,'multiline':False]['text':' Required for moreoverreposwriter.cc & sortpageranks.cc','line_number':233,'multiline':False]['text':' Comparators','line_number':242,'multiline':False]['text':' some definitions for 64 bit docids','line_number':292,'multiline':False]['text':' some definitions for 32 bit docids','line_number':300,'multiline':False]['text':' Type for index-localized docids (normal docid divided by # of','line_number':304,'multiline':False]['text':' shards).  This type is signed because 0 is a valid local docid (for','line_number':305,'multiline':False]['text':' shard > 0), and we need an illegal value.','line_number':306,'multiline':False]['text':' Conversion between local and global docids.','line_number':311,'multiline':False]['text':' REQUIRES: the arguments should be neither Illegal nor Max.','line_number':312,'multiline':False]['text':'shard','line_number':313,'multiline':True]['text':' Equivalent to GlobalToLocalDocId(NextDocIdOnShard(d, sh, ns), sh, ns)','line_number':324,'multiline':False]['text':' DocVersionId','line_number':334,'multiline':False]['text':' For real time cache.  A higher value means more recent.','line_number':336,'multiline':False]['text':' BASE_DOCID_H_','line_number':340,'multiline':False]