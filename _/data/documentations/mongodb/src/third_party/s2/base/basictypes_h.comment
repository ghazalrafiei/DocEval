['text':'','line_number':1,'multiline':False]['text':' Copyright 2001 - 2003 Google, Inc.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' Google-specific types','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' id for odp categories','line_number':16,'multiline':False]['text':' Pagerank related types.','line_number':29,'multiline':False]['text':' TODO(user) - we'd like to move this into google3/pagerank/','line_number':30,'multiline':False]['text':' prtype.h, but this datatype is used all over and that would be','line_number':31,'multiline':False]['text':' a major change.','line_number':32,'multiline':False]['text':' To get a complete picture of all the datatypes used for PageRank','line_number':33,'multiline':False]['text':' and the functions to convert between them, please see google3/','line_number':34,'multiline':False]['text':' pagerank/prtype.h','line_number':35,'multiline':False]['text':' value in [0, kNumPageRankValues)','line_number':36,'multiline':False]['text':' Used for fielded search','line_number':40,'multiline':False]['text':' It is expected that we *never* have a collision of Fingerprints for','line_number':44,'multiline':False]['text':' 2 distinct objects.  No object has kIllegalFprint as its Fingerprint.','line_number':45,'multiline':False]['text':' 64 bit checksum (see common/checksummer.{h,cc})','line_number':50,'multiline':False]['text':' In contrast to Fingerprints, we *do* expect Hash<i> values to collide','line_number':55,'multiline':False]['text':' from time to time (although we obviously prefer them not to).  Also','line_number':56,'multiline':False]['text':' note that there is an illegal hash value for each size hash.','line_number':57,'multiline':False]['text':' 2^32-1','line_number':62,'multiline':False]['text':' 2^16-1','line_number':63,'multiline':False]['text':' 2^8-1','line_number':64,'multiline':False]['text':' MetatagId refers to metatag-id that we assign to','line_number':67,'multiline':False]['text':' each metatag <name, value> pair..','line_number':68,'multiline':False]['text':' Argument type used in interfaces that can optionally take ownership','line_number':71,'multiline':False]['text':' of a passed in argument.  If TAKE_OWNERSHIP is passed, the called','line_number':72,'multiline':False]['text':' object takes ownership of the argument.  Otherwise it does not.','line_number':73,'multiline':False]['text':' Use these as the mlock_bytes parameter to MLock and MLockGeneral','line_number':79,'multiline':False]['text':' The following enum should be used only as a constructor argument to indicate','line_number':82,'multiline':False]['text':' that the variable has static storage class, and that the constructor should','line_number':83,'multiline':False]['text':' do nothing to its state.  It indicates to the reader that it is legal to','line_number':84,'multiline':False]['text':' declare a static nistance of the class, provided the constructor is given','line_number':85,'multiline':False]['text':' the base::LINKER_INITIALIZED argument.  Normally, it is unsafe to declare a','line_number':86,'multiline':False]['text':' static variable that has a constructor or a destructor because invocation','line_number':87,'multiline':False]['text':' order is undefined.  However, IF the type can be initialized by filling with','line_number':88,'multiline':False]['text':' zeroes (which the loader does for static variables), AND the type's','line_number':89,'multiline':False]['text':' destructor does nothing to the storage, then a constructor for static initialization','line_number':90,'multiline':False]['text':' can be declared as','line_number':91,'multiline':False]['text':'       explicit MyClass(base::LinkerInitialized x) {}','line_number':92,'multiline':False]['text':' and invoked as','line_number':93,'multiline':False]['text':'       static MyClass my_variable_name(base::LINKER_INITIALIZED);','line_number':94,'multiline':False]['text':' _BASICTYPES_H_','line_number':99,'multiline':False]