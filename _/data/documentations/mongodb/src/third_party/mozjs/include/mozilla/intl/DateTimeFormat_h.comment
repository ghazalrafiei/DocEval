['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':'*
 * This component is a Mozilla-focused API for the date formatting provided by
 * ICU. The methods internally call out to ICU4C. This is responsible for and
 * owns any resources opened through ICU, through RAII.
 *
 * The construction of a DateTimeFormat contains the majority of the cost
 * of the DateTimeFormat operation. DateTimeFormat::TryFormat should be
 * relatively inexpensive after the initial construction.
 *
 * This class supports creating from Styles (a fixed set of options), and from
 * Skeletons (a list of fields and field widths to include).
 *
 * This API will also serve to back the ECMA-402 Intl.DateTimeFormat API.
 * See Bug 1709473.
 * https://tc39.es/ecma402/#datetimeformat-objects
 ','line_number':24,'multiline':True]['text':' Do not allow copy as this class owns the ICU resource. Move is not','line_number':42,'multiline':False]['text':' currently implemented, but a custom move operator could be created if','line_number':43,'multiline':False]['text':' needed.','line_number':44,'multiline':False]['text':'*
   * Create a DateTimeFormat from styles.
   *
   * The "style" model uses different options for formatting a date or time
   * based on how the result will be styled, rather than picking specific
   * fields or lengths.
   *
   * Takes an optional time zone which will override the user's default
   * time zone. This is a UTF-16 string that takes the form "GMT±hh:mm", or
   * an IANA time zone identifier, e.g. "America/Chicago".
   ','line_number':50,'multiline':True]['text':'*
   * Create a DateTimeFormat from a UTF-8 skeleton. See the UTF-16 version for
   * the full documentation of this function. This overload requires additional
   * work compared to the UTF-16 version.
   ','line_number':73,'multiline':True]['text':'*
   * Create a DateTimeFormat from a UTF-16 skeleton.
   *
   * A skeleton is an unordered list of fields that are used to find an
   * appropriate date time format pattern. Example skeletons would be "yMd",
   * "yMMMd", "EBhm". If the skeleton includes string literals or other
   * information, it will be discarded when matching against skeletons.
   *
   * Takes an optional time zone which will override the user's default
   * time zone. This is a string that takes the form "GMT±hh:mm", or
   * an IANA time zone identifier, e.g. "America/Chicago".
   ','line_number':82,'multiline':True]['text':'*
   * Use the format settings to format a date time into a string. The non-null
   * terminated string will be placed into the provided buffer. The idea behind
   * this API is that the constructor is expensive, and then the format
   * operation is cheap.
   *
   * aUnixEpoch is the number of milliseconds since 1 January 1970, UTC.
   ','line_number':106,'multiline':True]['text':' The output buffer is UTF-8, but ICU uses UTF-16 internally.','line_number':125,'multiline':False]['text':' Write the formatted date into the u16Buffer.','line_number':127,'multiline':False]['text':' UFieldPosition* ','line_number':134,'multiline':True]['text':' The output buffer is UTF-16. ICU can output directly into this buffer.','line_number':147,'multiline':False]['text':'*
   * Copies the pattern for the current DateTimeFormat to a buffer.
   ','line_number':156,'multiline':True]['text':' localized','line_number':163,'multiline':True]['text':'*
   * Set the start time of the Gregorian calendar. This is useful for
   * ensuring the consistent use of a proleptic Gregorian calendar for ECMA-402.
   * https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar
   ','line_number':168,'multiline':True]['text':'*
   * TODO(Bug 1686965) - Temporarily get the underlying ICU object while
   * migrating to the unified API. This should be removed when completing the
   * migration.
   ','line_number':177,'multiline':True]['text':'*
   * Clones the Calendar from a DateTimeFormat, and sets its time with the
   * relative milliseconds since 1 January 1970, UTC.
   ','line_number':184,'multiline':True]['text':' mozilla::Vector can avoid heap allocations for small transient buffers.','line_number':194,'multiline':False]['text':' namespace mozilla::intl','line_number':200,'multiline':False]