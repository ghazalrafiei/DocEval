['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' Helper header to declare all the supported malloc functions.','line_number':7,'multiline':False]['text':' MALLOC_DECL arguments are:','line_number':8,'multiline':False]['text':'   - function name','line_number':9,'multiline':False]['text':'   - return type','line_number':10,'multiline':False]['text':'   - argument types','line_number':11,'multiline':False]['text':' malloc_decls_h','line_number':30,'multiline':False]['text':' NOTHROW_MALLOC_DECL is intended for functions where the standard library','line_number':37,'multiline':False]['text':' declares the functions in question as `throw()`.  Not all platforms','line_number':38,'multiline':False]['text':' consistent declare certain functions as `throw()`, though.','line_number':39,'multiline':False]['text':' Bionic and OS X don't seem to care about `throw()`ness.','line_number':41,'multiline':False]['text':' Some places don't care about the distinction.','line_number':45,'multiline':False]['text':' The 2nd argument points to an optional array exactly JEMALLOC_MAX_STATS_BINS','line_number':66,'multiline':False]['text':' long to be filled in (if non-null). Any unused bin has it's size set to zero.','line_number':67,'multiline':False]['text':' On some operating systems (Mac), we use madvise(MADV_FREE) to hand pages','line_number':71,'multiline':False]['text':' back to the operating system.  On Mac, the operating system doesn't take','line_number':72,'multiline':False]['text':' this memory back immediately; instead, the OS takes it back only when the','line_number':73,'multiline':False]['text':' machine is running out of physical memory.','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' This is great from the standpoint of efficiency, but it makes measuring our','line_number':76,'multiline':False]['text':' actual RSS difficult, because pages which we've MADV_FREE'd shouldn't count','line_number':77,'multiline':False]['text':' against our RSS.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' This function explicitly purges any MADV_FREE'd pages from physical memory,','line_number':80,'multiline':False]['text':' causing our reported RSS match the amount of memory we're actually using.','line_number':81,'multiline':False]['text':'','line_number':82,'multiline':False]['text':' Note that this call is expensive in two ways.  First, it may be slow to','line_number':83,'multiline':False]['text':' execute, because it may make a number of slow syscalls to free memory.  This','line_number':84,'multiline':False]['text':' function holds the big jemalloc locks, so basically all threads are blocked','line_number':85,'multiline':False]['text':' while this function runs.','line_number':86,'multiline':False]['text':'','line_number':87,'multiline':False]['text':' This function is also expensive in that the next time we go to access a page','line_number':88,'multiline':False]['text':' which we've just explicitly decommitted, the operating system has to attach','line_number':89,'multiline':False]['text':' to it a physical page!  If we hadn't run this function, the OS would have','line_number':90,'multiline':False]['text':' less work to do.','line_number':91,'multiline':False]['text':'','line_number':92,'multiline':False]['text':' If MALLOC_DOUBLE_PURGE is not defined, this function does nothing.','line_number':93,'multiline':False]['text':' Free all unused dirty pages in all arenas. Calling this function will slow','line_number':96,'multiline':False]['text':' down subsequent allocations so it is recommended to use it only when','line_number':97,'multiline':False]['text':' memory needs to be reclaimed at all costs (see bug 805855). This function','line_number':98,'multiline':False]['text':' provides functionality similar to mallctl("arenas.purge") in jemalloc 3.','line_number':99,'multiline':False]['text':' Opt in or out of a thread local arena (bool argument is whether to opt-in','line_number':102,'multiline':False]['text':' (true) or out (false)).','line_number':103,'multiline':False]['text':' Provide information about any allocation enclosing the given address.','line_number':106,'multiline':False]['text':' Creates a separate arena, and returns its id, valid to use with moz_arena_*','line_number':112,'multiline':False]['text':' functions. A helper is provided in mozmemory.h that doesn't take any','line_number':113,'multiline':False]['text':' arena_params_t: moz_create_arena.','line_number':114,'multiline':False]['text':' Dispose of the given arena. Subsequent uses of the arena will crash.','line_number':117,'multiline':False]['text':' Passing an invalid id (inexistent or already disposed) to this function','line_number':118,'multiline':False]['text':' will crash. The arena must be empty prior to calling this function.','line_number':119,'multiline':False]['text':' Same as the functions without the moz_arena_ prefix, but using arenas','line_number':124,'multiline':False]['text':' created with moz_create_arena.','line_number':125,'multiline':False]['text':' The contract, even if not enforced at runtime in some configurations,','line_number':126,'multiline':False]['text':' is that moz_arena_realloc and moz_arena_free will crash if the given','line_number':127,'multiline':False]['text':' arena doesn't own the given pointer. All functions will crash if the','line_number':128,'multiline':False]['text':' arena id is invalid.','line_number':129,'multiline':False]['text':' Although discouraged, plain realloc and free can still be used on','line_number':130,'multiline':False]['text':' pointers allocated with these functions. Realloc will properly keep','line_number':131,'multiline':False]['text':' new pointers in the same arena as the original.','line_number':132,'multiline':False]['text':' MALLOC_DECL','line_number':140,'multiline':False]