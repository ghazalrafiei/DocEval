['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' __cplusplus','line_number':15,'multiline':False]['text':'
 * Functions that are used as markers in Gecko code for static analysis. Their
 * purpose is to have different AST nodes generated during compile time and to
 * match them based on different checkers implemented in build/clang-plugin
 ','line_number':19,'multiline':True]['text':'*
 * MOZ_KnownLive - used to opt an argument out of the CanRunScript checker so
 * that we don't check it if is a strong ref.
 *
 * Example:
 * canRunScript(MOZ_KnownLive(rawPointer));
 ','line_number':28,'multiline':True]['text':'*
 * Ditto, but for references.
 ','line_number':40,'multiline':True]['text':'*
 * MOZ_AssertAssignmentTest - used in MOZ_ASSERT in order to test the possible
 * presence of assignment instead of logical comparisons.
 *
 * Example:
 * MOZ_ASSERT(retVal = true);
 ','line_number':50,'multiline':True]['text':' MOZ_CLANG_PLUGIN ','line_number':69,'multiline':True]['text':' StaticAnalysisFunctions_h ','line_number':70,'multiline':True]