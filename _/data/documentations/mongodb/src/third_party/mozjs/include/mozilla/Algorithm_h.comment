['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' A polyfill for `<algorithm>`. ','line_number':7,'multiline':True]['text':' Returns true if all elements in the range [aFirst, aLast)','line_number':19,'multiline':False]['text':' satisfy the predicate aPred.','line_number':20,'multiline':False]['text':' Like C++20's `std::any_of`.','line_number':31,'multiline':False]['text':' namespace detail','line_number':55,'multiline':False]['text':' An algorithm similar to TransformAbortOnErr combined with a condition that','line_number':57,'multiline':False]['text':' allows to skip elements. At most std::distance(aIter, aEnd) elements will be','line_number':58,'multiline':False]['text':' inserted into aDst.','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':' Type requirements, in addition to those specified in TransformAbortOnErr:','line_number':61,'multiline':False]['text':' - Cond must be compatible with signature','line_number':62,'multiline':False]['text':'   bool (const SrcIter::value_type&)','line_number':63,'multiline':False]['text':' An algorithm similar to std::transform, adapted to error handling based on','line_number':96,'multiline':False]['text':' mozilla::Result<V, E>. It iterates through the input range [aIter, aEnd) and','line_number':97,'multiline':False]['text':' inserts the result of applying aTransform to each element into aDst, if','line_number':98,'multiline':False]['text':' aTransform returns a success result. On the first error result, iterating is','line_number':99,'multiline':False]['text':' aborted, and the error result is returned as an overall result. If all','line_number':100,'multiline':False]['text':' transformations return a success result, Ok is returned as an overall result.','line_number':101,'multiline':False]['text':'','line_number':102,'multiline':False]['text':' Type requirements:','line_number':103,'multiline':False]['text':' - SrcIter must be an InputIterator.','line_number':104,'multiline':False]['text':' - DstIter must be an OutputIterator.','line_number':105,'multiline':False]['text':' - Transform must be compatible with signature','line_number':106,'multiline':False]['text':'   Result<DstIter::value_type, E> (SrcIter::reference)','line_number':107,'multiline':False]['text':' namespace mozilla','line_number':126,'multiline':False]['text':' mozilla_Algorithm_h','line_number':128,'multiline':False]