['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' Similar to std::ifstream/ofstream, but takes char16ptr_t on Windows.','line_number':7,'multiline':False]['text':' Until C++17, std functions can only take char* filenames. So Unicode','line_number':8,'multiline':False]['text':' filenames were lost on Windows. To address this limitations, this wrapper','line_number':9,'multiline':False]['text':' uses proprietary wchar_t* overloads on MSVC, and __gnu_cxx::stdio_filebuf','line_number':10,'multiline':False]['text':' extension on MinGW. Once we can use C++17 filesystem API everywhere,','line_number':11,'multiline':False]['text':' we will be able to avoid this wrapper.','line_number':12,'multiline':False]['text':' MinGW does not support wchar_t* overloads that are MSVC extension until','line_number':30,'multiline':False]['text':' C++17, so we have to implement widechar wrappers using a GNU extension.','line_number':31,'multiline':False]['text':' namespace mozilla','line_number':122,'multiline':False]['text':' mozilla_FStream_h ','line_number':124,'multiline':True]