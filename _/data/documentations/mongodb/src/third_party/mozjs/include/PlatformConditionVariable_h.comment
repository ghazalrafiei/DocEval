['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' Wake one thread that is waiting on this condition.','line_number':34,'multiline':False]['text':' Wake all threads that are waiting on this condition.','line_number':37,'multiline':False]['text':' Atomically release |lock| and sleep the current thread of execution on','line_number':40,'multiline':False]['text':' this condition variable.','line_number':41,'multiline':False]['text':' |lock| will be re-acquired before this function returns.','line_number':42,'multiline':False]['text':' The thread may be woken from sleep from another thread via notify_one()','line_number':43,'multiline':False]['text':' or notify_all(), but may also wake spuriously.  The caller should recheck','line_number':44,'multiline':False]['text':' its predicate after this function returns, typically in a while loop.','line_number':45,'multiline':False]['text':' namespace detail','line_number':67,'multiline':False]['text':' namespace mozilla','line_number':69,'multiline':False]['text':' mozilla_ConditionVariable_h','line_number':71,'multiline':False]