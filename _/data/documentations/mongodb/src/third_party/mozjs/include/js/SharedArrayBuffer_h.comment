['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':2,'multiline':True]['text':' ArrayBuffer functionality. ','line_number':6,'multiline':True]['text':' size_t','line_number':11,'multiline':False]['text':' uint8_t','line_number':12,'multiline':False]['text':' JS_PUBLIC_API','line_number':14,'multiline':False]['text':' CREATION','line_number':22,'multiline':False]['text':'*
 * Create a new SharedArrayBuffer with the given byte length.  This
 * may only be called if
 * JS::RealmCreationOptionsRef(cx).getSharedMemoryAndAtomicsEnabled() is
 * true.
 ','line_number':24,'multiline':True]['text':' TYPE TESTING','line_number':33,'multiline':False]['text':'*
 * Check whether obj supports the JS::GetSharedArrayBuffer* APIs.  Note that
 * this may return false if a security wrapper is encountered that denies the
 * unwrapping. If this test succeeds, then it is safe to call the various
 * accessor JSAPI calls defined below.
 ','line_number':35,'multiline':True]['text':' ACCESSORS','line_number':43,'multiline':False]['text':' Ditto for SharedArrayBuffer.','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':' There is an isShared out argument for API consistency (eases use from DOM).','line_number':55,'multiline':False]['text':' It will always be set to true.','line_number':56,'multiline':False]['text':'*
 * Returns true if there are any live SharedArrayBuffer objects, including those
 * for wasm memories, associated with the context.  This is conservative,
 * because it does not run GC.  Some dead objects may not have been collected
 * yet and thus will be thought live.
 ','line_number':60,'multiline':True]['text':'*
 * Return the isShared flag of a ArrayBufferView subtypes, which denotes whether
 * the underlying buffer is a SharedArrayBuffer.
 *
 * |obj| must have passed a JS_IsArrayBufferViewObject test, or somehow
 * be known that it would pass such a test: it is a ArrayBufferView subtypes or
 * a wrapper of a ArrayBufferView subtypes, and the unwrapping will succeed.
 ','line_number':68,'multiline':True]['text':' namespace JS','line_number':78,'multiline':False]['text':' js_SharedArrayBuffer_h ','line_number':80,'multiline':True]