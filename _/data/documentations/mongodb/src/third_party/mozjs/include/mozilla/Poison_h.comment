['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':'
 * A poison value that can be used to fill a memory space with
 * an address that leads to a safe crash when dereferenced.
 ','line_number':7,'multiline':True]['text':'*
 * @return the poison value.
 ','line_number':25,'multiline':True]['text':'*
 * Overwrite the memory block of aSize bytes at aPtr with the poison value.
 * Only a multiple of sizeof(uintptr_t) bytes are overwritten, the last
 * few bytes (if any) are not overwritten.
 ','line_number':30,'multiline':True]['text':' Values annotated by CrashReporter ','line_number':45,'multiline':True]['text':'*
 * A version of CorruptionCanary that is suitable as a member of objects that
 * are statically allocated.
 ','line_number':55,'multiline':True]['text':' This is required to avoid static constructor bloat.','line_number':63,'multiline':False]['text':'*
 * This class is designed to cause crashes when various kinds of memory
 * corruption are observed. For instance, let's say we have a class C where we
 * suspect out-of-bounds writes to some members.  We can insert a member of type
 * Poison near the members we suspect are being corrupted by out-of-bounds
 * writes.  Or perhaps we have a class K we suspect is subject to use-after-free
 * violations, in which case it doesn't particularly matter where in the class
 * we add the member of type Poison.
 *
 * In either case, we then insert calls to Check() throughout the code.  Doing
 * so enables us to narrow down the location where the corruption is occurring.
 * A pleasant side-effect of these additional Check() calls is that crash
 * signatures may become more regular, as crashes will ideally occur
 * consolidated at the point of a Check(), rather than scattered about at
 * various uses of the corrupted memory.
 ','line_number':79,'multiline':True]['text':' namespace mozilla','line_number':105,'multiline':False]['text':' mozilla_Poison_h ','line_number':109,'multiline':True]