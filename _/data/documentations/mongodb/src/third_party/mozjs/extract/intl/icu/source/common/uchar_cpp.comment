['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
********************************************************************************
*   Copyright (C) 1996-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
********************************************************************************
*
* File UCHAR.C
*
* Modification History:
*
*   Date        Name        Description
*   04/02/97    aliu        Creation.
*   4/15/99     Madhu       Updated all the function definitions for C Implementation
*   5/20/99     Madhu       Added the function u_getVersion()
*   8/19/1999   srl         Upgraded scripts to Unicode3.0 
*   11/11/1999  weiv        added u_isalnum(), cleaned comments
*   01/11/2000  helena      Renamed u_getVersion to u_getUnicodeVersion.
*   06/20/2000  helena      OS/400 port changes; mostly typecast.
******************************************************************************
','line_number':3,'multiline':True]['text':' uchar_props_data.h is machine-generated by genprops --csource ','line_number':36,'multiline':True]['text':' constants and macros for access to the data ------------------------------ ','line_number':40,'multiline':True]['text':' getting a uint32_t properties word from the data ','line_number':42,'multiline':True]['text':' API functions ------------------------------------------------------------ ','line_number':45,'multiline':True]['text':' Gets the Unicode character's general category.','line_number':47,'multiline':True]['text':' Enumerate all code points with their general categories. ','line_number':55,'multiline':True]['text':' just cast the value to UCharCategory ','line_number':69,'multiline':True]['text':' Checks if ch is a lower case letter.','line_number':88,'multiline':True]['text':' Checks if ch is an upper case letter.','line_number':96,'multiline':True]['text':' Checks if ch is a title case letter; usually upper case letters.','line_number':104,'multiline':True]['text':' Checks if ch is a decimal digit. ','line_number':112,'multiline':True]['text':' check ASCII and Fullwidth ASCII a-fA-F ','line_number':124,'multiline':True]['text':' Checks if the Unicode character is a letter.','line_number':136,'multiline':True]['text':' Checks if c is a letter or a decimal digit ','line_number':149,'multiline':True]['text':'*
 * Checks if c is alphabetic, or a decimal digit; implements UCHAR_POSIX_ALNUM.
 * @internal
 ','line_number':157,'multiline':True]['text':' Checks if ch is a unicode character with assigned character type.','line_number':166,'multiline':True]['text':' Checks if the Unicode character is a base form character that can take a diacritic.','line_number':174,'multiline':True]['text':' Checks if the Unicode character is a control character.','line_number':182,'multiline':True]['text':' Some control characters that are used as space. ','line_number':195,'multiline':True]['text':' Java has decided that U+0085 New Line is not whitespace any more. ','line_number':199,'multiline':True]['text':' Checks if the Unicode character is a space character.','line_number':203,'multiline':True]['text':' Checks if the Unicode character is a whitespace character.','line_number':218,'multiline':True]['text':' exclude no-break spaces ','line_number':225,'multiline':True]['text':' TAB or SPACE ','line_number':233,'multiline':True]['text':' Zs ','line_number':235,'multiline':True]['text':' Checks if the Unicode character is printable.','line_number':247,'multiline':True]['text':' comparing ==0 returns FALSE for the categories mentioned ','line_number':252,'multiline':True]['text':'*
 * Checks if c is in \p{graph}\p{blank} - \p{cntrl}.
 * Implements UCHAR_POSIX_PRINT.
 * @internal
 ','line_number':256,'multiline':True]['text':'
     * The only cntrl character in graph+blank is TAB (in blank).
     * Here we implement (blank-TAB)=Zs instead of calling u_isblank().
     ','line_number':265,'multiline':True]['text':' comparing ==0 returns FALSE for the categories mentioned ','line_number':276,'multiline':True]['text':'*
 * Checks if c is in
 * [^\p{space}\p{gc=Control}\p{gc=Surrogate}\p{gc=Unassigned}]
 * with space=\p{Whitespace} and Control=Cc.
 * Implements UCHAR_POSIX_GRAPH.
 * @internal
 ','line_number':282,'multiline':True]['text':' \p{space}\p{gc=Control} == \p{gc=Z}\p{Control} ','line_number':293,'multiline':True]['text':' comparing ==0 returns FALSE for the categories mentioned ','line_number':294,'multiline':True]['text':' Checks if the Unicode character can start a Unicode identifier.','line_number':307,'multiline':True]['text':' same as u_isalpha() ','line_number':310,'multiline':True]['text':' Checks if the Unicode character can be a Unicode identifier part other than starting the
 identifier.','line_number':316,'multiline':True]['text':'Checks if the Unicode character can be ignorable in a Java or Unicode identifier.','line_number':331,'multiline':True]['text':'Checks if the Unicode character can start a Java identifier.','line_number':343,'multiline':True]['text':'Checks if the Unicode character can be a Java identifier part other than starting the
 * identifier.
 ','line_number':351,'multiline':True]['text':' decimal digit ','line_number':391,'multiline':True]['text':' other digit ','line_number':394,'multiline':True]['text':' small integer ','line_number':397,'multiline':True]['text':' fraction ','line_number':400,'multiline':True]['text':' large, single-significant-digit integer ','line_number':405,'multiline':True]['text':' multiply by 10^exp without math.h ','line_number':411,'multiline':True]['text':' sexagesimal (base 60) integer ','line_number':433,'multiline':True]['text':' fraction-20 e.g. 3/80','line_number':457,'multiline':False]['text':' 0..0x17','line_number':458,'multiline':False]['text':' fraction-32 e.g. 3/64','line_number':463,'multiline':False]['text':' 0..15','line_number':464,'multiline':False]['text':' reserved ','line_number':469,'multiline':True]['text':' ch is not a decimal digit, try latin letters ','line_number':480,'multiline':True]['text':' ch - 'a' + 10 ','line_number':482,'multiline':True]['text':' ch - 'A' + 10 ','line_number':484,'multiline':True]['text':' fullwidth ASCII a-z ','line_number':486,'multiline':True]['text':' fullwidth ASCII A-Z ','line_number':488,'multiline':True]['text':' invalid radix ','line_number':492,'multiline':True]['text':' miscellaneous, and support for uprops.cpp -------------------------------- ','line_number':508,'multiline':True]['text':' Guard against bogus input that would make us go past the Script_Extensions terminator. ','line_number':593,'multiline':True]['text':' property starts for UnicodeSet ------------------------------------------- ','line_number':648,'multiline':True]['text':' add the start code point to the USet ','line_number':652,'multiline':True]['text':' add the start code point of each same-value range of the main trie ','line_number':668,'multiline':True]['text':' add code points with hardcoded properties, plus the ones following them ','line_number':671,'multiline':True]['text':' add for u_isblank() ','line_number':673,'multiline':True]['text':' add for IS_THAT_CONTROL_SPACE() ','line_number':676,'multiline':True]['text':' range TAB..CR ','line_number':677,'multiline':True]['text':' NEXT LINE (NEL)','line_number':680,'multiline':False]['text':' add for u_isIDIgnorable() what was not added above ','line_number':682,'multiline':True]['text':' range DEL..NBSP-1, NBSP added below ','line_number':683,'multiline':True]['text':' INHIBIT SYMMETRIC SWAPPING','line_number':686,'multiline':False]['text':' NOMINAL DIGIT SHAPES','line_number':687,'multiline':False]['text':' add no-break spaces for u_isWhitespace() what was not added above ','line_number':690,'multiline':True]['text':' add for u_digit() ','line_number':695,'multiline':True]['text':' fullwidth','line_number':700,'multiline':False]['text':' add for u_isxdigit() ','line_number':706,'multiline':True]['text':' fullwidth','line_number':709,'multiline':False]['text':' add for UCHAR_DEFAULT_IGNORABLE_CODE_POINT what was not added above ','line_number':713,'multiline':True]['text':' range 2060..206f ','line_number':714,'multiline':True]['text':' add for UCHAR_GRAPHEME_BASE and others ','line_number':720,'multiline':True]['text':' add the start code point of each same-value range of the properties vectors trie ','line_number':730,'multiline':True]