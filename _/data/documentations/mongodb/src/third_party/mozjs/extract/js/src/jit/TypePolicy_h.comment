['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::Scalar::Type','line_number':11,'multiline':False]['text':' A type policy directs the type analysis phases, which insert conversion,','line_number':23,'multiline':False]['text':' boxing, unboxing, and type changes as necessary.','line_number':24,'multiline':False]['text':' Analyze the inputs of the instruction and perform one of the following','line_number':27,'multiline':False]['text':' actions for each input:','line_number':28,'multiline':False]['text':'  * Nothing; the input already type-checks.','line_number':29,'multiline':False]['text':'  * If untyped, optionally ask the input to try and specialize its value.','line_number':30,'multiline':False]['text':'  * Replace the operand with a conversion instruction.','line_number':31,'multiline':False]['text':'  * Insert an unconditional deoptimization (no conversion possible).','line_number':32,'multiline':False]['text':' Specifies three levels of specialization:','line_number':39,'multiline':False]['text':'  - < Value. This input is expected and required.','line_number':40,'multiline':False]['text':'  - == None. This op should not be specialized.','line_number':41,'multiline':False]['text':' Policy for MTest instructions.','line_number':125,'multiline':False]['text':' Policy for MPow:','line_number':142,'multiline':False]['text':'','line_number':143,'multiline':False]['text':' * If return type is MIRType::Double, we need (Double, Double) or','line_number':144,'multiline':False]['text':'   (Double, Int32) operands.','line_number':145,'multiline':False]['text':' * If return type is MIRType::Int32, we need (Int32, Int32) operands.','line_number':146,'multiline':False]['text':' Policy for MSign. Operand is either Double or Int32.','line_number':155,'multiline':False]['text':' Expect a symbol for operand Op. If the input is a Value, it is unboxed.','line_number':164,'multiline':False]['text':' Expect a string for operand Op. If the input is a Value, it is unboxed.','line_number':178,'multiline':False]['text':' Expect a string for operand Op. Else a ToString instruction is inserted.','line_number':192,'multiline':False]['text':' Expect a BigInt for operand Op. If the input is a Value, it is unboxed.','line_number':206,'multiline':False]['text':' Expects either an Int32 or a boxed Int32 for operand Op; may unbox if needed.','line_number':220,'multiline':False]['text':' Expects either an Int32 or IntPtr for operand Op.','line_number':234,'multiline':False]['text':' Expect an Int for operand Op. Else a ToInt32 instruction is inserted.','line_number':248,'multiline':False]['text':' Expect either an Int or BigInt for operand Op. Else a TruncateToInt32 or','line_number':262,'multiline':False]['text':' ToBigInt instruction is inserted.','line_number':263,'multiline':False]['text':' Expect a double for operand Op. If the input is a Value, it is unboxed.','line_number':277,'multiline':False]['text':' Expect a float32 for operand Op. If the input is a Value, it is unboxed.','line_number':291,'multiline':False]['text':' Expect a float32 OR a double for operand Op, but will prioritize Float32','line_number':305,'multiline':False]['text':' if the result type is set as such. If the input is a Value, it is unboxed.','line_number':306,'multiline':False]['text':' Policy for guarding variadic instructions such as object / array state','line_number':329,'multiline':False]['text':' instructions.','line_number':330,'multiline':False]['text':' Box objects or strings as an input to a ToDouble instruction.','line_number':344,'multiline':False]['text':' Box objects, strings and undefined as input to a ToInt32 instruction.','line_number':357,'multiline':False]['text':' Box any non-BigInts as input to a ToBigInt instruction.','line_number':370,'multiline':False]['text':' Box objects as input to a ToString instruction.','line_number':383,'multiline':False]['text':' Box non-Boolean, non-String, non-BigInt as input to a ToInt64 instruction.','line_number':396,'multiline':False]['text':' Single-object input. If the input is a Value, it is unboxed. If it is','line_number':422,'multiline':False]['text':' a primitive, we use ValueToNonNullObject.','line_number':423,'multiline':False]['text':' Boxes everything except inputs of type Type.','line_number':439,'multiline':False]['text':' Box if not a typical property id (string, symbol, int32).','line_number':453,'multiline':False]['text':' Combine multiple policies.','line_number':466,'multiline':False]['text':' Accepts integers and doubles. Everything else is boxed.','line_number':527,'multiline':False]['text':' namespace jit','line_number':540,'multiline':False]['text':' namespace js','line_number':541,'multiline':False]['text':' jit_TypePolicy_h ','line_number':543,'multiline':True]