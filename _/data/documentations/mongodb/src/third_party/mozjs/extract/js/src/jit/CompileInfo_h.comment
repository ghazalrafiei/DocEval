['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' MOZ_ASSERT','line_number':10,'multiline':False]['text':' mozilla::Maybe, mozilla::Some','line_number':11,'multiline':False]['text':' std::max','line_number':13,'multiline':False]['text':' uint32_t','line_number':14,'multiline':False]['text':' CompileRuntime','line_number':16,'multiline':False]['text':' MinJITStackSize','line_number':17,'multiline':False]['text':' jsbytecode','line_number':18,'multiline':False]['text':' BindingLocation','line_number':19,'multiline':False]['text':' JSOp','line_number':20,'multiline':False]['text':' JSAtomState','line_number':21,'multiline':False]['text':' JSFunction','line_number':22,'multiline':False]['text':' JSScript','line_number':23,'multiline':False]['text':' BindingIter','line_number':24,'multiline':False]['text':' Reserved slots:','line_number':35,'multiline':False]['text':' Slot 0: Environment chain.','line_number':36,'multiline':False]['text':' Slot 1: Return value.','line_number':37,'multiline':False]['text':' When needed:','line_number':39,'multiline':False]['text':' Slot 2: Argumentsobject.','line_number':40,'multiline':False]['text':' Note: when updating this, please also update the assert in','line_number':42,'multiline':False]['text':' SnapshotWriter::startFrame','line_number':43,'multiline':False]['text':' Slot x + 0: This value.','line_number':48,'multiline':False]['text':' Slot x + 1: Argument 1.','line_number':49,'multiline':False]['text':' ...','line_number':50,'multiline':False]['text':' Slot x + n: Argument n.','line_number':51,'multiline':False]['text':' Note: when updating this, please also update the assert in','line_number':53,'multiline':False]['text':' SnapshotWriter::startFrame','line_number':54,'multiline':False]['text':' Contains information about the compilation source for IR being generated.','line_number':58,'multiline':False]['text':' The function here can flow in from anywhere so look up the canonical','line_number':80,'multiline':False]['text':' function to ensure that we do not try to embed a nursery pointer in','line_number':81,'multiline':False]['text':' jit-code. Precisely because it can flow in from anywhere, it's not','line_number':82,'multiline':False]['text':' guaranteed to be non-lazy. Hence, don't access its script!','line_number':83,'multiline':False]['text':' env chain and argument obj ','line_number':89,'multiline':True]['text':' this ','line_number':90,'multiline':True]['text':' An extra slot is needed for global scopes because InitGLexical (stack','line_number':94,'multiline':False]['text':' depth 1) is compiled as a SetProp (stack depth 2) on the global lexical','line_number':95,'multiline':False]['text':' scope.','line_number':96,'multiline':False]['text':' For derived class constructors, find and cache the frame slot for','line_number':103,'multiline':False]['text':' the .this binding. This slot is assumed to be always','line_number':104,'multiline':False]['text':' observable. See isObservableFrameSlot.','line_number':105,'multiline':False]['text':' If the script uses an environment in body, the environment chain','line_number':121,'multiline':False]['text':' will need to be observable.','line_number':122,'multiline':False]['text':' For FunctionCompiler::pushPhiInput/popPhiOutput ','line_number':147,'multiline':True]['text':' Total number of slots: args, locals, and stack.','line_number':162,'multiline':False]['text':' Number of slots needed for env chain, return value,','line_number':165,'multiline':False]['text':' maybe argumentsobject and this value.','line_number':166,'multiline':False]['text':' Number of arguments (without counting this value).','line_number':168,'multiline':False]['text':' Number of slots needed for all local variables.  This includes "fixed','line_number':170,'multiline':False]['text':' vars" (see above) and also block-scoped locals.','line_number':171,'multiline':False]['text':' During initialization, some routines need to get at arg','line_number':194,'multiline':False]['text':' slots regardless of how regular argument access is done.','line_number':195,'multiline':False]['text':' This should only be accessed when compiling functions for','line_number':200,'multiline':False]['text':' which argument accesses don't need to go through the','line_number':201,'multiline':False]['text':' argument object.','line_number':202,'multiline':False]['text':' This slot must be preserved because it's observable outside SSA uses.','line_number':227,'multiline':False]['text':' It can't be recovered before or during bailout.','line_number':228,'multiline':False]['text':' This slot must be preserved because it's observable, but it can be','line_number':231,'multiline':False]['text':' recovered.','line_number':232,'multiline':False]['text':' This slot is not observable outside SSA uses.','line_number':235,'multiline':False]['text':' Locals and expression stack slots.','line_number':240,'multiline':False]['text':' The |this| slot for a derived class constructor is a local slot.','line_number':242,'multiline':False]['text':' It should never be optimized out, as a Debugger might need to perform','line_number':243,'multiline':False]['text':' TDZ checks on it via, e.g., an exceptionUnwind handler. The TDZ check','line_number':244,'multiline':False]['text':' is required for correctness if the handler decides to continue','line_number':245,'multiline':False]['text':' execution.','line_number':246,'multiline':False]['text':' Formal argument slots.','line_number':254,'multiline':False]['text':' Preserve formal arguments if they might be read when creating a rest or','line_number':259,'multiline':False]['text':' arguments object. In non-strict scripts, Function.arguments can create','line_number':260,'multiline':False]['text':' an arguments object dynamically so we always preserve the arguments.','line_number':261,'multiline':False]['text':' |this| slot is observable but it can be recovered.','line_number':268,'multiline':False]['text':' Environment chain slot.','line_number':273,'multiline':False]['text':' If environments can be added in the body (after the prologue) we need','line_number':275,'multiline':False]['text':' to preserve the environment chain slot. It can't be recovered.','line_number':276,'multiline':False]['text':' If the function may need an arguments object, also preserve the','line_number':280,'multiline':False]['text':' environment chain because it may be needed to reconstruct the arguments','line_number':281,'multiline':False]['text':' object during bailout.','line_number':282,'multiline':False]['text':' The arguments object is observable. If it does not escape, it can','line_number':289,'multiline':False]['text':' be recovered.','line_number':290,'multiline':False]['text':' Returns true if a slot can be observed out-side the current frame while','line_number':300,'multiline':False]['text':' the frame is active on the stack.  This implies that these definitions','line_number':301,'multiline':False]['text':' would have to be executed and that they cannot be removed even if they','line_number':302,'multiline':False]['text':' are unused.','line_number':303,'multiline':False]['text':' Returns true if a slot can be recovered before or during a bailout.  A','line_number':310,'multiline':False]['text':' definition which can be observed and recovered, implies that this','line_number':311,'multiline':False]['text':' definition can be optimized away as long as we can compute its values.','line_number':312,'multiline':False]['text':' Check previous bailout states to prevent doing the same bailout in the','line_number':319,'multiline':False]['text':' next compilation.','line_number':320,'multiline':False]['text':' Record the state of previous bailouts in order to prevent compiling the','line_number':346,'multiline':False]['text':' same function identically the next time.','line_number':347,'multiline':False]['text':' Whether a script needs environments within its body. This informs us','line_number':362,'multiline':False]['text':' that the environment chain is not easy to reconstruct.','line_number':363,'multiline':False]['text':' namespace jit','line_number':368,'multiline':False]['text':' namespace js','line_number':369,'multiline':False]['text':' jit_CompileInfo_h ','line_number':371,'multiline':True]