['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' A first-in-first-out queue container type. Fifo calls constructors and','line_number':17,'multiline':False]['text':' destructors of all elements added so non-PODs may be used safely. |Fifo|','line_number':18,'multiline':False]['text':' stores the first |MinInlineCapacity| elements in-place before resorting to','line_number':19,'multiline':False]['text':' dynamic allocation.','line_number':20,'multiline':False]['text':'','line_number':21,'multiline':False]['text':' T requirements:','line_number':22,'multiline':False]['text':'  - Either movable or copyable.','line_number':23,'multiline':False]['text':' MinInlineCapacity requirements:','line_number':24,'multiline':False]['text':'  - Must be even.','line_number':25,'multiline':False]['text':' AllocPolicy:','line_number':26,'multiline':False]['text':'  - see "Allocation policies" in AllocPolicy.h','line_number':27,'multiline':False]['text':' An element A is "younger" than an element B if B was inserted into the','line_number':34,'multiline':False]['text':' |Fifo| before A was.','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':' Invariant 1: Every element within |front_| is older than every element','line_number':37,'multiline':False]['text':' within |rear_|.','line_number':38,'multiline':False]['text':' Invariant 2: Entries within |front_| are sorted from younger to older.','line_number':39,'multiline':False]['text':' Invariant 3: Entries within |rear_| are sorted from older to younger.','line_number':40,'multiline':False]['text':' Invariant 4: If the |Fifo| is not empty, then |front_| is not empty.','line_number':41,'multiline':False]['text':' Maintain invariants after adding or removing entries.','line_number':46,'multiline':False]['text':' Invariant 4.','line_number':72,'multiline':False]['text':' Invariant 4.','line_number':77,'multiline':False]['text':' Iterator from oldest to yongest element.','line_number':81,'multiline':False]['text':' Iterate front in reverse, then rear.','line_number':94,'multiline':False]['text':' Push an element to the back of the queue. This method can take either a','line_number':109,'multiline':False]['text':' |const T&| or a |T&&|.','line_number':110,'multiline':False]['text':' Construct a T in-place at the back of the queue.','line_number':120,'multiline':False]['text':' Access the element at the front of the queue.','line_number':130,'multiline':False]['text':' Remove the front element from the queue.','line_number':140,'multiline':False]['text':' Convenience utility.','line_number':147,'multiline':False]['text':' Clear all elements from the queue.','line_number':154,'multiline':False]['text':' Clear all elements for which the given predicate returns 'true'. Return','line_number':160,'multiline':False]['text':' the number of elements removed.','line_number':161,'multiline':False]['text':' namespace js','line_number':185,'multiline':False]['text':' js_Fifo_h ','line_number':187,'multiline':True]