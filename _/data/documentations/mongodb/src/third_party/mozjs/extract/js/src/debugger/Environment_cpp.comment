['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' for AssertionConditionType','line_number':9,'multiline':False]['text':' for Maybe, Some, Nothing','line_number':10,'multiline':False]['text':' for Vector','line_number':11,'multiline':False]['text':' for strlen, size_t','line_number':13,'multiline':False]['text':' for move','line_number':14,'multiline':False]['text':' for Rooted, CallArgs, MutableHandle','line_number':16,'multiline':False]['text':' for Env, Debugger, ValueToIdentifier','line_number':18,'multiline':False]['text':' for DebuggerObject','line_number':19,'multiline':False]['text':' for DebuggerScript','line_number':20,'multiline':False]['text':' for IsIdentifier','line_number':21,'multiline':False]['text':' for RootedDebuggerEnvironment','line_number':22,'multiline':False]['text':' for TraceManuallyBarrieredCrossCompartmentEdge','line_number':23,'multiline':False]['text':' for GetErrorMessage, JSMSG_*','line_number':24,'multiline':False]['text':' for IsInsideNursery','line_number':25,'multiline':False]['text':' for Compartment','line_number':26,'multiline':False]['text':' for Atomize, PinAtom','line_number':27,'multiline':False]['text':' for JSContext','line_number':28,'multiline':False]['text':' for JSFunction','line_number':29,'multiline':False]['text':' for JSObject, RequireObject,','line_number':30,'multiline':False]['text':' for NativeObject, JSObject::is','line_number':31,'multiline':False]['text':' for AutoRealm, ErrorCopier','line_number':32,'multiline':False]['text':' for ScopeKind, ScopeKindString','line_number':33,'multiline':False]['text':' for JSAtom','line_number':34,'multiline':False]['text':' for Compartment::wrap','line_number':36,'multiline':False]['text':' for JSObject::enclosingEnvironment','line_number':37,'multiline':False]['text':' for IsInternalFunctionObject, NewObjectWithGivenProtoAndKind','line_number':38,'multiline':False]['text':' for HasProperty, GetProperty','line_number':39,'multiline':False]['text':' for AutoRealm::AutoRealm','line_number':40,'multiline':False]['text':' addProperty','line_number':54,'multiline':False]['text':' delProperty','line_number':55,'multiline':False]['text':' enumerate','line_number':56,'multiline':False]['text':' newEnumerate','line_number':57,'multiline':False]['text':' resolve','line_number':58,'multiline':False]['text':' mayResolve','line_number':59,'multiline':False]['text':' finalize','line_number':60,'multiline':False]['text':' call','line_number':61,'multiline':False]['text':' hasInstance','line_number':62,'multiline':False]['text':' construct','line_number':63,'multiline':False]['text':' trace','line_number':64,'multiline':False]['text':' There is a barrier on private pointers, so the Unbarriered marking','line_number':74,'multiline':False]['text':' is okay.','line_number':75,'multiline':False]['text':' Forbid Debugger.Environment.prototype, which is of class','line_number':97,'multiline':False]['text':' DebuggerEnvironment::class_ but isn't a real working Debugger.Environment.','line_number':98,'multiline':False]['text':' static ','line_number':139,'multiline':True]['text':' static ','line_number':154,'multiline':True]['text':' static ','line_number':387,'multiline':True]['text':' static ','line_number':395,'multiline':True]['text':' static ','line_number':414,'multiline':True]['text':' Don't bother switching compartments just to check env's type.','line_number':416,'multiline':False]['text':' Don't bother switching compartments just to get env's parent.','line_number':438,'multiline':False]['text':' Don't bother switching compartments just to get env's object.','line_number':452,'multiline':False]['text':' static ','line_number':510,'multiline':True]['text':' static ','line_number':542,'multiline':True]['text':' This can trigger resolve hooks.','line_number':558,'multiline':False]['text':' static ','line_number':579,'multiline':True]['text':' This can trigger getters.','line_number':594,'multiline':False]['text':' For DebugEnvironmentProxys, we get sentinel values for optimized out','line_number':606,'multiline':False]['text':' slots and arguments instead of throwing (the default behavior).','line_number':607,'multiline':False]['text':'','line_number':608,'multiline':False]['text':' See wrapDebuggeeValue for how the sentinel values are wrapped.','line_number':609,'multiline':False]['text':' When we've faked up scope chain objects for optimized-out scopes,','line_number':623,'multiline':False]['text':' declarative environments may contain internal JSFunction objects, which','line_number':624,'multiline':False]['text':' we shouldn't expose to the user.','line_number':625,'multiline':False]['text':' static ','line_number':636,'multiline':True]['text':' This can trigger setters.','line_number':658,'multiline':False]['text':' Make sure the environment actually has the specified binding.','line_number':661,'multiline':False]['text':' Just set the property.','line_number':672,'multiline':False]