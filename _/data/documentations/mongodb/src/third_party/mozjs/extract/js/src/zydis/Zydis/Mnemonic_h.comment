['text':'**************************************************************************************************

  Zyan Disassembler Library (Zydis)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]['text':'*
 * @file
 * @brief   Mnemonic constant definitions and helper functions.
 ','line_number':27,'multiline':True]['text':' ============================================================================================== ','line_number':42,'multiline':True]['text':' Enums and types                                                                                ','line_number':43,'multiline':True]['text':' ============================================================================================== ','line_number':44,'multiline':True]['text':' ============================================================================================== ','line_number':48,'multiline':True]['text':' Exported functions                                                                             ','line_number':49,'multiline':True]['text':' ============================================================================================== ','line_number':50,'multiline':True]['text':'*
 * @addtogroup mnemonic Mnemonic
 * @brief Functions for retrieving mnemonic names.
 * @{
 ','line_number':52,'multiline':True]['text':'*
 * @brief   Returns the specified instruction mnemonic string.
 *
 * @param   mnemonic    The mnemonic.
 *
 * @return  The instruction mnemonic string or `ZYAN_NULL`, if an invalid mnemonic was passed.
 ','line_number':58,'multiline':True]['text':'*
 * @brief   Returns the specified instruction mnemonic as `ZydisShortString`.
 *
 * @param   mnemonic    The mnemonic.
 *
 * @return  The instruction mnemonic string or `ZYAN_NULL`, if an invalid mnemonic was passed.
 *
 * The `buffer` of the returned struct is guaranteed to be zero-terminated in this special case.
 ','line_number':67,'multiline':True]['text':'*
 * @}
 ','line_number':78,'multiline':True]['text':' ============================================================================================== ','line_number':82,'multiline':True]['text':' ZYDIS_MNEMONIC_H ','line_number':88,'multiline':True]