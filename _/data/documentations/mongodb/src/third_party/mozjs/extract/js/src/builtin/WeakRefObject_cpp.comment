['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::GetErrorMessage, JSMSG_*','line_number':13,'multiline':False]['text':' static ','line_number':23,'multiline':True]['text':' https://tc39.es/proposal-weakrefs/#sec-weak-ref-constructor','line_number':27,'multiline':False]['text':' The WeakRef constructor is not intended to be called as a function and will','line_number':28,'multiline':False]['text':' throw an exception when called in that manner.','line_number':29,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-weak-ref-target','line_number':34,'multiline':False]['text':' 1. If NewTarget is undefined, throw a TypeError exception.','line_number':35,'multiline':False]['text':' 2. If Type(target) is not Object, throw a TypeError exception.','line_number':36,'multiline':False]['text':' 3. Let weakRef be ? OrdinaryCreateFromConstructor(NewTarget,','line_number':42,'multiline':False]['text':'    "%WeakRefPrototype%", « [[Target]] »).','line_number':43,'multiline':False]['text':' If the target is a DOM wrapper, preserve it.','line_number':62,'multiline':False]['text':' Wrap the weakRef into the target's compartment.','line_number':67,'multiline':False]['text':' 4. Perfom ! KeepDuringJob(target).','line_number':79,'multiline':False]['text':' Add an entry to the per-zone maps from target JS object to a list of weak','line_number':85,'multiline':False]['text':' ref objects.','line_number':86,'multiline':False]['text':' 5. Set weakRef.[[Target]] to target.','line_number':93,'multiline':False]['text':' 6. Return weakRef.','line_number':96,'multiline':False]['text':' static ','line_number':101,'multiline':True]['text':' static ','line_number':112,'multiline':True]['text':' static ','line_number':125,'multiline':True]['text':' The target is cleared when the target's zone is swept and that always','line_number':127,'multiline':False]['text':' happens before this object is finalized because of the CCW from the target','line_number':128,'multiline':False]['text':' zone to this object. If the CCW is nuked, the target is cleared in','line_number':129,'multiline':False]['text':' NotifyGCNukeWrapper().','line_number':130,'multiline':False]['text':' addProperty','line_number':135,'multiline':False]['text':' delProperty','line_number':136,'multiline':False]['text':' enumerate','line_number':137,'multiline':False]['text':' newEnumerate','line_number':138,'multiline':False]['text':' resolve','line_number':139,'multiline':False]['text':' mayResolve','line_number':140,'multiline':False]['text':' finalize','line_number':141,'multiline':False]['text':' call','line_number':142,'multiline':False]['text':' hasInstance','line_number':143,'multiline':False]['text':' construct','line_number':144,'multiline':False]['text':' trace','line_number':145,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-weak-ref.prototype','line_number':165,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-properties-of-the-weak-ref-prototype-object','line_number':166,'multiline':False]['text':' static ','line_number':176,'multiline':True]['text':' https://tc39.es/proposal-weakrefs/#sec-weak-ref.prototype.deref','line_number':180,'multiline':False]['text':' 1. Let weakRef be the this value.','line_number':181,'multiline':False]['text':' 2. If Type(weakRef) is not Object, throw a TypeError exception.','line_number':182,'multiline':False]['text':' 3. If weakRef does not have a [[Target]] internal slot, throw a TypeError','line_number':183,'multiline':False]['text':'    exception.','line_number':184,'multiline':False]['text':' We need to perform a read barrier, which may clear the target.','line_number':196,'multiline':False]['text':' 4. Let target be the value of weakRef.[[Target]].','line_number':199,'multiline':False]['text':' 5. If target is not empty,','line_number':200,'multiline':False]['text':'    a. Perform ! KeepDuringJob(target).','line_number':201,'multiline':False]['text':'    b. Return target.','line_number':202,'multiline':False]['text':' 6. Return undefined.','line_number':203,'multiline':False]['text':' Target should be wrapped into the current realm before returning it.','line_number':214,'multiline':False]['text':' static ','line_number':226,'multiline':True]['text':' We preserved the target when the WeakRef was created. If it has since','line_number':234,'multiline':False]['text':' been released then the DOM object it wraps has been collected, so clear','line_number':235,'multiline':False]['text':' the target.','line_number':236,'multiline':False]['text':' namespace gc','line_number':293,'multiline':False]['text':' If target is dying, clear the target field of all weakRefs, and remove','line_number':298,'multiline':False]['text':' the entry from the map.','line_number':299,'multiline':False]['text':' Update the target field after compacting.','line_number':310,'multiline':False]['text':' Take store buffer lock while the Enum's destructor is called as this can','line_number':315,'multiline':False]['text':' rehash/resize the table and access the store buffer.','line_number':316,'multiline':False]['text':' Like GCVector::sweep, but this method will also update the target in every','line_number':321,'multiline':False]['text':' weakRef in this GCVector.','line_number':322,'multiline':False]['text':' namespace js','line_number':350,'multiline':False]