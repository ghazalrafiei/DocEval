['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Jump around the then clause, to the beginning of the else clause.','line_number':28,'multiline':False]['text':' Jump around the else clause, to the end of the entire branch.','line_number':31,'multiline':False]['text':' The stack depth before emitting the then block.','line_number':34,'multiline':False]['text':' Used for restoring stack depth before emitting the else block.','line_number':35,'multiline':False]['text':' Also used for assertion to make sure then and else blocks pushed the','line_number':36,'multiline':False]['text':' same number of values.','line_number':37,'multiline':False]['text':' Whether the then-clause, the else-clause, or else-if condition may','line_number':42,'multiline':False]['text':' contain declaration or access to lexical variables, which means they','line_number':43,'multiline':False]['text':' should have their own TDZCheckCache.  Basically TDZCheckCache should be','line_number':44,'multiline':False]['text':' created for each basic block, which then-clause, else-clause, and','line_number':45,'multiline':False]['text':' else-if condition are, but for internally used branches which are','line_number':46,'multiline':False]['text':' known not to touch lexical variables we can skip creating TDZCheckCache','line_number':47,'multiline':False]['text':' for them.','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':' See the comment for TDZCheckCache class for more details.','line_number':50,'multiline':False]['text':' For syntactic branches (if, if-else, and conditional expression),','line_number':52,'multiline':False]['text':' which basically may contain declaration or accesses to lexical','line_number':53,'multiline':False]['text':' variables inside then-clause, else-clause, and else-if condition.','line_number':54,'multiline':False]['text':' For internally used branches which don't touch lexical variables','line_number':57,'multiline':False]['text':' inside then-clause, else-clause, nor else-if condition.','line_number':58,'multiline':False]['text':' The number of values pushed in the then and else blocks.','line_number':66,'multiline':False]['text':' Returns the number of values pushed onto the value stack inside','line_number':81,'multiline':False]['text':' `then_block` and `else_block`.','line_number':82,'multiline':False]['text':' Can be used in assertion after emitting if-then-else.','line_number':83,'multiline':False]['text':' Returns the number of values popped onto the value stack inside','line_number':86,'multiline':False]['text':' `then_block` and `else_block`.','line_number':87,'multiline':False]['text':' Can be used in assertion after emitting if-then-else.','line_number':88,'multiline':False]['text':' Class for emitting bytecode for blocks like if-then-else.','line_number':93,'multiline':False]['text':'','line_number':94,'multiline':False]['text':' This class can be used to emit single if-then-else block, or cascading','line_number':95,'multiline':False]['text':' else-if blocks.','line_number':96,'multiline':False]['text':'','line_number':97,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':98,'multiline':False]['text':'','line_number':99,'multiline':False]['text':'   `if (cond) then_block`','line_number':100,'multiline':False]['text':'     IfEmitter ifThen(this);','line_number':101,'multiline':False]['text':'     ifThen.emitIf(Some(offset_of_if));','line_number':102,'multiline':False]['text':'     emit(cond);','line_number':103,'multiline':False]['text':'     ifThen.emitThen();','line_number':104,'multiline':False]['text':'     emit(then_block);','line_number':105,'multiline':False]['text':'     ifThen.emitEnd();','line_number':106,'multiline':False]['text':'','line_number':107,'multiline':False]['text':'   `if (!cond) then_block`','line_number':108,'multiline':False]['text':'     IfEmitter ifThen(this);','line_number':109,'multiline':False]['text':'     ifThen.emitIf(Some(offset_of_if));','line_number':110,'multiline':False]['text':'     emit(cond);','line_number':111,'multiline':False]['text':'     ifThen.emitThen(IfEmitter::ConditionKind::Negative);','line_number':112,'multiline':False]['text':'     emit(then_block);','line_number':113,'multiline':False]['text':'     ifThen.emitEnd();','line_number':114,'multiline':False]['text':'','line_number':115,'multiline':False]['text':'   `if (cond) then_block else else_block`','line_number':116,'multiline':False]['text':'     IfEmitter ifThenElse(this);','line_number':117,'multiline':False]['text':'     ifThen.emitIf(Some(offset_of_if));','line_number':118,'multiline':False]['text':'     emit(cond);','line_number':119,'multiline':False]['text':'     ifThenElse.emitThenElse();','line_number':120,'multiline':False]['text':'     emit(then_block);','line_number':121,'multiline':False]['text':'     ifThenElse.emitElse();','line_number':122,'multiline':False]['text':'     emit(else_block);','line_number':123,'multiline':False]['text':'     ifThenElse.emitEnd();','line_number':124,'multiline':False]['text':'','line_number':125,'multiline':False]['text':'   `if (c1) b1 else if (c2) b2 else if (c3) b3 else b4`','line_number':126,'multiline':False]['text':'     IfEmitter ifThenElse(this);','line_number':127,'multiline':False]['text':'     ifThen.emitIf(Some(offset_of_if));','line_number':128,'multiline':False]['text':'     emit(c1);','line_number':129,'multiline':False]['text':'     ifThenElse.emitThenElse();','line_number':130,'multiline':False]['text':'     emit(b1);','line_number':131,'multiline':False]['text':'     ifThenElse.emitElseIf(Some(offset_of_if));','line_number':132,'multiline':False]['text':'     emit(c2);','line_number':133,'multiline':False]['text':'     ifThenElse.emitThenElse();','line_number':134,'multiline':False]['text':'     emit(b2);','line_number':135,'multiline':False]['text':'     ifThenElse.emitElseIf(Some(offset_of_if));','line_number':136,'multiline':False]['text':'     emit(c3);','line_number':137,'multiline':False]['text':'     ifThenElse.emitThenElse();','line_number':138,'multiline':False]['text':'     emit(b3);','line_number':139,'multiline':False]['text':'     ifThenElse.emitElse();','line_number':140,'multiline':False]['text':'     emit(b4);','line_number':141,'multiline':False]['text':'     ifThenElse.emitEnd();','line_number':142,'multiline':False]['text':'','line_number':143,'multiline':False]['text':' The state of this emitter.','line_number':150,'multiline':False]['text':'','line_number':151,'multiline':False]['text':' +-------+ emitIf +----+','line_number':152,'multiline':False]['text':' | Start |------->| If |-+','line_number':153,'multiline':False]['text':' +-------+        +----+ |','line_number':154,'multiline':False]['text':'                         |','line_number':155,'multiline':False]['text':'    +--------------------+','line_number':156,'multiline':False]['text':'    |','line_number':157,'multiline':False]['text':'    v emitThen +------+                               emitEnd +-----+','line_number':158,'multiline':False]['text':' +->+--------->| Then |---------------------------->+-------->| End |','line_number':159,'multiline':False]['text':' ^  |          +------+                             ^         +-----+','line_number':160,'multiline':False]['text':' |  |                                               |','line_number':161,'multiline':False]['text':' |  |                                               |','line_number':162,'multiline':False]['text':' |  |                                               |','line_number':163,'multiline':False]['text':' |  | emitThenElse +----------+   emitElse +------+ |','line_number':164,'multiline':False]['text':' |  +------------->| ThenElse |-+--------->| Else |-+','line_number':165,'multiline':False]['text':' |                 +----------+ |          +------+','line_number':166,'multiline':False]['text':' |                              |','line_number':167,'multiline':False]['text':' |                              | emitElseIf +--------+','line_number':168,'multiline':False]['text':' |                              +----------->| ElseIf |-+','line_number':169,'multiline':False]['text':' |                                           +--------+ |','line_number':170,'multiline':False]['text':' |                                                      |','line_number':171,'multiline':False]['text':' +------------------------------------------------------+','line_number':172,'multiline':False]['text':' The initial state.','line_number':174,'multiline':False]['text':' After calling emitIf.','line_number':177,'multiline':False]['text':' After calling emitThen.','line_number':180,'multiline':False]['text':' After calling emitThenElse.','line_number':183,'multiline':False]['text':' After calling emitElse.','line_number':186,'multiline':False]['text':' After calling emitElseIf.','line_number':189,'multiline':False]['text':' After calling emitEnd.','line_number':192,'multiline':False]['text':' For InternalIfEmitter.','line_number':199,'multiline':False]['text':' `ifPos` is the offset in the source code for the character below:','line_number':205,'multiline':False]['text':'','line_number':206,'multiline':False]['text':'   if ( cond ) { ... } else if ( cond2 ) { ... }','line_number':207,'multiline':False]['text':'   ^                        ^','line_number':208,'multiline':False]['text':'   |                        |','line_number':209,'multiline':False]['text':'   |                        ifPos for emitElseIf','line_number':210,'multiline':False]['text':'   |','line_number':211,'multiline':False]['text':'   ifPos for emitIf','line_number':212,'multiline':False]['text':'','line_number':213,'multiline':False]['text':' Can be Nothing() if not available.','line_number':214,'multiline':False]['text':' Class for emitting bytecode for blocks like if-then-else which doesn't touch','line_number':228,'multiline':False]['text':' lexical variables.','line_number':229,'multiline':False]['text':'','line_number':230,'multiline':False]['text':' See the comments above NoLexicalAccessInBranch for more details when to use','line_number':231,'multiline':False]['text':' this instead of IfEmitter.','line_number':232,'multiline':False]['text':' Compared to IfEmitter, this class doesn't have emitIf method, given that','line_number':233,'multiline':False]['text':' it doesn't have syntactic `if`, and also the `cond` value can be already','line_number':234,'multiline':False]['text':' on the stack.','line_number':235,'multiline':False]['text':'','line_number':236,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':237,'multiline':False]['text':'','line_number':238,'multiline':False]['text':'   `if (cond) then_block else else_block` (effectively)','line_number':239,'multiline':False]['text':'     emit(cond);','line_number':240,'multiline':False]['text':'     InternalIfEmitter ifThenElse(this);','line_number':241,'multiline':False]['text':'     ifThenElse.emitThenElse();','line_number':242,'multiline':False]['text':'     emit(then_block);','line_number':243,'multiline':False]['text':'     ifThenElse.emitElse();','line_number':244,'multiline':False]['text':'     emit(else_block);','line_number':245,'multiline':False]['text':'     ifThenElse.emitEnd();','line_number':246,'multiline':False]['text':'','line_number':247,'multiline':False]['text':' Class for emitting bytecode for conditional expression.','line_number':253,'multiline':False]['text':'','line_number':254,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':255,'multiline':False]['text':'','line_number':256,'multiline':False]['text':'   `cond ? then_expr : else_expr`','line_number':257,'multiline':False]['text':'     CondEmitter condElse(this);','line_number':258,'multiline':False]['text':'     condElse.emitCond();','line_number':259,'multiline':False]['text':'     emit(cond);','line_number':260,'multiline':False]['text':'     condElse.emitThenElse();','line_number':261,'multiline':False]['text':'     emit(then_expr);','line_number':262,'multiline':False]['text':'     condElse.emitElse();','line_number':263,'multiline':False]['text':'     emit(else_expr);','line_number':264,'multiline':False]['text':'     condElse.emitEnd();','line_number':265,'multiline':False]['text':'','line_number':266,'multiline':False]['text':' The state of this emitter.','line_number':269,'multiline':False]['text':'','line_number':270,'multiline':False]['text':' +-------+ emitCond +------+ emitThenElse +----------+','line_number':271,'multiline':False]['text':' | Start |--------->| Cond |------------->| ThenElse |-+','line_number':272,'multiline':False]['text':' +-------+          +------+              +----------+ |','line_number':273,'multiline':False]['text':'                                                       |','line_number':274,'multiline':False]['text':'                                     +-----------------+','line_number':275,'multiline':False]['text':'                                     |','line_number':276,'multiline':False]['text':'                                     | emitElse +------+ emitEnd +-----+','line_number':277,'multiline':False]['text':'                                     +--------->| Else |-------->| End |','line_number':278,'multiline':False]['text':'                                                +------+         +-----+','line_number':279,'multiline':False]['text':' The initial state.','line_number':281,'multiline':False]['text':' After calling emitCond.','line_number':284,'multiline':False]['text':' After calling emitThenElse.','line_number':287,'multiline':False]['text':' After calling emitElse.','line_number':290,'multiline':False]['text':' After calling emitEnd.','line_number':293,'multiline':False]['text':' namespace frontend ','line_number':309,'multiline':True]['text':' namespace js ','line_number':310,'multiline':True]['text':' frontend_IfEmitter_h ','line_number':312,'multiline':True]