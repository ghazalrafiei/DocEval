['text':' Copyright 2016 the V8 project authors. All rights reserved.','line_number':1,'multiline':False]['text':' Use of this source code is governed by a BSD-style license that can be','line_number':2,'multiline':False]['text':' found in the LICENSE file.','line_number':3,'multiline':False]['text':' A simple closed interval.','line_number':45,'multiline':False]['text':' '- 1' for branchless size().','line_number':48,'multiline':False]['text':' Represents code points (with values up to 0x10FFFF) in the range from from_','line_number':74,'multiline':False]['text':' to to_, both ends are inclusive.','line_number':75,'multiline':False]['text':' For compatibility with the CHECK_OK macro','line_number':79,'multiline':False]['text':' NOLINT','line_number':80,'multiline':False]['text':' Add class escapes. Add case equivalent closure for \w and \W if necessary.','line_number':84,'multiline':False]['text':' Whether a range list is in canonical form: Ranges ordered by from value,','line_number':118,'multiline':False]['text':' and ranges non-overlapping and non-adjacent.','line_number':119,'multiline':False]['text':' Convert range list to canonical form. The characters covered by the ranges','line_number':121,'multiline':False]['text':' will still be the same, but no character is in more than one range, and','line_number':122,'multiline':False]['text':' adjacent ranges are merged. The resulting list may be shorter than the','line_number':123,'multiline':False]['text':' original, but cannot be longer.','line_number':124,'multiline':False]['text':' Negate the contents of a character range in canonical form.','line_number':126,'multiline':False]['text':' If non-zero, the value represents a standard set (e.g., all whitespace','line_number':155,'multiline':False]['text':' characters) without having to expand the ranges.','line_number':156,'multiline':False]['text':' Returns the interval of registers used for captures within this','line_number':207,'multiline':False]['text':' expression.','line_number':208,'multiline':False]['text':' NEGATED: The character class is negated and should match everything but','line_number':297,'multiline':False]['text':'     the specified ranges.','line_number':298,'multiline':False]['text':' CONTAINS_SPLIT_SURROGATE: The character class contains part of a split','line_number':299,'multiline':False]['text':'     surrogate and should not be unicode-desugared (crbug.com/641091).','line_number':300,'multiline':False]['text':' Convert the empty set of ranges to the negated Everything() range.','line_number':313,'multiline':False]['text':' The character class may match two code units for unicode regexps.','line_number':329,'multiline':False]['text':' TODO(yangguo): we should split this class for usage in TextElement, and','line_number':330,'multiline':False]['text':'                make max_match() dependent on the character class content.','line_number':331,'multiline':False]['text':' TODO(lrn): Remove need for complex version if is_standard that','line_number':335,'multiline':False]['text':' recognizes a mangled standard set and just do { return set_.is_special(); }','line_number':336,'multiline':False]['text':' Returns a value representing the standard character set if is_standard()','line_number':338,'multiline':False]['text':' returns true.','line_number':339,'multiline':False]['text':' Currently used values are:','line_number':340,'multiline':False]['text':' s : unicode whitespace','line_number':341,'multiline':False]['text':' S : unicode non-whitespace','line_number':342,'multiline':False]['text':' w : ASCII word character (digit, letter, underscore)','line_number':343,'multiline':False]['text':' W : non-ASCII word character','line_number':344,'multiline':False]['text':' d : ASCII digit','line_number':345,'multiline':False]['text':' D : non-ASCII digit','line_number':346,'multiline':False]['text':' . : non-newline','line_number':347,'multiline':False]['text':' * : All characters, for advancing unanchored regexp','line_number':348,'multiline':False]['text':' The back reference may be recursive, e.g. /(\2)(\1)/. To avoid infinite','line_number':584,'multiline':False]['text':' recursion, we give up. Ignorance is bliss.','line_number':585,'multiline':False]['text':' namespace internal','line_number':611,'multiline':False]['text':' namespace v8','line_number':612,'multiline':False]['text':' V8_REGEXP_REGEXP_AST_H_','line_number':614,'multiline':False]