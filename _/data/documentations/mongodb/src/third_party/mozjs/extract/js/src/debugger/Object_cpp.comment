['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' for Maybe, Nothing, Some','line_number':9,'multiline':False]['text':' for Range','line_number':10,'multiline':False]['text':' for Result','line_number':11,'multiline':False]['text':' for Vector','line_number':12,'multiline':False]['text':' for size_t, strlen','line_number':15,'multiline':False]['text':' for remove_reference<>::type','line_number':16,'multiline':False]['text':' for move','line_number':17,'multiline':False]['text':' for CallArgs, RootedObject, Rooted','line_number':19,'multiline':False]['text':' for NewDenseCopiedArray','line_number':21,'multiline':False]['text':' for PromiseReactionRecordBuilder','line_number':22,'multiline':False]['text':' for Completion, Debugger','line_number':23,'multiline':False]['text':' for DebuggerFrame','line_number':25,'multiline':False]['text':' for LeaveDebuggeeNoExecute','line_number':26,'multiline':False]['text':' for DebuggerScript','line_number':27,'multiline':False]['text':' for DebuggerSource','line_number':28,'multiline':False]['text':' for ImmutablePropertyNamePtr','line_number':29,'multiline':False]['text':' for RootedDebuggerObject','line_number':30,'multiline':False]['text':' for TraceManuallyBarrieredCrossCompartmentEdge','line_number':31,'multiline':False]['text':'  for Compile','line_number':32,'multiline':False]['text':' for ToObject','line_number':33,'multiline':False]['text':' for GetErrorMessage, JSMSG_*','line_number':34,'multiline':False]['text':' for IsWindow, IsWindowProxy, ToWindowIfWindowProxy','line_number':35,'multiline':False]['text':' for IsInsideNursery','line_number':36,'multiline':False]['text':' for PromiseState','line_number':37,'multiline':False]['text':' for PropertyDescriptor','line_number':38,'multiline':False]['text':' for SourceText','line_number':39,'multiline':False]['text':' for AutoStableStringChars','line_number':40,'multiline':False]['text':' for JS::StringHasLatin1Chars','line_number':41,'multiline':False]['text':' for ScriptedProxyHandler','line_number':42,'multiline':False]['text':' for ARGS_LENGTH_MAX','line_number':43,'multiline':False]['text':' for ArrayObject','line_number':44,'multiline':False]['text':' for AsyncGeneratorObject','line_number':45,'multiline':False]['text':' for AsyncFunctionGeneratorObject','line_number':46,'multiline':False]['text':' for JSDVG_SEARCH_STACK','line_number':47,'multiline':False]['text':' for Compartment','line_number':48,'multiline':False]['text':' for GetDebugEnvironmentForFunction','line_number':49,'multiline':False]['text':' for JSObject::is, ErrorObject','line_number':50,'multiline':False]['text':' for AbstractGeneratorObject','line_number':51,'multiline':False]['text':' for JSObject::is, GlobalObject','line_number':52,'multiline':False]['text':' for Call','line_number':53,'multiline':False]['text':' for Atomize','line_number':54,'multiline':False]['text':' for JSContext, ReportValueError','line_number':55,'multiline':False]['text':' for JSFunction','line_number':56,'multiline':False]['text':' for GenericObject, NewObjectKind','line_number':57,'multiline':False]['text':' for JSScript','line_number':58,'multiline':False]['text':' for NativeObject, JSObject::is','line_number':59,'multiline':False]['text':' for DefineProperty','line_number':60,'multiline':False]['text':' for js::PlainObject','line_number':61,'multiline':False]['text':' for js::PromiseObject','line_number':62,'multiline':False]['text':' for AutoRealm, ErrorCopier, Realm','line_number':63,'multiline':False]['text':' for JSAtomState','line_number':64,'multiline':False]['text':' for SavedFrame','line_number':65,'multiline':False]['text':' for PositionalFormalParameterIter','line_number':66,'multiline':False]['text':' for GetClonedSelfHostedFunctionName','line_number':67,'multiline':False]['text':' for Shape','line_number':68,'multiline':False]['text':' for InvokeArgs','line_number':69,'multiline':False]['text':' for JSAtom, PropertyName','line_number':70,'multiline':False]['text':' for js_apply_str','line_number':71,'multiline':False]['text':' for JSObject::is, WrapperObject','line_number':72,'multiline':False]['text':' for Compartment::wrap','line_number':74,'multiline':False]['text':' for GetObjectClassName, InitClass, NewObjectWithGivenProtoAndKind, ToPropertyKey','line_number':75,'multiline':False]['text':' for NativeObject::global','line_number':76,'multiline':False]['text':' for DeleteProperty, GetProperty','line_number':77,'multiline':False]['text':' for AutoRealm::AutoRealm','line_number':78,'multiline':False]['text':' addProperty','line_number':88,'multiline':False]['text':' delProperty','line_number':89,'multiline':False]['text':' enumerate','line_number':90,'multiline':False]['text':' newEnumerate','line_number':91,'multiline':False]['text':' resolve','line_number':92,'multiline':False]['text':' mayResolve','line_number':93,'multiline':False]['text':' finalize','line_number':94,'multiline':False]['text':' call','line_number':95,'multiline':False]['text':' hasInstance','line_number':96,'multiline':False]['text':' construct','line_number':97,'multiline':False]['text':' trace','line_number':98,'multiline':False]['text':' There is a barrier on private pointers, so the Unbarriered marking','line_number':106,'multiline':False]['text':' is okay.','line_number':107,'multiline':False]['text':' Forbid Debugger.Object.prototype, which is of class DebuggerObject::class_','line_number':129,'multiline':False]['text':' but isn't a real working Debugger.Object.','line_number':130,'multiline':False]['text':' static ','line_number':141,'multiline':True]['text':' JSNative properties','line_number':158,'multiline':False]['text':' JSNative methods','line_number':195,'multiline':False]['text':' static ','line_number':232,'multiline':True]['text':' Only hand out debuggee scripts.','line_number':387,'multiline':False]['text':' Don't bother switching compartments just to check obj's type and get its','line_number':405,'multiline':False]['text':' env.','line_number':406,'multiline':False]['text':' Only hand out environments of debuggee functions.','line_number':418,'multiline':False]['text':' Returns the "name" field (see js/public/friend/ErrorNumbers.msg), which may','line_number':491,'multiline':False]['text':' be used as a unique identifier, for any error object with a JSErrorReport or','line_number':492,'multiline':False]['text':' undefined if the object has no JSErrorReport.','line_number':493,'multiline':False]['text':' We only care about promises, so CheckedUnwrapStatic is OK.','line_number':640,'multiline':False]['text':'
 * This does a non-strict delete, as a matter of API design. The case where the
 * property is non-configurable isn't necessarily exceptional here.
 ','line_number':909,'multiline':True]['text':' |referent| may be a cross-compartment wrapper and CCWs normally','line_number':1020,'multiline':False]['text':' shouldn't be used with AutoRealm, but here we use an arbitrary realm for','line_number':1021,'multiline':False]['text':' now because we don't really have another option.','line_number':1022,'multiline':False]['text':' Help the poor programmer by pointing out wrappers around globals...','line_number':1034,'multiline':False]['text':' ... and WindowProxies around Windows.','line_number':1040,'multiline':False]['text':' Lookup a binding on the referent's global scope and change it to undefined','line_number':1078,'multiline':False]['text':' if it is an uninitialized lexical, otherwise do nothing. The method's','line_number':1079,'multiline':False]['text':' JavaScript return value is true _only_ when an uninitialized lexical has been','line_number':1080,'multiline':False]['text':' altered, otherwise it is false.','line_number':1081,'multiline':False]['text':' Copy a narrow or wide string to a vector, appending a null terminator.','line_number':1172,'multiline':False]['text':' The introduction type must be a statically allocated string.','line_number':1277,'multiline':False]['text':' static ','line_number':1528,'multiline':True]['text':' static ','line_number':1548,'multiline':True]['text':' We only care about promises, so CheckedUnwrapStatic is OK.','line_number':1615,'multiline':False]['text':' We only check for error classes, so CheckedUnwrapStatic is OK.','line_number':1629,'multiline':False]['text':' static ','line_number':1639,'multiline':True]['text':' static ','line_number':1692,'multiline':True]['text':' static ','line_number':1705,'multiline':True]['text':' static ','line_number':1717,'multiline':True]['text':' static ','line_number':1739,'multiline':True]['text':' static ','line_number':1750,'multiline':True]['text':' static ','line_number':1765,'multiline':True]['text':' We only care about Error objects, so CheckedUnwrapStatic is OK. ','line_number':1770,'multiline':True]['text':' static ','line_number':1788,'multiline':True]['text':' static ','line_number':1811,'multiline':True]['text':' static ','line_number':1837,'multiline':True]['text':' static ','line_number':1856,'multiline':True]['text':' static ','line_number':1875,'multiline':True]['text':' static ','line_number':1884,'multiline':True]['text':' static ','line_number':1894,'multiline':True]['text':' static ','line_number':1906,'multiline':True]['text':' static ','line_number':1918,'multiline':True]['text':' static ','line_number':1930,'multiline':True]['text':' static ','line_number':1948,'multiline':True]['text':' static ','line_number':1996,'multiline':True]['text':' static ','line_number':2012,'multiline':True]['text':' Private *methods* create a Private Brand, a special private name','line_number':2025,'multiline':False]['text':' stamped onto the symbol, to indicate it is possible to execute private','line_number':2026,'multiline':False]['text':' methods from the class on this object. We don't want to return such','line_number':2027,'multiline':False]['text':' items here, so we check if we're dealing with a private property, e.g.','line_number':2028,'multiline':False]['text':' the Symbol description starts with a "#" character','line_number':2029,'multiline':False]['text':' static ','line_number':2048,'multiline':True]['text':' Bug: This can cause the debuggee to run!','line_number':2055,'multiline':False]['text':' Rewrap the debuggee values in desc for the debugger.','line_number':2072,'multiline':False]['text':' static ','line_number':2098,'multiline':True]['text':' static ','line_number':2110,'multiline':True]['text':' static ','line_number':2121,'multiline':True]['text':' static ','line_number':2132,'multiline':True]['text':' static ','line_number':2157,'multiline':True]['text':' static ','line_number':2196,'multiline':True]['text':' static ','line_number':2210,'multiline':True]['text':' Unwrap Debugger.Objects. This happens in the debugger's compartment since','line_number':2218,'multiline':False]['text':' that is where any exceptions must be reported.','line_number':2219,'multiline':False]['text':' Enter the debuggee compartment and rewrap all input value for that','line_number':2225,'multiline':False]['text':' compartment. (Rewrapping always takes place in the destination','line_number':2226,'multiline':False]['text':' compartment.)','line_number':2227,'multiline':False]['text':' static ','line_number':2243,'multiline':True]['text':' Unwrap Debugger.Objects. This happens in the debugger's compartment since','line_number':2251,'multiline':False]['text':' that is where any exceptions must be reported.','line_number':2252,'multiline':False]['text':' Enter the debuggee compartment and rewrap all input value for that','line_number':2260,'multiline':False]['text':' compartment. (Rewrapping always takes place in the destination','line_number':2261,'multiline':False]['text':' compartment.)','line_number':2262,'multiline':False]['text':' static ','line_number':2280,'multiline':True]['text':' Unwrap Debugger.Objects. This happens in the debugger's compartment since','line_number':2297,'multiline':False]['text':' that is where any exceptions must be reported.','line_number':2298,'multiline':False]['text':' Enter the debuggee compartment and rewrap all input value for that','line_number':2313,'multiline':False]['text':' compartment. (Rewrapping always takes place in the destination','line_number':2314,'multiline':False]['text':' compartment.)','line_number':2315,'multiline':False]['text':' Call the function.','line_number':2328,'multiline':False]['text':' static ','line_number':2351,'multiline':True]['text':' Shape::search can end up allocating a new BaseShape in Shape::cachify so','line_number':2366,'multiline':False]['text':' we need to be in the right compartment here.','line_number':2367,'multiline':False]['text':' static ','line_number':2394,'multiline':True]['text':' static ','line_number':2409,'multiline':True]['text':' Non-objects are already debuggee values.','line_number':2419,'multiline':False]['text':' Enter this Debugger.Object's referent's compartment, and wrap the','line_number':2421,'multiline':False]['text':' argument as appropriate for references from there.','line_number':2422,'multiline':False]['text':' Back in the debugger's compartment, produce a new Debugger.Object','line_number':2431,'multiline':False]['text':' instance referring to the wrapped argument.','line_number':2432,'multiline':False]['text':' static ','line_number':2456,'multiline':True]['text':' The logic below doesn't work with extended functions, so do not allow them.','line_number':2464,'multiline':False]['text':' allowExtended ','line_number':2466,'multiline':True]['text':' Back in the debugger's compartment, produce a new Debugger.Object','line_number':2490,'multiline':False]['text':' instance referring to the wrapped argument.','line_number':2491,'multiline':False]['text':' static ','line_number':2513,'multiline':True]['text':' static ','line_number':2541,'multiline':True]['text':' Wrapping should return the WindowProxy.','line_number':2551,'multiline':False]['text':' static ','line_number':2558,'multiline':True]['text':' Don't allow unwrapping to create a D.O whose referent is in an','line_number':2566,'multiline':False]['text':' invisible-to-Debugger compartment. (If our referent is a *wrapper* to such,','line_number':2567,'multiline':False]['text':' and the wrapper is in a visible compartment, that's fine.)','line_number':2568,'multiline':False]['text':' static ','line_number':2578,'multiline':True]['text':' Help the poor programmer by pointing out wrappers around globals...','line_number':2586,'multiline':False]['text':' ... and WindowProxies around Windows.','line_number':2592,'multiline':False]['text':' static ','line_number':2612,'multiline':True]['text':' We only care about promises, so CheckedUnwrapStatic is OK. ','line_number':2618,'multiline':True]['text':' static ','line_number':2636,'multiline':True]['text':' static ','line_number':2648,'multiline':True]