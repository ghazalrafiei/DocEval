['text':'**************************************************************************************************

  Zyan Core Library (Zycore-C)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]['text':'*
 * @file
 * @brief   Implements the bitset class.
 ','line_number':27,'multiline':True]['text':' ============================================================================================== ','line_number':45,'multiline':True]['text':' Enums and types                                                                                ','line_number':46,'multiline':True]['text':' ============================================================================================== ','line_number':47,'multiline':True]['text':'*
 * @brief   Defines the `ZyanVector` struct.
 *
 * All fields in this struct should be considered as "private". Any changes may lead to unexpected
 * behavior.
 ','line_number':49,'multiline':True]['text':'*
     * @brief   The bitset size.
     ','line_number':57,'multiline':True]['text':'*
     * @brief   The bitset data.
     ','line_number':61,'multiline':True]['text':'*
 * @brief   Defines the `ZyanBitsetByteOperation` function prototype.
 *
 * @param   v1  A pointer to the first byte. This value receives the result after performing the
 *              desired operation.
 * @param   v2  A pointer to the second byte.
 *
 * @return  A zyan status code.
 *
 * This function is used to perform byte-wise operations on two `ZyanBitset` instances.
 ','line_number':67,'multiline':True]['text':' ============================================================================================== ','line_number':80,'multiline':True]['text':' Exported functions                                                                             ','line_number':81,'multiline':True]['text':' ============================================================================================== ','line_number':82,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':84,'multiline':True]['text':' Constructor and destructor                                                                     ','line_number':85,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':86,'multiline':True]['text':'*
 * @brief   Initializes the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   count   The initial amount of bits.
 *
 * @return  A zyan status code.
 *
 * The space for the bitset is dynamically allocated by the default allocator using the default
 * growth factor of `2.0f` and the default shrink threshold of `0.5f`.
 ','line_number':90,'multiline':True]['text':' ZYAN_NO_LIBC','line_number':103,'multiline':False]['text':'*
 * @brief   Initializes the given `ZyanBitset` instance and sets a custom `allocator` and memory
 *          allocation/deallocation parameters.
 *
 * @param   bitset              A pointer to the `ZyanBitset` instance.
 * @param   count               The initial amount of bits.
 * @param   allocator           A pointer to a `ZyanAllocator` instance.
 * @param   growth_factor       The growth factor (from `1.0f` to `x.xf`).
 * @param   shrink_threshold    The shrink threshold (from `0.0f` to `1.0f`).
 *
 * @return  A zyan status code.
 *
 * A growth factor of `1.0f` disables overallocation and a shrink threshold of `0.0f` disables
 * dynamic shrinking.
 ','line_number':105,'multiline':True]['text':'*
 * @brief   Initializes the given `ZyanBitset` instance and configures it to use a custom user
 *          defined buffer with a fixed size.
 *
 * @param   bitset      A pointer to the `ZyanBitset` instance.
 * @param   count       The initial amount of bits.
 * @param   buffer      A pointer to the buffer that is used as storage for the bits.
 * @param   capacity    The maximum capacity (number of bytes) of the buffer.
 *
 * @return  A zyan status code.
 ','line_number':123,'multiline':True]['text':'*
 * @brief   Destroys the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':137,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':146,'multiline':True]['text':' Logical operations                                                                             ','line_number':147,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':148,'multiline':True]['text':'*
 * @brief   Performs a byte-wise `operation` for every byte in the given `ZyanBitset` instances.
 *
 * @param   destination A pointer to the `ZyanBitset` instance that is used as the first input and
 *                      as the destination.
 * @param   source      A pointer to the `ZyanBitset` instance that is used as the second input.
 * @param   operation   A pointer to the function that performs the desired operation.
 *
 * @return  A zyan status code.
 *
 * The `operation` callback is invoked once for every byte in the smallest of the `ZyanBitset`
 * instances.
 ','line_number':150,'multiline':True]['text':'*
 * @brief   Performs a logical `AND` operation on the given `ZyanBitset` instances.
 *
 * @param   destination A pointer to the `ZyanBitset` instance that is used as the first input and
 *                      as the destination.
 * @param   source      A pointer to the `ZyanBitset` instance that is used as the second input.
 *
 * @return  A zyan status code.
 *
 * If the destination bitmask contains more bits than the source one, the state of the remaining
 * bits will be undefined.
 ','line_number':166,'multiline':True]['text':'*
 * @brief   Performs a logical `OR`  operation on the given `ZyanBitset` instances.
 *
 * @param   destination A pointer to the `ZyanBitset` instance that is used as the first input and
 *                      as the destination.
 * @param   source      A pointer to the `ZyanBitset` instance that is used as the second input.
 *
 * @return  A zyan status code.
 *
 * If the destination bitmask contains more bits than the source one, the state of the remaining
 * bits will be undefined.
 ','line_number':180,'multiline':True]['text':'*
 * @brief   Performs a logical `XOR` operation on the given `ZyanBitset` instances.
 *
 * @param   destination A pointer to the `ZyanBitset` instance that is used as the first input and
 *                      as the destination.
 * @param   source      A pointer to the `ZyanBitset` instance that is used as the second input.
 *
 * @return  A zyan status code.
 *
 * If the destination bitmask contains more bits than the source one, the state of the remaining
 * bits will be undefined.
 ','line_number':194,'multiline':True]['text':'*
 * @brief   Flips all bits of the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':208,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':217,'multiline':True]['text':' Bit access                                                                                     ','line_number':218,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':219,'multiline':True]['text':'*
 * @brief   Sets the bit at `index` of the given `ZyanBitset` instance to `1`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   index   The bit index.
 *
 * @return  A zyan status code.
 ','line_number':221,'multiline':True]['text':'*
 * @brief   Sets the bit at `index` of the given `ZyanBitset` instance to `0`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   index   The bit index.
 *
 * @return  A zyan status code.
 ','line_number':231,'multiline':True]['text':'*
 * @brief   Sets the bit at `index` of the given `ZyanBitset` instance to the specified `value`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   index   The bit index.
 * @param   value   The new value.
 *
 * @return  A zyan status code.
 ','line_number':241,'multiline':True]['text':'*
 * @brief   Toggles the bit at `index` of the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   index   The bit index.
 *
 * @return  A zyan status code.
 ','line_number':252,'multiline':True]['text':'*
 * @brief   Returns the value of the bit at `index`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   index   The bit index.
 *
 * @return  `ZYAN_STATUS_TRUE`, if the bit is set or `ZYAN_STATUS_FALSE`, if not, Another zyan
 *          status code, if an error occured.
 ','line_number':262,'multiline':True]['text':'*
 * @brief   Returns the value of the most significant bit.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  `ZYAN_STATUS_TRUE`, if the bit is set or `ZYAN_STATUS_FALSE`, if not. Another zyan
 *          status code, if an error occured.
 ','line_number':273,'multiline':True]['text':'*
 * @brief   Returns the value of the least significant bit.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  `ZYAN_STATUS_TRUE`, if the bit is set or `ZYAN_STATUS_FALSE`, if not. Another zyan
 *          status code, if an error occured.
 ','line_number':283,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':293,'multiline':True]['text':'*
 * @brief   Sets all bits of the given `ZyanBitset` instance to `1`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':295,'multiline':True]['text':'*
 * @brief   Sets all bits of the given `ZyanBitset` instance to `0`.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':304,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':313,'multiline':True]['text':' Size management                                                                                ','line_number':314,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':315,'multiline':True]['text':'*
 * @brief   Adds a new bit at the end of the bitset.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   value   The value of the new bit.
 *
 * @return  A zyan status code.
 ','line_number':317,'multiline':True]['text':'*
 * @brief   Removes the last bit of the bitset.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':327,'multiline':True]['text':'*
 * @brief   Deletes all bits of the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':336,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':345,'multiline':True]['text':' Memory management                                                                              ','line_number':346,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':347,'multiline':True]['text':'*
 * @brief   Changes the capacity of the given `ZyanBitset` instance.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   count   The new capacity (number of bits).
 *
 * @return  A zyan status code.
 ','line_number':349,'multiline':True]['text':'*
 * @brief   Shrinks the capacity of the given bitset to match it's size.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  A zyan status code.
 ','line_number':359,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':368,'multiline':True]['text':' Information                                                                                    ','line_number':369,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':370,'multiline':True]['text':'*
 * @brief   Returns the current size of the bitset in bits.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   size    Receives the size of the bitset in bits.
 *
 * @return  A zyan status code.
 ','line_number':372,'multiline':True]['text':'*
 * @brief   Returns the current capacity of the bitset in bits.
 *
 * @param   bitset      A pointer to the `ZyanBitset` instance.
 * @param   capacity    Receives the size of the bitset in bits.
 *
 * @return  A zyan status code.
 ','line_number':382,'multiline':True]['text':'*
 * @brief   Returns the current size of the bitset in bytes.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   size    Receives the size of the bitset in bytes.
 *
 * @return  A zyan status code.
 ','line_number':392,'multiline':True]['text':'*
 * @brief   Returns the current capacity of the bitset in bytes.
 *
 * @param   bitset      A pointer to the `ZyanBitset` instance.
 * @param   capacity    Receives the size of the bitset in bytes.
 *
 * @return  A zyan status code.
 ','line_number':402,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':412,'multiline':True]['text':'*
 * @brief   Returns the amount of bits set in the given bitset.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 * @param   count   Receives the amount of bits set in the given bitset.
 *
 * @return  A zyan status code.
 ','line_number':414,'multiline':True]['text':'*
 * @brief   Checks, if all bits of the given bitset are set.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  `ZYAN_STATUS_TRUE`, if all bits are set, `ZYAN_STATUS_FALSE`, if not. Another zyan
 *          status code, if an error occured.
 ','line_number':424,'multiline':True]['text':'*
 * @brief   Checks, if at least one bit of the given bitset is set.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  `ZYAN_STATUS_TRUE`, if at least one bit is set, `ZYAN_STATUS_FALSE`, if not. Another
 *          zyan status code, if an error occured.
 ','line_number':434,'multiline':True]['text':'*
 * @brief   Checks, if none bits of the given bitset are set.
 *
 * @param   bitset  A pointer to the `ZyanBitset` instance.
 *
 * @return  `ZYAN_STATUS_TRUE`, if none bits are set, `ZYAN_STATUS_FALSE`, if not. Another zyan
 *          status code, if an error occured.
 ','line_number':444,'multiline':True]['text':'/* ---------------------------------------------------------------------------------------------- */','line_number':454,'multiline':False]['text':'','line_number':455,'multiline':False]['text':'/**','line_number':456,'multiline':False]['text':' * @brief   Returns a 32-bit unsigned integer representation of the data.','line_number':457,'multiline':False]['text':' * ','line_number':458,'multiline':False]['text':' * @param   bitset  A pointer to the `ZyanBitset` instance.','line_number':459,'multiline':False]['text':' * @param   value   Receives the 32-bit unsigned integer representation of the data.','line_number':460,'multiline':False]['text':' * ','line_number':461,'multiline':False]['text':' * @return  A zyan status code. ','line_number':462,'multiline':False]['text':' */','line_number':463,'multiline':False]['text':'ZYCORE_EXPORT ZyanStatus ZyanBitsetToU32(const ZyanBitset* bitset, ZyanU32* value);','line_number':464,'multiline':False]['text':'','line_number':465,'multiline':False]['text':'/**','line_number':466,'multiline':False]['text':' * @brief   Returns a 64-bit unsigned integer representation of the data.','line_number':467,'multiline':False]['text':' * ','line_number':468,'multiline':False]['text':' * @param   bitset  A pointer to the `ZyanBitset` instance.','line_number':469,'multiline':False]['text':' * @param   value   Receives the 64-bit unsigned integer representation of the data.','line_number':470,'multiline':False]['text':' * ','line_number':471,'multiline':False]['text':' * @return  A zyan status code. ','line_number':472,'multiline':False]['text':' */','line_number':473,'multiline':False]['text':'ZYCORE_EXPORT ZyanStatus ZyanBitsetToU64(const ZyanBitset* bitset, ZyanU64* value);','line_number':474,'multiline':False]['text':' ---------------------------------------------------------------------------------------------- ','line_number':476,'multiline':True]['text':' ============================================================================================== ','line_number':478,'multiline':True]['text':' ZYCORE_BITSET_H ','line_number':484,'multiline':True]