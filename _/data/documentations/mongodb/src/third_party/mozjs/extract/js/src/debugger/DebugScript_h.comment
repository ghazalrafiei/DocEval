['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' for offsetof','line_number':10,'multiline':False]['text':' for size_t','line_number':11,'multiline':False]['text':' for uint32_t','line_number':12,'multiline':False]['text':' DebugScript manages the internal debugger state for a JSScript, which may be','line_number':30,'multiline':False]['text':' associated with multiple Debuggers.','line_number':31,'multiline':False]['text':'
   * If this is a generator script, this is the number of Debugger.Frames
   * referring to calls to this generator, whether live or suspended. Closed
   * generators do not contribute a count.
   *
   * When greater than zero, this script should be compiled with debug
   * instrumentation to call Debugger::onResumeFrame at each resumption site, so
   * that Debugger can reconnect any extant Debugger.Frames with the new
   * concrete frame.
   ','line_number':36,'multiline':True]['text':'
   * The number of Debugger.Frame objects that refer to frames running this
   * script and that have onStep handlers. When nonzero, the interpreter and JIT
   * must arrange to call Debugger::onSingleStep before each bytecode, or at
   * least at some useful granularity.
   ','line_number':48,'multiline':True]['text':'
   * The size of the script as reported by BaseScript::length. This is the
   * length of the DebugScript::breakpoints array, below.
   ','line_number':56,'multiline':True]['text':'
   * Number of breakpoint sites at opcodes in the script. This is the number
   * of populated entries in DebugScript::breakpoints.
   ','line_number':62,'multiline':True]['text':'
   * Breakpoints set in our script. For speed and simplicity, this array is
   * parallel to script->code(): the JSBreakpointSite for the opcode at
   * script->code()[offset] is debugScript->breakpoints[offset].
   ','line_number':68,'multiline':True]['text':'
   * True if this DebugScript carries any useful information. If false, it
   * should be removed from its JSScript.
   ','line_number':75,'multiline':True]['text':'
   * Increment or decrement the single-step count. If the count is non-zero
   * then the script is in single-step mode.
   *
   * Only incrementing is fallible, as it could allocate a DebugScript.
   ','line_number':109,'multiline':True]['text':'
   * Increment or decrement the generator observer count. If the count is
   * non-zero then the script reports resumptions to the debugger.
   *
   * Only incrementing is fallible, as it could allocate a DebugScript.
   ','line_number':119,'multiline':True]['text':' A JSObject that wraps a DebugScript, so we can use it as the value in a','line_number':132,'multiline':False]['text':' WeakMap. This object owns the DebugScript and is responsible for deleting it.','line_number':133,'multiline':False]['text':' A weak map from JSScripts to DebugScriptObjects.','line_number':150,'multiline':False]['text':' namespace js ','line_number':157,'multiline':True]['text':' dbg_DebugScript_h ','line_number':159,'multiline':True]