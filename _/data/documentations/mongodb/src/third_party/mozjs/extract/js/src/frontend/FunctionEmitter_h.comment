['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' MOZ_STACK_CLASS','line_number':10,'multiline':False]['text':' uint16_t, uint32_t','line_number':12,'multiline':False]['text':' AsyncEmitter','line_number':14,'multiline':False]['text':' DefaultEmitter','line_number':15,'multiline':False]['text':' EmitterScope','line_number':16,'multiline':False]['text':' FunctionSyntaxKind','line_number':17,'multiline':False]['text':' TaggedParserAtomIndex','line_number':18,'multiline':False]['text':' FunctionBox, TopLevelFunction','line_number':19,'multiline':False]['text':' TDZCheckCache','line_number':20,'multiline':False]['text':' JS::Rooted, JS::Handle','line_number':21,'multiline':False]['text':' JSOp','line_number':22,'multiline':False]['text':' JSAtom','line_number':23,'multiline':False]['text':' JSFunction','line_number':24,'multiline':False]['text':' GCThingIndex','line_number':25,'multiline':False]['text':' Class for emitting function declaration, expression, or method etc.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' This class handles the enclosing script's part (function object creation,','line_number':34,'multiline':False]['text':' declaration, etc). The content of the function script is handled by','line_number':35,'multiline':False]['text':' FunctionScriptEmitter and FunctionParamsEmitter.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':'   `function f() {}`, non lazy script','line_number':40,'multiline':False]['text':'     FunctionEmitter fe(this, funbox_for_f, FunctionSyntaxKind::Statement,','line_number':41,'multiline':False]['text':'                        FunctionEmitter::IsHoisted::No);','line_number':42,'multiline':False]['text':'     fe.prepareForNonLazy();','line_number':43,'multiline':False]['text':'','line_number':44,'multiline':False]['text':'     // Emit script with FunctionScriptEmitter here.','line_number':45,'multiline':False]['text':'     ...','line_number':46,'multiline':False]['text':'','line_number':47,'multiline':False]['text':'     fe.emitNonLazyEnd();','line_number':48,'multiline':False]['text':'','line_number':49,'multiline':False]['text':'   `function f() {}`, lazy script','line_number':50,'multiline':False]['text':'     FunctionEmitter fe(this, funbox_for_f, FunctionSyntaxKind::Statement,','line_number':51,'multiline':False]['text':'                        FunctionEmitter::IsHoisted::No);','line_number':52,'multiline':False]['text':'     fe.emitLazy();','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':'   `function f() {}`, emitting hoisted function again','line_number':55,'multiline':False]['text':'     // See emitAgain comment for more details','line_number':56,'multiline':False]['text':'     FunctionEmitter fe(this, funbox_for_f, FunctionSyntaxKind::Statement,','line_number':57,'multiline':False]['text':'                        FunctionEmitter::IsHoisted::Yes);','line_number':58,'multiline':False]['text':'     fe.emitAgain();','line_number':59,'multiline':False]['text':'','line_number':60,'multiline':False]['text':'   `function f() { "use asm"; }`','line_number':61,'multiline':False]['text':'     FunctionEmitter fe(this, funbox_for_f, FunctionSyntaxKind::Statement,','line_number':62,'multiline':False]['text':'                        FunctionEmitter::IsHoisted::No);','line_number':63,'multiline':False]['text':'     fe.emitAsmJSModule();','line_number':64,'multiline':False]['text':'','line_number':65,'multiline':False]['text':' Function's explicit name.','line_number':75,'multiline':False]['text':' The state of this emitter.','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' +-------+','line_number':84,'multiline':False]['text':' | Start |-+','line_number':85,'multiline':False]['text':' +-------+ |','line_number':86,'multiline':False]['text':'           |','line_number':87,'multiline':False]['text':'   +-------+','line_number':88,'multiline':False]['text':'   |','line_number':89,'multiline':False]['text':'   | [non-lazy function]','line_number':90,'multiline':False]['text':'   |   prepareForNonLazy  +---------+ emitNonLazyEnd     +-----+','line_number':91,'multiline':False]['text':'   +--------------------->| NonLazy |---------------->+->| End |','line_number':92,'multiline':False]['text':'   |                      +---------+                 ^  +-----+','line_number':93,'multiline':False]['text':'   |                                                  |','line_number':94,'multiline':False]['text':'   | [lazy function]                                  |','line_number':95,'multiline':False]['text':'   |   emitLazy                                       |','line_number':96,'multiline':False]['text':'   +------------------------------------------------->+','line_number':97,'multiline':False]['text':'   |                                                  ^','line_number':98,'multiline':False]['text':'   | [emitting hoisted function again]                |','line_number':99,'multiline':False]['text':'   |   emitAgain                                      |','line_number':100,'multiline':False]['text':'   +------------------------------------------------->+','line_number':101,'multiline':False]['text':'   |                                                  ^','line_number':102,'multiline':False]['text':'   | [asm.js module]                                  |','line_number':103,'multiline':False]['text':'   |   emitAsmJSModule                                |','line_number':104,'multiline':False]['text':'   +--------------------------------------------------+','line_number':105,'multiline':False]['text':'','line_number':106,'multiline':False]['text':' The initial state.','line_number':108,'multiline':False]['text':' After calling prepareForNonLazy.','line_number':111,'multiline':False]['text':' After calling emitNonLazyEnd, emitLazy, emitAgain, or emitAsmJSModule.','line_number':114,'multiline':False]['text':' Emit the function declaration, expression, method etc.','line_number':134,'multiline':False]['text':' This leaves function object on the stack for expression etc,','line_number':135,'multiline':False]['text':' and doesn't for declaration.','line_number':136,'multiline':False]['text':' Helper methods used by emitFunction for each case.','line_number':139,'multiline':False]['text':' `index` is the object index of the function.','line_number':140,'multiline':False]['text':' Class for emitting function script.','line_number':147,'multiline':False]['text':' Parameters are handled by FunctionParamsEmitter.','line_number':148,'multiline':False]['text':'','line_number':149,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':150,'multiline':False]['text':'','line_number':151,'multiline':False]['text':'   `function f(a) { expr }`','line_number':152,'multiline':False]['text':'     FunctionScriptEmitter fse(this, funbox_for_f,','line_number':153,'multiline':False]['text':'                               Some(offset_of_opening_paren),','line_number':154,'multiline':False]['text':'                               Some(offset_of_closing_brace));','line_number':155,'multiline':False]['text':'     fse.prepareForParameters();','line_number':156,'multiline':False]['text':'','line_number':157,'multiline':False]['text':'     // Emit parameters with FunctionParamsEmitter here.','line_number':158,'multiline':False]['text':'     ...','line_number':159,'multiline':False]['text':'','line_number':160,'multiline':False]['text':'     fse.prepareForBody();','line_number':161,'multiline':False]['text':'     emit(expr);','line_number':162,'multiline':False]['text':'     fse.emitEnd();','line_number':163,'multiline':False]['text':'','line_number':164,'multiline':False]['text':'     // Do NameFunctions operation here if needed.','line_number':165,'multiline':False]['text':'','line_number':166,'multiline':False]['text':'     fse.intoStencil();','line_number':167,'multiline':False]['text':'','line_number':168,'multiline':False]['text':' Scope for the function name for a named lambda.','line_number':175,'multiline':False]['text':' None for anonymous function.','line_number':176,'multiline':False]['text':' Scope for function body.','line_number':179,'multiline':False]['text':' Scope for the extra body var.','line_number':182,'multiline':False]['text':' None if `funbox_->hasExtraBodyVarScope() == false`.','line_number':183,'multiline':False]['text':' try-catch block for async function parameter and body.','line_number':188,'multiline':False]['text':' See the comment for constructor.','line_number':191,'multiline':False]['text':' The state of this emitter.','line_number':196,'multiline':False]['text':'','line_number':197,'multiline':False]['text':' +-------+ prepareForParameters  +------------+','line_number':198,'multiline':False]['text':' | Start |---------------------->| Parameters |-+','line_number':199,'multiline':False]['text':' +-------+                       +------------+ |','line_number':200,'multiline':False]['text':'                                                |','line_number':201,'multiline':False]['text':'   +--------------------------------------------+','line_number':202,'multiline':False]['text':'   |','line_number':203,'multiline':False]['text':'   | prepareForBody  +------+ emitEndBody  +---------+','line_number':204,'multiline':False]['text':'   +---------------->| Body |------------->| EndBody |-+','line_number':205,'multiline':False]['text':'                     +------+              +---------+ |','line_number':206,'multiline':False]['text':'                                                       |','line_number':207,'multiline':False]['text':'     +-------------------------------------------------+','line_number':208,'multiline':False]['text':'     |','line_number':209,'multiline':False]['text':'     | intoStencil +-----+','line_number':210,'multiline':False]['text':'     +------------>| End |','line_number':211,'multiline':False]['text':'                   +-----+','line_number':212,'multiline':False]['text':' The initial state.','line_number':214,'multiline':False]['text':' After calling prepareForParameters.','line_number':217,'multiline':False]['text':' After calling prepareForBody.','line_number':220,'multiline':False]['text':' After calling emitEndBody.','line_number':223,'multiline':False]['text':' After calling intoStencil.','line_number':226,'multiline':False]['text':' Parameters are the offset in the source code for each character below:','line_number':233,'multiline':False]['text':'','line_number':234,'multiline':False]['text':'   function f(a, b, ...c) { ... }','line_number':235,'multiline':False]['text':'             ^                  ^','line_number':236,'multiline':False]['text':'             |                  |','line_number':237,'multiline':False]['text':'             paramStart         bodyEnd','line_number':238,'multiline':False]['text':'','line_number':239,'multiline':False]['text':' Can be Nothing() if not available.','line_number':240,'multiline':False]['text':' Generate the ScriptStencil using the bytecode emitter data.','line_number':253,'multiline':False]['text':' Class for emitting function parameters.','line_number':260,'multiline':False]['text':'','line_number':261,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':262,'multiline':False]['text':'','line_number':263,'multiline':False]['text':'   `function f(a, b=10, ...c) {}`','line_number':264,'multiline':False]['text':'     FunctionParamsEmitter fpe(this, funbox_for_f);','line_number':265,'multiline':False]['text':'','line_number':266,'multiline':False]['text':'     fpe.emitSimple(atom_of_a);','line_number':267,'multiline':False]['text':'','line_number':268,'multiline':False]['text':'     fpe.prepareForDefault();','line_number':269,'multiline':False]['text':'     emit(10);','line_number':270,'multiline':False]['text':'     fpe.emitDefaultEnd(atom_of_b);','line_number':271,'multiline':False]['text':'','line_number':272,'multiline':False]['text':'     fpe.emitRest(atom_of_c);','line_number':273,'multiline':False]['text':'','line_number':274,'multiline':False]['text':'   `function f([a], [b]=[1], ...[c]) {}`','line_number':275,'multiline':False]['text':'     FunctionParamsEmitter fpe(this, funbox_for_f);','line_number':276,'multiline':False]['text':'','line_number':277,'multiline':False]['text':'     fpe.prepareForDestructuring();','line_number':278,'multiline':False]['text':'     emit(destructuring_for_[a]);','line_number':279,'multiline':False]['text':'     fpe.emitDestructuringEnd();','line_number':280,'multiline':False]['text':'','line_number':281,'multiline':False]['text':'     fpe.prepareForDestructuringDefaultInitializer();','line_number':282,'multiline':False]['text':'     emit([1]);','line_number':283,'multiline':False]['text':'     fpe.prepareForDestructuringDefault();','line_number':284,'multiline':False]['text':'     emit(destructuring_for_[b]);','line_number':285,'multiline':False]['text':'     fpe.emitDestructuringDefaultEnd();','line_number':286,'multiline':False]['text':'','line_number':287,'multiline':False]['text':'     fpe.prepareForDestructuringRest();','line_number':288,'multiline':False]['text':'     emit(destructuring_for_[c]);','line_number':289,'multiline':False]['text':'     fpe.emitDestructuringRestEnd();','line_number':290,'multiline':False]['text':'','line_number':291,'multiline':False]['text':' The pointer to `FunctionScriptEmitter::functionEmitterScope_`,','line_number':298,'multiline':False]['text':' passed via `BytecodeEmitter::innermostEmitterScope()`.','line_number':299,'multiline':False]['text':' The slot for the current parameter.','line_number':302,'multiline':False]['text':' NOTE: after emitting rest parameter, this isn't incremented.','line_number':303,'multiline':False]['text':' DefaultEmitter for default parameter.','line_number':306,'multiline':False]['text':' The state of this emitter.','line_number':310,'multiline':False]['text':'','line_number':311,'multiline':False]['text':' +----------------------------------------------------------+','line_number':312,'multiline':False]['text':' |                                                          |','line_number':313,'multiline':False]['text':' |  +-------+                                               |','line_number':314,'multiline':False]['text':' +->| Start |-+                                             |','line_number':315,'multiline':False]['text':'    +-------+ |                                             |','line_number':316,'multiline':False]['text':'              |                                             |','line_number':317,'multiline':False]['text':' +------------+                                             |','line_number':318,'multiline':False]['text':' |                                                          |','line_number':319,'multiline':False]['text':' | [single binding, without default]                        |','line_number':320,'multiline':False]['text':' |   emitSimple                                             |','line_number':321,'multiline':False]['text':' +--------------------------------------------------------->+','line_number':322,'multiline':False]['text':' |                                                          ^','line_number':323,'multiline':False]['text':' | [single binding, with default]                           |','line_number':324,'multiline':False]['text':' |   prepareForDefault  +---------+ emitDefaultEnd          |','line_number':325,'multiline':False]['text':' +--------------------->| Default |------------------------>+','line_number':326,'multiline':False]['text':' |                      +---------+                         ^','line_number':327,'multiline':False]['text':' |                                                          |','line_number':328,'multiline':False]['text':' | [destructuring, without default]                         |','line_number':329,'multiline':False]['text':' |   prepareForDestructuring  +---------------+             |','line_number':330,'multiline':False]['text':' +--------------------------->| Destructuring |-+           |','line_number':331,'multiline':False]['text':' |                            +---------------+ |           |','line_number':332,'multiline':False]['text':' |                                              |           |','line_number':333,'multiline':False]['text':' |    +-----------------------------------------+           |','line_number':334,'multiline':False]['text':' |    |                                                     |','line_number':335,'multiline':False]['text':' |    | emitDestructuringEnd                                |','line_number':336,'multiline':False]['text':' |    +---------------------------------------------------->+','line_number':337,'multiline':False]['text':' |                                                          ^','line_number':338,'multiline':False]['text':' | [destructuring, with default]                            |','line_number':339,'multiline':False]['text':' |   prepareForDestructuringDefaultInitializer              |','line_number':340,'multiline':False]['text':' +---------------------------------------------+            |','line_number':341,'multiline':False]['text':' |                                             |            |','line_number':342,'multiline':False]['text':' |    +----------------------------------------+            |','line_number':343,'multiline':False]['text':' |    |                                                     |','line_number':344,'multiline':False]['text':' |    |  +---------------------------------+                |','line_number':345,'multiline':False]['text':' |    +->| DestructuringDefaultInitializer |-+              |','line_number':346,'multiline':False]['text':' |       +---------------------------------+ |              |','line_number':347,'multiline':False]['text':' |                                           |              |','line_number':348,'multiline':False]['text':' |      +------------------------------------+              |','line_number':349,'multiline':False]['text':' |      |                                                   |','line_number':350,'multiline':False]['text':' |      | prepareForDestructuringDefault                    |','line_number':351,'multiline':False]['text':' |      +-------------------------------+                   |','line_number':352,'multiline':False]['text':' |                                      |                   |','line_number':353,'multiline':False]['text':' |        +-----------------------------+                   |','line_number':354,'multiline':False]['text':' |        |                                                 |','line_number':355,'multiline':False]['text':' |        |  +----------------------+                       |','line_number':356,'multiline':False]['text':' |        +->| DestructuringDefault |-+                     |','line_number':357,'multiline':False]['text':' |           +----------------------+ |                     |','line_number':358,'multiline':False]['text':' |                                    |                     |','line_number':359,'multiline':False]['text':' |          +-------------------------+                     |','line_number':360,'multiline':False]['text':' |          |                                               |','line_number':361,'multiline':False]['text':' |          | emitDestructuringDefaultEnd                   |','line_number':362,'multiline':False]['text':' |          +---------------------------------------------->+','line_number':363,'multiline':False]['text':' |','line_number':364,'multiline':False]['text':' | [single binding rest]','line_number':365,'multiline':False]['text':' |   emitRest                                                  +-----+','line_number':366,'multiline':False]['text':' +--------------------------------------------------------->+->| End |','line_number':367,'multiline':False]['text':' |                                                          ^  +-----+','line_number':368,'multiline':False]['text':' | [destructuring rest]                                     |','line_number':369,'multiline':False]['text':' |   prepareForDestructuringRest   +-------------------+    |','line_number':370,'multiline':False]['text':' +-------------------------------->| DestructuringRest |-+  |','line_number':371,'multiline':False]['text':'                                   +-------------------+ |  |','line_number':372,'multiline':False]['text':'                                                         |  |','line_number':373,'multiline':False]['text':'    +----------------------------------------------------+  |','line_number':374,'multiline':False]['text':'    |                                                       |','line_number':375,'multiline':False]['text':'    | emitDestructuringRestEnd                              |','line_number':376,'multiline':False]['text':'    +-------------------------------------------------------+','line_number':377,'multiline':False]['text':'','line_number':378,'multiline':False]['text':' The initial state, or after emitting non-rest parameter.','line_number':380,'multiline':False]['text':' After calling prepareForDefault.','line_number':383,'multiline':False]['text':' After calling prepareForDestructuring.','line_number':386,'multiline':False]['text':' After calling prepareForDestructuringDefaultInitializer.','line_number':389,'multiline':False]['text':' After calling prepareForDestructuringDefault.','line_number':392,'multiline':False]['text':' After calling prepareForDestructuringRest.','line_number':395,'multiline':False]['text':' After calling emitRest or emitDestructuringRestEnd.','line_number':398,'multiline':False]['text':' paramName is used only when there's at least one expression in the','line_number':407,'multiline':False]['text':' paramerters (funbox_->hasParameterExprs == true).','line_number':408,'multiline':False]['text':' namespace frontend ','line_number':435,'multiline':True]['text':' namespace js ','line_number':436,'multiline':True]['text':' frontend_FunctionEmitter_h ','line_number':438,'multiline':True]