['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' For documentation, see jit/AtomicOperations.h, both the comment block at the
 * beginning and the #ifdef nest near the end.
 *
 * This is a common file for tier-3 platforms (including simulators for our
 * tier-1 platforms) that are not providing hardware-specific implementations of
 * the atomic operations.  Please keep it reasonably platform-independent by
 * adding #ifdefs at the beginning as much as possible, not throughout the file.
 *
 *
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !!!!                              NOTE                                 !!!!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 * The implementations in this file are NOT SAFE and cannot be safe even in
 * principle because they rely on C++ undefined behavior.  However, they are
 * frequently good enough for tier-3 platforms.
 ','line_number':7,'multiline':True]['text':' Explicitly exclude tier-1 platforms.','line_number':31,'multiline':False]['text':' 64-bit atomics are not required by the JS spec, and you can compile','line_number':44,'multiline':False]['text':' SpiderMonkey without them. 64-bit atomics are required for BigInt','line_number':45,'multiline':False]['text':' support.','line_number':46,'multiline':False]['text':'','line_number':47,'multiline':False]['text':' 64-bit lock-free atomics are required for WebAssembly, but gating in the','line_number':48,'multiline':False]['text':' WebAssembly subsystem ensures that no WebAssembly-supporting platforms need','line_number':49,'multiline':False]['text':' code in this file.','line_number':50,'multiline':False]['text':' On some x86 (32-bit) systems this will not work because the compiler does not','line_number':54,'multiline':False]['text':' open-code 64-bit atomics.  If so, try linking with -latomic.  If that doesn't','line_number':55,'multiline':False]['text':' work, you're mostly on your own.','line_number':56,'multiline':False]['text':' The default implementation tactic for gcc/clang is to use the newer __atomic','line_number':86,'multiline':False]['text':' intrinsics added for use in C++11 <atomic>.  Where that isn't available, we','line_number':87,'multiline':False]['text':' use GCC's older __sync functions instead.','line_number':88,'multiline':False]['text':'','line_number':89,'multiline':False]['text':' ATOMICS_IMPLEMENTED_WITH_SYNC_INTRINSICS is kept as a backward compatible','line_number':90,'multiline':False]['text':' option for older compilers: enable this to use GCC's old __sync functions','line_number':91,'multiline':False]['text':' instead of the newer __atomic functions.  This will be required for GCC 4.6.x','line_number':92,'multiline':False]['text':' and earlier, and probably for Clang 3.1, should we need to use those','line_number':93,'multiline':False]['text':' versions.  Firefox no longer supports compilers that old.','line_number':94,'multiline':False]['text':'#define ATOMICS_IMPLEMENTED_WITH_SYNC_INTRINSICS','line_number':96,'multiline':False]['text':' Sanity check.','line_number':98,'multiline':False]['text':' Try to avoid platform #ifdefs below this point.','line_number':104,'multiline':False]['text':' Nothing','line_number':107,'multiline':False]['text':' Nothing','line_number':112,'multiline':False]['text':' When compiling with Clang on 32-bit linux it will be necessary to link with','line_number':115,'multiline':False]['text':' -latomic to get the proper 64-bit intrinsics.','line_number':116,'multiline':False]['text':' namespace jit','line_number':170,'multiline':False]['text':' namespace js','line_number':171,'multiline':False]['text':' namespace jit','line_number':200,'multiline':False]['text':' namespace js','line_number':201,'multiline':False]['text':' namespace jit','line_number':235,'multiline':False]['text':' namespace js','line_number':236,'multiline':False]['text':' namespace jit','line_number':270,'multiline':False]['text':' namespace js','line_number':271,'multiline':False]['text':' namespace jit','line_number':298,'multiline':False]['text':' namespace js','line_number':299,'multiline':False]['text':' namespace jit','line_number':326,'multiline':False]['text':' namespace js','line_number':327,'multiline':False]['text':' namespace jit','line_number':354,'multiline':False]['text':' namespace js','line_number':355,'multiline':False]['text':' namespace jit','line_number':382,'multiline':False]['text':' namespace js','line_number':383,'multiline':False]['text':' namespace jit','line_number':410,'multiline':False]['text':' namespace js','line_number':411,'multiline':False]['text':' This is actually roughly right even on 32-bit platforms since in that','line_number':417,'multiline':False]['text':' case, double, int64, and uint64 loads need not be access-atomic.','line_number':418,'multiline':False]['text':'','line_number':419,'multiline':False]['text':' We could use __atomic_load, but it would be needlessly expensive on','line_number':420,'multiline':False]['text':' 32-bit platforms that could support it and just plain wrong on others.','line_number':421,'multiline':False]['text':' This is actually roughly right even on 32-bit platforms since in that','line_number':428,'multiline':False]['text':' case, double, int64, and uint64 loads need not be access-atomic.','line_number':429,'multiline':False]['text':'','line_number':430,'multiline':False]['text':' We could use __atomic_store, but it would be needlessly expensive on','line_number':431,'multiline':False]['text':' 32-bit platforms that could support it and just plain wrong on others.','line_number':432,'multiline':False]['text':' jit_shared_AtomicOperations_feeling_lucky_gcc_h','line_number':454,'multiline':False]