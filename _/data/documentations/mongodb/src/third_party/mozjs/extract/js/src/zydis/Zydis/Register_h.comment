['text':'**************************************************************************************************

  Zyan Disassembler Library (Zydis)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]['text':'*
 * @file
 * @brief   Utility functions and constants for registers.
 ','line_number':27,'multiline':True]['text':' ============================================================================================== ','line_number':44,'multiline':True]['text':' Enums and types                                                                                ','line_number':45,'multiline':True]['text':' ============================================================================================== ','line_number':46,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':48,'multiline':True]['text':' Registers                                                                                      ','line_number':49,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':50,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':54,'multiline':True]['text':' Register classes                                                                               ','line_number':55,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':56,'multiline':True]['text':'*
 * @brief   Defines the `ZydisRegisterClass` enum.
 *
 * Please note that this enum does not contain a matching entry for all values of the
 * `ZydisRegister` enum, but only for those registers where it makes sense to logically group them
 * for decoding/encoding purposes.
 *
 * These are mainly the registers that can be identified by an id within their corresponding
 * register-class. The `IP` and `FLAGS` values are exceptions to this rule.
 ','line_number':58,'multiline':True]['text':'*
     * @brief   8-bit general-purpose registers.
     ','line_number':71,'multiline':True]['text':'*
     * @brief   16-bit general-purpose registers.
     ','line_number':75,'multiline':True]['text':'*
     * @brief   32-bit general-purpose registers.
     ','line_number':79,'multiline':True]['text':'*
     * @brief   64-bit general-purpose registers.
     ','line_number':83,'multiline':True]['text':'*
     * @brief   Floating point legacy registers.
     ','line_number':87,'multiline':True]['text':'*
     * @brief   Floating point multimedia registers.
     ','line_number':91,'multiline':True]['text':'*
     * @brief   128-bit vector registers.
     ','line_number':95,'multiline':True]['text':'*
     * @brief   256-bit vector registers.
     ','line_number':99,'multiline':True]['text':'*
     * @brief   512-bit vector registers.
     ','line_number':103,'multiline':True]['text':'*
     * @brief   Flags registers.
     ','line_number':107,'multiline':True]['text':'*
     * @brief   Instruction-pointer registers.
     ','line_number':111,'multiline':True]['text':'*
     * @brief   Segment registers.
     ','line_number':115,'multiline':True]['text':'*
     * @brief   Test registers.
     ','line_number':119,'multiline':True]['text':'*
     * @brief   Control registers.
     ','line_number':123,'multiline':True]['text':'*
     * @brief   Debug registers.
     ','line_number':127,'multiline':True]['text':'*
     * @brief   Mask registers.
     ','line_number':131,'multiline':True]['text':'*
     * @brief   Bound registers.
     ','line_number':135,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':140,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':144,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':150,'multiline':True]['text':' Register width                                                                                 ','line_number':151,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':152,'multiline':True]['text':'*
 * @brief   Defines the `ZydisRegisterWidth` data-type.
 ','line_number':154,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':159,'multiline':True]['text':' Register context                                                                               ','line_number':160,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':161,'multiline':True]['text':'*
 * @brief   Defines the `ZydisRegisterContext` struct.
 ','line_number':163,'multiline':True]['text':'*
     * @brief   The values stored in the register context.
     ','line_number':168,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':174,'multiline':True]['text':' ============================================================================================== ','line_number':176,'multiline':True]['text':' Exported functions                                                                             ','line_number':177,'multiline':True]['text':' ============================================================================================== ','line_number':178,'multiline':True]['text':'*
 * @addtogroup register Register
 * @brief Functions allowing retrieval of information about registers.
 * @{
 ','line_number':180,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':186,'multiline':True]['text':' Register                                                                                       ','line_number':187,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':188,'multiline':True]['text':'*
 * @brief   Returns the register specified by the `register_class` and `id` tuple.
 *
 * @param   register_class  The register class.
 * @param   id              The register id.
 *
 * @return  The register specified by the `register_class` and `id` tuple or `ZYDIS_REGISTER_NONE`,
 *          if an invalid parameter was passed.
 ','line_number':190,'multiline':True]['text':'*
 * @brief   Returns the id of the specified register.
 *
 * @param   reg The register.
 *
 * @return  The id of the specified register, or -1 if an invalid parameter was passed.
 ','line_number':201,'multiline':True]['text':'*
 * @brief   Returns the register-class of the specified register.
 *
 * @param   reg The register.
 *
 * @return  The register-class of the specified register.
 ','line_number':210,'multiline':True]['text':'*
 * @brief   Returns the width of the specified register.
 *
 * @param   mode    The active machine mode.
 * @param   reg     The register.
 *
 * @return  The width of the specified register, or `ZYDIS_REGISTER_NONE` if the register is
 *          invalid for the active machine-mode.
 ','line_number':219,'multiline':True]['text':'*
 * @brief   Returns the largest enclosing register of the given register.
 *
 * @param   mode    The active machine mode.
 * @param   reg     The register.
 *
 * @return  The largest enclosing register of the given register, or `ZYDIS_REGISTER_NONE` if the
 *          register is invalid for the active machine-mode or does not have an enclosing-register.
 ','line_number':230,'multiline':True]['text':'*
 * @brief   Returns the specified register string.
 *
 * @param   reg The register.
 *
 * @return  The register string or `ZYAN_NULL`, if an invalid register was passed.
 ','line_number':242,'multiline':True]['text':'*
 * @brief   Returns the specified register string as `ZydisShortString`.
 *
 * @param   reg The register.
 *
 * @return  The register string or `ZYAN_NULL`, if an invalid register was passed.
 *
 * The `buffer` of the returned struct is guaranteed to be zero-terminated in this special case.
 ','line_number':251,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':262,'multiline':True]['text':' Register class                                                                                 ','line_number':263,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':264,'multiline':True]['text':'*
 * @brief   Returns the width of the specified register-class.
 *
 * @param   mode            The active machine mode.
 * @param   register_class  The register class.
 *
 * @return  The width of the specified register.
 ','line_number':266,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':277,'multiline':True]['text':'*
 * @}
 ','line_number':279,'multiline':True]['text':' ============================================================================================== ','line_number':283,'multiline':True]['text':' ZYDIS_REGISTER_H ','line_number':289,'multiline':True]