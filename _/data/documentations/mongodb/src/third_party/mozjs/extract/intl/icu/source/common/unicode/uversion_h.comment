['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
*   Copyright (C) 2000-2011, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*
*   file name:  uversion.h
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   Created by: Vladimir Weinstein
*
*  Gets included by utypes.h and Windows .rc files
','line_number':3,'multiline':True]['text':'*
 * \file
 * \brief C API: API for accessing ICU version numbers. 
 ','line_number':19,'multiline':True]['text':'===========================================================================','line_number':23,'multiline':True]['text':' Main ICU version information                                              ','line_number':24,'multiline':True]['text':'===========================================================================','line_number':25,'multiline':True]['text':' Actual version info lives in uvernum.h ','line_number':32,'multiline':True]['text':'* Maximum length of the copyright string.
 *  @stable ICU 2.4
 ','line_number':35,'multiline':True]['text':'* An ICU version consists of up to 4 numbers from 0..255.
 *  @stable ICU 2.4
 ','line_number':40,'multiline':True]['text':'* In a string, ICU version fields are delimited by dots.
 *  @stable ICU 2.4
 ','line_number':45,'multiline':True]['text':'* The maximum length of an ICU version string.
 *  @stable ICU 2.4
 ','line_number':50,'multiline':True]['text':'* The binary form of a version on ICU APIs is an array of 4 uint8_t.
 *  To compare two versions, use memcmp(v1,v2,sizeof(UVersionInfo)).
 *  @stable ICU 2.4
 ','line_number':55,'multiline':True]['text':'===========================================================================','line_number':61,'multiline':True]['text':' C++ namespace if supported. Versioned unless versioning is disabled.      ','line_number':62,'multiline':True]['text':'===========================================================================','line_number':63,'multiline':True]['text':' Define C++ namespace symbols. ','line_number':65,'multiline':True]['text':'*
 * \def U_NAMESPACE_BEGIN
 * This is used to begin a declaration of a public ICU C++ API within
 * versioned-ICU-namespace block.
 *
 * @stable ICU 2.4
 ','line_number':68,'multiline':True]['text':'*
 * \def U_NAMESPACE_END
 * This is used to end a declaration of a public ICU C++ API.
 * It ends the versioned-ICU-namespace block begun by U_NAMESPACE_BEGIN.
 *
 * @stable ICU 2.4
 ','line_number':76,'multiline':True]['text':'*
 * \def U_NAMESPACE_USE
 * This is used to specify that the rest of the code uses the
 * public ICU C++ API namespace.
 * @stable ICU 2.4
 ','line_number':84,'multiline':True]['text':'*
 * \def U_NAMESPACE_QUALIFIER
 * This is used to qualify that a function or class is part of
 * the public ICU C++ API namespace.
 *
 * This macro is unnecessary since ICU 49 requires namespace support.
 * You can just use "icu::" instead.
 * @stable ICU 2.4
 ','line_number':91,'multiline':True]['text':' __cplusplus ','line_number':127,'multiline':True]['text':'===========================================================================','line_number':129,'multiline':True]['text':' General version helper functions. Definitions in putil.c                  ','line_number':130,'multiline':True]['text':'===========================================================================','line_number':131,'multiline':True]['text':'*
 * Parse a string with dotted-decimal version information and
 * fill in a UVersionInfo structure with the result.
 * Definition of this function lives in putil.c
 *
 * @param versionArray The destination structure for the version information.
 * @param versionString A string with dotted-decimal version information,
 *                      with up to four non-negative number fields with
 *                      values of up to 255 each.
 * @stable ICU 2.4
 ','line_number':133,'multiline':True]['text':'*
 * Parse a Unicode string with dotted-decimal version information and
 * fill in a UVersionInfo structure with the result.
 * Definition of this function lives in putil.c
 *
 * @param versionArray The destination structure for the version information.
 * @param versionString A Unicode string with dotted-decimal version
 *                      information, with up to four non-negative number
 *                      fields with values of up to 255 each.
 * @stable ICU 4.2
 ','line_number':147,'multiline':True]['text':'*
 * Write a string with dotted-decimal version information according
 * to the input UVersionInfo.
 * Definition of this function lives in putil.c
 *
 * @param versionArray The version information to be written as a string.
 * @param versionString A string buffer that will be filled in with
 *                      a string corresponding to the numeric version
 *                      information in versionArray.
 *                      The buffer size must be at least U_MAX_VERSION_STRING_LENGTH.
 * @stable ICU 2.4
 ','line_number':162,'multiline':True]['text':'*
 * Gets the ICU release version.  The version array stores the version information
 * for ICU.  For example, release "1.3.31.2" is then represented as 0x01031F02.
 * Definition of this function lives in putil.c
 *
 * @param versionArray the version # information, the result will be filled in
 * @stable ICU 2.0
 ','line_number':177,'multiline':True]