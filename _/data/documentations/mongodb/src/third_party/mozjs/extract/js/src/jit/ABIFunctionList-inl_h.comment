['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::NumberMod','line_number':10,'multiline':False]['text':' js::ecmaPow, js::ecmaHypot, js::hypot3, js::hypot4,','line_number':11,'multiline':False]['text':' js::ecmaAtan2, js::UnaryMathFunctionType, js::powi','line_number':12,'multiline':False]['text':' js::StringToNumberPure, js::Int32ToStringPure,','line_number':13,'multiline':False]['text':' js::NumberToStringPure','line_number':14,'multiline':False]['text':' js::ArrayShiftMoveElements','line_number':16,'multiline':False]['text':' js::MapIteratorObject::next,','line_number':17,'multiline':False]['text':' js::SetIteratorObject::next','line_number':18,'multiline':False]['text':' js::ObjectClassToString','line_number':19,'multiline':False]['text':' js::RegExpPrototypeOptimizableRaw,','line_number':20,'multiline':False]['text':' js::RegExpInstanceOptimizableRaw','line_number':21,'multiline':False]['text':' js::irregexp::CaseInsensitiveCompareNonUnicode,','line_number':24,'multiline':False]['text':' js::irregexp::CaseInsensitiveCompareUnicode,','line_number':25,'multiline':False]['text':' js::irregexp::GrowBacktrackStack','line_number':26,'multiline':False]['text':' js::jit::FinishBailoutToBaseline, js::jit::Bailout,','line_number':29,'multiline':False]['text':' js::jit::InvalidationBailout','line_number':30,'multiline':False]['text':' js::jit::LazyLinkTopActivation','line_number':32,'multiline':False]['text':' HandleException','line_number':33,'multiline':False]['text':' Rest of js::jit::* functions.','line_number':34,'multiline':False]['text':' JSNative','line_number':36,'multiline':False]['text':' JS::ToInt32','line_number':37,'multiline':False]['text':' JSJitGetterOp, JSJitSetterOp, JSJitMethodOp','line_number':38,'multiline':False]['text':' js_free','line_number':40,'multiline':False]['text':' js::ProxyGetProperty','line_number':42,'multiline':False]['text':' js::ArgumentsObject::finishForIonPure','line_number':44,'multiline':False]['text':' js::NativeObject','line_number':45,'multiline':False]['text':' js::ExecuteRegExpAtomRaw','line_number':46,'multiline':False]['text':' js::TraceLogStartEventPrivate,','line_number':47,'multiline':False]['text':' js::TraceLogStartEvent,','line_number':48,'multiline':False]['text':' js::TraceLogStopEventPrivate','line_number':49,'multiline':False]['text':' js::wasm::*','line_number':51,'multiline':False]['text':' js::EmulatesUndefined','line_number':53,'multiline':False]['text':' List of all ABI functions to be used with callWithABI. Each entry stores','line_number':58,'multiline':False]['text':' the fully qualified name of the C++ function. This list must be sorted.','line_number':59,'multiline':False]['text':' List of all ABI functions to be used with callWithABI, which are','line_number':169,'multiline':False]['text':' overloaded. Each entry stores the fully qualified name of the C++ function,','line_number':170,'multiline':False]['text':' followed by the signature of the function to be called. When the function','line_number':171,'multiline':False]['text':' is not overloaded, you should prefer adding the function to','line_number':172,'multiline':False]['text':' ABIFUNCTION_LIST instead. This list must be sorted with the name of the C++','line_number':173,'multiline':False]['text':' function.','line_number':174,'multiline':False]['text':' List of all ABI function signature which are using a computed function','line_number':180,'multiline':False]['text':' pointer instead of a statically known function pointer.','line_number':181,'multiline':False]['text':' GCC warns when the signature does not have matching attributes (for example','line_number':200,'multiline':False]['text':' [[nodiscard]]). Squelch this warning to avoid a GCC-only footgun.','line_number':201,'multiline':False]['text':' Note: the use of ::fp instead of fp is intentional to enforce use of','line_number':207,'multiline':False]['text':' fully-qualified names in the list above.','line_number':208,'multiline':False]['text':' Define a known list of function signatures.','line_number':225,'multiline':False]['text':' namespace jit','line_number':238,'multiline':False]['text':' namespace js','line_number':239,'multiline':False]['text':' jit_VMFunctionList_inl_h','line_number':241,'multiline':False]