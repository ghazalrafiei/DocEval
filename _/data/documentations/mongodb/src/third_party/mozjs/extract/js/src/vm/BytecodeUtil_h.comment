['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':'
 * JS bytecode definitions.
 ','line_number':10,'multiline':True]['text':' JOF_*','line_number':29,'multiline':False]['text':' js::GCThingIndex','line_number':32,'multiline':False]['text':' ThrowMsgKind, ThrowCondition','line_number':33,'multiline':False]['text':' namespace js','line_number':37,'multiline':False]['text':'
 * JS operation bytecodes.
 ','line_number':39,'multiline':True]['text':' Shorthand for type from format. ','line_number':48,'multiline':True]['text':' Shorthand for mode from format. ','line_number':52,'multiline':True]['text':'
 * Immediate operand getters, setters, and bounds.
 ','line_number':56,'multiline':True]['text':' Common uint16_t immediate format helpers. ','line_number':68,'multiline':True]['text':' Helpers for accessing the offsets of jump opcodes. ','line_number':86,'multiline':True]['text':' Do a single 32-bit load (for opcode and operand), then shift off the','line_number':93,'multiline':False]['text':' opcode.','line_number':94,'multiline':False]['text':' Index limit is determined by SrcNote::FourByteOffsetFlag, see','line_number':169,'multiline':False]['text':' frontend/BytecodeEmitter.h.','line_number':170,'multiline':False]['text':'
 * Describes the 'hops' component of a JOF_ENVCOORD opcode.
 *
 * Note: this component is only 8 bits wide, limiting the maximum number of
 * scopes between a use and def to roughly 255. This is a pretty small limit but
 * note that SpiderMonkey's recursive descent parser can only parse about this
 * many functions before hitting the C-stack recursion limit so this shouldn't
 * be a significant limitation in practice.
 ','line_number':249,'multiline':True]['text':' Describes the 'slot' component of a JOF_ENVCOORD opcode. ','line_number':271,'multiline':True]['text':' length including opcode byte ','line_number':285,'multiline':True]['text':' arity, -1 if variadic ','line_number':286,'multiline':True]['text':' number of stack results ','line_number':287,'multiline':True]['text':' immediate operand format ','line_number':288,'multiline':True]['text':' Shorthand for type from opcode. ','line_number':303,'multiline':True]['text':' Note:','line_number':312,'multiline':False]['text':' * JSOp::Yield/JSOp::Await is considered to fall through, like JSOp::Call.','line_number':313,'multiline':False]['text':' * JSOp::Gosub falls through indirectly, after executing a 'finally'.','line_number':314,'multiline':False]['text':' stack: fun, this, [argc arguments] ','line_number':358,'multiline':True]['text':'
 * Given bytecode address pc in script's main program code, compute the operand
 * stack depth just before (JSOp) *pc executes.  If *pc is not reachable, return
 * false.
 ','line_number':374,'multiline':True]['text':' namespace js ','line_number':384,'multiline':True]['text':'
 * Find the source expression that resulted in v, and return a newly allocated
 * C-string containing it.  Fall back on v's string conversion (fallback) if we
 * can't find the bytecode that generated and pushed v on the operand stack.
 *
 * Search the current stack frame if spindex is JSDVG_SEARCH_STACK.  Don't
 * look for v on the stack if spindex is JSDVG_IGNORE_STACK.  Otherwise,
 * spindex is the negative index of v, measured from cx->fp->sp, or from a
 * lower frame's sp if cx->fp is native.
 *
 * The optional argument skipStackHits can be used to skip a hit in the stack
 * frame. This can be useful in self-hosted code that wants to report value
 * errors containing decompiled values that are useful for the user, instead of
 * values used internally by the self-hosted code.
 *
 * The caller must call JS_free on the result after a successful call.
 ','line_number':391,'multiline':True]['text':'
 * Decompile the formal argument at formalIndex in the nearest non-builtin
 * stack frame, falling back with converting v to source.
 ','line_number':412,'multiline':True]['text':' Return true iff the combination of the ThrowCondition and hasOwn result','line_number':585,'multiline':False]['text':' will throw an exception.','line_number':586,'multiline':False]['text':' Met a throw condition.','line_number':591,'multiline':False]['text':'
 * Counts accumulated for a single opcode in a script. The counts tracked vary
 * between opcodes, and this structure ensures that counts are accessed in a
 * coherent fashion.
 ','line_number':598,'multiline':True]['text':'
   * Offset of the pc inside the script. This fields is used to lookup opcode
   * which have annotations.
   ','line_number':604,'multiline':True]['text':'
   * Record the number of execution of one instruction, or the number of
   * throws executed.
   ','line_number':610,'multiline':True]['text':' Used for sorting and searching.','line_number':621,'multiline':False]['text':'
 * Disassemblers, for debugging only.
 ','line_number':650,'multiline':True]['text':' namespace js','line_number':664,'multiline':False]['text':' vm_BytecodeUtil_h ','line_number':666,'multiline':True]