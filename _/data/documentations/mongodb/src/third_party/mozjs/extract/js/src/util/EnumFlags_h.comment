['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Wrapper type for flags fields based on an enum type.','line_number':17,'multiline':False]['text':'','line_number':18,'multiline':False]['text':' EnumFlags does not (implicitly) convert to/from the underlying integer type.','line_number':19,'multiline':False]['text':' That can be supported for specific flags fields by deriving from this class','line_number':20,'multiline':False]['text':' and implementing an extra constructor and/or |operator FieldType|.','line_number':21,'multiline':False]['text':'','line_number':22,'multiline':False]['text':' Note: this type is similar to mfbt/EnumSet.h, but has the same size in debug','line_number':23,'multiline':False]['text':' and release builds so is more appropriate for core data structures where we','line_number':24,'multiline':False]['text':' don't want this size difference.','line_number':25,'multiline':False]['text':' Use the enum's underlying type for the flags field. This makes JIT accesses','line_number':29,'multiline':False]['text':' more predictable and simplifies the implementation of this class.','line_number':30,'multiline':False]['text':' namespace js','line_number':78,'multiline':False]['text':' util_EnumFlags_h','line_number':80,'multiline':False]