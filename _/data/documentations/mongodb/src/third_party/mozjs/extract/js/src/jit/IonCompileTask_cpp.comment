['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' The build is taken by this thread. Unfreeze the LifoAlloc to allow','line_number':24,'multiline':False]['text':' mutations.','line_number':25,'multiline':False]['text':' Ping the main thread so that the compiled code can be incorporated at the','line_number':37,'multiline':False]['text':' next interrupt callback.','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' This must happen before the current task is reset. DestroyContext','line_number':40,'multiline':False]['text':' cancels in progress Ion compilations before destroying its target','line_number':41,'multiline':False]['text':' context, and after we reset the current task we are no longer considered','line_number':42,'multiline':False]['text':' to be Ion compiling.','line_number':43,'multiline':False]['text':' This is the entry point when ion compiles are run offthread.','line_number':49,'multiline':False]['text':' See js::jit::FreeIonCompileTask.','line_number':71,'multiline':False]['text':' The IonCompileTask and most of its contents live in the LifoAlloc we point','line_number':72,'multiline':False]['text':' to.','line_number':73,'multiline':False]['text':' Incorporate any off thread compilations for the runtime which have','line_number':91,'multiline':False]['text':' finished, failed or have been cancelled.','line_number':92,'multiline':False]['text':' Find a finished task for the runtime.','line_number':98,'multiline':False]['text':' Linking releases the lock so we must now check the finished list','line_number':148,'multiline':False]['text':' again.','line_number':149,'multiline':False]['text':' The task is allocated into its LifoAlloc, so destroying that will','line_number':156,'multiline':False]['text':' destroy the task and all other data accumulated during compilation,','line_number':157,'multiline':False]['text':' except any final codegen (which includes an assembler and needs to be','line_number':158,'multiline':False]['text':' explicitly destroyed).','line_number':159,'multiline':False]['text':' Clean the references to the pending IonCompileTask, if we just finished it.','line_number':179,'multiline':False]['text':' If the task is still in one of the helper thread lists, then remove it.','line_number':185,'multiline':False]['text':' Clean up if compilation did not succeed.','line_number':190,'multiline':False]['text':' Free Ion LifoAlloc off-thread. Free on the main thread if this OOMs.','line_number':200,'multiline':False]