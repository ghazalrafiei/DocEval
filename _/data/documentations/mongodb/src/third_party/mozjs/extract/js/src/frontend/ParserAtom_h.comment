['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' mozilla::DebugOnly','line_number':10,'multiline':False]['text':' mozilla::HashString','line_number':11,'multiline':False]['text':' mozilla::MallocSizeOf','line_number':12,'multiline':False]['text':' mozilla::Range','line_number':13,'multiline':False]['text':' mozilla::Span','line_number':14,'multiline':False]['text':' mozilla::Variant','line_number':15,'multiline':False]['text':' LifoAlloc','line_number':17,'multiline':False]['text':' TypedIndex','line_number':18,'multiline':False]['text':' HashMap','line_number':19,'multiline':False]['text':' js::UniquePtr','line_number':20,'multiline':False]['text':' Vector','line_number':21,'multiline':False]['text':' CompareChars, StringEqualsAscii','line_number':23,'multiline':False]['text':' WellKnownAtomId, WellKnownAtomInfo','line_number':24,'multiline':False]['text':' These types correspond into indices in the StaticStrings arrays.','line_number':42,'multiline':False]['text':' ParserAtomIndex, WellKnownAtomId, Length1StaticParserString,','line_number':49,'multiline':False]['text':' Length2StaticParserString, or null.','line_number':50,'multiline':False]['text':'','line_number':51,'multiline':False]['text':' 0x0000_0000  Null atom','line_number':52,'multiline':False]['text':'','line_number':53,'multiline':False]['text':' 0x1YYY_YYYY  28-bit ParserAtom','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' 0x2000_YYYY  Well-known atom ID','line_number':56,'multiline':False]['text':' 0x2001_YYYY  Static length-1 atom','line_number':57,'multiline':False]['text':' 0x2002_YYYY  Static length-2 atom','line_number':58,'multiline':False]['text':' Length1Static/Length2Static string shouldn't use WellKnownAtomId.','line_number':118,'multiline':False]['text':' The value of rawData() for WellKnown TaggedParserAtomIndex.','line_number':171,'multiline':False]['text':' For using in switch-case.','line_number':172,'multiline':False]['text':' NOTE: this is not well-known "null".','line_number':217,'multiline':False]['text':' Trivial variant of TaggedParserAtomIndex, to use in collection that requires','line_number':282,'multiline':False]['text':' trivial type.','line_number':283,'multiline':False]['text':' Provides minimal set of methods to use in collection.','line_number':284,'multiline':False]['text':'*
 * A ParserAtom is an in-parser representation of an interned atomic
 * string.  It mostly mirrors the information carried by a JSAtom*.
 *
 * The atom contents are stored in one of two locations:
 *  1. Inline Latin1Char storage (immediately after the ParserAtom memory).
 *  2. Inline char16_t storage (immediately after the ParserAtom memory).
 ','line_number':322,'multiline':True]['text':' Bit flags inside flags_.','line_number':336,'multiline':False]['text':' Helper routine to read some sequence of two-byte chars, and write them','line_number':340,'multiline':False]['text':' into a target buffer of a particular character width.','line_number':341,'multiline':False]['text':'','line_number':342,'multiline':False]['text':' The characters in the sequence must have been verified prior','line_number':343,'multiline':False]['text':' The JSAtom-compatible hash of the string.','line_number':363,'multiline':False]['text':' The length of the buffer in chars_.','line_number':366,'multiline':False]['text':' End of fields.','line_number':371,'multiline':False]['text':' The constexpr constructor is used by XDR','line_number':381,'multiline':False]['text':' ParserAtoms may own their content buffers in variant_, and thus','line_number':384,'multiline':False]['text':' cannot be copy-constructed - as a new chars would need to be allocated.','line_number':385,'multiline':False]['text':' Convert NotInstantiated and usedByStencil entry to a js-atom.','line_number':417,'multiline':False]['text':' Returns index-th char.','line_number':450,'multiline':False]['text':' Boundary check isn't performed.','line_number':451,'multiline':False]['text':'*
 * A lookup structure that allows for querying ParserAtoms in
 * a hashtable using a flexible input type that supports string
 * representations of various forms.
 ','line_number':467,'multiline':True]['text':'*
 * WellKnownParserAtoms allows the parser to lookup up specific atoms in
 * constant time.
 ','line_number':506,'multiline':True]['text':' Common property and prototype names are tracked in a hash table. This table','line_number':512,'multiline':False]['text':' does not key for any items already in a direct-indexing tiny atom table.','line_number':513,'multiline':False]['text':' Maximum length of any well known atoms. This can be increased if needed.','line_number':524,'multiline':False]['text':' No match on tiny Atoms','line_number':560,'multiline':False]['text':'*
 * A ParserAtomsTable owns and manages the vector of ParserAtom entries
 * associated with a given compile session.
 ','line_number':573,'multiline':True]['text':' The ParserAtom are owned by the LifoAlloc.','line_number':585,'multiline':False]['text':' Internal APIs for interning to the table after well-known atoms cases have','line_number':611,'multiline':False]['text':' been tested.','line_number':612,'multiline':False]['text':' Accessors for querying atom properties.','line_number':656,'multiline':False]['text':' Methods for atom.','line_number':665,'multiline':False]['text':' Lightweight version of ParserAtomsTable.','line_number':700,'multiline':False]['text':' This doesn't support deduplication.','line_number':701,'multiline':False]['text':' Used while decoding XDR.','line_number':702,'multiline':False]['text':' The sequence of characters to look up.','line_number':718,'multiline':False]['text':' Compare hashes first.','line_number':736,'multiline':False]['text':' Compare hashes first.','line_number':754,'multiline':False]['text':' namespace frontend ','line_number':779,'multiline':True]['text':' namespace js ','line_number':780,'multiline':True]['text':' frontend_ParserAtom_h','line_number':782,'multiline':False]