['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Miscellaneous operations. ','line_number':7,'multiline':True]['text':' JS_PUBLIC_API','line_number':12,'multiline':False]['text':' JS::CallArgs','line_number':13,'multiline':False]['text':' JS::{,Mutable}Handle','line_number':14,'multiline':False]['text':' JS::Value','line_number':15,'multiline':False]['text':' JSObject','line_number':16,'multiline':False]['text':' js::PromiseObject','line_number':17,'multiline':False]['text':'*
 * Streams spec, 6.3.1.
 *      CreateAlgorithmFromUnderlyingMethod ( underlyingObject, methodName,
 *                                            algoArgCount, extraArgs )
 *
 * This function only partly implements the standard algorithm. We do not
 * actually create a new JSFunction completely encapsulating the new algorithm.
 * Instead, this just gets the specified method and checks for errors. It's the
 * caller's responsibility to make sure that later, when the algorithm is
 * "performed", the appropriate steps are carried out.
 ','line_number':39,'multiline':True]['text':'*
 * Streams spec, 6.3.2. InvokeOrNoop ( O, P, args )
 * As it happens, all callers pass exactly one argument.
 ','line_number':55,'multiline':True]['text':'*
 * Streams spec, 6.3.7. ValidateAndNormalizeHighWaterMark ( highWaterMark )
 ','line_number':64,'multiline':True]['text':'*
 * Streams spec, 6.3.8. MakeSizeAlgorithmFromSizeFunction ( size )
 ','line_number':71,'multiline':True]['text':' namespace js','line_number':82,'multiline':False]['text':' builtin_streams_MiscellaneousOperations_h','line_number':84,'multiline':False]