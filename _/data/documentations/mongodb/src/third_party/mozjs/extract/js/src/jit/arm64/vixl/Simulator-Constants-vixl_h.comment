['text':' Copyright 2015, ARM Limited','line_number':1,'multiline':False]['text':' All rights reserved.','line_number':2,'multiline':False]['text':'','line_number':3,'multiline':False]['text':' Redistribution and use in source and binary forms, with or without','line_number':4,'multiline':False]['text':' modification, are permitted provided that the following conditions are met:','line_number':5,'multiline':False]['text':'','line_number':6,'multiline':False]['text':'   * Redistributions of source code must retain the above copyright notice,','line_number':7,'multiline':False]['text':'     this list of conditions and the following disclaimer.','line_number':8,'multiline':False]['text':'   * Redistributions in binary form must reproduce the above copyright notice','line_number':9,'multiline':False]['text':'     this list of conditions and the following disclaimer in the documentation','line_number':10,'multiline':False]['text':'     and/or other materials provided with the distribution.','line_number':11,'multiline':False]['text':'   * Neither the name of ARM Limited nor the names of its contributors may be','line_number':12,'multiline':False]['text':'     used to endorse or promote products derived from this software without','line_number':13,'multiline':False]['text':'     specific prior written permission.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS CONTRIBUTORS "AS IS" AND','line_number':16,'multiline':False]['text':' ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED','line_number':17,'multiline':False]['text':' WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE','line_number':18,'multiline':False]['text':' DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE','line_number':19,'multiline':False]['text':' FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL','line_number':20,'multiline':False]['text':' DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR','line_number':21,'multiline':False]['text':' SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER','line_number':22,'multiline':False]['text':' CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,','line_number':23,'multiline':False]['text':' OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE','line_number':24,'multiline':False]['text':' OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.','line_number':25,'multiline':False]['text':' Debug instructions.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' VIXL's macro-assembler and simulator support a few pseudo instructions to','line_number':34,'multiline':False]['text':' make debugging easier. These pseudo instructions do not exist on real','line_number':35,'multiline':False]['text':' hardware.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' TODO: Also consider allowing these pseudo-instructions to be disabled in the','line_number':38,'multiline':False]['text':' simulator, so that users can check that the input is a valid native code.','line_number':39,'multiline':False]['text':' (This isn't possible in all cases. Printf won't work, for example.)','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':' Each debug pseudo instruction is represented by a HLT instruction. The HLT','line_number':42,'multiline':False]['text':' immediate field is used to identify the type of debug pseudo instruction.','line_number':43,'multiline':False]['text':' Aliases.','line_number':49,'multiline':False]['text':' Each pseudo instruction uses a custom encoding for additional arguments, as','line_number':54,'multiline':False]['text':' described below.','line_number':55,'multiline':False]['text':' Unreachable - kUnreachableOpcode','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' Instruction which should never be executed. This is used as a guard in parts','line_number':59,'multiline':False]['text':' of the code that should not be reachable, such as in data encoded inline in','line_number':60,'multiline':False]['text':' the instructions.','line_number':61,'multiline':False]['text':' Printf - kPrintfOpcode','line_number':63,'multiline':False]['text':'  - arg_count: The number of arguments.','line_number':64,'multiline':False]['text':'  - arg_pattern: A set of PrintfArgPattern values, packed into two-bit fields.','line_number':65,'multiline':False]['text':'','line_number':66,'multiline':False]['text':' Simulate a call to printf.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':' Floating-point and integer arguments are passed in separate sets of registers','line_number':69,'multiline':False]['text':' in AAPCS64 (even for varargs functions), so it is not possible to determine','line_number':70,'multiline':False]['text':' the type of each argument without some information about the values that were','line_number':71,'multiline':False]['text':' passed in. This information could be retrieved from the printf format string,','line_number':72,'multiline':False]['text':' but the format string is not trivial to parse so we encode the relevant','line_number':73,'multiline':False]['text':' information with the HLT instruction.','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' Also, the following registers are populated (as if for a native A64 call):','line_number':76,'multiline':False]['text':'    x0: The format string','line_number':77,'multiline':False]['text':' x1-x7: Optional arguments, if type == CPURegister::kRegister','line_number':78,'multiline':False]['text':' d0-d7: Optional arguments, if type == CPURegister::kFPRegister','line_number':79,'multiline':False]['text':' The argument pattern is a set of two-bit-fields, each with one of the','line_number':86,'multiline':False]['text':' following values:','line_number':87,'multiline':False]['text':' There is no kPrintfArgS because floats are always converted to doubles in C','line_number':91,'multiline':False]['text':' varargs calls.','line_number':92,'multiline':False]['text':' Trace - kTraceOpcode','line_number':97,'multiline':False]['text':'  - parameter: TraceParameter stored as a uint32_t','line_number':98,'multiline':False]['text':'  - command: TraceCommand stored as a uint32_t','line_number':99,'multiline':False]['text':'','line_number':100,'multiline':False]['text':' Allow for trace management in the generated code. This enables or disables','line_number':101,'multiline':False]['text':' automatic tracing of the specified information for every simulated','line_number':102,'multiline':False]['text':' instruction.','line_number':103,'multiline':False]['text':' Trace parameters.','line_number':108,'multiline':False]['text':' Log disassembly.','line_number':110,'multiline':False]['text':' Log general purpose registers.','line_number':111,'multiline':False]['text':' Log NEON and floating-point registers.','line_number':112,'multiline':False]['text':' Log the flags and system registers.','line_number':113,'multiline':False]['text':' Log writes to memory.','line_number':114,'multiline':False]['text':' Trace commands.','line_number':121,'multiline':False]['text':' Log - kLogOpcode','line_number':127,'multiline':False]['text':'  - parameter: TraceParameter stored as a uint32_t','line_number':128,'multiline':False]['text':'','line_number':129,'multiline':False]['text':' Print the specified information once. This mechanism is separate from Trace.','line_number':130,'multiline':False]['text':' In particular, _all_ of the specified registers are printed, rather than just','line_number':131,'multiline':False]['text':' the registers that the instruction writes.','line_number':132,'multiline':False]['text':'','line_number':133,'multiline':False]['text':' Any combination of the TraceParameters values can be used, except that','line_number':134,'multiline':False]['text':' LOG_DISASM is not supported for Log.','line_number':135,'multiline':False]['text':' namespace vixl','line_number':138,'multiline':False]['text':' VIXL_A64_SIMULATOR_CONSTANTS_A64_H_','line_number':140,'multiline':False]