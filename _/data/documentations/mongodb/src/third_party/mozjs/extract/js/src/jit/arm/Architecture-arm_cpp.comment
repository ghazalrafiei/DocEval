['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::jit::FlushICache','line_number':24,'multiline':False]['text':' The Android NDK and B2G do not include the hwcap.h kernel header, and it is','line_number':28,'multiline':False]['text':' not defined when building the simulator, so inline the header defines we','line_number':29,'multiline':False]['text':' need.','line_number':30,'multiline':False]['text':' also set for VFPv4-D16 ','line_number':34,'multiline':True]['text':' set if VFP has 32 regs (not 16) ','line_number':38,'multiline':True]['text':' set if VFP has 32 regs (not 16) ','line_number':46,'multiline':True]['text':' Parse the Linux kernel cpuinfo features. This is also used to parse the','line_number':53,'multiline':False]['text':' override features which has some extensions: 'armv7', 'align' and 'hardfp'.','line_number':54,'multiline':False]['text':' For ease of running tests we want it to be the default to fixup faults.','line_number':59,'multiline':False]['text':' End of string.','line_number':65,'multiline':False]['text':' Skip separator characters.','line_number':69,'multiline':False]['text':' Find the end of the token.','line_number':73,'multiline':False]['text':' vfpv2 is the same as vfp','line_number':85,'multiline':False]['text':' Canonicalize the flags. These rules are also applied to the features','line_number':124,'multiline':False]['text':' supplied for simulation.','line_number':125,'multiline':False]['text':' VFPv3 is a subset of VFPv4, force this if the input string omits it.','line_number':127,'multiline':False]['text':' The VFPv3 feature is expected when the VFPv3D16 is reported, but add it','line_number':132,'multiline':False]['text':' just in case of a kernel difference in feature reporting.','line_number':133,'multiline':False]['text':' VFPv2 is a subset of VFPv3, force this if the input string omits it.  VFPv2','line_number':138,'multiline':False]['text':' is just an alias for VFP.','line_number':139,'multiline':False]['text':' If we have Neon we have floating point.','line_number':144,'multiline':False]['text':' If VFPv3 or Neon is supported then this must be an ARMv7.','line_number':149,'multiline':False]['text':' Some old kernels report VFP and not VFPv3, but if ARMv7 then it must be','line_number':154,'multiline':False]['text':' VFPv3.','line_number':155,'multiline':False]['text':' Older kernels do not implement the HWCAP_VFPD32 flag.','line_number':160,'multiline':False]['text':' The override flags parsed from the ARMHWCAP environment variable or from the','line_number':172,'multiline':False]['text':' --arm-hwcap js shell argument.  They are stable after startup: there is no','line_number':173,'multiline':False]['text':' longer a programmatic way of setting these from JS.','line_number':174,'multiline':False]['text':'NOTREACHED','line_number':206,'multiline':True]['text':' override = ','line_number':209,'multiline':True]['text':' HWCAP_FIXUP_FAULT is on by default even if HWCAP_ALIGNMENT_FAULT is','line_number':233,'multiline':False]['text':' not on by default, because some memory access instructions always fault.','line_number':234,'multiline':False]['text':' Notably, this is true for floating point accesses.','line_number':235,'multiline':False]['text':' This includes Android and B2G.','line_number':241,'multiline':False]['text':' Read the cpuinfo Features if the auxv is not available.','line_number':267,'multiline':False]['text':' The exynos7420 cpu (EU galaxy S6 (Note)) has a bug where sometimes','line_number':281,'multiline':False]['text':' flushing doesn't invalidate the instruction cache. As a result we force','line_number':282,'multiline':False]['text':' it by calling the cacheFlush twice on different start addresses.','line_number':283,'multiline':False]['text':' If compiled to use specialized features then these features can be','line_number':291,'multiline':False]['text':' assumed to be present otherwise the compiler would fail to run.','line_number':292,'multiline':False]['text':' Compiled to use the hardfp ABI.','line_number':295,'multiline':False]['text':' Compiled to use VFP instructions so assume VFP support.','line_number':300,'multiline':False]['text':' Compiled to use ARMv7 instructions so assume the ARMv7 arch.','line_number':305,'multiline':False]['text':' JS_SIMULATOR_ARM','line_number':318,'multiline':False]['text':' These are really available from ARMv6K and later, but why bother?','line_number':347,'multiline':False]['text':' This is defined in the header and inlined when not using the simulator.','line_number':377,'multiline':False]['text':' Check for some register aliases first.','line_number':386,'multiline':False]['text':' Add in just this float.','line_number':432,'multiline':False]['text':' A double with an overlay, add in both floats.','line_number':435,'multiline':False]['text':' Add in the lone double in the range 16-31.','line_number':439,'multiline':False]['text':' namespace jit','line_number':524,'multiline':False]['text':' namespace js','line_number':525,'multiline':False]