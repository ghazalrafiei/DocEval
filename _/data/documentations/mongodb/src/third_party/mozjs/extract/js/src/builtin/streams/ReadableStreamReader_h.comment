['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' ReadableStream readers and generic reader operations. ','line_number':7,'multiline':True]['text':' JS_PUBLIC_API','line_number':12,'multiline':False]['text':' JSClass, js::ClassSpec','line_number':13,'multiline':False]['text':' JS::Handle','line_number':14,'multiline':False]['text':' JS::{,Boolean,Object,Undefined}Value','line_number':15,'multiline':False]['text':' JSObject::is','line_number':16,'multiline':False]['text':' js::ListObject','line_number':17,'multiline':False]['text':' js::NativeObject','line_number':18,'multiline':False]['text':'*
 * Tells whether or not read() result objects inherit from Object.prototype.
 * Generally, they should do so only if the reader was created by author code.
 * See <https://streams.spec.whatwg.org/#readable-stream-create-read-result>.
 ','line_number':27,'multiline':True]['text':'*
   * Memory layout of Stream Reader instances.
   *
   * See https://streams.spec.whatwg.org/#default-reader-internal-slots and
   * https://streams.spec.whatwg.org/#byob-reader-internal-slots for details.
   *
   * Note that [[readRequests]] and [[readIntoRequests]] are treated the same
   * in our implementation.
   *
   * Of the stored values, Stream and ClosedPromise might be
   * cross-compartment wrapper wrappers.
   *
   * For Stream, this can happen if the Reader was created by applying a
   * different compartment's ReadableStream.prototype.getReader method.
   *
   * For ClosedPromise, it can be caused by applying a different
   * compartment's ReadableStream*Reader.prototype.releaseLock method.
   *
   * Requests is guaranteed to be in the same compartment as the Reader, but
   * can contain wrapped request objects from other globals.
   ','line_number':36,'multiline':True]['text':'*
   * Tells whether this reader was created by author code.
   *
   * This returns Yes for readers created using `stream.getReader()`, and No
   * for readers created for the internal use of algorithms like
   * `stream.tee()` and `new Response(stream)`.
   *
   * The standard does not have this field. Instead, eight algorithms take a
   * forAuthorCode parameter, and a [[forAuthorCode]] field is part of each
   * read request. But the behavior is always equivalent to treating readers
   * created by author code as having a bit set on them. We implement it that
   * way for simplicity.
   ','line_number':72,'multiline':True]['text':' namespace js','line_number':139,'multiline':False]['text':' namespace js','line_number':152,'multiline':False]['text':' builtin_streams_ReadableStreamReader_h','line_number':154,'multiline':False]