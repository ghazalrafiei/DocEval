['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' JS::shadow::Object','line_number':11,'multiline':False]['text':'*
 * This is the base class for the various kinds of proxy objects.  It's never
 * instantiated.
 *
 * Proxy objects use their shape primarily to record flags. Property
 * information, &c. is all dynamically computed.
 *
 * There is no class_ member to force specialization of JSObject::is<T>().
 * The implementation in JSObject is incorrect for proxies since it doesn't
 * take account of the handler type.
 ','line_number':16,'multiline':True]['text':' GetProxyDataLayout computes the address of this field.','line_number':28,'multiline':False]['text':' Proxies usually store their ProxyValueArray inline in the object.','line_number':48,'multiline':False]['text':' There's one unfortunate exception: when a proxy is swapped with another','line_number':49,'multiline':False]['text':' object, and the sizes don't match, we malloc the ProxyValueArray.','line_number':50,'multiline':False]['text':' Since we can take classes from the outside, make sure that they','line_number':119,'multiline':False]['text':' are "sane". They have to quack enough like proxies for us to belive','line_number':120,'multiline':False]['text':' they should be treated as such.','line_number':121,'multiline':False]['text':' Proxy classes are not allowed to have call or construct hooks directly.','line_number':123,'multiline':False]['text':' Their callability is instead decided by handler()->isCallable().','line_number':124,'multiline':False]['text':' namespace js','line_number':144,'multiline':False]['text':' Note: this method is implemented in terms of the IsProxy() friend API','line_number':148,'multiline':False]['text':' functions to ensure the implementations are tied together.','line_number':149,'multiline':False]['text':' Note 2: this specialization isn't used for subclasses of ProxyObject','line_number':150,'multiline':False]['text':' which must supply their own implementation.','line_number':151,'multiline':False]['text':' vm_ProxyObject_h ','line_number':161,'multiline':True]