['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::PlainObject','line_number':26,'multiline':False]['text':' Ensure that all snapshot which are encoded can safely be used for','line_number':70,'multiline':False]['text':' bailouts.','line_number':71,'multiline':False]['text':' For fun.call(this, ...); the reconstructStackDepth will','line_number':89,'multiline':False]['text':' include the this. When inlining that is not included.  So the','line_number':90,'multiline':False]['text':' exprStackSlots will be one less.','line_number':91,'multiline':False]['text':' With accessors, we have different stack depths depending on','line_number':94,'multiline':False]['text':' whether or not we inlined the accessor, as the inlined stack','line_number':95,'multiline':False]['text':' contains a callee function that should never have been there','line_number':96,'multiline':False]['text':' and we might just be capturing an uneventful property site,','line_number':97,'multiline':False]['text':' in which case there won't have been any violence.','line_number':98,'multiline':False]['text':' Test if we honor the maximum of arguments at all times.  This is a sanity','line_number':106,'multiline':False]['text':' check and not an algorithm limit. So check might be a bit too loose.  +4','line_number':107,'multiline':False]['text':' to account for scope chain, return value, this value and maybe','line_number':108,'multiline':False]['text':' arguments_object.','line_number':109,'multiline':False]['text':' MIRType::Float32 is a specialization embedding the fact that the result is','line_number':348,'multiline':False]['text':' rounded to a Float32.','line_number':349,'multiline':False]['text':' MIRType::Float32 is a specialization embedding the fact that the result is','line_number':379,'multiline':False]['text':' rounded to a Float32.','line_number':380,'multiline':False]['text':' MIRType::Float32 is a specialization embedding the fact that the','line_number':413,'multiline':False]['text':' result is rounded to a Float32.','line_number':414,'multiline':False]['text':' MIRType::Float32 is a specialization embedding the fact that the result is','line_number':449,'multiline':False]['text':' rounded to a Float32.','line_number':450,'multiline':False]['text':' MIRType::Float32 is a specialization embedding the fact that the result is','line_number':1118,'multiline':False]['text':' rounded to a Float32.','line_number':1119,'multiline':False]['text':' x ? x : 0.0','line_number':1330,'multiline':False]['text':' See CodeGenerator::visitNewObjectVMCall','line_number':1512,'multiline':False]['text':' See CodeGenerator::visitNewPlainObject.','line_number':1554,'multiline':False]['text':' Skip unused shape field.','line_number':1585,'multiline':False]['text':' See CodeGenerator::visitCreateThisWithTemplate','line_number':1703,'multiline':False]['text':' For simplicity, we capture directly the object instead of the elements','line_number':1876,'multiline':False]['text':' pointer.','line_number':1877,'multiline':False]['text':' skip the unused operand.','line_number':1923,'multiline':False]