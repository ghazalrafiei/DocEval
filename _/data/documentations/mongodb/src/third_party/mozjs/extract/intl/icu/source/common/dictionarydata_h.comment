['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
* Copyright (C) 2014, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* dictionarydata.h
*
* created on: 2012may31
* created by: Markus W. Scherer & Maxime Serrano
','line_number':3,'multiline':True]['text':' = 0;','line_number':34,'multiline':False]['text':' = 1;','line_number':35,'multiline':False]['text':' = 7;','line_number':36,'multiline':False]['text':' = 8;','line_number':37,'multiline':False]['text':' = 0;','line_number':39,'multiline':False]['text':' = 0x1000000;','line_number':40,'multiline':False]['text':' = 0x7f000000;','line_number':41,'multiline':False]['text':' = 0x1fffff;','line_number':42,'multiline':False]['text':' Byte offsets from the start of the data, after the generic header.','line_number':45,'multiline':False]['text':' Trie type: TRIE_HAS_VALUES | TRIE_TYPE_BYTES etc.','line_number':51,'multiline':False]['text':' Transform specification: TRANSFORM_TYPE_OFFSET | 0xe00 etc.','line_number':53,'multiline':False]['text':'*
 * Wrapper class around generic dictionaries, implementing matches().
 * getType() should return a TRIE_TYPE_??? constant from DictionaryData.
 * 
 * All implementations of this interface must be thread-safe if they are to be used inside of the
 * dictionary-based break iteration code.
 ','line_number':62,'multiline':True]['text':' this should emulate CompactTrieDictionary::matches()','line_number':73,'multiline':False]['text':'  @param text      The text in which to look for matching words. Matching begins
     *                   at the current position of the UText.
     *  @param maxLength The max length of match to consider. Units are the native indexing
     *                   units of the UText.
     *  @param limit     Capacity of output arrays, which is also the maximum number of
     *                   matching words to be found.
     *  @param lengths   output array, filled with the lengths of the matches, in order,
     *                   from shortest to longest. Lengths are in native indexing units
     *                   of the UText. May be NULL.
     *  @param cpLengths output array, filled with the lengths of the matches, in order,
     *                   from shortest to longest. Lengths are the number of Unicode code points.
     *                   May be NULL.
     *  @param values    Output array, filled with the values associated with the words found.
     *                   May be NULL.
     *  @param prefix    Output parameter, the code point length of the prefix match, even if that
     *                   prefix didn't lead to a complete word. Will always be >= the cpLength
     *                   of the longest complete word matched. May be NULL.
     *  @return          Number of matching words found.
     ','line_number':74,'multiline':True]['text':'* @return DictionaryData::TRIE_TYPE_XYZ ','line_number':97,'multiline':True]['text':' Implementation of the DictionaryMatcher interface for a UCharsTrie dictionary','line_number':101,'multiline':False]['text':' constructs a new UCharsDictionaryMatcher.','line_number':104,'multiline':False]['text':' The UDataMemory * will be closed on this object's destruction.','line_number':105,'multiline':False]['text':' Implementation of the DictionaryMatcher interface for a BytesTrie dictionary','line_number':117,'multiline':False]['text':' constructs a new BytesTrieDictionaryMatcher','line_number':120,'multiline':False]['text':' the transform constant should be the constant read from the file, not a masked version!','line_number':121,'multiline':False]['text':' the UDataMemory * fed in here will be closed on this object's destruction','line_number':122,'multiline':False]['text':'*
 * Format of dictionary .dict data files.
 * Format version 1.0.
 *
 * A dictionary .dict data file contains a byte-serialized BytesTrie or
 * a UChars-serialized UCharsTrie.
 * Such files are used in dictionary-based break iteration (DBBI).
 *
 * For a BytesTrie, a transformation type is specified for
 * transforming Unicode strings into byte sequences.
 *
 * A .dict file begins with a standard ICU data file header
 * (DataHeader, see ucmndata.h and unicode/udata.h).
 * The UDataInfo.dataVersion field is currently unused (set to 0.0.0.0).
 *
 * After the header, the file contains the following parts.
 * Constants are defined in the DictionaryData class.
 *
 * For the data structure of BytesTrie & UCharsTrie see
 * http://site.icu-project.org/design/struct/tries
 * and the bytestrie.h and ucharstrie.h header files.
 *
 * int32_t indexes[indexesLength]; -- indexesLength=indexes[IX_STRING_TRIE_OFFSET]/4;
 *
 *      The first four indexes are byte offsets in ascending order.
 *      Each byte offset marks the start of the next part in the data file,
 *      and the end of the previous one.
 *      When two consecutive byte offsets are the same, then the corresponding part is empty.
 *      Byte offsets are offsets from after the header,
 *      that is, from the beginning of the indexes[].
 *      Each part starts at an offset with proper alignment for its data.
 *      If necessary, the previous part may include padding bytes to achieve this alignment.
 *
 *      trieType=indexes[IX_TRIE_TYPE] defines the trie type.
 *      transform=indexes[IX_TRANSFORM] defines the Unicode-to-bytes transformation.
 *          If the transformation type is TRANSFORM_TYPE_OFFSET,
 *          then the lower 21 bits contain the offset code point.
 *          Each code point c is mapped to byte b = (c - offset).
 *          Code points outside the range offset..(offset+0xff) cannot be mapped
 *          and do not occur in the dictionary.
 *
 * stringTrie; -- a serialized BytesTrie or UCharsTrie
 *
 *      The dictionary maps strings to specific values (TRIE_HAS_VALUES bit set in trieType),
 *      or it maps all strings to 0 (TRIE_HAS_VALUES bit not set).
 ','line_number':143,'multiline':True]['text':' !UCONFIG_NO_BREAK_ITERATION ','line_number':190,'multiline':True]['text':' __DICTIONARYDATA_H__ ','line_number':191,'multiline':True]