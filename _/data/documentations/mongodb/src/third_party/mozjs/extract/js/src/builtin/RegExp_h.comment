['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':'
 * The following builtin natives are extern'd for pointer comparison in
 * other parts of the engine.
 ','line_number':12,'multiline':True]['text':'
 * Legacy behavior of ExecuteRegExp(), which is baked into the JSAPI.
 *
 * |res| may be nullptr if the RegExpStatics are not to be updated.
 * |input| may be nullptr if there is no JSString corresponding to
 * |chars| and |length|.
 ','line_number':21,'multiline':True]['text':' Translation from MatchPairs to a JS array in regexp_exec()'s output format.','line_number':34,'multiline':False]['text':'
 * The following functions are for use by self-hosted code.
 ','line_number':72,'multiline':True]['text':'
 * Behaves like RegExp(source, flags).
 * |source| must be a valid regular expression pattern, |flags| is a raw
 * integer value representing the regular expression flags.
 * Must be called without |new|.
 *
 * Dedicated function for RegExp.prototype[@@replace] and
 * RegExp.prototype[@@split] optimized paths.
 ','line_number':76,'multiline':True]['text':' RegExp ClassSpec members used in RegExpObject.cpp.','line_number':121,'multiline':False]['text':' Used in RegExpObject::isOriginalFlagGetter.','line_number':128,'multiline':False]['text':' namespace js ','line_number':144,'multiline':True]['text':' builtin_RegExp_h ','line_number':146,'multiline':True]