['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Avoid ebp, which is the FramePointer, which is unavailable in some modes.','line_number':68,'multiline':False]['text':' We have no arg regs, so our NonArgRegs are just our CallTempReg*','line_number':76,'multiline':False]['text':' These registers may be volatile or nonvolatile.','line_number':92,'multiline':False]['text':' This register may be volatile or nonvolatile. Avoid xmm7 which is the','line_number':98,'multiline':False]['text':' ScratchDoubleReg_.','line_number':99,'multiline':False]['text':' These registers may be volatile or nonvolatile.','line_number':103,'multiline':False]['text':' Note: these three registers are all guaranteed to be different','line_number':104,'multiline':False]['text':' This register is guaranteed to be clobberable during the prologue and','line_number':109,'multiline':False]['text':' epilogue of an ABI call which must preserve both ABI argument, return','line_number':110,'multiline':False]['text':' and non-volatile registers.','line_number':111,'multiline':False]['text':' TLS pointer argument register for WebAssembly functions. This must not alias','line_number':114,'multiline':False]['text':' any other register used for passing function arguments or return values.','line_number':115,'multiline':False]['text':' Preserved by WebAssembly functions.','line_number':116,'multiline':False]['text':' Registers used for asm.js/wasm table calls. These registers must be disjoint','line_number':119,'multiline':False]['text':' from the ABI argument registers, WasmTlsReg and each other.','line_number':120,'multiline':False]['text':' Register used as a scratch along the return path in the fast js -> wasm stub','line_number':126,'multiline':False]['text':' code.  This must not overlap ReturnReg, JSReturnOperand, or WasmTlsReg. It','line_number':127,'multiline':False]['text':' must be a volatile register.','line_number':128,'multiline':False]['text':' Register used to store a reference to an exception thrown by Wasm to an','line_number':131,'multiline':False]['text':' exception handling block. Should not overlap with WasmTlsReg.','line_number':132,'multiline':False]['text':' Not enough registers for a PC register (R0-R2 use 2 registers each).','line_number':138,'multiline':False]['text':' Registerd used in RegExpMatcher instruction (do not use JSReturnOperand).','line_number':141,'multiline':False]['text':' Registerd used in RegExpTester instruction (do not use ReturnReg).','line_number':146,'multiline':False]['text':' GCC stack is aligned on 16 bytes. Ion does not maintain this for internal','line_number':151,'multiline':False]['text':' calls. wasm code does.','line_number':152,'multiline':False]['text':' See comments in wasm::GenerateFunctionPrologue.  The difference between these','line_number':185,'multiline':False]['text':' is the size of the largest callable prologue on the platform.  (We could make','line_number':186,'multiline':False]['text':' the tail offset 3, but I have opted for 4 as that results in a better-aligned','line_number':187,'multiline':False]['text':' branch target.)','line_number':188,'multiline':False]['text':' namespace jit','line_number':202,'multiline':False]['text':' namespace js','line_number':203,'multiline':False]['text':' Return operand from a JS -> JS call.','line_number':232,'multiline':False]['text':' Copy the assembly code to the given buffer, and perform any pending','line_number':262,'multiline':False]['text':' relocations relying on the target address.','line_number':263,'multiline':False]['text':' Actual assembly emitting functions.','line_number':275,'multiline':False]['text':' Use xor for setting registers to zero, as it is specially optimized','line_number':336,'multiline':False]['text':' for this purpose on modern hardware. Note that it does clobber FLAGS','line_number':337,'multiline':False]['text':' though.','line_number':338,'multiline':False]['text':' Put a placeholder value in the instruction stream.','line_number':356,'multiline':False]['text':' Emit a CALL or CMP (nop) instruction. ToggleCall can be used to patch','line_number':509,'multiline':False]['text':' this instruction.','line_number':510,'multiline':False]['text':' Size of a call instruction.','line_number':520,'multiline':False]['text':' Re-routes pending jumps to an external target, flushing the label in the','line_number':524,'multiline':False]['text':' process.','line_number':525,'multiline':False]['text':' Move a 32-bit immediate into a register where the immediate can be','line_number':540,'multiline':False]['text':' patched.','line_number':541,'multiline':False]['text':' Load from *(base + disp32) where disp32 can be patched.','line_number':547,'multiline':False]['text':' Store to *(base + disp32) where disp32 can be patched.','line_number':732,'multiline':False]['text':' Load from *(addr + index*scale) where addr can be patched.','line_number':919,'multiline':False]['text':' Load from *src where src can be patched.','line_number':926,'multiline':False]['text':' Store to *dest where dest can be patched.','line_number':988,'multiline':False]['text':' Get a register in which we plan to put a quantity that will be used as an','line_number':1043,'multiline':False]['text':' integer argument.  This differs from GetIntArgReg in that if we have no more','line_number':1044,'multiline':False]['text':' actual argument registers to use we will fall back on using whatever','line_number':1045,'multiline':False]['text':' CallTempReg* don't overlap the argument registers, and only fail once those','line_number':1046,'multiline':False]['text':' run out too.','line_number':1047,'multiline':False]['text':' namespace jit','line_number':1057,'multiline':False]['text':' namespace js','line_number':1058,'multiline':False]['text':' jit_x86_Assembler_x86_h ','line_number':1060,'multiline':True]