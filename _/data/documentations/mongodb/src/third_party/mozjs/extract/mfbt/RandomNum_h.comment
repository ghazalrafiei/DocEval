['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' Routines for generating random numbers ','line_number':7,'multiline':True]['text':'*
 *  Generate a cryptographically secure random 64-bit unsigned number using the
 *  best facilities available on the current OS.
 *
 *  Useful whenever a secure random number is needed and NSS isn't available.
 *  (Perhaps because it hasn't been initialized yet)
 *
 *  Current mechanisms:
 *    Windows: RtlGenRandom()
 *    Android, Darwin, DragonFly, FreeBSD, OpenBSD, NetBSD: arc4random()
 *    Linux: getrandom() if available, "/dev/urandom" otherwise
 *    Other Unix: "/dev/urandom"
 *
 ','line_number':17,'multiline':True]['text':'*
 *  Like RandomUint64, but always returns a uint64_t or crashes with an assert
 *  if the underlying RandomUint64 call failed.
 ','line_number':33,'multiline':True]['text':' namespace mozilla','line_number':39,'multiline':False]['text':' mozilla_RandomNum_h_','line_number':41,'multiline':False]