['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' See documentation for ScratchTagScope and ScratchTagScopeRelease in','line_number':41,'multiline':False]['text':' MacroAssembler-x64.h.','line_number':42,'multiline':False]['text':' Negate','line_number':78,'multiline':False]['text':' Shift operations','line_number':81,'multiline':False]['text':' doubleword swap bytes','line_number':97,'multiline':False]['text':' load','line_number':103,'multiline':False]['text':' store','line_number':107,'multiline':False]['text':' arithmetic based ops','line_number':111,'multiline':False]['text':' add','line_number':112,'multiline':False]['text':' subtract','line_number':128,'multiline':False]['text':' multiplies.  For now, there are only few that we care about.','line_number':139,'multiline':False]['text':' stack','line_number':144,'multiline':False]['text':' branches when done from within mips-specific code','line_number':149,'multiline':False]['text':' fp instructions','line_number':167,'multiline':False]['text':' These functions abstract the access to high part of the double precision','line_number':185,'multiline':False]['text':' float register. They are intended to work on both 32 bit and 64 bit','line_number':186,'multiline':False]['text':' floating point coprocessor.','line_number':187,'multiline':False]['text':' Raw GC pointer relocations and Value relocations both end up in','line_number':245,'multiline':False]['text':' TraceOneDataRelocation.','line_number':246,'multiline':False]['text':' Emit a branch that can be toggled to a non-operation. On MIPS64 we use','line_number':295,'multiline':False]['text':' "andi" instruction to toggle the branch.','line_number':296,'multiline':False]['text':' See ToggleToJmp(), ToggleToCmp().','line_number':297,'multiline':False]['text':' Emit a "jalr" or "nop" instruction. ToggleCall can be used to patch','line_number':300,'multiline':False]['text':' this instruction.','line_number':301,'multiline':False]['text':' Six instructions used in: MacroAssemblerMIPS64Compat::toggledCall','line_number':305,'multiline':False]['text':' unboxing code','line_number':367,'multiline':False]['text':' boxing code','line_number':444,'multiline':False]['text':' Extended unboxing API. If the payload is already in a register, returns','line_number':448,'multiline':False]['text':' that register. Otherwise, provides a move to the given scratch register,','line_number':449,'multiline':False]['text':' and returns that.','line_number':450,'multiline':False]['text':' higher level tag testing code','line_number':504,'multiline':False]['text':'///////////////////////////////////////////////////////////////','line_number':617,'multiline':False]['text':' Common interface.','line_number':618,'multiline':False]['text':'///////////////////////////////////////////////////////////////','line_number':619,'multiline':False]['text':' The following functions are exposed for use in platform-shared code.','line_number':621,'multiline':False]['text':' NOTE: This will use second scratch on MIPS64. Only ARM needs the','line_number':713,'multiline':False]['text':' implementation without second scratch.','line_number':714,'multiline':False]['text':' If source is a double, load it into dest. If source is int32,','line_number':770,'multiline':False]['text':' convert it to double. Else, branch to failure.','line_number':771,'multiline':False]['text':' Instrumentation for entering and leaving the profiler.','line_number':823,'multiline':False]['text':' namespace jit','line_number':830,'multiline':False]['text':' namespace js','line_number':831,'multiline':False]['text':' jit_mips64_MacroAssembler_mips64_h ','line_number':833,'multiline':True]