['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::ThreadData','line_number':14,'multiline':False]['text':' Parameters to notify().','line_number':42,'multiline':False]['text':' Being asked to wake up by another thread','line_number':44,'multiline':False]['text':' Interrupt requested','line_number':45,'multiline':False]['text':' Result codes from wait() and atomics_wait_impl().','line_number':48,'multiline':False]['text':' Error has been reported, just propagate error signal','line_number':50,'multiline':False]['text':' Did not wait because the values differed','line_number':51,'multiline':False]['text':' Waited and was woken','line_number':52,'multiline':False]['text':' Waited and timed out','line_number':53,'multiline':False]['text':' Block the calling thread and wait.','line_number':56,'multiline':False]['text':'','line_number':57,'multiline':False]['text':' The futex lock must be held around this call.','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' The timeout is the number of milliseconds, with fractional','line_number':60,'multiline':False]['text':' times allowed; specify mozilla::Nothing() for an indefinite','line_number':61,'multiline':False]['text':' wait.','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':' wait() will not wake up spuriously.','line_number':64,'multiline':False]['text':' Notify the thread this is associated with.','line_number':69,'multiline':False]['text':'','line_number':70,'multiline':False]['text':' The futex lock must be held around this call.  (The sleeping','line_number':71,'multiline':False]['text':' thread will not wake up until the caller of Atomics.notify()','line_number':72,'multiline':False]['text':' releases the lock.)','line_number':73,'multiline':False]['text':'','line_number':74,'multiline':False]['text':' If the thread is not waiting then this method does nothing.','line_number':75,'multiline':False]['text':'','line_number':76,'multiline':False]['text':' If the thread is waiting in a call to wait() and the','line_number':77,'multiline':False]['text':' reason is NotifyExplicit then the wait() call will return','line_number':78,'multiline':False]['text':' with Woken.','line_number':79,'multiline':False]['text':'','line_number':80,'multiline':False]['text':' If the thread is waiting in a call to wait() and the','line_number':81,'multiline':False]['text':' reason is NotifyForJSInterrupt then the wait() will return','line_number':82,'multiline':False]['text':' with WaitingNotifiedForInterrupt; in the latter case the caller','line_number':83,'multiline':False]['text':' of wait() must handle the interrupt.','line_number':84,'multiline':False]['text':' If canWait() returns false (the default) then wait() is disabled','line_number':89,'multiline':False]['text':' on the thread to which the FutexThread belongs.','line_number':90,'multiline':False]['text':' We are not waiting or woken','line_number':97,'multiline':False]['text':' We are waiting, nothing has happened yet','line_number':98,'multiline':False]['text':' We are waiting, but have been interrupted,','line_number':99,'multiline':False]['text':'   and have not yet started running the','line_number':100,'multiline':False]['text':'   interrupt handler','line_number':101,'multiline':False]['text':' We are waiting, but have been interrupted','line_number':102,'multiline':False]['text':'   and are running the interrupt handler','line_number':103,'multiline':False]['text':' Woken by a script call to Atomics.notify','line_number':104,'multiline':False]['text':' Condition variable that this runtime will wait on.','line_number':107,'multiline':False]['text':' Current futex state for this runtime.  When not in a wait this','line_number':110,'multiline':False]['text':' is Idle; when in a wait it is Waiting or the reason the futex','line_number':111,'multiline':False]['text':' is about to wake up.','line_number':112,'multiline':False]['text':' Shared futex lock for all runtimes.  We can perhaps do better,','line_number':115,'multiline':False]['text':' but any lock will need to be per-domain (consider SharedWorker)','line_number':116,'multiline':False]['text':' or coarser.','line_number':117,'multiline':False]['text':' A flag that controls whether waiting is allowed.','line_number':120,'multiline':False]['text':' Go to sleep if the int32_t value at the given address equals `value`.','line_number':124,'multiline':False]['text':' Go to sleep if the int64_t value at the given address equals `value`.','line_number':129,'multiline':False]['text':' Notify some waiters on the given address.  If `count` is negative then notify','line_number':134,'multiline':False]['text':' all.  The return value is nonnegative and is the number of waiters woken.  If','line_number':135,'multiline':False]['text':' the number of waiters woken exceeds INT64_MAX then this never returns.  If','line_number':136,'multiline':False]['text':' `count` is nonnegative then the return value is never greater than `count`.','line_number':137,'multiline':False]['text':' namespace js ','line_number':141,'multiline':True]['text':' builtin_AtomicsObject_h ','line_number':143,'multiline':True]