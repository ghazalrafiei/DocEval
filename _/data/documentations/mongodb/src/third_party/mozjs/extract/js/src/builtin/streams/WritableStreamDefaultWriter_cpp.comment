['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Class WritableStreamDefaultWriter. ','line_number':7,'multiline':True]['text':' MOZ_ASSERT','line_number':11,'multiline':False]['text':' JS_ReportErrorASCII, JS_ReportErrorNumberASCII','line_number':13,'multiline':False]['text':' JS_STREAMS_CLASS_SPEC','line_number':15,'multiline':False]['text':' js::ReturnPromiseRejectedWithPendingError','line_number':16,'multiline':False]['text':' js::WritableStream','line_number':17,'multiline':False]['text':' js::WritableStreamCloseQueuedOrInFlight','line_number':18,'multiline':False]['text':' js::WritableStreamDefaultWriter{Abort,GetDesiredSize,Release,Write}','line_number':19,'multiline':False]['text':' JS::CallArgs{,FromVp}','line_number':20,'multiline':False]['text':' js::ClassSpec, JS_NULL_CLASS_OPS','line_number':21,'multiline':False]['text':' js::GetErrorMessage, JSMSG_*','line_number':22,'multiline':False]['text':' JS{Function,Property}Spec, JS_{FS,PS}_END, JS_{FN,PSG}','line_number':23,'multiline':False]['text':' JS::Handle','line_number':24,'multiline':False]['text':' JS::Value','line_number':25,'multiline':False]['text':' JS::Compartment','line_number':26,'multiline':False]['text':' JSContext','line_number':27,'multiline':False]['text':' js::PromiseObject, js::PromiseResolvedWithUndefined','line_number':28,'multiline':False]['text':' js::SetSettledPromiseIsHandled','line_number':30,'multiline':False]['text':' JS::Compartment::wrap, js::UnwrapAndTypeCheck{Argument,This}','line_number':31,'multiline':False]['text':' js::NewObjectWithClassProto','line_number':32,'multiline':False]['text':' js::ThrowIfNotConstructing','line_number':33,'multiline':False]['text':' js::AutoRealm','line_number':34,'multiline':False]['text':'** 4.5. Class WritableStreamDefaultWriter ********************************','line_number':55,'multiline':True]['text':'*
 * Stream spec, 4.5.3. new WritableStreamDefaultWriter(stream)
 * Steps 3-9.
 ','line_number':57,'multiline':True]['text':' = nullptr ','line_number':64,'multiline':True]['text':' Step 3: Set this.[[ownerWritableStream]] to stream.','line_number':71,'multiline':False]['text':' Step 4 is moved to the end.','line_number':80,'multiline':False]['text':' Step 5: Let state be stream.[[state]].','line_number':82,'multiline':False]['text':' Step 6: If state is "writable",','line_number':83,'multiline':False]['text':' Step 6.a: If ! WritableStreamCloseQueuedOrInFlight(stream) is false and','line_number':85,'multiline':False]['text':'           stream.[[backpressure]] is true, set this.[[readyPromise]] to a','line_number':86,'multiline':False]['text':'           new promise.','line_number':87,'multiline':False]['text':' Step 6.b: Otherwise, set this.[[readyPromise]] to a promise resolved with','line_number':93,'multiline':False]['text':'           undefined.','line_number':94,'multiline':False]['text':' Step 6.c: Set this.[[closedPromise]] to a new promise.','line_number':103,'multiline':False]['text':' Step 8: Otherwise, if state is "closed",','line_number':111,'multiline':False]['text':' Step 8.a: Set this.[[readyPromise]] to a promise resolved with undefined.','line_number':113,'multiline':False]['text':' Step 8.b: Set this.[[closedPromise]] to a promise resolved with','line_number':121,'multiline':False]['text':'           undefined.','line_number':122,'multiline':False]['text':' Wrap stream.[[StoredError]] just once for either step 7 or step 9.','line_number':130,'multiline':False]['text':' Step 7: Otherwise, if state is "erroring",','line_number':136,'multiline':False]['text':' Step 7.a: Set this.[[readyPromise]] to a promise rejected with','line_number':138,'multiline':False]['text':'           stream.[[storedError]].','line_number':139,'multiline':False]['text':' Step 7.b: Set this.[[readyPromise]].[[PromiseIsHandled]] to true.','line_number':148,'multiline':False]['text':' Step 7.c: Set this.[[closedPromise]] to a new promise.','line_number':151,'multiline':False]['text':' Step 9: Otherwise,','line_number':159,'multiline':False]['text':' Step 9.a: Assert: state is "errored".','line_number':161,'multiline':False]['text':' Step 9.b: Let storedError be stream.[[storedError]].','line_number':166,'multiline':False]['text':' Step 9.c: Set this.[[readyPromise]] to a promise rejected with','line_number':167,'multiline':False]['text':'           storedError.','line_number':168,'multiline':False]['text':' Step 9.d: Set this.[[readyPromise]].[[PromiseIsHandled]] to true.','line_number':176,'multiline':False]['text':' Step 9.e: Set this.[[closedPromise]] to a promise rejected with','line_number':179,'multiline':False]['text':'           storedError.','line_number':180,'multiline':False]['text':' Step 9.f: Set this.[[closedPromise]].[[PromiseIsHandled]] to true.','line_number':188,'multiline':False]['text':' Step 4 (reordered): Set stream.[[writer]] to this.','line_number':193,'multiline':False]['text':' Doing this last prevents a partially-initialized writer from being attached','line_number':194,'multiline':False]['text':' to the stream (and possibly left there on OOM).','line_number':195,'multiline':False]['text':'*
 * Streams spec, 4.5.3.
 * new WritableStreamDefaultWriter(stream)
 ','line_number':208,'multiline':True]['text':' Step 1: If ! IsWritableStream(stream) is false, throw a TypeError','line_number':223,'multiline':False]['text':'         exception.','line_number':224,'multiline':False]['text':' Step 2: If ! IsWritableStreamLocked(stream) is true, throw a TypeError','line_number':232,'multiline':False]['text':'         exception.','line_number':233,'multiline':False]['text':' Implicit in the spec: Find the prototype object to use.','line_number':240,'multiline':False]['text':' Steps 3-9.','line_number':246,'multiline':False]['text':'*
 * Streams spec, 4.5.4.1. get closed
 ','line_number':257,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':265,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':266,'multiline':False]['text':' Step 2: Return this.[[closedPromise]].','line_number':274,'multiline':False]['text':'*
 * Streams spec, 4.5.4.2. get desiredSize
 ','line_number':284,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, throw a','line_number':292,'multiline':False]['text':'         TypeError exception.','line_number':293,'multiline':False]['text':' Step 2: If this.[[ownerWritableStream]] is undefined, throw a TypeError','line_number':301,'multiline':False]['text':'         exception.','line_number':302,'multiline':False]['text':' Step 3: Return ! WritableStreamDefaultWriterGetDesiredSize(this).','line_number':310,'multiline':False]['text':'*
 * Streams spec, 4.5.4.3. get ready
 ','line_number':321,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':329,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':330,'multiline':False]['text':' Step 2: Return this.[[readyPromise]].','line_number':338,'multiline':False]['text':'*
 * Streams spec, 4.5.4.4. abort(reason)
 ','line_number':348,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':356,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':357,'multiline':False]['text':' Step 2: If this.[[ownerWritableStream]] is undefined, return a promise','line_number':365,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':366,'multiline':False]['text':' Step 3: Return ! WritableStreamDefaultWriterAbort(this, reason).','line_number':373,'multiline':False]['text':'*
 * Streams spec, 4.5.4.5. close()
 ','line_number':385,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':393,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':394,'multiline':False]['text':' Step 2: Let stream be this.[[ownerWritableStream]].','line_number':402,'multiline':False]['text':' Step 3: If stream is undefined, return a promise rejected with a TypeError','line_number':403,'multiline':False]['text':'         exception.','line_number':404,'multiline':False]['text':' Step 4: If ! WritableStreamCloseQueuedOrInFlight(stream) is true, return a','line_number':416,'multiline':False]['text':'         promise rejected with a TypeError exception.','line_number':417,'multiline':False]['text':' Step 5: Return ! WritableStreamDefaultWriterClose(this).','line_number':424,'multiline':False]['text':'*
 * Streams spec, 4.5.4.6. releaseLock()
 ','line_number':435,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':443,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':444,'multiline':False]['text':' Step 2: Let stream be this.[[ownerWritableStream]].','line_number':452,'multiline':False]['text':' Step 3: If stream is undefined, return.','line_number':453,'multiline':False]['text':' Step 4: Assert: stream.[[writer]] is not undefined.','line_number':459,'multiline':False]['text':' Step 5: Perform ! WritableStreamDefaultWriterRelease(this).','line_number':471,'multiline':False]['text':'*
 * Streams spec, 4.5.4.7. write(chunk)
 ','line_number':480,'multiline':True]['text':' Step 1: If ! IsWritableStreamDefaultWriter(this) is false, return a promise','line_number':488,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':489,'multiline':False]['text':' Step 2: If this.[[ownerWritableStream]] is undefined, return a promise','line_number':497,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':498,'multiline':False]['text':' Step 3: Return this.[[readyPromise]].','line_number':505,'multiline':False]