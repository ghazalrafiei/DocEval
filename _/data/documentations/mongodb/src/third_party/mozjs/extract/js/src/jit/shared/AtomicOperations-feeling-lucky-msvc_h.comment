['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Explicitly exclude tier-1 platforms.','line_number':13,'multiline':False]['text':' For overall documentation, see jit/AtomicOperations.h.','line_number':26,'multiline':False]['text':' Below, _ReadWriteBarrier is a compiler directive, preventing reordering of','line_number':28,'multiline':False]['text':' instructions and reuse of memory values across it in the compiler, but having','line_number':29,'multiline':False]['text':' no impact on what the CPU does.','line_number':30,'multiline':False]['text':' Note, here we use MSVC intrinsics directly.  But MSVC supports a slightly','line_number':32,'multiline':False]['text':' higher level of function which uses the intrinsic when possible (8, 16, and','line_number':33,'multiline':False]['text':' 32-bit operations, and 64-bit operations on 64-bit systems) and otherwise','line_number':34,'multiline':False]['text':' falls back on CMPXCHG8B for 64-bit operations on 32-bit systems.  We could be','line_number':35,'multiline':False]['text':' using those functions in many cases here (though not all).  I have not done','line_number':36,'multiline':False]['text':' so because I don't yet know how far back those functions are supported.','line_number':37,'multiline':False]['text':' Note, _InterlockedCompareExchange takes the *new* value as the second','line_number':39,'multiline':False]['text':' argument and the *comparand* (expected old value) as the third argument.','line_number':40,'multiline':False]['text':' Nothing','line_number':43,'multiline':False]['text':' Nothing','line_number':48,'multiline':False]['text':' The MSDN docs suggest very strongly that if code is compiled for Pentium','line_number':54,'multiline':False]['text':' or better the 64-bit primitives will be lock-free, see eg the "Remarks"','line_number':55,'multiline':False]['text':' secion of the page for _InterlockedCompareExchange64, currently here:','line_number':56,'multiline':False]['text':' https://msdn.microsoft.com/en-us/library/ttk2z1ws%28v=vs.85%29.aspx','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' But I've found no way to assert that at compile time or run time, there','line_number':59,'multiline':False]['text':' appears to be no WinAPI is_lock_free() test.','line_number':60,'multiline':False]['text':' MemoryBarrier is defined in winnt.h, which we don't want to include here.','line_number':70,'multiline':False]['text':' This expression is the expansion of MemoryBarrier.','line_number':71,'multiline':False]['text':' namespace jit','line_number':102,'multiline':False]['text':' namespace js','line_number':103,'multiline':False]['text':' _M_IX86','line_number':104,'multiline':False]['text':' namespace jit','line_number':136,'multiline':False]['text':' namespace js','line_number':137,'multiline':False]['text':' _M_IX86','line_number':138,'multiline':False]['text':' _M_IX86','line_number':161,'multiline':False]['text':' namespace jit','line_number':181,'multiline':False]['text':' namespace js','line_number':182,'multiline':False]['text':' namespace jit','line_number':206,'multiline':False]['text':' namespace js','line_number':207,'multiline':False]['text':' _M_IX86','line_number':239,'multiline':False]['text':' namespace jit','line_number':268,'multiline':False]['text':' namespace js','line_number':269,'multiline':False]['text':' namespace jit','line_number':337,'multiline':False]['text':' namespace js','line_number':338,'multiline':False]['text':' This is also appropriate for double, int64, and uint64 on 32-bit','line_number':347,'multiline':False]['text':' platforms since there are no guarantees of access-atomicity.','line_number':348,'multiline':False]['text':' This is also appropriate for double, int64, and uint64 on 32-bit','line_number':354,'multiline':False]['text':' platforms since there are no guarantees of access-atomicity.','line_number':355,'multiline':False]['text':' jit_shared_AtomicOperations_feeling_lucky_msvc_h','line_number':373,'multiline':False]