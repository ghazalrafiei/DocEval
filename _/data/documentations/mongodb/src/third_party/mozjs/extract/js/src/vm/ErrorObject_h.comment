['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::FunctionFlags','line_number':26,'multiline':False]['text':' This slot is only used for errors that could be Wasm traps.','line_number':60,'multiline':False]['text':' Create an error of the given type corresponding to the provided location','line_number':76,'multiline':False]['text':' info.  If |message| is non-null, then the error will have a .message','line_number':77,'multiline':False]['text':' property with that value; otherwise the error will have no .message','line_number':78,'multiline':False]['text':' property.','line_number':79,'multiline':False]['text':'
   * Assign the initial error shape to the empty object.  (This shape does
   * *not* include .message, which must be added separately if needed; see
   * ErrorObject::init.)
   ','line_number':88,'multiline':True]['text':' Getter and setter for the Error.prototype.stack accessor.','line_number':129,'multiline':False]['text':' Used to distinguish errors created from Wasm traps.','line_number':135,'multiline':False]['text':' namespace js','line_number':152,'multiline':False]['text':' vm_ErrorObject_h_','line_number':159,'multiline':False]