['text':' © 2017 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':' Export an explicit template instantiation of the LocalPointer that is used as a','line_number':20,'multiline':False]['text':' data member of AdoptingModifierStore.','line_number':21,'multiline':False]['text':' (When building DLLs for Windows this is required.)','line_number':22,'multiline':False]['text':' Ignore warning 4661 as LocalPointerBase does not use operator== or operator!=','line_number':25,'multiline':False]['text':' Forward declaration','line_number':39,'multiline':False]['text':' Exported as U_I18N_API because it is needed for the unit test PatternModifierTest','line_number':42,'multiline':False]['text':' Non-const method:','line_number':53,'multiline':False]['text':'*
 * This class is a {@link Modifier} that wraps a decimal format pattern. It applies the pattern's affixes in
 * {@link Modifier#apply}.
 *
 * <p>
 * In addition to being a Modifier, this class contains the business logic for substituting the correct locale symbols
 * into the affixes of the decimal format pattern.
 *
 * <p>
 * In order to use this class, create a new instance and call the following four setters: {@link #setPatternInfo},
 * {@link #setPatternAttributes}, {@link #setSymbols}, and {@link #setNumberProperties}. After calling these four
 * setters, the instance will be ready for use as a Modifier.
 *
 * <p>
 * This is a MUTABLE, NON-THREAD-SAFE class designed for performance. Do NOT save references to this or attempt to use
 * it from multiple threads! Instead, you can obtain a safe, immutable decimal format pattern modifier by calling
 * {@link MutablePatternModifier#createImmutable}, in effect treating this instance as a builder for the immutable
 * variant.
 ','line_number':66,'multiline':True]['text':'*
     * @param isStrong
     *            Whether the modifier should be considered strong. For more information, see
     *            {@link Modifier#isStrong()}. Most of the time, decimal format pattern modifiers should be considered
     *            as non-strong.
     ','line_number':94,'multiline':True]['text':'*
     * Sets a reference to the parsed decimal format pattern, usually obtained from
     * {@link PatternStringParser#parseToPatternInfo(String)}, but any implementation of {@link AffixPatternProvider} is
     * accepted.
     *
     * @param field
     *            Which field to use for literal characters in the pattern.
     ','line_number':102,'multiline':True]['text':'*
     * Sets attributes that imply changes to the literal interpretation of the pattern string affixes.
     *
     * @param signDisplay
     *            Whether to force a plus sign on positive numbers.
     * @param perMille
     *            Whether to substitute the percent sign in the pattern with a permille sign.
     ','line_number':112,'multiline':True]['text':'*
     * Sets locale-specific details that affect the symbols substituted into the pattern string affixes.
     *
     * @param symbols
     *            The desired instance of DecimalFormatSymbols.
     * @param currency
     *            The currency to be used when substituting currency values into the affixes.
     * @param unitWidth
     *            The width used to render currencies.
     * @param rules
     *            Required if the triple currency sign, "¤¤¤", appears in the pattern, which can be determined from the
     *            convenience method {@link #needsPlurals()}.
     * @param status
     *            Set if an error occurs while loading currency data.
     ','line_number':122,'multiline':True]['text':'*
     * Sets attributes of the current number being processed.
     *
     * @param signum
     *            -1 if negative; +1 if positive; or 0 if zero.
     * @param plural
     *            The plural form of the number, required only if the pattern contains the triple
     *            currency sign, "¤¤¤" (and as indicated by {@link #needsPlurals()}).
     ','line_number':140,'multiline':True]['text':'*
     * Returns true if the pattern represented by this MurkyModifier requires a plural keyword in order to localize.
     * This is currently true only if there is a currency long name placeholder in the pattern ("¤¤¤").
     ','line_number':151,'multiline':True]['text':'*
     * Creates a new quantity-dependent Modifier that behaves the same as the current instance, but which is immutable
     * and can be saved for future use. The number properties in the current instance are mutated; all other properties
     * are left untouched.
     *
     * <p>
     * The resulting modifier cannot be used in a QuantityChain.
     *
     * <p>
     * CREATES A NEW HEAP OBJECT; THE CALLER GETS OWNERSHIP.
     *
     * @return An immutable that supports both positive and negative numbers.
     ','line_number':157,'multiline':True]['text':'*
     * Returns the string that substitutes a given symbol type in a pattern.
     ','line_number':191,'multiline':True]['text':' Modifier details (initialized in constructor)','line_number':199,'multiline':False]['text':' Pattern details (initialized in setPatternInfo and setPatternAttributes)','line_number':202,'multiline':False]['text':' Symbol details (initialized in setSymbols)','line_number':208,'multiline':False]['text':' Number details (initialized in setNumberProperties)','line_number':214,'multiline':False]['text':' QuantityChain details (initialized in addToChain)','line_number':218,'multiline':False]['text':' Transient fields for rendering','line_number':221,'multiline':False]['text':'*
     * Uses the current properties to create a single {@link ConstantMultiFieldModifier} with currency spacing support
     * if required.
     *
     * <p>
     * CREATES A NEW HEAP OBJECT; THE CALLER GETS OWNERSHIP.
     *
     * @param a
     *            A working FormattedStringBuilder object; passed from the outside to prevent the need to create many new
     *            instances if this method is called in a loop.
     * @param b
     *            Another working FormattedStringBuilder object.
     * @return The constant modifier object.
     ','line_number':224,'multiline':True]['text':' namespace impl','line_number':248,'multiline':False]['text':' namespace number','line_number':249,'multiline':False]['text':'__NUMBER_PATTERNMODIFIER_H__','line_number':252,'multiline':False]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':254,'multiline':True]