['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2015 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]['text':' ****************************************************************************','line_number':75,'multiline':False]['text':' ModuleGenerator','line_number':76,'multiline':False]['text':' limitedSize= ','line_number':96,'multiline':True]['text':' Remove any pending compilation tasks from the worklist.','line_number':116,'multiline':False]['text':' Wait until all active compilation tasks have finished.','line_number':121,'multiline':False]['text':' failed or finished ','line_number':135,'multiline':True]['text':' Propagate error state.','line_number':142,'multiline':False]['text':' Perform fallible metadata, linkdata, assumption allocations.','line_number':171,'multiline':False]['text':' funcToCodeRange maps function indices to code-range indices and all','line_number':212,'multiline':False]['text':' elements will be initialized by the time module generation is finished.','line_number':213,'multiline':False]['text':' Pre-reserve space for large Vectors to avoid the significant cost of the','line_number':220,'multiline':False]['text':' final reallocs. In particular, the MacroAssembler can be enormous, so be','line_number':221,'multiline':False]['text':' extra conservative. Since large over-reservations may fail when the','line_number':222,'multiline':False]['text':' actual allocations will succeed, ignore OOM failures. Note,','line_number':223,'multiline':False]['text':' shrinkStorageToFit calls at the end will trim off unneeded capacity.','line_number':224,'multiline':False]['text':' Allocate space in TlsData for declarations that need it.','line_number':243,'multiline':False]['text':' Copy type definitions to metadata that are required at runtime,','line_number':275,'multiline':False]['text':' allocating global data so that codegen can find the type id's at','line_number':276,'multiline':False]['text':' runtime.','line_number':277,'multiline':False]['text':' If we allow type indices, then we need to rewrite the index space to','line_number':305,'multiline':False]['text':' account for types that are omitted from metadata, such as function','line_number':306,'multiline':False]['text':' types that fit in an immediate.','line_number':307,'multiline':False]['text':' Do a linear pass to create a map from src index to dest index.','line_number':309,'multiline':False]['text':' Apply the map','line_number':322,'multiline':False]['text':' Accumulate all exported functions:','line_number':345,'multiline':False]['text':' - explicitly marked as such;','line_number':346,'multiline':False]['text':' - implicitly exported by being an element of function tables;','line_number':347,'multiline':False]['text':' - implicitly exported by being the start function;','line_number':348,'multiline':False]['text':' - implicitly exported by being used in global ref.func initializer','line_number':349,'multiline':False]['text':' ModuleEnvironment accumulates this information for us during decoding,','line_number':350,'multiline':False]['text':' transfer it to the FuncExportVector stored in Metadata.','line_number':351,'multiline':False]['text':' Determine whether parallel or sequential compilation is to be used and','line_number':379,'multiline':False]['text':' initialize the CompileTasks that will be used in either mode.','line_number':380,'multiline':False]['text':' Fill in function stubs for each import so that imported functions can be','line_number':407,'multiline':False]['text':' used in all the places that normal function definitions can (table','line_number':408,'multiline':False]['text':' elements, export calls, etc).','line_number':409,'multiline':False]['text':' We assume JumpImmediateRange is defined conservatively enough that the','line_number':440,'multiline':False]['text':' slight difference between 'caller' (which is really the return address','line_number':441,'multiline':False]['text':' offset) and the actual base of the relative displacement computation','line_number':442,'multiline':False]['text':' isn't significant.','line_number':443,'multiline':False]['text':' Create far jumps for calls that have relative offsets that may otherwise','line_number':459,'multiline':False]['text':' go out of range. This method is called both between function bodies (at a','line_number':460,'multiline':False]['text':' frequency determined by the ISA's jump range) and once at the very end of','line_number':461,'multiline':False]['text':' a module's codegen after all possible calls/traps have been emitted.','line_number':462,'multiline':False]['text':' Nothing to do: jit entries are linked in the jump tables.','line_number':554,'multiline':False]['text':' Jumped to by other stubs, so nothing to do.','line_number':573,'multiline':False]['text':' Before merging in new code, if calls in a prior code range might go out of','line_number':604,'multiline':False]['text':' range, insert far jumps to extend the range.','line_number':605,'multiline':False]['text':' All code offsets in 'code' must be incremented by their position in the','line_number':615,'multiline':False]['text':' overall module when the code was appended.','line_number':616,'multiline':False]['text':' This function is now the only owner of maplet.map, so we'd better','line_number':677,'multiline':False]['text':' free it right now.','line_number':678,'multiline':False]['text':' Don't release the lock between updating our state and returning from this','line_number':746,'multiline':False]['text':' method.','line_number':747,'multiline':False]['text':' failed or finished ','line_number':756,'multiline':True]['text':' failed or finished ','line_number':838,'multiline':True]['text':' Call outside of the compilation lock.','line_number':842,'multiline':False]['text':' Do not go over the threshold if we can avoid it: spin off the compilation','line_number':877,'multiline':False]['text':' before appending the function if we would go over.  (Very large single','line_number':878,'multiline':False]['text':' functions may still exceed the threshold but this is fine; it'll be very','line_number':879,'multiline':False]['text':' uncommon and is in any case safely handled by the MacroAssembler's buffer','line_number':880,'multiline':False]['text':' limit logic.)','line_number':881,'multiline':False]['text':' Now that all functions and stubs are generated and their CodeRanges','line_number':919,'multiline':False]['text':' known, patch all calls (which can emit far jumps) and far jumps. Linking','line_number':920,'multiline':False]['text':' can emit tiny far-jump stubs, so there is an ordering dependency here.','line_number':921,'multiline':False]['text':' None of the linking or far-jump operations should emit masm metadata.','line_number':936,'multiline':False]['text':' The stackmaps aren't yet sorted.  Do so now, since we'll need to','line_number':952,'multiline':False]['text':' binary-search them at GC time.','line_number':953,'multiline':False]['text':' The try notes also need to be sorted to simplify lookup.','line_number':956,'multiline':False]['text':' Check that the stackmap contains no duplicates, since that could lead to','line_number':962,'multiline':False]['text':' ambiguities about stack slot pointerness.','line_number':963,'multiline':False]['text':' Assert all sorted metadata is sorted.','line_number':972,'multiline':False]['text':' Try notes should be sorted so that the end of ranges are in rising order','line_number':1000,'multiline':False]['text':' so that the innermost catch handler is chosen.','line_number':1001,'multiline':False]['text':' These Vectors can get large and the excess capacity can be significant,','line_number':1012,'multiline':False]['text':' so realloc them down to size.','line_number':1013,'multiline':False]['text':' Now that all imports/exports are known, we can generate a special','line_number':1045,'multiline':False]['text':' CompiledCode containing stubs.','line_number':1046,'multiline':False]['text':' Finish linking and metadata.','line_number':1060,'multiline':False]['text':' Check that each stackmap is associated with a plausible instruction.','line_number':1079,'multiline':False]['text':' Finish initialization of Metadata, which is only needed for constructing','line_number':1091,'multiline':False]['text':' the initial Module, not for tier-2 compilation.','line_number':1092,'multiline':False]['text':' Copy over data from the ModuleEnvironment.','line_number':1095,'multiline':False]['text':' Copy over additional debug information.','line_number':1110,'multiline':False]['text':' Metadata shouldn't be mutably modified after finishMetadata().','line_number':1144,'multiline':False]['text':' Copy over data from the Bytecode, which is going away at the end of','line_number':1166,'multiline':False]['text':' compilation.','line_number':1167,'multiline':False]['text':' See Module debugCodeClaimed_ comments for why we need to make a separate','line_number':1222,'multiline':False]['text':' debug copy.','line_number':1223,'multiline':False]['text':' All the components are finished, so create the complete Module and start','line_number':1243,'multiline':False]['text':' tier-2 compilation if requested.','line_number':1244,'multiline':False]['text':' Introduce an artificial delay when testing wasmDelayTier2, since we','line_number':1279,'multiline':False]['text':' want to exercise both tier1 and tier2 code in this case.','line_number':1280,'multiline':False]