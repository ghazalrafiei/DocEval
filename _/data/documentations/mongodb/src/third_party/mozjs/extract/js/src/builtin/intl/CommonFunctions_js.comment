['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Portions Copyright Norbert Lindenberg 2011-2012. ','line_number':5,'multiline':True]['text':' Elided assertion.','line_number':17,'multiline':False]['text':'*
 * Returns the start index of a "Unicode locale extension sequence", which the
 * specification defines as: "any substring of a language tag that starts with
 * a separator '-' and the singleton 'u' and includes the maximum sequence of
 * following non-singleton subtags and their preceding '-' separators."
 *
 * Alternatively, this may be defined as: the components of a language tag that
 * match the `unicode_locale_extensions` production in UTS 35.
 *
 * Spec: ECMAScript Internationalization API Specification, 6.2.1.
 ','line_number':20,'multiline':True]['text':' Search for "-u-" marking the start of a Unicode extension sequence.','line_number':34,'multiline':False]['text':' And search for "-x-" marking the start of any privateuse component to','line_number':39,'multiline':False]['text':' handle the case when "-u-" was only found within a privateuse subtag.','line_number':40,'multiline':False]['text':'*
 * Returns the end index of a Unicode locale extension sequence.
 ','line_number':48,'multiline':True]['text':' Search for the start of the next singleton or privateuse subtag.','line_number':60,'multiline':False]['text':'','line_number':61,'multiline':False]['text':' Begin searching after the smallest possible Unicode locale extension','line_number':62,'multiline':False]['text':' sequence, namely |"-u-" 2alphanum|. End searching once the remaining','line_number':63,'multiline':False]['text':' characters can't fit the smallest possible singleton or privateuse','line_number':64,'multiline':False]['text':' subtag, namely |"-x-" alphanum|. Note the reduced end-limit means','line_number':65,'multiline':False]['text':' indexing inside the loop is always in-range.','line_number':66,'multiline':False]['text':' Skip over (i + 1) and (i + 2) because we've just verified they','line_number':73,'multiline':False]['text':' aren't "-", so the next possible delimiter can only be at (i + 3).','line_number':74,'multiline':False]['text':' If no singleton or privateuse subtag was found, the Unicode extension','line_number':80,'multiline':False]['text':' sequence extends until the end of the string.','line_number':81,'multiline':False]['text':'*
 * Removes Unicode locale extension sequences from the given language tag.
 ','line_number':85,'multiline':True]['text':'*
 * Returns Unicode locale extension sequences from the given language tag.
 ','line_number':108,'multiline':True]['text':'*
 * Returns true if the input contains only ASCII alphabetical characters.
 ','line_number':121,'multiline':True]['text':'*
 * Returns the BCP 47 language tag for the host environment's current locale.
 *
 * Spec: ECMAScript Internationalization API Specification, 6.2.4.
 ','line_number':140,'multiline':True]['text':' If we didn't have a cache hit, compute the candidate default locale.','line_number':149,'multiline':False]['text':' Cache the computed locale until the runtime default locale changes.','line_number':157,'multiline':False]['text':'*
 * Canonicalizes a locale list.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.1.
 ','line_number':164,'multiline':True]['text':' Step 1.','line_number':170,'multiline':False]['text':' Step 3 (and the remaining steps).','line_number':174,'multiline':False]['text':' Step 2.','line_number':182,'multiline':False]['text':' Step 4.','line_number':185,'multiline':False]['text':' Step 5.','line_number':188,'multiline':False]['text':' Step 6.','line_number':191,'multiline':False]['text':' Step 7.','line_number':194,'multiline':False]['text':' Steps 7.a-c.','line_number':196,'multiline':False]['text':' Step 7.c.i.','line_number':198,'multiline':False]['text':' Step 7.c.ii.','line_number':201,'multiline':False]['text':' Steps 7.c.iii-iv.','line_number':205,'multiline':False]['text':' Step 7.c.v.','line_number':210,'multiline':False]['text':' Step 7.d.','line_number':215,'multiline':False]['text':' Step 8.','line_number':219,'multiline':False]['text':'*
 * Compares a BCP 47 language tag against the locales in availableLocales
 * and returns the best available match. Uses the fallback
 * mechanism of RFC 4647, section 3.4.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.2.
 * Spec: RFC 4647, section 3.4.
 ','line_number':223,'multiline':True]['text':'*
 * Identical to BestAvailableLocale, but does not consider the default locale
 * during computation.
 ','line_number':235,'multiline':True]['text':'*
 * Compares a BCP 47 language priority list against the set of locales in
 * availableLocales and determines the best available language to meet the
 * request. Options specified through Unicode extension subsequences are
 * ignored in the lookup, but information about such subsequences is returned
 * separately.
 *
 * This variant is based on the Lookup algorithm of RFC 4647 section 3.4.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.3.
 * Spec: RFC 4647, section 3.4.
 ','line_number':243,'multiline':True]['text':' Step 1.','line_number':256,'multiline':False]['text':' Step 2.','line_number':259,'multiline':False]['text':' Step 2.a.','line_number':263,'multiline':False]['text':' Step 2.b.','line_number':266,'multiline':False]['text':' Step 2.c.','line_number':269,'multiline':False]['text':' Step 2.c.i.','line_number':271,'multiline':False]['text':' Step 2.c.ii.','line_number':274,'multiline':False]['text':' Step 2.c.iii.','line_number':278,'multiline':False]['text':' Steps 3-4.','line_number':283,'multiline':False]['text':' Step 5.','line_number':286,'multiline':False]['text':'*
 * Compares a BCP 47 language priority list against the set of locales in
 * availableLocales and determines the best available language to meet the
 * request. Options specified through Unicode extension subsequences are
 * ignored in the lookup, but information about such subsequences is returned
 * separately.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.4.
 ','line_number':290,'multiline':True]['text':' this implementation doesn't have anything better','line_number':300,'multiline':False]['text':'*
 * Returns the Unicode extension value subtags for the requested key subtag.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.5.
 ','line_number':304,'multiline':True]['text':' Step 1.','line_number':316,'multiline':False]['text':' Step 2.','line_number':319,'multiline':False]['text':' Step 3.','line_number':322,'multiline':False]['text':' Step 4.','line_number':325,'multiline':False]['text':' Step 5.','line_number':328,'multiline':False]['text':' Step 5.a.','line_number':330,'multiline':False]['text':' Step 5.b.','line_number':333,'multiline':False]['text':' Step 5.c.','line_number':336,'multiline':False]['text':' Steps 5.d-e.','line_number':339,'multiline':False]['text':' Step 5.e.i.','line_number':341,'multiline':False]['text':' Step 5.e.ii.','line_number':344,'multiline':False]['text':' Step 5.e.iii.','line_number':347,'multiline':False]['text':' Step 5.e.iv.','line_number':351,'multiline':False]['text':' Step 5.e.v.','line_number':357,'multiline':False]['text':' Step 5.f.','line_number':362,'multiline':False]['text':' Step 6.','line_number':366,'multiline':False]['text':' Steps 7-8.','line_number':369,'multiline':False]['text':' Step 9 (implicit).','line_number':373,'multiline':False]['text':'*
 * Compares a BCP 47 language priority list against availableLocales and
 * determines the best available language to meet the request. Options specified
 * through Unicode extension subsequences are negotiated separately, taking the
 * caller's relevant extensions and locale data as well as client-provided
 * options into consideration.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.6.
 ','line_number':376,'multiline':True]['text':' Steps 1-3.','line_number':386,'multiline':False]['text':' Step 4.','line_number':392,'multiline':False]['text':' Step 5.','line_number':396,'multiline':False]['text':' Step 6.','line_number':399,'multiline':False]['text':' Step 7.','line_number':402,'multiline':False]['text':' In this implementation, localeData is a function, not an object.','line_number':405,'multiline':False]['text':' Step 8.','line_number':408,'multiline':False]['text':' Steps 8.a-h (The locale data is only computed when needed).','line_number':412,'multiline':False]['text':' Locale tag may override.','line_number':416,'multiline':False]['text':' Step 8.g.','line_number':418,'multiline':False]['text':' Step 8.h.','line_number':421,'multiline':False]['text':' Step 8.h.i.','line_number':423,'multiline':False]['text':' Step 8.h.ii.','line_number':426,'multiline':False]['text':' Steps 8.a-d.','line_number':428,'multiline':False]['text':' Step 8.h.ii.1.','line_number':431,'multiline':False]['text':' Step 8.h.ii.1.a.','line_number':433,'multiline':False]['text':' Step 8.h.ii.2.','line_number':439,'multiline':False]['text':' According to the LDML spec, if there's no type value,','line_number':441,'multiline':False]['text':' and true is an allowed value, it's used.','line_number':442,'multiline':False]['text':' Options override all.','line_number':451,'multiline':False]['text':' Step 8.i.i.','line_number':453,'multiline':False]['text':' Step 8.i.ii.','line_number':456,'multiline':False]['text':' Steps 8.i, 8.i.iii.1.','line_number':462,'multiline':False]['text':' Steps 8.a-d.','line_number':464,'multiline':False]['text':' Step 8.i.iii.','line_number':468,'multiline':False]['text':' Locale data provides default value.','line_number':475,'multiline':False]['text':' Steps 8.a-f.','line_number':477,'multiline':False]['text':' Step 8.j.','line_number':483,'multiline':False]['text':' Step 8.k.','line_number':487,'multiline':False]['text':' Step 9.','line_number':491,'multiline':False]['text':' Step 10.','line_number':495,'multiline':False]['text':' Step 11.','line_number':498,'multiline':False]['text':'*
 * Adds a Unicode extension subtag to a locale.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.6.
 ','line_number':502,'multiline':True]['text':' Step 9.a.','line_number':519,'multiline':False]['text':' Steps 9.b-c.','line_number':522,'multiline':False]['text':' Steps 9.d-e (Step 9.e is not required in this implementation, because we don't canonicalize','line_number':531,'multiline':False]['text':' Unicode extension subtags).','line_number':532,'multiline':False]['text':'*
 * Returns the subset of requestedLocales for which availableLocales has a
 * matching (possibly fallback) locale. Locales appear in the same order in the
 * returned list as in the input list.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.7.
 ','line_number':538,'multiline':True]['text':' Step 1.','line_number':546,'multiline':False]['text':' Step 2.','line_number':549,'multiline':False]['text':' Step 2.a.','line_number':553,'multiline':False]['text':' Step 2.b.','line_number':556,'multiline':False]['text':' Step 2.c.','line_number':559,'multiline':False]['text':' Step 3.','line_number':564,'multiline':False]['text':'*
 * Returns the subset of requestedLocales for which availableLocales has a
 * matching (possibly fallback) locale. Locales appear in the same order in the
 * returned list as in the input list.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.8.
 ','line_number':568,'multiline':True]['text':' don't have anything better','line_number':576,'multiline':False]['text':'*
 * Returns the subset of requestedLocales for which availableLocales has a
 * matching (possibly fallback) locale. Locales appear in the same order in the
 * returned list as in the input list.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.9.
 ','line_number':580,'multiline':True]['text':' Step 1.','line_number':588,'multiline':False]['text':' Step 1.a.','line_number':591,'multiline':False]['text':' Step 1.b','line_number':594,'multiline':False]['text':' Steps 2-5.','line_number':603,'multiline':False]['text':'*
 * Extracts a property value from the provided options object, converts it to
 * the required type, checks whether it is one of a list of allowed values,
 * and fills in a fallback value if necessary.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.10.
 ','line_number':609,'multiline':True]['text':' Step 1.','line_number':617,'multiline':False]['text':' Step 2.','line_number':620,'multiline':False]['text':' Steps 2.a-c.','line_number':622,'multiline':False]['text':' Step 2.d.','line_number':630,'multiline':False]['text':' Step 2.e.','line_number':634,'multiline':False]['text':' Step 3.','line_number':638,'multiline':False]['text':'*
 * The abstract operation DefaultNumberOption converts value to a Number value,
 * checks whether it is in the allowed range, and fills in a fallback value if
 * necessary.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.11.
 ','line_number':642,'multiline':True]['text':' Step 1.','line_number':657,'multiline':False]['text':' Step 2.','line_number':661,'multiline':False]['text':' Step 3.','line_number':664,'multiline':False]['text':' Step 4.','line_number':668,'multiline':False]['text':' Apply bitwise-or to convert -0 to +0 per ES2017, 5.2 and to ensure the','line_number':669,'multiline':False]['text':' result is an int32 value.','line_number':670,'multiline':False]['text':'*
 * Extracts a property value from the provided options object, converts it to a
 * Number value, checks whether it is in the allowed range, and fills in a
 * fallback value if necessary.
 *
 * Spec: ECMAScript Internationalization API Specification, 9.2.12.
 ','line_number':674,'multiline':True]['text':' Steps 1-2.','line_number':682,'multiline':False]['text':' Symbols in the self-hosting compartment can't be cloned, use a separate','line_number':686,'multiline':False]['text':' object to hold the actual symbol value.','line_number':687,'multiline':False]['text':' TODO: Can we add support to clone symbols?','line_number':688,'multiline':False]['text':'*
 * The [[FallbackSymbol]] symbol of the %Intl% intrinsic object.
 *
 * This symbol is used to implement the legacy constructor semantics for
 * Intl.DateTimeFormat and Intl.NumberFormat.
 ','line_number':691,'multiline':True]['text':'*
 * Initializes the INTL_INTERNALS_OBJECT_SLOT of the given object.
 ','line_number':707,'multiline':True]['text':' The meaning of an internals object for an object |obj| is as follows.','line_number':722,'multiline':False]['text':'','line_number':723,'multiline':False]['text':' The .type property indicates the type of Intl object that |obj| is. It','line_number':724,'multiline':False]['text':' must be one of:','line_number':725,'multiline':False]['text':' - Collator','line_number':726,'multiline':False]['text':' - DateTimeFormat','line_number':727,'multiline':False]['text':' - DisplayNames','line_number':728,'multiline':False]['text':' - ListFormat','line_number':729,'multiline':False]['text':' - NumberFormat','line_number':730,'multiline':False]['text':' - PluralRules','line_number':731,'multiline':False]['text':' - RelativeTimeFormat','line_number':732,'multiline':False]['text':'','line_number':733,'multiline':False]['text':' The .lazyData property stores information needed to compute -- without','line_number':734,'multiline':False]['text':' observable side effects -- the actual internal Intl properties of','line_number':735,'multiline':False]['text':' |obj|.  If it is non-null, then the actual internal properties haven't','line_number':736,'multiline':False]['text':' been computed, and .lazyData must be processed by','line_number':737,'multiline':False]['text':' |setInternalProperties| before internal Intl property values are','line_number':738,'multiline':False]['text':' available.  If it is null, then the .internalProps property contains an','line_number':739,'multiline':False]['text':' object whose properties are the internal Intl properties of |obj|.','line_number':740,'multiline':False]['text':'*
 * Set the internal properties object for an |internals| object previously
 * associated with lazy data.
 ','line_number':752,'multiline':True]['text':' Set in reverse order so that the .lazyData nulling is a barrier.','line_number':760,'multiline':False]['text':'*
 * Get the existing internal properties out of a non-newborn |internals|, or
 * null if none have been computed.
 ','line_number':765,'multiline':True]['text':'*
 * Return |obj|'s internals object (*not* the object holding its internal
 * properties!), with structure specified above.
 *
 * Spec: ECMAScript Internationalization API Specification, 10.3.
 * Spec: ECMAScript Internationalization API Specification, 11.3.
 * Spec: ECMAScript Internationalization API Specification, 12.3.
 ','line_number':778,'multiline':True]['text':'*
 * Get the internal properties of known-Intl object |obj|.  For use only by
 * C++ code that knows what it's doing!
 ','line_number':815,'multiline':True]['text':' If internal properties have already been computed, use them.','line_number':822,'multiline':False]['text':' Otherwise it's time to fully create them.','line_number':827,'multiline':False]