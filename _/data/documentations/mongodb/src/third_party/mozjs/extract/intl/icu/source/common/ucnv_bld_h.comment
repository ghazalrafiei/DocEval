['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
**********************************************************************
*   Copyright (C) 1999-2015 International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
*
*
*  ucnv_bld.h:
*  Contains internal data structure definitions
* Created by Bertrand A. Damiba
*
*   Change history:
*
*   06/29/2000  helena      Major rewrite of the callback APIs.
','line_number':3,'multiline':True]['text':' size of the overflow buffers in UConverter, enough for escaping callbacks ','line_number':34,'multiline':True]['text':' at most 4 bytes per substitution character (part of .cnv file format! see UConverterStaticData) ','line_number':37,'multiline':True]['text':' at most 8 bytes per character in toUBytes[] (UTF-8 uses up to 6) ','line_number':40,'multiline':True]['text':' converter options bits ','line_number':43,'multiline':True]['text':' We must declare the following as 'extern "C"' so that if ucnv
                 itself is compiled under C++, the linkage of the funcptrs will
                 work.
              ','line_number':49,'multiline':True]['text':'* values for the unicodeMask ','line_number':63,'multiline':True]['text':' +offset: size ','line_number':67,'multiline':True]['text':' +0: 4 Size of this structure ','line_number':68,'multiline':True]['text':' +4: 60  internal name of the converter- invariant chars ','line_number':71,'multiline':True]['text':' +64: 4 codepage # (now IBM-$codepage) ','line_number':73,'multiline':True]['text':' +68: 1 platform of the converter (only IBM now) ','line_number':75,'multiline':True]['text':' +69: 1 conversion type ','line_number':76,'multiline':True]['text':' +70: 1 Minimum # bytes per char in this codepage ','line_number':78,'multiline':True]['text':' +71: 1 Maximum # bytes output per UChar in this codepage ','line_number':79,'multiline':True]['text':' +72: 4  [note:  4 and 8 byte boundary] ','line_number':81,'multiline':True]['text':' +76: 1 ','line_number':82,'multiline':True]['text':' +77: 1 UBool needs to be changed to UBool to be consistent across platform ','line_number':84,'multiline':True]['text':' +78: 1 ','line_number':85,'multiline':True]['text':' +79: 1  bit 0: has supplementary  bit 1: has single surrogates ','line_number':86,'multiline':True]['text':' +80: 1  single-byte substitution character for IBM MBCS (0 if none) ','line_number':87,'multiline':True]['text':' +81: 19 to round out the structure ','line_number':88,'multiline':True]['text':' total size: 100 ','line_number':89,'multiline':True]['text':'
 * Defines the UConverterSharedData struct,
 * the immutable, shared part of UConverter.
 ','line_number':92,'multiline':True]['text':' Size of this structure ','line_number':97,'multiline':True]['text':' used to count number of clients, unused for static/immutable SharedData ','line_number':98,'multiline':True]['text':' from udata_openChoice() - for cleanup ','line_number':100,'multiline':True]['text':' pointer to the static (non changing) data. ','line_number':102,'multiline':True]['text':' true:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  false: shared data isn't in the cache, do attempt to clean it up if the ref is 0 ','line_number':104,'multiline':True]['text':'* If false, then referenceCounter is not used. Must not change after initialization. ','line_number':105,'multiline':True]['text':' vtable-style struct of mostly function pointers ','line_number':108,'multiline':True]['text':'initial values of some members of the mutable part of object ','line_number':110,'multiline':True]['text':'
     * Shared data structures currently come in two flavors:
     * - readonly for built-in algorithmic converters
     * - allocated for MBCS, with a pointer to an allocated UConverterTable
     *   which always has a UConverterMBCSTable
     *
     * To eliminate one allocation, I am making the UConverterMBCSTable
     * a member of the shared data.
     *
     * markus 2003-nov-07
     ','line_number':113,'multiline':True]['text':'* UConverterSharedData initializer for static, non-reference-counted converters. ','line_number':127,'multiline':True]['text':' Defines a UConverter, the lightweight mutable part the user sees ','line_number':135,'multiline':True]['text':'
     * Error function pointer called when conversion issues
     * occur during a ucnv_fromUnicode call
     ','line_number':138,'multiline':True]['text':'
     * Error function pointer called when conversion issues
     * occur during a ucnv_toUnicode call
     ','line_number':149,'multiline':True]['text':'
     * Pointer to additional data that depends on the converter type.
     * Used by ISO 2022, SCSU, GB 18030 converters, possibly more.
     ','line_number':160,'multiline':True]['text':'
     * Pointer to charset bytes for substitution string if subCharLen>0,
     * or pointer to Unicode string (UChar *) if subCharLen<0.
     * subCharLen==0 is equivalent to using a skip callback.
     * If the pointer is !=subUChars then it is allocated with
     * UCNV_ERROR_BUFFER_LENGTH * U_SIZEOF_UCHAR bytes.
     * The subUChars field is declared as UChar[] not uint8_t[] to
     * guarantee alignment for UChars.
     ','line_number':169,'multiline':True]['text':' Pointer to the shared immutable part of the converter object ','line_number':180,'multiline':True]['text':' options flags from UConverterOpen, may contain additional bits ','line_number':182,'multiline':True]['text':' true:  shared data is in cache, don't destroy on ucnv_close() if 0 ref.  false: shared data isn't in the cache, do attempt to clean it up if the ref is 0 ','line_number':184,'multiline':True]['text':' true if UConverter is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) ','line_number':185,'multiline':True]['text':' true if extraInfo is not owned and not released in ucnv_close() (stack-allocated, safeClone(), etc.) ','line_number':186,'multiline':True]['text':' number of bytes in toUBytes ','line_number':189,'multiline':True]['text':' more "toU status"; keeps the bytes of the current character ','line_number':190,'multiline':True]['text':' Used to internalize stream status information ','line_number':191,'multiline':True]['text':'
     * More fromUnicode() status. Serves 3 purposes:
     * - keeps a lead surrogate between buffers (similar to toUBytes[])
     * - keeps a lead surrogate at the end of the stream,
     *   which the framework handles as truncated input
     * - if the fromUnicode() implementation returns to the framework
     *   (ucnv.c ucnv_fromUnicode()), then the framework calls the callback
     *   for this code point
     ','line_number':195,'multiline':True]['text':'
     * value for ucnv_getMaxCharSize()
     *
     * usually simply copied from the static data, but ucnvmbcs.c modifies
     * the value depending on the converter type and options
     ','line_number':206,'multiline':True]['text':' length of the codepage specific character sequence ','line_number':214,'multiline':True]['text':' number of valid bytes in charErrorBuffer ','line_number':216,'multiline':True]['text':' number of valid UChars in charErrorBuffer ','line_number':219,'multiline':True]['text':' single-byte substitution character if different from subChar ','line_number':221,'multiline':True]['text':' bytes from last error/callback situation ','line_number':223,'multiline':True]['text':' codepage output from Error functions ','line_number':224,'multiline':True]['text':' see subChars documentation ','line_number':225,'multiline':True]['text':' UChars from last error/callback situation ','line_number':227,'multiline':True]['text':' unicode output from Error functions ','line_number':228,'multiline':True]['text':' fields for conversion extension ','line_number':230,'multiline':True]['text':' store previous UChars/chars to continue partial matches ','line_number':232,'multiline':True]['text':' >=0: partial match ','line_number':233,'multiline':True]['text':' negative: replay ','line_number':236,'multiline':True]['text':' length of first character ','line_number':237,'multiline':True]['text':' new fields for ICU 4.0 ','line_number':239,'multiline':True]['text':' (*fromCharErrorBehaviour) reason, set when error is detected ','line_number':240,'multiline':True]['text':' end of UConverter ','line_number':243,'multiline':True]['text':'*
 * Return the number of all converter names.
 * @param pErrorCode The error code
 * @return the number of all converter names
 ','line_number':248,'multiline':True]['text':'*
 * Return the (n)th converter name in mixed case, or NULL
 * if there is none (typically, if the data cannot be loaded).
 * 0<=index<ucnv_io_countAvailableConverters().
 * @param n The number specifies which converter name to get
 * @param pErrorCode The error code
 * @return the (n)th converter name in mixed case, or NULL if there is none.
 ','line_number':256,'multiline':True]['text':'*
 * Load a non-algorithmic converter.
 * If pkg==NULL, then this function must be called inside umtx_lock(&cnvCacheMutex).
 ','line_number':267,'multiline':True]['text':'*
 * Unload a non-algorithmic converter.
 * It must be sharedData->isReferenceCounted
 * and this function must be called inside umtx_lock(&cnvCacheMutex).
 ','line_number':274,'multiline':True]['text':'*
 * Swap ICU .cnv conversion tables. See udataswp.h.
 * @internal
 ','line_number':282,'multiline':True]['text':' _UCNV_BLD ','line_number':296,'multiline':True]