['text':' Copyright 2012 the V8 project authors. All rights reserved.','line_number':1,'multiline':False]['text':' Use of this source code is governed by a BSD-style license that can be','line_number':2,'multiline':False]['text':' found in the LICENSE file.','line_number':3,'multiline':False]['text':' V8_INTL_SUPPORT','line_number':13,'multiline':False]['text':' This function is not allowed to cause a garbage collection.','line_number':31,'multiline':False]['text':' A GC might move the calling generated code and invalidate the','line_number':32,'multiline':False]['text':' return address on the stack.','line_number':33,'multiline':False]['text':' This function is not allowed to cause a garbage collection.','line_number':58,'multiline':False]['text':' A GC might move the calling generated code and invalidate the','line_number':59,'multiline':False]['text':' return address on the stack.','line_number':60,'multiline':False]['text':' V8_INTL_SUPPORT','line_number':93,'multiline':False]['text':' Check that current character is not a trail surrogate.','line_number':99,'multiline':False]['text':' Check that previous character is not a lead surrogate.','line_number':102,'multiline':False]['text':' By default, eats_at_least = characters.','line_number':118,'multiline':False]['text':' It's possible to preload a small number of characters when each success','line_number':141,'multiline':False]['text':' path requires a large number of characters, but not the reverse.','line_number':142,'multiline':False]['text':' This method may only be called after an interrupt.','line_number':162,'multiline':False]['text':' Direct calls from JavaScript can be interrupted in two ways:','line_number':176,'multiline':False]['text':' 1. A real stack overflow, in which case we let the caller throw the','line_number':177,'multiline':False]['text':'    exception.','line_number':178,'multiline':False]['text':' 2. The stack guard was used to interrupt execution for another purpose,','line_number':179,'multiline':False]['text':'    forcing the call through the runtime system.','line_number':180,'multiline':False]['text':' Bug(v8:9540) Investigate why this method is called from JS although no','line_number':182,'multiline':False]['text':' stackoverflow or interrupt is pending on ARM64. We return 0 in this case','line_number':183,'multiline':False]['text':' to continue execution normally.','line_number':184,'multiline':False]['text':' Prepare for possible GC.','line_number':195,'multiline':False]['text':' Return address no longer valid','line_number':214,'multiline':False]['text':' Overwrite the return address on the stack.','line_number':215,'multiline':False]['text':' TODO(v8:10026): avoid replacing a signed pointer.','line_number':218,'multiline':False]['text':' If we continue, we need to update the subject string addresses.','line_number':223,'multiline':False]['text':' String encoding might have changed.','line_number':225,'multiline':False]['text':' If we changed between an LATIN1 and an UC16 string, the specialized','line_number':228,'multiline':False]['text':' code cannot be used, and we need to restart regexp matching from','line_number':229,'multiline':False]['text':' scratch (including, potentially, compiling a new version of the code).','line_number':230,'multiline':False]['text':' Returns a {Result} sentinel, or the number of successful matches.','line_number':242,'multiline':False]['text':' No allocations before calling the regexp, but we can't use','line_number':252,'multiline':False]['text':' DisallowGarbageCollection, since regexps might be preempted, and another','line_number':253,'multiline':False]['text':' thread might do allocation anyway.','line_number':254,'multiline':False]['text':' Character offsets into string.','line_number':257,'multiline':False]['text':' The string has been flattened, so if it is a cons string it contains the','line_number':262,'multiline':False]['text':' full string in the first part.','line_number':263,'multiline':False]['text':' Ensure that an underlying string has the same representation.','line_number':275,'multiline':False]['text':' String is now either Sequential or External','line_number':278,'multiline':False]['text':' Returns a {Result} sentinel, or the number of successful matches.','line_number':290,'multiline':False]['text':' TODO(pthier): The JSRegExp object is passed to native irregexp code to match','line_number':291,'multiline':False]['text':' the signature of the interpreter. We should get rid of JS objects passed to','line_number':292,'multiline':False]['text':' internal methods.','line_number':293,'multiline':False]['text':' This needs to be the unpacked (sliced, cons) string.','line_number':295,'multiline':False]['text':' Ensure that the minimum stack has been allocated.','line_number':298,'multiline':False]['text':' We detected a stack overflow (on the backtrack stack) in RegExp code,','line_number':318,'multiline':False]['text':' but haven't created the exception yet. Additionally, we allow heap','line_number':319,'multiline':False]['text':' allocation because even though it invalidates {input_start} and','line_number':320,'multiline':False]['text':' {input_end}, we are about to return anyway.','line_number':321,'multiline':False]['text':' !COMPILING_IRREGEXP_FOR_EXTERNAL_EMBEDDER','line_number':328,'multiline':False]['text':' clang-format off','line_number':330,'multiline':False]['text':' '0' - '7'','line_number':339,'multiline':False]['text':' '8' - '9'','line_number':340,'multiline':False]['text':' 'A' - 'G'','line_number':342,'multiline':False]['text':' 'H' - 'O'','line_number':343,'multiline':False]['text':' 'P' - 'W'','line_number':344,'multiline':False]['text':' 'X' - 'Z', '_'','line_number':345,'multiline':False]['text':' 'a' - 'g'','line_number':347,'multiline':False]['text':' 'h' - 'o'','line_number':348,'multiline':False]['text':' 'p' - 'w'','line_number':349,'multiline':False]['text':' 'x' - 'z'','line_number':350,'multiline':False]['text':' Latin-1 range','line_number':351,'multiline':False]['text':' clang-format on','line_number':372,'multiline':False]['text':' namespace internal','line_number':392,'multiline':False]['text':' namespace v8','line_number':393,'multiline':False]