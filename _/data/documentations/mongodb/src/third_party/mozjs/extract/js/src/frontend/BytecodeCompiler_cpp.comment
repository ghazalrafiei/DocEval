['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' mozilla::Utf8Unit','line_number':12,'multiline':False]['text':' mozilla::Variant','line_number':13,'multiline':False]['text':' Smoosh','line_number':22,'multiline':False]['text':' FunctionFlags','line_number':27,'multiline':False]['text':' js::GeneratorKind, js::FunctionAsyncKind','line_number':28,'multiline':False]['text':' ParseTask','line_number':30,'multiline':False]['text':' ScriptSource, UncompressedSourceCache','line_number':32,'multiline':False]['text':' js::ModuleBuilder','line_number':33,'multiline':False]['text':' AutoIncrementalTimer','line_number':34,'multiline':False]['text':' DebugAPI','line_number':38,'multiline':False]['text':' RAII class to check the frontend reports an exception when it fails to','line_number':54,'multiline':False]['text':' compile a script.','line_number':55,'multiline':False]['text':' Call this before calling compile{Global,Eval}Script.','line_number':119,'multiline':False]['text':' JS_ENABLE_SMOOSH','line_number':215,'multiline':False]['text':' Compile global script, and return it as one of:','line_number':221,'multiline':False]['text':'   * ExtensibleCompilationStencil (without instantiation)','line_number':222,'multiline':False]['text':'   * CompilationStencil (without instantiation, has no external dependency)','line_number':223,'multiline':False]['text':'   * CompilationGCOutput (with instantiation).','line_number':224,'multiline':False]['text':' JS_ENABLE_SMOOSH','line_number':261,'multiline':False]['text':' Enqueue an off-thread source compression task after finishing parsing.','line_number':393,'multiline':False]['text':' If the tokenizer hasn't yet gotten any tokens, use the line and column','line_number':560,'multiline':False]['text':' numbers from CompileOptions.','line_number':561,'multiline':False]['text':' foldConstants = ','line_number':634,'multiline':True]['text':' syntaxParser = ','line_number':635,'multiline':True]['text':' foldConstants = ','line_number':642,'multiline':True]['text':' parent = ','line_number':653,'multiline':True]['text':' Try to reparse if no parse errors were thrown and the directives changed.','line_number':661,'multiline':False]['text':'','line_number':662,'multiline':False]['text':' NOTE:','line_number':663,'multiline':False]['text':' Only the following two directive changes force us to reparse the script:','line_number':664,'multiline':False]['text':' - The "use asm" directive was encountered.','line_number':665,'multiline':False]['text':' - The "use strict" directive was encountered and duplicate parameter names','line_number':666,'multiline':False]['text':'   are present. We reparse in this case to display the error at the correct','line_number':667,'multiline':False]['text':'   source location. See |Parser::hasValidSimpleStrictParameterNames()|.','line_number':668,'multiline':False]['text':' Rewind to starting position to retry.','line_number':679,'multiline':False]['text':' Assignment must be monotonic to prevent reparsing iloops','line_number':683,'multiline':False]['text':' Emplace the topLevel stencil','line_number':695,'multiline':False]['text':' Global and eval scripts don't get reparsed after a new directive was','line_number':714,'multiline':False]['text':' encountered:','line_number':715,'multiline':False]['text':' - "use strict" doesn't require any special error reporting for scripts.','line_number':716,'multiline':False]['text':' - "use asm" directives don't have an effect in global/eval contexts.','line_number':717,'multiline':False]['text':' Successfully parsed. Emit the script.','line_number':723,'multiline':False]['text':' Emplace the topLevel stencil','line_number':744,'multiline':False]['text':' Parse a standalone JS function, which might appear as the value of an','line_number':782,'multiline':False]['text':' event handler attribute in an HTML <INPUT> tag, or in a Function()','line_number':783,'multiline':False]['text':' constructor.','line_number':784,'multiline':False]['text':' Speculatively parse using the default directives implied by the context.','line_number':794,'multiline':False]['text':' If a directive is encountered (e.g., "use strict") that changes how the','line_number':795,'multiline':False]['text':' function should have been parsed, we backup and reparse with the new set','line_number':796,'multiline':False]['text':' of directives.','line_number':797,'multiline':False]['text':' Maybe we encountered a new directive. See if we can try again.','line_number':809,'multiline':False]['text':' Compile a standalone JS function.','line_number':820,'multiline':False]['text':' The parser extent has stripped off the leading `function...` but','line_number':843,'multiline':False]['text':' we want the SourceExtent used in the final standalone script to','line_number':844,'multiline':False]['text':' start from the beginning of the buffer, and use the provided','line_number':845,'multiline':False]['text':' line and column.','line_number':846,'multiline':False]['text':' sourceStart = ','line_number':849,'multiline':True]['text':' The asm.js module was created by parser. Instantiation below will','line_number':856,'multiline':False]['text':' allocate the JSFunction that wraps it.','line_number':857,'multiline':False]['text':' Compile module, and return it as one of:','line_number':867,'multiline':False]['text':'   * ExtensibleCompilationStencil (without instantiation)','line_number':868,'multiline':False]['text':'   * CompilationStencil (without instantiation, has no external dependency)','line_number':869,'multiline':False]['text':'   * CompilationGCOutput (with instantiation).','line_number':870,'multiline':False]['text':' foldConstants = ','line_number':1027,'multiline':True]['text':' syntaxParser = ','line_number':1029,'multiline':True]['text':' parent = ','line_number':1041,'multiline':True]['text':' NOTE: Only allow relazification if there was no lazy PrivateScriptData.','line_number':1051,'multiline':False]['text':' This excludes non-leaf functions and all script class constructors.','line_number':1052,'multiline':False]['text':' Parse and compile the script from source.','line_number':1107,'multiline':False]['text':' UTF-8 source text.','line_number':1141,'multiline':False]['text':' UTF-16 source text.','line_number':1147,'multiline':False]['text':' Enqueue an off-thread source compression task after finishing parsing.','line_number':1201,'multiline':False]['text':' Note: If AsmJS successfully compiles, the into.script will still be','line_number':1208,'multiline':False]['text':' nullptr. In this case we have compiled to a native function instead of an','line_number':1209,'multiline':False]['text':' interpreted script.','line_number':1210,'multiline':False]