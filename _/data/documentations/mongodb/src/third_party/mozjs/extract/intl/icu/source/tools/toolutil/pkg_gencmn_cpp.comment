['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'*****************************************************************************
 *   Copyright (C) 2008-2012, International Business Machines
 *   Corporation and others.  All Rights Reserved.
 *******************************************************************************
 ','line_number':3,'multiline':True]['text':' ICU package data file format (.dat files) ------------------------------- ***

Description of the data format after the usual ICU data file header
(UDataInfo etc.).

Format version 1

A .dat package file contains a simple Table of Contents of item names,
followed by the items themselves:

1. ToC table

uint32_t count; - number of items
UDataOffsetTOCEntry entry[count]; - pair of uint32_t values per item:
    uint32_t nameOffset; - offset of the item name
    uint32_t dataOffset; - offset of the item data
both are byte offsets from the beginning of the data

2. item name strings

All item names are stored as char * strings in one block between the ToC table
and the data items.

3. data items

The data items are stored following the item names block.
Each data item is 16-aligned.
The data items are stored in the sorted order of their names.

Therefore, the top of the name strings block is the offset of the first item,
the length of the last item is the difference between its offset and
the .dat file length, and the length of all previous items is the difference
between its offset and the next one.

----------------------------------------------------------------------------- ','line_number':28,'multiline':True]['text':' UDataInfo cf. udata.h ','line_number':64,'multiline':True]['text':' dataFormat="CmnD" ','line_number':74,'multiline':True]['text':' formatVersion ','line_number':75,'multiline':True]['text':' dataVersion ','line_number':76,'multiline':True]['text':' prototypes --------------------------------------------------------------- ','line_number':98,'multiline':True]['text':' map non-tree separator (such as '\') to tree separator ('/') inplace. ','line_number':114,'multiline':True]['text':' -------------------------------------------------------------------------- ','line_number':117,'multiline':True]['text':' read the list of files and get their lengths ','line_number':171,'multiline':True]['text':' remove trailing newline characters and parse space separated items ','line_number':174,'multiline':True]['text':' check for comment ','line_number':192,'multiline':True]['text':' add the file ','line_number':198,'multiline':True]['text':' sort the files by basename ','line_number':221,'multiline':True]['text':' determine the offsets of all basenames and files in this common one ','line_number':227,'multiline':True]['text':' create the output file ','line_number':237,'multiline':True]['text':' write the table of contents ','line_number':249,'multiline':True]['text':' write the basenames ','line_number':256,'multiline':True]['text':' copy the files ','line_number':262,'multiline':True]['text':' pad to 16-align the next file ','line_number':264,'multiline':True]['text':' copy the next file ','line_number':274,'multiline':True]['text':' pad to 16-align the last file (cleaner, avoids growing .dat files in icuswap) ','line_number':297,'multiline':True]['text':' finish ','line_number':303,'multiline':True]['text':' write a .c source file with the table of contents ','line_number':310,'multiline':True]['text':' create the output filename ','line_number':314,'multiline':True]['text':' open the output file ','line_number':330,'multiline':True]['text':' write the source file ','line_number':340,'multiline':True]['text':' note: never freed. ','line_number':415,'multiline':True]['text':' store the pathname ','line_number':430,'multiline':True]['text':' get the basename ','line_number':437,'multiline':True]['text':' try to open the file ','line_number':446,'multiline':True]['text':' get the file length ','line_number':453,'multiline':True]['text':' do not add files that are longer than maxSize ','line_number':462,'multiline':True]['text':' get and store the basename ','line_number':472,'multiline':True]['text':' need to include the package name ','line_number':473,'multiline':True]['text':' turn the basename into an entry point name and store in the pathname field ','line_number':481,'multiline':True]['text':' Suppress compiler warning for unused variable n    ','line_number':528,'multiline':True]['text':'  when conditional code below is not compiled.      ','line_number':529,'multiline':True]['text':' replace tree separator (such as '/') with file sep char (such as ':' or '\\') ','line_number':534,'multiline':True]['text':' replace tree separator (such as '/') with file sep char (such as ':' or '\\') ','line_number':543,'multiline':True]['text':' sort by basename ','line_number':556,'multiline':True]