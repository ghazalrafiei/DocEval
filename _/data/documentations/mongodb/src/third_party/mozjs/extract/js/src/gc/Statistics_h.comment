['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Phase data is generated by a script. If you need to add phases, edit','line_number':31,'multiline':False]['text':' js/src/gc/GenerateStatsPhases.py','line_number':32,'multiline':False]['text':' Counts can be incremented with Statistics::count(). They're reset at the end','line_number':36,'multiline':False]['text':' of a Major GC.','line_number':37,'multiline':False]['text':' Number of times a 'put' into a storebuffer overflowed, triggering a','line_number':43,'multiline':False]['text':' compaction','line_number':44,'multiline':False]['text':' Number of arenas relocated by compacting GC.','line_number':47,'multiline':False]['text':' Stats can be set with Statistics::setStat(). They're not reset automatically.','line_number':53,'multiline':False]['text':' Number of strings tenured.','line_number':55,'multiline':False]['text':' Number of strings deduplicated.','line_number':58,'multiline':False]['text':' Number of realms that had nursery strings disabled due to large numbers','line_number':61,'multiline':False]['text':' being tenured.','line_number':62,'multiline':False]['text':' Number of BigInts tenured.','line_number':65,'multiline':False]['text':' Number of realms that had nursery BigInts disabled due to large numbers','line_number':68,'multiline':False]['text':' being tenured.','line_number':69,'multiline':False]['text':' Number of zones collected in this GC. ','line_number':76,'multiline':True]['text':' Number of zones that could have been collected in this GC. ','line_number':79,'multiline':True]['text':' Total number of zones in the Runtime at the start of this GC. ','line_number':82,'multiline':True]['text':' Number of zones swept in this GC. ','line_number':85,'multiline':True]['text':' Total number of compartments in all zones collected. ','line_number':88,'multiline':True]['text':' Total number of compartments in the Runtime at the start of this GC. ','line_number':91,'multiline':True]['text':' Total number of compartments swept by this GC. ','line_number':94,'multiline':True]['text':'
 * Struct for collecting timing statistics on a "phase tree". The tree is
 * specified as a limited DAG, but the timings are collected for the whole tree
 * that you would get by expanding out the DAG by duplicating subtrees rooted
 * at nodes with multiple parents.
 *
 * During execution, a child phase can be activated multiple times, and the
 * total time will be accumulated. (So for example, you can start and end
 * PhaseKind::MARK_ROOTS multiple times before completing the parent phase.)
 *
 * Incremental GC is represented by recording separate timing results for each
 * slice within the overall GC.
 ','line_number':124,'multiline':True]['text':' Create types for tables of times, by phase and phase kind.','line_number':148,'multiline':False]['text':' Occasionally, we may be in the middle of something that is tracked by','line_number':165,'multiline':False]['text':' this class, and we need to do something unusual (eg evict the nursery)','line_number':166,'multiline':False]['text':' that doesn't normally nest within the current phase. Suspend the','line_number':167,'multiline':False]['text':' currently tracked phase stack, at which time the caller is free to do','line_number':168,'multiline':False]['text':' other tracked operations.','line_number':169,'multiline':False]['text':'','line_number':170,'multiline':False]['text':' This also happens internally with the PhaseKind::MUTATOR "phase". While in','line_number':171,'multiline':False]['text':' this phase, any beginPhase will automatically suspend the non-GC phase,','line_number':172,'multiline':False]['text':' until that inner stack is complete, at which time it will automatically','line_number':173,'multiline':False]['text':' resume the non-GC phase. Explicit suspensions do not get auto-resumed.','line_number':174,'multiline':False]['text':' Resume a suspended stack of phases.','line_number':177,'multiline':False]['text':' Note when we sweep a zone or compartment.','line_number':187,'multiline':False]['text':' tenured allocs don't include nursery evictions.','line_number':230,'multiline':False]['text':' Occasionally print header lines for profiling information.','line_number':296,'multiline':False]['text':' Print header line for profile times.','line_number':299,'multiline':False]['text':' Print total profile times on shutdown.','line_number':302,'multiline':False]['text':' These JSON strings are used by the firefox profiler to display the GC','line_number':305,'multiline':False]['text':' markers.','line_number':306,'multiline':False]['text':' Return JSON for a whole major GC','line_number':308,'multiline':False]['text':' Return JSON for the timings of just the given slice.','line_number':311,'multiline':False]['text':' Return JSON for the previous nursery collection.','line_number':314,'multiline':False]['text':' Print a logging message.','line_number':318,'multiline':False]['text':' File used for MOZ_GCTIMER output. ','line_number':327,'multiline':True]['text':' File used for JS_GC_DEBUG output. ','line_number':330,'multiline':True]['text':' Most recent time when the given phase started. ','line_number':341,'multiline':True]['text':' Most recent time when the given phase ended. ','line_number':345,'multiline':True]['text':' Bookkeeping for GC timings when timingMutator is true ','line_number':351,'multiline':True]['text':' Total time in a given phase for this GC. ','line_number':355,'multiline':True]['text':' Number of events of this type for this GC. ','line_number':358,'multiline':True]['text':' Other GC statistics. ','line_number':363,'multiline':True]['text':'
   * These events cannot be kept in the above array, we need to take their
   * address.
   ','line_number':366,'multiline':True]['text':' Total GC heap size before and after the GC ran. ','line_number':375,'multiline':True]['text':' GC heap size for collected zones before GC ran. ','line_number':379,'multiline':True]['text':'
   * If a GC slice was triggered by exceeding some threshold, record the
   * threshold and the value that exceeded it. This happens before the slice
   * starts so this is recorded here first and then transferred to SliceData.
   ','line_number':382,'multiline':True]['text':' GC numbers as of the beginning of the collection. ','line_number':389,'multiline':True]['text':' Records the maximum GC pause in an API-controlled interval. ','line_number':394,'multiline':True]['text':' Phases that are currently on stack. ','line_number':397,'multiline':True]['text':'
   * Certain phases can interrupt the phase stack, eg callback phases. When
   * this happens, we move the suspended phases over to a sepearate list,
   * terminated by a dummy PhaseKind::SUSPENSION phase (so that we can nest
   * suspensions by suspending multiple stacks with a PhaseKind::SUSPENSION in
   * between).
   ','line_number':400,'multiline':True]['text':' Sweep times for SCCs of compartments. ','line_number':409,'multiline':True]['text':'
   * True if we saw an OOM while allocating slices or we saw an impossible
   * timestamp. The statistics for this GC will be invalid.
   ','line_number':417,'multiline':True]['text':' Profiling data. ','line_number':423,'multiline':True]['text':' namespace gcstats ','line_number':532,'multiline':True]['text':' number of strings that were deduplicated, and their sizes in characters','line_number':535,'multiline':False]['text':' and bytes','line_number':536,'multiline':False]['text':' number of live nursery strings at the start of a nursery collection','line_number':541,'multiline':False]['text':' number of new strings added to the tenured heap','line_number':544,'multiline':False]['text':' Currently, liveNurseryStrings = tenuredStrings + deduplicatedStrings (but','line_number':547,'multiline':False]['text':' in the future we may do more transformation during tenuring, eg','line_number':548,'multiline':False]['text':' atomizing.)','line_number':549,'multiline':False]['text':' number of malloced bytes associated with tenured strings (the actual','line_number':551,'multiline':False]['text':' malloc will have happened when the strings were allocated in the nursery;','line_number':552,'multiline':False]['text':' the ownership of the bytes will be transferred to the tenured strings)','line_number':553,'multiline':False]['text':' namespace js ','line_number':580,'multiline':True]['text':' gc_Statistics_h ','line_number':582,'multiline':True]