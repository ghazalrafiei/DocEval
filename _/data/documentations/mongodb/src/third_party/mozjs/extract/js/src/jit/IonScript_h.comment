['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' MallocSizeOf','line_number':10,'multiline':False]['text':' size_t','line_number':12,'multiline':False]['text':' uint8_t, uint32_t','line_number':13,'multiline':False]['text':' HeapPtr{JitCode,Object}, PreBarrieredValue','line_number':17,'multiline':False]['text':' IonCompilationId','line_number':18,'multiline':False]['text':' JitCode','line_number':19,'multiline':False]['text':' JitOptions','line_number':20,'multiline':False]['text':' jsbytecode','line_number':21,'multiline':False]['text':' TrailingArray','line_number':22,'multiline':False]['text':' TraceLoggerEvent','line_number':23,'multiline':False]['text':' An IonScript attaches Ion-generated information to a JSScript. The header','line_number':38,'multiline':False]['text':' structure is followed by several arrays of data. These trailing arrays have a','line_number':39,'multiline':False]['text':' layout based on offsets (bytes from 'this') stored in the IonScript header.','line_number':40,'multiline':False]['text':'','line_number':41,'multiline':False]['text':'    <IonScript itself>','line_number':42,'multiline':False]['text':'    --','line_number':43,'multiline':False]['text':'    PreBarrieredValue[]   constantTable()','line_number':44,'multiline':False]['text':'    uint8_t[]             runtimeData()','line_number':45,'multiline':False]['text':'    OsiIndex[]            osiIndex()','line_number':46,'multiline':False]['text':'    SafepointIndex[]      safepointIndex()','line_number':47,'multiline':False]['text':'    SnapshotOffset[]      bailoutTable()','line_number':48,'multiline':False]['text':'    uint32_t[]            icIndex()','line_number':49,'multiline':False]['text':'    --','line_number':50,'multiline':False]['text':'    uint8_t[]             safepoints()','line_number':51,'multiline':False]['text':'    uint8_t[]             snapshots()','line_number':52,'multiline':False]['text':'    uint8_t[]             snapshotsRVATable()','line_number':53,'multiline':False]['text':'    uint8_t[]             recovers()','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' Note: These are arranged in order of descending alignment requirements to','line_number':56,'multiline':False]['text':' avoid the need for padding. The `runtimeData` uses uint64_t alignement due to','line_number':57,'multiline':False]['text':' its use of mozilla::AlignedStorage2.','line_number':58,'multiline':False]['text':' Offset (in bytes) from `this` to the start of each trailing array. Each','line_number':61,'multiline':False]['text':' array ends where following one begins. There is no implicit padding (except','line_number':62,'multiline':False]['text':' possible at very end).','line_number':63,'multiline':False]['text':' JS::Value aligned','line_number':64,'multiline':False]['text':' uint64_t aligned','line_number':65,'multiline':False]['text':' pointer aligned','line_number':66,'multiline':False]['text':' Code pointer containing the actual method.','line_number':77,'multiline':False]['text':' Entrypoint for OSR, or nullptr.','line_number':80,'multiline':False]['text':' Offset to OSR entrypoint from method_->raw(), or 0.','line_number':83,'multiline':False]['text':' Offset of the invalidation epilogue (which pushes this IonScript','line_number':86,'multiline':False]['text':' and calls the invalidation thunk).','line_number':87,'multiline':False]['text':' The offset immediately after the IonScript immediate.','line_number':90,'multiline':False]['text':' NOTE: technically a constant delta from','line_number':91,'multiline':False]['text':' |invalidateEpilogueOffset_|, so we could hard-code this','line_number':92,'multiline':False]['text':' per-platform if we want.','line_number':93,'multiline':False]['text':' Number of bailouts that have occurred for reasons that could be','line_number':96,'multiline':False]['text':' fixed if we invalidated and recompiled.','line_number':97,'multiline':False]['text':' Number of bailouts that have occurred for reasons that can't be','line_number':100,'multiline':False]['text':' fixed by recompiling: for example, bailing out to catch an exception.','line_number':101,'multiline':False]['text':' Tracks the state of LICM bailouts.','line_number':108,'multiline':False]['text':' Flag set if IonScript was compiled with profiling enabled.','line_number':111,'multiline':False]['text':' Number of bytes this function reserves on the stack.','line_number':114,'multiline':False]['text':' Number of bytes used passed in as formal arguments or |this|.','line_number':117,'multiline':False]['text':' Frame size is the value that can be added to the StackPointer along','line_number':120,'multiline':False]['text':' with the frame prefix to get a valid JitFrameLayout.','line_number':121,'multiline':False]['text':' Number of references from invalidation records.','line_number':124,'multiline':False]['text':' Identifier of the compilation which produced this code.','line_number':127,'multiline':False]['text':' Number of times we tried to enter this script via OSR but failed due to','line_number':130,'multiline':False]['text':' a LOOPENTRY pc other than osrPc_.','line_number':131,'multiline':False]['text':' TraceLogger events that are baked into the IonScript.','line_number':134,'multiline':False]['text':' A hash of the ICScripts used in this compilation.','line_number':138,'multiline':False]['text':' End of fields.','line_number':142,'multiline':False]['text':' Layout helpers','line_number':145,'multiline':False]['text':' Hardcode size of incomplete types. These are verified in Ion.cpp.','line_number':159,'multiline':False]['text':'','line_number':165,'multiline':False]['text':' Table of constants referenced in snapshots. (JS::Value alignment)','line_number':166,'multiline':False]['text':'','line_number':167,'multiline':False]['text':' Nursery constants are manually barriered in CodeGenerator::link() so a','line_number':169,'multiline':False]['text':' post barrier is not required..','line_number':170,'multiline':False]['text':'','line_number':178,'multiline':False]['text':' IonIC data structures. (uint64_t alignment)','line_number':179,'multiline':False]['text':'','line_number':180,'multiline':False]['text':'','line_number':188,'multiline':False]['text':' List of (originally) nursery-allocated objects referenced from JIT code.','line_number':189,'multiline':False]['text':' (JSObject* alignment)','line_number':190,'multiline':False]['text':'','line_number':191,'multiline':False]['text':'','line_number':203,'multiline':False]['text':' Map OSI-point displacement to snapshot.','line_number':204,'multiline':False]['text':'','line_number':205,'multiline':False]['text':'','line_number':215,'multiline':False]['text':' Map code displacement to safepoint / OSI-patch-delta.','line_number':216,'multiline':False]['text':'','line_number':217,'multiline':False]['text':'','line_number':229,'multiline':False]['text':' Table mapping bailout IDs to snapshot offsets.','line_number':230,'multiline':False]['text':'','line_number':231,'multiline':False]['text':'','line_number':240,'multiline':False]['text':' Offset into `runtimeData` for each (variable-length) IonIC.','line_number':241,'multiline':False]['text':'','line_number':242,'multiline':False]['text':'','line_number':248,'multiline':False]['text':' Safepoint table as a CompactBuffer.','line_number':249,'multiline':False]['text':'','line_number':250,'multiline':False]['text':'','line_number':258,'multiline':False]['text':' Snapshot and RValueAllocation tables as CompactBuffers.','line_number':259,'multiline':False]['text':'','line_number':260,'multiline':False]['text':'','line_number':271,'multiline':False]['text':' Recover instruction table as a CompactBuffer.','line_number':272,'multiline':False]['text':'','line_number':273,'multiline':False]['text':' This accounts for an off by one error caused by the return address of a','line_number':321,'multiline':False]['text':' bailout sitting outside the range of the containing function.','line_number':322,'multiline':False]['text':' Invalidate the current compilation.','line_number':420,'multiline':False]['text':' Execution information for a basic block which may persist after the','line_number':447,'multiline':False]['text':' accompanying IonScript is destroyed, for use during profiling.','line_number':448,'multiline':False]['text':' Approximate bytecode in the outer (not inlined) script this block','line_number':453,'multiline':False]['text':' was generated from.','line_number':454,'multiline':False]['text':' File and line of the inner script this block was generated from.','line_number':457,'multiline':False]['text':' ids for successors of this block.','line_number':460,'multiline':False]['text':' Hit count for this block.','line_number':464,'multiline':False]['text':' Text information about the code generated for this block.','line_number':467,'multiline':False]['text':' Execution information for a compiled script which may persist after the','line_number':530,'multiline':False]['text':' IonScript is destroyed, for use during profiling.','line_number':531,'multiline':False]['text':' Any previous invalidated compilation(s) for the script.','line_number':534,'multiline':False]['text':' Information about basic blocks in this script.','line_number':537,'multiline':False]['text':' The list can be long in some corner cases (bug 1140084), so','line_number':549,'multiline':False]['text':' unroll the recursion.','line_number':550,'multiline':False]['text':' namespace jit','line_number':600,'multiline':False]['text':' namespace js','line_number':601,'multiline':False]['text':' namespace JS','line_number':614,'multiline':False]['text':' jit_IonScript_h ','line_number':616,'multiline':True]