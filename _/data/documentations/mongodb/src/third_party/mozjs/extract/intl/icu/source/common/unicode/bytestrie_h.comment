['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
*   Copyright (C) 2010-2012, International Business Machines
*   Corporation and others.  All Rights Reserved.
*******************************************************************************
*   file name:  bytestrie.h
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2010sep25
*   created by: Markus W. Scherer
','line_number':3,'multiline':True]['text':'*
 * \file
 * \brief C++ API: Trie for mapping byte sequences to integer values.
 ','line_number':20,'multiline':True]['text':'*
 * Light-weight, non-const reader class for a BytesTrie.
 * Traverses a byte-serialized data structure with minimal state,
 * for mapping byte sequences to non-negative integer values.
 *
 * This class owns the serialized trie data only if it was constructed by
 * the builder's build() method.
 * The public constructor and the copy constructor only alias the data (only copy the pointer).
 * There is no assignment operator.
 *
 * This class is not intended for public subclassing.
 * @stable ICU 4.8
 ','line_number':42,'multiline':True]['text':'*
     * Constructs a BytesTrie reader instance.
     *
     * The trieBytes must contain a copy of a byte sequence from the BytesTrieBuilder,
     * starting with the first byte of that sequence.
     * The BytesTrie object will not read more bytes than
     * the BytesTrieBuilder generated in the corresponding build() call.
     *
     * The array is not copied/cloned and must not be modified while
     * the BytesTrie object is in use.
     *
     * @param trieBytes The byte array that contains the serialized trie.
     * @stable ICU 4.8
     ','line_number':57,'multiline':True]['text':'*
     * Destructor.
     * @stable ICU 4.8
     ','line_number':75,'multiline':True]['text':'*
     * Copy constructor, copies the other trie reader object and its state,
     * but not the byte array which will be shared. (Shallow copy.)
     * @param other Another BytesTrie object.
     * @stable ICU 4.8
     ','line_number':81,'multiline':True]['text':'*
     * Resets this trie to its initial state.
     * @return *this
     * @stable ICU 4.8
     ','line_number':91,'multiline':True]['text':'*
     * Returns the state of this trie as a 64-bit integer.
     * The state value is never 0.
     *
     * @return opaque state value
     * @see resetToState64
     * @stable ICU 65
     ','line_number':102,'multiline':True]['text':'*
     * Resets this trie to the saved state.
     * Unlike resetToState(State), the 64-bit state value
     * must be from getState64() from the same trie object or
     * from one initialized the exact same way.
     * Because of no validation, this method is faster.
     *
     * @param state The opaque trie state value from getState64().
     * @return *this
     * @see getState64
     * @see resetToState
     * @see reset
     * @stable ICU 65
     ','line_number':115,'multiline':True]['text':'*
     * BytesTrie state object, for saving a trie's current state
     * and resetting the trie back to this state later.
     * @stable ICU 4.8
     ','line_number':135,'multiline':True]['text':'*
         * Constructs an empty State.
         * @stable ICU 4.8
         ','line_number':142,'multiline':True]['text':'*
     * Saves the state of this trie.
     * @param state The State object to hold the trie's state.
     * @return *this
     * @see resetToState
     * @stable ICU 4.8
     ','line_number':155,'multiline':True]['text':'*
     * Resets this trie to the saved state.
     * If the state object contains no state, or the state of a different trie,
     * then this trie remains unchanged.
     * @param state The State object which holds a saved trie state.
     * @return *this
     * @see saveState
     * @see reset
     * @stable ICU 4.8
     ','line_number':169,'multiline':True]['text':'*
     * Determines whether the byte sequence so far matches, whether it has a value,
     * and whether another input byte can continue a matching byte sequence.
     * @return The match/value Result.
     * @stable ICU 4.8
     ','line_number':187,'multiline':True]['text':'*
     * Traverses the trie from the initial state for this input byte.
     * Equivalent to reset().next(inByte).
     * @param inByte Input byte value. Values -0x100..-1 are treated like 0..0xff.
     *               Values below -0x100 and above 0xff will never match.
     * @return The match/value Result.
     * @stable ICU 4.8
     ','line_number':195,'multiline':True]['text':'*
     * Traverses the trie from the current state for this input byte.
     * @param inByte Input byte value. Values -0x100..-1 are treated like 0..0xff.
     *               Values below -0x100 and above 0xff will never match.
     * @return The match/value Result.
     * @stable ICU 4.8
     ','line_number':211,'multiline':True]['text':'*
     * Traverses the trie from the current state for this byte sequence.
     * Equivalent to
     * \code
     * Result result=current();
     * for(each c in s)
     *   if(!USTRINGTRIE_HAS_NEXT(result)) return USTRINGTRIE_NO_MATCH;
     *   result=next(c);
     * return result;
     * \endcode
     * @param s A string or byte sequence. Can be NULL if length is 0.
     * @param length The length of the byte sequence. Can be -1 if NUL-terminated.
     * @return The match/value Result.
     * @stable ICU 4.8
     ','line_number':220,'multiline':True]['text':'*
     * Returns a matching byte sequence's value if called immediately after
     * current()/first()/next() returned USTRINGTRIE_INTERMEDIATE_VALUE or USTRINGTRIE_FINAL_VALUE.
     * getValue() can be called multiple times.
     *
     * Do not call getValue() after USTRINGTRIE_NO_MATCH or USTRINGTRIE_NO_VALUE!
     * @return The value for the byte sequence so far.
     * @stable ICU 4.8
     ','line_number':237,'multiline':True]['text':' U_ASSERT(leadByte>=kMinValueLead);','line_number':249,'multiline':False]['text':'*
     * Determines whether all byte sequences reachable from the current state
     * map to the same value.
     * @param uniqueValue Receives the unique value, if this function returns true.
     *                    (output-only)
     * @return true if all byte sequences reachable from the current state
     *         map to the same value.
     * @stable ICU 4.8
     ','line_number':253,'multiline':True]['text':' Skip the rest of a pending linear-match node.','line_number':264,'multiline':False]['text':'*
     * Finds each byte which continues the byte sequence from the current state.
     * That is, each byte b for which it would be next(b)!=USTRINGTRIE_NO_MATCH now.
     * @param out Each next byte is appended to this object.
     *            (Only uses the out.Append(s, length) method.)
     * @return the number of bytes which continue the byte sequence from here
     * @stable ICU 4.8
     ','line_number':268,'multiline':True]['text':'*
     * Iterator for all of the (byte sequence, value) pairs in a BytesTrie.
     * @stable ICU 4.8
     ','line_number':278,'multiline':True]['text':'*
         * Iterates from the root of a byte-serialized BytesTrie.
         * @param trieBytes The trie bytes.
         * @param maxStringLength If 0, the iterator returns full strings/byte sequences.
         *                        Otherwise, the iterator returns strings with this maximum length.
         * @param errorCode Standard ICU error code. Its input value must
         *                  pass the U_SUCCESS() test, or else the function returns
         *                  immediately. Check for U_FAILURE() on output or use with
         *                  function chaining. (See User Guide for details.)
         * @stable ICU 4.8
         ','line_number':284,'multiline':True]['text':'*
         * Iterates from the current state of the specified BytesTrie.
         * @param trie The trie whose state will be copied for iteration.
         * @param maxStringLength If 0, the iterator returns full strings/byte sequences.
         *                        Otherwise, the iterator returns strings with this maximum length.
         * @param errorCode Standard ICU error code. Its input value must
         *                  pass the U_SUCCESS() test, or else the function returns
         *                  immediately. Check for U_FAILURE() on output or use with
         *                  function chaining. (See User Guide for details.)
         * @stable ICU 4.8
         ','line_number':297,'multiline':True]['text':'*
         * Destructor.
         * @stable ICU 4.8
         ','line_number':310,'multiline':True]['text':'*
         * Resets this iterator to its initial state.
         * @return *this
         * @stable ICU 4.8
         ','line_number':316,'multiline':True]['text':'*
         * @return true if there are more elements.
         * @stable ICU 4.8
         ','line_number':323,'multiline':True]['text':'*
         * Finds the next (byte sequence, value) pair if there is one.
         *
         * If the byte sequence is truncated to the maximum length and does not
         * have a real value, then the value is set to -1.
         * In this case, this "not a real value" is indistinguishable from
         * a real value of -1.
         * @param errorCode Standard ICU error code. Its input value must
         *                  pass the U_SUCCESS() test, or else the function returns
         *                  immediately. Check for U_FAILURE() on output or use with
         *                  function chaining. (See User Guide for details.)
         * @return true if there is another element.
         * @stable ICU 4.8
         ','line_number':329,'multiline':True]['text':'*
         * @return The NUL-terminated byte sequence for the last successful next().
         * @stable ICU 4.8
         ','line_number':345,'multiline':True]['text':'*
         * @return The value for the last successful next().
         * @stable ICU 4.8
         ','line_number':350,'multiline':True]['text':' The stack stores pairs of integers for backtracking to another','line_number':371,'multiline':False]['text':' outbound edge of a branch node.','line_number':372,'multiline':False]['text':' The first integer is an offset from bytes_.','line_number':373,'multiline':False]['text':' The second integer has the str_->length() from before the node in bits 15..0,','line_number':374,'multiline':False]['text':' and the remaining branch length in bits 24..16. (Bits 31..25 are unused.)','line_number':375,'multiline':False]['text':' (We could store the remaining branch length minus 1 in bits 23..16 and not use bits 31..24,','line_number':376,'multiline':False]['text':' but the code looks more confusing that way.)','line_number':377,'multiline':False]['text':'*
     * Constructs a BytesTrie reader instance.
     * Unlike the public constructor which just aliases an array,
     * this constructor adopts the builder's array.
     * This constructor is only called by the builder.
     ','line_number':385,'multiline':True]['text':' No assignment operator.','line_number':396,'multiline':False]['text':' Reads a compact 32-bit integer.','line_number':403,'multiline':False]['text':' pos is already after the leadByte, and the lead byte is already shifted right by 1.','line_number':404,'multiline':False]['text':' U_ASSERT(leadByte>=kMinValueLead);','line_number':407,'multiline':False]['text':' Reads a jump delta and jumps.','line_number':424,'multiline':False]['text':' Handles a branch node for both next(byte) and next(string).','line_number':445,'multiline':False]['text':' Requires remainingLength_<0.','line_number':448,'multiline':False]['text':' Helper functions for hasUniqueValue().','line_number':451,'multiline':False]['text':' Recursively finds a unique value (or whether there is not a unique one)','line_number':452,'multiline':False]['text':' from a branch.','line_number':453,'multiline':False]['text':' Recursively finds a unique value (or whether there is not a unique one)','line_number':456,'multiline':False]['text':' starting from a position on a node lead byte.','line_number':457,'multiline':False]['text':' Helper functions for getNextBytes().','line_number':460,'multiline':False]['text':' getNextBytes() when pos is on a branch node.','line_number':461,'multiline':False]['text':' BytesTrie data structure','line_number':465,'multiline':False]['text':'','line_number':466,'multiline':False]['text':' The trie consists of a series of byte-serialized nodes for incremental','line_number':467,'multiline':False]['text':' string/byte sequence matching. The root node is at the beginning of the trie data.','line_number':468,'multiline':False]['text':'','line_number':469,'multiline':False]['text':' Types of nodes are distinguished by their node lead byte ranges.','line_number':470,'multiline':False]['text':' After each node, except a final-value node, another node follows to','line_number':471,'multiline':False]['text':' encode match values or continue matching further bytes.','line_number':472,'multiline':False]['text':'','line_number':473,'multiline':False]['text':' Node types:','line_number':474,'multiline':False]['text':'  - Value node: Stores a 32-bit integer in a compact, variable-length format.','line_number':475,'multiline':False]['text':'    The value is for the string/byte sequence so far.','line_number':476,'multiline':False]['text':'    One node bit indicates whether the value is final or whether','line_number':477,'multiline':False]['text':'    matching continues with the next node.','line_number':478,'multiline':False]['text':'  - Linear-match node: Matches a number of bytes.','line_number':479,'multiline':False]['text':'  - Branch node: Branches to other nodes according to the current input byte.','line_number':480,'multiline':False]['text':'    The node byte is the length of the branch (number of bytes to select from)','line_number':481,'multiline':False]['text':'    minus 1. It is followed by a sub-node:','line_number':482,'multiline':False]['text':'    - If the length is at most kMaxBranchLinearSubNodeLength, then','line_number':483,'multiline':False]['text':'      there are length-1 (key, value) pairs and then one more comparison byte.','line_number':484,'multiline':False]['text':'      If one of the key bytes matches, then the value is either a final value for','line_number':485,'multiline':False]['text':'      the string/byte sequence so far, or a "jump" delta to the next node.','line_number':486,'multiline':False]['text':'      If the last byte matches, then matching continues with the next node.','line_number':487,'multiline':False]['text':'      (Values have the same encoding as value nodes.)','line_number':488,'multiline':False]['text':'    - If the length is greater than kMaxBranchLinearSubNodeLength, then','line_number':489,'multiline':False]['text':'      there is one byte and one "jump" delta.','line_number':490,'multiline':False]['text':'      If the input byte is less than the sub-node byte, then "jump" by delta to','line_number':491,'multiline':False]['text':'      the next sub-node which will have a length of length/2.','line_number':492,'multiline':False]['text':'      (The delta has its own compact encoding.)','line_number':493,'multiline':False]['text':'      Otherwise, skip the "jump" delta to the next sub-node','line_number':494,'multiline':False]['text':'      which will have a length of length-length/2.','line_number':495,'multiline':False]['text':' Node lead byte values.','line_number':497,'multiline':False]['text':' 00..0f: Branch node. If node!=0 then the length is node+1, otherwise','line_number':499,'multiline':False]['text':' the length is one more than the next byte.','line_number':500,'multiline':False]['text':' For a branch sub-node with at most this many entries, we drop down','line_number':502,'multiline':False]['text':' to a linear search.','line_number':503,'multiline':False]['text':' 10..1f: Linear-match node, match 1..16 bytes and continue reading the next node.','line_number':506,'multiline':False]['text':' 20..ff: Variable-length value node.','line_number':510,'multiline':False]['text':' If odd, the value is final. (Otherwise, intermediate value or jump delta.)','line_number':511,'multiline':False]['text':' Then shift-right by 1 bit.','line_number':512,'multiline':False]['text':' The remaining lead byte value indicates the number of following bytes (0..4)','line_number':513,'multiline':False]['text':' and contains the value's top bits.','line_number':514,'multiline':False]['text':' 0x20','line_number':515,'multiline':False]['text':' It is a final value if bit 0 is set.','line_number':516,'multiline':False]['text':' Compact value: After testing bit 0, shift right by 1 and then use the following thresholds.','line_number':519,'multiline':False]['text':' 0x10','line_number':520,'multiline':False]['text':' At least 6 bits in the first byte.','line_number':521,'multiline':False]['text':' 0x51','line_number':523,'multiline':False]['text':' 0x6c','line_number':526,'multiline':False]['text':' A little more than Unicode code points. (0x11ffff)','line_number':529,'multiline':False]['text':' Compact delta integers.','line_number':534,'multiline':False]['text':' 0xc0','line_number':536,'multiline':False]['text':' 0x2fff','line_number':541,'multiline':False]['text':' 0xdffff','line_number':542,'multiline':False]['text':' For getState64():','line_number':544,'multiline':False]['text':' The remainingMatchLength_ is -1..14=(kMaxLinearMatchLength=0x10)-2','line_number':545,'multiline':False]['text':' so we need at least 5 bits for that.','line_number':546,'multiline':False]['text':' We add 2 to store it as a positive value 1..16=kMaxLinearMatchLength.','line_number':547,'multiline':False]['text':' Fixed value referencing the BytesTrie bytes.','line_number':553,'multiline':False]['text':' Iterator variables.','line_number':556,'multiline':False]['text':' Pointer to next trie byte to read. NULL if no more matches.','line_number':558,'multiline':False]['text':' Remaining length of a linear-match node, minus 1. Negative if not in such a node.','line_number':560,'multiline':False]['text':' U_SHOW_CPLUSPLUS_API ','line_number':566,'multiline':True]['text':' __BYTESTRIE_H__','line_number':568,'multiline':False]