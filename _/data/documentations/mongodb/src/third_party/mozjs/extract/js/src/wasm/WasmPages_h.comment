['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2021 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]['text':' Pages is a typed unit representing a multiple of wasm::PageSize. We','line_number':29,'multiline':False]['text':' generally use pages as the unit of length when representing linear memory','line_number':30,'multiline':False]['text':' lengths so as to avoid overflow when the specified initial or maximum pages','line_number':31,'multiline':False]['text':' would overflow the native word size.','line_number':32,'multiline':False]['text':'','line_number':33,'multiline':False]['text':' Modules may specify pages up to 2^48 inclusive and so Pages is 64-bit on all','line_number':34,'multiline':False]['text':' platforms.','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':' We represent byte lengths using the native word size, as it is assumed that','line_number':37,'multiline':False]['text':' consumers of this API will only need byte lengths once it is time to','line_number':38,'multiline':False]['text':' allocate memory, at which point the pages will be checked against the','line_number':39,'multiline':False]['text':' implementation limits `MaxMemory32Pages()` and will then be guaranteed to','line_number':40,'multiline':False]['text':' fit in a native word.','line_number':41,'multiline':False]['text':' Pages are specified by limit fields, which in general may be up to 2^48,','line_number':44,'multiline':False]['text':' so we must use uint64_t here.','line_number':45,'multiline':False]['text':' Get the wrapped page value. Only use this if you must, prefer to use or','line_number':51,'multiline':False]['text':' add new APIs to Page.','line_number':52,'multiline':False]['text':' Converts from a byte length to pages, assuming that the length is an','line_number':55,'multiline':False]['text':' exact multiple of the page size.','line_number':56,'multiline':False]['text':' Return whether the page length may overflow when converted to a byte','line_number':62,'multiline':False]['text':' length in the native word size.','line_number':63,'multiline':False]['text':' Converts from pages to byte length in the native word size. Users must','line_number':70,'multiline':False]['text':' check for overflow, or be assured else-how that overflow cannot happen.','line_number':71,'multiline':False]['text':' Increment this pages by delta and return whether the resulting value','line_number':78,'multiline':False]['text':' did not overflow. If there is no overflow, then this is set to the','line_number':79,'multiline':False]['text':' resulting value.','line_number':80,'multiline':False]['text':' Implement pass-through comparison operators so that Pages can be compared.','line_number':91,'multiline':False]['text':' namespace wasm','line_number':101,'multiline':False]['text':' namespace js','line_number':102,'multiline':False]['text':' wasm_pages_h','line_number':104,'multiline':False]