['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
**********************************************************************
*   Copyright (C) 2008-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
**********************************************************************
','line_number':3,'multiline':True]['text':' TODO: Call this method where it is actually needed, instead of in the','line_number':40,'multiline':False]['text':' constructor, to allow for lazy data loading.  See #12696.','line_number':41,'multiline':False]['text':' TODO: Call this method where it is actually needed, instead of in the','line_number':49,'multiline':False]['text':' constructor, to allow for lazy data loading.  See #12696.','line_number':50,'multiline':False]['text':' Copy Constructor, used by the user level clone() function.','line_number':74,'multiline':False]['text':' Will delete if refCount goes to zero.','line_number':95,'multiline':False]['text':'  Cast this instance as a USpoofChecker for the C API.','line_number':101,'multiline':False]['text':'','line_number':106,'multiline':False]['text':'  Incoming parameter check on Status and the SpoofChecker object','line_number':107,'multiline':False]['text':'    received from the C API.','line_number':108,'multiline':False]['text':'','line_number':109,'multiline':False]['text':' Number of locales provided by caller.','line_number':133,'multiline':False]['text':' Loop runs once per locale from the localesList, a comma separated list of locales.','line_number':135,'multiline':False]['text':' We have one locale from the locales list.','line_number':154,'multiline':False]['text':' Add the script chars for this locale to the accumulating set of allowed chars.','line_number':155,'multiline':False]['text':' If the locale is no good, we will be notified back via status.','line_number':156,'multiline':False]['text':' If our caller provided an empty list of locales, we disable the allowed characters checking','line_number':165,'multiline':False]['text':' Add all common and inherited characters to the set of allowed chars.','line_number':182,'multiline':False]['text':' If anything went wrong, we bail out without changing','line_number':189,'multiline':False]['text':' the state of the spoof checker.','line_number':190,'multiline':False]['text':' Store the updated spoof checker state.','line_number':195,'multiline':False]['text':'status','line_number':211,'multiline':True]['text':' Given a locale (a language), add all the characters from all of the scripts used with that language','line_number':216,'multiline':False]['text':' to the allowedChars UnicodeSet','line_number':217,'multiline':False]['text':' Computes the augmented script set for a code point, according to UTS 39 section 5.1.','line_number':238,'multiline':False]['text':' Section 5.1 step 1','line_number':244,'multiline':False]['text':' Section 5.1 step 2','line_number':263,'multiline':False]['text':' Computes the resolved script set for a string, according to UTS 39 section 5.1.','line_number':269,'multiline':False]['text':' Computes the resolved script set for a string, omitting characters having the specified script.','line_number':274,'multiline':False]['text':' If USCRIPT_CODE_LIMIT is passed as the second argument, all characters are included.','line_number':275,'multiline':False]['text':' Compute the augmented script set for the character','line_number':284,'multiline':False]['text':' Intersect the augmented script set with the resolved script set, but only if the character doesn't','line_number':288,'multiline':False]['text':' have the script specified in the function call','line_number':289,'multiline':False]['text':' Computes the set of numerics for a string, according to UTS 39 section 5.3.','line_number':296,'multiline':False]['text':'status','line_number':297,'multiline':True]['text':' Store a representative character for each kind of decimal digit','line_number':304,'multiline':False]['text':' Store the zero character as a representative for comparison.','line_number':306,'multiline':False]['text':' Unicode guarantees it is codePoint - value','line_number':307,'multiline':False]['text':' Computes the restriction level of a string, according to UTS 39 section 5.2.','line_number':313,'multiline':False]['text':' Section 5.2 step 1:','line_number':315,'multiline':False]['text':' Section 5.2 step 2','line_number':320,'multiline':False]['text':' Java use a static UnicodeSet for this test.  In C++, avoid the static variable','line_number':321,'multiline':False]['text':' and just do a simple for loop.','line_number':322,'multiline':False]['text':' Section 5.2 steps 3:','line_number':334,'multiline':False]['text':' Section 5.2 step 4:','line_number':339,'multiline':False]['text':' Section 5.2 step 5:','line_number':344,'multiline':False]['text':' Section 5.2 step 6:','line_number':349,'multiline':False]['text':' Section 5.2 step 7:','line_number':356,'multiline':False]['text':' Section 5.2 step 8:','line_number':364,'multiline':False]['text':' Skip over characters except for those with combining class 0 (non-combining characters) or with','line_number':376,'multiline':False]['text':' combining class 230 (same class as U+0307)','line_number':377,'multiline':False]['text':' Convert a text format hex number.  Utility function used by builder code.  Static.','line_number':407,'multiline':False]['text':' Input: UChar *string text.  Output: a UChar32','line_number':408,'multiline':False]['text':' Input has been pre-checked, and will have no non-hex chars.','line_number':409,'multiline':False]['text':' The number must fall in the code point range of 0..0x10ffff','line_number':410,'multiline':False]['text':' Static Function.','line_number':411,'multiline':False]['text':' Upper Case 'A'','line_number':422,'multiline':False]['text':' Lower Case 'a'','line_number':425,'multiline':False]['text':'-----------------------------------------','line_number':439,'multiline':False]['text':'','line_number':440,'multiline':False]['text':'   class CheckResult Implementation','line_number':441,'multiline':False]['text':'','line_number':442,'multiline':False]['text':'-----------------------------------------','line_number':443,'multiline':False]['text':'','line_number':453,'multiline':False]['text':'  Incoming parameter check on Status and the CheckResult object','line_number':454,'multiline':False]['text':'    received from the C API.','line_number':455,'multiline':False]['text':'','line_number':456,'multiline':False]['text':'----------------------------------------------------------------------------------------------','line_number':482,'multiline':False]['text':'','line_number':483,'multiline':False]['text':'   class SpoofData Implementation','line_number':484,'multiline':False]['text':'','line_number':485,'multiline':False]['text':'----------------------------------------------------------------------------------------------','line_number':486,'multiline':False]['text':' type ','line_number':505,'multiline':True]['text':'name','line_number':505,'multiline':True]['text':' dataFormat="Cfu "','line_number':511,'multiline':False]['text':'  Methods for the loading of the default confusables data file.  The confusable','line_number':527,'multiline':False]['text':'  data is loaded only when it is needed.','line_number':528,'multiline':False]['text':'','line_number':529,'multiline':False]['text':'  SpoofData::getDefault() - Return the default confusables data, and call the','line_number':530,'multiline':False]['text':'                            initOnce() if it is not available.  Adds a reference','line_number':531,'multiline':False]['text':'                            to the SpoofData that the caller is responsible for','line_number':532,'multiline':False]['text':'                            decrementing when they are done with the data.','line_number':533,'multiline':False]['text':'','line_number':534,'multiline':False]['text':'  uspoof_loadDefaultData - Called once, from initOnce().  The resulting SpoofData','line_number':535,'multiline':False]['text':'                           is shared by all spoof checkers using the default data.','line_number':536,'multiline':False]['text':'','line_number':537,'multiline':False]['text':'  uspoof_cleanupDefaultData - Called during cleanup.','line_number':538,'multiline':False]['text':'','line_number':539,'multiline':False]['text':' Will delete, assuming all user-level spoof checkers were closed.','line_number':547,'multiline':False]['text':' context, would receive dataVersion if supplied.','line_number':558,'multiline':False]['text':' fRawData is non-const because it may be constructed by the data builder.','line_number':590,'multiline':False]['text':' Spoof Data constructor for use from data builder.','line_number':623,'multiline':False]['text':'   Initializes a new, empty data area that will be populated later.','line_number':624,'multiline':False]['text':' The spoof header should already be sized to be a multiple of 16 bytes.','line_number':632,'multiline':False]['text':' Just in case it's not, round it up.','line_number':633,'multiline':False]['text':' reset() - initialize all fields.','line_number':653,'multiline':False]['text':'           Should be updated if any new fields are added.','line_number':654,'multiline':False]['text':'           Called by constructors to put things in a known initial state.','line_number':655,'multiline':False]['text':'  SpoofData::initPtrs()','line_number':668,'multiline':False]['text':'            Initialize the pointers to the various sections of the raw data.','line_number':669,'multiline':False]['text':'','line_number':670,'multiline':False]['text':'            This function is used both during the Trie building process (multiple','line_number':671,'multiline':False]['text':'            times, as the individual data sections are added), and','line_number':672,'multiline':False]['text':'            during the opening of a Spoof Checker from prebuilt data.','line_number':673,'multiline':False]['text':'','line_number':674,'multiline':False]['text':'            The pointers for non-existent data sections (identified by an offset of 0)','line_number':675,'multiline':False]['text':'            are set to NULL.','line_number':676,'multiline':False]['text':'','line_number':677,'multiline':False]['text':'            Note:  During building the data, adding each new data section','line_number':678,'multiline':False]['text':'            reallocs the raw data area, which likely relocates it, which','line_number':679,'multiline':False]['text':'            in turn requires reinitializing all of the pointers into it, hence','line_number':680,'multiline':False]['text':'            multiple calls to this function during building.','line_number':681,'multiline':False]['text':'','line_number':682,'multiline':False]['text':' Round up to a multiple of 16','line_number':735,'multiline':False]['text':'-------------------------------','line_number':759,'multiline':False]['text':'','line_number':760,'multiline':False]['text':' Front-end APIs for SpoofData','line_number':761,'multiline':False]['text':'','line_number':762,'multiline':False]['text':'-------------------------------','line_number':763,'multiline':False]['text':' Perform a binary search.','line_number':766,'multiline':False]['text':' [lo, hi), i.e lo is inclusive, hi is exclusive.','line_number':767,'multiline':False]['text':' The result after the loop will be in lo.','line_number':768,'multiline':False]['text':' Found result.  Break early.','line_number':778,'multiline':False]['text':' Did we find an entry?  If not, the char maps to itself.','line_number':784,'multiline':False]['text':' Add the element to the string builder and return.','line_number':790,'multiline':False]['text':' Value is either a char (for strings of length 1) or','line_number':805,'multiline':False]['text':' an index into the string table (for longer strings)','line_number':806,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':822,'multiline':False]['text':'','line_number':823,'multiline':False]['text':'  uspoof_swap   -  byte swap and char encoding swap of spoof data','line_number':824,'multiline':False]['text':'','line_number':825,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':826,'multiline':False]['text':'','line_number':839,'multiline':False]['text':'  Check that the data header is for spoof data.','line_number':840,'multiline':False]['text':'    (Header contents are defined in gencfu.cpp)','line_number':841,'multiline':False]['text':'','line_number':842,'multiline':False]['text':' dataFormat="Cfu " ','line_number':844,'multiline':True]['text':'','line_number':862,'multiline':False]['text':' Swap the data header.  (This is the generic ICU Data Header, not the uspoof Specific','line_number':863,'multiline':False]['text':'                         header).  This swap also conveniently gets us','line_number':864,'multiline':False]['text':'                         the size of the ICU d.h., which lets us locate the start','line_number':865,'multiline':False]['text':'                         of the uspoof specific data.','line_number':866,'multiline':False]['text':'','line_number':867,'multiline':False]['text':'','line_number':871,'multiline':False]['text':' Get the Spoof Data Header, and check that it appears to be OK.','line_number':872,'multiline':False]['text':'','line_number':873,'multiline':False]['text':'','line_number':874,'multiline':False]['text':'','line_number':885,'multiline':False]['text':' Prefight operation?  Just return the size','line_number':886,'multiline':False]['text':'','line_number':887,'multiline':False]['text':'','line_number':894,'multiline':False]['text':' Check that length passed in is consistent with length from Spoof data header.','line_number':895,'multiline':False]['text':'','line_number':896,'multiline':False]['text':'','line_number':905,'multiline':False]['text':' Swap the Data.  Do the data itself first, then the Spoof Data Header, because','line_number':906,'multiline':False]['text':'                 we need to reference the header to locate the data, and an','line_number':907,'multiline':False]['text':'                 inplace swap of the header leaves it unusable.','line_number':908,'multiline':False]['text':'','line_number':909,'multiline':False]['text':'','line_number':916,'multiline':False]['text':' If not swapping in place, zero out the output buffer before starting.','line_number':917,'multiline':False]['text':'    Gaps may exist between the individual sections, and these must be zeroed in','line_number':918,'multiline':False]['text':'    the output buffer.  The simplest way to do that is to just zero the whole thing.','line_number':919,'multiline':False]['text':'','line_number':920,'multiline':False]['text':' Confusables Keys Section   (fCFUKeys)','line_number':925,'multiline':False]['text':' String Index Section','line_number':930,'multiline':False]['text':' String Table Section','line_number':935,'multiline':False]['text':' And, last, swap the header itself.','line_number':940,'multiline':False]['text':'   int32_t   fMagic             // swap this','line_number':941,'multiline':False]['text':'   uint8_t   fFormatVersion[4]  // Do not swap this, just copy','line_number':942,'multiline':False]['text':'   int32_t   fLength and all the rest       // Swap the rest, all is 32 bit stuff.','line_number':943,'multiline':False]['text':'','line_number':944,'multiline':False]['text':' swap starting at fLength','line_number':951,'multiline':False]['text':' minus magic and fFormatVersion[4] ','line_number':952,'multiline':True]