['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'******************************************************************************
* Copyright (C) 2008-2016, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
*
* File DTITVFMT.CPP
*
*******************************************************************************
','line_number':3,'multiline':True]['text':' for 'typeid' to work','line_number':13,'multiline':False]['text':'TODO: put in compilation','line_number':19,'multiline':False]['text':'#define DTITVFMT_DEBUG 1','line_number':20,'multiline':False]['text':'yMMMMEEEEd','line_number':48,'multiline':False]['text':'yMMMMd','line_number':50,'multiline':False]['text':'yMMMd','line_number':52,'multiline':False]['text':'yMd','line_number':54,'multiline':False]['text':' latestFirst:','line_number':63,'multiline':False]['text':' earliestFirst:','line_number':66,'multiline':False]['text':' Mutex, protects access to fDateFormat, fFromCalendar and fToCalendar.','line_number':83,'multiline':False]['text':'        Needed because these data members are modified by const methods of DateIntervalFormat.','line_number':84,'multiline':False]['text':' note: fFromCalendar and fToCalendar hold no persistent state, and therefore do not participate in operator ==.','line_number':245,'multiline':False]['text':'       fDateFormat has the primary calendar for the DateIntervalFormat.','line_number':246,'multiline':False]['text':' LocalPointer only sets OOM status if U_SUCCESS is true.','line_number':315,'multiline':False]['text':' Compute the span fields and sort them into place:','line_number':334,'multiline':False]['text':' LocalPointer only sets OOM status if U_SUCCESS is true.','line_number':369,'multiline':False]['text':' Compute the span fields and sort them into place:','line_number':388,'multiline':False]['text':' The following is only called from within the gFormatterMutex lock','line_number':417,'multiline':False]['text':' Initialize firstIndex to -1 (single date, no range)','line_number':429,'multiline':False]['text':' not support different calendar types and time zones','line_number':432,'multiline':False]['text':'if ( fromCalendar.getType() != toCalendar.getType() ) {','line_number':433,'multiline':False]['text':' First, find the largest different calendar field.','line_number':439,'multiline':False]['text':' for setContext, ignored','line_number':473,'multiline':False]['text':' Set up fDateFormat to handle the first or only part of the interval','line_number':474,'multiline':False]['text':' (override later for any second part). Inside lock, OK to modify fDateFormat.','line_number':475,'multiline':False]['text':' ignore the millisecond etc. small fields' difference.
         * use single date when all the above are the same.
         ','line_number':479,'multiline':True]['text':' following call should not set wrong status,','line_number':486,'multiline':False]['text':' all the pass-in fields are valid till here','line_number':487,'multiline':False]['text':' the largest different calendar field is small than
             * the smallest calendar field in pattern,
             * return single date format.
             ','line_number':495,'multiline':True]['text':' If the first part in interval pattern is empty,','line_number':503,'multiline':False]['text':' the 2nd part of it saves the full-pattern used in fall-back.','line_number':504,'multiline':False]['text':' For a 'real' interval pattern, the first part will never be empty.','line_number':505,'multiline':False]['text':' fall back','line_number':507,'multiline':False]['text':' break the interval pattern into 2 parts,','line_number':526,'multiline':False]['text':' first part should not be empty,','line_number':527,'multiline':False]['text':' No capitalization for second part of interval','line_number':535,'multiline':False]['text':' source ','line_number':547,'multiline':True]['text':' result ','line_number':548,'multiline':True]['text':' parse_pos ','line_number':549,'multiline':True]['text':' parseObject(const UnicodeString&, Formattable&, UErrorCode&) const','line_number':550,'multiline':False]['text':' will set status as U_INVALID_FORMAT_ERROR if','line_number':551,'multiline':False]['text':' parse_pos is still 0','line_number':552,'multiline':False]['text':' Delete patterns that get reset by initializePattern','line_number':573,'multiline':False]['text':' The fDateFormat has the primary calendar for the DateIntervalFormat and has','line_number':600,'multiline':False]['text':' ownership of any adopted TimeZone; fFromCalendar and fToCalendar are internal','line_number':601,'multiline':False]['text':' work clones of that calendar (and should not also be given ownership of the','line_number':602,'multiline':False]['text':' adopted TimeZone).','line_number':603,'multiline':False]['text':' The fDateFormat has the primary calendar for the DateIntervalFormat;','line_number':618,'multiline':False]['text':' fFromCalendar and fToCalendar are internal work clones of that calendar.','line_number':619,'multiline':False]['text':' If fDateFormat is nullptr (unexpected), create default timezone.','line_number':635,'multiline':False]['text':' safe to delete f, although nothing actually is saved','line_number':707,'multiline':False]['text':'*
 * Initialize interval patterns locale to this formatter
 *
 * This code is a bit complicated since
 * 1. the interval patterns saved in resource bundle files are interval
 *    patterns based on date or time only.
 *    It does not have interval patterns based on both date and time.
 *    Interval patterns on both date and time are algorithm generated.
 *
 *    For example, it has interval patterns on skeleton "dMy" and "hm",
 *    but it does not have interval patterns on skeleton "dMyhm".
 *
 *    The rule to genearte interval patterns for both date and time skeleton are
 *    1) when the year, month, or day differs, concatenate the two original
 *    expressions with a separator between,
 *    For example, interval pattern from "Jan 10, 2007 10:10 am"
 *    to "Jan 11, 2007 10:10am" is
 *    "Jan 10, 2007 10:10 am - Jan 11, 2007 10:10am"
 *
 *    2) otherwise, present the date followed by the range expression
 *    for the time.
 *    For example, interval pattern from "Jan 10, 2007 10:10 am"
 *    to "Jan 10, 2007 11:10am" is
 *    "Jan 10, 2007 10:10 am - 11:10am"
 *
 * 2. even a pattern does not request a certion calendar field,
 *    the interval pattern needs to include such field if such fields are
 *    different between 2 dates.
 *    For example, a pattern/skeleton is "hm", but the interval pattern
 *    includes year, month, and date when year, month, and date differs.
 *
 * @param status          output param set to success/failure code on exit
 * @stable ICU 4.0
 ','line_number':716,'multiline':True]['text':' fSkeleton is already set by createDateIntervalInstance()','line_number':767,'multiline':False]['text':' or by createInstance(UnicodeString skeleton, .... )','line_number':768,'multiline':False]['text':' initialize the fIntervalPattern ordering','line_number':776,'multiline':False]['text':' Check whether the skeleton is a combination of date and time.
     * For the complication reason 1 explained above.
     ','line_number':782,'multiline':True]['text':' the difference between time skeleton and normalizedTimeSkeleton are:
     * 1. (Formerly, normalized time skeleton folded 'H' to 'h'; no longer true)
     * 2. (Formerly, 'a' was omitted in normalized time skeleton; this is now handled elsewhere)
     * 3. there is only one appearance for 'h' or 'H', 'm','v', 'z' in normalized
     *    time skeleton
     *
     * The difference between date skeleton and normalizedDateSkeleton are:
     * 1. both 'y' and 'd' appear only once in normalizeDateSkeleton
     * 2. 'E' and 'EE' are normalized into 'EEE'
     * 3. 'MM' is normalized into 'M'
     ','line_number':791,'multiline':True]['text':' move this up here since we need it for fallbacks','line_number':815,'multiline':False]['text':' Need the Date/Time pattern for concatenation of the date','line_number':817,'multiline':False]['text':' with the time interval.','line_number':818,'multiline':False]['text':' The date/time pattern ( such as {0} {1} ) is saved in','line_number':819,'multiline':False]['text':' calendar, that is why need to get the CalendarData here.','line_number':820,'multiline':False]['text':' for skeletons with seconds, found is false and we enter this block','line_number':846,'multiline':False]['text':' use fallback','line_number':848,'multiline':False]['text':' TODO: if user asks "m"(minute), but "d"(day) differ','line_number':849,'multiline':False]['text':' prefix with yMd','line_number':852,'multiline':False]['text':' for fall back interval patterns,','line_number':859,'multiline':False]['text':' the first part of the pattern is empty,','line_number':860,'multiline':False]['text':' the second part of the pattern is the full-pattern','line_number':861,'multiline':False]['text':' should be used in fall-back.','line_number':862,'multiline':False]['text':' TODO: fall back','line_number':875,'multiline':False]['text':' TODO: fall back','line_number':878,'multiline':False]['text':' end of skeleton not found','line_number':881,'multiline':False]['text':' interval patterns for skeleton are found in resource','line_number':882,'multiline':False]['text':' done','line_number':884,'multiline':False]['text':' prefix with yMd','line_number':886,'multiline':False]['text':' for fall back interval patterns,','line_number':893,'multiline':False]['text':' the first part of the pattern is empty,','line_number':894,'multiline':False]['text':' the second part of the pattern is the full-pattern','line_number':895,'multiline':False]['text':' should be used in fall-back.','line_number':896,'multiline':False]['text':' if both present,
         * 1) when the era, year, month, or day differs,
         * concatenate the two original expressions with a separator between,
         * 2) otherwise, present the date followed by the
         * range expression for the time.
         ','line_number':909,'multiline':True]['text':'
         * 1) when the era, year, month, or day differs,
         * concatenate the two original expressions with a separator between,
         ','line_number':915,'multiline':True]['text':' if field exists, use fall back','line_number':919,'multiline':False]['text':' prefix skeleton with 'd'','line_number':922,'multiline':False]['text':' then prefix skeleton with 'M'','line_number':927,'multiline':False]['text':' then prefix skeleton with 'y'','line_number':932,'multiline':False]['text':' then prefix skeleton with 'G'','line_number':937,'multiline':False]['text':'
         * 2) otherwise, present the date followed by the
         * range expression for the time.
         ','line_number':942,'multiline':True]['text':' earlier failure getting dateTimeFormat','line_number':948,'multiline':False]['text':' strip literal text from the pattern (so literal characters don't get mistaken for pattern','line_number':992,'multiline':False]['text':' characters-- such as the 'h' in 'Uhr' in Germam)','line_number':993,'multiline':False]['text':' dateSkeleton follows the sequence of y*M*E*d*','line_number':1054,'multiline':False]['text':' timeSkeleton follows the sequence of hm*[v|z]?','line_number':1055,'multiline':False]['text':' generate normalized form for date','line_number':1140,'multiline':True]['text':' generate normalized form for time ','line_number':1168,'multiline':True]['text':'*
 * Generate date or time interval pattern from resource,
 * and set them into the interval pattern locale to this formatter.
 *
 * It needs to handle the following:
 * 1. need to adjust field width.
 *    For example, the interval patterns saved in DateIntervalInfo
 *    includes "dMMMy", but not "dMMMMy".
 *    Need to get interval patterns for dMMMMy from dMMMy.
 *    Another example, the interval patterns saved in DateIntervalInfo
 *    includes "hmv", but not "hmz".
 *    Need to get interval patterns for "hmz' from 'hmv'
 *
 * 2. there might be no pattern for 'y' differ for skeleton "Md",
 *    in order to get interval patterns for 'y' differ,
 *    need to look for it from skeleton 'yMd'
 *
 * @param dateSkeleton   normalized date skeleton
 * @param timeSkeleton   normalized time skeleton
 * @return               whether the resource is found for the skeleton.
 *                       TRUE if interval pattern found for the skeleton,
 *                       FALSE otherwise.
 * @stable ICU 4.0
 ','line_number':1184,'multiline':True]['text':' if both date and time skeleton present,','line_number':1213,'multiline':False]['text':' the final interval pattern might include time interval patterns','line_number':1214,'multiline':False]['text':' ( when, am_pm, hour, minute differ ),','line_number':1215,'multiline':False]['text':' but not date interval patterns ( when year, month, day differ ).','line_number':1216,'multiline':False]['text':' For year/month/day differ, it falls back to fall-back pattern.','line_number':1217,'multiline':False]['text':' interval patterns for skeleton "dMMMy" (but not "dMMMMy")
     * are defined in resource,
     * interval patterns for skeleton "dMMMMy" are calculated by
     * 1. get the best match skeleton for "dMMMMy", which is "dMMMy"
     * 2. get the interval patterns for "dMMMy",
     * 3. extend "MMM" to "MMMM" in above interval patterns for "dMMMMy"
     * getBestSkeleton() is step 1.
     ','line_number':1224,'multiline':True]['text':' best skeleton, and the difference information','line_number':1232,'multiline':False]['text':' best skeleton could be nullptr.
       For example: in "ca" resource file,
       interval format is defined as following
           intervalFormats{
                fallback{"{0} - {1}"}
            }
       there is no skeletons/interval patterns defined,
       and the best skeleton match could be nullptr
     ','line_number':1236,'multiline':True]['text':' Set patterns for fallback use, need to do this','line_number':1249,'multiline':False]['text':' before returning if differenceInfo == -1','line_number':1250,'multiline':False]['text':' no way to report OOM. :(','line_number':1256,'multiline':False]['text':' no way to report OOM. :(','line_number':1262,'multiline':False]['text':' difference:','line_number':1265,'multiline':False]['text':' 0 means the best matched skeleton is the same as input skeleton','line_number':1266,'multiline':False]['text':' 1 means the fields are the same, but field width are different','line_number':1267,'multiline':False]['text':' 2 means the only difference between fields are v/z,','line_number':1268,'multiline':False]['text':' -1 means there are other fields difference','line_number':1269,'multiline':False]['text':' (this will happen, for instance, if the supplied skeleton has seconds,','line_number':1270,'multiline':False]['text':'  but no skeletons in the intervalFormats data do)','line_number':1271,'multiline':False]['text':' skeleton has different fields, not only  v/z difference','line_number':1273,'multiline':False]['text':' only has date skeleton','line_number':1280,'multiline':False]['text':' for fall back interval patterns,','line_number':1329,'multiline':False]['text':' the first part of the pattern is empty,','line_number':1330,'multiline':False]['text':' the second part of the pattern is the full-pattern','line_number':1331,'multiline':False]['text':' should be used in fall-back.','line_number':1332,'multiline':False]['text':' following should not set any wrong status.','line_number':1334,'multiline':False]['text':' check for "latestFirst:" or "earliestFirst:" prefix','line_number':1364,'multiline':False]['text':'*
 * Generate interval pattern from existing resource
 *
 * It not only save the interval patterns,
 * but also return the extended skeleton and its best match skeleton.
 *
 * @param field           largest different calendar field
 * @param skeleton        skeleton
 * @param bestSkeleton    the best match skeleton which has interval pattern
 *                        defined in resource
 * @param differenceInfo  the difference between skeleton and best skeleton
 *         0 means the best matched skeleton is the same as input skeleton
 *         1 means the fields are the same, but field width are different
 *         2 means the only difference between fields are v/z,
 *        -1 means there are other fields difference
 *
 * @param extendedSkeleton      extended skeleton
 * @param extendedBestSkeleton  extended best match skeleton
 * @return                      whether the interval pattern is found
 *                              through extending skeleton or not.
 *                              TRUE if interval pattern is found by
 *                              extending skeleton, FALSE otherwise.
 * @stable ICU 4.0
 ','line_number':1397,'multiline':True]['text':' following getIntervalPattern() should not generate error status','line_number':1429,'multiline':False]['text':' single date','line_number':1433,'multiline':False]['text':' do nothing, format will handle it','line_number':1435,'multiline':False]['text':' for 24 hour system, interval patterns in resource file','line_number':1439,'multiline':False]['text':' might not include pattern when am_pm differ,','line_number':1440,'multiline':False]['text':' which should be the same as hour differ.','line_number':1441,'multiline':False]['text':' add it here for simplicity','line_number':1442,'multiline':False]['text':' else, looking for pattern when 'y' differ for 'dMMMM' skeleton,','line_number':1454,'multiline':False]['text':' first, get best match pattern "MMMd",','line_number':1455,'multiline':False]['text':' since there is no pattern for 'y' differs for skeleton 'MMMd',','line_number':1456,'multiline':False]['text':' need to look for it from skeleton 'yMMMd',','line_number':1457,'multiline':False]['text':' if found, adjust field width in interval pattern from','line_number':1458,'multiline':False]['text':' "MMM" to "MMMM".','line_number':1459,'multiline':False]['text':' for example, looking for patterns when 'y' differ for','line_number':1466,'multiline':False]['text':' skeleton "MMMM".','line_number':1467,'multiline':False]['text':' if there is no skeleton "yMMMM" defined,','line_number':1470,'multiline':False]['text':' look for the best match skeleton, for example: "yMMM"','line_number':1471,'multiline':False]['text':' repeatedPattern used to record whether a pattern has already seen.
       It is a pattern applies to first calendar if it is first time seen,
       otherwise, it is a pattern applies to the second calendar
     ','line_number':1506,'multiline':True]['text':'       A   B   C   D   E   F   G   H   I   J   K   L   M   N   O','line_number':1512,'multiline':False]['text':'   P   Q   R   S   T   U   V   W   X   Y   Z','line_number':1514,'multiline':False]['text':'       a   b   c   d   e   f   g   h   i   j   k   l   m   n   o','line_number':1516,'multiline':False]['text':'   p   q   r   s   t   u   v   w   x   y   z','line_number':1518,'multiline':False]['text':' loop through the pattern string character by character looking for
     * the first repeated pattern letter, which breaks the interval pattern
     * into 2 parts.
     ','line_number':1524,'multiline':True]['text':' check the repeativeness of pattern letter','line_number':1534,'multiline':False]['text':''','line_number':1544,'multiline':True]['text':' Consecutive single quotes are a single quote literal,','line_number':1545,'multiline':False]['text':' either outside of quotes or between quotes','line_number':1546,'multiline':False]['text':''','line_number':1548,'multiline':True]['text':''a'','line_number':1554,'multiline':True]['text':''z'','line_number':1554,'multiline':True]['text':''A'','line_number':1555,'multiline':True]['text':''Z'','line_number':1555,'multiline':True]['text':' ch is a date-time pattern character','line_number':1556,'multiline':False]['text':' check last pattern char, distinguish','line_number':1561,'multiline':False]['text':' "dd MM" ( no repetition ),','line_number':1562,'multiline':False]['text':' "d-d"(last char repeated ), and','line_number':1563,'multiline':False]['text':' "d-d MM" ( repetition found )','line_number':1564,'multiline':False]['text':' The following is only called from fallbackFormat, i.e. within the gFormatterMutex lock','line_number':1573,'multiline':False]['text':' for setContext, ignored','line_number':1590,'multiline':False]['text':' TODO(ICU-20406): Use SimpleFormatter Iterator interface when available.','line_number':1591,'multiline':False]['text':' No capitalization for second part of interval','line_number':1597,'multiline':False]['text':' No capitalization for second part of interval','line_number':1606,'multiline':False]['text':' The following is only called from formatImpl, i.e. within the gFormatterMutex lock','line_number':1613,'multiline':False]['text':' new','line_number':1617,'multiline':False]['text':' for saving the pattern in fDateFormat','line_number':1635,'multiline':False]['text':' save current pattern, restore later','line_number':1636,'multiline':False]['text':' for setContext, ignored','line_number':1638,'multiline':False]['text':' {0} is time range','line_number':1639,'multiline':False]['text':' {1} is single date portion','line_number':1640,'multiline':False]['text':' TODO(ICU-20406): Use SimpleFormatter Iterator interface when available.','line_number':1641,'multiline':False]['text':' No capitalization for second portion','line_number':1648,'multiline':False]['text':' No capitalization for second portion','line_number':1658,'multiline':False]['text':' restore full pattern','line_number':1664,'multiline':False]['text':'       A   B   C   D   E   F   G   H   I   J   K   L   M   N   O','line_number':1695,'multiline':False]['text':'   P   Q   R   S   T   U   V   W   X   Y   Z','line_number':1697,'multiline':False]['text':'       a   b   c   d   e   f   g   h   i   j   k   l   m   n   o','line_number':1699,'multiline':False]['text':'   p   q   r   s   t   u   v   w   x   y   z','line_number':1701,'multiline':False]['text':'       A   B   C   D   E   F   G   H   I   J   K   L   M   N   O','line_number':1707,'multiline':False]['text':'   P   Q   R   S   T   U   V   W   X   Y   Z','line_number':1709,'multiline':False]['text':'       a   b   c   d   e   f   g   h   i   j   k   l   m   n   o','line_number':1711,'multiline':False]['text':'   p   q   r   s   t   u   v   w   x   y   z','line_number':1713,'multiline':False]['text':' loop through the pattern string character by character','line_number':1751,'multiline':False]['text':' check the repeativeness of pattern letter','line_number':1757,'multiline':False]['text':' there is no "L" (always be "M") in skeleton,','line_number':1760,'multiline':False]['text':' but there is "L" in pattern.','line_number':1761,'multiline':False]['text':' for skeleton "M+", the pattern might be "...L..."','line_number':1762,'multiline':False]['text':''','line_number':1778,'multiline':True]['text':' Consecutive single quotes are a single quote literal,','line_number':1779,'multiline':False]['text':' either outside of quotes or between quotes','line_number':1780,'multiline':False]['text':' ' ','line_number':1781,'multiline':True]['text':''a'','line_number':1787,'multiline':True]['text':''z'','line_number':1787,'multiline':True]['text':''A'','line_number':1788,'multiline':True]['text':''Z'','line_number':1788,'multiline':True]['text':' ch is a date-time pattern character','line_number':1789,'multiline':False]['text':' last item','line_number':1795,'multiline':False]['text':' check the repeativeness of pattern letter','line_number':1796,'multiline':False]['text':' there is no "L" (always be "M") in skeleton,','line_number':1799,'multiline':False]['text':' but there is "L" in pattern.','line_number':1800,'multiline':False]['text':' for skeleton "M+", the pattern might be "...L..."','line_number':1801,'multiline':False]['text':' following should not set wrong status','line_number':1856,'multiline':False]['text':' else: fall back','line_number':1874,'multiline':False]['text':' it should not happen if the interval format defined is valid','line_number':1875,'multiline':False]['text':'GyM','line_number':1883,'multiline':True]['text':'wWd','line_number':1884,'multiline':True]['text':'DEF','line_number':1885,'multiline':True]['text':'ahH','line_number':1886,'multiline':True]['text':'msS','line_number':1887,'multiline':True]['text':' MINUTE, SECOND, MILLISECOND','line_number':1887,'multiline':False]['text':'z.Y','line_number':1888,'multiline':True]['text':' ZONE_OFFSET, DST_OFFSET, YEAR_WOY,','line_number':1888,'multiline':False]['text':'eug','line_number':1889,'multiline':True]['text':' DOW_LOCAL, EXTENDED_YEAR, JULIAN_DAY,','line_number':1889,'multiline':False]['text':'A..','line_number':1890,'multiline':True]['text':' MILLISECONDS_IN_DAY, IS_LEAP_MONTH, FIELD_COUNT','line_number':1890,'multiline':False]