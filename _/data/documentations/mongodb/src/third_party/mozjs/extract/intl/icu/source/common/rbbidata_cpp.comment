['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
***************************************************************************
*   Copyright (C) 1999-2014 International Business Machines Corporation   *
*   and others. All rights reserved.                                      *
***************************************************************************
','line_number':3,'multiline':True]['text':'-----------------------------------------------------------------------------','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':'    Constructors.','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':32,'multiline':False]['text':' dataFormat="Brk "','line_number':54,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':'    init().   Does most of the work of construction, shared between the','line_number':76,'multiline':False]['text':'              constructors.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':79,'multiline':False]['text':' Note: in ICU version 3.2 and earlier, there was a formatVersion 1','line_number':101,'multiline':False]['text':'       that is no longer supported.  At that time fFormatVersion was','line_number':102,'multiline':False]['text':'       an int32_t field, rather than an array of 4 bytes.','line_number':103,'multiline':False]['text':' *actual length','line_number':117,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':145,'multiline':False]['text':'','line_number':146,'multiline':False]['text':'    Destructor.     Don't call this - use removeReference() instead.','line_number':147,'multiline':False]['text':'','line_number':148,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':149,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':163,'multiline':False]['text':'','line_number':164,'multiline':False]['text':'   Operator ==    Consider two RBBIDataWrappers to be equal if they','line_number':165,'multiline':False]['text':'                  refer to the same underlying data.  Although','line_number':166,'multiline':False]['text':'                  the data wrappers are normally shared between','line_number':167,'multiline':False]['text':'                  iterator instances, it's possible to independently','line_number':168,'multiline':False]['text':'                  open the same data twice, and get two instances, which','line_number':169,'multiline':False]['text':'                  should still be ==.','line_number':170,'multiline':False]['text':'','line_number':171,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':172,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':192,'multiline':False]['text':'','line_number':193,'multiline':False]['text':'    Reference Counting.   A single RBBIDataWrapper object is shared among','line_number':194,'multiline':False]['text':'                          however many RulesBasedBreakIterator instances are','line_number':195,'multiline':False]['text':'                          referencing the same data.','line_number':196,'multiline':False]['text':'','line_number':197,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':198,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':213,'multiline':False]['text':'','line_number':214,'multiline':False]['text':'  getRuleSourceString','line_number':215,'multiline':False]['text':'','line_number':216,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':217,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':223,'multiline':False]['text':'','line_number':224,'multiline':False]['text':'  print   -  debugging function to dump the runtime data tables.','line_number':225,'multiline':False]['text':'','line_number':226,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':227,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':298,'multiline':False]['text':'','line_number':299,'multiline':False]['text':'  ubrk_swap   -  byte swap and char encoding swap of RBBI data','line_number':300,'multiline':False]['text':'','line_number':301,'multiline':False]['text':'-----------------------------------------------------------------------------','line_number':302,'multiline':False]['text':'','line_number':316,'multiline':False]['text':'  Check that the data header is for for break data.','line_number':317,'multiline':False]['text':'    (Header contents are defined in genbrk.cpp)','line_number':318,'multiline':False]['text':'','line_number':319,'multiline':False]['text':' dataFormat="Brk " ','line_number':321,'multiline':True]['text':'','line_number':334,'multiline':False]['text':' Swap the data header.  (This is the generic ICU Data Header, not the RBBI Specific','line_number':335,'multiline':False]['text':'                         RBBIDataHeader).  This swap also conveniently gets us','line_number':336,'multiline':False]['text':'                         the size of the ICU d.h., which lets us locate the start','line_number':337,'multiline':False]['text':'                         of the RBBI specific data.','line_number':338,'multiline':False]['text':'','line_number':339,'multiline':False]['text':'','line_number':343,'multiline':False]['text':' Get the RRBI Data Header, and check that it appears to be OK.','line_number':344,'multiline':False]['text':'','line_number':345,'multiline':False]['text':'','line_number':356,'multiline':False]['text':' Prefight operation?  Just return the size','line_number':357,'multiline':False]['text':'','line_number':358,'multiline':False]['text':'','line_number':365,'multiline':False]['text':' Check that length passed in is consistent with length from RBBI data header.','line_number':366,'multiline':False]['text':'','line_number':367,'multiline':False]['text':'','line_number':376,'multiline':False]['text':' Swap the Data.  Do the data itself first, then the RBBI Data Header, because','line_number':377,'multiline':False]['text':'                 we need to reference the header to locate the data, and an','line_number':378,'multiline':False]['text':'                 inplace swap of the header leaves it unusable.','line_number':379,'multiline':False]['text':'','line_number':380,'multiline':False]['text':'','line_number':387,'multiline':False]['text':' If not swapping in place, zero out the output buffer before starting.','line_number':388,'multiline':False]['text':'    Individual tables and other data items within are aligned to 8 byte boundaries','line_number':389,'multiline':False]['text':'    when originally created.  Any unused space between items needs to be zero.','line_number':390,'multiline':False]['text':'','line_number':391,'multiline':False]['text':'','line_number':396,'multiline':False]['text':' Each state table begins with several 32 bit fields.  Calculate the size','line_number':397,'multiline':False]['text':'   in bytes of these.','line_number':398,'multiline':False]['text':'','line_number':399,'multiline':False]['text':' Forward state table.','line_number':402,'multiline':False]['text':' Swap the state table if the table is in 16 bits.','line_number':413,'multiline':False]['text':' Reverse state table.  Same layout as forward table, above.','line_number':426,'multiline':False]['text':' Swap the state table if the table is in 16 bits.','line_number':437,'multiline':False]['text':' Trie table for character categories','line_number':450,'multiline':False]['text':' Source Rules Text.  It's UTF8 data','line_number':454,'multiline':False]['text':' Table of rule status values.  It's all int_32 values','line_number':461,'multiline':False]['text':' And, last, the header.','line_number':465,'multiline':False]['text':'   It is all int32_t values except for fFormataVersion, which is an array of four bytes.','line_number':466,'multiline':False]['text':'   Swap the whole thing as int32_t, then re-swap the one field.','line_number':467,'multiline':False]['text':'','line_number':468,'multiline':False]['text':' #if !UCONFIG_NO_BREAK_ITERATION ','line_number':476,'multiline':True]