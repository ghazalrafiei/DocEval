['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Various JS utility functions. ','line_number':7,'multiline':True]['text':' For OOM testing functionality in Utility.h. ','line_number':29,'multiline':True]['text':' namespace oom','line_number':78,'multiline':False]['text':' namespace js','line_number':79,'multiline':False]['text':' defined(DEBUG) || defined(JS_OOM_BREAKPOINT)','line_number':80,'multiline':False]['text':' namespace oom','line_number':92,'multiline':False]['text':' namespace js','line_number':93,'multiline':False]['text':' Until Bug 1364359 is fixed it is unsafe to call moz_dispose_arena.','line_number':118,'multiline':False]['text':' moz_dispose_arena(MallocArena);','line_number':119,'multiline':False]['text':' moz_dispose_arena(ArrayBufferContentsArena);','line_number':120,'multiline':False]['text':'  `jemalloc_ptr_info()` only exists if MOZ_MEMORY is defined, and it only','line_number':124,'multiline':False]['text':'  returns an arenaId if MOZ_DEBUG is defined. Otherwise, this function is','line_number':125,'multiline':False]['text':'  a no-op.','line_number':126,'multiline':False]['text':' This function calls all the vanilla heap allocation functions.  It is never','line_number':149,'multiline':False]['text':' called, and exists purely to help config/check_vanilla_allocations.py.  See','line_number':150,'multiline':False]['text':' that script for more details.','line_number':151,'multiline':False]['text':' posix_memalign and aligned_alloc aren't available on all Linux','line_number':153,'multiline':False]['text':' configurations.','line_number':154,'multiline':False]['text':' valloc was deprecated in Android 5.0','line_number':155,'multiline':False]['text':' char* q;','line_number':156,'multiline':False]['text':' posix_memalign((void**)&q, 16, 16);','line_number':157,'multiline':False]['text':' intptr_t(q) +','line_number':163,'multiline':False]['text':' intptr_t(aligned_alloc(16, 16)) +','line_number':164,'multiline':False]['text':' intptr_t(valloc(4096)) +','line_number':165,'multiline':False]['text':' make sure |p| is not optimized away','line_number':168,'multiline':False]['text':' this would crash if ever actually called','line_number':170,'multiline':False]['text':' namespace js','line_number':175,'multiline':False]['text':' __linux__','line_number':177,'multiline':False]