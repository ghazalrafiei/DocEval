['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' The offset into a buffer, in bytes.','line_number':20,'multiline':False]['text':' A BOffImm is a Branch Offset Immediate. It is an architecture-specific','line_number':40,'multiline':False]['text':' structure that holds the immediate for a pc relative branch. diffB takes','line_number':41,'multiline':False]['text':' the label for the destination of the branch, and encodes the immediate','line_number':42,'multiline':False]['text':' for the branch. This will need to be fixed up later, since A pool may be','line_number':43,'multiline':False]['text':' inserted between the branch and its destination.','line_number':44,'multiline':False]['text':' Doubly-linked list of BufferSlices, with the most recent in tail position.','line_number':137,'multiline':False]['text':' How many bytes has been committed to the buffer thus far.','line_number':143,'multiline':False]['text':' Does not include tail.','line_number':144,'multiline':False]['text':' How many bytes can be in the buffer.  Normally this is','line_number':147,'multiline':False]['text':' MaxCodeBytesPerBuffer, but for pasteup buffers where we handle far jumps','line_number':148,'multiline':False]['text':' explicitly it can be larger.','line_number':149,'multiline':False]['text':' Finger for speeding up accesses.','line_number':152,'multiline':False]['text':' Space can exist in the most recent Slice.','line_number':193,'multiline':False]['text':' Simulate allocation failure even when we don't need a new slice.','line_number':195,'multiline':False]['text':' Otherwise, a new Slice must be added.','line_number':203,'multiline':False]['text':' If this is the first Slice in the buffer, add to head position.','line_number':209,'multiline':False]['text':' Finish the last Slice and add the new Slice to the linked list.','line_number':216,'multiline':False]['text':' Add numBytes bytes to this buffer.','line_number':249,'multiline':False]['text':' The data must fit in a single slice.','line_number':250,'multiline':False]['text':' Add a potentially large amount of data to this buffer.','line_number':261,'multiline':False]['text':' The data may be distrubuted across multiple slices.','line_number':262,'multiline':False]['text':' Return the buffer offset of the first added byte.','line_number':263,'multiline':False]['text':' Is the offset within the bounds of this slice?','line_number':321,'multiline':False]['text':' First (lowest) offset in the start Slice.','line_number':343,'multiline':False]['text':' Is the offset within the bounds of this slice?','line_number':349,'multiline':False]['text':' Move the cursor to the start of the previous slice.','line_number':360,'multiline':False]['text':' Get a pointer to the instruction at offset |off| which must be within the','line_number':379,'multiline':False]['text':' bounds of the buffer. Use |getInstOrNull()| if |off| may be unassigned.','line_number':380,'multiline':False]['text':' This function is hot, do not make the next line a RELEASE_ASSERT.','line_number':383,'multiline':False]['text':' Is the instruction in the last slice?','line_number':386,'multiline':False]['text':' How close is this offset to the previous one we looked up?','line_number':391,'multiline':False]['text':' If it is sufficiently far from the start and end of the buffer,','line_number':392,'multiline':False]['text':' use the finger to start midway through the list.','line_number':393,'multiline':False]['text':' Is the instruction closer to the start or to the end?','line_number':402,'multiline':False]['text':' The last slice was already checked above, so start at the','line_number':407,'multiline':False]['text':' second-to-last.','line_number':408,'multiline':False]['text':' namespace jit','line_number':434,'multiline':False]['text':' namespace js','line_number':435,'multiline':False]['text':' jit_shared_IonAssemblerBuffer_h','line_number':437,'multiline':False]