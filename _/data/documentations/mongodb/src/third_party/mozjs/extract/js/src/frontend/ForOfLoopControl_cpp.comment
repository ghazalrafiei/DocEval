['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' CompletionKind','line_number':9,'multiline':False]['text':' BytecodeEmitter','line_number':11,'multiline':False]['text':' EmitterScope','line_number':12,'multiline':False]['text':' InternalIfEmitter','line_number':13,'multiline':False]['text':' TryNoteKind::ForOfIterClose','line_number':14,'multiline':False]['text':' JSOp','line_number':15,'multiline':False]['text':'              [stack] ITER ... EXCEPTION','line_number':44,'multiline':False]['text':'              [stack] ITER ... EXCEPTION ITER','line_number':50,'multiline':False]['text':' If ITER is undefined, it means the exception is thrown by','line_number':54,'multiline':False]['text':' IteratorClose for non-local jump, and we should't perform','line_number':55,'multiline':False]['text':' IteratorClose again here.','line_number':56,'multiline':False]['text':'              [stack] ITER ... EXCEPTION ITER UNDEF','line_number':58,'multiline':False]['text':'              [stack] ITER ... EXCEPTION NE','line_number':62,'multiline':False]['text':'              [stack] ITER ... EXCEPTION','line_number':68,'multiline':False]['text':'              [stack] ITER ... EXCEPTION ITER','line_number':75,'multiline':False]['text':' ITER ... EXCEPTION','line_number':80,'multiline':False]['text':'              [stack] ITER ... EXCEPTION','line_number':84,'multiline':False]['text':'              [stack] ITER ...','line_number':89,'multiline':False]['text':' If any yields were emitted, then this for-of loop is inside a star','line_number':93,'multiline':False]['text':' generator and must handle the case of Generator.return. Like in','line_number':94,'multiline':False]['text':' yield*, it is handled with a finally block.','line_number':95,'multiline':False]['text':'            [stack] ITER ... FTYPE FVALUE CLOSING','line_number':104,'multiline':False]['text':'            [stack] ITER ... FTYPE FVALUE','line_number':108,'multiline':False]['text':'            [stack] ITER ... FTYPE FVALUE ITER','line_number':112,'multiline':False]['text':'            [stack] ITER ... FTYPE FVALUE','line_number':117,'multiline':False]['text':'            [stack] ITER ... FTYPE FVALUE','line_number':121,'multiline':False]['text':' = CompletionKind::Normal ','line_number':138,'multiline':True]['text':' = CompletionKind::Normal ','line_number':150,'multiline':True]['text':' Since we're in the middle of emitting code that will leave','line_number':155,'multiline':False]['text':' |bce->innermostEmitterScope()|, passing the innermost emitter scope to','line_number':156,'multiline':False]['text':' emitIteratorCloseInScope and looking up .generator there would be very,','line_number':157,'multiline':False]['text':' very wrong.  We'd find .generator in the function environment, and we'd','line_number':158,'multiline':False]['text':' compute a NameLocation with the correct slot, but we'd compute a','line_number':159,'multiline':False]['text':' hop-count to the function environment that was too big.  At runtime we'd','line_number':160,'multiline':False]['text':' either crash, or we'd find a user-controllable value in that slot, and','line_number':161,'multiline':False]['text':' Very Bad Things would ensue as we reinterpreted that value as an','line_number':162,'multiline':False]['text':' iterator.','line_number':163,'multiline':False]['text':' Pop unnecessary value from the stack.  Effectively this means','line_number':167,'multiline':False]['text':' leaving try-catch block.  However, the performing IteratorClose can','line_number':168,'multiline':False]['text':' reach the depth for try-catch, and effectively re-enter the','line_number':169,'multiline':False]['text':' try-catch block.','line_number':170,'multiline':False]['text':'              [stack] NEXT ITER','line_number':172,'multiline':False]['text':' Pop the iterator's next method.','line_number':176,'multiline':False]['text':'              [stack] ITER NEXT','line_number':178,'multiline':False]['text':'              [stack] ITER','line_number':182,'multiline':False]['text':' Clear ITER slot on the stack to tell catch block to avoid performing','line_number':186,'multiline':False]['text':' IteratorClose again.','line_number':187,'multiline':False]['text':'              [stack] ITER UNDEF','line_number':189,'multiline':False]['text':'              [stack] UNDEF ITER','line_number':193,'multiline':False]['text':'              [stack] UNDEF','line_number':199,'multiline':False]['text':' At the level of the target block, there's bytecode after the','line_number':204,'multiline':False]['text':' loop that will pop the next method, the iterator, and the','line_number':205,'multiline':False]['text':' value, so push two undefineds to balance the stack.','line_number':206,'multiline':False]['text':'            [stack] UNDEF UNDEF','line_number':208,'multiline':False]['text':'            [stack] UNDEF UNDEF UNDEF','line_number':212,'multiline':False]['text':'            [stack]','line_number':217,'multiline':False]