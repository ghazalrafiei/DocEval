['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' MOZ_ASSERT, MOZ_RELEASE_ASSERT','line_number':9,'multiline':False]['text':' size_t','line_number':11,'multiline':False]['text':' uint8_t, uint32_t','line_number':12,'multiline':False]['text':' std::move','line_number':13,'multiline':False]['text':' js::DebugAPI','line_number':15,'multiline':False]['text':' js::jit::RematerializedFrame','line_number':16,'multiline':False]['text':' js::ReportOutOfMemory','line_number':17,'multiline':False]['text':' js::DebugEnvironments','line_number':18,'multiline':False]['text':' js::jit::InlineFrameIterator','line_number':19,'multiline':False]['text':' JSContext','line_number':20,'multiline':False]['text':' js::AutoRealmUnchecked','line_number':21,'multiline':False]['text':' js::wasm::Code','line_number':22,'multiline':False]['text':' js::wasm::Trap','line_number':23,'multiline':False]['text':' js::wasm::{RegisterState,StartUnwinding,UnwindState}','line_number':24,'multiline':False]['text':' js::wasm::Instance','line_number':25,'multiline':False]['text':' js::wasm::LookupCode','line_number':26,'multiline':False]['text':' js::wasm::TlsData','line_number':27,'multiline':False]['text':' js::~AutoRealm','line_number':29,'multiline':False]['text':' All reocvered value are taken from activation during the bailout.','line_number':53,'multiline':False]['text':' The BailoutFrameInfo should have unregistered itself from the','line_number':56,'multiline':False]['text':' JitActivations.','line_number':57,'multiline':False]['text':' Traps get handled immediately.','line_number':60,'multiline':False]['text':' The unit of rematerialization is an uninlined frame and its inlined','line_number':115,'multiline':False]['text':' frames. Since inlined frames do not exist outside of snapshots, it','line_number':116,'multiline':False]['text':' is impossible to synchronize their rematerialized copies to','line_number':117,'multiline':False]['text':' preserve identity. Therefore, we always rematerialize an uninlined','line_number':118,'multiline':False]['text':' frame and all its inlined frames at once.','line_number':119,'multiline':False]['text':' Frames are often rematerialized with the cx inside a Debugger's','line_number':123,'multiline':False]['text':' realm. To recover slots and to create CallObjects, we need to','line_number':124,'multiline':False]['text':' be in the script's realm.','line_number':125,'multiline':False]['text':' See comment in unsetPrevUpToDateUntil.','line_number':138,'multiline':False]['text':' Ion bailout can fail due to overrecursion and OOM. In such cases we','line_number':160,'multiline':False]['text':' cannot honor any further Debugger hooks on the frame, and need to','line_number':161,'multiline':False]['text':' ensure that its Debugger.Frame entry is cleaned up.','line_number':162,'multiline':False]['text':' Check that there is no entry in the vector yet.','line_number':186,'multiline':False]['text':' If the frame was unwound, the bytecodeOffset must be recovered from the','line_number':239,'multiline':False]['text':' callsite so that it is accurate.','line_number':240,'multiline':False]