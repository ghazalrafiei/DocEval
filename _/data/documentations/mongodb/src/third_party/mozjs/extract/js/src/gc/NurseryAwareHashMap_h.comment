['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' This class only handles the incremental case and does not deal with nursery','line_number':19,'multiline':False]['text':' pointers. The only users should be for NurseryAwareHashMap; it is defined','line_number':20,'multiline':False]['text':' externally because we need a GCPolicy for its use in the contained map.','line_number':21,'multiline':False]['text':' namespace detail','line_number':56,'multiline':False]['text':' The "nursery aware" hash map is a special case of GCHashMap that is able to','line_number':60,'multiline':False]['text':' treat nursery allocated members weakly during a minor GC: e.g. it allows for','line_number':61,'multiline':False]['text':' nursery allocated objects to be collected during nursery GC where a normal','line_number':62,'multiline':False]['text':' hash table treats such edges strongly.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' Doing this requires some strong constraints on what can be stored in this','line_number':65,'multiline':False]['text':' table and how it can be accessed. At the moment, this table assumes that','line_number':66,'multiline':False]['text':' all values contain a strong reference to the key. It also requires the','line_number':67,'multiline':False]['text':' policy to contain an |isTenured| and |needsSweep| members, which is fairly','line_number':68,'multiline':False]['text':' non-standard. This limits its usefulness to the CrossCompartmentMap at the','line_number':69,'multiline':False]['text':' moment, but might serve as a useful base for other tables in future.','line_number':70,'multiline':False]['text':' Keep a list of all keys for which JS::GCPolicy<Key>::isTenured is false.','line_number':81,'multiline':False]['text':' This lets us avoid a full traveral of the map on each minor GC, keeping','line_number':82,'multiline':False]['text':' the minor GC times proportional to the nursery heap size.','line_number':83,'multiline':False]['text':' Drop the entry if the value is not marked.','line_number':150,'multiline':False]['text':' Update and relocate the key, if the value is still needed.','line_number':156,'multiline':False]['text':'','line_number':157,'multiline':False]['text':' Non-string Values will contain a strong reference to Key, as per','line_number':158,'multiline':False]['text':' its use in the CrossCompartmentWrapperMap, so the key will never','line_number':159,'multiline':False]['text':' be dying here. Strings do *not* have any sort of pointer from','line_number':160,'multiline':False]['text':' wrapper to wrappee, as they are just copies. The wrapper map','line_number':161,'multiline':False]['text':' entry is merely used as a cache to avoid re-copying the string,','line_number':162,'multiline':False]['text':' and currently that entire cache is flushed on major GC.','line_number':163,'multiline':False]['text':' Drop duplicated keys.','line_number':171,'multiline':False]['text':'','line_number':172,'multiline':False]['text':' A key can be forwarded to another place. In this case, rekey the','line_number':173,'multiline':False]['text':' item. If two or more different keys are forwarded to the same new','line_number':174,'multiline':False]['text':' key, simply drop the later ones.','line_number':175,'multiline':False]['text':' No rekey needed.','line_number':177,'multiline':False]['text':' Key was forwarded to the same place that another key was already','line_number':179,'multiline':False]['text':' forwarded to.','line_number':180,'multiline':False]['text':' namespace js','line_number':203,'multiline':False]['text':' namespace JS','line_number':216,'multiline':False]['text':' gc_NurseryAwareHashMap_h','line_number':218,'multiline':False]