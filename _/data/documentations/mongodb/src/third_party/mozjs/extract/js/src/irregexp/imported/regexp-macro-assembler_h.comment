['text':' Copyright 2012 the V8 project authors. All rights reserved.','line_number':1,'multiline':False]['text':' Use of this source code is governed by a BSD-style license that can be','line_number':2,'multiline':False]['text':' found in the LICENSE file.','line_number':3,'multiline':False]['text':' The implementation must be able to handle at least:','line_number':30,'multiline':False]['text':' This function is called when code generation is aborted, so that','line_number':76,'multiline':False]['text':' the assembler could clean up internal data structures.','line_number':77,'multiline':False]['text':' The maximal number of pushes between stack checks. Users must supply','line_number':79,'multiline':False]['text':' kCheckStackLimit flag to push operations (instead of kNoStackLimitCheck)','line_number':80,'multiline':False]['text':' at least once for every stack_limit() pushes that are executed.','line_number':81,'multiline':False]['text':' Signed cp change.','line_number':84,'multiline':False]['text':' r[reg] += by.','line_number':85,'multiline':False]['text':' Continues execution from the position pushed on the top of the backtrack','line_number':86,'multiline':False]['text':' stack by an earlier PushBacktrack(Label*).','line_number':87,'multiline':False]['text':' Dispatch after looking the current character up in a 2-bits-per-entry','line_number':90,'multiline':False]['text':' map.  The destinations vector has up to 4 labels.','line_number':91,'multiline':False]['text':' Bitwise and the current character with the given constant and then','line_number':93,'multiline':False]['text':' check for a match with c.','line_number':94,'multiline':False]['text':' Check the current character for a match with a literal character.  If we','line_number':108,'multiline':False]['text':' fail to match then goto the on_failure label.  End of input always','line_number':109,'multiline':False]['text':' matches.  If the label is nullptr then we should pop a backtrack address','line_number':110,'multiline':False]['text':' off the stack and go to that.','line_number':111,'multiline':False]['text':' Subtract a constant from the current character, then and with the given','line_number':116,'multiline':False]['text':' constant and then check for a match with c.','line_number':117,'multiline':False]['text':' Both inclusive.','line_number':123,'multiline':False]['text':' Both inclusive.','line_number':126,'multiline':False]['text':' The current character (modulus the kTableSize) is looked up in the byte','line_number':129,'multiline':False]['text':' array, and if the found byte is non-zero, we jump to the on_bit_set label.','line_number':130,'multiline':False]['text':' Checks whether the given offset from the current position is before','line_number':133,'multiline':False]['text':' the end of the string.  May overwrite the current character.','line_number':134,'multiline':False]['text':' Check whether a standard/default character class matches the current','line_number':136,'multiline':False]['text':' character. Returns false if the type of special character class does','line_number':137,'multiline':False]['text':' not have custom support.','line_number':138,'multiline':False]['text':' May clobber the current loaded character.','line_number':139,'multiline':False]['text':' Control-flow integrity:','line_number':142,'multiline':False]['text':' Define a jump target and bind a label.','line_number':143,'multiline':False]['text':' Check whether a register is >= a given constant and go to a label if it','line_number':149,'multiline':False]['text':' is.  Backtracks instead if the label is nullptr.','line_number':150,'multiline':False]['text':' Check whether a register is < a given constant and go to a label if it is.','line_number':152,'multiline':False]['text':' Backtracks instead if the label is nullptr.','line_number':153,'multiline':False]['text':' Check whether a register is == to the current position and go to a','line_number':155,'multiline':False]['text':' label if it is.','line_number':156,'multiline':False]['text':' Pushes the label on the backtrack stack, so that a following Backtrack','line_number':167,'multiline':False]['text':' will go to this label. Always checks the backtrack stack limit.','line_number':168,'multiline':False]['text':' Return whether the matching (with a global regexp) will be restarted.','line_number':177,'multiline':False]['text':' Compare two-byte strings case insensitively.','line_number':183,'multiline':False]['text':' Called from generated RegExp code.','line_number':184,'multiline':False]['text':' Check that we are not in the middle of a surrogate pair.','line_number':194,'multiline':False]['text':' Controls the generation of large inlined constants in the code.','line_number':197,'multiline':False]['text':' Controls after how many backtracks irregexp should abort execution.  If it','line_number':201,'multiline':False]['text':' can fall back to the experimental engine (see `set_can_fallback`), it will','line_number':202,'multiline':False]['text':' return the appropriate error code, otherwise it will return the number of','line_number':203,'multiline':False]['text':' matches found so far (perhaps none).','line_number':204,'multiline':False]['text':' Set whether or not irregexp can fall back to the experimental engine on','line_number':209,'multiline':False]['text':' excessive backtracking.  The number of backtracks considered excessive can','line_number':210,'multiline':False]['text':' be controlled with set_backtrack_limit.','line_number':211,'multiline':False]['text':' Set whether the regular expression has the global flag.  Exiting due to','line_number':220,'multiline':False]['text':' a failure in a global regexp may still mean success overall.','line_number':221,'multiline':False]['text':' Type of input string to generate code for.','line_number':251,'multiline':False]['text':' Result of calling generated native RegExp code.','line_number':254,'multiline':False]['text':' RETRY: Something significant changed during execution, and the matching','line_number':255,'multiline':False]['text':'        should be retried from scratch.','line_number':256,'multiline':False]['text':' EXCEPTION: Something failed during execution. If no exception has been','line_number':257,'multiline':False]['text':'            thrown, it's an internal out-of-memory, and the caller should','line_number':258,'multiline':False]['text':'            throw the exception.','line_number':259,'multiline':False]['text':' FAILURE: Matching failed.','line_number':260,'multiline':False]['text':' SUCCESS: Matching succeeded, and the output array has been filled with','line_number':261,'multiline':False]['text':'          capture positions.','line_number':262,'multiline':False]['text':' FALLBACK_TO_EXPERIMENTAL: Execute the regexp on this subject using the','line_number':263,'multiline':False]['text':'                           experimental engine instead.','line_number':264,'multiline':False]['text':' Returns a {Result} sentinel, or the number of successful matches.','line_number':278,'multiline':False]['text':' Called from RegExp if the backtrack stack limit is hit.','line_number':283,'multiline':False]['text':' Tries to expand the stack. Returns the new stack-pointer if','line_number':284,'multiline':False]['text':' successful, and updates the stack_top address, or returns 0 if unable','line_number':285,'multiline':False]['text':' to grow the stack.','line_number':286,'multiline':False]['text':' This function must not trigger a garbage collection.','line_number':287,'multiline':False]['text':' Byte map of one byte characters with a 0xff if the character is a word','line_number':297,'multiline':False]['text':' character (digit, letter or underscore) and 0x00 otherwise.','line_number':298,'multiline':False]['text':' Used by generated RegExp code.','line_number':299,'multiline':False]['text':' Returns a {Result} sentinel, or the number of successful matches.','line_number':306,'multiline':False]['text':' Load a number of characters at the given offset from the','line_number':315,'multiline':False]['text':' current position, into the current-character register.','line_number':316,'multiline':False]['text':' namespace internal','line_number':321,'multiline':False]['text':' namespace v8','line_number':322,'multiline':False]['text':' V8_REGEXP_REGEXP_MACRO_ASSEMBLER_H_','line_number':324,'multiline':False]