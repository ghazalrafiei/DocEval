['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Mips platform does not support simd yet.','line_number':29,'multiline':False]['text':' Data relocations can be for Values or for raw pointers. If a Value is','line_number':111,'multiline':False]['text':' zero-tagged, we can trace it as if it were a raw pointer. If a Value','line_number':112,'multiline':False]['text':' is not zero-tagged, we have to interpret it as a Value to ensure that the','line_number':113,'multiline':False]['text':' tag bits are masked off to recover the actual pointer.','line_number':114,'multiline':False]['text':' This relocation is a Value with a non-zero tag.','line_number':117,'multiline':False]['text':' This relocation is a raw pointer or a Value with a zero tag.','line_number':122,'multiline':False]['text':' No barrier needed since these are constants.','line_number':123,'multiline':False]['text':' static ','line_number':136,'multiline':True]['text':' If encoded offset is 4, then the jump must be short','line_number':169,'multiline':False]['text':' Generate the long jump for calls because return address has to be the','line_number':177,'multiline':False]['text':' address after the reserved block.','line_number':178,'multiline':False]['text':' There is 1 nop after this.','line_number':184,'multiline':False]['text':' Don't skip trailing nops can improve performance','line_number':189,'multiline':False]['text':' on Loongson3 platform.','line_number':190,'multiline':False]['text':' There are 4 nops after this','line_number':202,'multiline':False]['text':' Handle long unconditional jump.','line_number':208,'multiline':False]['text':' There is 1 nop after this.','line_number':218,'multiline':False]['text':' Handle long conditional jump.','line_number':220,'multiline':False]['text':' No need for a "nop" here because we can clobber scratch.','line_number':222,'multiline':False]['text':' There is 1 nop after this.','line_number':232,'multiline':False]['text':' Load an address needs 4 instructions, and a jump with a delay slot.','line_number':243,'multiline':False]['text':' Overwrite whatever instruction used to be here with a call.','line_number':252,'multiline':False]['text':' Always use long jump for two reasons:','line_number':253,'multiline':False]['text':' - Jump has to be the same size because of PatchWrite_NearCallSize.','line_number':254,'multiline':False]['text':' - Return address has to be at the end of replaced block.','line_number':255,'multiline':False]['text':' Short jump wouldn't be more efficient.','line_number':256,'multiline':False]['text':' Extract old Value','line_number':339,'multiline':False]['text':' Replace with new value','line_number':343,'multiline':False]