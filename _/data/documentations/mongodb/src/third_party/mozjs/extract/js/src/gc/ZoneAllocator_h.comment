['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':'
 * Public header for allocating memory associated with GC things.
 ','line_number':7,'multiline':True]['text':' JS::shadow::Zone','line_number':19,'multiline':False]['text':' namespace JS','line_number':24,'multiline':False]['text':' Base class of JS::Zone that provides malloc memory allocation and accounting.','line_number':41,'multiline':False]['text':' This is a safe upcast, but the compiler hasn't seen the definition yet.','line_number':51,'multiline':False]['text':' Memory accounting APIs for malloc memory owned by GC cells.','line_number':74,'multiline':False]['text':' Account for allocations that may be referenced by more than one GC thing.','line_number':145,'multiline':False]['text':' Check malloc allocation threshold and trigger a zone GC if necessary.','line_number':160,'multiline':False]['text':' The size of allocated GC arenas in this zone.','line_number':177,'multiline':False]['text':' Threshold used to trigger GC based on GC heap size.','line_number':180,'multiline':False]['text':' Amount of malloc data owned by tenured GC things in this zone, including','line_number':183,'multiline':False]['text':' external allocations supplied by JS::AddAssociatedMemory.','line_number':184,'multiline':False]['text':' Threshold used to trigger GC based on malloc allocations.','line_number':187,'multiline':False]['text':' Amount of exectuable JIT code owned by GC things in this zone.','line_number':190,'multiline':False]['text':' Threshold used to trigger GC based on JIT allocations.','line_number':193,'multiline':False]['text':' Use counts for memory that can be referenced by more than one GC thing.','line_number':196,'multiline':False]['text':' In debug builds, malloc allocations can be tracked to make debugging easier','line_number':201,'multiline':False]['text':' (possible?) if allocation and free sizes don't balance.','line_number':202,'multiline':False]['text':'
 * Allocation policy that performs precise memory tracking on the zone. This
 * should be used for all containers associated with a GC thing or a zone.
 *
 * Since it doesn't hold a JSContext (those may not live long enough), it can't
 * report out-of-memory conditions itself; the caller must check for OOM and
 * take the appropriate action.
 *
 * FIXME bug 647103 - replace these *AllocPolicy names.
 ','line_number':209,'multiline':True]['text':' Can clear |zone_| on merge.','line_number':223,'multiline':False]['text':' Public methods required to fulfill the AllocPolicy interface.','line_number':258,'multiline':False]['text':' Internal methods called by the MallocProvider implementation.','line_number':274,'multiline':False]['text':' Functions for memory accounting on the zone.','line_number':294,'multiline':False]['text':' Associate malloc memory with a GC thing. This call should be matched by a','line_number':296,'multiline':False]['text':' following call to RemoveCellMemory with the same size and use. The total','line_number':297,'multiline':False]['text':' amount of malloc memory associated with a zone is used to trigger GC.','line_number':298,'multiline':False]['text':'','line_number':299,'multiline':False]['text':' You should use InitReservedSlot / InitObjectPrivate in preference to this','line_number':300,'multiline':False]['text':' where possible.','line_number':301,'multiline':False]['text':' Remove association between malloc memory and a GC thing. This call should','line_number':314,'multiline':False]['text':' follow a call to AddCellMemory with the same size and use.','line_number':315,'multiline':False]['text':' namespace js','line_number':331,'multiline':False]['text':' gc_ZoneAllocator_h','line_number':333,'multiline':False]