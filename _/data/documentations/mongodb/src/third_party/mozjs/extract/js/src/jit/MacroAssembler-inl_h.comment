['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Helper for generatePreBarrier.','line_number':53,'multiline':False]['text':'{{{ check_macroassembler_style','line_number':77,'multiline':False]['text':' ===============================================================','line_number':78,'multiline':False]['text':' Stack manipulation functions.','line_number':79,'multiline':False]['text':' ===============================================================','line_number':90,'multiline':False]['text':' Simple call functions.','line_number':91,'multiline':False]['text':' ===============================================================','line_number':123,'multiline':False]['text':' ABI function calls.','line_number':124,'multiline':False]['text':' DEBUG','line_number':209,'multiline':False]['text':' No simulator enabled.','line_number':213,'multiline':False]['text':' ===============================================================','line_number':218,'multiline':False]['text':' Jit Frames.','line_number':219,'multiline':False]['text':' The return address is pushed by the callee.','line_number':223,'multiline':False]['text':' See JitFrames.h for a description of the frame descriptor format.','line_number':257,'multiline':False]['text':' The saved-frame bit is zero for new frames. See js::SavedStacks.','line_number':258,'multiline':False]['text':' ===============================================================','line_number':310,'multiline':False]['text':' Exit frame footer.','line_number':311,'multiline':False]['text':' Push VMFunction pointer, to mark arguments.','line_number':317,'multiline':False]['text':' ===============================================================','line_number':339,'multiline':False]['text':' Move instructions','line_number':340,'multiline':False]['text':' ===============================================================','line_number':352,'multiline':False]['text':' Arithmetic functions','line_number':353,'multiline':False]['text':' ===============================================================','line_number':359,'multiline':False]['text':' Branch functions','line_number':360,'multiline':False]['text':' Note that C++ bool is only 1 byte, so ignore the higher-order bits.','line_number':364,'multiline':False]['text':' Note that C++ bool is only 1 byte, so ignore the higher-order bits.','line_number':369,'multiline':False]['text':' 16-bit loads are slow and unaligned 32-bit loads may be too so','line_number':416,'multiline':False]['text':' perform an aligned 32-bit load and adjust the bitmask accordingly.','line_number':417,'multiline':False]['text':' 16-bit loads are slow and unaligned 32-bit loads may be too so','line_number':432,'multiline':False]['text':' perform an aligned 32-bit load and adjust the bitmask accordingly.','line_number':433,'multiline':False]['text':' Guard the function has the BASESCRIPT and CONSTRUCTOR flags and does NOT','line_number':438,'multiline':False]['text':' have the SELF_HOSTED flag.','line_number':439,'multiline':False]['text':' This is equivalent to JSFunction::isNonBuiltinConstructor.','line_number':440,'multiline':False]['text':' The branches to out-of-line code here implement a conservative version','line_number':504,'multiline':False]['text':' of the JSObject::isWrapper test performed in EmulatesUndefined.','line_number':505,'multiline':False]['text':' 16-bit loads are slow and unaligned 32-bit loads may be too so','line_number':519,'multiline':False]['text':' perform an aligned 32-bit load and adjust the bitmask accordingly.','line_number':520,'multiline':False]['text':' We are compiling the interpreter or another runtime-wide trampoline, so','line_number':707,'multiline':False]['text':' we have to load cx->zone.','line_number':708,'multiline':False]['text':' Tests if double is in [INT64_MIN; INT64_MAX] range','line_number':727,'multiline':False]['text':' Note: returns failure on -0.0','line_number':742,'multiline':False]['text':' Tests if double is in [0; UINT64_MAX] range','line_number':743,'multiline':False]['text':' Take the sign also in the equation. That way we can compare in one test?','line_number':744,'multiline':False]['text':' Tests if float is in [INT64_MIN; INT64_MAX] range','line_number':759,'multiline':False]['text':' Note: returns failure on -0.0','line_number':774,'multiline':False]['text':' Tests if float is in [0; UINT64_MAX] range','line_number':775,'multiline':False]['text':' Take the sign also in the equation. That way we can compare in one test?','line_number':776,'multiline':False]['text':' ========================================================================','line_number':787,'multiline':False]['text':' Canonicalization primitives.','line_number':788,'multiline':False]['text':' See the comment in TypedArrayObjectTemplate::getElement.','line_number':797,'multiline':False]['text':' See the comment in TypedArrayObjectTemplate::getElement.','line_number':811,'multiline':False]['text':' ========================================================================','line_number':817,'multiline':False]['text':' Memory access primitives.','line_number':818,'multiline':False]['text':' Int32Value can be unboxed efficiently with unboxInt32, so use that.','line_number':849,'multiline':False]['text':' BooleanValue can be unboxed efficiently with unboxBoolean, so use that.','line_number':857,'multiline':False]['text':'}}} check_macroassembler_style','line_number':886,'multiline':False]['text':' ===============================================================','line_number':887,'multiline':False]['text':' !JS_CODEGEN_ARM64','line_number':920,'multiline':False]['text':' = 0 ','line_number':940,'multiline':True]['text':' Wrap around the offset to be a non-negative number.','line_number':945,'multiline':False]['text':' Test if each bit from offset is set.','line_number':951,'multiline':False]['text':' Check that all remaining bits are zero.','line_number':959,'multiline':False]['text':' C++ compilers like to only use the bottom byte for bools, but we','line_number':972,'multiline':False]['text':' need to maintain the entire register.','line_number':973,'multiline':False]['text':' Ensure the upper 32 bits are cleared.','line_number':981,'multiline':False]['text':' namespace jit','line_number':1013,'multiline':False]['text':' namespace js','line_number':1014,'multiline':False]['text':' jit_MacroAssembler_inl_h ','line_number':1016,'multiline':True]