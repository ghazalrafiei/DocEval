['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
**********************************************************************
* Copyright (c) 2004-2014, International Business Machines
* Corporation and others.  All Rights Reserved.
**********************************************************************
* Author: Alan Liu
* Created: April 26, 2004
* Since: ICU 3.0
**********************************************************************
','line_number':3,'multiline':True]['text':'*
 * \file 
 * \brief C++ API: Currency Unit Information.
 ','line_number':24,'multiline':True]['text':'*
 * A unit of currency, such as USD (U.S. dollars) or JPY (Japanese
 * yen).  This class is a thin wrapper over a char16_t string that
 * subclasses MeasureUnit, for use with Measure and MeasureFormat.
 *
 * @author Alan Liu
 * @stable ICU 3.0
 ','line_number':31,'multiline':True]['text':'*
     * Default constructor.  Initializes currency code to "XXX" (no currency).
     * @stable ICU 60
     ','line_number':41,'multiline':True]['text':'*
     * Construct an object with the given ISO currency code.
     *
     * @param isoCode the 3-letter ISO 4217 currency code; must have
     * length 3 and need not be NUL-terminated. If NULL, the currency
     * is initialized to the unknown currency XXX.
     * @param ec input-output error code. If the isoCode is invalid,
     * then this will be set to a failing value.
     * @stable ICU 3.0
     ','line_number':47,'multiline':True]['text':'*
     * Construct an object with the given ISO currency code.
     *
     * @param isoCode the 3-letter ISO 4217 currency code; must have
     * length 3. If invalid, the currency is initialized to XXX.
     * @param ec input-output error code. If the isoCode is invalid,
     * then this will be set to a failing value.
     * @stable ICU 64
     ','line_number':59,'multiline':True]['text':'*
     * Copy constructor
     * @stable ICU 3.0
     ','line_number':70,'multiline':True]['text':'*
     * Copy constructor from MeasureUnit. This constructor allows you to
     * restore a CurrencyUnit that was sliced to MeasureUnit.
     *
     * @param measureUnit The MeasureUnit to copy from.
     * @param ec Set to a failing value if the MeasureUnit is not a currency.
     * @stable ICU 60
     ','line_number':76,'multiline':True]['text':'*
     * Assignment operator
     * @stable ICU 3.0
     ','line_number':86,'multiline':True]['text':'*
     * Return a polymorphic clone of this object.  The result will
     * have the same class as returned by getDynamicClassID().
     * @stable ICU 3.0
     ','line_number':92,'multiline':True]['text':'*
     * Destructor
     * @stable ICU 3.0
     ','line_number':99,'multiline':True]['text':'*
     * Returns a unique class ID for this object POLYMORPHICALLY.
     * This method implements a simple form of RTTI used by ICU.
     * @return The class ID for this object. All objects of a given
     * class have the same class ID.  Objects of other classes have
     * different class IDs.
     * @stable ICU 3.0
     ','line_number':105,'multiline':True]['text':'*
     * Returns the class ID for this class. This is used to compare to
     * the return value of getDynamicClassID().
     * @return The class ID for all objects of this class.
     * @stable ICU 3.0
     ','line_number':115,'multiline':True]['text':'*
     * Return the ISO currency code of this object.
     * @stable ICU 3.0
     ','line_number':123,'multiline':True]['text':'*
     * The ISO 4217 code of this object.
     ','line_number':130,'multiline':True]['text':' !UCONFIG_NO_FORMATTING','line_number':142,'multiline':False]['text':' U_SHOW_CPLUSPLUS_API ','line_number':144,'multiline':True]['text':' __CURRENCYUNIT_H__','line_number':146,'multiline':False]