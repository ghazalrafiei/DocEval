['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' MOZ_STACK_CLASS','line_number':10,'multiline':False]['text':' mozilla::Maybe, mozilla::Nothing','line_number':11,'multiline':False]['text':' uint32_t','line_number':13,'multiline':False]['text':' TryFinallyControl','line_number':15,'multiline':False]['text':' BytecodeOffset','line_number':16,'multiline':False]['text':' JumpList, JumpTarget','line_number':17,'multiline':False]['text':' Class for emitting bytecode for blocks like try-catch-finally.','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':' Usage: (check for the return value is omitted for simplicity)','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':'   `try { try_block } catch (ex) { catch_block }`','line_number':28,'multiline':False]['text':'     TryEmitter tryCatch(this, TryEmitter::Kind::TryCatch,','line_number':29,'multiline':False]['text':'                         TryEmitter::ControlKind::Syntactic);','line_number':30,'multiline':False]['text':'     tryCatch.emitTry();','line_number':31,'multiline':False]['text':'     emit(try_block);','line_number':32,'multiline':False]['text':'     tryCatch.emitCatch();','line_number':33,'multiline':False]['text':'     emit(catch_block); // Pending exception is on stack','line_number':34,'multiline':False]['text':'     tryCatch.emitEnd();','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':'   `try { try_block } finally { finally_block }`','line_number':37,'multiline':False]['text':'     TryEmitter tryCatch(this, TryEmitter::Kind::TryFinally,','line_number':38,'multiline':False]['text':'                         TryEmitter::ControlKind::Syntactic);','line_number':39,'multiline':False]['text':'     tryCatch.emitTry();','line_number':40,'multiline':False]['text':'     emit(try_block);','line_number':41,'multiline':False]['text':'     // finally_pos: The "{" character's position in the source code text.','line_number':42,'multiline':False]['text':'     tryCatch.emitFinally(Some(finally_pos));','line_number':43,'multiline':False]['text':'     emit(finally_block);','line_number':44,'multiline':False]['text':'     tryCatch.emitEnd();','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':'   `try { try_block } catch (ex) {catch_block} finally { finally_block }`','line_number':47,'multiline':False]['text':'     TryEmitter tryCatch(this, TryEmitter::Kind::TryCatchFinally,','line_number':48,'multiline':False]['text':'                         TryEmitter::ControlKind::Syntactic);','line_number':49,'multiline':False]['text':'     tryCatch.emitTry();','line_number':50,'multiline':False]['text':'     emit(try_block);','line_number':51,'multiline':False]['text':'     tryCatch.emitCatch();','line_number':52,'multiline':False]['text':'     emit(catch_block);','line_number':53,'multiline':False]['text':'     tryCatch.emitFinally(Some(finally_pos));','line_number':54,'multiline':False]['text':'     emit(finally_block);','line_number':55,'multiline':False]['text':'     tryCatch.emitEnd();','line_number':56,'multiline':False]['text':'','line_number':57,'multiline':False]['text':' Syntactic try-catch-finally and internally used non-syntactic','line_number':62,'multiline':False]['text':' try-catch-finally behave differently for 2 points.','line_number':63,'multiline':False]['text':'','line_number':64,'multiline':False]['text':' The first one is whether TryFinallyControl is used or not.','line_number':65,'multiline':False]['text':' See the comment for `controlInfo_`.','line_number':66,'multiline':False]['text':'','line_number':67,'multiline':False]['text':' The second one is whether the catch and finally blocks handle the frame's','line_number':68,'multiline':False]['text':' return value.  For syntactic try-catch-finally, the bytecode marked with','line_number':69,'multiline':False]['text':' "*" are emitted to clear return value with `undefined` before the catch','line_number':70,'multiline':False]['text':' block and the finally block, and also to save/restore the return value','line_number':71,'multiline':False]['text':' before/after the finally block.','line_number':72,'multiline':False]['text':'','line_number':73,'multiline':False]['text':'     JSOp::Try offsetOf(jumpToEnd)','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':'     try_body...','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':'     JSOp::Gosub finally','line_number':78,'multiline':False]['text':'     JSOp::JumpTarget','line_number':79,'multiline':False]['text':'   jumpToEnd:','line_number':80,'multiline':False]['text':'     JSOp::Goto end:','line_number':81,'multiline':False]['text':'','line_number':82,'multiline':False]['text':'   catch:','line_number':83,'multiline':False]['text':'     JSOp::JumpTarget','line_number':84,'multiline':False]['text':'   * JSOp::Undefined','line_number':85,'multiline':False]['text':'   * JSOp::SetRval','line_number':86,'multiline':False]['text':'','line_number':87,'multiline':False]['text':'     catch_body...','line_number':88,'multiline':False]['text':'','line_number':89,'multiline':False]['text':'     JSOp::Gosub finally','line_number':90,'multiline':False]['text':'     JSOp::JumpTarget','line_number':91,'multiline':False]['text':'     JSOp::Goto end','line_number':92,'multiline':False]['text':'','line_number':93,'multiline':False]['text':'   finally:','line_number':94,'multiline':False]['text':'     JSOp::JumpTarget','line_number':95,'multiline':False]['text':'   * JSOp::GetRval','line_number':96,'multiline':False]['text':'   * JSOp::Undefined','line_number':97,'multiline':False]['text':'   * JSOp::SetRval','line_number':98,'multiline':False]['text':'','line_number':99,'multiline':False]['text':'     finally_body...','line_number':100,'multiline':False]['text':'','line_number':101,'multiline':False]['text':'   * JSOp::SetRval','line_number':102,'multiline':False]['text':'     JSOp::Nop','line_number':103,'multiline':False]['text':'','line_number':104,'multiline':False]['text':'   end:','line_number':105,'multiline':False]['text':'     JSOp::JumpTarget','line_number':106,'multiline':False]['text':'','line_number':107,'multiline':False]['text':' For syntactic try-catch-finally, Syntactic should be used.','line_number':108,'multiline':False]['text':' For non-syntactic try-catch-finally, NonSyntactic should be used.','line_number':109,'multiline':False]['text':' Track jumps-over-catches and gosubs-to-finally for later fixup.','line_number':117,'multiline':False]['text':'','line_number':118,'multiline':False]['text':' When a finally block is active, non-local jumps (including','line_number':119,'multiline':False]['text':' jumps-over-catches) result in a Gosub being written into the bytecode','line_number':120,'multiline':False]['text':' stream and fixed-up later.','line_number':121,'multiline':False]['text':'','line_number':122,'multiline':False]['text':' For non-syntactic try-catch-finally, all that handling is skipped.','line_number':123,'multiline':False]['text':' The non-syntactic try-catch-finally must:','line_number':124,'multiline':False]['text':'   * have only one catch block','line_number':125,'multiline':False]['text':'   * have JSOp::Goto at the end of catch-block','line_number':126,'multiline':False]['text':'   * have no non-local-jump','line_number':127,'multiline':False]['text':'   * don't use finally block for normal completion of try-block and','line_number':128,'multiline':False]['text':'     catch-block','line_number':129,'multiline':False]['text':'','line_number':130,'multiline':False]['text':' Additionally, a finally block may be emitted for non-syntactic','line_number':131,'multiline':False]['text':' try-catch-finally, even if the kind is TryCatch, because GOSUBs are not','line_number':132,'multiline':False]['text':' emitted.','line_number':133,'multiline':False]['text':' The stack depth before emitting JSOp::Try.','line_number':136,'multiline':False]['text':' The offset of the JSOp::Try op.','line_number':139,'multiline':False]['text':' JSOp::JumpTarget after the entire try-catch-finally block.','line_number':142,'multiline':False]['text':' The offset of JSOp::Goto at the end of the try block.','line_number':145,'multiline':False]['text':' The offset of JSOp::JumpTarget at the beginning of the finally block.','line_number':148,'multiline':False]['text':' The state of this emitter.','line_number':152,'multiline':False]['text':'','line_number':153,'multiline':False]['text':' +-------+ emitTry +-----+   emitCatch +-------+      emitEnd  +-----+','line_number':154,'multiline':False]['text':' | Start |-------->| Try |-+---------->| Catch |-+->+--------->| End |','line_number':155,'multiline':False]['text':' +-------+         +-----+ |           +-------+ |  ^          +-----+','line_number':156,'multiline':False]['text':'                           |                     |  |','line_number':157,'multiline':False]['text':'                           |  +------------------+  +----+','line_number':158,'multiline':False]['text':'                           |  |                          |','line_number':159,'multiline':False]['text':'                           |  v emitFinally +---------+  |','line_number':160,'multiline':False]['text':'                           +->+------------>| Finally |--+','line_number':161,'multiline':False]['text':'                                            +---------+','line_number':162,'multiline':False]['text':' The initial state.','line_number':164,'multiline':False]['text':' After calling emitTry.','line_number':167,'multiline':False]['text':' After calling emitCatch.','line_number':170,'multiline':False]['text':' After calling emitFinally.','line_number':173,'multiline':False]['text':' After calling emitEnd.','line_number':176,'multiline':False]['text':' If `finallyPos` is specified, it's an offset of the finally block's','line_number':199,'multiline':False]['text':' "{" character in the source code text, to improve line:column number in','line_number':200,'multiline':False]['text':' the error reporting.','line_number':201,'multiline':False]['text':' For non-syntactic try-catch-finally, `finallyPos` can be omitted.','line_number':202,'multiline':False]['text':' namespace frontend ','line_number':214,'multiline':True]['text':' namespace js ','line_number':215,'multiline':True]['text':' frontend_TryEmitter_h ','line_number':217,'multiline':True]