['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
*
*   Copyright (C) 2000-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*
* File wrtjava.cpp
*
* Modification History:
*
*   Date        Name        Description
*   01/11/02    Ram         Creation.
*   02/12/08    Spieth      Fix errant 'new Object[][]{' insertion
*   02/19/08    Spieth      Removed ICUListResourceBundle dependancy
*******************************************************************************
','line_number':3,'multiline':True]['text':'static const char* javaClassICU= " extends ListResourceBundle {\n\n"
                                 "    public %s  () {\n"
                                 "          super.contents = data;\n"
                                 "    }\n"
                                 "    static final Object[][] data = new Object[][] { \n";','line_number':80,'multiline':True]['text':'static const char* outDir = NULL;','line_number':89,'multiline':True]['text':'ASCII','line_number':175,'multiline':True]['text':' assume that every codepoint is represented in \uXXXX format','line_number':221,'multiline':True]['text':'
     * calculate the number of lines that
     * may be required if column count is 80
     ','line_number':222,'multiline':True]['text':' buflen accounts for extra bytes added due to multi byte encoding of','line_number':248,'multiline':False]['text':'        non ASCII characters','line_number':249,'multiline':False]['text':' for ", +\n ','line_number':263,'multiline':True]['text':' check the trail bytes to be added to the output line','line_number':292,'multiline':False]['text':' Writing Functions ','line_number':322,'multiline':True]['text':'if(current->isString()){
                write_tabs(out);
            }','line_number':366,'multiline':True]['text':'status','line_number':391,'multiline':True]['text':' const char* intC   = "new Integer(";   ','line_number':394,'multiline':True]['text':' T_FileStream_write(out, intC, (int32_t)uprv_strlen(intC)); ','line_number':418,'multiline':True]['text':' T_FileStream_write(out,"),",2);  ','line_number':421,'multiline':True]['text':' T_FileStream_write(out,"\n",1);  ','line_number':422,'multiline':True]['text':'status','line_number':432,'multiline':True]['text':' write the binary data ','line_number':438,'multiline':True]['text':'status','line_number':448,'multiline':True]['text':' Empty array ','line_number':501,'multiline':True]['text':'char constructor[1000] = { 0 };','line_number':626,'multiline':True]['text':'UBool j1 =FALSE;','line_number':627,'multiline':True]['text':'outDir = outputDir;','line_number':628,'multiline':True]['text':' Reset the start indictor','line_number':630,'multiline':True]['text':' if(j1){
          T_FileStream_write(out, javaClass1, (int32_t)uprv_strlen(javaClass1));
       }else{
           sprintf(constructor,javaClassICU,className);
           T_FileStream_write(out, constructor, (int32_t)uprv_strlen(constructor));
       }
    ','line_number':678,'multiline':True]['text':' store the output encoding ','line_number':687,'multiline':True]