['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':' Some versions of the Windows SDK have a bug where some interlocked functions','line_number':18,'multiline':False]['text':' are not redefined as compiler intrinsics. Fix that for the interlocked','line_number':19,'multiline':False]['text':' functions that are used in this file.','line_number':20,'multiline':False]['text':' Wrapper for native condition variable APIs.','line_number':31,'multiline':False]['text':' Note that DWORD is unsigned, so we have to be careful to clamp at 0. If','line_number':64,'multiline':False]['text':' rel_time is Forever, then ToMilliseconds is +inf, which evaluates as','line_number':65,'multiline':False]['text':' greater than UINT32_MAX, resulting in the correct INFINITE wait. We also','line_number':66,'multiline':False]['text':' don't want to round sub-millisecond waits to 0, as that wastes energy (see','line_number':67,'multiline':False]['text':' bug 1437167 comment 6), so we instead round submillisecond waits to 1ms.','line_number':68,'multiline':False]['text':' Round submillisecond waits to 1ms.','line_number':77,'multiline':False]['text':' Native condition variables don't require cleanup.','line_number':90,'multiline':False]