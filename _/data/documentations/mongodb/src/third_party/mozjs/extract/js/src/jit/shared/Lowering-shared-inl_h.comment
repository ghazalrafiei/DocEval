['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' It is illegal to call use() on an instruction with two defs.','line_number':25,'multiline':False]['text':' Call instructions should use defineReturn.','line_number':49,'multiline':False]['text':' Assign the definition and a virtual register. Then, propagate this','line_number':54,'multiline':False]['text':' virtual register to the MIR, so we can map MIR to LIR during lowering.','line_number':55,'multiline':False]['text':' Note: Any other operand that is not the same as this operand should be','line_number':108,'multiline':False]['text':' marked as not being "atStart". The regalloc cannot handle those and can','line_number':109,'multiline':False]['text':' overwrite the inputs!','line_number':110,'multiline':False]['text':' The input should be used at the start of the instruction, to avoid moves.','line_number':112,'multiline':False]['text':' Note: Any other operand that is not the same as this operand should be','line_number':127,'multiline':False]['text':' marked as not being "atStart". The regalloc cannot handle those and can','line_number':128,'multiline':False]['text':' overwrite the inputs!','line_number':129,'multiline':False]['text':' The input should be used at the start of the instruction, to avoid moves.','line_number':131,'multiline':False]['text':' The input should be used at the start of the instruction, to avoid moves.','line_number':162,'multiline':False]['text':' Call instructions should use defineReturn.','line_number':204,'multiline':False]['text':' Call instructions should use defineReturn.','line_number':229,'multiline':False]['text':' This function checks that when making redefinitions, we don't accidentally','line_number':332,'multiline':False]['text':' coerce two incompatible types.','line_number':333,'multiline':False]['text':' In LIR, we treat boolean and int32 as the same low-level type (INTEGER).','line_number':338,'multiline':False]['text':' When snapshotting, we recover the actual JS type from MIR.','line_number':339,'multiline':False]['text':' On 32-bit platforms Int32 can be redefined as IntPtr and vice versa.','line_number':345,'multiline':False]['text':' Try to emit MIR marked as emitted-at-uses at, well, uses. For','line_number':358,'multiline':False]['text':' snapshotting reasons we delay the MIRTypes match, or when we are','line_number':359,'multiline':False]['text':' coercing between bool and int32 constants.','line_number':360,'multiline':False]['text':' Returns the virtual register of a js::Value-defining instruction. This is','line_number':671,'multiline':False]['text':' abstracted because MBox is a special value-returning instruction that','line_number':672,'multiline':False]['text':' redefines its input payload if its input is not constant. Therefore, it is','line_number':673,'multiline':False]['text':' illegal to request a box's payload by adding VREG_DATA_OFFSET to its raw id.','line_number':674,'multiline':False]['text':' Note: always call ensureDefined before calling useType/usePayload,','line_number':686,'multiline':False]['text':' so that emitted-at-use operands are handled correctly.','line_number':687,'multiline':False]['text':' On x64, masm.loadUnboxedValue emits slightly less efficient code when','line_number':727,'multiline':False]['text':' the input and output use the same register and we're not loading an','line_number':728,'multiline':False]['text':' int32/bool/double, so we just call useRegister in this case.','line_number':729,'multiline':False]['text':' On 32-bit platforms, always load the value in registers.','line_number':822,'multiline':False]['text':' useAtStart = ','line_number':831,'multiline':True]['text':' namespace jit','line_number':863,'multiline':False]['text':' namespace js','line_number':864,'multiline':False]['text':' jit_shared_Lowering_shared_inl_h ','line_number':866,'multiline':True]