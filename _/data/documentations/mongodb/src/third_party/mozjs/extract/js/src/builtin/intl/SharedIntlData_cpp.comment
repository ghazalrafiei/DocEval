['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Runtime-wide Intl data shared across compartments. ','line_number':7,'multiline':True]['text':' Compare time zone names ignoring ASCII case differences.','line_number':97,'multiline':False]['text':' If ensureTimeZones() was called previously, but didn't complete due to','line_number':131,'multiline':False]['text':' OOM, clear all sets/maps and start from scratch.','line_number':132,'multiline':False]['text':' Skip legacy ICU time zone names.','line_number':156,'multiline':False]['text':' ICU shouldn't report any duplicate time zone names, but if it does,','line_number':170,'multiline':False]['text':' just ignore the duplicate name.','line_number':171,'multiline':False]['text':' The effectively supported time zones aren't known at compile time,','line_number':274,'multiline':False]['text':' when','line_number':275,'multiline':False]['text':' 1. SpiderMonkey was compiled with "--with-system-icu".','line_number':276,'multiline':False]['text':' 2. ICU's dynamic time zone data loading feature was used.','line_number':277,'multiline':False]['text':'    (ICU supports loading time zone files at runtime through the','line_number':278,'multiline':False]['text':'    ICU_TIMEZONE_FILES_DIR environment variable.)','line_number':279,'multiline':False]['text':' Ensure ICU supports the new target zone before applying the update.','line_number':280,'multiline':False]['text':' ICU shouldn't report any duplicate locales, but if it does, just','line_number':341,'multiline':False]['text':' ignore the duplicated locale.','line_number':342,'multiline':False]['text':' From <https://tc39.es/ecma402/#sec-internal-slots>:','line_number':370,'multiline':False]['text':'','line_number':371,'multiline':False]['text':' For locales that include a script subtag in addition to language and','line_number':372,'multiline':False]['text':' region, the corresponding locale without a script subtag must also be','line_number':373,'multiline':False]['text':' supported; that is, if an implementation recognizes "zh-Hant-TW", it is','line_number':374,'multiline':False]['text':' also expected to recognize "zh-TW".','line_number':375,'multiline':False]['text':'   2 * Alpha language subtag','line_number':377,'multiline':False]['text':' + 1 separator','line_number':378,'multiline':False]['text':' + 4 * Alphanum script subtag','line_number':379,'multiline':False]['text':' + 1 separator','line_number':380,'multiline':False]['text':' + 2 * Alpha region subtag','line_number':381,'multiline':False]['text':' Fast case: Skip locales without script subtags.','line_number':387,'multiline':False]['text':' We don't need the full-fledged language tag parser when we just want to','line_number':392,'multiline':False]['text':' remove the script subtag.','line_number':393,'multiline':False]['text':' Find the separator between the language and script subtags.','line_number':395,'multiline':False]['text':' Possible |script| subtag start position.','line_number':401,'multiline':False]['text':' Find the separator between the script and region subtags.','line_number':404,'multiline':False]['text':' Continue with the next locale if we didn't find a script subtag.','line_number':410,'multiline':False]['text':' Possible |region| subtag start position.','line_number':416,'multiline':False]['text':' Search if there's yet another subtag after the region subtag.','line_number':419,'multiline':False]['text':' Continue with the next locale if we didn't find a region subtag.','line_number':422,'multiline':False]['text':' We've found a script and a region subtag.','line_number':428,'multiline':False]['text':' Remove the script subtag. Note: erase() needs non-const pointers, which','line_number':432,'multiline':False]['text':' means we can't directly pass |script|.','line_number':433,'multiline':False]['text':' Add the locale with the script subtag removed.','line_number':439,'multiline':False]['text':' Forcibly add an entry for the last-ditch locale, in case ICU doesn't','line_number':445,'multiline':False]['text':' directly support it (but does support it through fallback, e.g. supporting','line_number':446,'multiline':False]['text':' "en-GB" indirectly using "en" support).','line_number':447,'multiline':False]['text':' If ensureSupportedLocales() was called previously, but didn't complete due','line_number':493,'multiline':False]['text':' to OOM, clear all data and start from scratch.','line_number':494,'multiline':False]['text':' If ensureUpperCaseFirstLocales() was called previously, but didn't','line_number':599,'multiline':False]['text':' complete due to OOM, clear all data and start from scratch.','line_number':600,'multiline':False]['text':' ICU shouldn't report any duplicate locales, but if it does, just','line_number':651,'multiline':False]['text':' ignore the duplicated locale.','line_number':652,'multiline':False]['text':' DEBUG || MOZ_SYSTEM_ICU','line_number':666,'multiline':False]['text':' "da" (Danish) and "mt" (Maltese) are the only two supported locales using','line_number':683,'multiline':False]['text':' upper-case first. CLDR also lists "cu" (Church Slavic) as an upper-case','line_number':684,'multiline':False]['text':' first locale, but since it's not supported in ICU, we don't care about it','line_number':685,'multiline':False]['text':' here.','line_number':686,'multiline':False]['text':' Return the cached instance if the requested locale matches the locale','line_number':715,'multiline':False]['text':' of the cached generator.','line_number':716,'multiline':False]['text':' The UniquePtr needs to be recreated as it's using a different Deleter in','line_number':728,'multiline':False]['text':' order to be able to forward declare DateTimePatternGenerator in','line_number':729,'multiline':False]['text':' SharedIntlData.h.','line_number':730,'multiline':False]['text':' Atoms are always tenured.','line_number':756,'multiline':False]