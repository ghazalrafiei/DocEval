['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
*
*   Copyright (C) 2009-2016, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  n2builder.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2009nov25
*   created by: Markus W. Scherer
*
* Builds Normalizer2 data and writes a binary .nrm file.
* For the file format see source/common/normalizer2impl.h.
','line_number':3,'multiline':True]['text':' UDataInfo cf. udata.h ','line_number':51,'multiline':True]['text':' dataFormat="Nrm2" ','line_number':61,'multiline':True]['text':' formatVersion ','line_number':62,'multiline':True]['text':' dataVersion (Unicode version) ','line_number':63,'multiline':True]['text':' JAMO_T_BASE+1: not U+11A7','line_number':90,'multiline':False]['text':' createNorm(c), not getNorm(c), to record a non-mapping and detect conflicting data.','line_number':207,'multiline':False]['text':' Maps-to-empty-string is no boundary of any kind.','line_number':216,'multiline':False]['text':' no starter','line_number':220,'multiline':False]['text':' One-way mapping where after the last starter is at least one combining mark','line_number':224,'multiline':False]['text':' with a combining class greater than 1,','line_number':225,'multiline':False]['text':' which means that another combining mark can reorder before it.','line_number':226,'multiline':False]['text':' By contrast, in a round-trip mapping this does not prevent a boundary as long as','line_number':227,'multiline':False]['text':' the starter or composite does not combine-forward with a following combining mark.','line_number':228,'multiline':False]['text':' The last starter is at the beginning of the mapping and combines backward.','line_number':233,'multiline':False]['text':' A Jamo leading consonant or an LV pair combines-forward if it is at the end,','line_number':239,'multiline':False]['text':' otherwise it is blocked.','line_number':240,'multiline':False]['text':' Note: There can be no Hangul syllable in the fully decomposed mapping.','line_number':243,'multiline':False]['text':' Multiple starters can combine into one.','line_number':245,'multiline':False]['text':' Look for the first of the last sequence of starters, excluding Jamos.','line_number':246,'multiline':False]['text':' Compose as far as possible, and see if further compositions with','line_number':253,'multiline':False]['text':' characters following this mapping are possible.','line_number':254,'multiline':False]['text':' The last starter does not combine forward.','line_number':258,'multiline':False]['text':' !=0 if after last starter','line_number':262,'multiline':False]['text':' The starter combines with a mark that reorders before the current one.','line_number':264,'multiline':False]['text':' The starter combines with c into a composite replacement starter.','line_number':270,'multiline':False]['text':' The composite does not combine further.','line_number':274,'multiline':False]['text':' Keep prevCC because we "removed" the combining mark.','line_number':276,'multiline':False]['text':' The new starter does not combine forward.','line_number':281,'multiline':False]['text':' forward-combining starter at the very end','line_number':289,'multiline':False]['text':' The starter combines with another mark.','line_number':292,'multiline':False]['text':' no starter','line_number':300,'multiline':False]['text':' normal composite','line_number':309,'multiline':False]['text':' Hangul syllable','line_number':313,'multiline':False]['text':' Prerequisites: Compositions are built, mappings are recursively decomposed.','line_number':326,'multiline':False]['text':' Mappings are not yet in canonical order.','line_number':327,'multiline':False]['text':'','line_number':328,'multiline':False]['text':' This function works on a Norm struct. We do not know which code point(s) map(s) to it.','line_number':329,'multiline':False]['text':' Therefore, we cannot compute algorithmic mapping deltas here.','line_number':330,'multiline':False]['text':' Error conditions are checked, but printed later when we do know the offending code point.','line_number':331,'multiline':False]['text':' Ensure canonical order.','line_number':337,'multiline':False]['text':' A character that is deleted (maps to an empty string) must','line_number':345,'multiline':False]['text':' get the worst-case lccc and tccc values because arbitrary','line_number':346,'multiline':False]['text':' characters on both sides will become adjacent.','line_number':347,'multiline':False]['text':' one-way mapping','line_number':368,'multiline':False]['text':' The mapping is comp-normalized.','line_number':379,'multiline':False]['text':' no mapping','line_number':383,'multiline':False]['text':' Earlier code checked ccc=0.','line_number':393,'multiline':False]['text':' any ccc','line_number':396,'multiline':False]['text':' Earlier code checked ccc=0.','line_number':399,'multiline':False]['text':' Positive offset from minNoNoDelta, shifted left for additional bits.','line_number':460,'multiline':False]['text':' DELTA_TCCC_0==0','line_number':463,'multiline':False]['text':' ccc=0..255','line_number':476,'multiline':False]['text':' ccc=1..255','line_number':480,'multiline':False]['text':' Should not occur.','line_number':482,'multiline':False]['text':' Set the minimum code points for real data lookups in the quick check loops.','line_number':492,'multiline':False]['text':' Check that none of the Hangul/Jamo code points have data.','line_number':511,'multiline':False]['text':' Set data for algorithmic runtime handling.','line_number':523,'multiline':False]['text':' Jamo V/T are maybeYes','line_number':526,'multiline':False]['text':' JAMO_T_BASE+1: not U+11A7','line_number':534,'multiline':False]['text':' Hangul LV encoded as minYesNo','line_number':538,'multiline':False]['text':' Hangul LVT encoded as minYesNoMappingsOnly|HAS_COMP_BOUNDARY_AFTER','line_number':540,'multiline':False]['text':' Set the first LV, then write all other Hangul syllables as LVT,','line_number':546,'multiline':False]['text':' then overwrite the remaining LV.','line_number':547,'multiline':False]['text':' Build composition lists before recursive decomposition,','line_number':558,'multiline':False]['text':' so that we still have the raw, pair-wise mappings.','line_number':559,'multiline':False]['text':' Recursively decompose all mappings.','line_number':563,'multiline':False]['text':' Set the Norm::Type and other properties.','line_number':570,'multiline':False]['text':' Write the properties, mappings and composition lists to','line_number':576,'multiline':False]['text':' appropriate parts of the "extra data" array.','line_number':577,'multiline':False]['text':' Pad the maybeYesCompositions length to a multiple of 4,','line_number':596,'multiline':False]['text':' so that NO_NO_DELTA bits 2..1 can be used without subtracting the center.','line_number':597,'multiline':False]['text':' Pad to even length for 4-byte alignment of following data.','line_number':606,'multiline':False]['text':' writeNorm16() and setHangulData() reduce these as needed.','line_number':620,'multiline':False]['text':' Map each code point to its norm16 value,','line_number':630,'multiline':False]['text':' including the properties that fit directly,','line_number':631,'multiline':False]['text':' and the offset to the "extra data" if necessary.','line_number':632,'multiline':False]['text':' TODO: iterate via getRange() instead of callback?','line_number':635,'multiline':False]['text':' Look for the "worst" norm16 value of any supplementary code point','line_number':639,'multiline':False]['text':' corresponding to a lead surrogate, and set it as that surrogate's value.','line_number':640,'multiline':False]['text':' Enables UTF-16 quick check inner loops to look at only code units.','line_number':641,'multiline':False]['text':'','line_number':642,'multiline':False]['text':' We could be more sophisticated:','line_number':643,'multiline':False]['text':' We could collect a bit set for whether there are values in the different','line_number':644,'multiline':False]['text':' norm16 ranges (yesNo, maybeYes, yesYesWithCC etc.)','line_number':645,'multiline':False]['text':' and select the best value that only breaks the composition and/or decomposition','line_number':646,'multiline':False]['text':' inner loops if necessary.','line_number':647,'multiline':False]['text':' However, that seems like overkill for an optimization for supplementary characters.','line_number':648,'multiline':False]['text':'','line_number':649,'multiline':False]['text':' First check that surrogate code *points* are inert.','line_number':650,'multiline':False]['text':' The parser should have rejected values/mappings for them.','line_number':651,'multiline':False]['text':' ANDing values yields 0 bits where any value has a 0.','line_number':662,'multiline':False]['text':' Used for worst-case HAS_COMP_BOUNDARY_AFTER.','line_number':663,'multiline':False]['text':' Data for a new lead surrogate.','line_number':673,'multiline':False]['text':' Intersect each range with the code points for one lead surrogate.','line_number':681,'multiline':False]['text':' End of the supplementary block for a lead surrogate.','line_number':684,'multiline':False]['text':' Set noNo ("worst" value) if it got into "less-bad" maybeYes or ccc!=0.','line_number':686,'multiline':False]['text':' Otherwise it might end up at something like JAMO_VT which stays in','line_number':687,'multiline':False]['text':' the inner decomposition quick check loop.','line_number':688,'multiline':False]['text':' Potentially skip inert supplementary blocks for several lead surrogates.','line_number':698,'multiline':False]['text':' Adjust supplementary minimum code points to break quick check loops at their lead surrogates.','line_number':708,'multiline':False]['text':' For an empty data file, minCP=0x110000 turns into 0xdc00 (first trail surrogate)','line_number':709,'multiline':False]['text':' which is harmless.','line_number':710,'multiline':False]['text':' As a result, the minimum code points are always BMP code points.','line_number':711,'multiline':False]['text':' namespace','line_number':876,'multiline':False]['text':' Do not processData() before writing the input-syntax data file.','line_number':880,'multiline':False]['text':' Compute diff = b1 - b2','line_number':986,'multiline':False]['text':' so that we should be able to get b1 = b2 + diff.','line_number':987,'multiline':False]['text':' Nothing to do.','line_number':1030,'multiline':False]['text':' #if !UCONFIG_NO_NORMALIZATION ','line_number':1043,'multiline':True]['text':'
 * Hey, Emacs, please set the following:
 *
 * Local Variables:
 * indent-tabs-mode: nil
 * End:
 ','line_number':1045,'multiline':True]