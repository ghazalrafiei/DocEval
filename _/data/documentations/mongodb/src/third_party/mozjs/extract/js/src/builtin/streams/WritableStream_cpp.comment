['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Class WritableStream. ','line_number':7,'multiline':True]['text':' MOZ_ASSERT','line_number':11,'multiline':False]['text':' JS_ReportErrorNumberASCII','line_number':13,'multiline':False]['text':' JSProto_WritableStream','line_number':14,'multiline':False]['text':' JS_STREAMS_CLASS_SPEC','line_number':16,'multiline':False]['text':' js::MakeSizeAlgorithmFromSizeFunction, js::ReturnPromiseRejectedWithPendingError, js::ValidateAndNormalizeHighWaterMark','line_number':17,'multiline':False]['text':' js::SetUpWritableStreamDefaultControllerFromUnderlyingSink','line_number':18,'multiline':False]['text':' js::CreateWritableStreamDefaultWriter','line_number':19,'multiline':False]['text':' js::WritableStream{Abort,Close{,QueuedOrInFlight}}','line_number':20,'multiline':False]['text':' JS::CallArgs{,FromVp}','line_number':21,'multiline':False]['text':' JS{Function,Property}Spec, JS_{FS,PS}_END, JSCLASS_PRIVATE_IS_NSISUPPORTS, JSCLASS_HAS_PRIVATE, JS_NULL_CLASS_OPS','line_number':22,'multiline':False]['text':' js::GetErrorMessage, JSMSG_*','line_number':23,'multiline':False]['text':' JS::RealmCreationOptions','line_number':24,'multiline':False]['text':' JS::Handle, JS::Rooted','line_number':25,'multiline':False]['text':' JS::{,Object}Value','line_number':26,'multiline':False]['text':' JSContext','line_number':27,'multiline':False]['text':' js::GetPrototypeFromBuiltinConstructor','line_number':28,'multiline':False]['text':' js::GetProperty','line_number':29,'multiline':False]['text':' js::PlainObject','line_number':30,'multiline':False]['text':' JS::Realm','line_number':31,'multiline':False]['text':' js::UnwrapAndTypeCheckThis','line_number':33,'multiline':False]['text':' JSContext::check','line_number':34,'multiline':False]['text':' js::NewBuiltinClassInstance','line_number':35,'multiline':False]['text':' js::ThrowIfNotConstructing','line_number':36,'multiline':False]['text':'** 4.2. Class WritableStream *********************************************','line_number':54,'multiline':True]['text':'*
 * Streams spec, 4.2.3. new WritableStream(underlyingSink = {}, strategy = {})
 ','line_number':56,'multiline':True]['text':' Implicit in the spec: argument default values.','line_number':69,'multiline':False]['text':' Implicit in the spec: Set this to','line_number':88,'multiline':False]['text':'     OrdinaryCreateFromConstructor(NewTarget, ...).','line_number':89,'multiline':False]['text':' Step 1: Perform ! InitializeWritableStream(this).','line_number':90,'multiline':False]['text':' Step 2: Let size be ? GetV(strategy, "size").','line_number':102,'multiline':False]['text':' Step 3: Let highWaterMark be ? GetV(strategy, "highWaterMark").','line_number':108,'multiline':False]['text':' Step 4: Let type be ? GetV(underlyingSink, "type").','line_number':115,'multiline':False]['text':' Step 5: If type is not undefined, throw a RangeError exception.','line_number':121,'multiline':False]['text':' Step 6: Let sizeAlgorithm be ? MakeSizeAlgorithmFromSizeFunction(size).','line_number':128,'multiline':False]['text':' Step 7: If highWaterMark is undefined, let highWaterMark be 1.','line_number':133,'multiline':False]['text':' Step 8: Set highWaterMark to ?','line_number':138,'multiline':False]['text':' ValidateAndNormalizeHighWaterMark(highWaterMark).','line_number':139,'multiline':False]['text':' Step 9: Perform','line_number':146,'multiline':False]['text':'         ? SetUpWritableStreamDefaultControllerFromUnderlyingSink(','line_number':147,'multiline':False]['text':'         this, underlyingSink, highWaterMark, sizeAlgorithm).','line_number':148,'multiline':False]['text':'*
 * Streams spec, 4.2.5.1. get locked
 ','line_number':158,'multiline':True]['text':' Step 1: If ! WritableStream(this) is false, throw a TypeError exception.','line_number':164,'multiline':False]['text':' Step 2: Return ! IsWritableStreamLocked(this).','line_number':171,'multiline':False]['text':'*
 * Streams spec, 4.2.5.2. abort(reason)
 ','line_number':176,'multiline':True]['text':' Step 1: If ! IsWritableStream(this) is false, return a promise rejected','line_number':182,'multiline':False]['text':'         with a TypeError exception.','line_number':183,'multiline':False]['text':' Step 2: If ! IsWritableStreamLocked(this) is true, return a promise','line_number':190,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':191,'multiline':False]['text':' Step 3: Return ! WritableStreamAbort(this, reason).','line_number':198,'multiline':False]['text':'*
 * Streams spec, 4.2.5.3. close()
 ','line_number':209,'multiline':True]['text':' Step 1: If ! IsWritableStream(this) is false, return a promise rejected','line_number':215,'multiline':False]['text':'         with a TypeError exception.','line_number':216,'multiline':False]['text':' Step 2: If ! IsWritableStreamLocked(this) is true, return a promise','line_number':223,'multiline':False]['text':'         rejected with a TypeError exception.','line_number':224,'multiline':False]['text':' Step 3: If ! WritableStreamCloseQueuedOrInFlight(this) is true, return a','line_number':231,'multiline':False]['text':'         promise rejected with a TypeError exception.','line_number':232,'multiline':False]['text':' Step 4: Return ! WritableStreamClose(this).','line_number':239,'multiline':False]['text':'*
 * Streams spec, 4.2.5.4. getWriter()
 ','line_number':249,'multiline':True]['text':' Step 1: If ! WritableStream(this) is false, throw a TypeError exception.','line_number':255,'multiline':False]