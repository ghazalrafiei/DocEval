['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' There is some pattern:','line_number':17,'multiline':False]['text':'   (A -> B)','line_number':18,'multiline':False]['text':'   (B -> A)','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' This case handles (A -> B), which we reach first. We save B, then allow','line_number':21,'multiline':False]['text':' the original move to continue.','line_number':22,'multiline':False]['text':' Second scratch register should not be moved by MoveEmitter.','line_number':48,'multiline':False]['text':' Second scratch register should not be moved by MoveEmitter.','line_number':59,'multiline':False]['text':' There is some pattern:','line_number':72,'multiline':False]['text':'   (A -> B)','line_number':73,'multiline':False]['text':'   (B -> A)','line_number':74,'multiline':False]['text':'','line_number':75,'multiline':False]['text':' This case handles (B -> A), which we reach last. We emit a move from the','line_number':76,'multiline':False]['text':' saved value of B, to A.','line_number':77,'multiline':False]['text':' Second scratch register should not be moved by MoveEmitter.','line_number':104,'multiline':False]['text':' Second scratch register should not be moved by MoveEmitter.','line_number':116,'multiline':False]