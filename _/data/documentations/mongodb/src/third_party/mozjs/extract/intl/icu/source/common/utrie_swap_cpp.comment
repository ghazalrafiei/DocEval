['text':' Â© 2018 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':' utrie_swap.cpp','line_number':4,'multiline':False]['text':' created: 2018aug08 Markus W. Scherer','line_number':5,'multiline':False]['text':' These functions for swapping different generations of ICU code point tries are here','line_number':14,'multiline':False]['text':' so that their implementation files need not depend on swapper code,','line_number':15,'multiline':False]['text':' need not depend on each other, and so that other swapper code','line_number':16,'multiline':False]['text':' need not depend on other trie code.','line_number':17,'multiline':False]['text':' namespace','line_number':23,'multiline':False]['text':' setup and swapping ','line_number':42,'multiline':True]['text':' not a UTrie ','line_number':63,'multiline':True]['text':' swap the header ','line_number':80,'multiline':True]['text':' swap the index and the data ','line_number':83,'multiline':True]['text':' setup and swapping ','line_number':113,'multiline':True]['text':' not a UTrie ','line_number':133,'multiline':True]['text':' swap the header ','line_number':160,'multiline':True]['text':' swap the index and the data ','line_number':164,'multiline':True]['text':' setup and swapping ','line_number':200,'multiline':True]['text':' not a UCPTrie ','line_number':225,'multiline':True]['text':' swap the header ','line_number':255,'multiline':True]['text':' swap the index ','line_number':259,'multiline':True]['text':' swap the data ','line_number':264,'multiline':True]['text':'*
 * Gets the trie version from 32-bit-aligned memory containing the serialized form
 * of a UTrie (version 1), a UTrie2 (version 2), or a UCPTrie (version 3).
 *
 * @param data a pointer to 32-bit-aligned memory containing the serialized form of a trie
 * @param length the number of bytes available at data;
 *               can be more than necessary (see return value)
 * @param anyEndianOk If FALSE, only platform-endian serialized forms are recognized.
 *                    If TRUE, opposite-endian serialized forms are recognized as well.
 * @return the trie version of the serialized form, or 0 if it is not
 *         recognized as a serialized trie
 ','line_number':290,'multiline':True]['text':' namespace','line_number':330,'multiline':False]