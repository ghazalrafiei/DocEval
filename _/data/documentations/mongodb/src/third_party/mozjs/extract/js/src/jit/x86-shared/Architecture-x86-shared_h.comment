['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' These offsets are specific to nunboxing, and capture offsets into the','line_number':26,'multiline':False]['text':' components of a js::Value.','line_number':27,'multiline':False]['text':' Size of each bailout table entry. On x86 this is a 5-byte relative call.','line_number':31,'multiline':False]['text':' Content spilled during bailouts.','line_number':48,'multiline':False]['text':' Registers returned from a JS -> JS call.','line_number':119,'multiline':False]['text':' Registers returned from a JS -> C call.','line_number':123,'multiline':False]['text':' This is ScratchReg.','line_number':143,'multiline':False]['text':' Registers returned from a JS -> JS call.','line_number':145,'multiline':False]['text':' Registers returned from a JS -> C call.','line_number':148,'multiline':False]['text':' Observe that there is a Simd128 type on both x86 and x64 whether SIMD is','line_number':165,'multiline':False]['text':' implemented/enabled or not, and that the RegisterContent union is large','line_number':166,'multiline':False]['text':' enough for a V128 datum always.  Producers and consumers of a register dump','line_number':167,'multiline':False]['text':' must be aware of this even if they don't need to save/restore values in the','line_number':168,'multiline':False]['text':' high lanes of the SIMD registers.  See the DumpAllRegs() implementations,','line_number':169,'multiline':False]['text':' for example.','line_number':170,'multiline':False]['text':' 32-bit float.','line_number':173,'multiline':False]['text':' 64-bit double.','line_number':174,'multiline':False]['text':' 128-bit Wasm SIMD type.','line_number':175,'multiline':False]['text':' Content spilled during bailouts.','line_number':179,'multiline':False]['text':' Magic values which are used to duplicate a mask of physical register for','line_number':216,'multiline':False]['text':' a specific type of register. A multiplication is used to copy and shift','line_number':217,'multiline':False]['text':' the bits of the physical register mask.','line_number':218,'multiline':False]['text':' This is ScratchDoubleReg.','line_number':237,'multiline':False]['text':' This is ScratchDoubleReg.','line_number':241,'multiline':False]['text':' Count the number of non-aliased registers, for the moment.','line_number':269,'multiline':False]['text':'','line_number':270,'multiline':False]['text':' Copy the set bits of each typed register to the low part of the of','line_number':271,'multiline':False]['text':' the Set, and count the number of registers. This is made to avoid','line_number':272,'multiline':False]['text':' registers which are allocated twice with different types (such as in','line_number':273,'multiline':False]['text':' AllMask).','line_number':274,'multiline':False]['text':' Note: These fields are using one extra bit to make the invalid enumerated','line_number':303,'multiline':False]['text':' values fit, and thus prevent a warning.','line_number':304,'multiline':False]['text':' Constants used for exporting/importing the float register code.','line_number':309,'multiline':False]['text':' :TODO: ARM is doing the same thing, but we should avoid this, except','line_number':372,'multiline':False]['text':' that the RegisterSets depends on this.','line_number':373,'multiline':False]['text':' defined in Assembler-x86-shared.cpp','line_number':381,'multiline':False]['text':' Check if two floating point registers have the same type.','line_number':393,'multiline':False]['text':' Arm/D32 has double registers that can NOT be treated as float32','line_number':453,'multiline':False]['text':' and this requires some dances in lowering.','line_number':454,'multiline':False]['text':' On ARM, Dn aliases both S2n and S2n+1, so if you need to convert a float32','line_number':457,'multiline':False]['text':' to a double as a temporary, you need a temporary double register.','line_number':458,'multiline':False]['text':' namespace jit','line_number':461,'multiline':False]['text':' namespace js','line_number':462,'multiline':False]['text':' jit_x86_shared_Architecture_x86_h ','line_number':464,'multiline':True]