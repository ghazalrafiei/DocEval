['text':'**************************************************************************************************

  Zyan Disassembler Library (Zydis)

  Original Author : Florian Bernd, Joel Hoener

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]['text':'*
 * @file
 * @brief   Provides formatter functions that are shared between the different formatters.
 ','line_number':27,'multiline':True]['text':' ============================================================================================== ','line_number':42,'multiline':True]['text':' Macros                                                                                         ','line_number':43,'multiline':True]['text':' ============================================================================================== ','line_number':44,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':46,'multiline':True]['text':' String                                                                                         ','line_number':47,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':48,'multiline':True]['text':'*
 * @brief   Appends an unsigned numeric value to the given string.
 *
 * @param   formatter       A pointer to the `ZydisFormatter` instance.
 * @param   base            The numeric base.
 * @param   str             The destination string.
 * @param   value           The value.
 * @param   padding_length  The padding length.
 ','line_number':50,'multiline':True]['text':'*
 * @brief   Appends a signed numeric value to the given string.
 *
 * @param   formatter       A pointer to the `ZydisFormatter` instance.
 * @param   base            The numeric base.
 * @param   str             The destination string.
 * @param   value           The value.
 * @param   padding_length  The padding length.
 * @param   force_sign      Forces printing of the '+' sign for positive numbers.
 ','line_number':77,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':105,'multiline':True]['text':' Buffer                                                                                         ','line_number':106,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':107,'multiline':True]['text':'*
 * @brief   Invokes the `ZydisFormatterBufferAppend` routine, if tokenization is enabled for the
 *          current pass.
 *
 * @param   buffer  A pointer to the `ZydisFormatterBuffer` struct.
 * @param   type    The token type.
 *
 * Using this macro instead of direct calls to `ZydisFormatterBufferAppend` greatly improves the
 * performance for non-tokenizing passes.
 ','line_number':109,'multiline':True]['text':'*
 * @brief   Returns a snapshot of the buffer-state.
 *
 * @param   buffer  A pointer to the `ZydisFormatterBuffer` struct.
 * @param   state   Receives a snapshot of the buffer-state.
 *
 * Using this macro instead of direct calls to `ZydisFormatterBufferRemember` improves the
 * performance for non-tokenizing passes.
 ','line_number':125,'multiline':True]['text':'*
 * @brief   Appends a string (`STR_`-prefix) or a predefined token-list (`TOK_`-prefix).
 *
 * @brief   buffer  A pointer to the `ZydisFormatterBuffer` struct.
 * @brief   name    The base name (without prefix) of the string- or token.
 ','line_number':143,'multiline':True]['text':' TODO: Implement `letter_case` for predefined tokens','line_number':158,'multiline':False]['text':'*
 * @brief   Appends a string (`STR_`-prefix) or a predefined token-list (`TOK_`-prefix).
 *
 * @brief   buffer      A pointer to the `ZydisFormatterBuffer` struct.
 * @brief   name        The base name (without prefix) of the string- or token.
 * @brief   letter-case The desired letter-case.
 ','line_number':160,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':176,'multiline':True]['text':' ============================================================================================== ','line_number':178,'multiline':True]['text':' Helper functions                                                                               ','line_number':179,'multiline':True]['text':' ============================================================================================== ','line_number':180,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':182,'multiline':True]['text':' Buffer                                                                                         ','line_number':183,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':184,'multiline':True]['text':' MSVC does not like the C99 flexible-array extension','line_number':186,'multiline':False]['text':'*
 * @brief   Appends a predefined token-list to the `buffer`.
 *
 * @param   buffer  A pointer to the `ZydisFormatterBuffer` struct.
 * @param   data    A pointer to the `ZydisPredefinedToken` struct.
 *
 * @return  A zycore status code.
 *
 * This function is internally used to improve performance while adding static strings or multiple
 * tokens at once.
 ','line_number':207,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':245,'multiline':True]['text':' General                                                                                        ','line_number':246,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':247,'multiline':True]['text':'*
 * @brief   Returns the size to be used as explicit size suffix (`AT&T`) or explicit typecast
 *          (`INTEL`), if required.
 *
 * @param   formatter   A pointer to the `ZydisFormatter` instance.
 * @param   context     A pointer to the `ZydisFormatterContext` struct.
 * @param   memop_id    The operand-id of the instructions first memory operand.
 *
 * @return  Returns the explicit size, if required, or `0`, if not needed.
 *
 * This function always returns a size different to `0`, if the `ZYDIS_FORMATTER_PROP_FORCE_SIZE`
 * is set to `ZYAN_TRUE`.
 ','line_number':249,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':265,'multiline':True]['text':' ============================================================================================== ','line_number':267,'multiline':True]['text':' Formatter functions                                                                            ','line_number':268,'multiline':True]['text':' ============================================================================================== ','line_number':269,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':271,'multiline':True]['text':' Operands                                                                                       ','line_number':272,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':273,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':284,'multiline':True]['text':' Elemental tokens                                                                               ','line_number':285,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':286,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':297,'multiline':True]['text':' Optional tokens                                                                                ','line_number':298,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':299,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':310,'multiline':True]['text':' ============================================================================================== ','line_number':312,'multiline':True]['text':' ZYDIS_FORMATTER_BASE_H','line_number':318,'multiline':False]