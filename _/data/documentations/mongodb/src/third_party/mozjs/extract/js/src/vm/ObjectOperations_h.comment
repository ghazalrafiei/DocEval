['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Fundamental operations on objects. ','line_number':7,'multiline':True]['text':' MOZ_ALWAYS_INLINE','line_number':12,'multiline':False]['text':' uint32_t','line_number':15,'multiline':False]['text':' JSPROP_ENUMERATE, JS::PropertyDescriptor','line_number':17,'multiline':False]['text':' JS::ObjectOpResult','line_number':19,'multiline':False]['text':' INT_TO_JSID, jsid, JSID_INT_MAX, SYMBOL_TO_JSID','line_number':20,'multiline':False]['text':' JS::Handle, JS::MutableHandle, JS::Rooted','line_number':21,'multiline':False]['text':' JS::Value','line_number':22,'multiline':False]['text':' JSContext','line_number':23,'multiline':False]['text':' JSObject','line_number':24,'multiline':False]['text':' js::NameToId','line_number':25,'multiline':False]['text':' JS::Symbol','line_number':26,'multiline':False]['text':' The functions below are the fundamental operations on objects. See the','line_number':32,'multiline':False]['text':' comment about "Standard internal methods" in jsapi.h.','line_number':33,'multiline':False]['text':'
 * ES6 [[GetPrototypeOf]]. Get obj's prototype, storing it in protop.
 *
 * If obj is definitely not a proxy, the infallible obj->getProto() can be used
 * instead. See the comment on JSObject::getTaggedProto().
 ','line_number':35,'multiline':True]['text':'
 * ES6 [[SetPrototypeOf]]. Change obj's prototype to proto.
 *
 * Returns false on error, success of operation in *result. For example, if
 * obj is not extensible, its prototype is fixed. js::SetPrototype will return
 * true, because no exception is thrown for this; but *result will be false.
 ','line_number':44,'multiline':True]['text':' Convenience function: like the above, but throw on failure. ','line_number':55,'multiline':True]['text':'
 * ES6 [[IsExtensible]]. Extensible objects can have new properties defined on
 * them. Inextensible objects can't, and their [[Prototype]] slot is fixed as
 * well.
 ','line_number':59,'multiline':True]['text':'
 * ES6 [[PreventExtensions]]. Attempt to change the [[Extensible]] bit on |obj|
 * to false.  Indicate success or failure through the |result| outparam, or
 * actual error through the return value.
 ','line_number':67,'multiline':True]['text':' Convenience function. As above, but throw on failure. ','line_number':75,'multiline':True]['text':'
 * ES6 [[GetOwnProperty]]. Get a description of one of obj's own properties.
 *
 * If no such property exists on obj, desc will be Nothing().
 ','line_number':78,'multiline':True]['text':' ES6 [[DefineOwnProperty]]. Define a property on obj. ','line_number':87,'multiline':True]['text':'
 * When the 'result' out-param is omitted, the behavior is the same as above,
 * except that any failure results in a TypeError.
 ','line_number':93,'multiline':True]['text':'
 * ES6 [[Has]]. Set *foundp to true if `id in obj` (that is, if obj has an own
 * or inherited property obj[id]), false otherwise.
 ','line_number':129,'multiline':True]['text':'
 * ES6 [[Get]]. Get the value of the property `obj[id]`, or undefined if no
 * such property exists.
 *
 * Typically obj == receiver; if obj != receiver then the caller is most likely
 * a proxy using GetProperty to finish a property get that started out as
 * `receiver[id]`, and we've already searched the prototype chain up to `obj`.
 ','line_number':139,'multiline':True]['text':' Returns whether |obj| or an object on its proto chain may have an interesting','line_number':182,'multiline':False]['text':' symbol property (see JSObject::hasInterestingSymbolProperty). If it returns','line_number':183,'multiline':False]['text':' true, *holder is set to the object that may have this property.','line_number':184,'multiline':False]['text':' Like GetProperty but optimized for interesting symbol properties like','line_number':189,'multiline':False]['text':' @@toStringTag.','line_number':190,'multiline':False]['text':'
 * ES6 [[Set]]. Carry out the assignment `obj[id] = v`.
 *
 * The `receiver` argument has to do with how [[Set]] interacts with the
 * prototype chain and proxies. It's hard to explain and ES6 doesn't really
 * try. Long story short, if you just want bog-standard assignment, pass
 * `ObjectValue(*obj)` as receiver. Or better, use one of the signatures that
 * doesn't have a receiver parameter.
 *
 * Callers pass obj != receiver e.g. when a proxy is involved, obj is the
 * proxy's target, and the proxy is using SetProperty to finish an assignment
 * that started out as `receiver[id] = v`, by delegating it to obj.
 ','line_number':195,'multiline':True]['text':'
 * ES6 draft rev 31 (15 Jan 2015) 7.3.3 Put (O, P, V, Throw), except that on
 * success, the spec says this is supposed to return a boolean value, which we
 * don't bother doing.
 ','line_number':228,'multiline':True]['text':'
 * ES6 [[Delete]]. Equivalent to the JS code `delete obj[id]`.
 ','line_number':237,'multiline':True]['text':'** SpiderMonkey nonstandard internal methods *****************************','line_number':246,'multiline':True]['text':'*
 * If |obj| (underneath any functionally-transparent wrapper proxies) has as
 * its [[GetPrototypeOf]] trap the ordinary [[GetPrototypeOf]] behavior defined
 * for ordinary objects, set |*isOrdinary = true| and store |obj|'s prototype
 * in |result|.  Otherwise set |*isOrdinary = false|.  In case of error, both
 * outparams have unspecified value.
 ','line_number':248,'multiline':True]['text':'
 * Attempt to make |obj|'s [[Prototype]] immutable, such that subsequently
 * trying to change it will not work.  If an internal error occurred,
 * returns false.  Otherwise, |*succeeded| is set to true iff |obj|'s
 * [[Prototype]] is now immutable.
 ','line_number':259,'multiline':True]['text':'
 * Deprecated. Finds a PropertyDescriptor somewhere along the prototype chain,
 * similar to GetOwnPropertyDescriptor. |holder| indicates on which object the
 * property was found.
 ','line_number':268,'multiline':True]['text':'
 * Deprecated. A version of HasProperty that also returns the object on which
 * the property was found (but that information is unreliable for proxies), and
 * the Shape of the property, if native.
 ','line_number':278,'multiline':True]['text':' Set *result to tell whether obj has an own property with the given id. ','line_number':296,'multiline':True]['text':' namespace js ','line_number':300,'multiline':True]['text':' vm_ObjectOperations_h ','line_number':302,'multiline':True]