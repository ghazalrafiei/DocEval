['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Implementation of JS FinalizationRegistry objects.','line_number':7,'multiline':False]['text':' js::GetErrorMessage, JSMSG_*','line_number':14,'multiline':False]['text':' js::PlainObject','line_number':16,'multiline':False]['text':' js_*_str','line_number':17,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':24,'multiline':False]['text':' FinalizationRecordObject','line_number':25,'multiline':False]['text':' static ','line_number':30,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':71,'multiline':False]['text':' FinalizationRegistrationsObject','line_number':72,'multiline':False]['text':' addProperty','line_number':80,'multiline':False]['text':' delProperty','line_number':81,'multiline':False]['text':' enumerate','line_number':82,'multiline':False]['text':' newEnumerate','line_number':83,'multiline':False]['text':' resolve','line_number':84,'multiline':False]['text':' mayResolve','line_number':85,'multiline':False]['text':' finalize','line_number':86,'multiline':False]['text':' call','line_number':87,'multiline':False]['text':' hasInstance','line_number':88,'multiline':False]['text':' construct','line_number':89,'multiline':False]['text':' trace','line_number':90,'multiline':False]['text':' static ','line_number':93,'multiline':True]['text':' static ','line_number':113,'multiline':True]['text':' static ','line_number':126,'multiline':True]['text':'/////////////////////////////////////////////////////////////////////////','line_number':174,'multiline':False]['text':' FinalizationRegistryObject','line_number':175,'multiline':False]['text':' Bug 1600300: FinalizationRegistryObject is foreground finalized so that','line_number':177,'multiline':False]['text':' HeapPtr destructors never see referents with released arenas. When this is','line_number':178,'multiline':False]['text':' fixed we may be able to make this background finalized again.','line_number':179,'multiline':False]['text':' addProperty','line_number':192,'multiline':False]['text':' delProperty','line_number':193,'multiline':False]['text':' enumerate','line_number':194,'multiline':False]['text':' newEnumerate','line_number':195,'multiline':False]['text':' resolve','line_number':196,'multiline':False]['text':' mayResolve','line_number':197,'multiline':False]['text':' finalize','line_number':198,'multiline':False]['text':' call','line_number':199,'multiline':False]['text':' hasInstance','line_number':200,'multiline':False]['text':' construct','line_number':201,'multiline':False]['text':' trace','line_number':202,'multiline':False]['text':' static ','line_number':222,'multiline':True]['text':' static ','line_number':275,'multiline':True]['text':' Trace the registrations weak map. At most this traces the','line_number':279,'multiline':False]['text':' FinalizationRegistrationsObject values of the map; the contents of those','line_number':280,'multiline':False]['text':' objects are weakly held and are not traced.','line_number':281,'multiline':False]['text':' Sweep the contents of the registrations weak map's values.','line_number':288,'multiline':False]['text':' static ','line_number':301,'multiline':True]['text':' The queue's flag should have been updated by','line_number':305,'multiline':False]['text':' GCRuntime::sweepFinalizationRegistries.','line_number':306,'multiline':False]['text':' FinalizationRegistry.prototype.register(target, heldValue [, unregisterToken','line_number':329,'multiline':False]['text':' ])','line_number':330,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-finalization-registry.prototype.register','line_number':331,'multiline':False]['text':' static ','line_number':332,'multiline':True]['text':' 1. Let finalizationRegistry be the this value.','line_number':337,'multiline':False]['text':' 2. If Type(finalizationRegistry) is not Object, throw a TypeError','line_number':338,'multiline':False]['text':' exception.','line_number':339,'multiline':False]['text':' 3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a','line_number':340,'multiline':False]['text':' TypeError exception.','line_number':341,'multiline':False]['text':' 4. If Type(target) is not Object, throw a TypeError exception.','line_number':353,'multiline':False]['text':' 5. If SameValue(target, heldValue), throw a TypeError exception.','line_number':363,'multiline':False]['text':' 6. If Type(unregisterToken) is not Object,','line_number':372,'multiline':False]['text':'    a. If unregisterToken is not undefined, throw a TypeError exception.','line_number':373,'multiline':False]['text':' Create the finalization record representing this target and heldValue.','line_number':386,'multiline':False]['text':' Add the record to the registrations if an unregister token was supplied.','line_number':394,'multiline':False]['text':' Fully unwrap the target to pass it to the GC.','line_number':406,'multiline':False]['text':' If the target is a DOM wrapper, preserve it.','line_number':414,'multiline':False]['text':' Wrap the record into the compartment of the target.','line_number':419,'multiline':False]['text':' Register the record with the target.','line_number':431,'multiline':False]['text':' static ','line_number':443,'multiline':True]['text':' static ','line_number':455,'multiline':True]['text':' Add the record to the list of records associated with this unregister','line_number':459,'multiline':False]['text':' token.','line_number':460,'multiline':False]['text':' static ','line_number':485,'multiline':True]['text':' Remove a registration if something went wrong before we added it to the','line_number':488,'multiline':False]['text':' target zone's map. Note that this can't remove a registration after that','line_number':489,'multiline':False]['text':' point.','line_number':490,'multiline':False]['text':' FinalizationRegistry.prototype.unregister ( unregisterToken )','line_number':507,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-finalization-registry.prototype.unregister','line_number':508,'multiline':False]['text':' static ','line_number':509,'multiline':True]['text':' 1. Let finalizationRegistry be the this value.','line_number':514,'multiline':False]['text':' 2. If Type(finalizationRegistry) is not Object, throw a TypeError','line_number':515,'multiline':False]['text':'    exception.','line_number':516,'multiline':False]['text':' 3. If finalizationRegistry does not have a [[Cells]] internal slot, throw a','line_number':517,'multiline':False]['text':'    TypeError exception.','line_number':518,'multiline':False]['text':' 4. If Type(unregisterToken) is not Object, throw a TypeError exception.','line_number':530,'multiline':False]['text':' 5. Let removed be false.','line_number':540,'multiline':False]['text':' 6. For each Record { [[Target]], [[HeldValue]], [[UnregisterToken]] } cell','line_number':543,'multiline':False]['text':'    that is an element of finalizationRegistry.[[Cells]], do','line_number':544,'multiline':False]['text':'    a. If SameValue(cell.[[UnregisterToken]], unregisterToken) is true, then','line_number':545,'multiline':False]['text':'       i. Remove cell from finalizationRegistry.[[Cells]].','line_number':546,'multiline':False]['text':'       ii. Set removed to true.','line_number':547,'multiline':False]['text':' 7. Return removed.','line_number':562,'multiline':False]['text':' static ','line_number':567,'multiline':True]['text':' Clear the fields of this record; it will be removed from the target's','line_number':574,'multiline':False]['text':' list when it is next swept.','line_number':575,'multiline':False]['text':' FinalizationRegistry.prototype.cleanupSome ( [ callback ] )','line_number':580,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-finalization-registry.prototype.cleanupSome','line_number':581,'multiline':False]['text':' 1. Let finalizationRegistry be the this value.','line_number':586,'multiline':False]['text':' 2. Perform ? RequireInternalSlot(finalizationRegistry, [[Cells]]).','line_number':587,'multiline':False]['text':' 3. If callback is not undefined and IsCallable(callback) is false, throw a','line_number':599,'multiline':False]['text':'    TypeError exception.','line_number':600,'multiline':False]['text':'/////////////////////////////////////////////////////////////////////////','line_number':619,'multiline':False]['text':' FinalizationQueueObject','line_number':620,'multiline':False]['text':' Bug 1600300: FinalizationQueueObject is foreground finalized so that','line_number':622,'multiline':False]['text':' HeapPtr destructors never see referents with released arenas. When this is','line_number':623,'multiline':False]['text':' fixed we may be able to make this background finalized again.','line_number':624,'multiline':False]['text':' addProperty','line_number':631,'multiline':False]['text':' delProperty','line_number':632,'multiline':False]['text':' enumerate','line_number':633,'multiline':False]['text':' newEnumerate','line_number':634,'multiline':False]['text':' resolve','line_number':635,'multiline':False]['text':' mayResolve','line_number':636,'multiline':False]['text':' finalize','line_number':637,'multiline':False]['text':' call','line_number':638,'multiline':False]['text':' hasInstance','line_number':639,'multiline':False]['text':' construct','line_number':640,'multiline':False]['text':' trace','line_number':641,'multiline':False]['text':' static ','line_number':644,'multiline':True]['text':' It's problematic storing a CCW to a global in another compartment because','line_number':663,'multiline':False]['text':' you don't know how far to unwrap it to get the original object','line_number':664,'multiline':False]['text':' back. Instead store a CCW to a plain object in the same compartment as the','line_number':665,'multiline':False]['text':' global (this uses Object.prototype).','line_number':666,'multiline':False]['text':' static ','line_number':694,'multiline':True]['text':' static ','line_number':703,'multiline':True]['text':' Suppress our assertions about touching grey things. It's OK for us to set a','line_number':714,'multiline':False]['text':' boolean slot even if this object is gray.','line_number':715,'multiline':False]['text':' static ','line_number':775,'multiline':True]['text':' CleanupFinalizationRegistry ( finalizationRegistry [ , callback ] )','line_number':790,'multiline':False]['text':' https://tc39.es/proposal-weakrefs/#sec-cleanup-finalization-registry','line_number':791,'multiline':False]['text':' static ','line_number':792,'multiline':True]['text':' 2. If callback is undefined, set callback to','line_number':798,'multiline':False]['text':'    finalizationRegistry.[[CleanupCallback]].','line_number':799,'multiline':False]['text':' 3. While finalizationRegistry.[[Cells]] contains a Record cell such that','line_number':809,'multiline':False]['text':'    cell.[[WeakRefTarget]] is empty, then an implementation may perform the','line_number':810,'multiline':False]['text':'    following steps,','line_number':811,'multiline':False]['text':'    a. Choose any such cell.','line_number':812,'multiline':False]['text':'    b. Remove cell from finalizationRegistry.[[Cells]].','line_number':813,'multiline':False]['text':'    c. Perform ? Call(callback, undefined, « cell.[[HeldValue]] »).','line_number':814,'multiline':False]['text':' Skip over records that have been unregistered.','line_number':822,'multiline':False]