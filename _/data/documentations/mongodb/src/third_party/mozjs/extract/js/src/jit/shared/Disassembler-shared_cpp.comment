['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Concurrent assemblers are disambiguated by prefixing every disassembly with a','line_number':18,'multiline':False]['text':' tag that is quasi-unique, and certainly unique enough in realistic cases','line_number':19,'multiline':False]['text':' where we are debugging and looking at disassembler output.  The tag is a','line_number':20,'multiline':False]['text':' letter or digit between brackets prefixing the disassembly, eg, [X]. This','line_number':21,'multiline':False]['text':' wraps around every 62 assemblers.','line_number':22,'multiline':False]['text':'','line_number':23,'multiline':False]['text':' When running with --no-threads we can still have concurrent assemblers in the','line_number':24,'multiline':False]['text':' form of nested assemblers, as when an IC stub is created by one assembler','line_number':25,'multiline':False]['text':' while a JS compilation is going on and producing output in another assembler.','line_number':26,'multiline':False]['text':'','line_number':27,'multiline':False]['text':' We generate the tag for an assembler by incrementing a global mod-2^32','line_number':28,'multiline':False]['text':' counter every time a new disassembler is created.','line_number':29,'multiline':False]['text':' Note, internalResolve will sometimes return 0 when it is triggered by the','line_number':182,'multiline':False]['text':' profiler and not by a full disassembly, since in that case a label can be','line_number':183,'multiline':False]['text':' used or bound but not previously have been defined.  In that case,','line_number':184,'multiline':False]['text':' internalResolve(l) will not necessarily create a binding for l!','line_number':185,'multiline':False]['text':' Consequently a subsequent lookup(l) may still return null.','line_number':186,'multiline':False]['text':' We do not require that there is a node matching the key.','line_number':227,'multiline':False]