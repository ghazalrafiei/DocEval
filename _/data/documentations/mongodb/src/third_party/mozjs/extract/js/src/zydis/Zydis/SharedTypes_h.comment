['text':'**************************************************************************************************

  Zyan Disassembler Library (Zydis)

  Original Author : Florian Bernd

 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.

**************************************************************************************************','line_number':1,'multiline':True]['text':'*
 * @file
 * @brief   Defines decoder/encoder-shared macros and types.
 ','line_number':27,'multiline':True]['text':' ============================================================================================== ','line_number':41,'multiline':True]['text':' Macros                                                                                         ','line_number':42,'multiline':True]['text':' ============================================================================================== ','line_number':43,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':45,'multiline':True]['text':' Constants                                                                                      ','line_number':46,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':47,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':52,'multiline':True]['text':' ============================================================================================== ','line_number':54,'multiline':True]['text':' Enums and types                                                                                ','line_number':55,'multiline':True]['text':' ============================================================================================== ','line_number':56,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':58,'multiline':True]['text':' Machine mode                                                                                   ','line_number':59,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':60,'multiline':True]['text':'*
 * @brief   Defines the `ZydisMachineMode` enum.
 ','line_number':62,'multiline':True]['text':'*
     * @brief 64 bit mode.
     ','line_number':67,'multiline':True]['text':'*
     * @brief 32 bit protected mode.
     ','line_number':71,'multiline':True]['text':'*
     * @brief 16 bit protected mode.
     ','line_number':75,'multiline':True]['text':'*
     * @brief 32 bit protected mode.
     ','line_number':79,'multiline':True]['text':'*
     * @brief 16 bit protected mode.
     ','line_number':83,'multiline':True]['text':'*
     * @brief 16 bit real mode.
     ','line_number':87,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':92,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':96,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':102,'multiline':True]['text':' Address width                                                                                  ','line_number':103,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':104,'multiline':True]['text':'*
 * @brief   Defines the `ZydisAddressWidth` enum.
 ','line_number':106,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':115,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':119,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':125,'multiline':True]['text':' Element type                                                                                   ','line_number':126,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':127,'multiline':True]['text':'*
 * @brief   Defines the `ZydisElementType` enum.
 ','line_number':129,'multiline':True]['text':'*
     * @brief   A struct type.
     ','line_number':135,'multiline':True]['text':'*
     * @brief   Unsigned integer value.
     ','line_number':139,'multiline':True]['text':'*
     * @brief   Signed integer value.
     ','line_number':143,'multiline':True]['text':'*
     * @brief   16-bit floating point value (`half`).
     ','line_number':147,'multiline':True]['text':'*
     * @brief   32-bit floating point value (`single`).
     ','line_number':151,'multiline':True]['text':'*
     * @brief   64-bit floating point value (`double`).
     ','line_number':155,'multiline':True]['text':'*
     * @brief   80-bit floating point value (`extended`).
     ','line_number':159,'multiline':True]['text':'*
     * @brief   Binary coded decimal value.
     ','line_number':163,'multiline':True]['text':'*
     * @brief   A condition code (e.g. used by `CMPPD`, `VCMPPD`, ...).
     ','line_number':167,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':172,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':176,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':182,'multiline':True]['text':' Element size                                                                                   ','line_number':183,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':184,'multiline':True]['text':'*
 * @brief   Defines the `ZydisElementSize` datatype.
 ','line_number':186,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':191,'multiline':True]['text':' Operand type                                                                                   ','line_number':192,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':193,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOperandType` enum.
 ','line_number':195,'multiline':True]['text':'*
     * @brief   The operand is not used.
     ','line_number':200,'multiline':True]['text':'*
     * @brief   The operand is a register operand.
     ','line_number':204,'multiline':True]['text':'*
     * @brief   The operand is a memory operand.
     ','line_number':208,'multiline':True]['text':'*
     * @brief   The operand is a pointer operand with a segment:offset lvalue.
     ','line_number':212,'multiline':True]['text':'*
     * @brief   The operand is an immediate operand.
     ','line_number':216,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':221,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':225,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':231,'multiline':True]['text':' Operand encoding                                                                               ','line_number':232,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':233,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOperandEncoding` enum.
 ','line_number':235,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':276,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':280,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':286,'multiline':True]['text':' Operand visibility                                                                             ','line_number':287,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':288,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOperandVisibility` enum.
 ','line_number':290,'multiline':True]['text':'*
     * @brief   The operand is explicitly encoded in the instruction.
     ','line_number':296,'multiline':True]['text':'*
     * @brief   The operand is part of the opcode, but listed as an operand.
     ','line_number':300,'multiline':True]['text':'*
     * @brief   The operand is part of the opcode, and not typically listed as an operand.
     ','line_number':304,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':309,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':313,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':320,'multiline':True]['text':' Operand action                                                                                 ','line_number':321,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':322,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOperandAction` enum.
 ','line_number':324,'multiline':True]['text':' ------------------------------------------------------------------------------------------ ','line_number':329,'multiline':True]['text':' Elemental actions                                                                          ','line_number':330,'multiline':True]['text':' ------------------------------------------------------------------------------------------ ','line_number':331,'multiline':True]['text':'*
     * @brief   The operand is read by the instruction.
     ','line_number':333,'multiline':True]['text':'*
     * @brief   The operand is written by the instruction (must write).
     ','line_number':337,'multiline':True]['text':'*
     * @brief   The operand is conditionally read by the instruction.
     ','line_number':341,'multiline':True]['text':'*
     * @brief   The operand is conditionally written by the instruction (may write).
     ','line_number':345,'multiline':True]['text':' ------------------------------------------------------------------------------------------ ','line_number':350,'multiline':True]['text':' Combined actions                                                                           ','line_number':351,'multiline':True]['text':' ------------------------------------------------------------------------------------------ ','line_number':352,'multiline':True]['text':'*
     * @brief   The operand is read (must read) and written by the instruction (must write).
     ','line_number':354,'multiline':True]['text':'*
     * @brief   The operand is conditionally read (may read) and conditionally written by the
     *          instruction (may write).
     ','line_number':358,'multiline':True]['text':'*
     * @brief   The operand is read (must read) and conditionally written by the instruction
     *          (may write).
     ','line_number':364,'multiline':True]['text':'*
     * @brief   The operand is written (must write) and conditionally read by the instruction
     *          (may read).
     ','line_number':370,'multiline':True]['text':'*
     * @brief   Mask combining all reading access flags.
     ','line_number':377,'multiline':True]['text':'*
     * @brief   Mask combining all writing access flags.
     ','line_number':381,'multiline':True]['text':' ------------------------------------------------------------------------------------------ ','line_number':386,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this bitset.
     ','line_number':388,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOperandActions` data-type.
 ','line_number':394,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':399,'multiline':True]['text':' Instruction encoding                                                                           ','line_number':400,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':401,'multiline':True]['text':'*
 * @brief   Defines the `ZydisInstructionEncoding` enum.
 ','line_number':403,'multiline':True]['text':'*
     * @brief   The instruction uses the legacy encoding.
     ','line_number':408,'multiline':True]['text':'*
     * @brief   The instruction uses the AMD 3DNow-encoding.
     ','line_number':412,'multiline':True]['text':'*
     * @brief   The instruction uses the AMD XOP-encoding.
     ','line_number':416,'multiline':True]['text':'*
     * @brief   The instruction uses the VEX-encoding.
     ','line_number':420,'multiline':True]['text':'*
     * @brief   The instruction uses the EVEX-encoding.
     ','line_number':424,'multiline':True]['text':'*
     * @brief   The instruction uses the MVEX-encoding.
     ','line_number':428,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':433,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':437,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':444,'multiline':True]['text':' Opcode map                                                                                     ','line_number':445,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':446,'multiline':True]['text':'*
 * @brief   Defines the `ZydisOpcodeMap` enum.
 ','line_number':448,'multiline':True]['text':'*
     * @brief   Maximum value of this enum.
     ','line_number':462,'multiline':True]['text':'*
     * @brief   The minimum number of bits required to represent all values of this enum.
     ','line_number':466,'multiline':True]['text':' ---------------------------------------------------------------------------------------------- ','line_number':472,'multiline':True]['text':' ============================================================================================== ','line_number':474,'multiline':True]['text':' ZYDIS_SHAREDTYPES_H ','line_number':480,'multiline':True]