['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Class ReadableStream. ','line_number':7,'multiline':True]['text':' MOZ_ASSERT{,_IF}','line_number':12,'multiline':False]['text':' uint32_t','line_number':14,'multiline':False]['text':' JS_PUBLIC_API','line_number':16,'multiline':False]['text':' JSClass, js::ClassSpec','line_number':17,'multiline':False]['text':' JS::Handle','line_number':18,'multiline':False]['text':' JS::ReadableStream{Mode,UnderlyingSource}','line_number':19,'multiline':False]['text':' JS::Int32Value, JS::ObjectValue, JS::UndefinedValue','line_number':20,'multiline':False]['text':' js::NativeObject','line_number':21,'multiline':False]['text':'*
   * Memory layout of Stream instances.
   *
   * See https://streams.spec.whatwg.org/#rs-internal-slots for details on
   * the stored state. [[state]] and [[disturbed]] are stored in
   * StreamSlot_State as ReadableStream::State enum values.
   *
   * Of the stored values, Reader and StoredError might be cross-compartment
   * wrappers. This can happen if the Reader was created by applying a
   * different compartment's ReadableStream.prototype.getReader method.
   *
   * A stream's associated controller is always created from under the
   * stream's constructor and thus cannot be in a different compartment.
   ','line_number':31,'multiline':True]['text':' namespace js','line_number':136,'multiline':False]['text':' builtin_streams_ReadableStream_h','line_number':138,'multiline':False]