['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- ','line_number':1,'multiline':True]['text':' vim: set ts=8 sts=2 et sw=2 tw=80: ','line_number':2,'multiline':True]['text':' This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':3,'multiline':True]['text':'
 * Provides a common interface to the ASan (AddressSanitizer) and Valgrind
 * functions used to mark memory in certain ways. In detail, the following
 * three macros are provided:
 *
 *   MOZ_MAKE_MEM_NOACCESS  - Mark memory as unsafe to access (e.g. freed)
 *   MOZ_MAKE_MEM_UNDEFINED - Mark memory as accessible, with content undefined
 *   MOZ_MAKE_MEM_DEFINED - Mark memory as accessible, with content defined
 *
 * With Valgrind in use, these directly map to the three respective Valgrind
 * macros. With ASan in use, the NOACCESS macro maps to poisoning the memory,
 * while the UNDEFINED/DEFINED macros unpoison memory.
 *
 * With no memory checker available, all macros expand to the empty statement.
 ','line_number':7,'multiline':True]['text':' In clang-cl based ASAN, we link against the memory poisoning functions','line_number':41,'multiline':False]['text':' statically.','line_number':42,'multiline':False]['text':' These definitions are usually provided through the
 * sanitizer/asan_interface.h header installed by ASan.
 ','line_number':49,'multiline':True]['text':'
 * These definitions are usually provided through the
 * sanitizer/lsan_interface.h header installed by LSan.
 ','line_number':66,'multiline':True]['text':' These definitions are usually provided through the
 * sanitizer/msan_interface.h header installed by MSan.
 ','line_number':78,'multiline':True]['text':'
 * MOZ_LSAN_INTENTIONAL_LEAK(X) is a macro to tell LeakSanitizer that X
 * points to a value that will intentionally never be deallocated during
 * the execution of the process.
 *
 * Additional uses of this macro should be reviewed by people
 * conversant in leak-checking and/or MFBT peers.
 ','line_number':113,'multiline':True]['text':' nothing ','line_number':124,'multiline':True]['text':' defined(MOZ_ASAN)','line_number':125,'multiline':False]['text':' mozilla_MemoryChecking_h ','line_number':127,'multiline':True]