['text':'
** This file is in the public domain, so clarified as of
** 1996-06-05 by Arthur David Olson.
','line_number':1,'multiline':True]['text':'
** Avoid the temptation to punt entirely to strftime;
** the output of strftime is supposed to be locale specific
** whereas the output of asctime is supposed to be constant.
','line_number':6,'multiline':True]['text':'LINTLIBRARY','line_number':12,'multiline':True]['text':'
** Some systems only handle "%.2d"; others only handle "%02d";
** "%02.2d" makes (most) everybody happy.
** At least some versions of gcc warn about the %02.2d;
** we conditionalize below to avoid the warning.
','line_number':17,'multiline':True]['text':'
** All years associated with 32-bit time_t values are exactly four digits long;
** some years associated with 64-bit time_t values are not.
** Vintage programs are coded for years that are always four digits long
** and may assume that the newline always lands in the same place.
** For years that are less than four digits, we pad the output with
** leading zeroes to get the newline in the traditional place.
** The -4 ensures that we get four characters of output even if
** we call a strftime variant that produces fewer characters for some years.
** The ISO C 1999 and POSIX 1003.1-2004 standards prohibit padding the year,
** but many implementations pad anyway; most likely the standards are buggy.
','line_number':23,'multiline':True]['text':' !defined __GNUC__ ','line_number':37,'multiline':True]['text':' !defined __GNUC__ ','line_number':39,'multiline':True]['text':'
** For years that are more than four digits we put extra spaces before the year
** so that code trying to overwrite the newline won't end up overwriting
** a digit within a year and truncating the year (operating on the assumption
** that no output is better than wrong output).
','line_number':40,'multiline':True]['text':' !defined __GNUC__ ','line_number':48,'multiline':True]['text':' !defined __GNUC__ ','line_number':50,'multiline':True]['text':'
** Big enough for something such as
** ??? ???-2147483648 -2147483648:-2147483648:-2147483648     -2147483648\n
** (two three-character abbreviations, five strings denoting integers,
** seven explicit spaces, two explicit colons, a newline,
** and a trailing ASCII nul).
** The values above are for systems where an int is 32 bits and are provided
** as an example; the define below calculates the maximum for the system at
** hand.
','line_number':53,'multiline':True]['text':'
** A la ISO/IEC 9945-1, ANSI/IEEE Std 1003.1, 2004 Edition.
','line_number':67,'multiline':True]['text':'
	** Use strftime's %Y to generate the year, to avoid overflow problems
	** when computing timeptr->tm_year + TM_YEAR_BASE.
	** Assume that strftime is unaffected by other out-of-range members
	** (e.g., timeptr->tm_mday) when processing "%Y".
	','line_number':96,'multiline':True]['text':'
	** We avoid using snprintf since it's not available on all systems.
	','line_number':103,'multiline':True]['text':' !defined EOVERFLOW ','line_number':117,'multiline':True]['text':' !defined EOVERFLOW ','line_number':119,'multiline':True]['text':'
** A la ISO/IEC 9945-1, ANSI/IEEE Std 1003.1, 2004 Edition.
','line_number':124,'multiline':True]