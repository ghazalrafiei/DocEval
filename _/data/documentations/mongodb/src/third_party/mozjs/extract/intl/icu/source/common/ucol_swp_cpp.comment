['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
*
*   Copyright (C) 2003-2015, International Business Machines
*   Corporation and others.  All Rights Reserved.
*
*******************************************************************************
*   file name:  ucol_swp.cpp
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2003sep10
*   created by: Markus W. Scherer
*
*   Swap collation binaries.
','line_number':3,'multiline':True]['text':' UDataInfo ','line_number':21,'multiline':True]['text':' swapping ----------------------------------------------------------------- ','line_number':29,'multiline':True]['text':' First check for format version 4+ which has a standard data header.','line_number':40,'multiline':False]['text':' dataFormat="UCol"','line_number':45,'multiline':False]['text':' Else check for format version 3.','line_number':53,'multiline':False]['text':'
     * The collation binary must contain at least the UCATableHeader,
     * starting with its size field.
     * sizeof(UCATableHeader)==42*4 in ICU 2.8
     * check the length against the header size before reading the size field
     ','line_number':56,'multiline':True]['text':'&&
        inHeader->formatVersion[1]>=0','line_number':73,'multiline':True]['text':' swap a header-less collation formatVersion=3 binary, inside a resource bundle or ucadata.icu ','line_number':88,'multiline':True]['text':' argument checking in case we were not called from ucol_swap() ','line_number':102,'multiline':True]['text':'
     * The collation binary must contain at least the UCATableHeader,
     * starting with its size field.
     * sizeof(UCATableHeader)==42*4 in ICU 2.8
     * check the length against the header size before reading the size field
     ','line_number':117,'multiline':True]['text':'&&
        inHeader->formatVersion[1]>=0','line_number':136,'multiline':True]['text':' copy everything, takes care of data that needs no swapping ','line_number':154,'multiline':True]['text':' swap the necessary pieces in the order of their occurrence in the data ','line_number':159,'multiline':True]['text':' read more of the UCATableHeader (the size field was read above) ','line_number':161,'multiline':True]['text':' swap the 32-bit integers in the header ','line_number':177,'multiline':True]['text':' set the output platform properties ','line_number':182,'multiline':True]['text':' swap the options ','line_number':186,'multiline':True]['text':' swap the expansions ','line_number':192,'multiline':True]['text':' expansions bounded by contractions ','line_number':195,'multiline':True]['text':' no contractions: expansions bounded by the main trie ','line_number':198,'multiline':True]['text':' swap the contractions ','line_number':205,'multiline':True]['text':' contractionIndex: UChar[] ','line_number':207,'multiline':True]['text':' contractionCEs: CEs[] ','line_number':211,'multiline':True]['text':' swap the main trie ','line_number':216,'multiline':True]['text':' swap the max expansion table ','line_number':223,'multiline':True]['text':' expansionCESize, unsafeCP, contrEndCP: uint8_t[], no need to swap ','line_number':229,'multiline':True]['text':' swap UCA constants ','line_number':231,'multiline':True]['text':'
             * if UCAConsts!=0 then contractionUCACombos because we are swapping
             * the UCA data file, and we know that the UCA contains contractions
             ','line_number':233,'multiline':True]['text':' swap UCA contractions ','line_number':241,'multiline':True]['text':' swap the script to lead bytes ','line_number':248,'multiline':True]['text':' each entry = 2 * uint16','line_number':250,'multiline':False]['text':' each entry = uint16','line_number':251,'multiline':False]['text':' swap the lead byte to scripts ','line_number':257,'multiline':True]['text':' each entry = uint16','line_number':259,'multiline':False]['text':' each entry = uint16','line_number':260,'multiline':False]['text':' swap formatVersion 4 or 5 ----------------------------------------------- ***','line_number':270,'multiline':False]['text':' The following are copied from CollationDataReader, trading an awkward copy of constants','line_number':272,'multiline':False]['text':' for an awkward relocation of the i18n collationdatareader.h file into the common library.','line_number':273,'multiline':False]['text':' Keep them in sync!','line_number':274,'multiline':False]['text':' 0','line_number':277,'multiline':False]['text':' 4','line_number':282,'multiline':False]['text':' 8','line_number':287,'multiline':False]['text':' 12','line_number':292,'multiline':False]['text':' 16','line_number':297,'multiline':False]['text':' Need at least IX_INDEXES_LENGTH and IX_OPTIONS.','line_number':315,'multiline':False]['text':' Make sure we do not accidentally use these instead of indexes[].','line_number':339,'multiline':False]['text':' Get the total length of the data.','line_number':341,'multiline':False]['text':' Copy the data for inaccessible bytes and arrays of bytes.','line_number':360,'multiline':False]['text':' Swap the int32_t indexes[].','line_number':365,'multiline':False]['text':' The following is a modified version of CollationDataReader::read().','line_number':368,'multiline':False]['text':' Here we use indexes[] not inIndexes[] because','line_number':369,'multiline':False]['text':' the inIndexes[] may not be in this machine's endianness.','line_number':370,'multiline':False]['text':' one of the indexes[] slots','line_number':371,'multiline':False]['text':' byte offset for the index part','line_number':372,'multiline':False]['text':' int32_t length;  // number of bytes in the index part','line_number':373,'multiline':False]['text':' Skip the IX_REORDER_TABLE_OFFSET byte array.','line_number':382,'multiline':False]['text':' Skip the  IX_COMPRESSIBLE_BYTES_OFFSET byte array.','line_number':458,'multiline':False]['text':' namespace','line_number':472,'multiline':False]['text':' swap ICU collation data like ucadata.icu ','line_number':474,'multiline':True]['text':' udata_swapDataHeader checks the arguments ','line_number':481,'multiline':True]['text':' Try to swap the old format version which did not have a standard data header.','line_number':484,'multiline':False]['text':' check data format and format version ','line_number':489,'multiline':True]['text':' dataFormat="UCol"','line_number':492,'multiline':False]['text':' swap inverse UCA collation data (invuca.icu) ','line_number':523,'multiline':True]['text':' udata_swapDataHeader checks the arguments ','line_number':538,'multiline':True]['text':' check data format and format version ','line_number':544,'multiline':True]['text':' dataFormat="InvC" ','line_number':547,'multiline':True]['text':'
     * The inverse UCA collation binary must contain at least the InverseUCATableHeader,
     * starting with its size field.
     * sizeof(UCATableHeader)==8*4 in ICU 2.8
     * check the length against the header size before reading the size field
     ','line_number':568,'multiline':True]['text':' copy everything, takes care of data that needs no swapping ','line_number':587,'multiline':True]['text':' swap the necessary pieces in the order of their occurrence in the data ','line_number':592,'multiline':True]['text':' read more of the InverseUCATableHeader (the byteSize field was read above) ','line_number':594,'multiline':True]['text':' swap the 32-bit integers in the header ','line_number':600,'multiline':True]['text':' swap the inverse table; tableSize counts uint32_t[3] rows ','line_number':603,'multiline':True]['text':' swap the continuation table; contsSize counts UChars ','line_number':607,'multiline':True]['text':' #if !UCONFIG_NO_COLLATION ','line_number':615,'multiline':True]