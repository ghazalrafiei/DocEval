['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sw=2 et tw=80:
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Key                       Header text ','line_number':28,'multiline':True]['text':' namespace gc','line_number':78,'multiline':False]['text':' namespace jit','line_number':82,'multiline':False]['text':' Amount of data moved to the tenured generation during collection.','line_number':115,'multiline':False]['text':' Number of cells moved to the tenured generation.','line_number':117,'multiline':False]['text':' These lists are threaded through the Nursery using the space from','line_number':120,'multiline':False]['text':' already moved things. The lists are used to fix up the moved things and','line_number':121,'multiline':False]['text':' to find things held live by intra-Nursery pointers.','line_number':122,'multiline':False]['text':' The store buffers need to be able to call these directly.','line_number':148,'multiline':False]['text':' Classes with JSCLASS_SKIP_NURSERY_FINALIZE or Wrapper classes with','line_number':180,'multiline':False]['text':' CROSS_COMPARTMENT flags will not have their finalizer called if they are','line_number':181,'multiline':False]['text':' nursery allocated and not promoted to the tenured heap. The finalizers for','line_number':182,'multiline':False]['text':' these classes must do nothing except free data which was allocated via','line_number':183,'multiline':False]['text':' Nursery::allocateBuffer.','line_number':184,'multiline':False]['text':' Number of allocated (ready to use) chunks.','line_number':203,'multiline':False]['text':' Total number of chunks and the capacity of the nursery. Chunks will be','line_number':206,'multiline':False]['text':' lazilly allocated and added to the chunks array up to this limit, after','line_number':207,'multiline':False]['text':' that the nursery must be collected, this limit may be raised during','line_number':208,'multiline':False]['text':' collection.','line_number':209,'multiline':False]['text':' Return true if no allocations have been made since the last collection.','line_number':227,'multiline':False]['text':' Check whether an arbitrary pointer is within the nursery. This is','line_number':230,'multiline':False]['text':' slower than IsInsideNursery(Cell*), but works on all types of pointers.','line_number':231,'multiline':False]['text':' Allocate and return a pointer to a new GC object with its |slots|','line_number':245,'multiline':False]['text':' pointer pre-filled. Returns nullptr if the Nursery is full.','line_number':246,'multiline':False]['text':' Allocate and return a pointer to a new GC thing. Returns nullptr if the','line_number':250,'multiline':False]['text':' Nursery is full.','line_number':251,'multiline':False]['text':' Allocate a buffer for a given zone, using the nursery if possible.','line_number':263,'multiline':False]['text':' Allocate a buffer for a given object, using the nursery if possible and','line_number':266,'multiline':False]['text':' obj is in the nursery.','line_number':267,'multiline':False]['text':' Allocate a buffer for a given object, always using the nursery if obj is','line_number':270,'multiline':False]['text':' in the nursery. The requested size must be less than or equal to','line_number':271,'multiline':False]['text':' MaxNurseryBufferSize.','line_number':272,'multiline':False]['text':' Allocate a zero-initialized buffer for a given zone, using the nursery if','line_number':275,'multiline':False]['text':' possible. If the buffer isn't allocated in the nursery, the given arena is','line_number':276,'multiline':False]['text':' used.','line_number':277,'multiline':False]['text':' Allocate a zero-initialized buffer for a given object, using the nursery if','line_number':281,'multiline':False]['text':' possible and obj is in the nursery. If the buffer isn't allocated in the','line_number':282,'multiline':False]['text':' nursery, the given arena is used.','line_number':283,'multiline':False]['text':' Resize an existing buffer.','line_number':287,'multiline':False]['text':' Allocate a digits buffer for a given BigInt, using the nursery if possible','line_number':291,'multiline':False]['text':' and |bi| is in the nursery.','line_number':292,'multiline':False]['text':' Free an object buffer.','line_number':295,'multiline':False]['text':' The maximum number of bytes allowed to reside in nursery buffers.','line_number':298,'multiline':False]['text':' Do a minor collection.','line_number':301,'multiline':False]['text':' If the thing at |*ref| in the Nursery has been forwarded, set |*ref| to','line_number':304,'multiline':False]['text':' the new location and return true. Otherwise return false and leave','line_number':305,'multiline':False]['text':' |*ref| unset.','line_number':306,'multiline':False]['text':' Forward a slots/elements pointer stored in an Ion frame.','line_number':310,'multiline':False]['text':' Register a malloced buffer that is held by a nursery object, which','line_number':318,'multiline':False]['text':' should be freed at the end of a minor GC. Buffers are unregistered when','line_number':319,'multiline':False]['text':' their owning objects are tenured.','line_number':320,'multiline':False]['text':' Mark a malloced buffer as no longer needing to be freed.','line_number':323,'multiline':False]['text':' Mark a malloced buffer as no longer needing to be freed during minor','line_number':332,'multiline':False]['text':' GC. There's no need to account for the size here since all remaining','line_number':333,'multiline':False]['text':' buffers will soon be freed.','line_number':334,'multiline':False]['text':' The number of bytes from the start position to the end of the nursery.','line_number':356,'multiline':False]['text':' pass maxChunkCount(), allocatedChunkCount() or chunkCountLimit()','line_number':357,'multiline':False]['text':' to calculate the nursery size, current lazy-allocated size or nursery','line_number':358,'multiline':False]['text':' limit respectively.','line_number':359,'multiline':False]['text':' Used and free space both include chunk headers for that part of the','line_number':365,'multiline':False]['text':' nursery.','line_number':366,'multiline':False]['text':'','line_number':367,'multiline':False]['text':' usedSpace() + freeSpace() == capacity()','line_number':368,'multiline':False]['text':'','line_number':369,'multiline':False]['text':' Write profile time JSON on JSONPrinter.','line_number':386,'multiline':False]['text':' Print header line for profile times.','line_number':389,'multiline':False]['text':' Print total profile times on shutdown.','line_number':392,'multiline':False]['text':' The amount of space in the mapped nursery available to allocations.','line_number':434,'multiline':False]['text':' Round a size in bytes to the nearest valid nursery size.','line_number':451,'multiline':False]['text':' Vector of allocated chunks to allocate from.','line_number':457,'multiline':False]['text':' Pointer to the first unallocated byte in the nursery.','line_number':460,'multiline':False]['text':' These fields refer to the beginning of the nursery. They're normally 0','line_number':463,'multiline':False]['text':' and chunk(0).start() respectively. Except when a generational GC zeal','line_number':464,'multiline':False]['text':' mode is active, then they may be arbitrary (see Nursery::clear()).','line_number':465,'multiline':False]['text':' Pointer to the last byte of space in the current chunk.','line_number':469,'multiline':False]['text':' Pointer to the last byte of space in the current chunk, or nullptr if we','line_number':472,'multiline':False]['text':' are not allocating strings in the nursery.','line_number':473,'multiline':False]['text':' Pointer to the last byte of space in the current chunk, or nullptr if we','line_number':476,'multiline':False]['text':' are not allocating BigInts in the nursery.','line_number':477,'multiline':False]['text':' The index of the chunk that is currently being allocated from.','line_number':480,'multiline':False]['text':' The current nursery capacity measured in bytes. It may grow up to this','line_number':483,'multiline':False]['text':' value without a collection, allocating chunks on demand. This limit may be','line_number':484,'multiline':False]['text':' changed by maybeResizeNursery() each collection. It includes chunk headers.','line_number':485,'multiline':False]['text':' Report minor collections taking at least this long, if enabled.','line_number':492,'multiline':False]['text':' Whether we will nursery-allocate strings.','line_number':497,'multiline':False]['text':' Whether we will nursery-allocate BigInts.','line_number':500,'multiline':False]['text':' Report how many strings were deduplicated.','line_number':503,'multiline':False]['text':' Report information on allocation sites and pretenuring.','line_number':506,'multiline':False]['text':' Whether and why a collection of this nursery has been requested. This is','line_number':509,'multiline':False]['text':' mutable as it is set by the store buffer, which otherwise cannot modify','line_number':510,'multiline':False]['text':' anything in the nursery.','line_number':511,'multiline':False]['text':' Profiling data.','line_number':514,'multiline':False]['text':' Data about the previous collection.','line_number':534,'multiline':False]['text':' Calculate the promotion rate of the most recent minor GC.','line_number':549,'multiline':False]['text':' The valid_for_tenuring parameter is used to return whether this','line_number':550,'multiline':False]['text':' promotion rate is accurate enough (the nursery was full enough) to be','line_number':551,'multiline':False]['text':' used for tenuring and other decisions.','line_number':552,'multiline':False]['text':'','line_number':553,'multiline':False]['text':' Must only be called if the previousGC data is initialised.','line_number':554,'multiline':False]['text':' The set of externally malloced buffers potentially kept live by objects','line_number':557,'multiline':False]['text':' stored in the nursery. Any external buffers that do not belong to a','line_number':558,'multiline':False]['text':' tenured thing at the end of a minor GC must be freed.','line_number':559,'multiline':False]['text':' During a collection most hoisted slot and element buffers indicate their','line_number':563,'multiline':False]['text':' new location with a forwarding pointer at the base. This does not work','line_number':564,'multiline':False]['text':' for buffers whose length is less than pointer width, or when different','line_number':565,'multiline':False]['text':' buffers might overlap each other. For these, an entry in the following','line_number':566,'multiline':False]['text':' table is used.','line_number':567,'multiline':False]['text':' When we assign a unique id to cell in the nursery, that almost always','line_number':572,'multiline':False]['text':' means that the cell will be in a hash table, and thus, held live,','line_number':573,'multiline':False]['text':' automatically moving the uid from the nursery to its new home in','line_number':574,'multiline':False]['text':' tenured. It is possible, if rare, for an object that acquired a uid to','line_number':575,'multiline':False]['text':' be dead before the next collection, in which case we need to know to','line_number':576,'multiline':False]['text':' remove it when we sweep.','line_number':577,'multiline':False]['text':'','line_number':578,'multiline':False]['text':' Note: we store the pointers as Cell* here, resulting in an ugly cast in','line_number':579,'multiline':False]['text':'       sweep. This is because this structure is used to help implement','line_number':580,'multiline':False]['text':'       stable object hashing and we have to break the cycle somehow.','line_number':581,'multiline':False]['text':' Include flags in the hash. A string relocation overlay stores either','line_number':593,'multiline':False]['text':' the nursery root base chars or the dependent string nursery base, but','line_number':594,'multiline':False]['text':' does not indicate which one. If strings with different string types','line_number':595,'multiline':False]['text':' were deduplicated, for example, a dependent string gets deduplicated','line_number':596,'multiline':False]['text':' into an extensible string, the base chain would be broken and the root','line_number':597,'multiline':False]['text':' base would be unreachable.','line_number':598,'multiline':False]['text':' deDupSet is emplaced at the beginning of the nursery collection and reset','line_number':640,'multiline':False]['text':' at the end of the nursery collection. It can also be reset during nursery','line_number':641,'multiline':False]['text':' collection when out of memory to insert new entries.','line_number':642,'multiline':False]['text':' Lists of map and set objects allocated in the nursery or with iterators','line_number':645,'multiline':False]['text':' allocated there. Such objects need to be swept after minor GC.','line_number':646,'multiline':False]['text':' Set the current chunk. This updates the currentChunk_, position_','line_number':659,'multiline':False]['text':' currentEnd_ and currentStringEnd_ values as approprite. It'll also','line_number':660,'multiline':False]['text':' poison the chunk, either a portion of the chunk if it is already the','line_number':661,'multiline':False]['text':' current chunk, or the whole chunk if fullPoison is true or it is not','line_number':662,'multiline':False]['text':' the current chunk.','line_number':663,'multiline':False]['text':' extent is advisory, it will be ignored in sub-chunk and generational zeal','line_number':668,'multiline':False]['text':' modes. It will be clamped to Min(NurseryChunkUsableSize, capacity_).','line_number':669,'multiline':False]['text':' Allocate the next chunk, or the first chunk for initialization.','line_number':675,'multiline':False]['text':' Callers will probably want to call setCurrentChunk(0) next.','line_number':676,'multiline':False]['text':' Common internal allocator function.','line_number':691,'multiline':False]['text':' Move all objects and everything they can reach to the tenured heap.','line_number':709,'multiline':False]['text':' Move all strings and all strings they can reach to the tenured heap, and','line_number':712,'multiline':False]['text':' additionally do any fixups for when strings are pointing into memory that','line_number':713,'multiline':False]['text':' was deduplicated.','line_number':714,'multiline':False]['text':' The dependent string chars needs to be relocated if the base which it's','line_number':717,'multiline':False]['text':' using chars from has been deduplicated.','line_number':718,'multiline':False]['text':' Handle relocation of slots/elements pointers stored in Ion frames.','line_number':726,'multiline':False]['text':' Updates pointers to nursery objects that have been tenured and discards','line_number':742,'multiline':False]['text':' pointers to objects that have been freed.','line_number':743,'multiline':False]['text':' Reset the current chunk and position after a minor collection. Also poison','line_number':746,'multiline':False]['text':' the nursery on debug & nightly builds.','line_number':747,'multiline':False]['text':' Change the allocable space provided by the nursery.','line_number':752,'multiline':False]['text':' Free the chunks starting at firstFreeChunk until the end of the chunks','line_number':760,'multiline':False]['text':' vector. Shrinks the vector but does not update maxChunkCount().','line_number':761,'multiline':False]['text':' Profile recording and printing.','line_number':771,'multiline':False]['text':' namespace js','line_number':786,'multiline':False]['text':' gc_Nursery_h','line_number':788,'multiline':False]