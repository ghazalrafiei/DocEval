['text':'
******************************************************************************
*
* Â© 2016 and later: Unicode, Inc. and others.
* License & terms of use: http://www.unicode.org/copyright.html
*
******************************************************************************
*   file name:  ubiditransform.c
*   encoding:   UTF-8
*   tab size:   8 (not used)
*   indentation:4
*
*   created on: 2016jul24
*   created by: Lina Kemmel
*
','line_number':1,'multiline':True]['text':' Some convenience defines ','line_number':26,'multiline':True]['text':'*
 * Typedef for a pointer to a function, which performs some operation (such as
 * reordering, setting "inverse" mode, character mirroring, etc.). Return value
 * indicates whether the text was changed in the course of this operation or
 * not.
 ','line_number':42,'multiline':True]['text':'*
 * Structure that holds a predefined reordering scheme, including the following
 * information:
 * <ul>
 * <li>an input base direction,</li>
 * <li>an input order,</li>
 * <li>an output base direction,</li>
 * <li>an output order,</li>
 * <li>a digit shaping direction,</li>
 * <li>a letter shaping direction,</li>
 * <li>a base direction that should be applied when the reordering engine is
 *     invoked (which can not always be derived from the caller-defined
 *     options),</li>
 * <li>an array of pointers to functions that accomplish the bidi layout
 *     transformation.</li>
 * </ul>
 ','line_number':50,'multiline':True]['text':' input level ','line_number':68,'multiline':True]['text':' input order ','line_number':69,'multiline':True]['text':' output level ','line_number':70,'multiline':True]['text':' output order ','line_number':71,'multiline':True]['text':' digit shaping direction ','line_number':72,'multiline':True]['text':' letter shaping direction ','line_number':73,'multiline':True]['text':' paragraph level to be used with setPara ','line_number':74,'multiline':True]['text':' array of pointers to functions carrying out the transformation ','line_number':75,'multiline':True]['text':' pointer to a UBiDi object ','line_number':79,'multiline':True]['text':' effective reordering scheme ','line_number':80,'multiline':True]['text':' input text ','line_number':81,'multiline':True]['text':' output text ','line_number':82,'multiline':True]['text':' input text length - not really needed as we are zero-terminated and can u_strlen ','line_number':83,'multiline':True]['text':' input text capacity excluding the trailing zero ','line_number':84,'multiline':True]['text':' output text capacity ','line_number':85,'multiline':True]['text':' number of UChars written to dest ','line_number':86,'multiline':True]['text':' reordering options - currently only suppot DO_MIRRORING ','line_number':87,'multiline':True]['text':' digit option for ArabicShaping ','line_number':88,'multiline':True]['text':' letter option for ArabicShaping ','line_number':89,'multiline':True]['text':'*
 * Performs Bidi resolution of text.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':119,'multiline':True]['text':'*
 * Performs basic reordering of text (Logical -> Visual LTR).
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':136,'multiline':True]['text':'*
 * Sets "inverse" mode on the <code>UBiDi</code> object.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':156,'multiline':True]['text':'*
 * Sets "runs only" reordering mode indicating a Logical LTR <-> Logical RTL
 * transformation.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':174,'multiline':True]['text':'*
 * Performs string reverse.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':192,'multiline':True]['text':'*
 * Applies a new value to the text that serves as input at the current
 * processing step. This value is identical to the original one when we begin
 * the processing, but usually changes as the transformation progresses.
 * 
 * @param pTransform A pointer to the <code>UBiDiTransform</code> structure.
 * @param newSrc A pointer whose value is to be used as input text.
 * @param newLength A length of the new text in <code>UChar</code>s.
 * @param newSize A new source capacity in <code>UChar</code>s.
 * @param pErrorCode Pointer to the error code value.
 ','line_number':211,'multiline':True]['text':' allocate slightly more than needed right now','line_number':231,'multiline':False]['text':'pTransform->srcLength = pTransform->srcSize = 0;','line_number':239,'multiline':False]['text':'*
 * Calls a lower level shaping function.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param options Shaping options.
 * @param pErrorCode Pointer to the error code value.
 ','line_number':249,'multiline':True]['text':'*
 * Performs digit and letter shaping.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':264,'multiline':True]['text':'*
 * Performs character mirroring.
 * 
 * @param pTransform Pointer to the <code>UBiDiTransform</code> structure.
 * @param pErrorCode Pointer to the error code value.
 *
 * @return Whether or not this function modifies the text. Besides the return
 * value, the caller should also check <code>U_SUCCESS(*pErrorCode)</code>.
 ','line_number':294,'multiline':True]['text':'*
 * All possible reordering schemes.
 *
 ','line_number':326,'multiline':True]['text':' 0: Logical LTR => Visual LTR ','line_number':332,'multiline':True]['text':' 1: Logical RTL => Visual LTR ','line_number':335,'multiline':True]['text':' 2: Logical LTR => Visual RTL ','line_number':338,'multiline':True]['text':' 3: Logical RTL => Visual RTL ','line_number':341,'multiline':True]['text':' 4: Visual LTR => Logical RTL ','line_number':344,'multiline':True]['text':' 5: Visual RTL => Logical RTL ','line_number':347,'multiline':True]['text':' 6: Visual LTR => Logical LTR ','line_number':350,'multiline':True]['text':' 7: Visual RTL => Logical LTR ','line_number':353,'multiline':True]['text':' 8: Logical LTR => Logical RTL ','line_number':356,'multiline':True]['text':' 9: Logical RTL => Logical LTR ','line_number':359,'multiline':True]['text':' 10: Visual LTR => Visual RTL ','line_number':362,'multiline':True]['text':' 11: Visual RTL => Visual LTR ','line_number':365,'multiline':True]['text':' 12: Logical LTR => Logical LTR ','line_number':368,'multiline':True]['text':' 13: Logical RTL => Logical RTL ','line_number':371,'multiline':True]['text':' 14: Visual LTR => Visual LTR ','line_number':374,'multiline':True]['text':' 15: Visual RTL => Visual RTL ','line_number':377,'multiline':True]['text':'*
 * When the direction option is <code>UBIDI_DEFAULT_LTR</code> or
 * <code>UBIDI_DEFAULT_RTL</code>, resolve the base direction according to that
 * of the first strong bidi character.
 ','line_number':384,'multiline':True]['text':'*
 * Finds a valid <code>ReorderingScheme</code> matching the
 * caller-defined scheme.
 * 
 * @return A valid <code>ReorderingScheme</code> object or NULL
 ','line_number':416,'multiline':True]['text':' Current limitation: in multiple paragraphs will be resolved according
       to the 1st paragraph ','line_number':467,'multiline':True]['text':' Ignore TEXT_DIRECTION_* flags, as we apply our own depending on the text
       scheme at the time shaping is invoked. ','line_number':479,'multiline':True]['text':' Checking for U_SUCCESS() within the loop to bail out on first failure. ','line_number':499,'multiline':True]['text':' Text was not changed - just copy src to dest ','line_number':512,'multiline':True]