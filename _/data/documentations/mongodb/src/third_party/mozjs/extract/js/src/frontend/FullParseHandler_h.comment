['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' mozilla::Maybe','line_number':10,'multiline':False]['text':' std::nullptr_t','line_number':13,'multiline':False]['text':' FunctionSyntaxKind','line_number':16,'multiline':False]['text':' PrivateNameKind','line_number':17,'multiline':False]['text':' TaggedParserAtomIndex','line_number':19,'multiline':False]['text':' Parse handler used when generating a full parse tree for all code which the','line_number':32,'multiline':False]['text':' parser encounters.','line_number':33,'multiline':False]['text':'
   * If this is a full parse to construct the bytecode for a function that
   * was previously lazily parsed, we still don't want to full parse the
   * inner functions. These members are used for this functionality:
   *
   * - lazyOuterFunction_ holds the lazyScript for this current parse
   * - lazyInnerFunctionIndex is used as we skip over inner functions
   *   (see skipLazyInnerFunction),
   *
   *  TODO-Stencil: We probably need to snapshot the atoms from the
   *                lazyOuterFunction here.
   ','line_number':41,'multiline':True]['text':' new_ methods for creating parse nodes. These report OOM on context. ','line_number':59,'multiline':True]['text':' FIXME: Use ListNode instead of ListNodeType as an alias (bug 1489008).','line_number':62,'multiline':False]['text':' Note: super() is a special form, *not* a function call.','line_number':85,'multiline':False]['text':' Technically this isn't a destructuring pattern at all -- the grammar','line_number':95,'multiline':False]['text':' doesn't treat it as such.  But we need to know when this happens to','line_number':96,'multiline':False]['text':' consider it a SyntaxError rather than an invalid-left-hand-side','line_number':97,'multiline':False]['text':' ReferenceError.','line_number':98,'multiline':False]['text':' The BaseScript::gcthings() array contains the inner function list','line_number':109,'multiline':False]['text':' followed by the closed-over bindings data. Advance the index for','line_number':110,'multiline':False]['text':' closed-over bindings to the end of the inner functions. The','line_number':111,'multiline':False]['text':' nextLazyInnerFunction / nextLazyClosedOverBinding accessors confirm we','line_number':112,'multiline':False]['text':' have the expected types. See also: BaseScript::CreateLazy.','line_number':113,'multiline':False]['text':'
     * We don't know when the last noSubstTemplate will come in, and we
     * don't want to deal with this outside this method
     ','line_number':211,'multiline':True]['text':' Handle property deletion explicitly. OptionalCall is handled','line_number':254,'multiline':False]['text':' via DeleteExpr.','line_number':255,'multiline':False]['text':' Expressions','line_number':301,'multiline':False]['text':' list = ','line_number':314,'multiline':True]['text':' kid = ','line_number':314,'multiline':True]['text':' list = ','line_number':327,'multiline':True]['text':' kid = ','line_number':327,'multiline':True]['text':' list = ','line_number':336,'multiline':True]['text':' kid = ','line_number':336,'multiline':True]['text':' Object literals with mutated [[Prototype]] are non-constant so that','line_number':394,'multiline':False]['text':' singleton objects will have Object.prototype as their [[Prototype]].','line_number':395,'multiline':False]['text':' list = ','line_number':402,'multiline':True]['text':' kid = ','line_number':402,'multiline':True]['text':' list = ','line_number':420,'multiline':True]['text':' kid = ','line_number':420,'multiline':True]['text':' list = ','line_number':445,'multiline':True]['text':' kid = ','line_number':445,'multiline':True]['text':' list = ','line_number':458,'multiline':True]['text':' kid = ','line_number':458,'multiline':True]['text':' list = ','line_number':475,'multiline':True]['text':' kid = ','line_number':475,'multiline':True]['text':' isStatic = ','line_number':487,'multiline':True]['text':' Constructors can be surrounded by LexicalScopes.','line_number':519,'multiline':False]['text':' list = ','line_number':527,'multiline':True]['text':' kid = ','line_number':527,'multiline':True]['text':' Statements','line_number':556,'multiline':False]['text':' list = ','line_number':572,'multiline':True]['text':' kid = ','line_number':572,'multiline':True]['text':' Notify the emitter that the block contains body-level function','line_number':575,'multiline':False]['text':' definitions that should be processed before the rest of nodes.','line_number':576,'multiline':False]['text':' list = ','line_number':589,'multiline':True]['text':' kid = ','line_number':589,'multiline':True]['text':' lhs = ','line_number':607,'multiline':True]['text':' rhs = ','line_number':608,'multiline':True]['text':' list = ','line_number':879,'multiline':True]['text':' kid = ','line_number':879,'multiline':True]['text':' list = ','line_number':883,'multiline':True]['text':' kid = ','line_number':883,'multiline':True]['text':' Trailing nullptrs were elided in PerHandlerParser::finishFunction().','line_number':1102,'multiline':False]['text':' These entries are either JSAtom* or nullptr, so use the 'asCell()'','line_number':1107,'multiline':False]['text':' accessor which is faster.','line_number':1108,'multiline':False]['text':' namespace frontend','line_number':1133,'multiline':False]['text':' namespace js','line_number':1134,'multiline':False]['text':' frontend_FullParseHandler_h ','line_number':1136,'multiline':True]