['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
* Copyright (C) 2013-2015, International Business Machines
* Corporation and others.  All Rights Reserved.
*******************************************************************************
* collationfastlatinbuilder.cpp
*
* created on: 2013aug09
* created by: Markus W. Scherer
','line_number':3,'multiline':True]['text':' 0 or 1 or 2','line_number':14,'multiline':False]['text':'*
 * Compare two signed int64_t values as if they were unsigned.
 ','line_number':43,'multiline':True]['text':' TODO: Merge this with the near-identical version in collationbasedatabuilder.cpp','line_number':57,'multiline':False]['text':'*
 * Like Java Collections.binarySearch(List, String, Comparator).
 *
 * @return the index>=0 where the item was found,
 *         or the index<0 for inserting the string at ~index in sorted order
 ','line_number':58,'multiline':True]['text':' insert ce before i','line_number':75,'multiline':False]['text':' insert ce after i','line_number':80,'multiline':False]['text':' namespace','line_number':87,'multiline':False]['text':' This builder is not reusable.','line_number':105,'multiline':False]['text':' Fast handling of digits.','line_number':111,'multiline':False]['text':' Give digits long mini primaries,','line_number':116,'multiline':False]['text':' so that there are more short primaries for letters.','line_number':117,'multiline':False]['text':' Note: If we still have a short-primary overflow but not a long-primary overflow,','line_number':123,'multiline':False]['text':' then we could calculate how many more long primaries would fit,','line_number':124,'multiline':False]['text':' and set the firstShortPrimary to that many after the current firstShortPrimary,','line_number':125,'multiline':False]['text':' and try again.','line_number':126,'multiline':False]['text':' However, this might only benefit the en_US_POSIX tailoring,','line_number':127,'multiline':False]['text':' and it is simpler to suppress building fast Latin data for it in genrb,','line_number':128,'multiline':False]['text':' or by returning FALSE here if shortPrimaryOverflow.','line_number':129,'multiline':False]['text':' might reduce heap memory usage','line_number':133,'multiline':False]['text':' The first few reordering groups should be special groups','line_number':144,'multiline':False]['text':' (space, punct, ..., digit) followed by Latn, then Grek and other scripts.','line_number':145,'multiline':False]['text':' missing data','line_number':149,'multiline':False]['text':' reserve a slot for this group','line_number':152,'multiline':False]['text':' missing data','line_number':159,'multiline':False]['text':' Both or neither need to be encoded as short primaries,','line_number':167,'multiline':False]['text':' so that we can test only one and use the same bit mask.','line_number':168,'multiline':False]['text':' Both or neither must be potentially-variable,','line_number':174,'multiline':False]['text':' so that we can test only one and determine if both are variable.','line_number':175,'multiline':False]['text':' Both will be encoded with long mini primaries.','line_number':182,'multiline':False]['text':' They must be in the same special reordering group,','line_number':183,'multiline':False]['text':' so that we can test only one and determine if both are variable.','line_number':184,'multiline':False]['text':' will terminate','line_number':186,'multiline':False]['text':' bail out for c','line_number':228,'multiline':False]['text':' Always map U+0000 to a contraction.','line_number':233,'multiline':False]['text':' Write a contraction list with only a default value if there is no real contraction.','line_number':234,'multiline':False]['text':' Terminate the last contraction list.','line_number':241,'multiline':False]['text':' Note: We could support PREFIX_TAG (assert c>=0)','line_number':285,'multiline':False]['text':' by recursing on its default CE32 and checking that none of the prefixes starts','line_number':286,'multiline':False]['text':' with a fast Latin character.','line_number':287,'multiline':False]['text':' However, currently (2013) there are only the L-before-middle-dot','line_number':288,'multiline':False]['text':' prefix mappings in the Latin range, and those would be rejected anyway.','line_number':289,'multiline':False]['text':' A mapping can be completely ignorable.','line_number':301,'multiline':False]['text':' We do not support an ignorable ce0 unless it is completely ignorable.','line_number':303,'multiline':False]['text':' We only support primaries up to the Latin script.','line_number':306,'multiline':False]['text':' We support non-common secondary and case weights only together with short primaries.','line_number':308,'multiline':False]['text':' No below-common tertiary weights.','line_number':314,'multiline':False]['text':' Both primaries must be in the same group,','line_number':317,'multiline':False]['text':' or both must get short mini primaries,','line_number':318,'multiline':False]['text':' or a short-primary CE is followed by a secondary CE.','line_number':319,'multiline':False]['text':' This is so that we can test the first primary and use the same mask for both,','line_number':320,'multiline':False]['text':' and determine for both whether they are variable.','line_number':321,'multiline':False]['text':' No tertiary CEs.','line_number':325,'multiline':False]['text':' We support non-common secondary and case weights','line_number':327,'multiline':False]['text':' only for secondary CEs or together with short primaries.','line_number':328,'multiline':False]['text':' No below-common tertiary weights.','line_number':333,'multiline':False]['text':' No quaternary weights.','line_number':336,'multiline':False]['text':' Default if no suffix match.','line_number':346,'multiline':False]['text':' Since the original ce32 is not a prefix mapping,','line_number':347,'multiline':False]['text':' the default ce32 must not be another contraction.','line_number':348,'multiline':False]['text':' Bail out for c-without-contraction.','line_number':354,'multiline':False]['text':' Handle an encodable contraction unless the next contraction is too long','line_number':357,'multiline':False]['text':' and starts with the same character.','line_number':358,'multiline':False]['text':' ignore anything but fast Latin text','line_number':365,'multiline':False]['text':' Bail out for all contractions starting with this character.','line_number':368,'multiline':False]['text':' Note: There might not be any fast Latin contractions, but','line_number':390,'multiline':False]['text':' we need to enter contraction handling anyway so that we can bail out','line_number':391,'multiline':False]['text':' when there is a non-fast-Latin character following.','line_number':392,'multiline':False]['text':' For example: Danish &Y<<u+umlaut, when we compare Y vs. u\u0308 we need to see the','line_number':393,'multiline':False]['text':' following umlaut and bail out, rather than return the difference of Y vs. u.','line_number':394,'multiline':False]['text':' blank out case bits','line_number':414,'multiline':False]['text':' blank out case bits','line_number':423,'multiline':False]['text':' The lowest unique CE must be at least a secondary CE.','line_number':440,'multiline':False]['text':' Note: At least one of the p/s/t weights changes from one unique CE to the next.','line_number':449,'multiline':False]['text':' (uniqueCEs does not store case bits.)','line_number':450,'multiline':False]['text':' Set the group's header entry to the','line_number':455,'multiline':False]['text':' last "long primary" in or before the group.','line_number':456,'multiline':False]['text':' Reserve the highest primary weight for U+FFFF.','line_number':481,'multiline':False]['text':' blanked out in uniqueCEs','line_number':535,'multiline':False]['text':' initialize to completely ignorable','line_number':569,'multiline':False]['text':' defer contraction','line_number':574,'multiline':False]['text':' Note: There is a chance that this new expansion is the same as a previous one,','line_number':577,'multiline':False]['text':' and if so, then we could reuse the other expansion.','line_number':578,'multiline':False]['text':' However, that seems unlikely.','line_number':579,'multiline':False]['text':' We encode all contraction lists so that the first word of a list','line_number':595,'multiline':False]['text':' terminates the previous list, and we only need one additional terminator at the end.','line_number':596,'multiline':False]['text':' Note: There is a chance that this new contraction list is the same as a previous one,','line_number':626,'multiline':False]['text':' and if so, then we could truncate the result and reuse the other list.','line_number':627,'multiline':False]['text':' However, that seems unlikely.','line_number':628,'multiline':False]['text':' Terminate the last contraction list.','line_number':633,'multiline':False]['text':' completely ignorable','line_number':672,'multiline':False]['text':' Extract & copy the case bits.','line_number':682,'multiline':False]['text':' Shift them from normal CE bits 15..14 to mini CE bits 4..3.','line_number':683,'multiline':False]['text':' Only in mini CEs: Ignorable case bits = 0, lowercase = 1.','line_number':685,'multiline':False]['text':' Try to combine the two mini CEs into one.','line_number':697,'multiline':False]['text':' sec1>=sec_high implies pri1==0.','line_number':702,'multiline':False]['text':' Secondary CE, or a CE with a short primary, copy the case bits.','line_number':708,'multiline':False]['text':' !UCONFIG_NO_COLLATION','line_number':717,'multiline':False]