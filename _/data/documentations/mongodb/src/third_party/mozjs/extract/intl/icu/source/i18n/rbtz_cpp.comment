['text':' Â© 2016 and later: Unicode, Inc. and others.','line_number':1,'multiline':False]['text':' License & terms of use: http://www.unicode.org/copyright.html','line_number':2,'multiline':False]['text':'
*******************************************************************************
* Copyright (C) 2007-2013, International Business Machines Corporation and
* others. All Rights Reserved.
*******************************************************************************
','line_number':3,'multiline':True]['text':' for 'typeid' to work','line_number':10,'multiline':False]['text':'*
 * A struct representing a time zone transition
 ','line_number':25,'multiline':True]['text':' A final rule','line_number':123,'multiline':False]['text':' Cannot handle more than two final rules','line_number':130,'multiline':False]['text':' Non-final rule','line_number':136,'multiline':False]['text':' Mark dirty, so transitions are recalculated at next complete() call','line_number':145,'multiline':False]['text':' Make sure either no final rules or a pair of AnnualTimeZoneRules','line_number':172,'multiline':False]['text':' are available.','line_number':173,'multiline':False]['text':' Create a TimezoneTransition and add to the list','line_number':180,'multiline':False]['text':' Build the transition array which represents historical time zone','line_number':185,'multiline':False]['text':' transitions.','line_number':186,'multiline':False]['text':' No more transitions from this rule - skip this rule next time','line_number':216,'multiline':False]['text':' Check if all historic rules are done','line_number':233,'multiline':False]['text':' Check if one of final rules has earlier transition date','line_number':247,'multiline':False]['text':' fFinalRules->size() ','line_number':248,'multiline':True]['text':' Nothing more','line_number':265,'multiline':False]['text':' Append the first transition for each','line_number':298,'multiline':False]['text':' Should not happen, because both rules are permanent','line_number':305,'multiline':False]['text':'dayOfWeek','line_number':381,'multiline':True]['text':'monthLength','line_number':382,'multiline':True]['text':' dayOfWeek and monthLength are unused','line_number':383,'multiline':False]['text':' Convert to extended year','line_number':388,'multiline':False]['text':'
 * The internal getOffset implementation
 ','line_number':413,'multiline':True]['text':' Transitions are not yet resolved.  We cannot do it here','line_number':428,'multiline':False]['text':' because this method is const.  Thus, do nothing and return','line_number':429,'multiline':False]['text':' error status.','line_number':430,'multiline':False]['text':' no final rules or the given time is before the first transition','line_number':451,'multiline':False]['text':' specified by the final rules -> use the last rule ','line_number':452,'multiline':False]['text':' Find a historical transition','line_number':456,'multiline':False]['text':'offsetMillis','line_number':475,'multiline':True]['text':' We don't support this operation at this moment.','line_number':476,'multiline':False]['text':' Nothing to do!','line_number':477,'multiline':False]['text':' Note: This implementation returns standard GMT offset','line_number':482,'multiline':False]['text':' as of current time.','line_number':483,'multiline':False]['text':' Note: This implementation returns true when','line_number':493,'multiline':False]['text':' daylight saving time is used as of now or','line_number':494,'multiline':False]['text':' after the next transition.','line_number':495,'multiline':False]['text':' If DST is not used now, check if DST is used after the next transition','line_number':503,'multiline':False]['text':'status','line_number':584,'multiline':True]['text':' Initial rule','line_number':603,'multiline':False]['text':' Transition rules','line_number':606,'multiline':False]['text':' Set the result length','line_number':623,'multiline':False]['text':' In case of error, clean up','line_number':678,'multiline':False]['text':' Both rules take effect after the given time','line_number':730,'multiline':False]['text':' Find a transion time with finalRules','line_number':760,'multiline':False]['text':'  avail0/avail1 should be always TRUE','line_number':766,'multiline':False]['text':' Find a transition within the historic transitions','line_number':783,'multiline':False]['text':' For now, this implementation ignore transitions with only zone name changes.','line_number':802,'multiline':False]['text':' No offset changes.  Try next one if not final','line_number':808,'multiline':False]['text':' always exclusive ','line_number':809,'multiline':True]['text':' Find a transion time with finalRules','line_number':843,'multiline':False]['text':'  avail0/avail1 should be always TRUE','line_number':849,'multiline':False]['text':' Find a transition within the historic transitions','line_number':867,'multiline':False]['text':' For now, this implementation ignore transitions with only zone name changes.','line_number':882,'multiline':False]['text':' No offset changes.  Try next one if not final','line_number':885,'multiline':False]['text':' always exclusive ','line_number':886,'multiline':True]['text':' Positive transition, which makes a non-existing local time range','line_number':921,'multiline':False]['text':' Interprets the time with rule before the transition,','line_number':931,'multiline':False]['text':' default for non-existing time range','line_number':932,'multiline':False]['text':' Negative transition, which makes a duplicated local time range','line_number':936,'multiline':False]['text':' Interprets the time with rule after the transition,','line_number':946,'multiline':False]['text':' default for duplicated local time range','line_number':947,'multiline':False]['text':' #if !UCONFIG_NO_FORMATTING ','line_number':956,'multiline':True]['text':'eof','line_number':958,'multiline':False]