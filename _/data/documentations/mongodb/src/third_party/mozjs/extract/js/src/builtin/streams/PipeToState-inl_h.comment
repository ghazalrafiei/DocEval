['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' ReadableStream pipe-to operation captured state. ','line_number':7,'multiline':True]['text':' MOZ_ASSERT','line_number':14,'multiline':False]['text':' JS_PUBLIC_API','line_number':16,'multiline':False]['text':' JS::Handle','line_number':18,'multiline':False]['text':' JSContext','line_number':19,'multiline':False]['text':' JSRuntime','line_number':20,'multiline':False]['text':' js::UnwrapAndDowncastValue','line_number':22,'multiline':False]['text':' JSContext::check','line_number':23,'multiline':False]['text':'*
 * Returns the unwrapped |AbortSignal| instance associated with a given pipe-to
 * operation.
 *
 * The pipe-to operation must be known to have had an |AbortSignal| associated
 * with it.
 *
 * If the signal is a wrapper, it will be unwrapped, so the result might not be
 * an object from the currently active compartment.
 ','line_number':30,'multiline':True]['text':' namespace js','line_number':50,'multiline':False]['text':' builtin_streams_PipeToState_inl_h','line_number':52,'multiline':False]