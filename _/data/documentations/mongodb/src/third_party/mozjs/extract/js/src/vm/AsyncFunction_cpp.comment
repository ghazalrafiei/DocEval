['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' js::FunctionFlags','line_number':13,'multiline':False]['text':' js::PromiseObject','line_number':18,'multiline':False]['text':' Change the "constructor" property to non-writable before adding any other','line_number':47,'multiline':False]['text':' properties, so it's still the last property and can be modified without a','line_number':48,'multiline':False]['text':' dictionary-mode transition.','line_number':49,'multiline':False]['text':' ES2020 draft rev a09fc232c137800dbf51b6204f37fdede4ba1646','line_number':79,'multiline':False]['text':' 6.2.3.1.1 Await Fulfilled Functions','line_number':80,'multiline':False]['text':' 6.2.3.1.2 Await Rejected Functions','line_number':81,'multiline':False]['text':' We're enqueuing the promise job for Await before suspending the execution','line_number':85,'multiline':False]['text':' of the async function. So when either the debugger or OOM errors terminate','line_number':86,'multiline':False]['text':' the execution after JSOp::AsyncAwait, but before JSOp::Await, we're in an','line_number':87,'multiline':False]['text':' inconsistent state, because we don't have a resume index set and therefore','line_number':88,'multiline':False]['text':' don't know where to resume the async function. Return here in that case.','line_number':89,'multiline':False]['text':' The debugger sets the async function's generator object into the "running"','line_number':94,'multiline':False]['text':' state while firing debugger events to ensure the debugger can't re-enter','line_number':95,'multiline':False]['text':' the async function, cf. |AutoSetGeneratorRunning| in Debugger.cpp. Catch','line_number':96,'multiline':False]['text':' this case here by checking if the generator is already runnning.','line_number':97,'multiline':False]['text':' The promise is created within the activation of the async function, so','line_number':107,'multiline':False]['text':' use the parent frame as the starting point for async stacks.','line_number':108,'multiline':False]['text':' Execution context switching is handled in generator.','line_number':120,'multiline':False]['text':' Handle the OOM case mentioned above.','line_number':133,'multiline':False]['text':' ES2020 draft rev a09fc232c137800dbf51b6204f37fdede4ba1646','line_number':153,'multiline':False]['text':' 6.2.3.1.1 Await Fulfilled Functions','line_number':154,'multiline':False]['text':' ES2020 draft rev a09fc232c137800dbf51b6204f37fdede4ba1646','line_number':161,'multiline':False]['text':' 6.2.3.1.2 Await Rejected Functions','line_number':162,'multiline':False]['text':' addProperty','line_number':192,'multiline':False]['text':' delProperty','line_number':193,'multiline':False]['text':' enumerate','line_number':194,'multiline':False]['text':' newEnumerate','line_number':195,'multiline':False]['text':' resolve','line_number':196,'multiline':False]['text':' mayResolve','line_number':197,'multiline':False]['text':' finalize','line_number':198,'multiline':False]['text':' call','line_number':199,'multiline':False]['text':' hasInstance','line_number':200,'multiline':False]['text':' construct','line_number':201,'multiline':False]['text':' trace','line_number':202,'multiline':False]['text':' Starts in the running state.','line_number':220,'multiline':False]['text':' TODO: Module is currently hitching a ride with','line_number':244,'multiline':False]['text':' AsyncFunctionGeneratorObject. The reason for this is we have some work in','line_number':245,'multiline':False]['text':' the JITs that make use of this object when we hit AsyncAwait bytecode. At','line_number':246,'multiline':False]['text':' the same time, top level await shares a lot of it's implementation with','line_number':247,'multiline':False]['text':' AsyncFunction. I am not sure if the best thing to do here is inherit,','line_number':248,'multiline':False]['text':' override, or do something else. Comments appreciated.','line_number':249,'multiline':False]['text':' Starts in the running state.','line_number':281,'multiline':False]