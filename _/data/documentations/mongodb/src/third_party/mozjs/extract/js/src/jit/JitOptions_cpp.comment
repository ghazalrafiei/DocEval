['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Whether to perform expensive graph-consistency DEBUG-only assertions.','line_number':63,'multiline':False]['text':' It can be useful to disable this to reduce DEBUG-compile time of large','line_number':64,'multiline':False]['text':' wasm programs.','line_number':65,'multiline':False]['text':' Emit extra code to verify live regs at the start of a VM call','line_number':69,'multiline':False]['text':' are not modified before its OsiPoint.','line_number':70,'multiline':False]['text':' Whether to enable extra code to perform dynamic validation of','line_number':74,'multiline':False]['text':' RangeAnalysis results.','line_number':75,'multiline':False]['text':' Toggles whether Alignment Mask Analysis is globally disabled.','line_number':78,'multiline':False]['text':' Toggles whether Effective Address Analysis is globally disabled.','line_number':81,'multiline':False]['text':' Toggles whether Edge Case Analysis is gobally disabled.','line_number':84,'multiline':False]['text':' Toggle whether global value numbering is globally disabled.','line_number':87,'multiline':False]['text':' Toggles whether inlining is globally disabled.','line_number':90,'multiline':False]['text':' Toggles whether loop invariant code motion is globally disabled.','line_number':93,'multiline':False]['text':' Toggle whether branch pruning is globally disabled.','line_number':96,'multiline':False]['text':' Toggles whether instruction reordering is globally disabled.','line_number':99,'multiline':False]['text':' Toggles whether Range Analysis is globally disabled.','line_number':102,'multiline':False]['text':' Toggles wheter Recover instructions is globally disabled.','line_number':105,'multiline':False]['text':' Toggle whether eager scalar replacement is globally disabled.','line_number':108,'multiline':False]['text':' Toggles whether CacheIR stubs are used.','line_number':111,'multiline':False]['text':' Toggles whether sink code motion is globally disabled.','line_number':114,'multiline':False]['text':' Toggles whether we verify that we don't recompile with the same CacheIR.','line_number':117,'multiline':False]['text':' Whether the Baseline Interpreter is enabled.','line_number':120,'multiline':False]['text':' Whether the Baseline JIT is enabled.','line_number':123,'multiline':False]['text':' Whether the IonMonkey JIT is enabled.','line_number':126,'multiline':False]['text':' Warp compile Async functions','line_number':129,'multiline':False]['text':' Warp compile Generator functions','line_number':132,'multiline':False]['text':' Whether the IonMonkey and Baseline JITs are enabled for Trusted Principals.','line_number':135,'multiline':False]['text':' (Ignored if ion or baselineJit is set to true.)','line_number':136,'multiline':False]['text':' Whether the RegExp JIT is enabled.','line_number':139,'multiline':False]['text':' Whether Warp should use ICs instead of transpiling Baseline CacheIR.','line_number':142,'multiline':False]['text':' Whether all ICs should be initialized as megamorphic ICs.','line_number':145,'multiline':False]['text':' Toggles whether large scripts are rejected.','line_number':148,'multiline':False]['text':' Toggles whether functions may be entered at loop headers.','line_number':151,'multiline':False]['text':' Whether to enable extra code to perform dynamic validations.','line_number':154,'multiline':False]['text':' How many invocations or loop iterations are needed before functions','line_number':157,'multiline':False]['text':' enter the Baseline Interpreter.','line_number':158,'multiline':False]['text':' How many invocations or loop iterations are needed before functions','line_number':161,'multiline':False]['text':' are compiled with the baseline compiler.','line_number':162,'multiline':False]['text':' Duplicated in all.js - ensure both match.','line_number':163,'multiline':False]['text':' How many invocations or loop iterations are needed before functions','line_number':166,'multiline':False]['text':' are considered for trial inlining.','line_number':167,'multiline':False]['text':' The initial warm-up count for ICScripts created by trial inlining.','line_number':170,'multiline':False]['text':'','line_number':171,'multiline':False]['text':' Note: the difference between trialInliningInitialWarmUpCount and','line_number':172,'multiline':False]['text':' trialInliningWarmUpThreshold must be:','line_number':173,'multiline':False]['text':'','line_number':174,'multiline':False]['text':' * Small enough to allow inlining multiple levels deep before the outer','line_number':175,'multiline':False]['text':'   script reaches its normalIonWarmUpThreshold.','line_number':176,'multiline':False]['text':'','line_number':177,'multiline':False]['text':' * Greater than inliningEntryThreshold or no scripts can be inlined.','line_number':178,'multiline':False]['text':' How many invocations or loop iterations are needed before functions','line_number':181,'multiline':False]['text':' are compiled with the Ion compiler at OptimizationLevel::Normal.','line_number':182,'multiline':False]['text':' Duplicated in all.js - ensure both match.','line_number':183,'multiline':False]['text':' How many invocations are needed before regexps are compiled to','line_number':186,'multiline':False]['text':' native code.','line_number':187,'multiline':False]['text':' Number of exception bailouts (resuming into catch/finally block) before','line_number':190,'multiline':False]['text':' we invalidate and forbid Ion compilation.','line_number':191,'multiline':False]['text':' Number of bailouts without invalidation before we set','line_number':194,'multiline':False]['text':' JSScript::hadFrequentBailouts and invalidate.','line_number':195,'multiline':False]['text':' Duplicated in all.js - ensure both match.','line_number':196,'multiline':False]['text':' Whether to run all debug checks in debug builds.','line_number':199,'multiline':False]['text':' Disabling might make it more enjoyable to run JS in debug builds.','line_number':200,'multiline':False]['text':' How many actual arguments are accepted on the C stack.','line_number':203,'multiline':False]['text':' How many times we will try to enter a script via OSR before','line_number':206,'multiline':False]['text':' invalidating the script.','line_number':207,'multiline':False]['text':' The bytecode length limit for small function.','line_number':210,'multiline':False]['text':' The minimum entry count for an IC stub before it can be trial-inlined.','line_number':213,'multiline':False]['text':' An artificial testing limit for the maximum supported offset of','line_number':216,'multiline':False]['text':' pc-relative jump and call instructions.','line_number':217,'multiline':False]['text':' Branch pruning heuristic is based on a scoring system, which is look at','line_number':220,'multiline':False]['text':' different metrics and provide a score. The score is computed as a','line_number':221,'multiline':False]['text':' projection where each factor defines the weight of each metric. Then this','line_number':222,'multiline':False]['text':' score is compared against a threshold to prevent a branch from being','line_number':223,'multiline':False]['text':' removed.','line_number':224,'multiline':False]['text':' Limits on bytecode length and number of locals/arguments for Ion','line_number':231,'multiline':False]['text':' compilation. There are different (lower) limits for when off-thread Ion','line_number':232,'multiline':False]['text':' compilation isn't available.','line_number':233,'multiline':False]['text':' Force the used register allocator instead of letting the optimization','line_number':239,'multiline':False]['text':' pass decide.','line_number':240,'multiline':False]['text':' These are set to their actual values in InitializeJit.','line_number':263,'multiline':False]['text':' Toggles the optimization whereby offsets are folded into loads and not','line_number':267,'multiline':False]['text':' included in the bounds check.','line_number':268,'multiline':False]['text':' Controls whether two-tiered compilation should be requested when','line_number':271,'multiline':False]['text':' compiling a new wasm module, independently of other heuristics, and','line_number':272,'multiline':False]['text':' should be delayed to test both baseline and ion paths in compiled code,','line_number':273,'multiline':False]['text':' as well as the transition from one tier to the other.','line_number':274,'multiline':False]['text':' Until which wasm bytecode size should we accumulate functions, in order','line_number':277,'multiline':False]['text':' to compile efficiently on helper threads. Baseline code compiles much','line_number':278,'multiline':False]['text':' faster than Ion code so use scaled thresholds (see also bug 1320374).','line_number':279,'multiline':False]['text':' Cranelift compiles at about half the speed of Ion, but is much more','line_number':280,'multiline':False]['text':' affected by malloc/free costs, so set its threshold relatively high, in','line_number':281,'multiline':False]['text':' order to reduce overall allocation costs.  See bug 1586791.','line_number':282,'multiline':False]['text':' Toggles whether the traceLogger should be on or off.  In either case,','line_number':288,'multiline':False]['text':' some data structures will always be created and initialized such as','line_number':289,'multiline':False]['text':' the traceLoggerState.  However, unless this option is set to true','line_number':290,'multiline':False]['text':' the traceLogger will not be recording any events.','line_number':291,'multiline':False]['text':' Dumps a representation of parsed regexps to stderr','line_number':295,'multiline':False]['text':' Dumps the calls made to the regexp assembler to stderr','line_number':297,'multiline':False]['text':' Dumps the bytecodes interpreted by the regexp engine to stderr','line_number':299,'multiline':False]['text':' Dumps the changes made by the regexp peephole optimizer to stderr','line_number':301,'multiline':False]['text':' namespace jit','line_number':350,'multiline':False]['text':' namespace js','line_number':351,'multiline':False]