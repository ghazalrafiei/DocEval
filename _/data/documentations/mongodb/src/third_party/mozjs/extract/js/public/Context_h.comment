['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' JavaScript API. ','line_number':7,'multiline':True]['text':' [SMDOC] Nested Thread Data Structures (JSContext, JSRuntime)','line_number':13,'multiline':False]['text':'','line_number':14,'multiline':False]['text':' Spidermonkey has two nested data structures for representing threads,','line_number':15,'multiline':False]['text':' JSContext and JSRuntime. All JS threads are represented by a context.','line_number':16,'multiline':False]['text':' Contexts can contain runtimes. A runtime however is not present for','line_number':17,'multiline':False]['text':' all threads. Threads also interact with the GC. See "Nested GC','line_number':18,'multiline':False]['text':' DataStructures" for more info.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' Context','line_number':21,'multiline':False]['text':' -------','line_number':22,'multiline':False]['text':' JSContext represents a thread: there must be exactly one JSContext for each','line_number':23,'multiline':False]['text':' thread running JS/Wasm.','line_number':24,'multiline':False]['text':'','line_number':25,'multiline':False]['text':' Internally, helper threads can also have a JSContext. They do not always have','line_number':26,'multiline':False]['text':' an active context, but one may be requested by AutoSetHelperThreadContext,','line_number':27,'multiline':False]['text':' which activates a pre-allocated JSContext for the duration of its lifetime.','line_number':28,'multiline':False]['text':'','line_number':29,'multiline':False]['text':' Runtime','line_number':30,'multiline':False]['text':' -------','line_number':31,'multiline':False]['text':' JSRuntime is very similar to JSContext: each runtime belongs to one context','line_number':32,'multiline':False]['text':' (thread), but helper threads don't have their own runtimes (they're shared by','line_number':33,'multiline':False]['text':' all runtimes in the process and use the runtime of the task they're','line_number':34,'multiline':False]['text':' executing).','line_number':35,'multiline':False]['text':'','line_number':36,'multiline':False]['text':' Note:','line_number':37,'multiline':False]['text':' Locking, contexts, and memory allocation.','line_number':38,'multiline':False]['text':'','line_number':39,'multiline':False]['text':' It is important that SpiderMonkey be initialized, and the first context','line_number':40,'multiline':False]['text':' be created, in a single-threaded fashion.  Otherwise the behavior of the','line_number':41,'multiline':False]['text':' library is undefined.','line_number':42,'multiline':False]['text':' See:','line_number':43,'multiline':False]['text':' https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/JSAPI_reference','line_number':44,'multiline':False]['text':' Create a new context (and runtime) for this thread.','line_number':46,'multiline':False]['text':' Destroy a context allocated with JS_NewContext. Must be called on the thread','line_number':50,'multiline':False]['text':' that called JS_NewContext.','line_number':51,'multiline':False]['text':' namespace js ','line_number':68,'multiline':True]['text':'*
 * Asserts (in debug and release builds) that `obj` belongs to the current
 * thread's context.
 ','line_number':72,'multiline':True]['text':'*
 * Install a process-wide callback to validate script filenames. The JS engine
 * will invoke this callback for each JS script it parses or XDR decodes.
 *
 * If the callback returns |false|, an exception is thrown and parsing/decoding
 * will be aborted.
 *
 * See also CompileOptions::setSkipFilenameValidation to opt-out of the callback
 * for specific parse jobs.
 ','line_number':78,'multiline':True]['text':' namespace JS ','line_number':92,'multiline':True]['text':' js_Context_h','line_number':94,'multiline':False]