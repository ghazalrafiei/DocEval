['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':'*
 * The compiled representation of a RegExp, potentially shared among RegExp
 * instances created during separate evaluations of a single RegExp literal in
 * source code.
 ','line_number':7,'multiline':True]['text':' JS::RegExpFlag, JS::RegExpFlags','line_number':26,'multiline':False]['text':'
 * A RegExpShared is the compiled representation of a regexp. A RegExpShared is
 * potentially pointed to by multiple RegExpObjects. Additionally, C++ code may
 * have pointers to RegExpShareds on the stack. The RegExpShareds are kept in a
 * table so that they can be reused when compiling the same regex string.
 *
 * To save memory, a RegExpShared is not created for a RegExpObject until it is
 * needed for execution. When a RegExpShared needs to be created, it is looked
 * up in a per-compartment table to allow reuse between objects.
 *
 * During a GC, RegExpShared instances are marked and swept like GC things.
 * Usually, RegExpObjects clear their pointers to their RegExpShareds rather
 * than explicitly tracing them, so that the RegExpShared and any jitcode can
 * be reclaimed quicker. However, the RegExpShareds are traced through by
 * objects when we are preserving jitcode in their zone, to avoid the same
 * recompilation inefficiencies as normal Ion and baseline compilation.
 ','line_number':58,'multiline':True]['text':' Source to the RegExp, for lazy compilation. Stored in the cell header. ','line_number':112,'multiline':True]['text':' Tables referenced by JIT code.','line_number':132,'multiline':False]['text':' Internal functions. ','line_number':135,'multiline':True]['text':' Execute this RegExp on input starting from searchIndex, filling in matches.','line_number':156,'multiline':False]['text':' Register a table with this RegExpShared, and take ownership.','line_number':161,'multiline':False]['text':' Accessors ','line_number':164,'multiline':True]['text':' Use simple string matching for this regexp.','line_number':173,'multiline':False]['text':' Use the regular expression engine for this regexp.','line_number':176,'multiline':False]['text':'
   * The set of all RegExpShareds in the zone. On every GC, every RegExpShared
   * that was not marked is deleted and removed from the set.
   ','line_number':285,'multiline':True]['text':'
   * The template objects that the result of re.exec() is based on, if
   * there is a result. These are used in CreateRegExpMatchResult.
   * There are three template objects, each of which is an ArrayObject
   * with some additional properties. We decide which to use based on
   * the |hasIndices| (/d) flag.
   *
   *  Normal: Has |index|, |input|, and |groups| properties.
   *          Used for the result object if |hasIndices| is not set.
   *
   *  WithIndices: Has |index|, |input|, |groups|, and |indices| properties.
   *               Used for the result object if |hasIndices| is set.
   *
   *  Indices: Has a |groups| property. If |hasIndices| is set, used
   *           for the |.indices| property of the result object.
   ','line_number':319,'multiline':True]['text':'
   * The shape of RegExp.prototype object that satisfies following:
   *   * RegExp.prototype.flags getter is not modified
   *   * RegExp.prototype.global getter is not modified
   *   * RegExp.prototype.ignoreCase getter is not modified
   *   * RegExp.prototype.multiline getter is not modified
   *   * RegExp.prototype.dotAll getter is not modified
   *   * RegExp.prototype.sticky getter is not modified
   *   * RegExp.prototype.unicode getter is not modified
   *   * RegExp.prototype.exec is an own data property
   *   * RegExp.prototype[@@match] is an own data property
   *   * RegExp.prototype[@@search] is an own data property
   ','line_number':338,'multiline':True]['text':'
   * The shape of RegExp instance that satisfies following:
   *   * lastProperty is lastIndex
   *   * prototype is RegExp.prototype
   ','line_number':353,'multiline':True]['text':' Get or create template object used to base the result of .exec() on. ','line_number':388,'multiline':True]['text':' namespace js ','line_number':421,'multiline':True]['text':' namespace ubi','line_number':445,'multiline':False]['text':' namespace JS','line_number':446,'multiline':False]['text':' vm_RegExpShared_h ','line_number':448,'multiline':True]