['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 *
 * Copyright 2021 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ','line_number':1,'multiline':True]['text':' JSMSG_*','line_number':22,'multiline':False]['text':' No pre/post barrier needed as rval is rooted','line_number':78,'multiline':False]['text':' TODO/AnyRef-boxing: With boxed immediates and strings, the write','line_number':89,'multiline':False]['text':' barrier is going to have to be more complicated.','line_number':90,'multiline':False]['text':' If bi is manipulated other than test & storing, it would need','line_number':422,'multiline':False]['text':' to be rooted here.','line_number':423,'multiline':False]['text':' If UnboxAnyRef needs to allocate then we need a more complicated API, and','line_number':572,'multiline':False]['text':' we need to root the value in the callers, see comments in callExport().','line_number':573,'multiline':False]['text':' static ','line_number':586,'multiline':True]