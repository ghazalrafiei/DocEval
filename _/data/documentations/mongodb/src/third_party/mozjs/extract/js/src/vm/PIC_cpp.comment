['text':' -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 * vim: set ts=8 sts=2 et sw=2 tw=80:
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. ','line_number':1,'multiline':True]['text':' Get the canonical Array.prototype','line_number':44,'multiline':False]['text':' Get the canonical ArrayIterator.prototype','line_number':51,'multiline':False]['text':' From this point on, we can't fail.  Set initialized and fill the fields','line_number':58,'multiline':False]['text':' for the canonical Array.prototype and ArrayIterator.prototype objects.','line_number':59,'multiline':False]['text':' Shortcut returns below means Array for-of will never be optimizable,','line_number':64,'multiline':False]['text':' do set disabled_ now, and clear it later when we succeed.','line_number':65,'multiline':False]['text':' Look up Array.prototype[@@iterator], ensure it's a slotful shape.','line_number':68,'multiline':False]['text':' Get the referred value, and ensure it holds the canonical ArrayValues','line_number':75,'multiline':False]['text':' function.','line_number':76,'multiline':False]['text':' Look up the 'next' value on ArrayIterator.prototype','line_number':86,'multiline':False]['text':' Get the referred value, ensure it holds the canonical ArrayIteratorNext','line_number':93,'multiline':False]['text':' function.','line_number':94,'multiline':False]['text':' If PIC is not initialized, initialize it.','line_number':122,'multiline':False]['text':' Otherwise, if array state is no longer sane, reinitialize.','line_number':128,'multiline':False]['text':' If PIC is disabled, don't bother trying to optimize.','line_number':137,'multiline':False]['text':' By the time we get here, we should have a sane array state to work with.','line_number':142,'multiline':False]['text':' Ensure array's prototype is the actual Array.prototype','line_number':145,'multiline':False]['text':' Check if stub already exists.','line_number':150,'multiline':False]['text':' Ensure array doesn't define @@iterator directly.','line_number':156,'multiline':False]['text':' If the number of stubs is about to exceed the limit, throw away entire','line_number':161,'multiline':False]['text':' existing cache before adding new stubs.  We shouldn't really have heavy','line_number':162,'multiline':False]['text':' churn on these.','line_number':163,'multiline':False]['text':' Good to optimize now, create stub to add.','line_number':168,'multiline':False]['text':' Add the stub.','line_number':175,'multiline':False]['text':' If PIC is not initialized, initialize it.','line_number':189,'multiline':False]['text':' Otherwise, if array iterator state is no longer sane, reinitialize.','line_number':194,'multiline':False]['text':' If PIC is disabled, don't bother trying to optimize.','line_number':203,'multiline':False]['text':' By the time we get here, we should have a sane iterator state to work with.','line_number':208,'multiline':False]['text':' Ensure PIC is initialized and not disabled.','line_number':216,'multiline':False]['text':' Check if there is a matching stub.','line_number':219,'multiline':False]['text':' Ensure that canonical Array.prototype has matching shape.','line_number':230,'multiline':False]['text':' Ensure that Array.prototype[@@iterator] contains the','line_number':235,'multiline':False]['text':' canonical iterator function.','line_number':236,'multiline':False]['text':' Chain to isArrayNextStillSane.','line_number':241,'multiline':False]['text':' Should never reset a disabled_ stub.','line_number':246,'multiline':False]['text':' Erase the chain.','line_number':249,'multiline':False]['text':' Should never need to clear the chain of a disabled stub.','line_number':267,'multiline':False]['text':' Trace the pointers stored directly on the stub.','line_number':272,'multiline':False]['text':' Free all the stubs in the chain.','line_number':292,'multiline':False]['text':' addProperty','line_number':328,'multiline':False]['text':' delProperty','line_number':329,'multiline':False]['text':' enumerate','line_number':330,'multiline':False]['text':' newEnumerate','line_number':331,'multiline':False]['text':' resolve','line_number':332,'multiline':False]['text':' mayResolve','line_number':333,'multiline':False]['text':' finalize','line_number':334,'multiline':False]['text':' call','line_number':335,'multiline':False]['text':' hasInstance','line_number':336,'multiline':False]['text':' construct','line_number':337,'multiline':False]['text':' trace','line_number':338,'multiline':False]['text':' static ','line_number':345,'multiline':True]['text':' static ','line_number':363,'multiline':True]