['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * These values track the possible results from calling our assertion under unit tests.
 * However, since we're testing assertion logic these values actually describe the resulting control
 * flow from calling an assertion:
 * - ASSERT_PANIC that WT_RET_PANIC has been called as a result of a failing WT_RET_PANIC_ASSERT
 * - ASSERT_RET indicates that WT_RET_MSG has been called as a result of a failing WT_RET_ASSERT
 * - ASSERT_ERR that WT_ERR_MSG has been called as a result of a failing WT_ERR_ASSERT
 * and finally ASSERT_FIRED and NO_ASSERT_FIRED to indicate if an assertion - which would normally
 * abort WiredTiger - would have been triggered.
 ','line_number':17,'multiline':True]['text':' Clear the assertion flag and message for the next test step.','line_number':47,'multiline':False]['text':'
 * Wrapper to call WT_RET_ASSERT. This returns different values depending on whether WT_RET_ASSERT
 * fires or not.
 ','line_number':55,'multiline':True]['text':'
 * Wrapper to call WT_ERR_ASSERT. This returns different values depending on whether WT_ERR_ASSERT
 * fires or not.
 ','line_number':67,'multiline':True]['text':'
 * Wrapper to call WT_RET_PANIC_ASSERT. This returns different values depending on whether
 * WT_RET_PANIC_ASSERT fires or not.
 ','line_number':87,'multiline':True]['text':'
 * Wrapper to call WT_ASSERT_OPTIONAL. This returns different values depending on whether
 * WT_ASSERT_OPTIONAL fires or not.
 ','line_number':100,'multiline':True]['text':' Assert that all diagnostic assert categories are off. ','line_number':112,'multiline':True]['text':' Assert that all diagnostic assert categories are on. ','line_number':121,'multiline':True]['text':' Assert that all expected asserts (passed in via the "category" arg) fire. ','line_number':130,'multiline':True]['text':' Assert that the expected asserts don't fire (those not passed in via the "category" arg). ','line_number':147,'multiline':True]['text':'
     * Unit testing assertions requires that we have compiled with HAVE_DIAGNOSTIC=0 as
     * HAVE_DIAGNOSTIC=1 forces all assertion on at all times and we won't be able to test
     * functionality. This test catches exists to prevent us from testing in diagnostic mode.
     ','line_number':167,'multiline':True]['text':' Assert that regardless of connection configuration, asserts are always disabled/enabled. ','line_number':179,'multiline':True]['text':'
         * Assert that WT_ASSERT and WT_ASSERT_ALWAYS behave consistently regardless of the
         * diagnostic asserts configuration. This behavior occurs when running in non-diagnostic
         * mode: WT_ASSERT doesn't abort and WT_ASSERT_ALWAYS always aborts regardless of diagnostic
         * mode.
         ','line_number':187,'multiline':True]['text':' When WT_DIAGNOSTIC_ALL is enabled, all asserts are enabled. ','line_number':223,'multiline':True]['text':' When a category is enabled, all asserts for that category are enabled. ','line_number':234,'multiline':True]['text':' Asserts that categories are enabled/disabled following the connection configuration. ','line_number':244,'multiline':True]['text':' Checking state.','line_number':252,'multiline':False]['text':' Asserts that categories are enabled/disabled following the connection configuration. ','line_number':258,'multiline':True]['text':' Reconfigure with extra_diagnostics not provided. ','line_number':268,'multiline':True]['text':' Reconfigure the connection with extra_diagnostics as an empty list. ','line_number':279,'multiline':True]['text':' Reconfigure the connection with extra_diagnostics as a list with invalid item. ','line_number':291,'multiline':True]['text':' Reconfigure the connection with extra_diagnostics as a list of valid items. ','line_number':304,'multiline':True]['text':' Reconfigure with assertion categories changed from enabled->disabled and vice-versa. ','line_number':323,'multiline':True]