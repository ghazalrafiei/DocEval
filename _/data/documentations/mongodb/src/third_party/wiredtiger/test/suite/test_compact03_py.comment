['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' test_compact03.py','line_number':29,'multiline':False]['text':'   Test that compact doesn't reduce the file size when there are overflow values at the','line_number':30,'multiline':False]['text':'   end of file.','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' Test compact behaviour with overflow values.','line_number':38,'multiline':False]['text':' Enable stats and use a cache size that can fit table in the memory.','line_number':54,'multiline':False]['text':' We want to test how compaction interacts with overflow values. Test flow is as follows:','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':' 1. Populate a table with relatively small page size.','line_number':59,'multiline':False]['text':' 2. Checkpoint and get stats on the table to confirm the size.','line_number':60,'multiline':False]['text':' 3. Add few thousand overflow values. It is expected that these will be written at the end of','line_number':61,'multiline':False]['text':'    file.','line_number':62,'multiline':False]['text':' 4. Perform checkpoint to ensure overflow values are written on disk.','line_number':63,'multiline':False]['text':' 5. Delete middle ~90% of the normal values in the table.','line_number':64,'multiline':False]['text':' 6. Perform checkpoint so compact can find something to work with.','line_number':65,'multiline':False]['text':' 7. Call compact.','line_number':66,'multiline':False]['text':' 8. Get stats on compacted table expecting that there will no change in size given we have','line_number':67,'multiline':False]['text':'    overflow keys at the end of file.','line_number':68,'multiline':False]['text':' 9. Insert some normal values again. They will be written in the free extents in the middle','line_number':69,'multiline':False]['text':'    of the file. Therefore, expect no increase in file size.','line_number':70,'multiline':False]['text':'','line_number':71,'multiline':False]['text':' We want to have around 20000 leaf pages. With minimum 1KB page allocation size, the table','line_number':72,'multiline':False]['text':' is expected to have at least 25 MByte worth of data. We can then experiment with deleting','line_number':73,'multiline':False]['text':' range of keys in middle to test how compaction works.','line_number':74,'multiline':False]['text':' To create ~25 MB table','line_number':78,'multiline':False]['text':' Mbytes','line_number':79,'multiline':False]['text':' Return stats that track the progress of compaction.','line_number':82,'multiline':False]['text':' Return the size of the file','line_number':93,'multiline':False]['text':' To allow this to work on systems without ftruncate,','line_number':95,'multiline':False]['text':' get the portion of the file allocated, via 'statistics=(all)',','line_number':96,'multiline':False]['text':' not the physical file size, via 'statistics=(size)'.','line_number':97,'multiline':False]['text':' Create a table, add keys with both big and small values.','line_number':104,'multiline':False]['text':' FIXME-WT-11399: check the other assertions that are skipped when the tiered hook is','line_number':106,'multiline':False]['text':' enabled.','line_number':107,'multiline':False]['text':' 1. Create a table with relatively small page size.','line_number':112,'multiline':False]['text':' 2. Checkpoint and get stats on the table to confirm the size.','line_number':120,'multiline':False]['text':' 3. Add overflow values.','line_number':127,'multiline':False]['text':' 4. Perform checkpoint to ensure overflow values are written to the disk.','line_number':133,'multiline':False]['text':' 5. Delete middle ~90% of the normal values in the table.','line_number':140,'multiline':False]['text':' 6. Perform checkpoint to ensure we have blocks available in the middle of the file.','line_number':156,'multiline':False]['text':' 7 & 8. Call compact. We expect that the overflow values at the end of the file are not','line_number':159,'multiline':False]['text':'        rewritten and therefore the file size will mostly remain the same. Give a leeway','line_number':160,'multiline':False]['text':'        of 10%.','line_number':161,'multiline':False]['text':' Verify that we did indeed rewrote some pages but that didn't help with the file size.','line_number':168,'multiline':False]['text':' 9. Insert some normal values and expect that file size won't increase as free extents','line_number':175,'multiline':False]['text':'    in the middle of the file will be used to write new data.','line_number':176,'multiline':False]['text':' Insert around ~50% of the normal values in the table that we deleted earlier.','line_number':178,'multiline':False]['text':' Perform compact.','line_number':186,'multiline':False]['text':' Test that the file size doesn't increase.','line_number':189,'multiline':False]