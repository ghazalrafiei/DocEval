['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_truncate14.py','line_number':35,'multiline':False]['text':' Generate very large namespace gaps with truncate.','line_number':36,'multiline':False]['text':' Hook to run using remove instead of truncate for reference. This should not alter the','line_number':42,'multiline':False]['text':' behavior... but may if things are broken. Disable the reference version by default as it's','line_number':43,'multiline':False]['text':' only useful when investigating behavior changes. This list is first in the make_scenarios','line_number':44,'multiline':False]['text':' call so the additional cases don't change the scenario numbering.','line_number':45,'multiline':False]['text':'('remove', dict(trunc_with_remove=True)),','line_number':48,'multiline':False]['text':' Do not run this test on FLCS. It would need to materialize the entire key space,','line_number':52,'multiline':False]['text':' which would be extremely slow and use extremely large amounts of memory.','line_number':53,'multiline':False]['text':'('column_fix', dict(key_format='r', value_format='8t',','line_number':54,'multiline':False]['text':'    extraconfig=',allocation_size=512,leaf_page_max=512')),','line_number':55,'multiline':False]['text':' Make all the values different to avoid having VLCS RLE condense the table.','line_number':65,'multiline':False]['text':' Because remove clears the cursor position, removing by cursor-next is a nuisance.','line_number':73,'multiline':False]['text':' Create a table without logging.','line_number':130,'multiline':False]['text':' Pin oldest and stable timestamps to 10.','line_number':142,'multiline':False]['text':' Write out some data at time 20. This won't fit in a single transaction,','line_number':148,'multiline':False]['text':' but we'll treat it all as a single logical unit with the same commit','line_number':149,'multiline':False]['text':' timestamp.','line_number':150,'multiline':False]['text':' Write out a dense blob of data at the beginning of the namespace.','line_number':153,'multiline':False]['text':' Commit periodically to avoid overflowing the cache.','line_number':160,'multiline':False]['text':' We'll start deleting from the first sparse key.','line_number':165,'multiline':False]['text':' Write out a bunch of very sparse data.','line_number':168,'multiline':False]['text':' (Intentionally don't commit at this specific point. If something goes wrong on a','line_number':169,'multiline':False]['text':' per-transaction basis, it'll be easier to figure out what and how if that doesn't','line_number':170,'multiline':False]['text':' intersect the test's logical groupings.)','line_number':171,'multiline':False]['text':' Commit periodically to avoid overflowing the cache.','line_number':176,'multiline':False]['text':' We'll delete up to (and including) the first key in the second blob.','line_number':181,'multiline':False]['text':' Now write another blob.','line_number':184,'multiline':False]['text':' Commit periodically to avoid overflowing the cache.','line_number':189,'multiline':False]['text':' Commit this at time 20.','line_number':194,'multiline':False]['text':' Read back the data, just in case.','line_number':198,'multiline':False]['text':' Mark it stable.','line_number':201,'multiline':False]['text':' Reopen the connection to flush the cache so we can fast-truncate.','line_number':204,'multiline':False]['text':' Truncate the entire sparse range at time 30.','line_number':207,'multiline':False]['text':' Check stats to make sure we fast-deleted at least one page.','line_number':212,'multiline':False]['text':' (Except if we're running with trunc_with_remove.)','line_number':213,'multiline':False]['text':' There's no way the test can guess whether fast delete is possible when','line_number':217,'multiline':False]['text':' flush_tier calls are "randomly" inserted.','line_number':218,'multiline':False]['text':' Mark it stable.','line_number':225,'multiline':False]['text':' Read back the (non-truncated) data.','line_number':228,'multiline':False]['text':' Since this test is specifically about large namespace gaps, we don't need to','line_number':231,'multiline':False]['text':' exercise every combination of truncate states; just the ones where the size of','line_number':232,'multiline':False]['text':' the gap might be relevant. That means:','line_number':233,'multiline':False]['text':'    1. The instantiate code, because it loops over keys.','line_number':234,'multiline':False]['text':'    2. Internal page reconciliation when the truncate is not yet globally visible.','line_number':235,'multiline':False]['text':'    3. Internal page reconciliation when the truncate is globally visible.','line_number':236,'multiline':False]['text':' (It would be nice to test both checkpointing and eviction of internal pages, but','line_number':237,'multiline':False]['text':' we can't force internal page evictions from Python.)','line_number':238,'multiline':False]['text':' Optionally read back the data before the truncate.','line_number':241,'multiline':False]['text':' Read back the data again.','line_number':249,'multiline':False]