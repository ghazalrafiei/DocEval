['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' [TEST_TAGS]','line_number':29,'multiline':False]['text':' schema_api','line_number':30,'multiline':False]['text':' indexes','line_number':31,'multiline':False]['text':' [END_TAGS]','line_number':32,'multiline':False]['text':' Windows does not getrlimit/setrlimit so we must catch the resource','line_number':40,'multiline':False]['text':' module load','line_number':41,'multiline':False]['text':' test_schema03.py','line_number':46,'multiline':False]['text':'    Bigger, more 'randomly generated' schemas and data.','line_number':47,'multiline':False]['text':'    This test is complex.  If it fails, rerun with modified values for','line_number':48,'multiline':False]['text':' SHOW_PYTHON* variables.','line_number':49,'multiline':False]['text':' list of related cgconfig','line_number':63,'multiline':False]['text':' list of related idxconfig','line_number':64,'multiline':False]['text':' how many key columns','line_number':65,'multiline':False]['text':' how many value columns','line_number':66,'multiline':False]['text':' we don't want to insert the keys in order,','line_number':71,'multiline':False]['text':' so generate them with backwards digits e.g.','line_number':72,'multiline':False]['text':' 235 => 532.  However, 100 backwards is 001,','line_number':73,'multiline':False]['text':' so we append a positive integer to the end','line_number':74,'multiline':False]['text':' before reversing.','line_number':75,'multiline':False]['text':' ASSUME: each format is 1 char','line_number':80,'multiline':False]['text':' ASSUME: each format is 1 char','line_number':92,'multiline':False]['text':' Each columngroup must have at least one column, so','line_number':105,'multiline':False]['text':' the only choice about distribution is with the','line_number':106,'multiline':False]['text':' excess columns.','line_number':107,'multiline':False]['text':' Initially, all groups get column from the collist','line_number':112,'multiline':False]['text':' Then divy up remainder in the collist','line_number':117,'multiline':False]['text':' collist should be emptied','line_number':124,'multiline':False]['text':' KNOWN LIMITATION: Indices should not include primary keys','line_number':133,'multiline':False]['text':' Remove this statement when the limitation is fixed.','line_number':134,'multiline':False]['text':'startcol = self.nkeys','line_number':135,'multiline':False]['text':' END KNOWN LIMITATION.','line_number':136,'multiline':False]['text':' Initially, all indices get one column from the collist.','line_number':140,'multiline':False]['text':' Overlaps are allowed.  Then probabalistically, add some','line_number':141,'multiline':False]['text':' more columns.','line_number':142,'multiline':False]['text':' ASSUME: each format is 1 char','line_number':152,'multiline':False]['text':' ASSUME: each format is 1 char','line_number':155,'multiline':False]['text':' 0 or 1 depending on which set to create them.','line_number':167,'multiline':False]['text':' 0 or 1 depending on which set to create them.','line_number':177,'multiline':False]['text':' piece','line_number':178,'multiline':False]['text':' references the tabconfig','line_number':179,'multiline':False]['text':' The column is a value in the primary table','line_number':188,'multiline':False]['text':' The column is a key in the primary table','line_number':191,'multiline':False]['text':' Boost cache size and number of sessions for this test','line_number':226,'multiline':False]['text':'###############################################################','line_number':229,'multiline':False]['text':' These three variables can be altered to help generate','line_number':230,'multiline':False]['text':' and pare down failing test cases.','line_number':231,'multiline':False]['text':' Set to true to get python test program fragment on stdout,','line_number':233,'multiline':False]['text':' used by show_python() below.','line_number':234,'multiline':False]['text':' When SHOW_PYTHON is set, we print an enormous amount of output.','line_number':237,'multiline':False]['text':' To only print for a given scenario, set this','line_number':238,'multiline':False]['text':' could be e.g. [2] or [0,1]','line_number':239,'multiline':False]['text':' To print verbosely for only a given table, set this','line_number':241,'multiline':False]['text':' could be e.g. [2] or [0,1]','line_number':242,'multiline':False]['text':'###############################################################','line_number':244,'multiline':False]['text':' Set whenever we are working with a table','line_number':246,'multiline':False]['text':' We need to have a large number of open files available','line_number':251,'multiline':False]['text':' to run this test.  We probably don't need quite this many,','line_number':252,'multiline':False]['text':' but boost it up to this limit anyway.','line_number':253,'multiline':False]['text':' Note: the set can be reduced here for debugging, e.g.','line_number':285,'multiline':False]['text':' scenarios = scenarios[40:44]','line_number':286,'multiline':False]['text':'   or','line_number':287,'multiline':False]['text':' scenarios = [ scenarios[0], scenarios[30], scenarios[40] ]','line_number':288,'multiline':False]['text':'wttest.WiredTigerTestCase.printVerbose(2, 'test_schema03: running ' + \','line_number':290,'multiline':False]['text':'                      str(len(scenarios)) + ' of ' + \','line_number':291,'multiline':False]['text':'                      str(len(all_scenarios)) + ' possible scenarios')','line_number':292,'multiline':False]['text':' This test requires a large number of open files.','line_number':294,'multiline':False]['text':' Increase our resource limits before we start','line_number':295,'multiline':False]['text':' Set up connection config.','line_number':307,'multiline':False]['text':' Report known limitations in the test,','line_number':358,'multiline':False]['text':' we'll work around these later, in a loop where we don't want to print.','line_number':359,'multiline':False]['text':' Column groups are created in two different times.','line_number':362,'multiline':False]['text':' We call these two batches 'createsets'.','line_number':363,'multiline':False]['text':' So we don't have the exactly the same number of column groups','line_number':364,'multiline':False]['text':' for each table, for tests that indicate >1 colgroup, we','line_number':365,'multiline':False]['text':' increase the number of column groups for each table','line_number':366,'multiline':False]['text':' KNOWN LIMITATION: Column groups created after','line_number':383,'multiline':False]['text':' indices confuses things.  So for now, put all','line_number':384,'multiline':False]['text':' column group creation in the first set.','line_number':385,'multiline':False]['text':' Remove this statement when the limitation is fixed.','line_number':386,'multiline':False]['text':' END KNOWN LIMITATION','line_number':388,'multiline':False]['text':' The same idea for indices, except that we create them in','line_number':393,'multiline':False]['text':' three sets','line_number':394,'multiline':False]['text':' We'll base the number of key/value columns','line_number':406,'multiline':False]['text':' loosely on the number of column groups and indices.','line_number':407,'multiline':False]['text':' we need at least one value per column group','line_number':414,'multiline':False]['text':' Simple naming (we'll test odd naming elsewhere):','line_number':422,'multiline':False]['text':'  tables named 't0' --> 't<N>'','line_number':423,'multiline':False]['text':'  within each table:','line_number':424,'multiline':False]['text':'     columns named 'c0' --> 'c<N>'','line_number':425,'multiline':False]['text':'     colgroups named 'g0' --> 'g<N>'','line_number':426,'multiline':False]['text':'     indices named 'i0' --> 'i<N>'','line_number':427,'multiline':False]['text':' indices are not declared here','line_number':444,'multiline':False]['text':' Create column groups in this set','line_number':454,'multiline':False]['text':' e.g. self.session.create("colgroup:t0:g1", "columns=(c3,c4)")','line_number':455,'multiline':False]['text':' Create indices in this set','line_number':464,'multiline':False]['text':' e.g. self.session.create("index:t0:i1", "columns=(c3,c4)")','line_number':465,'multiline':False]['text':' populate first batch','line_number':474,'multiline':False]['text':' Create indices in third set','line_number':482,'multiline':False]['text':' populate second batch','line_number':490,'multiline':False]['text':' for each index, check each entry','line_number':551,'multiline':False]['text':' Although it's possible to open an index on some partial','line_number':553,'multiline':False]['text':' list of columns, we'll keep it simple here, and always','line_number':554,'multiline':False]['text':' use all columns.','line_number':555,'multiline':False]