['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_join01.py','line_number':32,'multiline':False]['text':'    Join operations','line_number':33,'multiline':False]['text':' Basic tests for join','line_number':34,'multiline':False]['text':' We need statistics for these tests.','line_number':74,'multiline':False]['text':' multiples of 3 sort first','line_number':83,'multiline':False]['text':' Common function for testing iteration of join cursors','line_number':86,'multiline':False]['text':' See comments in join_common()','line_number':88,'multiline':False]['text':' The order that the results are seen depends on','line_number':89,'multiline':False]['text':' the ordering of the joins.  Specifically, the first','line_number':90,'multiline':False]['text':' join drives the order that results are seen.','line_number':91,'multiline':False]['text':' our projection reverses the values and adds the key','line_number':113,'multiline':False]['text':' Stats are collected twice: after iterating','line_number':127,'multiline':False]['text':' through the join cursor once, and secondly after resetting','line_number':128,'multiline':False]['text':' the join cursor and iterating again.','line_number':129,'multiline':False]['text':' pick a stat we always expect to see','line_number':132,'multiline':False]['text':' All of the expect strings should appear','line_number':156,'multiline':False]['text':' Reset the cursor, we're called multiple times.','line_number':161,'multiline':False]['text':'self.tty('->join(jc, uri="' + refc.uri +','line_number':184,'multiline':False]['text':'         '", config="' + str(config) + '"')','line_number':185,'multiline':False]['text':'self.tty('->')','line_number':189,'multiline':False]['text':' Common function for testing the most basic functionality','line_number':202,'multiline':False]['text':' of joins','line_number':203,'multiline':False]['text':'self.tty('join_common(' + joincfg0 + ',' + joincfg1 + ',' +','line_number':211,'multiline':False]['text':'         str(do_proj) + ',' + str(do_nested) + ',' +','line_number':212,'multiline':False]['text':'         str(do_stats) + ',' + str(join_order) + ')')','line_number':213,'multiline':False]['text':' cursors to be joined','line_number':216,'multiline':False]['text':' Reversed values plus key','line_number':232,'multiline':False]['text':' Default projection (v0,v1,v2)','line_number':234,'multiline':False]['text':' We join on index2 first, not using bloom indices.','line_number':236,'multiline':False]['text':' This defines the order that items are returned.','line_number':237,'multiline':False]['text':' index2 sorts multiples of 3 first (see gen_values())','line_number':238,'multiline':False]['text':' and by using 'gt' and key 99, we'll skip multiples of 3,','line_number':239,'multiline':False]['text':' and examine primary keys 2,5,8,...,95,98,1,4,7,...,94,97.','line_number':240,'multiline':False]['text':' Adding a projection to a reference cursor should be allowed.','line_number':243,'multiline':False]['text':' skips all entries w/ primary key divisible by three','line_number':245,'multiline':False]['text':' Then select all the numbers 0-99 whose string representation','line_number':249,'multiline':False]['text':' sort >= '60'.','line_number':250,'multiline':False]['text':' Then select all numbers whose reverse string representation','line_number':260,'multiline':False]['text':' is in '20' < x < '40'.','line_number':261,'multiline':False]['text':' Numbers that satisfy these 3 conditions (with ordering implied by c2):','line_number':272,'multiline':False]['text':'    [73, 82, 62, 83, 92].','line_number':273,'multiline':False]['text':'','line_number':274,'multiline':False]['text':' After iterating, we should be able to reset and iterate again.','line_number':275,'multiline':False]['text':' To test nesting, we create two new levels of conditions:','line_number':277,'multiline':False]['text':'','line_number':278,'multiline':False]['text':'     x == 72 or x == 73 or x == 82 or x == 83 or','line_number':279,'multiline':False]['text':'       (x >= 90 and x <= 99)','line_number':280,'multiline':False]['text':'','line_number':281,'multiline':False]['text':' that will get AND-ed into our existing join.  The expected','line_number':282,'multiline':False]['text':' result is   [73, 82, 83, 92].','line_number':283,'multiline':False]['text':'','line_number':284,'multiline':False]['text':' We don't specify the projection here, it should be picked up','line_number':285,'multiline':False]['text':' from the 'enclosing' join.','line_number':286,'multiline':False]['text':' joincfg left out','line_number':293,'multiline':False]