['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * table_verify --
 *     Verify a single table.
 ','line_number':31,'multiline':True]['text':'
 * table_mirror_row_next --
 *     Move to the next row-store original record.
 ','line_number':55,'multiline':True]['text':' RS tables insert records in the table, skip to the next original key/value pair. ','line_number':65,'multiline':True]['text':' WT_ROLLBACK isn't illegal, but it would mean restarting the verify somehow. ','line_number':69,'multiline':True]['text':' The original keys are either short or have ".00" as a suffix. ','line_number':72,'multiline':True]['text':' There may be a common key prefix, skip over it. ','line_number':80,'multiline':True]['text':'
 * table_mirror_fail_msg --
 *     Messages on failure.
 ','line_number':85,'multiline':True]['text':'
 * table_mirror_fail_msg_flcs --
 *     Messages on failure, for when the table is FLCS.
 ','line_number':116,'multiline':True]['text':'
 * position_cursor_before --
 *     Place a cursor on the key directly preceding the target key.
 ','line_number':140,'multiline':True]['text':' If we're on or past the target key then move backwards one key. ','line_number':166,'multiline':True]['text':'
         * WT_NOTFOUND is ok here since any subsequent cursor->next calls will start from the
         * beginning of the table.
         ','line_number':169,'multiline':True]['text':'
 * table_verify_mirror --
 *     Verify that a mirrored pair of tables contain the same mirrored entries. If a checkpoint is
 *     provided compare the tables using checkpoint cursors. If thread info is provided validate
 *     within its key range (inclusive).
 ','line_number':179,'multiline':True]['text':' -Wconditional-uninitialized ','line_number':200,'multiline':True]['text':' -Wconditional-uninitialized ','line_number':201,'multiline':True]['text':' Optionally open a checkpoint to verify. ','line_number':208,'multiline':True]['text':'
     * If opening a checkpoint, retry if the cursor checkpoint IDs don't match, it just means that a
     * checkpoint happened between the two open calls.
     ','line_number':212,'multiline':True]['text':'
     * By default compare the entire range of keys, however if thread info is provided the start/end
     * key ranges can be used instead. These ranges follow the same rules as truncate; If the
     * provided value is zero treat that as the start/end of the table.
     ','line_number':237,'multiline':True]['text':'
             * RS and VLCS skip over removed entries, FLCS returns a value of 0. Skip to the next
             * matching key number or the next nonzero value. If the latter comes early, we'll visit
             * the mismatch logic below.
             ','line_number':274,'multiline':True]['text':'
         * Tables run out of keys at different times as RS inserts between the initial table rows
         * and VLCS/FLCS inserts after the initial table rows. There's not much to say about the
         * relationships between them (especially as we skip deleted rows in RS and VLCS, so our
         * last successful check can be before the end of the original rows). If we run out of keys,
         * we're done. If both keys are past the end of the original keys, we're done. There are
         * some potential problems we're not going to catch at the end of the original rows, but
         * those problems should also appear in the middle of the tree.
         *
         * If we have two key/value pairs from the original rows, assert the keys have the same key
         * number (the keys themselves won't match), and keys are larger than or equal to the
         * counter. If the counter is smaller than the keys, that means rows were deleted, which is
         * expected.
         ','line_number':303,'multiline':True]['text':' Dump the cursor pages for the first failure. ','line_number':344,'multiline':True]['text':'
                 * We can't continue if the keys don't match, otherwise, optionally continue showing
                 * failures, up to 20.
                 ','line_number':371,'multiline':True]['text':' Report progress (unless verifying checkpoints which happens during live operations). ','line_number':380,'multiline':True]['text':'
         * Failures in methods using record numbers may match on the key even after reset. Only
         * update the last successful matched key if we didn't have a failure or at least one table
         * is not using record numbers.
         ','line_number':384,'multiline':True]['text':'
 * wts_verify --
 *     Verify the database tables.
 ','line_number':398,'multiline':True]['text':'
     * Individual object verification. Do a full checkpoint to reduce the possibility of returning
     * EBUSY from the following verify calls.
     ','line_number':411,'multiline':True]['text':'
     * Optionally compare any mirrored objects. If this is a reopen, check and see if salvage was
     * tested on the database. In that case, we can't do mirror verification because salvage will
     * have modified some rows leading to failure.
     ','line_number':420,'multiline':True]['text':'
 * wts_verify_mirrored_truncate --
 *     At the end of a mirrored truncate all tables must contain the same keys. It's ok if a
 *     parallel insert has added keys back inside the truncated range as long as all mirror tables
 *     have that same key. Verifies can be expensive so we limit them to smaller ranges and only
 *     infrequently check larger ranges.
 ','line_number':438,'multiline':True]['text':' 10% of the time verify large ranges. ','line_number':459,'multiline':True]['text':'
 * wts_verify_mirrors --
 *     Verify all mirrored tables contain the same mirrored entries.
 ','line_number':463,'multiline':True]