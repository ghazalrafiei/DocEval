['text':' Copyright (c) 2010 testtools developers. See LICENSE for details.','line_number':1,'multiline':False]['text':' A function decorated as not being re-entrant will raise a','line_number':38,'multiline':False]['text':' _spinner.ReentryError if it is called while it is running.','line_number':39,'multiline':False]['text':' _spinner.extract_result raises _spinner.DeferredNotFired if it's','line_number':69,'multiline':False]['text':' given a Deferred that has not fired.','line_number':70,'multiline':False]['text':' _spinner.extract_result returns the value of the Deferred if it has','line_number':75,'multiline':False]['text':' fired successfully.','line_number':76,'multiline':False]['text':' _spinner.extract_result raises the failure's exception if it's given','line_number':82,'multiline':False]['text':' a Deferred that is failing.','line_number':83,'multiline':False]['text':' run_in_reactor actually calls the function given to it.','line_number':131,'multiline':False]['text':' run_in_reactor returns the value returned by the function given to','line_number':138,'multiline':False]['text':' it.','line_number':139,'multiline':False]['text':' If the given function raises an error, run_in_reactor re-raises that','line_number':145,'multiline':False]['text':' error.','line_number':146,'multiline':False]['text':' run_in_reactor passes keyword arguments on.','line_number':152,'multiline':False]['text':' run_in_reactor raises an error if it is called inside another call','line_number':159,'multiline':False]['text':' to run_in_reactor.','line_number':160,'multiline':False]['text':' If the given function returns a Deferred, run_in_reactor returns the','line_number':167,'multiline':False]['text':' value in the Deferred at the end of the callback chain.','line_number':168,'multiline':False]['text':' If the function takes too long to run, we raise a','line_number':188,'multiline':False]['text':' _spinner.TimeoutError.','line_number':189,'multiline':False]['text':' If the reactor hasn't spun yet, then there cannot be any junk.','line_number':196,'multiline':False]['text':' If there's nothing going on in the reactor, then clean does nothing','line_number':201,'multiline':False]['text':' and returns an empty list.','line_number':202,'multiline':False]['text':' If there's a delayed call in the reactor, then clean cancels it and','line_number':208,'multiline':False]['text':' returns an empty list.','line_number':209,'multiline':False]['text':' If there's a delayed call that's just been cancelled, then it's no','line_number':218,'multiline':False]['text':' longer there.','line_number':219,'multiline':False]['text':' If there's still a selectable (e.g. a listening socket), then','line_number':228,'multiline':False]['text':' clean() removes it from the reactor's registry.','line_number':229,'multiline':False]['text':'','line_number':230,'multiline':False]['text':' Note that the socket is left open. This emulates a bug in trial.','line_number':231,'multiline':False]['text':' Python before 2.5 has a race condition with thread handling where','line_number':248,'multiline':False]['text':' join() does not remove threads from enumerate before returning - the','line_number':249,'multiline':False]['text':' thread being joined does the removal. This was fixed in Python 2.5','line_number':250,'multiline':False]['text':' but we still support 2.4, so we have to workaround the issue.','line_number':251,'multiline':False]['text':' http://bugs.python.org/issue1703448.','line_number':252,'multiline':False]['text':' If 'run' is given a function that leaves the reactor dirty in some','line_number':258,'multiline':False]['text':' way, 'run' will clean up the reactor and then store information','line_number':259,'multiline':False]['text':' about the junk. This information can be got using get_junk.','line_number':260,'multiline':False]['text':' If 'run' is called and there's still junk in the spinner's junk','line_number':269,'multiline':False]['text':' list, then the spinner will refuse to run.','line_number':270,'multiline':False]['text':' If 'run' is called and there's still junk in the spinner's junk','line_number':280,'multiline':False]['text':' list, then the spinner will refuse to run.','line_number':281,'multiline':False]['text':' If we get a SIGINT during a run, we raise _spinner.NoResultError.','line_number':293,'multiline':False]['text':' If we get a SIGINT during a run, we raise _spinner.NoResultError.','line_number':307,'multiline':False]['text':' This test is exactly the same as test_sigint_raises_no_result_error,','line_number':308,'multiline':False]['text':' and exists to make sure we haven't futzed with state.','line_number':309,'multiline':False]['text':' If we get a SIGINT during a run, we raise _spinner.NoResultError.','line_number':314,'multiline':False]