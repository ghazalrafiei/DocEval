['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * kv_transaction_state --
 *     The transaction state.
 ','line_number':50,'multiline':True]['text':'
 * k_initial_commit_timestamp --
 *     The initial commit timestamp that we will temporarily use until the user specifies the actual
 *     commit timestamp.
 ','line_number':61,'multiline':True]['text':'
 * kv_transaction --
 *     A transaction in a key-value database.
 ','line_number':68,'multiline':True]['text':'
     * kv_transaction::kv_transaction --
     *     Create a new instance of the transaction.
     ','line_number':75,'multiline':True]['text':'
     * kv_transaction::id --
     *     Get the transaction's ID.
     ','line_number':91,'multiline':True]['text':'
     * kv_transaction::commit_timestamp --
     *     Get the transaction's commit timestamp, if set.
     ','line_number':101,'multiline':True]['text':'
     * kv_transaction::durable_timestamp --
     *     Get the transaction's durable timestamp, if set.
     ','line_number':111,'multiline':True]['text':'
     * kv_transaction::prepare_timestamp --
     *     Get the transaction's prepare timestamp, if set.
     ','line_number':121,'multiline':True]['text':'
     * kv_transaction::commit_timestamp --
     *     Get the transaction's read timestamp, if set.
     ','line_number':131,'multiline':True]['text':'
     * kv_transaction::failed --
     *     Check whether the transaction has failed.
     ','line_number':141,'multiline':True]['text':'
     * kv_transaction::state --
     *     Get the transaction's state.
     ','line_number':151,'multiline':True]['text':'
     * kv_transaction::snapshot --
     *     Get the transaction snapshot.
     ','line_number':161,'multiline':True]['text':'
     * kv_transaction::visible_update --
     *     Check whether the given update is visible for this transaction.
     ','line_number':171,'multiline':True]['text':'
     * kv_transaction::add_update --
     *     Add update. The update should be at this point already incorporated in the table.
     ','line_number':181,'multiline':True]['text':'
     * kv_transaction::commit --
     *     Commit the transaction.
     ','line_number':187,'multiline':True]['text':'
     * kv_transaction::prepare --
     *     Prepare the transaction.
     ','line_number':194,'multiline':True]['text':'
     * kv_transaction::fail --
     *     Mark the transaction as failed.
     ','line_number':200,'multiline':True]['text':'
     * kv_transaction::reset_snapshot --
     *     Reset the transaction snapshot.
     ','line_number':210,'multiline':True]['text':'
     * kv_transaction::rollback --
     *     Abort the transaction.
     ','line_number':216,'multiline':True]['text':'
     * kv_transaction::set_commit_timestamp --
     *     Set the commit timestamp for all subsequent updates.
     ','line_number':222,'multiline':True]['text':'
     * kv_transaction::set_wt_metadata --
     *     If this transaction was imported from WiredTiger, remember the corresponding metadata.
     *     This can be done only before the first update is added to the transaction.
     ','line_number':228,'multiline':True]['text':'
     * kv_transaction::wt_id --
     *     Get the WiredTiger ID, if available.
     ','line_number':243,'multiline':True]['text':'
     * kv_transaction::wt_base_write_gen --
     *     Get the WiredTiger base write generation number, if available.
     ','line_number':253,'multiline':True]['text':'
     * kv_transaction::assert_in_progress_or_prepared --
     *     Assert that the transaction is in progress or prepared.
     ','line_number':264,'multiline':True]['text':' The lifetime of the transaction must not exceed the lifetime of the database. ','line_number':281,'multiline':True]['text':' Transaction information for updates imported from WiredTiger's debug log. ','line_number':288,'multiline':True]['text':'
 * kv_transaction_ptr --
 *     A shared pointer to the transaction.
 ','line_number':293,'multiline':True]['text':' namespace model ','line_number':299,'multiline':True]