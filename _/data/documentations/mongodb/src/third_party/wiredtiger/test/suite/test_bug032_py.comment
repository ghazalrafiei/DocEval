['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_bug032.py','line_number':33,'multiline':False]['text':' This tests for the scenario discovered in WT-11845.','line_number':34,'multiline':False]['text':' Before WT-11845 fast truncate determined if a page could be fast truncated by','line_number':35,'multiline':False]['text':' looking at the pages aggregated timestamp. This would lead to keys being incorrectly','line_number':36,'multiline':False]['text':' truncated if:','line_number':37,'multiline':False]['text':' - Two transactions txn1 and txn2 have ids 10 and 20 respectively','line_number':38,'multiline':False]['text':' - txn2 is committed and txn1 is still active while a truncate transaction begins.','line_number':39,'multiline':False]['text':'   txn2 is visible to the truncate while txn1 is not.','line_number':40,'multiline':False]['text':' - txn1 is then committed and a page containing updates from both transactions is written to disk.','line_number':41,'multiline':False]['text':'   The aggregated timestamp uses txn id 20.','line_number':42,'multiline':False]['text':' - Truncate reads the aggregated timestamp of the page (id 20) and determines it is visible.','line_number':43,'multiline':False]['text':'   The page is truncated even though it contains updates from txn1 which is not visible to the','line_number':44,'multiline':False]['text':'   truncate operation.','line_number':45,'multiline':False]['text':' The key to be inserted and truncated in parallel, as described in the test description.','line_number':68,'multiline':False]['text':' 512 byte keys. We're limiting leaf_page_max to 10KB which will give us ~20 keys per page.','line_number':71,'multiline':False]['text':' Create a table and populate it','line_number':74,'multiline':False]['text':' Remove txn1's key which was added by the populate phase. We want truncate and insert to race in','line_number':79,'multiline':False]['text':' a way they aren't aware of each other. If there's an existing version of the key then txn1's','line_number':80,'multiline':False]['text':' insert becomes a modify and truncate will see the parallel modification, rolling back instead','line_number':81,'multiline':False]['text':' of truncating.','line_number':82,'multiline':False]['text':' Perform an in txn1 but don't commit it.','line_number':90,'multiline':False]['text':' Start and commit txn2. This has a larger txn id than txn1.','line_number':97,'multiline':False]['text':' Start the truncate transaction. Here the snapshot will see txn2 but not txn1.','line_number':105,'multiline':False]['text':' Commit txn1.','line_number':109,'multiline':False]['text':' Evict the page txn1 containing modifications from both txn1 and txn2.','line_number':114,'multiline':False]['text':' Truncate everything. This will attempt to fast truncate the page we evicted to disk.','line_number':120,'multiline':False]['text':' The page cannot be fast truncated as txn1's key is not visible to the truncate.','line_number':121,'multiline':False]['text':' Search for our key inserted by txn1. This was not truncated by the truncate operation as','line_number':125,'multiline':False]['text':' txn1 wasn't visible.','line_number':126,'multiline':False]