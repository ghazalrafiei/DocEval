['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * debug_log_parser --
 *     A parser that feeds the model from the database's debug log.
 ','line_number':40,'multiline':True]['text':'
     * debug_log_parser::commit_header --
     *     The header for the commit log entry.
     ','line_number':47,'multiline':True]['text':'
     * debug_log_parser::prev_lsn --
     *     The prev_lsn log entry.
     ','line_number':55,'multiline':True]['text':'
     * debug_log_parser::row_put --
     *     The row_put log entry.
     ','line_number':64,'multiline':True]['text':'
         * debug_log_parser::row_put::row_put --
         *     Default constructor.
         ','line_number':73,'multiline':True]['text':'
     * debug_log_parser::row_remove --
     *     The row_remove log entry.
     ','line_number':80,'multiline':True]['text':'
         * debug_log_parser::row_remove::row_remove --
         *     Default constructor.
         ','line_number':88,'multiline':True]['text':'
     * debug_log_parser::txn_timestamp --
     *     The txn_timestamp log entry.
     ','line_number':95,'multiline':True]['text':'
     * debug_log_parser::debug_log_parser --
     *     Create a new instance of the parser. Make sure that the database instance outlives the
     *     lifetime of this parser object.
     ','line_number':106,'multiline':True]['text':'
     * debug_log_parser::from_debug_log --
     *     Parse the debug log into the model. This function must be called after opening the
     *     database but before performing any writes, because otherwise the debug log may not
     *     contain records of the most recent operations.
     ','line_number':116,'multiline':True]['text':'
     * debug_log_parser::from_json --
     *     Parse the debug log JSON file into the model. The input debug log must be printed to JSON
     *     after opening the database but before performing any writes, because it may otherwise
     *     miss most recent operations.
     ','line_number':124,'multiline':True]['text':'
     * debug_log_parser::apply --
     *     Apply the given operation to the model.
     ','line_number':132,'multiline':True]['text':'
     * debug_log_parser::apply --
     *     Apply the given operation to the model.
     ','line_number':138,'multiline':True]['text':'
     * debug_log_parser::apply --
     *     Apply the given operation to the model.
     ','line_number':144,'multiline':True]['text':'
     * debug_log_parser::apply --
     *     Apply the given operation to the model.
     ','line_number':150,'multiline':True]['text':'
     * debug_log_parser::begin_transaction --
     *     Begin a transaction.
     ','line_number':156,'multiline':True]['text':'
     * debug_log_parser::commit_transaction --
     *     Commit/finalize a transaction.
     ','line_number':162,'multiline':True]['text':'
     * debug_log_parser::metadata_apply --
     *     Handle the given metadata operation.
     ','line_number':169,'multiline':True]['text':'
     * debug_log_parser::metadata_checkpoint_apply --
     *     Handle the given checkpoint metadata operation.
     ','line_number':175,'multiline':True]['text':'
     * debug_log_parser::table_by_fileid --
     *     Find a table by the file ID.
     ','line_number':181,'multiline':True]['text':' Metadata and the relevant indexes. ','line_number':190,'multiline':True]['text':' The current base write generation. ','line_number':198,'multiline':True]['text':' Place for accumulating checkpoint metadata: TXN ID -> checkpoint name -> config map. ','line_number':201,'multiline':True]['text':' namespace model ','line_number':206,'multiline':True]