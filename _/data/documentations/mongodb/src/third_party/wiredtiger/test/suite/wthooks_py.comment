['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' [TEST_TAGS]','line_number':29,'multiline':False]['text':' ignored_file','line_number':30,'multiline':False]['text':' [END_TAGS]','line_number':31,'multiline':False]['text':'','line_number':32,'multiline':False]['text':' WiredTigerHookManager','line_number':33,'multiline':False]['text':'   Manage running of hooks','line_number':34,'multiline':False]['text':'','line_number':35,'multiline':False]['text':' Three kinds of hooks available:','line_number':42,'multiline':False]['text':' replace the call with the hook function','line_number':43,'multiline':False]['text':' call the hook function after the function','line_number':44,'multiline':False]['text':' transform the arg list before the call','line_number':45,'multiline':False]['text':' Print to /dev/tty for debugging, since anything extraneous to stdout/stderr will','line_number':47,'multiline':False]['text':' cause a test error.','line_number':48,'multiline':False]['text':'###############','line_number':53,'multiline':False]['text':' Hooks Overview','line_number':54,'multiline':False]['text':'','line_number':55,'multiline':False]['text':' Here are some useful terms to know, with some commentary for each.','line_number':56,'multiline':False]['text':'','line_number':57,'multiline':False]['text':'   API functions','line_number':58,'multiline':False]['text':'      potentially any WiredTiger API functions that a hook creator wishes to modify (like','line_number':59,'multiline':False]['text':'      Session.rename).  In Python most everything is an object.  Of course an instance of','line_number':60,'multiline':False]['text':'      "Session" is an object, but also the "Session" class itself is an object.  The Session.rename','line_number':61,'multiline':False]['text':'      function is also an object (of a certain form that can be called).  Also in Python,','line_number':62,'multiline':False]['text':'      attributes on an object don't have to be "pre-declared", they can be created at any time.','line_number':63,'multiline':False]['text':'      So it's easy to imagine assigning Session._rename_orig to be (the original value of)','line_number':64,'multiline':False]['text':'      Session.rename, and then assigning Session.rename to be some other function object, that','line_number':65,'multiline':False]['text':'      knows how to do something and then perhaps calls Session._rename_orig .  This is the','line_number':66,'multiline':False]['text':'      essence of the hook concept.','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':'  Hook Creator:','line_number':69,'multiline':False]['text':'      A way to attach a set of "behavior modifications" to various API functions.  More precisely,','line_number':70,'multiline':False]['text':'      a hook creator derives from WiredTigerHookCreator and sets up a number of "hook functions",','line_number':71,'multiline':False]['text':'      that are actions that are done either just before, after, or instead of, an API function.','line_number':72,'multiline':False]['text':'      A XxxxHookCreator lives in a hook_xxxx.py file.  When a HookCreator is loaded, it may be','line_number':73,'multiline':False]['text':'      given an optional argument.  This argument comes from the original python command line.','line_number':74,'multiline':False]['text':'      For example, "python run.py --hook abc" loads hook_abc.py (where it expects to find a hook).','line_number':75,'multiline':False]['text':'      "python run.py --hook abc=123" loads hook_abc.py with an argument "123".','line_number':76,'multiline':False]['text':'','line_number':77,'multiline':False]['text':'  Hook Function:','line_number':78,'multiline':False]['text':'      One function that will be called before, after or instead of, an API function.  A hook','line_number':79,'multiline':False]['text':'      function will be bound to an API function.  It is the job of the HookCreator to set up that','line_number':80,'multiline':False]['text':'      binding.  It is possible to have multiple hook functions bound to the same API function.','line_number':81,'multiline':False]['text':'      A hook function that replaces an API function will have the same args as the function','line_number':82,'multiline':False]['text':'      it replaces (but there is a trick to give it additional context if needed -','line_number':83,'multiline':False]['text':'      see session_create_replace in hook_demo.py).','line_number':84,'multiline':False]['text':'','line_number':85,'multiline':False]['text':'  Hook Platform API:','line_number':86,'multiline':False]['text':'      A set of utility functions used by WiredTigerTestCase or other parts of the test framework','line_number':87,'multiline':False]['text':'      that may differ according to platform.  Rather than have hook specific implementations in the','line_number':88,'multiline':False]['text':'      test framework, the "platform API" is implemented by any hook that wants to override it.','line_number':89,'multiline':False]['text':'      Currently the hook specific implementation is all or nothing, in the future we may allow','line_number':90,'multiline':False]['text':'      subsets of the hook platform API to be implemented.','line_number':91,'multiline':False]['text':' For every API function altered, there is one of these objects','line_number':94,'multiline':False]['text':' stashed in the <class>._<api_name>_hooks attribute.','line_number':95,'multiline':False]['text':' The set of hook functions for manipulating arguments','line_number':98,'multiline':False]['text':' The set of hook functions for manipulating arguments','line_number':99,'multiline':False]['text':' At the moment, we can only replace a method once.','line_number':100,'multiline':False]['text':' If needed, we can think about removing this restriction.','line_number':101,'multiline':False]['text':' hooked_function -','line_number':104,'multiline':False]['text':' A helper function for the hook manager.','line_number':105,'multiline':False]['text':' The three kinds of hooks are acted upon at different times.','line_number':112,'multiline':False]['text':' Before we call the function, we modify the args as indicated','line_number':113,'multiline':False]['text':' by hooks.  Then we call the function, possibly with a replacement.','line_number':114,'multiline':False]['text':' Finally, we'll call any notify hooks.','line_number':115,'multiline':False]['text':'','line_number':116,'multiline':False]['text':' We only walk through the hook list once, and process the config','line_number':117,'multiline':False]['text':' hooks while we're doing that, and copy any other hooks needed.','line_number':118,'multiline':False]['text':' WiredTigerHookManager -','line_number':132,'multiline':False]['text':' The hook manager class.  There is only one hook manager.  It is responsible for finding all the','line_number':133,'multiline':False]['text':' HookCreators at the beginning of the run, and calling setup_hooks() for each one, to have it bind','line_number':134,'multiline':False]['text':' hook functions to API functions.  The hook manager is initialized with a list of hook names. Each','line_number':135,'multiline':False]['text':' name is expanded, for example, "demo" causes the hook manager to load hook_demo.py, and to call','line_number':136,'multiline':False]['text':' the "initialize" global function in that file.  We expect "initialize" to return a list of objects','line_number':137,'multiline':False]['text':' (hooks) derived from WiredTigerHook (class defined below).  Generally, "initialize" returns a','line_number':138,'multiline':False]['text':' single object (setting up some number of "hook functions") but to allow flexibility for different','line_number':139,'multiline':False]['text':' sorts of packaging, we allow any number of hooks to be returned.','line_number':140,'multiline':False]['text':'','line_number':141,'multiline':False]['text':' A hook can set up any number of "hook functions".  See hook_demo.py for a sample hook class.','line_number':142,'multiline':False]['text':' The hooks are indicated as "somename=arg" or simply "somename".','line_number':149,'multiline':False]['text':' hook_somename.py will be imported, and initialized with the arg.','line_number':150,'multiline':False]['text':' Names must be unique, as we stash some info into extra fields','line_number':151,'multiline':False]['text':' on the connection/session/cursor, these are named using the','line_number':152,'multiline':False]['text':' unique name of the hook.','line_number':153,'multiline':False]['text':' can return None','line_number':174,'multiline':False]['text':' We need to set up some extra attributes on the Connection class.','line_number':182,'multiline':False]['text':' Given that the method name is XXXX, and class is Connection, here's what we're doing:','line_number':183,'multiline':False]['text':'    orig = wiredtiger.Connection.XXXX','line_number':184,'multiline':False]['text':'    wiredtiger.Connection._XXXX_hooks = WiredTigerHookInfo()','line_number':185,'multiline':False]['text':'    wiredtiger.Connection._XXXX_orig = wiredtiger.Connection.XXXX','line_number':186,'multiline':False]['text':'    wiredtiger.Connection.XXXX = lambda self, *args:','line_number':187,'multiline':False]['text':'              hooked_function(self, orig, '_XXXX_hooks', *args)','line_number':188,'multiline':False]['text':'tty('Setting up hook on ' + str(clazz) + '.' + method_name)','line_number':192,'multiline':False]['text':' If we're using the wiredtiger module and not a class, we need a slightly different','line_number':198,'multiline':False]['text':' style of hooked_function, since there is no self.  What would be the "self" argument','line_number':199,'multiline':False]['text':' is in fact the class.','line_number':200,'multiline':False]['text':' Now add to the list of hook functions','line_number':208,'multiline':False]['text':' If it's a replace hook, we only allow one of them for a given method name','line_number':209,'multiline':False]['text':'tty('Setting up hooks list in ' + str(clazz) + '.' + hook_info_name)','line_number':220,'multiline':False]['text':' Returns a list of hook names that use something on the list','line_number':240,'multiline':False]['text':' Get the original function/method before any hooks applied','line_number':253,'multiline':False]['text':' Get the original function/method before any hooks applied','line_number':257,'multiline':False]['text':' Hooks must derive from this class','line_number':266,'multiline':False]['text':' This is called right after creation and should not be overridden.','line_number':268,'multiline':False]['text':' Default version of register_skipped_tests, can be overridden.','line_number':277,'multiline':False]['text':' Walks the lists of tests in-place, modifying the tests that should be skipped','line_number':278,'multiline':False]['text':' default version of uses, can be overridden.  If the hook uses or provides','line_number':287,'multiline':False]['text':' a capability on the list, it should return True.','line_number':288,'multiline':False]['text':' By default, there is no automatic timestamping by test infrastructure classes.','line_number':342,'multiline':False]['text':' By default, all the populated data lies in the local storage.','line_number':346,'multiline':False]['text':' By default, all the populated data lies in the cache.','line_number':350,'multiline':False]['text':' By default, dir_store is the storage source.','line_number':354,'multiline':False]['text':' By default, there is no extra configuration for the storage source.','line_number':358,'multiline':False]['text':' should never happen','line_number':383,'multiline':False]['text':' should never happen','line_number':392,'multiline':False]['text':' should never happen','line_number':401,'multiline':False]['text':' should never happen','line_number':410,'multiline':False]['text':' should never happen','line_number':419,'multiline':False]['text':' should never happen','line_number':428,'multiline':False]['text':' should never happen','line_number':437,'multiline':False]