['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':' Dump file ','line_number':32,'multiline':True]['text':' Build file ','line_number':33,'multiline':True]['text':' Build URI ','line_number':34,'multiline':True]['text':' Prepare file ','line_number':35,'multiline':True]['text':' Result file ','line_number':36,'multiline':True]['text':' Salvage file ','line_number':37,'multiline':True]['text':' Salvage URI ','line_number':38,'multiline':True]['text':' Results file ','line_number':52,'multiline':True]['text':' File types ','line_number':53,'multiline':True]['text':' Values are unique ','line_number':54,'multiline':True]['text':' -v flag ','line_number':55,'multiline':True]['text':'
 * main --
 *     TODO: Add a comment describing this function.
 ','line_number':60,'multiline':True]['text':'
 * t --
 *     TODO: Add a comment describing this function.
 ','line_number':111,'multiline':True]['text':'
 * usage --
 *     TODO: Add a comment describing this function.
 ','line_number':153,'multiline':True]['text':'
 * run --
 *     TODO: Add a comment describing this function.
 ','line_number':164,'multiline':True]['text':'
     * Each run builds the LOAD file, and then appends the first page of the LOAD file into the PREP
     * file. The PREP file is then copied to the SLVG file, which is salvaged, verified, and dumped
     * into the DUMP file. The DUMP file is in turn compared to the results file, which are the
     * expected results.
     ','line_number':179,'multiline':True]['text':'
         * Smoke test: empty files.
         ','line_number':187,'multiline':True]['text':'
         * Smoke test: Sequential pages, all pages should be kept.
         ','line_number':194,'multiline':True]['text':'
         * Smoke test: Sequential pages, all pages should be kept.
         ','line_number':208,'multiline':True]['text':'
         * Case #1:
         * 3 pages, each with 20 records starting with the same record
         * and sequential LSNs; salvage should leave the page with the
         * largest LSN.
         ','line_number':222,'multiline':True]['text':'
         * Case #1:
         * 3 pages, each with 20 records starting with the same record
         * and sequential LSNs; salvage should leave the page with the
         * largest LSN.
         ','line_number':237,'multiline':True]['text':'
         * Case #1:
         * 3 pages, each with 20 records starting with the same record
         * and sequential LSNs; salvage should leave the page with the
         * largest LSN.
         ','line_number':252,'multiline':True]['text':'
         * Case #2: The second page overlaps the beginning of the first page, and the first page has
         * a higher LSN.
         ','line_number':267,'multiline':True]['text':'
         * Case #2: The second page overlaps the beginning of the first page, and the second page
         * has a higher LSN.
         ','line_number':279,'multiline':True]['text':'
         * Case #3: The second page overlaps with the end of the first page, and the first page has
         * a higher LSN.
         ','line_number':291,'multiline':True]['text':'
         * Case #3: The second page overlaps with the end of the first page, and the second page has
         * a higher LSN.
         ','line_number':303,'multiline':True]['text':'
         * Case #4: The second page is a prefix of the first page, and the first page has a higher
         * LSN.
         ','line_number':315,'multiline':True]['text':'
         * Case #4: The second page is a prefix of the first page, and the second page has a higher
         * LSN.
         ','line_number':326,'multiline':True]['text':'
         * Case #5: The second page is in the middle of the first page, and the first page has a
         * higher LSN.
         ','line_number':338,'multiline':True]['text':'
         * Case #5: The second page is in the middle of the first page, and the second page has a
         * higher LSN.
         ','line_number':349,'multiline':True]['text':'
         * Case #6: The second page is a suffix of the first page, and the first page has a higher
         * LSN.
         ','line_number':362,'multiline':True]['text':'
         * Case #6: The second page is a suffix of the first page, and the second page has a higher
         * LSN.
         ','line_number':373,'multiline':True]['text':'
         * Case #9: The first page is a prefix of the second page, and the first page has a higher
         * LSN.
         ','line_number':385,'multiline':True]['text':'
         * Case #9: The first page is a prefix of the second page, and the second page has a higher
         * LSN.
         ','line_number':397,'multiline':True]['text':'
         * Case #10: The first page is a suffix of the second page, and the first page has a higher
         * LSN.
         ','line_number':408,'multiline':True]['text':'
         * Case #10: The first page is a suffix of the second page, and the second page has a higher
         * LSN.
         ','line_number':420,'multiline':True]['text':'
         * Case #11: The first page is in the middle of the second page, and the first page has a
         * higher LSN.
         ','line_number':431,'multiline':True]['text':'
         * Case #11: The first page is in the middle of the second page, and the second page has a
         * higher LSN.
         ','line_number':444,'multiline':True]['text':'
         * Column-store only: missing an initial key range of 99 records.
         ','line_number':455,'multiline':True]['text':'
         * Column-store only: missing a middle key range of 37 records.
         ','line_number':464,'multiline':True]['text':'
 * file_exists --
 *     Return if the file exists.
 ','line_number':493,'multiline':True]['text':'
 * build --
 *     Build a row- or column-store page in a file.
 ','line_number':505,'multiline':True]['text':'
     * Disable logging: we're modifying files directly, we don't want to run recovery.
     ','line_number':519,'multiline':True]['text':' Build the key. ','line_number':552,'multiline':True]['text':' Build the value. ','line_number':564,'multiline':True]['text':'
     * The first time through this routine we create the salvage file, sharing the config with the
     * load file. This creates the schema entry; we don't care about the file contents.
     ','line_number':578,'multiline':True]['text':'
 * copy --
 *     Copy the created page to the end of the salvage file.
 ','line_number':590,'multiline':True]['text':'
     * If the salvage file doesn't exist, then we're creating it: copy the first sector (the file
     * description). Otherwise, we are appending to an existing file.
     ','line_number':606,'multiline':True]['text':'
     * If there's data, copy/update the first formatted page.
     ','line_number':618,'multiline':True]['text':'
         * Page headers are written in little-endian format, swap before calculating the checksum on
         * big-endian hardware. Checksums always returned in little-endian format, no swap is
         * required.
         ','line_number':625,'multiline':True]['text':'
 * copy_file --
 *     Copy one file over another.
 ','line_number':654,'multiline':True]['text':'
 * process --
 *     Salvage, verify and dump the created file.
 ','line_number':678,'multiline':True]['text':'
     * Remove the salvage file and replace it with the file we've built. It would be simpler to just
     * rename the prep file over the salvage file, but this way the original unchanged file is
     * available for reference if things go south, and we might want to run on a platform where a
     * suitable rename isn't available.
     ','line_number':692,'multiline':True]['text':' Salvage. ','line_number':701,'multiline':True]['text':' Verify. ','line_number':715,'multiline':True]['text':' Dump. ','line_number':721,'multiline':True]['text':'
 * empty --
 *     Print empty print_res, for fixed-length column-store files.
 ','line_number':740,'multiline':True]['text':'
 * print_res --
 *     Write results file.
 ','line_number':754,'multiline':True]['text':' Print key ','line_number':765,'multiline':True]['text':' Print value ','line_number':774,'multiline':True]