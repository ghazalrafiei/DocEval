['text':'','line_number':1,'multiline':False]['text':'  subunit: extensions to Python unittest to get test results from subprocesses.','line_number':2,'multiline':False]['text':'  Copyright (C) 2009  Robert Collins <robertc@robertcollins.net>','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Licensed under either the Apache License, Version 2.0 or the BSD 3-clause','line_number':5,'multiline':False]['text':'  license at the users choice. A copy of both licenses are available in the','line_number':6,'multiline':False]['text':'  project source as Apache-2.0 and BSD. You may not use this file except in','line_number':7,'multiline':False]['text':'  compliance with one of these two licences.','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'  Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':'  distributed under these licenses is distributed on an "AS IS" BASIS, WITHOUT','line_number':11,'multiline':False]['text':'  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the','line_number':12,'multiline':False]['text':'  license you chose for the specific language governing permissions and','line_number':13,'multiline':False]['text':'  limitations under that license.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' An end to the chain','line_number':73,'multiline':False]['text':' Asserts that the call was made to self.result before asserter was','line_number':75,'multiline':False]['text':' called.','line_number':76,'multiline':False]['text':' The result object we call, which much increase its call count.','line_number':78,'multiline':False]['text':' The hook in self.result must have been called','line_number':84,'multiline':False]['text':' The hook in asserter must have been called too, otherwise the','line_number':86,'multiline':False]['text':' assertion about ordering won't have completed.','line_number':87,'multiline':False]['text':' And end to the chain which captures time events.','line_number':157,'multiline':False]['text':' The result object under test.','line_number':159,'multiline':False]['text':' Calling time() outputs a time signal immediately and prevents','line_number':179,'multiline':False]['text':' automatically adding one when other methods are called.','line_number':180,'multiline':False]['text':' Calling None passes the None through, in case other results care.','line_number':193,'multiline':False]['text':' Calling other methods doesn't generate an automatic time event.','line_number':197,'multiline':False]['text':' Because addSuccess and friends tend to send subunit output','line_number':291,'multiline':False]['text':' immediately, and because 'tags:' before a result line means','line_number':292,'multiline':False]['text':' something different to 'tags:' after a result line, we need to be','line_number':293,'multiline':False]['text':' sure that tags are emitted before 'addSuccess' (or whatever).','line_number':294,'multiline':False]['text':' Heh heh.','line_number':313,'multiline':False]['text':' We always forward the first time event we see.','line_number':318,'multiline':False]['text':' If there are many consecutive time events, only the first and last','line_number':326,'multiline':False]['text':' are sent through.','line_number':327,'multiline':False]['text':' If we receive a single time event followed by a non-time event, we','line_number':338,'multiline':False]['text':' send exactly one time event.','line_number':339,'multiline':False]['text':' Many time events with the exact same time are collapsed into one','line_number':348,'multiline':False]['text':' time event.','line_number':349,'multiline':False]