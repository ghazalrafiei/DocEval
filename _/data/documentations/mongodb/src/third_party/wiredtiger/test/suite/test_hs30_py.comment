['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_hs30.py','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' Make sure that the history store works as intended for non-timestamped tables, both','line_number':35,'multiline':False]['text':' logged and unlogged.','line_number':36,'multiline':False]['text':'','line_number':37,'multiline':False]['text':' Values are written to the history store when the page is reconciled; the newest','line_number':38,'multiline':False]['text':' committed value is written to the data store and any older values that might be needed','line_number':39,'multiline':False]['text':' by a reader are sent to history. For non-timestamped values there are two ways this can','line_number':40,'multiline':False]['text':' happen: (1) during a checkpoint when a transaction commits after the checkpoint starts','line_number':41,'multiline':False]['text':' and we write out some but not all of its updates; and (2) when evicting a page with a','line_number':42,'multiline':False]['text':' long-running transaction holding a sufficiently old snapshot open in the background.','line_number':43,'multiline':False]['text':'','line_number':44,'multiline':False]['text':' In case (1) the history store is used if we crash without another checkpoint by the','line_number':45,'multiline':False]['text':' recovery-time rollback to stable. This is tested elsewhere (though not, as of this','line_number':46,'multiline':False]['text':' writing, very extensively). It does not appear possible to read the values from the','line_number':47,'multiline':False]['text':' history store directly (at runtime) in case (1): starting a read transaction after','line_number':48,'multiline':False]['text':' the update transaction commits will not read the old values, and starting a read','line_number':49,'multiline':False]['text':' transction before the update transaction commits (and waiting for it) is not really','line_number':50,'multiline':False]['text':' different from case (2).','line_number':51,'multiline':False]['text':'','line_number':52,'multiline':False]['text':' However, case (2) to date is not tested elsewhere. This test checks case (2).','line_number':53,'multiline':False]['text':'','line_number':54,'multiline':False]['text':' Note that in this case the values are only needed while the reader transaction is','line_number':55,'multiline':False]['text':' running, so we don't need to (and have no way to) check if they're still available','line_number':56,'multiline':False]['text':' after a crash. Whether they eventually get G/C'd from the history store is another','line_number':57,'multiline':False]['text':' question. FUTURE.','line_number':58,'multiline':False]['text':'','line_number':59,'multiline':False]['text':' If anyone ever implements non-timestamped prepare, this test should be extended to','line_number':60,'multiline':False]['text':' cover it.','line_number':61,'multiline':False]['text':' Evict every 5th key; hopefully that's enough. FUTURE: when we have a way to','line_number':102,'multiline':False]['text':' do this iteration one page at a time, do that.','line_number':103,'multiline':False]['text':' Write some initial data.','line_number':136,'multiline':False]['text':' Read in the other session, and then leave the transaction open.','line_number':142,'multiline':False]['text':' Now churn a bit.','line_number':148,'multiline':False]['text':' Start another reader.','line_number':155,'multiline':False]['text':' Churn some more.','line_number':161,'multiline':False]['text':' Evict the lot.','line_number':166,'multiline':False]['text':' Confirm that we still read the right values in the reader transactions.','line_number':169,'multiline':False]['text':' Done with these.','line_number':175,'multiline':False]['text':' Check via stats that the history store was used.','line_number':179,'multiline':False]['text':' Should have at least read nrows twice.','line_number':185,'multiline':False]['text':' Apparently even if we checkpoint, without an explicit evict the old in-memory','line_number':188,'multiline':False]['text':' updates hang around and the history store isn't accessed.','line_number':189,'multiline':False]['text':' Tidy up.','line_number':192,'multiline':False]