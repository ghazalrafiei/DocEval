['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * testutil_modify_apply --
 *     Implement a modify using a completely separate algorithm as a check on the internal library
 *     algorithms.
 ','line_number':30,'multiline':True]['text':'
     * Passed a value and array of modifications, plus a temporary buffer for an additional work
     * space.
     *
     * Process the entries to figure out the largest possible buffer we need. This is pessimistic
     * because we're ignoring replacement bytes, but it's a simpler calculation.
     ','line_number':43,'multiline':True]['text':' Grow the buffers. ','line_number':56,'multiline':True]['text':'
     * Overwrite anything not initialized in the original buffer, and overwrite the entire workspace
     * buffer.
     ','line_number':60,'multiline':True]['text':'
     * From the starting buffer, create a new buffer b based on changes in the entries array. We're
     * doing a brute force solution here to test the faster solution implemented in the library.
     ','line_number':72,'multiline':True]['text':' Take leading bytes from the original, plus any gap bytes. ','line_number':77,'multiline':True]['text':' Take replacement bytes. ','line_number':86,'multiline':True]['text':' Take trailing bytes from the original. ','line_number':92,'multiline':True]['text':' Swap the buffers and do it again. ','line_number':100,'multiline':True]['text':'
     * The final results may not be in the original buffer, in which case we swap them back around.
     ','line_number':108,'multiline':True]