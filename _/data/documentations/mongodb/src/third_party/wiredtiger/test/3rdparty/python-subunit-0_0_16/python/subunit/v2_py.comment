['text':'','line_number':1,'multiline':False]['text':'  subunit: extensions to Python unittest to get test results from subprocesses.','line_number':2,'multiline':False]['text':'  Copyright (C) 2013  Robert Collins <robertc@robertcollins.net>','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':'  Licensed under either the Apache License, Version 2.0 or the BSD 3-clause','line_number':5,'multiline':False]['text':'  license at the users choice. A copy of both licenses are available in the','line_number':6,'multiline':False]['text':'  project source as Apache-2.0 and BSD. You may not use this file except in','line_number':7,'multiline':False]['text':'  compliance with one of these two licences.','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'  Unless required by applicable law or agreed to in writing, software','line_number':10,'multiline':False]['text':'  distributed under these licenses is distributed on an "AS IS" BASIS, WITHOUT','line_number':11,'multiline':False]['text':'  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the','line_number':12,'multiline':False]['text':'  license you chose for the specific language governing permissions and','line_number':13,'multiline':False]['text':'  limitations under that license.','line_number':14,'multiline':False]['text':'','line_number':15,'multiline':False]['text':' Contains True for types for which 'nul in thing' falsely returns false.','line_number':53,'multiline':False]['text':' Simple "if NUL_ELEMENT in utf8_bytes:" fails on Python 3.1 and 3.2 with','line_number':59,'multiline':False]['text':' memoryviews. See https://bugs.launchpad.net/subunit/+bug/1216246','line_number':60,'multiline':False]['text':' placeholder for flags','line_number':153,'multiline':False]['text':' placeholder for length, but see below as length is variable.','line_number':154,'multiline':False]['text':' Version 0x2','line_number':156,'multiline':False]['text':' 0x0008 - not used in v2.','line_number':187,'multiline':False]['text':' one byte to encode length, 62+1 = 63','line_number':192,'multiline':False]['text':' two bytes to encode length, 16381+2 = 16383','line_number':195,'multiline':False]['text':' three bytes to encode length, 419430+3=4194303','line_number':198,'multiline':False]['text':' Longer than policy:','line_number':201,'multiline':False]['text':' TODO: chunk the packet automatically?','line_number':202,'multiline':False]['text':' - strip all but file data','line_number':203,'multiline':False]['text':' - do 4M chunks of that till done','line_number':204,'multiline':False]['text':' - include original data in final chunk.','line_number':205,'multiline':False]['text':' We could either do a partial application of crc32 over each chunk','line_number':208,'multiline':False]['text':' or a single join to a temp variable then a final join ','line_number':209,'multiline':False]['text':' or two writes (that python might then split).','line_number':210,'multiline':False]['text':' For now, simplest code: join, crc32, join, output','line_number':211,'multiline':False]['text':' We're in blocking mode; read one char','line_number':269,'multiline':False]['text':' EOF','line_number':272,'multiline':False]['text':' End of a character','line_number':281,'multiline':False]['text':' Bad unicode, not our concern.','line_number':286,'multiline':False]['text':' Aggregate all content that is not subunit until either','line_number':288,'multiline':False]['text':' 1MiB is accumulated or 50ms has passed with no input.','line_number':289,'multiline':False]['text':' Both are arbitrary amounts intended to give a simple','line_number':290,'multiline':False]['text':' balance between efficiency (avoiding death by a thousand','line_number':291,'multiline':False]['text':' one-byte packets), buffering (avoiding overlarge state','line_number':292,'multiline':False]['text':' being hidden on intermediary nodes) and interactivity','line_number':293,'multiline':False]['text':' (when driving a debugger, slow response to typing is','line_number':294,'multiline':False]['text':' annoying).','line_number':295,'multiline':False]['text':' Won't be able to select, fallback to','line_number':301,'multiline':False]['text':' one-byte-at-a-time.','line_number':302,'multiline':False]['text':' Note: this has a very low timeout because with stdin, the','line_number':304,'multiline':False]['text':' BufferedIO layer typically has all the content available','line_number':305,'multiline':False]['text':' from the stream when e.g. pdb is dropped into, leading to','line_number':306,'multiline':False]['text':' select always timing out when in fact we could have read','line_number':307,'multiline':False]['text':' (from the buffer layer) - we typically fail to aggregate','line_number':308,'multiline':False]['text':' any content on 3.x Pythons.','line_number':309,'multiline':False]['text':' EOF - break and emit buffered.','line_number':314,'multiline':False]['text':' New packet, break, emit buffered, then parse.','line_number':317,'multiline':False]['text':' Feed into the codec.','line_number':320,'multiline':False]['text':' End of a character','line_number':323,'multiline':False]['text':' Bad unicode, not our concern.','line_number':328,'multiline':False]['text':' timeout or too much data, emit what we have.','line_number':331,'multiline':False]['text':' Otherwise, parse a data packet.','line_number':338,'multiline':False]['text':' memoryview in 2.7.3 and 3.2 isn't directly usable with struct :(.','line_number':356,'multiline':False]['text':' see https://bugs.launchpad.net/subunit/+bug/1216163','line_number':357,'multiline':False]['text':' because the only incremental IO we do is at the start, and the 32 bit','line_number':364,'multiline':False]['text':' CRC means we can always safely read enough to cover any varint, we','line_number':365,'multiline':False]['text':' can be sure that there should be enough data - and if not it is an','line_number':366,'multiline':False]['text':' error not a normal situation.','line_number':367,'multiline':False]['text':' 2 bytes flags, at most 3 bytes length.','line_number':387,'multiline':False]['text':' Avoid having to parse torn values','line_number':398,'multiline':False]['text':' Avoid copying potentially lots of data.','line_number':402,'multiline':False]['text':' Bad CRC, report it and stop parsing the packet.','line_number':411,'multiline':False]['text':' Discard CRC-32','line_number':419,'multiline':False]['text':' One packet could have both file and status data; the Python API','line_number':421,'multiline':False]['text':' presents these separately (perhaps it shouldn't?)','line_number':422,'multiline':False]