['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_bug018.py','line_number':34,'multiline':False]['text':'   JIRA WT-3590: if writing table data fails during close then tables','line_number':35,'multiline':False]['text':' that were updated within the same transaction could get out of sync with','line_number':36,'multiline':False]['text':' each other.','line_number':37,'multiline':False]['text':' This test uses Linux-specific code so skip on any other system.','line_number':51,'multiline':False]['text':' The first thing we do is open several files. We will close them later. The reason is','line_number':73,'multiline':False]['text':' that sometimes, without that, this test would fail to report an error as expected. We','line_number':74,'multiline':False]['text':' hypothesize, but could not prove (nor reproduce under strace), that after closing the','line_number':75,'multiline':False]['text':' file descriptor that an internal thread would open a file, perhaps a pre-allocated log','line_number':76,'multiline':False]['text':' file, and then would open the file descriptor we just closed. So on close, instead of','line_number':77,'multiline':False]['text':' getting an error, we would actually write to the wrong file.','line_number':78,'multiline':False]['text':'','line_number':79,'multiline':False]['text':' So we'll open some files now, and then close them before closing the one of interest to','line_number':80,'multiline':False]['text':' the test so that any stray internal file opens will use the file descriptor of one of','line_number':81,'multiline':False]['text':' the earlier files we just closed.','line_number':82,'multiline':False]['text':' Simulate a write failure by closing the file descriptor for the second','line_number':93,'multiline':False]['text':' table out from underneath WiredTiger.  We do this right before','line_number':94,'multiline':False]['text':' closing the connection so that the write error happens during close','line_number':95,'multiline':False]['text':' when writing out the final data.  Allow table 1 to succeed and force','line_number':96,'multiline':False]['text':' an error writing out table 2.','line_number':97,'multiline':False]['text':'','line_number':98,'multiline':False]['text':' This is Linux-specific code to figure out the file descriptor.','line_number':99,'multiline':False]['text':' Expect an error and messages, so turn off stderr checking.','line_number':107,'multiline':False]['text':' Make a backup for forensics in case something goes wrong.','line_number':122,'multiline':False]['text':' After reopening and running recovery both tables should be in','line_number':126,'multiline':False]['text':' sync even though table 1 was successfully written and table 2','line_number':127,'multiline':False]['text':' had an error on close.','line_number':128,'multiline':False]['text':' It's possible the second table can't even be opened.','line_number':133,'multiline':False]['text':' That can happen only if the root page was not pushed out.','line_number':134,'multiline':False]['text':' We can't depend on the text of a particular error message to be','line_number':135,'multiline':False]['text':' emitted, so we'll just ignore the error.','line_number':136,'multiline':False]['text':' check there is no error output so far','line_number':137,'multiline':False]['text':' Make sure there's some error, but we don't care what.','line_number':141,'multiline':False]