['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * Command-line arguments.
 ','line_number':47,'multiline':True]['text':' Program working dir ','line_number':52,'multiline':True]['text':'
 * Configuration.
 ','line_number':60,'multiline':True]['text':' Keys. ','line_number':70,'multiline':True]['text':' Values. ','line_number':77,'multiline':True]['text':'
 * test_checkpoint --
 *     The basic test of the checkpoint model.
 ','line_number':84,'multiline':True]['text':' Transactions. ','line_number':94,'multiline':True]['text':' Add some data. ','line_number':97,'multiline':True]['text':' Create a named checkpoint. ','line_number':105,'multiline':True]['text':' Set the stable timestamp and create an unnamed checkpoint. ','line_number':108,'multiline':True]['text':' Add more data. ','line_number':112,'multiline':True]['text':' Verify that we have the data that we expect. ','line_number':117,'multiline':True]['text':' The stable timestamp is not yet set. ','line_number':119,'multiline':True]['text':' Verify that we have the data that we expect - with read timestamps. ','line_number':125,'multiline':True]['text':' Add two more keys; check that only that the latest committed data are included. ','line_number':130,'multiline':True]['text':' Check contains_any. ','line_number':144,'multiline':True]['text':' Test with prepared transactions. ','line_number':151,'multiline':True]['text':' The old value. ','line_number':163,'multiline':True]['text':' Test moving the stable timestamp backwards - this should fail silently. ','line_number':166,'multiline':True]['text':' Test illegal update behaviors. ','line_number':174,'multiline':True]['text':'
 * test_checkpoint_wt --
 *     The basic test of the checkpoint model, also in WiredTiger.
 ','line_number':194,'multiline':True]['text':' Transactions. ','line_number':204,'multiline':True]['text':' Create the test's home directory and database. ','line_number':207,'multiline':True]['text':' Add some data. ','line_number':225,'multiline':True]['text':' Create a named checkpoint. ','line_number':233,'multiline':True]['text':' Set the stable timestamp and create an unnamed checkpoint. ','line_number':236,'multiline':True]['text':' Add more data. ','line_number':240,'multiline':True]['text':' Verify that we have the data that we expect. ','line_number':245,'multiline':True]['text':' Verify that we have the data that we expect - with read timestamps. ','line_number':253,'multiline':True]['text':' Add two more keys; check that only that the latest committed data are included. ','line_number':258,'multiline':True]['text':' Test with prepared transactions. ','line_number':272,'multiline':True]['text':' Test moving the stable timestamp backwards - this should fail silently. ','line_number':287,'multiline':True]['text':' Verify. ','line_number':295,'multiline':True]['text':' Advance the timestamp to the very end. ','line_number':296,'multiline':True]['text':' Verify checkpoints. ','line_number':299,'multiline':True]['text':' Clean up. ','line_number':305,'multiline':True]['text':' Reopen the database. We must do this for debug log printing to work. ','line_number':311,'multiline':True]['text':' Verify using the debug log. ','line_number':315,'multiline':True]['text':' Print the debug log to JSON. ','line_number':320,'multiline':True]['text':' Verify using the debug log JSON. ','line_number':324,'multiline':True]['text':' Verify checkpoints. ','line_number':329,'multiline':True]['text':' Verify checkpoints - using the debug log JSON. ','line_number':339,'multiline':True]['text':' Clean up. ','line_number':349,'multiline':True]['text':'
 * test_checkpoint_restart_wt --
 *     Check loading checkpoints with database restarts.
 ','line_number':354,'multiline':True]['text':' Create the test's home directory and database. ','line_number':364,'multiline':True]['text':' Transaction. ','line_number':376,'multiline':True]['text':' Add some data. ','line_number':379,'multiline':True]['text':' Create a named checkpoint. ','line_number':387,'multiline':True]['text':' Add some data. ','line_number':391,'multiline':True]['text':' Create a named checkpoint. ','line_number':399,'multiline':True]['text':' Create a nameless checkpoint and restart. ','line_number':403,'multiline':True]['text':' Add some data. ','line_number':411,'multiline':True]['text':' Create a named checkpoint. ','line_number':419,'multiline':True]['text':' Add some data. ','line_number':423,'multiline':True]['text':' Add some data. Take a checkpoint while a transaction is still running. ','line_number':428,'multiline':True]['text':' Create a nameless checkpoint and restart. ','line_number':437,'multiline':True]['text':' Add some data - use prepared transactions. ','line_number':445,'multiline':True]['text':' Create a named checkpoint. ','line_number':455,'multiline':True]['text':' Add some data - use prepared transactions. ','line_number':459,'multiline':True]['text':' Create a named checkpoint. ','line_number':469,'multiline':True]['text':' Create a nameless checkpoint and restart. ','line_number':473,'multiline':True]['text':' Verify using the debug log. ','line_number':481,'multiline':True]['text':' Clean up. ','line_number':493,'multiline':True]['text':'
 * test_checkpoint_logged --
 *     The basic test of the checkpoint model with logged tables.
 ','line_number':498,'multiline':True]['text':' Transactions. ','line_number':511,'multiline':True]['text':' Add some data. ','line_number':514,'multiline':True]['text':' Create a named checkpoint. ','line_number':522,'multiline':True]['text':' Set the stable timestamp and create an unnamed checkpoint. ','line_number':525,'multiline':True]['text':' Add more data. ','line_number':529,'multiline':True]['text':' Verify that we have the data that we expect. ','line_number':534,'multiline':True]['text':' The stable timestamp is not yet set. ','line_number':536,'multiline':True]['text':' The stable timestamp is ignored. ','line_number':539,'multiline':True]['text':' Verify that we have the data that we expect - with read timestamps. ','line_number':542,'multiline':True]['text':' Add two more keys; check that only that the latest committed data are included. ','line_number':547,'multiline':True]['text':' Check contains_any. ','line_number':561,'multiline':True]['text':'
 * test_checkpoint_logged_wt --
 *     The basic test of the checkpoint model with logged tables, also in WiredTiger.
 ','line_number':569,'multiline':True]['text':' Transactions. ','line_number':582,'multiline':True]['text':' Create the test's home directory and database. ','line_number':585,'multiline':True]['text':' Add some data. ','line_number':602,'multiline':True]['text':' Create a named checkpoint. ','line_number':610,'multiline':True]['text':' Set the stable timestamp and create an unnamed checkpoint. ','line_number':613,'multiline':True]['text':' Add more data. ','line_number':617,'multiline':True]['text':' Verify that we have the data that we expect. ','line_number':622,'multiline':True]['text':' Verify that we have the data that we expect - with read timestamps. ','line_number':630,'multiline':True]['text':' Add two more keys; check that only that the latest committed data are included. ','line_number':635,'multiline':True]['text':' Verify. ','line_number':649,'multiline':True]['text':' Verify checkpoints. ','line_number':652,'multiline':True]['text':' Clean up. ','line_number':656,'multiline':True]['text':' Reopen the database. We must do this for debug log printing to work. ','line_number':662,'multiline':True]['text':' Verify using the debug log. ','line_number':666,'multiline':True]['text':' Print the debug log to JSON. ','line_number':671,'multiline':True]['text':' Verify using the debug log JSON. ','line_number':675,'multiline':True]['text':' Verify checkpoints. ','line_number':680,'multiline':True]['text':' Verify checkpoints - using the debug log JSON. ','line_number':686,'multiline':True]['text':' Clean up. ','line_number':692,'multiline':True]['text':'
 * usage --
 *     Print usage help for the program.
 ','line_number':697,'multiline':True]['text':'
 * main --
 *     The main entry point for the test.
 ','line_number':708,'multiline':True]['text':'
     * Parse the command-line arguments.
     ','line_number':723,'multiline':True]['text':'
     * Tests.
     ','line_number':741,'multiline':True]['text':'
     * Clean up.
     ','line_number':756,'multiline':True]['text':' Delete the work directory. ','line_number':759,'multiline':True]