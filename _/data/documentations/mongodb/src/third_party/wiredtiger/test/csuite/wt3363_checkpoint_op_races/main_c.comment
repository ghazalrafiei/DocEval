['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * [TEST_TAGS]
 * checkpoint
 * [END_TAGS]
 ','line_number':29,'multiline':True]['text':'
 * JIRA ticket reference: WT-3363
 *
 * Test case description: There are a number of operations that we run that we expect not to
 * conflict with or block against a running checkpoint. This test aims to run repeated checkpoints
 * in a thread, while running an assortment of operations that we expect to execute quickly on
 * further threads. To ensure that we catch any blockages we introduce a very large delay into the
 * checkpoint and measure that no operation takes 1/2 the length of this delay.
 *
 * Failure mode: We monitor the execution time of all operations and if we find any operation taking
 * longer than 1/2 the delay time, we abort dumping a core file which can be used to determine what
 * operation was blocked.
 ','line_number':37,'multiline':True]['text':'
 * Time delay to introduce into checkpoints in seconds. Should be at-least double the maximum time
 * that any one of the operations should take. Currently this is set to 10 seconds and we expect no
 * single operation to take longer than 5 seconds.
 ','line_number':54,'multiline':True]['text':'
 * Number of seconds to execute for. Initially set to 15 minutes, as we need to run long enough to
 * be certain we have captured any blockages. In initial testing 5 minutes was enough to reproduce
 * the issue, so we run for 3x that here to ensure we reproduce before declaring success.
 ','line_number':62,'multiline':True]['text':'
 * main --
 *     TODO: Add a comment describing this function.
 ','line_number':71,'multiline':True]['text':'
     * This test should not run unless long tests flag is set. The test runs for 15 minutes.
     ','line_number':83,'multiline':True]['text':'
     * Pass the whole array of thread arguments to the monitoring thread. This thread will need to
     * monitor each threads counter to track if it is stuck.
     ','line_number':110,'multiline':True]['text':'
 * do_checkpoints --
 *     Function for repeatedly running checkpoint operations.
 ','line_number':129,'multiline':True]['text':'
         * A short sleep to let operations process and avoid back to back checkpoints locking up
         * resources.
         ','line_number':154,'multiline':True]['text':'
 * monitor --
 *     Function to monitor running operations and abort to dump core in the event that we catch an
 *     operation running long.
 ','line_number':165,'multiline':True]['text':'
         * Checkpoints will run for slightly over MAX_EXECUTION_TIME. MAX_EXECUTION_TIME should
         * always be long enough that we can complete any single operation in 1/2 that time.
         ','line_number':185,'multiline':True]['text':' Ignore any threads which may not have started yet. ','line_number':194,'multiline':True]['text':'
             * We track how many operations each thread has done. If we have slept and the counter
             * remains the same for a thread it is stuck and should drop a core so the cause of the
             * hang can be investigated.
             ','line_number':198,'multiline':True]['text':'
 * do_ops --
 *     Worker thread. Executes random operations from the set of 6.
 ','line_number':217,'multiline':True]