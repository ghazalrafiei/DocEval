['text':' Copyright (c) 2010-2011 testtools developers. See LICENSE for details.','line_number':1,'multiline':False]['text':' setUp can return a Deferred that might fire at any time.','line_number':215,'multiline':False]['text':' AsynchronousDeferredRunTest will not go on to running the test until','line_number':216,'multiline':False]['text':' the Deferred returned by setUp actually fires.','line_number':217,'multiline':False]['text':' setUp, the test method and tearDown can all return','line_number':241,'multiline':False]['text':' Deferreds. AsynchronousDeferredRunTest will make sure that each of','line_number':242,'multiline':False]['text':' these are run in turn, only going on to the next stage once the','line_number':243,'multiline':False]['text':' Deferred from the previous stage has fired.','line_number':244,'multiline':False]['text':' Cleanups added with addCleanup can return','line_number':287,'multiline':False]['text':' Deferreds. AsynchronousDeferredRunTest will run each of them in','line_number':288,'multiline':False]['text':' turn.','line_number':289,'multiline':False]['text':' If there's cruft left over in the reactor, the test fails.','line_number':321,'multiline':False]['text':' The reactor is set as an attribute on the test case.','line_number':341,'multiline':False]['text':' If there's a Deferred with an unhandled error, the test fails.  Each','line_number':355,'multiline':False]['text':' unhandled error is reported with a separate traceback.','line_number':356,'multiline':False]['text':' Note we aren't returning the Deferred so that the error will','line_number':359,'multiline':False]['text':' be unhandled.','line_number':360,'multiline':False]['text':' If there's a Deferred with an unhandled error, the test fails.  Each','line_number':381,'multiline':False]['text':' unhandled error is reported with a separate traceback, and the error','line_number':382,'multiline':False]['text':' is still reported.','line_number':383,'multiline':False]['text':' Note we aren't returning the Deferred so that the error will','line_number':386,'multiline':False]['text':' be unhandled.','line_number':387,'multiline':False]['text':' If we get a SIGINT during a test run, the test stops and no more','line_number':409,'multiline':False]['text':' tests run.','line_number':410,'multiline':False]['text':' If we get a SIGINT during a test run, the test stops and no more','line_number':428,'multiline':False]['text':' tests run.','line_number':429,'multiline':False]['text':' If a test times out, it reports itself as having failed with a','line_number':446,'multiline':False]['text':' TimeoutError.','line_number':447,'multiline':False]['text':' As a convenience method, AsynchronousDeferredRunTest has a','line_number':464,'multiline':False]['text':' classmethod that returns an AsynchronousDeferredRunTest','line_number':465,'multiline':False]['text':' factory. This factory has the same API as the RunTest constructor.','line_number':466,'multiline':False]['text':' Make sure that the factory can actually be used.','line_number':478,'multiline':False]['text':' As a convenience method, AsynchronousDeferredRunTest has a','line_number':488,'multiline':False]['text':' classmethod that returns an AsynchronousDeferredRunTest','line_number':489,'multiline':False]['text':' factory. This factory has the same API as the RunTest constructor.','line_number':490,'multiline':False]['text':' As a convenience method, AsynchronousDeferredRunTest has a','line_number':500,'multiline':False]['text':' classmethod that returns an AsynchronousDeferredRunTest','line_number':501,'multiline':False]['text':' factory. This factory has the same API as the RunTest constructor.','line_number':502,'multiline':False]['text':' As a convenience method, AsynchronousDeferredRunTest has a','line_number':512,'multiline':False]['text':' classmethod that returns an AsynchronousDeferredRunTest','line_number':513,'multiline':False]['text':' factory. This factory has the same API as the RunTest constructor.','line_number':514,'multiline':False]['text':' Even if the reactor is unclean and the test raises an error and the','line_number':540,'multiline':False]['text':' cleanups raise errors, we only called addError once per test.','line_number':541,'multiline':False]['text':' Add a dirty cleanup.','line_number':545,'multiline':False]['text':' Dirty the reactor.','line_number':547,'multiline':False]['text':' Unhandled error.','line_number':550,'multiline':False]['text':' Actual error.','line_number':552,'multiline':False]['text':' An error logged during the test run is recorded as an error in the','line_number':575,'multiline':False]['text':' tests.','line_number':576,'multiline':False]['text':' An error logged during the test run is recorded as an error in the','line_number':598,'multiline':False]['text':' tests.','line_number':599,'multiline':False]['text':' assert_fails_with fails the test if it's given a Deferred that','line_number':674,'multiline':False]['text':' succeeds.','line_number':675,'multiline':False]['text':' assert_fails_with fails the test if it's given a Deferred that','line_number':688,'multiline':False]['text':' succeeds.','line_number':689,'multiline':False]['text':' assert_fails_with fails the test if it's given a Deferred that','line_number':704,'multiline':False]['text':' succeeds.','line_number':705,'multiline':False]['text':' assert_fails_with calls back with the value of the failure if it's','line_number':723,'multiline':False]['text':' one of the expected types of failures.','line_number':724,'multiline':False]['text':' If assert_fails_with is passed a 'failureException' keyword','line_number':733,'multiline':False]['text':' argument, then it will raise that instead of `AssertionError`.','line_number':734,'multiline':False]['text':' Make sure there's at least one observer.  This reproduces bug','line_number':755,'multiline':False]['text':' #926189.','line_number':756,'multiline':False]