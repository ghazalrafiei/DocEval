['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_checkpoint18.py','line_number':37,'multiline':False]['text':'','line_number':38,'multiline':False]['text':' Make sure that when we open a cursor we secure the proper matching','line_number':39,'multiline':False]['text':' history store checkpoint, and don't bobble or lose it if the database','line_number':40,'multiline':False]['text':' moves on. Non-timestamp version.','line_number':41,'multiline':False]['text':'','line_number':42,'multiline':False]['text':' It doesn't make sense to run this test for named checkpoints, because','line_number':43,'multiline':False]['text':' regenerating a named checkpoint with the cursor open isn't allowed and','line_number':44,'multiline':False]['text':' generating two different checkpoints with different names doesn't make','line_number':45,'multiline':False]['text':' an interesting scenario. The concern is getting the matching version','line_number':46,'multiline':False]['text':' of WiredTigerCheckpoint and hanging onto it.','line_number':47,'multiline':False]['text':'self.session.begin_transaction()','line_number':80,'multiline':False]['text':'self.session.rollback_transaction()','line_number':86,'multiline':False]['text':' Create a table.','line_number':92,'multiline':False]['text':' Write some baseline data and checkpoint it.','line_number':108,'multiline':False]['text':' Write more data. Touch odd keys only. Hold the transaction open.','line_number':112,'multiline':False]['text':' Commit the transaction with a background checkpoint so we get part of it','line_number':119,'multiline':False]['text':' in the checkpoint.','line_number':120,'multiline':False]['text':' Wait for checkpoint to start before committing.','line_number':126,'multiline':False]['text':' Now write the other keys.','line_number':139,'multiline':False]['text':' Open the checkpoint now.','line_number':145,'multiline':False]['text':' Take another checkpoint. This will write out the rest of the partial','line_number':148,'multiline':False]['text':' transaction and remove its history store footprint, so reading from the','line_number':149,'multiline':False]['text':' first checkpoint will fail if the cursor hasn't secured itself a reference','line_number':150,'multiline':False]['text':' to its matching history store checkpoint.','line_number':151,'multiline':False]['text':' Make sure we can read the table from the second checkpoint.','line_number':154,'multiline':False]['text':' We shouldn't see either value_b or value_c.','line_number':155,'multiline':False]['text':' Note that it would be nice to crosscheck that the first checkpoint was in fact','line_number':159,'multiline':False]['text':' inconsistent. Could do that by copying the database before the second checkpoint','line_number':160,'multiline':False]['text':' and opening the copy here, I guess. FUTURE?','line_number':161,'multiline':False]