['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' test_import08.py','line_number':29,'multiline':False]['text':' Check that transaction ids from imported files are ignored regardless of write generation.','line_number':30,'multiline':False]['text':' The search string will look like: 'write_gen=<num>'.','line_number':55,'multiline':False]['text':' Just reverse the string and take the digits from the back until we hit '='.','line_number':56,'multiline':False]['text':' Make a bunch of files and fill them with data. This has the side effect of allocating a','line_number':68,'multiline':False]['text':' lot of transaction ids which is important for our test.','line_number':69,'multiline':False]['text':' Find the URI of one of the generated tables.','line_number':72,'multiline':False]['text':' Now begin a transaction and remove the first entry in the table.','line_number':82,'multiline':False]['text':'','line_number':83,'multiline':False]['text':' This is going to allocate a transaction ID and more importantly, will ensure that pinned','line_number':84,'multiline':False]['text':' ID is set for subsequent checkpoints in this test. If we don't do this, reconciliation','line_number':85,'multiline':False]['text':' won't actually write transaction IDs to the disk since they will be deemed obsolete.','line_number':86,'multiline':False]['text':' Now create the file that we'll be importing later.','line_number':93,'multiline':False]['text':' Insert records into our newly created file.','line_number':96,'multiline':False]['text':'','line_number':97,'multiline':False]['text':' Since we allocated a bunch of transaction IDs before, we'll be allocating pretty high','line_number':98,'multiline':False]['text':' IDs at this point.','line_number':99,'multiline':False]['text':' We want to checkpoint after each write to increase the write gen for this particular','line_number':103,'multiline':False]['text':' btree.','line_number':104,'multiline':False]['text':' Export the metadata for the table.','line_number':107,'multiline':False]['text':' Now that we've finished doing our checkpoints, we can let go of the transaction ID we','line_number':114,'multiline':False]['text':' allocated earlier.','line_number':115,'multiline':False]['text':' Close the connection.','line_number':118,'multiline':False]['text':' Create a new database and connect to it.','line_number':121,'multiline':False]['text':' Bring forward the oldest to be past or equal to the timestamps we'll be importing.','line_number':128,'multiline':False]['text':' Copy over the datafiles for the object we want to import.','line_number':131,'multiline':False]['text':' Construct the config string.','line_number':134,'multiline':False]['text':' Import the file.','line_number':141,'multiline':False]['text':' Verify object.','line_number':144,'multiline':False]['text':' Check the write generation of the new table.','line_number':147,'multiline':False]['text':'','line_number':148,'multiline':False]['text':' The important thing to check is that it is greater than 1 (the current connection-wide','line_number':149,'multiline':False]['text':' base write gen).','line_number':150,'multiline':False]['text':' Check that the values are all visible.','line_number':158,'multiline':False]['text':'','line_number':159,'multiline':False]['text':' These values were written in the previous database with HIGH transaction IDs. Since we're','line_number':160,'multiline':False]['text':' on a fresh connection, our IDs are starting back from 1 so we MUST wipe the IDs otherwise','line_number':161,'multiline':False]['text':' they won't be visible to us and this test will fail.','line_number':162,'multiline':False]['text':'','line_number':163,'multiline':False]['text':' Since we were checkpointing after each write, the write gen of some of these pages will','line_number':164,'multiline':False]['text':' definitely be higher than 1.','line_number':165,'multiline':False]['text':'','line_number':166,'multiline':False]['text':' If we use the old scheme and compare the page's write gen with the connection-wide base','line_number':167,'multiline':False]['text':' write gen (which will be 1 since we made a new database), then we won't see some records','line_number':168,'multiline':False]['text':' and the test will fail.','line_number':169,'multiline':False]['text':'','line_number':170,'multiline':False]['text':' If we use the new scheme and compare with the btree specific base write gen that was','line_number':171,'multiline':False]['text':' supplied in the metadata, we will realise that it was from the previous run and wipe the','line_number':172,'multiline':False]['text':' IDs meaning that all records will be visible.','line_number':173,'multiline':False]['text':' Perform a checkpoint.','line_number':176,'multiline':False]