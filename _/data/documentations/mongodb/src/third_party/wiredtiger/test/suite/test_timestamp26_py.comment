['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' test_timestamp26.py','line_number':29,'multiline':False]['text':'   Timestamps: assert commit settings','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' Test write_timestamp_usage never setting.','line_number':37,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':58,'multiline':False]['text':' Open the object, configuring write_timestamp usage.','line_number':62,'multiline':False]['text':' Commit with a timestamp.','line_number':72,'multiline':False]['text':' Check both an explicit timestamp set and a set at commit.','line_number':74,'multiline':False]['text':' Commit without a timestamp.','line_number':84,'multiline':False]['text':' Test assert read timestamp settings.','line_number':88,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':106,'multiline':False]['text':' Open the object, configuring read timestamp usage.','line_number':110,'multiline':False]['text':' Insert a data item at a timestamp (although it doesn't really matter).','line_number':120,'multiline':False]['text':' Try reading without a timestamp.','line_number':127,'multiline':False]['text':' Try reading with a timestamp.','line_number':139,'multiline':False]['text':' Test alter of timestamp settings.','line_number':151,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':164,'multiline':False]['text':' Open the object, configuring "never" timestamp usage.','line_number':168,'multiline':False]['text':' Check it.','line_number':169,'multiline':False]['text':' Switch the object to "ordered" usage.','line_number':170,'multiline':False]['text':' Check it.','line_number':171,'multiline':False]['text':' Test timestamp settings with alter and inconsistent updates.','line_number':198,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':211,'multiline':False]['text':' Create the table and create a few items with and without timestamps. Then alter the','line_number':215,'multiline':False]['text':' setting and verify the inconsistent usage is detected.','line_number':216,'multiline':False]['text':' Insert a data item at timestamp 2.','line_number':224,'multiline':False]['text':' Update the data item with no timestamp.','line_number':230,'multiline':False]['text':' Insert a non-timestamped item, then update with a timestamp and then without a timestamp.','line_number':237,'multiline':False]['text':' Now alter the setting and make sure we detect incorrect usage. We must move the oldest','line_number':250,'multiline':False]['text':' timestamp forward in order to alter, otherwise alter will fail with EBUSY.','line_number':251,'multiline':False]['text':' Detect decreasing timestamp.','line_number':259,'multiline':False]['text':' Detect not using a timestamp.','line_number':271,'multiline':False]['text':' Test timestamp settings with inconsistent updates.','line_number':278,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':291,'multiline':False]['text':' Create the table with the key consistency checking turned on. That checking will verify','line_number':295,'multiline':False]['text':' any individual key is always or never used with a timestamp. And if it is used with a','line_number':296,'multiline':False]['text':' timestamp that the timestamps are in increasing order for that key.','line_number':297,'multiline':False]['text':' Insert an item at timestamp 2.','line_number':306,'multiline':False]['text':' Update the data item at timestamp 1, which should fail.','line_number':311,'multiline':False]['text':' Make sure we can successfully add a different key at timestamp 1.','line_number':319,'multiline':False]['text':' Insert key1 at timestamp 10 and key2 at 15. Then update both keys in one transaction at','line_number':325,'multiline':False]['text':' timestamp 13, and we should get a complaint about usage.','line_number':326,'multiline':False]['text':' Try to update a key previously used with timestamps without one. We should get the','line_number':345,'multiline':False]['text':' inconsistent usage error/message.','line_number':346,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':351,'multiline':False]['text':' Create the table with the key consistency checking turned on. That checking will verify','line_number':355,'multiline':False]['text':' any individual key is always or never used with a timestamp. And if it is used with a','line_number':356,'multiline':False]['text':' timestamp that the timestamps are in increasing order for that key.','line_number':357,'multiline':False]['text':' Smoke test setting the timestamp at various points in the transaction.','line_number':378,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':380,'multiline':False]['text':' Create the table with the key consistency checking turned on. That checking will verify','line_number':384,'multiline':False]['text':' any individual key is always or never used with a timestamp. And if it is used with a','line_number':385,'multiline':False]['text':' timestamp that the timestamps are in increasing order for that key.','line_number':386,'multiline':False]['text':' Test that timestamps are ignored in logged files.','line_number':427,'multiline':False]['text':' Turn on logging to cause timestamps to be ignored.','line_number':429,'multiline':False]['text':' Smoke test that logged files don't complain about timestamps.','line_number':443,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':445,'multiline':False]['text':' Open the object, configuring write_timestamp usage.','line_number':449,'multiline':False]['text':' Commit with a timestamp.','line_number':458,'multiline':False]['text':' Commit without a timestamp.','line_number':464,'multiline':False]['text':' Test that timestamps are ignored in in-memory configurations and that object configurations always','line_number':469,'multiline':False]['text':' override.','line_number':470,'multiline':False]['text':' The two connection configurations that default to ignoring timestamps.','line_number':478,'multiline':False]['text':' Objects can explicitly enable or ignore timestamps or default to the environment's behavior.','line_number':484,'multiline':False]['text':' Test that timestamps are ignored in in-memory configurations and that object configurations','line_number':497,'multiline':False]['text':' always override.','line_number':498,'multiline':False]['text':' Create an object that's never written, it's just used to generate valid k/v pairs.','line_number':503,'multiline':False]['text':' Open the object, configuring write_timestamp usage.','line_number':507,'multiline':False]['text':' Commit with a timestamp.','line_number':518,'multiline':False]['text':' Commit without a timestamp (but first with a timestamp if in ordered mode so we get','line_number':529,'multiline':False]['text':' a failure).','line_number':530,'multiline':False]