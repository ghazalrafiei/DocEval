['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_timestamp24.py','line_number':33,'multiline':False]['text':'','line_number':34,'multiline':False]['text':' Make sure certain conflicting operations are rejected.','line_number':35,'multiline':False]['text':' Pin oldest and stable to timestamp 1.','line_number':76,'multiline':False]['text':'self.conn.set_timestamp('oldest_timestamp=' + self.timestamp_str(1) +','line_number':77,'multiline':False]['text':'    ',stable_timestamp=' + self.timestamp_str(1))','line_number':78,'multiline':False]['text':' Create two sessions so we can have two transactions.','line_number':80,'multiline':False]['text':' In session 1, write value_a at time 20.','line_number':84,'multiline':False]['text':' Commit that and then start a new transaction. Read the value back.','line_number':85,'multiline':False]['text':' Then reset the cursor so the page isn't pinned, but leave the transaction open.','line_number':86,'multiline':False]['text':' leave session1's transaction open','line_number':95,'multiline':False]['text':' In session 2, write value_b at time 50. Commit that.','line_number':97,'multiline':False]['text':' Evict the page to force reconciliation. value_b goes to disk; value_a to history.','line_number':104,'multiline':False]['text':' Use session2 so we can keep session1's transaction open.','line_number':105,'multiline':False]['text':' In session 2, write value_c, but abort it.','line_number':108,'multiline':False]['text':' Now in session 1 try to write value_d. This should produce WT_ROLLBACK, but with','line_number':113,'multiline':False]['text':' a bug seen and fixed in August 2021, succeeds improperly instead, resulting in','line_number':114,'multiline':False]['text':' data corruption. The behavior is more exciting when the update is a modify (the','line_number':115,'multiline':False]['text':' modify gets applied to value_b instead of value_a, producing a more detectable','line_number':116,'multiline':False]['text':' corruption) but this is not necessary to check the wrong behavior.','line_number':117,'multiline':False]['text':' Put this outside the try block in case it throws its own exceptions','line_number':127,'multiline':False]['text':' Read the data back','line_number':133,'multiline':False]['text':' It should be value_b. But if we broke, it'll be value_d.','line_number':137,'multiline':False]