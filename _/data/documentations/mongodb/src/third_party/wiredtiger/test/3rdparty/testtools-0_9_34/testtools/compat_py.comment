['text':' Copyright (c) 2008-2011 testtools developers. See LICENSE for details.','line_number':1,'multiline':False]['text':' GZ 2011-08-24: Seems istext() is easy to misuse and makes for bad code.','line_number':64,'multiline':False]['text':' The double replace mangling going on prepares the string for','line_number':73,'multiline':False]['text':' unicode-escape - \foo is preserved, \u and \U are decoded.','line_number':74,'multiline':False]['text':' GZ 2011-08-24: Using isinstance checks like this encourages bad interfaces,','line_number':119,'multiline':False]['text':'                there should be better ways to write code needing this.','line_number':120,'multiline':False]['text':' Never return True on Pythons that provide the name but not the real type','line_number':125,'multiline':False]['text':' Separate due to bug in unicode-escape codec in Python 2.4','line_number':147,'multiline':False]['text':' To get correct behaviour would need to pair up surrogates here','line_number':152,'multiline':False]['text':' Use normal repr for single line of unicode on Python 3 or bytes','line_number':168,'multiline':False]['text':' To escape multiline strings, split and process each line in turn,','line_number':172,'multiline':False]['text':' making sure that quotes are not escaped.','line_number':173,'multiline':False]['text':' Combine the escaped lines and append two of the closing quotes,','line_number':186,'multiline':False]['text':' then iterate over the result to escape triple quotes correctly.','line_number':187,'multiline':False]['text':' Determine which quote character to use and if one gets prefixed with a','line_number':198,'multiline':False]['text':' backslash following the same logic Python uses for repr() on strings','line_number':199,'multiline':False]['text':' Best to never encode before writing in IronPython, or if it is','line_number':221,'multiline':False]['text':' already a TextIO [which in the io library has no encoding','line_number':222,'multiline':False]['text':' attribute).','line_number':223,'multiline':False]['text':' The current stream has a unicode encoding so no error handler is needed','line_number':230,'multiline':False]['text':' Python 3 doesn't seem to make this easy, handle a common case','line_number':235,'multiline':False]['text':' The default source encoding is actually "iso-8859-1" until Python 2.5 but','line_number':244,'multiline':False]['text':' using non-ascii causes a deprecation warning in 2.4 and it's cleaner to','line_number':245,'multiline':False]['text':' treat all versions the same way','line_number':246,'multiline':False]['text':' Pattern specified in <http://www.python.org/dev/peps/pep-0263/>','line_number':249,'multiline':False]['text':' Source starting with UTF-8 BOM is either UTF-8 or a SyntaxError','line_number':263,'multiline':False]['text':' Only the first two lines of the source file are examined','line_number':265,'multiline':False]['text':' Some codecs raise something other than LookupError if they don't','line_number':273,'multiline':False]['text':' support the given error handler, but not the text ones that could','line_number':274,'multiline':False]['text':' actually be used for Python source code','line_number':275,'multiline':False]['text':' GZ 2010-05-24: Really want the codepage number instead, the error','line_number':300,'multiline':False]['text':'                handling of standard codecs is more deterministic','line_number':301,'multiline':False]['text':' GZ 2010-05-23: We need this call to be after initialisation, but there's','line_number':303,'multiline':False]['text':'                no benefit in asking more than once as it's a global','line_number':304,'multiline':False]['text':'                setting that can change after the message is formatted.','line_number':305,'multiline':False]['text':' Apparently this is what traceback._some_str does. Sigh - RBC 20100623','line_number':316,'multiline':False]['text':' Apparently this is what traceback._some_str does. Sigh - RBC 20100623','line_number':323,'multiline':False]['text':' Okay, out of ideas, let higher level handle it','line_number':325,'multiline':False]['text':' Is a (deprecated) string exception','line_number':357,'multiline':False]['text':' Avoid duplicating the special formatting for SyntaxError here,','line_number':361,'multiline':False]['text':' instead create a new instance with unicode filename and line','line_number':362,'multiline':False]['text':' Potentially gives duff spacing, but that's a pre-existing issue','line_number':363,'multiline':False]['text':' Strange exception instance, fall through to generic code','line_number':367,'multiline':False]['text':' Errors during parsing give the line from buffer encoded as','line_number':369,'multiline':False]['text':' latin-1 or utf-8 or the encoding of the file depending on the','line_number':370,'multiline':False]['text':' coding and whether the patch for issue #1031213 is applied, so','line_number':371,'multiline':False]['text':' give up on trying to decode it and just read the file again','line_number':372,'multiline':False]['text':' GZ 2010-05-24: Not a great fallback message, but keep for the moment','line_number':394,'multiline':False]