['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * This program is both a simple test of some configuration code and a benchmark for
 * the same.  At the time of this program, we are actively looking at improving performance
 * of begin_transaction.  So, we measure the time taken for calling begin_transaction
 * different coding techniques that we'll call variants.  As we try out different approaches
 * we can add variants.  The "base" variant uses a configuration is formatted on each call.
 * One that is slightly better is where we choose which of many fixed configurations to use.
 *
 * For these variants, we are using a configuration string that has 4 variables,
 * which is exactly what MongoDB does.  Our strategy for measuring time is, for each
 * variant, do a large number (N_CALLS) of calls to begin_transaction
 * (end rollback_transaction), varying the parameters randomly.  We check that the
 * proper transaction flags are set after each begin_transaction call.  Before and after
 * the N_CALLS, we get system time and collect the difference.  So we do:
 *   TIME(N_CALLS of the first variant), TIME(N_CALLS of the second variant), etc.
 * We do that whole procedure a number of times (N_RUNS), and accumulate times for each
 * variant. This tends to smooth out any timing noise.
 *
 ','line_number':30,'multiline':True]['text':' ================ VARIANT 0 - base ================ ','line_number':59,'multiline':True]['text':'
 * begin_transaction_base_init --
 *     There is no initialization needed for the base implementation.
 ','line_number':61,'multiline':True]['text':'
 * begin_transaction_base --
 *     This is considered a typical implementation that a caller for begin_transaction will use. We
 *     incur the cost of formatting the configuration string on every call.
 ','line_number':72,'multiline':True]['text':' ================ VARIANT 1 - advance format ================ ','line_number':90,'multiline':True]['text':'
 * A faster implementation will take advantage of the finite number of configurations possible, and
 * we can do all formatting calls in advance.
 ','line_number':92,'multiline':True]['text':'
 * begin_transaction_advance_format_init --
 *     Set up the static structures needed for this implementation.
 ','line_number':99,'multiline':True]['text':'
 * begin_transaction_advance_format --
 *     An implementation of a begin_transaction caller, with a set of fixed config strings.
 ','line_number':125,'multiline':True]['text':' ================ Table of variants ================ ','line_number':141,'multiline':True]['text':'
 * do_config_run --
 *     Run the test for the given variant.
 ','line_number':153,'multiline':True]['text':' Initialize the RNG. ','line_number':174,'multiline':True]['text':'
             * Normal applications should not peer inside WT internals, but we need an easy way to
             * check that the configuration had the proper effect.
             ','line_number':190,'multiline':True]['text':' false ','line_number':195,'multiline':True]['text':' force ','line_number':198,'multiline':True]['text':' true ','line_number':201,'multiline':True]['text':'
 * main --
 *     The main entry point for a simple test/benchmark for the use of configuration strings.
 ','line_number':216,'multiline':True]['text':' Do any initialization needed by any of the variants. ','line_number':235,'multiline':True]['text':' Run the test, alternating the variants of tests. ','line_number':241,'multiline':True]