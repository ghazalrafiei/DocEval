['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' test_cursor_tracker.py','line_number':29,'multiline':False]['text':'       Tracker for testing cursor operations.  Keys and values','line_number':30,'multiline':False]['text':'       are generated automatically based somewhat on position,','line_number':31,'multiline':False]['text':'       and are stored simultaneously in the WT table and','line_number':32,'multiline':False]['text':'       in a compact representation in python data structures','line_number':33,'multiline':False]['text':'       (self.bitlist, self.vers).  A set of convenience functions','line_number':34,'multiline':False]['text':'       allows us to insert/remove/update keys on a cursor,','line_number':35,'multiline':False]['text':'       navigate forward, back, etc. and verify K/V pairs in','line_number':36,'multiline':False]['text':'       the table.  Comprehensive tests can then be built up.','line_number':37,'multiline':False]['text':'','line_number':38,'multiline':False]['text':'       All keys and values are generated, based on a triple:','line_number':39,'multiline':False]['text':'       [major, minor, version].  The key generator is a pure function','line_number':40,'multiline':False]['text':'       K that returns a string and takes inputs (major, minor).','line_number':41,'multiline':False]['text':'       K is implemented as encode_key() below, its inverse is decode_key().','line_number':42,'multiline':False]['text':'       The value generator is a pure function V that returns a string','line_number':43,'multiline':False]['text':'       based on inputs (major, minor, version).  It is implemented','line_number':44,'multiline':False]['text':'       as encode_value(), its inverse being decode_value().','line_number':45,'multiline':False]['text':'','line_number':46,'multiline':False]['text':'       When a test starts, calling cur_initial_conditions, a set','line_number':47,'multiline':False]['text':'       of N K/V populates the table.  These correspond to major','line_number':48,'multiline':False]['text':'       numbers.  For example, with N==3, major/minor numbers of','line_number':49,'multiline':False]['text':'       [0,0], [0,1], [0,2] are inserted into the table.','line_number':50,'multiline':False]['text':'       The table is then closed (and session closed) to guarantee','line_number':51,'multiline':False]['text':'       that the associated data is written to disk before continuing.','line_number':52,'multiline':False]['text':'       The theory is that since changes in WT are stored in skip lists,','line_number':53,'multiline':False]['text':'       we want the test to be aware of preexisting values (those having','line_number':54,'multiline':False]['text':'       minor number == 0) so we can try all combinations of adding','line_number':55,'multiline':False]['text':'       new skip list entries, and removing/updating both skip list','line_number':56,'multiline':False]['text':'       and original values.','line_number':57,'multiline':False]['text':'','line_number':58,'multiline':False]['text':'       After initial conditions are set up, the test calls functions','line_number':59,'multiline':False]['text':'       such as cur_insert to insert values.  Since minor numbers','line_number':60,'multiline':False]['text':'       sort secondarily to major, they will take logical positions','line_number':61,'multiline':False]['text':'       in specific places relative to major (preexisting) K/V pairs.','line_number':62,'multiline':False]['text':'','line_number':63,'multiline':False]['text':'       Updating an existing value is detected in the python data','line_number':64,'multiline':False]['text':'       structures, and result in incrementing the version number.','line_number':65,'multiline':False]['text':'       Thus, the key remains unchanged, but the associated value','line_number':66,'multiline':False]['text':'       changes (the size of the value may be altered as well).','line_number':67,'multiline':False]['text':'','line_number':68,'multiline':False]['text':'       TODO: we need to separate the cursor tracking information','line_number':69,'multiline':False]['text':'       (the current position where we believe we are) from','line_number':70,'multiline':False]['text':'       the database information (what we think is in the data storage).','line_number':71,'multiline':False]['text':'       Once that's done, we can have multiple cursor tests','line_number':72,'multiline':False]['text':'       (though simulating transactions would probably be beyond what','line_number':73,'multiline':False]['text':'       we want to do here).','line_number':74,'multiline':False]['text':' a print output for each WT API call','line_number':83,'multiline':False]['text':' traceapi and friends are used internally in this module','line_number':111,'multiline':False]['text':' not positioned on a valid element','line_number':150,'multiline':False]['text':' K/V data in cursor does not correspond to active data','line_number':153,'multiline':False]['text':' There are variants of {encode,decode}_{key,value} to be','line_number':205,'multiline':False]['text':' used with each table kind: 'row', 'col', 'fix'','line_number':206,'multiline':False]['text':' Prepend 0's to make the string exactly len 20','line_number':209,'multiline':False]['text':' 64 bits fits in 20 decimal digits','line_number':210,'multiline':False]['text':' Then, if we're configured to have a longer key','line_number':211,'multiline':False]['text':' size, we'll append some additional length','line_number':212,'multiline':False]['text':' that can be regenerated based on the first part of the key','line_number':213,'multiline':False]['text':' We use the same scheme as key.  So the 20 digits will','line_number':225,'multiline':False]['text':' be the same, but the last part may well be different','line_number':226,'multiline':False]['text':' if the size configuration is different.','line_number':227,'multiline':False]['text':' 64 bit key','line_number':239,'multiline':False]['text':' can only encode only 8 bits','line_number':253,'multiline':False]['text':' TODO:','line_number':297,'multiline':False]['text':'TODO: why doesn't self.bitlist.sort() work?','line_number':309,'multiline':False]['text':' TODO: handle the exception case','line_number':322,'multiline':False]['text':' Note: asymmetric with cur_previous, nopos corresponds to 'half'','line_number':383,'multiline':False]['text':' Cannot check immediately after a remove, since the K/V in the cursor','line_number':413,'multiline':False]['text':' does not correspond to anything','line_number':414,'multiline':False]['text':' Note: dumpcursor() resets the cursor position,','line_number':482,'multiline':False]['text':' but we're about to issue a fatal error, so it's okay','line_number':483,'multiline':False]