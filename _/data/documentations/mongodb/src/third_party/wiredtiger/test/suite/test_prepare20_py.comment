['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':' test_prepare20.py','line_number':30,'multiline':False]['text':' Check that we can use an application-level log to replay unstable transactions.','line_number':31,'multiline':False]['text':' Do write the logs immediately, but don't waste time fsyncing them.','line_number':38,'multiline':False]['text':' Application-level log infrastructure. This is real simpleminded and not','line_number':64,'multiline':False]['text':' expected to do very much other than make sure the basic premise works.','line_number':65,'multiline':False]['text':' Some operation codes for the application log.','line_number':69,'multiline':False]['text':'self.prout("stable {}".format(stabletime))','line_number':130,'multiline':False]['text':' First pass: find prepared txns. Ignore (thus abort) any that didn't even prepare.','line_number':131,'multiline':False]['text':' "key" is the txnid','line_number':136,'multiline':False]['text':' "key" is the txnid','line_number':139,'multiline':False]['text':' Second pass: replay values from non-aborted txns.','line_number':141,'multiline':False]['text':' "key" is the txnid','line_number':148,'multiline':False]['text':'self.prout("begin {}".format(k))','line_number':152,'multiline':False]['text':'self.prout("write {} {}".format(k, str(newv)[0:2]))','line_number':159,'multiline':False]['text':'self.prout("preparetime {}".format(k))','line_number':163,'multiline':False]['text':'self.prout("prepare {}".format(k))','line_number':168,'multiline':False]['text':'self.prout("committime {}".format(k))','line_number':172,'multiline':False]['text':'self.prout("durabletime {} -> {}".format(k, durabletime))','line_number':178,'multiline':False]['text':'self.prout("commit {}".format(k))','line_number':184,'multiline':False]['text':' If we have a prepared and uncommitted transaction, commit it.','line_number':190,'multiline':False]['text':' (Note that we don't handle the case where we write values and don't finish preparing.)','line_number':191,'multiline':False]['text':'self.prout("final commit")','line_number':197,'multiline':False]['text':' Now the test.','line_number':199,'multiline':False]['text':' Create one table for data and another to be an application-level log.','line_number':205,'multiline':False]['text':' The log's format is application-lsn -> operation, key, oldvalue, newvalue','line_number':206,'multiline':False]['text':' Write some baseline data first and make it stable.','line_number':228,'multiline':False]['text':' Write and log a transaction.','line_number':239,'multiline':False]['text':' Optionally checkpoint here.','line_number':247,'multiline':False]['text':' Write and log another transaction.','line_number':252,'multiline':False]['text':' Optionally commit now.','line_number':258,'multiline':False]['text':' Optionally checkpoint here.','line_number':263,'multiline':False]['text':' Use the log session to checkpoint: checkpointing from the main session','line_number':266,'multiline':False]['text':' will fail if we just prepared without committing.','line_number':267,'multiline':False]['text':' Now crash.','line_number':270,'multiline':False]['text':' Replay the application log.','line_number':275,'multiline':False]['text':' Make everything stable.','line_number':278,'multiline':False]['text':' We should now see all the data.','line_number':282,'multiline':False]['text':' Assert we replayed the right number of writes from the application log.','line_number':296,'multiline':False]