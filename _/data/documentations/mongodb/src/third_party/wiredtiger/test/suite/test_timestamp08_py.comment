['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':28,'multiline':False]['text':' test_timestamp08.py','line_number':29,'multiline':False]['text':'   Timestamps: API','line_number':30,'multiline':False]['text':'','line_number':31,'multiline':False]['text':' Begin by adding some data.','line_number':44,'multiline':False]['text':' Cannot set a zero timestamp.','line_number':50,'multiline':False]['text':' In a single transaction it is illegal to set a commit timestamp','line_number':60,'multiline':False]['text':' older than the first commit timestamp used for this transaction.','line_number':61,'multiline':False]['text':' Check both timestamp_transaction_uint and commit_transaction APIs.','line_number':62,'multiline':False]['text':' Commit timestamp > Oldest timestamp','line_number':71,'multiline':False]['text':' Commit timestamp > Stable timestamp.','line_number':85,'multiline':False]['text':' Check both timestamp_transaction and commit_transaction APIs.','line_number':86,'multiline':False]['text':' Oldest and stable timestamp are set to 5 at the moment.','line_number':87,'multiline':False]['text':' When explicitly set, commit timestamp for a transaction can be earlier','line_number':95,'multiline':False]['text':' than the commit timestamp of an earlier transaction.','line_number':96,'multiline':False]['text':' Read timestamp >= oldest timestamp','line_number':112,'multiline':False]['text':' This is a MongoDB message, not written in standalone builds.','line_number':119,'multiline':False]['text':' c[8] is not visible at read_timestamp < 8','line_number':124,'multiline':False]['text':' We can move the oldest timestamp backwards with "force"','line_number':142,'multiline':False]['text':' This is a MongoDB message, not written in standalone builds.','line_number':149,'multiline':False]['text':' Since this is a non-prepared transaction, we'll be using the commit','line_number':166,'multiline':False]['text':' timestamp when calculating all_durable since it's implied that they're','line_number':167,'multiline':False]['text':' the same thing.','line_number':168,'multiline':False]['text':' The all_durable timestamp should return 0 if there a no transactions that have committed','line_number':173,'multiline':False]['text':' yet.','line_number':174,'multiline':False]['text':' We have a running transaction with a lower commit_timestamp than we've','line_number':181,'multiline':False]['text':' seen before. So all_durable should return (lowest commit timestamp - 1).','line_number':182,'multiline':False]['text':' After committing, go back to the value we saw previously.','line_number':190,'multiline':False]['text':' For prepared transactions, we take into account the durable timestamp','line_number':194,'multiline':False]['text':' when calculating all_durable.','line_number':195,'multiline':False]['text':' If we have a commit timestamp for a prepared transaction, then we','line_number':201,'multiline':False]['text':' don't want that to be visible in the all_durable calculation.','line_number':202,'multiline':False]['text':' Now take into account the durable timestamp.','line_number':207,'multiline':False]['text':' All durable moves back when we have a running prepared transaction','line_number':213,'multiline':False]['text':' with a lower durable timestamp than has previously been committed.','line_number':214,'multiline':False]['text':' If we have a commit timestamp for a prepared transaction, then we','line_number':220,'multiline':False]['text':' don't want that to be visible in the all_durable calculation.','line_number':221,'multiline':False]['text':' Now take into account the durable timestamp.','line_number':226,'multiline':False]['text':' Now test a scenario with multiple commit timestamps for a single txn.','line_number':235,'multiline':False]['text':' Make more changes and set a new commit timestamp.','line_number':242,'multiline':False]['text':' Our calculation should use the first commit timestamp so there should','line_number':243,'multiline':False]['text':' be no observable difference to the all_durable value.','line_number':244,'multiline':False]['text':' Once committed, we go back to 8.','line_number':250,'multiline':False]['text':' After a checkpoint all_durable should return the checkpoint timestamp.','line_number':255,'multiline':False]['text':' Before any running transactions have committed all_durable should return the checkpoint','line_number':263,'multiline':False]['text':' timestamp.','line_number':264,'multiline':False]['text':' Now the all_durable reflect the last committed transaction.','line_number':268,'multiline':False]