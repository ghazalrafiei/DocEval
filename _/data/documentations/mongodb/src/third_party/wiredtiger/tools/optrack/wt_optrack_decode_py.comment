['text':'!/usr/bin/env python','line_number':1,'multiline':False]['text':'','line_number':2,'multiline':False]['text':' Public Domain 2014-present MongoDB, Inc.','line_number':3,'multiline':False]['text':' Public Domain 2008-2014 WiredTiger, Inc.','line_number':4,'multiline':False]['text':'','line_number':5,'multiline':False]['text':' This is free and unencumbered software released into the public domain.','line_number':6,'multiline':False]['text':'','line_number':7,'multiline':False]['text':' Anyone is free to copy, modify, publish, use, compile, sell, or','line_number':8,'multiline':False]['text':' distribute this software, either in source code form or as a compiled','line_number':9,'multiline':False]['text':' binary, for any purpose, commercial or non-commercial, and by any','line_number':10,'multiline':False]['text':' means.','line_number':11,'multiline':False]['text':'','line_number':12,'multiline':False]['text':' In jurisdictions that recognize copyright laws, the author or authors','line_number':13,'multiline':False]['text':' of this software dedicate any and all copyright interest in the','line_number':14,'multiline':False]['text':' software to the public domain. We make this dedication for the benefit','line_number':15,'multiline':False]['text':' of the public at large and to the detriment of our heirs and','line_number':16,'multiline':False]['text':' successors. We intend this dedication to be an overt act of','line_number':17,'multiline':False]['text':' relinquishment in perpetuity of all present and future rights to this','line_number':18,'multiline':False]['text':' software under copyright law.','line_number':19,'multiline':False]['text':'','line_number':20,'multiline':False]['text':' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,','line_number':21,'multiline':False]['text':' EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF','line_number':22,'multiline':False]['text':' MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.','line_number':23,'multiline':False]['text':' IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR','line_number':24,'multiline':False]['text':' OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,','line_number':25,'multiline':False]['text':' ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR','line_number':26,'multiline':False]['text':' OTHER DEALINGS IN THE SOFTWARE.','line_number':27,'multiline':False]['text':'','line_number':41,'multiline':False]['text':' This log version must be the same as that defined in ../src/include/optrack.h','line_number':42,'multiline':False]['text':'','line_number':43,'multiline':False]['text':' Read lines from the map file and build an in-memory map','line_number':75,'multiline':False]['text':' of translations. Each line has a function ID followed by space and','line_number':76,'multiline':False]['text':' followed by the function name.','line_number':77,'multiline':False]['text':'','line_number':78,'multiline':False]['text':' a map file is usually small','line_number':79,'multiline':False]['text':'','line_number':106,'multiline':False]['text':' The format of the record is written down in src/include/optrack.h','line_number':107,'multiline':False]['text':' file in the WiredTiger source tree. The current implementation assumes','line_number':108,'multiline':False]['text':' a record of three fields. The first field is the 8-byte timestamp.','line_number':109,'multiline':False]['text':' The second field is the 2-byte function ID. The third field is the','line_number':110,'multiline':False]['text':' 2-byte operation type: '0' for function entry, '1' for function exit.','line_number':111,'multiline':False]['text':' The record size would be padded to 16 bytes in the C implementation by','line_number':112,'multiline':False]['text':' the compiler, because we keep an array of records, and each new record','line_number':113,'multiline':False]['text':' has to be 8-byte aligned, since the first field has the size 8 bytes.','line_number':114,'multiline':False]['text':' So we explicitly pad the track record structure in the implementation','line_number':115,'multiline':False]['text':' to make it clear what the record size is.','line_number':116,'multiline':False]['text':'','line_number':117,'multiline':False]['text':'','line_number':136,'multiline':False]['text':' HEADER_SIZE must be the same as the size of WT_OPTRACK_HEADER','line_number':137,'multiline':False]['text':' structure defined in ../src/include/optrack.h','line_number':138,'multiline':False]['text':'','line_number':139,'multiline':False]['text':' If the version number is 2, the header contains three fields:','line_number':162,'multiline':False]['text':' version, thread type, and clock ticks per nanosecond).','line_number':163,'multiline':False]['text':' If the version number is 3 or greater, the header also contains','line_number':164,'multiline':False]['text':' field: an 8-byte timestamp in seconds since the Epoch, as','line_number':165,'multiline':False]['text':' would be returned by a call to time() on Unix.','line_number':166,'multiline':False]['text':'','line_number':167,'multiline':False]['text':' Open the log file for reading','line_number':208,'multiline':False]['text':' Read and validate log header','line_number':216,'multiline':False]['text':' Find out if this log file was generated by an internal or an','line_number':222,'multiline':False]['text':' external thread. This will be reflected in the output file name.','line_number':223,'multiline':False]['text':'','line_number':224,'multiline':False]['text':' This ratio tells us how many clock ticks there are in a nanosecond','line_number':227,'multiline':False]['text':' on the processor on which this trace file was generated. When the WT','line_number':228,'multiline':False]['text':' library logs this ratio, it multiplies it by 1000. So we have to divide','line_number':229,'multiline':False]['text':' it back to get an accurate ratio.','line_number':230,'multiline':False]['text':' Open the text file for writing','line_number':235,'multiline':False]['text':' The first line of the output file contains the seconds from Epoch','line_number':248,'multiline':False]['text':' Use a copy since we will be deleting entries from the original','line_number':282,'multiline':False]['text':' If we have not found a terminated process, sleep for a while','line_number':288,'multiline':False]['text':' Parse the map of function ID to name translations.','line_number':320,'multiline':False]['text':' Determine the target job parallelism','line_number':327,'multiline':False]['text':' Prepare the processes that will parse files, one per file','line_number':336,'multiline':False]['text':' Spawn these processes, not exceeding the desired parallelism','line_number':342,'multiline':False]['text':' Find at least one terminated process','line_number':351,'multiline':False]['text':' Wait for all processes to terminate','line_number':354,'multiline':False]