['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':' Statistics to be collected for the Google cloud storage.','line_number':42,'multiline':False]['text':'
 * The first struct member must be the WiredTiger interface that is being implemented.
 ','line_number':50,'multiline':True]['text':' Return a customized file system to access GCP storage source.','line_number':122,'multiline':False]['text':' Check if bucket name is given','line_number':129,'multiline':False]['text':' Fail if there is no authentication provided.','line_number':135,'multiline':False]['text':' Get any prefix to be used for the object keys.','line_number':148,'multiline':False]['text':' Fetch the native WiredTiger file system.','line_number':160,'multiline':False]['text':' Create the file system and allocate memory for file system.','line_number':168,'multiline':False]['text':' Set variables specific to GCP.','line_number':177,'multiline':False]['text':' Create connection to google cloud.','line_number':182,'multiline':False]['text':' Map google cloud functions to the file system.','line_number':190,'multiline':False]['text':' Add to the list of the active file systems. Lock will be freed when the scope is exited.','line_number':201,'multiline':False]['text':' Add a reference to the storage source so we can reference count to know when to terminate.','line_number':211,'multiline':False]['text':' File handle close.','line_number':233,'multiline':False]['text':' If there are other active instances of the file being open, do not close file handle.','line_number':239,'multiline':False]['text':' No more active instances of open file, close the file handle.','line_number':243,'multiline':False]['text':' Erase remove idiom is used here to remove specific file system.','line_number':247,'multiline':False]['text':' Remove the current filesystem from the active filesystems list. The lock will be freed when','line_number':263,'multiline':False]['text':' the scope is exited.','line_number':264,'multiline':False]['text':' Erase remove idiom is used here to remove specific file system.','line_number':267,'multiline':False]['text':' Flush a file to the GCP storage.','line_number':277,'multiline':False]['text':' std::filesystem::canonical will throw an exception if object does not exist so','line_number':288,'multiline':False]['text':' check if the object exists.','line_number':289,'multiline':False]['text':' Confirm that the file exists on the native filesystem.','line_number':294,'multiline':False]['text':' Check if a file has been flushed successfully by checking if it exists in the cloud.','line_number':306,'multiline':False]['text':' Check if the object exists in the GCP storage source.','line_number':325,'multiline':False]['text':' Google cloud only supports opening the file in read only mode.','line_number':361,'multiline':False]['text':' Only data files and regular files should be opened.','line_number':367,'multiline':False]['text':' Check if object exists in the cloud.','line_number':373,'multiline':False]['text':' Check if there is already an existing file handle open.','line_number':387,'multiline':False]['text':' If an active file handle does not exist, create a new file handle for the current file.','line_number':398,'multiline':False]['text':' Define functions needed for google cloud with read-only privilleges.','line_number':410,'multiline':False]['text':' Exclusive access is required when adding file handles to list of file handles. The lock_guard','line_number':427,'multiline':False]['text':' will unlock automatically when the scope is exited.','line_number':428,'multiline':False]['text':' POSIX remove is not supported for cloud objects.','line_number':439,'multiline':False]['text':' POSIX rename is not supported for cloud objects.','line_number':452,'multiline':False]['text':' Locks are always granted.','line_number':469,'multiline':False]['text':' Get file size if the object exists.','line_number':484,'multiline':False]['text':' Helper function to return a list of object names for the given location.','line_number':513,'multiline':False]['text':' Add a terminating '/' if one doesn't exist.','line_number':528,'multiline':False]['text':' Return a list of object names for the given location.','line_number':551,'multiline':False]['text':'
 * Allocate and initialize an array of C strings from vector of strings.
 *
 * Requires count <= objects.size(). count==0 is valid, and in this case object_list will be set to
 * nullptr. Caller is responsible for memory allocated for object_list.
 ','line_number':576,'multiline':True]['text':' Return a single object name for the given location.','line_number':615,'multiline':False]['text':' Free memory allocated by gcp_object_list.','line_number':624,'multiline':False]['text':' Remove logging system from the google cloud system.','line_number':646,'multiline':False]['text':'
     * Terminate any active filesystems. There are no references to the storage source, so it is
     * safe to walk the active filesystem list without a lock. The removal from the list happens
     * under a lock. Also, removal happens from the front and addition at the end, so we are safe.
     ','line_number':649,'multiline':True]['text':' Log collected statistics.','line_number':666,'multiline':False]['text':' Create a logger for the storage source. Verbose level defaults to WT_VERBOSE_ERROR (-3) if it','line_number':690,'multiline':False]['text':' is outside the valid range or not found.','line_number':691,'multiline':False]['text':' Initialize the GCP logging.','line_number':705,'multiline':False]['text':' Allocate a gcp storage structure, with a WT_STORAGE structure as the first field. This allows','line_number':708,'multiline':False]['text':' us to treat references to either type of structure as a reference to the other type.','line_number':709,'multiline':False]['text':' The first reference is implied by the call to add_storage_source.','line_number':716,'multiline':False]['text':' Load the storage.','line_number':719,'multiline':False]