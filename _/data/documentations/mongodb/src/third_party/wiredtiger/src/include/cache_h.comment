['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * Helper: in order to read without any calls to eviction, we have to ignore the cache size and
 * disable splits.
 ','line_number':9,'multiline':True]['text':'
 * Tuning constants: I hesitate to call this tuning, but we want to review some number of pages from
 * each file's in-memory tree for each page we evict.
 ','line_number':15,'multiline':True]['text':' Maximum walk points ','line_number':19,'multiline':True]['text':' Pages tracked across file visits ','line_number':20,'multiline':True]['text':' Pages added each walk ','line_number':21,'multiline':True]['text':'
 * WT_EVICT_ENTRY --
 *	Encapsulation of an eviction candidate.
 ','line_number':23,'multiline':True]['text':' Enclosing btree object ','line_number':28,'multiline':True]['text':' Page to flush/evict ','line_number':29,'multiline':True]['text':' Relative eviction priority ','line_number':30,'multiline':True]['text':' Two ordinary queues plus urgent ','line_number':33,'multiline':True]['text':' Urgent queue index ','line_number':34,'multiline':True]['text':'
 * WT_EVICT_QUEUE --
 *	Encapsulation of an eviction candidate queue.
 ','line_number':36,'multiline':True]['text':' Eviction LRU queue ','line_number':41,'multiline':True]['text':' LRU pages being tracked ','line_number':42,'multiline':True]['text':' LRU current page to be evicted ','line_number':43,'multiline':True]['text':' LRU list pages to evict ','line_number':44,'multiline':True]['text':' LRU entries in the queue ','line_number':45,'multiline':True]['text':' LRU maximum eviction slot used ','line_number':46,'multiline':True]['text':' Cache operations. ','line_number':49,'multiline':True]['text':'
 * WiredTiger cache structure.
 ','line_number':59,'multiline':True]['text':'
     * Different threads read/write pages to/from the cache and create pages in the cache, so we
     * cannot know precisely how much memory is in use at any specific time. However, even though
     * the values don't have to be exact, they can't be garbage, we track what comes in and what
     * goes out and calculate the difference as needed.
     ','line_number':63,'multiline':True]['text':' Bytes/pages currently dirty ','line_number':70,'multiline':True]['text':' Bytes/pages discarded by eviction ','line_number':73,'multiline':True]['text':' Bytes of disk images (internal) ','line_number':74,'multiline':True]['text':' Bytes of disk images (leaf) ','line_number':75,'multiline':True]['text':' Bytes/pages in memory ','line_number':76,'multiline':True]['text':' Bytes of internal pages ','line_number':77,'multiline':True]['text':' Bytes read into memory ','line_number':78,'multiline':True]['text':' Bytes of updates to pages ','line_number':79,'multiline':True]['text':'
     * History store cache usage. TODO: The values for these variables are cached and potentially
     * outdated.
     ','line_number':82,'multiline':True]['text':' History store bytes inmem ','line_number':86,'multiline':True]['text':' History store bytes inmem dirty ','line_number':87,'multiline':True]['text':' Eviction progress count ','line_number':94,'multiline':True]['text':' Tracked eviction progress ','line_number':95,'multiline':True]['text':' User threads waited for cache ','line_number':97,'multiline':True]['text':' Pages evicted by user threads ','line_number':98,'multiline':True]['text':' Largest page seen at eviction ','line_number':100,'multiline':True]['text':' Longest milliseconds spent at a single eviction ','line_number':101,'multiline':True]['text':' Total milliseconds spent inside a nested eviction ','line_number':102,'multiline':True]['text':' Stuck time ','line_number':103,'multiline':True]['text':'
     * Read information.
     ','line_number':105,'multiline':True]['text':' Current page read generation ','line_number':108,'multiline':True]['text':' Oldest read generation the eviction
                               * server saw in its last queue load ','line_number':109,'multiline':True]['text':' Number of eviction passes ','line_number':111,'multiline':True]['text':'
     * Eviction thread information.
     ','line_number':113,'multiline':True]['text':' Eviction server condition ','line_number':116,'multiline':True]['text':' Eviction walk location ','line_number':117,'multiline':True]['text':'
     * Eviction threshold percentages use double type to allow for specifying percentages less than
     * one.
     ','line_number':119,'multiline':True]['text':' Percent to allow dirty ','line_number':123,'multiline':True]['text':' Percent to trigger dirty eviction ','line_number':124,'multiline':True]['text':' Percent to trigger eviction ','line_number':125,'multiline':True]['text':' Percent to end eviction ','line_number':126,'multiline':True]['text':' Percent to allow for updates ','line_number':127,'multiline':True]['text':' Percent of updates to trigger eviction ','line_number':128,'multiline':True]['text':' Percent to reduce dirty
                                        to during checkpoint scrubs ','line_number':130,'multiline':True]['text':' Current scrub target ','line_number':132,'multiline':True]['text':' Cache percent adjustment ','line_number':134,'multiline':True]['text':' Maximum time an operation waits for space in cache ','line_number':135,'multiline':True]['text':' Maximum time the cache can be stuck for in diagnostic mode
                                        before timing out ','line_number':136,'multiline':True]['text':'
     * Eviction thread tuning information.
     ','line_number':139,'multiline':True]['text':' Data needed to tune ','line_number':142,'multiline':True]['text':' Time of last action ','line_number':143,'multiline':True]['text':' Time of last check ','line_number':144,'multiline':True]['text':' Number of values tried ','line_number':145,'multiline':True]['text':' Progress counter ','line_number':146,'multiline':True]['text':' Max progress rate ','line_number':147,'multiline':True]['text':' Are we stable? ','line_number':148,'multiline':True]['text':' Best performing value ','line_number':149,'multiline':True]['text':'
     * Pass interrupt counter.
     ','line_number':151,'multiline':True]['text':' Interrupt eviction pass. ','line_number':154,'multiline':True]['text':'
     * LRU eviction list information.
     ','line_number':156,'multiline':True]['text':' Eviction pass lock ','line_number':159,'multiline':True]['text':' Eviction pass session ','line_number':160,'multiline':True]['text':' LRU walk current tree ','line_number':161,'multiline':True]['text':' Eviction current queue lock ','line_number':163,'multiline':True]['text':' LRU current queue in use ','line_number':165,'multiline':True]['text':' LRU next queue to fill.
                                            This is usually the same as the
                                            "other" queue but under heavy
                                            load the eviction server will
                                            start filling the current queue
                                            before it switches. ','line_number':166,'multiline':True]['text':' LRU queue not in use ','line_number':172,'multiline':True]['text':' LRU urgent queue ','line_number':173,'multiline':True]['text':' LRU list eviction slots ','line_number':174,'multiline':True]['text':'
     * Score of how aggressive eviction should be about selecting eviction candidates. If eviction
     * is struggling to make progress, this score rises (up to a maximum of 100), at which point the
     * cache is "stuck" and transactions will be rolled back.
     ','line_number':179,'multiline':True]['text':'
     * Score of how often LRU queues are empty on refill. This score varies between 0 (if the queue
     * hasn't been empty for a long time) and 100 (if the queue has been empty the last 10 times we
     * filled up.
     ','line_number':186,'multiline':True]['text':' History store table file ID ','line_number':193,'multiline':True]['text':'
     * The "history_activity" verbose messages are throttled to once per checkpoint. To accomplish
     * this we track the checkpoint generation for the most recent read and write verbose messages.
     ','line_number':195,'multiline':True]['text':'
     * Cache pool information.
     ','line_number':202,'multiline':True]['text':' Calculated pressure from this pass ','line_number':205,'multiline':True]['text':' Maximum size for this cache ','line_number':206,'multiline':True]['text':' Base size for this cache ','line_number':207,'multiline':True]['text':' May be used for cache management ','line_number':208,'multiline':True]['text':' Post change stabilization ','line_number':209,'multiline':True]['text':' Thread ID for cache pool manager ','line_number':210,'multiline':True]['text':' State seen at the last pass of the shared cache manager ','line_number':211,'multiline':True]['text':' User eviction count at last review ','line_number':212,'multiline':True]['text':' User wait count at last review ','line_number':213,'multiline':True]['text':' Read count at last review ','line_number':214,'multiline':True]['text':'
 * Flags.
 ','line_number':216,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':219,'multiline':True]['text':' The active cache pool manager ','line_number':220,'multiline':True]['text':' Cache pool thread running ','line_number':221,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':222,'multiline':True]['text':' Cache pool flags ','line_number':223,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':225,'multiline':True]['text':' Evict clean pages ','line_number':226,'multiline':True]['text':' Clean % blocking app threads ','line_number':227,'multiline':True]['text':' Evict dirty pages ','line_number':228,'multiline':True]['text':' Dirty % blocking app threads ','line_number':229,'multiline':True]['text':' Don't add read pages to cache ','line_number':230,'multiline':True]['text':' Scrub dirty pages ','line_number':231,'multiline':True]['text':' Evict pages with updates ','line_number':232,'multiline':True]['text':' Update % blocking app threads ','line_number':233,'multiline':True]['text':' Pages are in the urgent queue ','line_number':234,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':235,'multiline':True]['text':'
 * WT_CACHE_POOL --
 *	A structure that represents a shared cache.
 ','line_number':247,'multiline':True]['text':' Reference count for structure. ','line_number':259,'multiline':True]['text':' Locked: List of connections participating in the cache pool. ','line_number':260,'multiline':True]['text':' Cache pool has a manager thread ','line_number':263,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':265,'multiline':True]['text':' Cache pool is active ','line_number':266,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 8 ','line_number':267,'multiline':True]['text':'
 * Optimize comparisons against the history store URI, flag handles that reference the history store
 * file.
 ','line_number':271,'multiline':True]['text':' Flags used with __wt_evict ','line_number':277,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':278,'multiline':True]['text':' Closing connection or tree ','line_number':279,'multiline':True]['text':' Splits not allowed ','line_number':280,'multiline':True]['text':' Urgent eviction ','line_number':281,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':282,'multiline':True]