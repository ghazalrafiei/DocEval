['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':' Chunk cache throttle ','line_number':10,'multiline':True]['text':' Checkpoint throttle ','line_number':11,'multiline':True]['text':' Eviction throttle ','line_number':12,'multiline':True]['text':' Logging throttle ','line_number':13,'multiline':True]['text':' Read throttle ','line_number':14,'multiline':True]['text':' Config minimum size ','line_number':17,'multiline':True]['text':'
 * The per-file threshold means we won't start the background fsync on a file until it crosses the
 * per-file threshold of data written. The other minimum threshold defines a minimum threshold for
 * the background thread. Otherwise we compute a percentage of the given capacity.
 ','line_number':19,'multiline':True]['text':'
 * If we're being asked to sleep a short amount of time, ignore it. A non-zero value means there may
 * be a temporary violation of the capacity limitation, but one that would even out. That is,
 * possibly fewer sleeps with the risk of more choppy behavior as this number is larger.
 ','line_number':28,'multiline':True]['text':'
 * When given a total capacity, divide it up for each subsystem. These defines represent the
 * percentage of the total capacity that we allow for each subsystem capacity. We allow and expect
 * the sum of the subsystems to exceed 100, as often they are not at their maximum at the same time.
 * In any event, we track the total capacity separately, so it is never exceeded.
 ','line_number':35,'multiline':True]['text':' Bytes/sec chunk cache capacity ','line_number':48,'multiline':True]['text':' Bytes/sec checkpoint capacity ','line_number':49,'multiline':True]['text':' Bytes/sec eviction capacity ','line_number':50,'multiline':True]['text':' Bytes/sec logging capacity ','line_number':51,'multiline':True]['text':' Bytes/sec read capacity ','line_number':52,'multiline':True]['text':' Bytes/sec total capacity ','line_number':53,'multiline':True]['text':' Capacity size period ','line_number':54,'multiline':True]['text':' Written this period ','line_number':56,'multiline':True]['text':' Capacity signalled ','line_number':57,'multiline':True]['text':'
     * A reservation is a point in time when a read or write for a subsystem can be scheduled, so as
     * not to overrun the given capacity. These values hold the next available reservation, in
     * nanoseconds since the epoch. Getting a reservation with a future time implies sleeping until
     * that time; getting a reservation with a past time implies that the operation can be done
     * immediately.
     ','line_number':59,'multiline':True]['text':' Atomic: next chunk cache write ','line_number':66,'multiline':True]['text':' Atomic: next checkpoint write ','line_number':67,'multiline':True]['text':' Atomic: next eviction write ','line_number':68,'multiline':True]['text':' Atomic: next logging write ','line_number':69,'multiline':True]['text':' Atomic: next read ','line_number':70,'multiline':True]['text':' Atomic: next operation of any kind ','line_number':71,'multiline':True]