['text':'
 * CRC-32 algorithms implemented with the z/Architecture Vector Extension Facility.
 *
 * Copyright IBM Corp. 2015 Author(s): Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
 *
 ','line_number':1,'multiline':True]['text':' RHEL 7 has kernel support, but does not define this constant in the lib c headers. ','line_number':17,'multiline':True]['text':' Prototypes for functions in assembly files ','line_number':29,'multiline':True]['text':'
 * __wt_crc32c_le --
 *     Pure C implementations of CRC, one byte at a time
 ','line_number':32,'multiline':True]['text':'
 * DEFINE_CRC32_VX() - Define a CRC-32 function using the vector extension
 *
 * Creates a function to perform a particular CRC-32 computation. Depending on the message buffer,
 * the hardware-accelerated or software implementation is used. Note that the message buffer is
 * aligned to improve fetch operations of VECTOR LOAD MULTIPLE instructions.
 *
 ','line_number':46,'multiline':True]['text':' Main CRC-32 functions ','line_number':81,'multiline':True]['text':'
 * __wt_checksum_hw --
 *     WiredTiger: return a checksum for a chunk of memory.
 ','line_number':84,'multiline':True]['text':'
 * wiredtiger_crc32c_func --
 *     WiredTiger: detect CRC hardware and return the checksum function.
 ','line_number':107,'multiline':True]['text':'
     * This function calls slow hardware functions; if the application doesn't realize that, they
     * may call it on every request.
     ','line_number':118,'multiline':True]['text':'
 * __wt_crc32c_le_wrapper --
 *     Wrapper function for CRC in software in the little endian format.
 ','line_number':136,'multiline':True]['text':'
 * wiredtiger_crc32c_with_seed_func --
 *     WiredTiger: Doesn't support hardware CRC calculation over multiple chunks on the big-endian
 *     platform - fall back to software implementation.
 ','line_number':146,'multiline':True]