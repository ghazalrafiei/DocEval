['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __wt_curjoin_joined --
 *     Produce an error that this cursor is being used in a join call.
 ','line_number':29,'multiline':True]['text':'
 * __curjoin_iter_init --
 *     Initialize an iteration for the index managed by a join entry.
 ','line_number':43,'multiline':True]['text':'
 * __curjoin_iter_close --
 *     Close the iteration, release resources.
 ','line_number':63,'multiline':True]['text':'
 * __curjoin_iter_close_all --
 *     Free the iterator and all of its children recursively.
 ','line_number':78,'multiline':True]['text':'
 * __curjoin_iter_reset --
 *     Reset an iteration to the starting point.
 ','line_number':100,'multiline':True]['text':'
 * __curjoin_iter_ready --
 *     Check the positioned flag for all nested iterators.
 ','line_number':114,'multiline':True]['text':'
 * __curjoin_iter_set_entry --
 *     Set the current entry for an iterator.
 ','line_number':129,'multiline':True]['text':'
 * __curjoin_iter_bump --
 *     Called to advance the iterator to the next endpoint, which may in turn advance to the next
 *     entry. We cannot skip a call to this at the end of an iteration because we'll need to advance
 *     the position to the end.
 ','line_number':201,'multiline':True]['text':'
 * __curjoin_iter_next --
 *     Get the next item in an iteration.
 ','line_number':237,'multiline':True]['text':' The child did the work, we're done. ','line_number':259,'multiline':True]['text':'
     * Set our key to the primary key, we'll also need this to check membership.
     ','line_number':289,'multiline':True]['text':'
 * __curjoin_close --
 *     WT_CURSOR::close for join cursors.
 ','line_number':299,'multiline':True]['text':' This is owned by the table ','line_number':319,'multiline':True]['text':'
 * __curjoin_endpoint_init_key --
 *     Set the key in the reference endpoint.
 ','line_number':355,'multiline':True]['text':' Extract and save the index's logical key. ','line_number':370,'multiline':True]['text':'
 * __curjoin_entries_in_range --
 *     Check if a key is in the range specified by the remaining entries, returning WT_NOTFOUND if
 *     not.
 ','line_number':388,'multiline':True]['text':'
 * __curjoin_entry_in_range --
 *     Check if a key is in the range specified by the entry, returning WT_NOTFOUND if not.
 ','line_number':424,'multiline':True]['text':'
     * The iterator may have already satisfied some endpoint conditions. If so and we're a
     * disjunction, we're done. If so and we're a conjunction, we can start past the satisfied
     * conditions.
     ','line_number':442,'multiline':True]['text':'
                 * Even though this cursor is done, we still need to bump (advance it), to mark the
                 * iteration as complete.
                 ','line_number':487,'multiline':True]['text':'
 * __curjoin_extract_insert --
 *     Handle a key produced by a custom extractor.
 ','line_number':511,'multiline':True]['text':'
     * This insert method may be called multiple times during a single extraction. If we already
     * have a definitive answer to the membership question, exit early.
     ','line_number':523,'multiline':True]['text':'
     * We appended a padding byte to the key to avoid rewriting the last column. Strip that away
     * here.
     ','line_number':534,'multiline':True]['text':'
 * __curjoin_entry_member --
 *     Do a membership check for a particular index that was joined, if not a member, returns
 *     WT_NOTFOUND.
 ','line_number':551,'multiline':True]['text':' get-key ','line_number':562,'multiline':True]['text':' get-value ','line_number':563,'multiline':True]['text':' get-raw-key-value ','line_number':564,'multiline':True]['text':' set-key ','line_number':565,'multiline':True]['text':' set-value ','line_number':566,'multiline':True]['text':' compare ','line_number':567,'multiline':True]['text':' equals ','line_number':568,'multiline':True]['text':' next ','line_number':569,'multiline':True]['text':' prev ','line_number':570,'multiline':True]['text':' reset ','line_number':571,'multiline':True]['text':' search ','line_number':572,'multiline':True]['text':' search-near ','line_number':573,'multiline':True]['text':' insert ','line_number':574,'multiline':True]['text':' modify ','line_number':575,'multiline':True]['text':' update ','line_number':576,'multiline':True]['text':' remove ','line_number':577,'multiline':True]['text':' reserve ','line_number':578,'multiline':True]['text':' reconfigure ','line_number':579,'multiline':True]['text':' largest_key ','line_number':580,'multiline':True]['text':' bound ','line_number':581,'multiline':True]['text':' cache ','line_number':582,'multiline':True]['text':' reopen ','line_number':583,'multiline':True]['text':' checkpoint ID ','line_number':584,'multiline':True]['text':' close ','line_number':585,'multiline':True]['text':' We cannot have a bloom filter on a join entry with subordinates. ','line_number':591,'multiline':True]['text':' no checks to make ','line_number':597,'multiline':True]['text':'
         * If the item is not in the Bloom filter, we return immediately, otherwise, we still may
         * need to check the long way, since it may be a false positive.
         *
         * If we don't own the Bloom filter, we must be sharing one in a previous entry. So the
         * shared filter has already been checked and passed, we don't need to check it again. We'll
         * still need to check the long way.
         ','line_number':603,'multiline':True]['text':'
         * If we have a subordinate join, the membership check is delegated to it.
         ','line_number':618,'multiline':True]['text':' There's nothing more to do for this node. ','line_number':626,'multiline':True]['text':'
         * If this entry is used by the iterator, then we already have the index key, and we won't
         * have to do any extraction either.
         ','line_number':630,'multiline':True]['text':' Keep lint quiet. ','line_number':637,'multiline':True]['text':'
 * __curjoin_get_key --
 *     WT_CURSOR->get_key for join cursors.
 ','line_number':678,'multiline':True]['text':'
 * __curjoin_get_value --
 *     WT_CURSOR->get_value for join cursors.
 ','line_number':704,'multiline':True]['text':'
 * __curjoin_init_bloom --
 *     Populate Bloom filters
 ','line_number':731,'multiline':True]['text':'
         * Open the raw index. We're avoiding any references to the main table, they may be
         * expensive.
         ','line_number':755,'multiline':True]['text':'
         * For joins on the main table, we just need the primary key for comparison, we don't need
         * any values.
         ','line_number':761,'multiline':True]['text':' Initially position the cursor if necessary. ','line_number':772,'multiline':True]['text':'
             * Repack so it's comparable to the reference endpoints.
             ','line_number':791,'multiline':True]['text':' if condition satisfied, insert immediately ','line_number':801,'multiline':True]['text':' skip this check next time ','line_number':809,'multiline':True]['text':'
         * Either it's a disjunction that hasn't satisfied any condition, or it's a conjunction that
         * has satisfied all conditions.
         ','line_number':841,'multiline':True]['text':'
 * __curjoin_init_next --
 *     Initialize the cursor join when the next function is first called.
 ','line_number':870,'multiline':True]['text':' Get a consistent view of our subordinate cursors if appropriate. ','line_number':893,'multiline':True]['text':'
         * For a single compare=le/lt endpoint in any entry that may be iterated, construct a
         * companion compare=ge endpoint that will actually be iterated.
         ','line_number':916,'multiline':True]['text':'
         * Do any needed Bloom filter initialization. Ignore Bloom filters for entries that will be
         * iterated. They won't help since these entries either don't need an inclusion check or are
         * doing any needed check during the iteration.
         ','line_number':932,'multiline':True]['text':'
                 * Look for compatible filters to be shared, pick compatible numbers for bit counts
                 * and number of hashes.
                 ','line_number':942,'multiline':True]['text':'
                 * Share the Bloom filter, making all config info consistent.
                 ','line_number':958,'multiline':True]['text':'
                 * Create a temporary filter that we'll merge into the shared one. The Bloom
                 * parameters of the two filters must match.
                 ','line_number':969,'multiline':True]['text':'
 * __curjoin_insert_endpoint --
 *     Insert a new entry into the endpoint array for the join entry.
 ','line_number':990,'multiline':True]['text':'
 * __curjoin_next --
 *     WT_CURSOR::next for join cursors.
 ','line_number':1010,'multiline':True]['text':'
         * Position the 'main' cursor, this will be used to retrieve values from the cursor join.
         * The key we have is raw, but the main cursor may not be raw.
         ','line_number':1045,'multiline':True]['text':'
         * A failed search is not expected, convert WT_NOTFOUND into a generic error.
         ','line_number':1052,'multiline':True]['text':'
 * __curjoin_open_main --
 *     For the given index, open the main file with a projection that is the index keys.
 ','line_number':1073,'multiline':True]['text':'
         * Add no-op padding so trailing 'u' formats are not transformed to 'U'. This matches what
         * happens in the index. We don't do this when we have an extractor, extractors already use
         * the padding byte trick.
         ','line_number':1095,'multiline':True]['text':'
 * __curjoin_pack_recno --
 *     Pack the given recno into a buffer; prepare an item referencing it.
 ','line_number':1114,'multiline':True]['text':'
 * __curjoin_reset --
 *     WT_CURSOR::reset for join cursors.
 ','line_number':1134,'multiline':True]['text':'
 * __curjoin_split_key --
 *     Copy the primary key from a cursor (either main table or index) to another cursor. When
 *     copying from an index file, the index key is also returned.
 ','line_number':1156,'multiline':True]['text':'
         * Repack tells us where the index key ends; advance past that to get where the raw primary
         * key starts.
         ','line_number':1172,'multiline':True]['text':'
 * __wt_curjoin_open --
 *     Initialize a join cursor. Join cursors are read-only.
 ','line_number':1204,'multiline':True]['text':' get-key ','line_number':1212,'multiline':True]['text':' get-value ','line_number':1213,'multiline':True]['text':' get-raw-key-value ','line_number':1214,'multiline':True]['text':' set-key ','line_number':1215,'multiline':True]['text':' set-value ','line_number':1216,'multiline':True]['text':' compare ','line_number':1217,'multiline':True]['text':' equals ','line_number':1218,'multiline':True]['text':' next ','line_number':1219,'multiline':True]['text':' prev ','line_number':1220,'multiline':True]['text':' reset ','line_number':1221,'multiline':True]['text':' search ','line_number':1222,'multiline':True]['text':' search-near ','line_number':1223,'multiline':True]['text':' insert ','line_number':1224,'multiline':True]['text':' modify ','line_number':1225,'multiline':True]['text':' update ','line_number':1226,'multiline':True]['text':' remove ','line_number':1227,'multiline':True]['text':' reserve ','line_number':1228,'multiline':True]['text':' reconfigure ','line_number':1229,'multiline':True]['text':' largest_key ','line_number':1230,'multiline':True]['text':' bound ','line_number':1231,'multiline':True]['text':' cache ','line_number':1232,'multiline':True]['text':' reopen ','line_number':1233,'multiline':True]['text':' checkpoint ID ','line_number':1234,'multiline':True]['text':' close ','line_number':1235,'multiline':True]['text':' Handle projections. ','line_number':1269,'multiline':True]['text':'
 * __wt_curjoin_join --
 *     Add a new join to a join cursor.
 ','line_number':1289,'multiline':True]['text':' -Wuninitialized ','line_number':1309,'multiline':True]['text':'
             * Reorder the list so that after the first entry, the Bloom filtered entries come next,
             * followed by the non-Bloom entries. Once the Bloom filters are built, determining
             * membership via Bloom is faster than without Bloom, so we can answer membership
             * questions more quickly, and with less I/O, with the Bloom entries first.
             ','line_number':1340,'multiline':True]['text':' Merge the join into an existing entry for this index ','line_number':1359,'multiline':True]['text':'
         * Check against other comparisons (we call them endpoints)
         * already set up for this index.
         * We allow either:
         *   - one or more "eq" (with disjunction)
         *   - exactly one "eq" (with conjunction)
         *   - exactly one of "gt" or "ge" (conjunction or disjunction)
         *   - exactly one of "lt" or "le" (conjunction or disjunction)
         *   - one of "gt"/"ge" along with one of "lt"/"le"
         *         (currently restricted to conjunction).
         *
         * Some other combinations, although expressible either do
         * not make sense (X == 3 AND X == 5) or are reducible (X <
         * 7 AND X < 9).  Other specific cases of (X < 7 OR X > 15)
         * or (X == 4 OR X > 15) make sense but we don't handle yet.
         ','line_number':1371,'multiline':True]['text':'
             * Sort "gt"/"ge" to the front, followed by any number of "eq", and finally "lt"/"le".
             ','line_number':1401,'multiline':True]['text':' All checks completed, merge any new configuration now ','line_number':1412,'multiline':True]['text':'
             * Open the main file with a projection of the indexed columns.
             ','line_number':1427,'multiline':True]['text':'
             * When we are repacking index keys to remove the primary key, we never want to
             * transform trailing 'u'. Use no-op padding to force this.
             ','line_number':1432,'multiline':True]