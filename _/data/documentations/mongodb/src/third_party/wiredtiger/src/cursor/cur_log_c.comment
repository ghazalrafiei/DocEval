['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __curlog_logrec --
 *     Callback function from log_scan to get a log record.
 ','line_number':11,'multiline':True]['text':' Set up the LSNs and take a copy of the log record for the cursor. ','line_number':24,'multiline':True]['text':'
     * Read the log header. Set up the step pointers to walk the operations inside the record. Get
     * the record type.
     ','line_number':29,'multiline':True]['text':' A step count of 0 means the entire record. ','line_number':37,'multiline':True]['text':'
     * Unpack the txnid so that we can return each individual operation for this txnid.
     ','line_number':40,'multiline':True]['text':'
         * Step over anything else. Setting stepp to NULL causes the next() method to read a new
         * record on the next call.
         ','line_number':46,'multiline':True]['text':'
 * __curlog_compare --
 *     WT_CURSOR.compare method for the log cursor type.
 ','line_number':56,'multiline':True]['text':'
     * If both are on the same LSN, compare step counter.
     ','line_number':73,'multiline':True]['text':'
 * __curlog_op_read --
 *     Read out any key/value from an individual operation record in the log. We're only interested
 *     in put and remove operations since truncate is not a cursor operation. All successful returns
 *     from this function will have set up the cursor copy of key and value to give the user.
 ','line_number':83,'multiline':True]['text':'
         * Any other operations return the record in the value and an empty key.
         ','line_number':131,'multiline':True]['text':'
 * __curlog_kv --
 *     Set the key and value of the log cursor to return to the user.
 ','line_number':141,'multiline':True]['text':' Temporarily turn off raw so we can do direct cursor operations. ','line_number':154,'multiline':True]['text':'
     * If it is a commit and we have stepped over the header, peek to get the size and optype and
     * read out any key/value from this operation.
     ','line_number':158,'multiline':True]['text':' Position on the beginning of the next record part. ','line_number':165,'multiline':True]['text':'
         * Non-commit records we want to return the record without the header and the adjusted size.
         * Add one to skip over the type which is normally consumed by __wt_logrec_read.
         ','line_number':172,'multiline':True]['text':'
     * The log cursor sets the LSN and step count as the cursor key and log record related data in
     * the value. The data in the value contains any operation key/value that was in the log record.
     ','line_number':179,'multiline':True]['text':'
 * __curlog_next --
 *     WT_CURSOR.next method for the step log cursor type.
 ','line_number':191,'multiline':True]['text':'
     * If we don't have a record, or went to the end of the record we have, or we are in the
     * zero-fill portion of the record, get a new one.
     ','line_number':206,'multiline':True]['text':'
 * __curlog_search --
 *     WT_CURSOR.search method for the log cursor type.
 ','line_number':225,'multiline':True]['text':' Temporarily turn off raw so we can do direct cursor operations. ','line_number':240,'multiline':True]['text':'
     * !!! We are ignoring the counter and only searching based on the LSN.
     ','line_number':246,'multiline':True]['text':'
 * __curlog_reset --
 *     WT_CURSOR.reset method for the log cursor type.
 ','line_number':263,'multiline':True]['text':'
 * __curlog_close --
 *     WT_CURSOR.close method for the log cursor type.
 ','line_number':285,'multiline':True]['text':'
 * __wt_curlog_open --
 *     Initialize a log cursor.
 ','line_number':320,'multiline':True]['text':' get-key ','line_number':328,'multiline':True]['text':' get-value ','line_number':329,'multiline':True]['text':' get-raw-key-value ','line_number':330,'multiline':True]['text':' set-key ','line_number':331,'multiline':True]['text':' set-value ','line_number':332,'multiline':True]['text':' compare ','line_number':333,'multiline':True]['text':' equals ','line_number':334,'multiline':True]['text':' next ','line_number':335,'multiline':True]['text':' prev ','line_number':336,'multiline':True]['text':' reset ','line_number':337,'multiline':True]['text':' search ','line_number':338,'multiline':True]['text':' search-near ','line_number':339,'multiline':True]['text':' insert ','line_number':340,'multiline':True]['text':' modify ','line_number':341,'multiline':True]['text':' update ','line_number':342,'multiline':True]['text':' remove ','line_number':343,'multiline':True]['text':' reserve ','line_number':344,'multiline':True]['text':' reconfigure ','line_number':345,'multiline':True]['text':' largest_key ','line_number':346,'multiline':True]['text':' bound ','line_number':347,'multiline':True]['text':' cache ','line_number':348,'multiline':True]['text':' reopen ','line_number':349,'multiline':True]['text':' checkpoint ID ','line_number':350,'multiline':True]['text':' close ','line_number':351,'multiline':True]['text':'
         * The user may be trying to read a log record they just wrote. Log records may be buffered,
         * so force out any now.
         ','line_number':380,'multiline':True]['text':' Log cursors block removal. ','line_number':386,'multiline':True]