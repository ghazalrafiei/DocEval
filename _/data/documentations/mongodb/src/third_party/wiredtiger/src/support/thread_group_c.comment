['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __thread_run --
 *     General wrapper for any thread.
 ','line_number':11,'multiline':True]['text':'
 * If a thread is stopping it may have subsystem cleanup to do.
 ','line_number':34,'multiline':True]['text':'
     * The cases when threads are expected to stop are:
     * 1.  When recovery is done.
     * 2.  When the connection is closing.
     * 3.  When a shutdown has been requested via clearing the run flag.
     * 4.  When an error has occurred and the connection panic flag is set.
     ','line_number':44,'multiline':True]['text':'
 * __thread_group_shrink --
 *     Decrease the number of threads in the group and free memory associated with slots larger than
 *     the new count.
 ','line_number':58,'multiline':True]['text':'
         * The offset value is a counter not an array index, so adjust it before finding the last
         * thread in the group.
         ','line_number':74,'multiline':True]['text':'
         * Signal the thread in case it is in a long timeout.
         ','line_number':89,'multiline':True]['text':'
     * We have to perform the join without holding the lock because the threads themselves may be
     * waiting on the lock.
     ','line_number':96,'multiline':True]['text':'
 * __thread_group_resize --
 *     Resize an array of utility threads already holding the lock.
 ','line_number':126,'multiline':True]['text':'
     * Call shrink to reduce the number of thread structures and running threads if required by the
     * change in group size.
     ','line_number':161,'multiline':True]['text':'
     * Only reallocate the thread array if it is the largest ever, since our realloc doesn't support
     * shrinking the allocated size.
     ','line_number':167,'multiline':True]['text':'
     * Initialize the structures based on the previous group size, not the previous allocated size.
     ','line_number':177,'multiline':True]['text':' Threads get their own session. ','line_number':182,'multiline':True]['text':'
         * Start thread as inactive. We'll activate the needed number later.
         ','line_number':195,'multiline':True]['text':'
     * An error resizing a thread array is currently fatal, it should only happen in an out of
     * memory situation. Do real cleanup just in case that changes in the future.
     ','line_number':215,'multiline':True]['text':'
     * Update the thread group information even on failure to improve our chances of cleaning up
     * properly.
     ','line_number':228,'multiline':True]['text':'
 * __wt_thread_group_resize --
 *     Resize an array of utility threads taking the lock.
 ','line_number':239,'multiline':True]['text':' If the resize fails, the thread group is destroyed, including the lock. ','line_number':251,'multiline':True]['text':'
 * __wt_thread_group_create --
 *     Create a new thread group, assumes incoming group structure is zero initialized.
 ','line_number':257,'multiline':True]['text':' Check that the structure is initialized as expected ','line_number':270,'multiline':True]['text':' If the resize fails, the thread group is destroyed, including the lock. ','line_number':288,'multiline':True]['text':' Cleanup on error to avoid leaking resources ','line_number':292,'multiline':True]['text':'
 * __wt_thread_group_destroy --
 *     Shut down a thread group. Our caller must hold the lock.
 ','line_number':302,'multiline':True]['text':' Shut down all threads and free associated resources. ','line_number':315,'multiline':True]['text':'
     * Clear out any settings from the group, some structures are reused for different thread groups
     * - in particular the eviction thread group for recovery and then normal runtime.
     ','line_number':323,'multiline':True]['text':'
 * __wt_thread_group_start_one --
 *     Start a new thread if possible.
 ','line_number':332,'multiline':True]['text':' Recheck the bounds now that we hold the lock ','line_number':347,'multiline':True]['text':'
 * __wt_thread_group_stop_one --
 *     Pause one thread if possible.
 ','line_number':361,'multiline':True]['text':' Recheck the bounds now that we hold the lock ','line_number':374,'multiline':True]