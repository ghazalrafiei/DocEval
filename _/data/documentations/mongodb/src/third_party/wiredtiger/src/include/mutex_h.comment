['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * Condition variables:
 *
 * WiredTiger uses condition variables to signal between threads, and for locking operations that
 * are expected to block.
 ','line_number':9,'multiline':True]['text':' Mutex name for debugging ','line_number':16,'multiline':True]['text':' Mutex ','line_number':18,'multiline':True]['text':' Condition variable ','line_number':19,'multiline':True]['text':' Numbers of waiters, or
                    -1 if signalled with no waiters. ','line_number':21,'multiline':True]['text':'
     * The following fields are used for automatically adjusting condition variable wait times.
     ','line_number':23,'multiline':True]['text':' Minimum wait duration ','line_number':26,'multiline':True]['text':' Maximum wait duration ','line_number':27,'multiline':True]['text':' Wait duration used last time ','line_number':28,'multiline':True]['text':'
 * Read/write locks:
 *
 * WiredTiger uses read/write locks for shared/exclusive access to resources.
 * !!!
 * Don't modify this structure without understanding the read/write locking
 * functions.
 ','line_number':31,'multiline':True]['text':' Read/write lock ','line_number':39,'multiline':True]['text':' Full 64-bit value ','line_number':41,'multiline':True]['text':' Current ticket ','line_number':43,'multiline':True]['text':' Next available ticket ','line_number':44,'multiline':True]['text':' Read queue ticket ','line_number':45,'multiline':True]['text':' Count of queued readers ','line_number':46,'multiline':True]['text':' Count of active readers ','line_number':47,'multiline':True]['text':' read acquisitions offset ','line_number':51,'multiline':True]['text':' write acquisitions offset ','line_number':52,'multiline':True]['text':' waiting application threads offset ','line_number':53,'multiline':True]['text':' waiting server threads offset ','line_number':54,'multiline':True]['text':' waiting session offset ','line_number':55,'multiline':True]['text':' Blocking readers ','line_number':57,'multiline':True]['text':' Blocking writers ','line_number':58,'multiline':True]['text':'
 * WT_RWLOCK_INIT_TRACKED --
 *	Read write lock initialization, with tracking.
 *
 * Implemented as a macro so we can pass in a statistics field and convert
 * it into a statistics structure array offset.
 ','line_number':61,'multiline':True]['text':'
 * Spin locks:
 *
 * WiredTiger uses spinlocks for fast mutual exclusion (where operations done while holding the spin
 * lock are expected to complete in a small number of instructions).
 ','line_number':88,'multiline':True]['text':' Mutex name ','line_number':111,'multiline':True]['text':' The session ID ','line_number':112,'multiline':True]['text':'
     * We track acquisitions and time spent waiting for some locks. For performance reasons and to
     * make it possible to write generic code that tracks statistics for different locks, we store
     * the offset of the statistics fields to be updated during lock acquisition.
     ','line_number':114,'multiline':True]['text':' acquisitions offset ','line_number':119,'multiline':True]['text':' waiting application threads offset ','line_number':120,'multiline':True]['text':' waiting server threads offset ','line_number':121,'multiline':True]['text':' waiting session offset ','line_number':122,'multiline':True]['text':' Lock initialized, for cleanup ','line_number':124,'multiline':True]