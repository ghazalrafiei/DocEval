['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * !!!
 * GCC with -Wformat-nonliteral complains about calls to strftime in this file.
 * There's nothing wrong, this makes the warning go away.
 ','line_number':13,'multiline':True]['text':'
 * __stat_sources_free --
 *     Free the array of statistics sources.
 ','line_number':22,'multiline':True]['text':'
 * __stat_config_discard --
 *     Discard all statistics-log configuration.
 ','line_number':38,'multiline':True]['text':'
     * Discard all statistics-log configuration information, called when reconfiguring or destroying
     * the statistics logging setup,
     ','line_number':50,'multiline':True]['text':'
 * __wt_conn_stat_init --
 *     Initialize the per-connection statistics.
 ','line_number':63,'multiline':True]['text':'
 * __statlog_config --
 *     Parse and setup the statistics server options.
 ','line_number':86,'multiline':True]['text':'
     * A note on reconfiguration: the standard "is this configuration string allowed" checks should
     * fail if reconfiguration has invalid strings, for example, "log=(enabled)", or
     * "statistics_log=(path=XXX)", because the connection reconfiguration method doesn't allow
     * those strings. Additionally, the base configuration values during reconfiguration are the
     * currently configured values (so we don't revert to default values when repeatedly
     * reconfiguring), and configuration processing of a currently set value should not change the
     * currently set value.
     *
     * In this code path, a previous statistics log server reconfiguration may have stopped the
     * server (and we're about to restart it). Because stopping the server discarded the configured
     * information stored in the connection structure, we have to re-evaluate all configuration
     * values, reconfiguration can't skip any of them.
     ','line_number':101,'multiline':True]['text':' Only start the server if wait time is non-zero ','line_number':119,'multiline':True]['text':'
     * Only set the JSON flag when stats are enabled, otherwise setting this flag can implicitly
     * enable statistics gathering.
     ','line_number':124,'multiline':True]['text':'
     * We don't allow the log path to be reconfigured for security reasons. (Applications passing
     * input strings directly to reconfigure would expose themselves to a potential security
     * problem, the utility of reconfiguring a statistics log path isn't worth the security risk.)
     *
     * See above for the details, but during reconfiguration we're loading the path value from the
     * saved configuration information, and it's required during reconfiguration because we
     * potentially stopped and are restarting, the server.
     ','line_number':136,'multiline':True]['text':'
             * XXX Only allow "file:" and "lsm:" for now: "file:" works because it's been converted
             * to data handles, "lsm:" works because we can easily walk the list of open LSM
             * objects, even though it hasn't been converted.
             ','line_number':159,'multiline':True]['text':'
 * When using JSON format, use the same timestamp format as MongoDB by
 * default. This requires caution: the user might have set the timestamp
 * in a previous reconfigure call and we don't want to override that, so
 * compare the retrieved value with the default value to decide if we
 * should use the JSON default.
 *
 * (This still implies if the user explicitly sets the timestamp to the
 * default value, then sets the JSON flag in a separate reconfigure
 * call, or vice-versa, we will incorrectly switch to the JSON default
 * timestamp. But there's no way to detect that, and this is all a low
 * probability path.)
 *
 * !!!
 * Don't rewrite in the compressed "%FT%T.000Z" form, MSVC13 segfaults.
 ','line_number':176,'multiline':True]['text':'
 * __statlog_print_header --
 *     Write the header for statistics when running in JSON mode.
 ','line_number':208,'multiline':True]['text':'
     * This flag is required in order to generate correct JSON when printing out stats for
     * individual tables. When we are about to print the first table's stats we must print out the
     * wiredTigerTables header once only and add a correct closing brace when we finish the tables
     * section. To do this we maintain a flag variable to note when we have printed the first table.
     * Unfortunately, the mechanism which we use to print stats for each table does not allow
     * passing of variables by reference, this necessitates the use of a variable on the connection.
     * The variable is safe as the JSON printing logic is only performed by the single threaded stat
     * server.
     ','line_number':222,'multiline':True]['text':'
 * __statlog_print_table_name --
 *     Write the header for the wiredTigerTables section of statistics if running in JSON mode and
 *     the header has not been written this round, then print the name of the table.
 ','line_number':238,'multiline':True]['text':'
     * If printing the connection stats, write that header and we are done.
     ','line_number':253,'multiline':True]['text':'
     * If this is the first table we are printing stats for print the header for the
     * wiredTigerTables section. Otherwise print a comma as this is a subsequent table.
     ','line_number':261,'multiline':True]['text':'
 * __statlog_print_footer --
 *     Write the footer for statistics when running in JSON mode.
 ','line_number':275,'multiline':True]['text':' If we have printed a tables stats, then close that section. ','line_number':289,'multiline':True]['text':'
 * __statlog_dump --
 *     Dump out handle/connection statistics.
 ','line_number':298,'multiline':True]['text':' Build URI and configuration string. ','line_number':321,'multiline':True]['text':'
     * Open the statistics cursor and dump the statistics.
     *
     * If we don't find an underlying object, silently ignore it, the object may exist only
     * intermittently.
     ','line_number':329,'multiline':True]['text':' Check if we are starting a new section. ','line_number':345,'multiline':True]['text':'
 * __statlog_apply --
 *     Review a single open handle and dump statistics on demand.
 ','line_number':374,'multiline':True]['text':' Check for a match on the set of sources. ','line_number':389,'multiline':True]['text':'
 * __statlog_lsm_apply --
 *     Review the list open LSM trees, and dump statistics on demand. XXX This code should be
 *     removed when LSM objects are converted to data handles.
 ','line_number':398,'multiline':True]['text':'
     * Walk the list of LSM trees, checking for a match on the set of sources.
     *
     * XXX We can't hold the schema lock for the traversal because the LSM statistics code acquires
     * the tree lock, and the LSM cursor code acquires the tree lock and then acquires the schema
     * lock, it's a classic deadlock. This is temporary code so I'm not going to do anything fancy.
     * It is OK to not keep holding the schema lock after populating the list of matching LSM trees,
     * since the __wt_lsm_tree_get call will bump a reference count, so the tree won't go away.
     ','line_number':415,'multiline':True]['text':' Release any LSM trees on error. ','line_number':447,'multiline':True]['text':'
 * __statlog_log_one --
 *     Output a set of statistics into the current log file.
 ','line_number':455,'multiline':True]['text':' Get the current local time of day. ','line_number':468,'multiline':True]['text':' Create the logging path name for this time of day. ','line_number':472,'multiline':True]['text':' If the path has changed, cycle the log file. ','line_number':476,'multiline':True]['text':' Create the entry prefix for this time of day. ','line_number':486,'multiline':True]['text':' Dump the connection statistics. ','line_number':492,'multiline':True]['text':'
     * Lock the schema and walk the list of open handles, dumping any that match the list of object
     * sources. Statistics logging starts before recovery is run. Only walk the handles after the
     * connection completes recovery.
     ','line_number':495,'multiline':True]['text':'
     * Walk the list of open LSM trees, dumping any that match the list of object sources. Only walk
     * handles after the connection after completes recovery.
     *
     * XXX This code should be removed when LSM objects are converted to data handles.
     ','line_number':503,'multiline':True]['text':' Flush. ','line_number':513,'multiline':True]['text':'
 * __statlog_on_close --
 *     Log a set of statistics at close. Requires the server is not currently running.
 ','line_number':517,'multiline':True]['text':'
 * __statlog_server_run_chk --
 *     Check to decide if the statistics log server should continue running.
 ','line_number':545,'multiline':True]['text':'
 * __statlog_server --
 *     The statistics server thread.
 ','line_number':555,'multiline':True]['text':'
     * We need a temporary place to build a path and an entry prefix. The length of the path plus
     * 128 should be more than enough.
     *
     * We also need a place to store the current path, because that's how we know when to
     * close/re-open the file.
     ','line_number':573,'multiline':True]['text':' Wait until the next event. ','line_number':586,'multiline':True]['text':' Check if we're quitting or being reconfigured. ','line_number':589,'multiline':True]['text':'
 * __statlog_start --
 *     Start the statistics server thread.
 ','line_number':606,'multiline':True]['text':' Nothing to do if the server is already running. ','line_number':615,'multiline':True]['text':' The statistics log server gets its own session. ','line_number':621,'multiline':True]['text':'
     * Start the thread.
     *
     * Statistics logging creates a thread per database, rather than using a single thread to do
     * logging for all of the databases. If we ever see lots of databases at a time, doing
     * statistics logging, and we want to reduce the number of threads, there's no reason we have to
     * have more than one thread, I just didn't feel like writing the code to figure out the
     * scheduling.
     ','line_number':627,'multiline':True]['text':'
 * __wt_statlog_create --
 *     Start the statistics server thread.
 ','line_number':642,'multiline':True]['text':' Readonly systems don't configure statistics logging. ','line_number':654,'multiline':True]['text':'
     * Stop any server that is already running. This means that each time reconfigure is called
     * we'll bounce the server even if there are no configuration changes. This makes our life
     * easier as the underlying configuration routine doesn't have to worry about freeing objects in
     * the connection structure (it's guaranteed to always start with a blank slate), and we don't
     * have to worry about races where a running server is reading configuration information that
     * we're updating, and it's not expected that reconfiguration will happen a lot.
     *
     * If there's no server running, discard any configuration information so we don't leak memory
     * during reconfiguration.
     ','line_number':658,'multiline':True]['text':'
 * __wt_statlog_destroy --
 *     Destroy the statistics server thread.
 ','line_number':681,'multiline':True]['text':' Readonly systems don't configure statistics logging. ','line_number':693,'multiline':True]['text':' Stop the server thread. ','line_number':697,'multiline':True]['text':' Log a set of statistics on shutdown if configured. ','line_number':706,'multiline':True]['text':' Discard all configuration information. ','line_number':710,'multiline':True]['text':' Close the server thread's session. ','line_number':713,'multiline':True]