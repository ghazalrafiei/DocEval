['text':'-
 * Public Domain 2014-present MongoDB, Inc.
 * Public Domain 2008-2014 WiredTiger, Inc.
 *
 * This is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 *
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 ','line_number':1,'multiline':True]['text':'
 * Slicing-by-8 algorithm by Michael E. Kounavis and Frank L. Berry, described
 * in "Novel Table Lookup-Based Algorithms for High-Performance CRC Generation",
 * IEEE Transactions on Computers, Volume 57 Issue 11, November 2008.
 *
 * See also Peter Kanowski's posting:
 *	http://www.strchr.com/crc32_popcnt
 *
 * The big endian version calculates the same result at each step, except the
 * value of the crc is byte reversed from what it would be at that step for
 * little endian.
 ','line_number':28,'multiline':True]['text':'
 * The CRC slicing tables.
 ','line_number':45,'multiline':True]['text':'
   * Big endian tables have entries that are byte reversed from little endian tables.
   ','line_number':50,'multiline':True]['text':'
 * __wt_checksum_with_seed_sw --
 *     Return a checksum for a chunk of memory, computed in software. Takes an initial starting CRC
 *     seed value.
 ','line_number':572,'multiline':True]['text':' Checksum one byte at a time to the first 4B boundary. ','line_number':586,'multiline':True]['text':' Checksum in 8B chunks. ','line_number':594,'multiline':True]['text':' Checksum trailing bytes one byte at a time. ','line_number':614,'multiline':True]['text':' Do final byte swap to produce a result identical to little endian ','line_number':619,'multiline':True]['text':'
 * __wt_checksum_sw --
 *     Return a checksum for a chunk of memory, computed in software.
 ','line_number':629,'multiline':True]