['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __wt_import_repair --
 *     Import a WiredTiger file into the database and reconstruct its metadata.
 ','line_number':11,'multiline':True]['text':'
     * Open the file, request block manager checkpoint information. We don't know the allocation
     * size, but 512B allows us to read the descriptor block and that's all we care about.
     ','line_number':38,'multiline':True]['text':'
     * The metadata may have been encrypted, in which case it's also hexadecimal encoded. The
     * checkpoint included a boolean value set if the metadata was encrypted for easier failure
     * diagnosis.
     ','line_number':49,'multiline':True]['text':'
     * The metadata was quoted to avoid configuration string characters acting as separators.
     * Discard any quote characters.
     ','line_number':61,'multiline':True]['text':'
     * OK, we've now got three chunks of data: the file's metadata from when the last checkpoint
     * started, the array of checkpoints as of when the last checkpoint was almost complete
     * (everything written but the avail list), and fixed-up checkpoint information from the last
     * checkpoint.
     *
     * Build and flatten the metadata and the checkpoint list, then insert it into the metadata for
     * this file.
     *
     * Reconstruct the incremental backup information, to indicate copying the whole file as an
     * imported file has not been part of backup. Strip out the checkpoint LSN, an imported file
     * isn't associated with any log files. Assign a unique file ID.
     ','line_number':82,'multiline':True]['text':'
     * Now we need to retrieve the last checkpoint again but this time, with the correct allocation
     * size. When we did this earlier, we were able to read the descriptor block properly but the
     * checkpoint's byte representation was wrong because it was using the wrong allocation size.
     ','line_number':106,'multiline':True]['text':'
     * The metadata was correct as of immediately before the final checkpoint, but it's not quite
     * right. The block manager returned the corrected final checkpoint, put it all together.
     *
     * Get the checkpoint information from the file's metadata as an array of WT_CKPT structures.
     * Update the last checkpoint with the corrected information. Update the file's metadata with
     * the new checkpoint information.
     ','line_number':117,'multiline':True]