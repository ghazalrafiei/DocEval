['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':9,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':15,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':17,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':22,'multiline':True]['text':'
 * WT_LSN --
 *	A log sequence number, representing a position in the transaction log.
 ','line_number':27,'multiline':True]['text':' Log file name ','line_number':44,'multiline':True]['text':' Log pre-allocated name ','line_number':45,'multiline':True]['text':' Log temporary name ','line_number':46,'multiline':True]['text':' Logging subsystem declarations. ','line_number':48,'multiline':True]['text':'
 * Atomically set the LSN. There are two forms. We need WT_ASSIGN_LSN because some compilers (at
 * least clang address sanitizer) does not do atomic 64-bit structure assignment so we need to
 * explicitly assign the 64-bit field. And WT_SET_LSN atomically sets the LSN given a file/offset.
 ','line_number':51,'multiline':True]['text':'
 * Test for initial LSN. We only need to shift the 1 for comparison.
 ','line_number':65,'multiline':True]['text':'
 * Original tested INT32_MAX. But if we read one from an older release we may see UINT32_MAX.
 ','line_number':69,'multiline':True]['text':'
 * Test for zero LSN.
 ','line_number':74,'multiline':True]['text':'
 * Macro to print an LSN.
 ','line_number':79,'multiline':True]['text':'
 * Both of the macros below need to change if the content of __wt_lsn ever changes. The value is the
 * following: txnid, record type, operation type, file id, operation key, operation value
 ','line_number':85,'multiline':True]['text':'
 * Size range for the log files.
 ','line_number':92,'multiline':True]['text':'
 * We allocate the buffer size, but trigger a slot switch when we cross the maximum size of half the
 * buffer. If a record is more than the buffer maximum then we trigger a slot switch and write that
 * record unbuffered. We use a larger buffer to provide overflow space so that we can switch once we
 * cross the threshold.
 ','line_number':101,'multiline':True]['text':' Must be power of 2 ','line_number':107,'multiline':True]['text':'
 * Possible values for the consolidation array slot states:
 *
 * WT_LOG_SLOT_CLOSE - slot is in use but closed to new joins.
 *
 * WT_LOG_SLOT_FREE - slot is available for allocation.
 *
 * WT_LOG_SLOT_WRITTEN - slot is written and should be processed by worker.
 *
 * The slot state must be volatile: threads loop checking the state and can't cache the first value
 * they see.
 *
 * The slot state is divided into two 32 bit sizes. One half is the amount joined and the other is
 * the amount released. Since we use a few special states, reserve the top few bits for state. That
 * makes the maximum size less than 32 bits for both joined and released.
 ','line_number':111,'multiline':True]['text':'
 * XXX The log slot bits are signed and should be rewritten as unsigned. For now, give the logging
 * subsystem its own flags macro.
 ','line_number':127,'multiline':True]['text':'
 * The high bit is reserved for the special states. If the high bit is set (WT_LOG_SLOT_RESERVED)
 * then we are guaranteed to be in a special state.
 ','line_number':133,'multiline':True]['text':' Not in use ','line_number':137,'multiline':True]['text':' Slot data written, not processed ','line_number':138,'multiline':True]['text':'
 * If new slot states are added, adjust WT_LOG_SLOT_BITS and WT_LOG_SLOT_MASK_OFF accordingly for
 * how much of the top 32 bits we are using. More slot states here will reduce the maximum size that
 * a slot can hold unbuffered by half. If a record is larger than the maximum we can account for in
 * the slot state we fall back to direct writes.
 ','line_number':140,'multiline':True]['text':' Force slot close ','line_number':148,'multiline':True]['text':' Reserved states ','line_number':149,'multiline':True]['text':'
 * Check if the unbuffered flag is set in the joined portion of the slot state.
 ','line_number':151,'multiline':True]['text':'
 * These macros manipulate the slot state and its component parts.
 ','line_number':160,'multiline':True]['text':' Slot is in use ','line_number':172,'multiline':True]['text':' Slot is in use, but closed to new joins ','line_number':174,'multiline':True]['text':' Slot is in use, all data copied into buffer ','line_number':179,'multiline':True]['text':' Slot is in use, more threads may join this slot ','line_number':182,'multiline':True]['text':' Slot state ','line_number':190,'multiline':True]['text':' Unbuffered data in this slot ','line_number':191,'multiline':True]['text':' Error value ','line_number':192,'multiline':True]['text':' Starting file offset ','line_number':193,'multiline':True]['text':' Last record offset ','line_number':194,'multiline':True]['text':' Slot release LSN ','line_number':195,'multiline':True]['text':' Slot starting LSN ','line_number':196,'multiline':True]['text':' Slot ending LSN ','line_number':197,'multiline':True]['text':' File handle for this group ','line_number':198,'multiline':True]['text':' Buffer for grouped writes ','line_number':199,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':201,'multiline':True]['text':' Close old fh on release ','line_number':202,'multiline':True]['text':' Wait for write ','line_number':203,'multiline':True]['text':' Needs sync on release ','line_number':204,'multiline':True]['text':' Directory sync on release ','line_number':205,'multiline':True]['text':' Sync system buffers on release ','line_number':206,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 16 ','line_number':207,'multiline':True]['text':' Atomic flags, use F_*_ATOMIC_16 ','line_number':208,'multiline':True]['text':' Slot I'm using ','line_number':223,'multiline':True]['text':' My end offset in buffer ','line_number':224,'multiline':True]['text':' Slot buffer offset ','line_number':225,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':227,'multiline':True]['text':' This thread is closing the slot ','line_number':228,'multiline':True]['text':' This thread is releasing the slot ','line_number':229,'multiline':True]['text':' Write directly ','line_number':230,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':231,'multiline':True]['text':' Allocation alignment size ','line_number':238,'multiline':True]['text':' Offset of first record in file ','line_number':239,'multiline':True]['text':' Amount of log written this period ','line_number':240,'multiline':True]['text':'
                                     * Log file information
                                     ','line_number':241,'multiline':True]['text':' Current log file number ','line_number':244,'multiline':True]['text':' Pre-allocated file number ','line_number':245,'multiline':True]['text':' Temporary file number ','line_number':246,'multiline':True]['text':' Pre-allocated file misses ','line_number':247,'multiline':True]['text':' Logging file handle ','line_number':248,'multiline':True]['text':' Log directory file handle ','line_number':249,'multiline':True]['text':' Logging file handle to close ','line_number':250,'multiline':True]['text':' LSN needed to close ','line_number':251,'multiline':True]['text':' Version of log file ','line_number':253,'multiline':True]['text':'
     * System LSNs
     ','line_number':255,'multiline':True]['text':' Next LSN for allocation ','line_number':258,'multiline':True]['text':' Last checkpoint LSN ','line_number':259,'multiline':True]['text':' LSN of last non-synced write ','line_number':260,'multiline':True]['text':' First LSN ','line_number':261,'multiline':True]['text':' LSN of the last directory sync ','line_number':262,'multiline':True]['text':' LSN of the last sync ','line_number':263,'multiline':True]['text':' End LSN for recovery truncation ','line_number':264,'multiline':True]['text':' End of last LSN written ','line_number':265,'multiline':True]['text':' Beginning of last LSN written ','line_number':266,'multiline':True]['text':'
     * Synchronization resources
     ','line_number':268,'multiline':True]['text':' Locked: Logging fields ','line_number':271,'multiline':True]['text':' Locked: tmp, prep and log files ','line_number':272,'multiline':True]['text':' Locked: Consolidation array ','line_number':273,'multiline':True]['text':' Locked: Single-thread fsync ','line_number':274,'multiline':True]['text':' Locked: write LSN ','line_number':275,'multiline':True]['text':' Remove and log cursors ','line_number':277,'multiline':True]['text':' Notify any waiting threads when sync_lsn is updated. ','line_number':279,'multiline':True]['text':' Notify any waiting threads when write_lsn is updated. ','line_number':281,'multiline':True]['text':'
 * Consolidation array information Our testing shows that the more consolidation we generate the
 * better the performance we see which equates to an active slot count of one.
 *
 * Note: this can't be an array, we impose cache-line alignment and gcc doesn't support that for
 * arrays.
 ','line_number':284,'multiline':True]['text':' Active slot ','line_number':292,'multiline':True]['text':' Pool of all slots ','line_number':293,'multiline':True]['text':' Index into slot pool ','line_number':294,'multiline':True]['text':' Buffer size for slots ','line_number':295,'multiline':True]['text':' Calls to log_write ','line_number':297,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':300,'multiline':True]['text':' Force switch to new log file ','line_number':301,'multiline':True]['text':' Log subsystem successfully open ','line_number':302,'multiline':True]['text':' File system truncate not supported ','line_number':303,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':304,'multiline':True]['text':' 00-03: Record length including hdr ','line_number':309,'multiline':True]['text':' 04-07: Checksum of the record ','line_number':310,'multiline':True]['text':'
 * No automatic generation: flag values cannot change, they're written to disk.
 *
 * Unused bits in the flags, as well as the 'unused' padding, are expected to be zeroed; we check
 * that to help detect file corruption.
 ','line_number':312,'multiline':True]['text':' Compressed except hdr ','line_number':318,'multiline':True]['text':' Encrypted except hdr ','line_number':319,'multiline':True]['text':' 08-09: Flags ','line_number':321,'multiline':True]['text':' 10-11: Padding ','line_number':322,'multiline':True]['text':' 12-15: Uncompressed len if needed ','line_number':323,'multiline':True]['text':' Beginning of actual data ','line_number':324,'multiline':True]['text':'
 * __wt_log_record_byteswap --
 *     Handle big- and little-endian transformation of the log record header block.
 ','line_number':327,'multiline':True]['text':'
 * WT_LOG_DESC --
 *	The log file's description.
 ','line_number':344,'multiline':True]['text':' 00-03: Magic number ','line_number':350,'multiline':True]['text':'
                         * NOTE: We bumped the log version from 2 to 3 to make it convenient for
                         * MongoDB to detect users accidentally running old binaries on a newer
                         * release. There are no actual log file format changes in versions 2
                         * through 5.
                         ','line_number':351,'multiline':True]['text':' 04-05: Log version ','line_number':358,'multiline':True]['text':' 06-07: Unused ','line_number':359,'multiline':True]['text':' 08-15: Log file size ','line_number':360,'multiline':True]['text':'
 * This is the log version that introduced the system record.
 ','line_number':362,'multiline':True]['text':'
 * WiredTiger release version where log format version changed.
 *
 * FIXME WT-8681 - According to WT_MIN_STARTUP_VERSION any WT version less then 3.2.0 will not
 * start. Can we drop V2, V3 here?
 ','line_number':367,'multiline':True]['text':'
 * __wt_log_desc_byteswap --
 *     Handle big- and little-endian transformation of the log file description block.
 ','line_number':378,'multiline':True]['text':' Cookie passed through the transaction printlog routines. ','line_number':395,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION START 0 ','line_number':399,'multiline':True]['text':' Add hex output ','line_number':400,'multiline':True]['text':' Messages only ','line_number':401,'multiline':True]['text':' Don't redact user data from output ','line_number':402,'multiline':True]['text':' AUTOMATIC FLAG VALUE GENERATION STOP 32 ','line_number':403,'multiline':True]['text':'
 * WT_LOG_REC_DESC --
 *	A descriptor for a log record type.
 ','line_number':407,'multiline':True]['text':'
 * WT_LOG_OP_DESC --
 *	A descriptor for a log operation type.
 ','line_number':416,'multiline':True]