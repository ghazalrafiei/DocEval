['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __curds_key_set --
 *     Set the key for the data-source.
 ','line_number':11,'multiline':True]['text':'
 * __curds_value_set --
 *     Set the value for the data-source.
 ','line_number':31,'multiline':True]['text':'
 * __curds_cursor_resolve --
 *     Resolve cursor operation.
 ','line_number':50,'multiline':True]['text':'
     * Update the cursor's key, value and flags. (We use the _INT flags in the same way as file
     * objects: there's some chance the underlying data source is passing us a reference to data
     * only pinned per operation, might as well be safe.)
     *
     * There's also a requirement the underlying data-source never returns with the cursor/source
     * key referencing application memory: it'd be great to do a copy as necessary here so the
     * data-source doesn't have to worry about copying the key, but we don't have enough information
     * to know if a cursor is pointing at application or data-source memory.
     ','line_number':61,'multiline':True]['text':'
         * Cursor operation failure implies a lost cursor position and a subsequent next/prev
         * starting at the beginning/end of the table. We simplify underlying data source
         * implementations by resetting the cursor explicitly here.
         ','line_number':86,'multiline':True]['text':'
 * __curds_bound --
 *     WT_CURSOR.bound method for the data-source cursor type.
 ','line_number':97,'multiline':True]['text':'
 * __curds_compare --
 *     WT_CURSOR.compare method for the data-source cursor type.
 ','line_number':119,'multiline':True]['text':'
     * Confirm both cursors refer to the same source and have keys, then compare them.
     ','line_number':132,'multiline':True]['text':'
         * The assumption is data-sources don't provide WiredTiger with WT_CURSOR.compare methods,
         * instead, we'll copy the key/value out of the underlying data-source cursor and any
         * comparison to be done can be done at this level.
         ','line_number':149,'multiline':True]['text':'
 * __curds_next --
 *     WT_CURSOR.next method for the data-source cursor type.
 ','line_number':162,'multiline':True]['text':'
 * __curds_prev --
 *     WT_CURSOR.prev method for the data-source cursor type.
 ','line_number':186,'multiline':True]['text':'
 * __curds_reset --
 *     WT_CURSOR.reset method for the data-source cursor type.
 ','line_number':210,'multiline':True]['text':'
 * __curds_search --
 *     WT_CURSOR.search method for the data-source cursor type.
 ','line_number':235,'multiline':True]['text':'
 * __curds_search_near --
 *     WT_CURSOR.search_near method for the data-source cursor type.
 ','line_number':259,'multiline':True]['text':'
 * __curds_insert --
 *     WT_CURSOR.insert method for the data-source cursor type.
 ','line_number':283,'multiline':True]['text':'
 * __curds_update --
 *     WT_CURSOR.update method for the data-source cursor type.
 ','line_number':311,'multiline':True]['text':'
 * __curds_remove --
 *     WT_CURSOR.remove method for the data-source cursor type.
 ','line_number':338,'multiline':True]['text':'
 * __curds_reserve --
 *     WT_CURSOR.reserve method for the data-source cursor type.
 ','line_number':364,'multiline':True]['text':'
 * __curds_close --
 *     WT_CURSOR.close method for the data-source cursor type.
 ','line_number':389,'multiline':True]['text':'
     * The key/value formats are in allocated memory, which isn't standard behavior.
     ','line_number':414,'multiline':True]['text':'
 * __wt_curds_open --
 *     Initialize a data-source cursor.
 ','line_number':425,'multiline':True]['text':' get-key ','line_number':433,'multiline':True]['text':' get-value ','line_number':434,'multiline':True]['text':' get-raw-key-value ','line_number':435,'multiline':True]['text':' set-key ','line_number':436,'multiline':True]['text':' set-value ','line_number':437,'multiline':True]['text':' compare ','line_number':438,'multiline':True]['text':' equals ','line_number':439,'multiline':True]['text':' next ','line_number':440,'multiline':True]['text':' prev ','line_number':441,'multiline':True]['text':' reset ','line_number':442,'multiline':True]['text':' search ','line_number':443,'multiline':True]['text':' search-near ','line_number':444,'multiline':True]['text':' insert ','line_number':445,'multiline':True]['text':' modify ','line_number':446,'multiline':True]['text':' update ','line_number':447,'multiline':True]['text':' remove ','line_number':448,'multiline':True]['text':' reserve ','line_number':449,'multiline':True]['text':' reconfigure ','line_number':450,'multiline':True]['text':' largest_key ','line_number':451,'multiline':True]['text':' bound ','line_number':452,'multiline':True]['text':' cache ','line_number':453,'multiline':True]['text':' reopen ','line_number':454,'multiline':True]['text':' checkpoint ID ','line_number':455,'multiline':True]['text':' close ','line_number':456,'multiline':True]['text':'
     * XXX The underlying data-source may require the object's key and value formats. This isn't a
     * particularly elegant way of getting that information to the data-source, this feels like a
     * layering problem to me.
     ','line_number':472,'multiline':True]['text':' Data-source cursors may have a custom collator. ','line_number':485,'multiline':True]