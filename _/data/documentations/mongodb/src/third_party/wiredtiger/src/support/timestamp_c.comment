['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __wt_timestamp_to_string --
 *     Convert a timestamp to the MongoDB string representation.
 ','line_number':11,'multiline':True]['text':'
 * __wt_time_point_to_string --
 *     Converts a time point to a standard string representation.
 ','line_number':23,'multiline':True]['text':'
 * __wt_time_window_to_string --
 *     Converts a time window to a standard string representation.
 ','line_number':39,'multiline':True]['text':'
 * __wt_time_aggregate_to_string --
 *     Converts a time aggregate to a standard string representation.
 ','line_number':58,'multiline':True]['text':'
 * __wt_timestamp_to_hex_string --
 *     Convert a timestamp to hex string representation.
 ','line_number':77,'multiline':True]['text':' Reverse the string. ','line_number':101,'multiline':True]['text':'
 * __wt_verbose_timestamp --
 *     Output a verbose message along with the specified timestamp.
 ','line_number':109,'multiline':True]['text':'
 * __time_stable --
 *     Return the stable timestamp for the system.
 ','line_number':129,'multiline':True]['text':'
 * __time_aggregate_validate_parent_stable --
 *     Aggregated time window validation against a stable point.
 ','line_number':152,'multiline':True]['text':'
 * __time_aggregate_validate_parent --
 *     Aggregated time window validation against a parent.
 ','line_number':177,'multiline':True]['text':'
 * __wt_time_aggregate_validate --
 *     Aggregated time window validation.
 ','line_number':238,'multiline':True]['text':'
     * The aggregated time window values that are tracked at the page level.
     *    newest_start_durable_ts - The default value is WT_TS_NONE. It tracks the maximum durable
     timestamp of all the inserts, updates, or modify operations performed on a page.
     *    newest_stop_durable_ts - The default value is WT_TS_NONE. It tracks the maximum durable
     timestamp of all the the delete operations performed on a page.
     *    oldest_start_ts - The default value is WT_TS_NONE. It tracks the minimum commit timestamp
     of any inserts performed on a page.
     *    newest_txn - The default value is WT_TXN_NONE. It tracks the maximum transaction id of any
     modification (insert/delete) performed on a page.
     *    newest_stop_ts - The default value is WT_TS_MAX. It tracks the maximum commit timestamp of
     a delete operation on a page. If there is no removal for a key, this value will be WT_TS_MAX.
     *    newest_stop_txn - The default value is WT_TXN_MAX. It tracks the maximum commit
     transaction id of a delete operation on a page. If there is no removal for a key, this value
     will be WT_TXN_MAX.
     *
     *
     * Three scenarios might happen at any point of time.
     * Scenario 1 - No deletes on the page, only inserts and updates.
     *    newest_start_durable_ts will be some valid value (not WT_TS_MAX or WT_TS_NONE)
     *    oldest_start_ts will be the minimum commit timestamp of any inserts performed on a page.
     *    newest_stop_durable_ts will be WT_TS_NONE
     *    newest_stop_ts will be WT_TS_MAX since there is no removal of any key.
     *    newest_txn will be the maximum transaction id of any modification (insert/delete)
     performed on a page.
     *    newest_stop_txn will be WT_TXN_MAX.

     * Scenario 2 - All the entries on the page are deleted.
     *    newest_start_durable_ts will be some valid value (not WT_TS_MAX or WT_TS_NONE)
     *    oldest_start_ts will be the minimum commit timestamp of any inserts performed on a page.
     *    newest_stop_durable_ts will be some valid value (not WT_TS_MAX or WT_TS_NONE)
     *    newest_stop_ts will be maximum commit timestamp of any delete operation on a page but not
     WT_TS_MAX.
     *    newest_txn will be the maximum transaction id of any modification (insert/delete)
     performed on a page.
     *    newest_stop_txn will be the maximum commit transaction id of any delete operation on a
     page but cannot be WT_TXN_MAX

     * Scenario 3 - Some entries are deleted, but not all.
     *    newest_start_durable_ts will be some valid value (not WT_TS_MAX or WT_TS_NONE)
     *    oldest_start_ts will be the minimum commit timestamp of any inserts performed on a page.
     *    newest_stop_durable_ts will be the maximum durable timestamp of all the deletes performed
     on a page.
     *    newest_stop_ts can be WT_TS_MAX or any valid value
     *    newest_txn will be the maximum transaction id of any modification (insert/delete)
     performed on a page.
     *    newest_stop_txn will be the maximum commit transaction id of any delete operation on a
     page but cannot be WT_TXN_MAX
     *
     ','line_number':248,'multiline':True]['text':'
     * In the case of missing timestamps, we assign the start point to the stop point and newest
     * start durable timestamp may be larger than newest stop timestamp. Check whether start and
     * stop are equal first and then check the newest start durable timestamp against newest stop
     * durable timestamp if all the data on the page are deleted.
     ','line_number':323,'multiline':True]['text':'
     * Optionally validate the time window against a parent's time window.
     *
     * If no aggregated time window is set, it can be for one of two reasons: there really isn't any
     * time window information, or there was a downgrade/upgrade to a previous release which doesn't
     * write time window information. We can't tell the difference, but in either case, everything
     * should be stable.
     ','line_number':344,'multiline':True]['text':'
 * __time_value_validate_parent_stable --
 *     Value time window validation against a stable point.
 ','line_number':367,'multiline':True]['text':'
 * __time_value_validate_parent --
 *     Value time window validation against a parent.
 ','line_number':391,'multiline':True]['text':'
 * __wt_time_value_validate --
 *     Value time window validation.
 ','line_number':454,'multiline':True]['text':'
     * In the case of missing timestamps, we assign start time point to the stop point and durable
     * start timestamp may be larger than stop timestamp. Check whether start and stop are equal
     * first.
     ','line_number':484,'multiline':True]['text':'
     * Optionally validate the time window against a parent's time window.
     *
     * If no aggregated time window is set, it can be for one of two reasons: there really isn't any
     * time window information, or there was a downgrade/upgrade to a previous release which doesn't
     * write time window information. We can't tell the difference, but in either case, everything
     * should be stable.
     ','line_number':499,'multiline':True]