['text':'-
 * Copyright (c) 2014-present MongoDB, Inc.
 * Copyright (c) 2008-2014 WiredTiger, Inc.
 *	All rights reserved.
 *
 * See the file LICENSE for redistribution information.
 ','line_number':1,'multiline':True]['text':'
 * __wt_rts_visibility_has_stable_update --
 *     Check if an update chain has a stable update on it. Assume the update chain has already been
 *     processed so all we need to do is look for a valid, non-aborted entry.
 ','line_number':11,'multiline':True]['text':'
 * __wt_rts_visibility_txn_visible_id --
 *     Check if the transaction id is visible or not.
 ','line_number':24,'multiline':True]['text':' If not recovery then assume all the data as visible. ','line_number':35,'multiline':True]['text':'
     * Only full checkpoint writes the metadata with snapshot. If the recovered checkpoint snapshot
     * details are none then return false i.e, updates are visible.
     ','line_number':39,'multiline':True]['text':'
 * __rts_visibility_get_ref_max_durable_timestamp --
 *     Returns the ref aggregated max durable timestamp. The max durable timestamp is calculated
 *     between both start and stop durable timestamps except for history store, because most of the
 *     history store updates have stop timestamp either greater or equal to the start timestamp
 *     except for the updates written for the prepared updates on the data store. To abort the
 *     updates with no stop timestamp, we must include the newest stop timestamp also into the
 *     calculation of maximum durable timestamp of the history store.
 ','line_number':51,'multiline':True]['text':'
 * __wt_rts_visibility_page_needs_abort --
 *     Check whether the page needs rollback, returning true if the page has modifications newer
 *     than the given timestamp.
 ','line_number':68,'multiline':True]['text':'
     * The rollback operation should be performed on this page when any one of the following is
     * greater than the given timestamp or during recovery if the newest transaction id on the page
     * is greater than or equal to recovered checkpoint snapshot min:
     * 1. The reconciled replace page max durable timestamp.
     * 2. The reconciled multi page max durable timestamp.
     * 3. For just-instantiated deleted pages that have not otherwise been modified, the durable
     *    timestamp in the page delete information. This timestamp isn't reflected in the address's
     *    time aggregate.
     * 4. The on page address max durable timestamp.
     * 5. The off page address max durable timestamp.
     ','line_number':96,'multiline':True]['text':' Calculate the max durable timestamp by traversing all multi addresses. ','line_number':115,'multiline':True]['text':' Check if the page is obsolete using the page disk address. ','line_number':134,'multiline':True]['text':' Retrieve the time aggregate from the unpacked address cell. ','line_number':136,'multiline':True]