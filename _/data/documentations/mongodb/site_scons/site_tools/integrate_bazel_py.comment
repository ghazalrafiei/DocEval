['text':' key: scons target, value: {bazel target, bazel output}','line_number':33,'multiline':False]['text':' key: scons output, value: bazel outputs','line_number':36,'multiline':False]['text':' targets bazel needs to build','line_number':39,'multiline':False]['text':' targets bazel has finished building','line_number':42,'multiline':False]['text':' lock for accessing the targets done list','line_number':45,'multiline':False]['text':' bazel command line with options, but not targets','line_number':48,'multiline':False]['text':' Flag to signal that the bazel build thread should die and/or is not running','line_number':51,'multiline':False]['text':' Required boilerplate function','line_number':59,'multiline':False]['text':' gets the SCons.Environment for the node','line_number':67,'multiline':False]['text':' convert to the source path i.e.: src/mongo/db/libcommands.so','line_number':70,'multiline':False]['text':' bazel uses source paths in the output i.e.: src/mongo/db, replace backslashes on windows','line_number':72,'multiline':False]['text':' extract the platform prefix for a given file so we can remove it i.e.: libcommands.so -> 'lib'','line_number':75,'multiline':False]['text':' now get just the file name without and prefix or suffix i.e.: libcommands.so -> 'commands'','line_number':79,'multiline':False]['text':' i.e.: //src/mongo/db:commands>','line_number':82,'multiline':False]['text':' normally scons emitters conveniently build-ify the target paths so it will','line_number':93,'multiline':False]['text':' reference the output location, but we actually want the node path','line_number':94,'multiline':False]['text':' from the original source tree location, so srcnode() will do this for us','line_number':95,'multiline':False]['text':' the new builders are just going to copy, so we are going to calculate the bazel','line_number':99,'multiline':False]['text':' output location and then set that as the new source for the builders.','line_number':100,'multiline':False]['text':' Because of the tight while loop this function is used in, we put','line_number':130,'multiline':False]['text':' an exit condition here.','line_number':131,'multiline':False]['text':' put the target into the work queue the poll until its','line_number':141,'multiline':False]['text':' been placed into the done queue','line_number':142,'multiline':False]['text':' scons expects actions to return non-zero value on failure','line_number':153,'multiline':False]['text':' now copy all the targets out to the scons tree, note that target is a','line_number':159,'multiline':False]['text':' list of nodes so we need to stringify it for copyfile','line_number':160,'multiline':False]['text':' the ninja tool has some API that doesn't support using SCons env methods','line_number':173,'multiline':False]['text':' instead of adding more API to the ninja tool which has a short life left','line_number':174,'multiline':False]['text':' we just add the unused arg _dup_env','line_number':175,'multiline':False]['text':' this represents the values the ninja_syntax.py will use to generate to real','line_number':186,'multiline':False]['text':' ninja syntax defined in the ninja manaul: https://ninja-build.org/manual.html#ref_ninja_file','line_number':187,'multiline':False]['text':' the set of targets which bazel has already built.','line_number':205,'multiline':False]['text':' SCons must (try to) make sure that all currently running build tasks come to compeletion,','line_number':217,'multiline':False]['text':' so that it can correctly transcribe the state of a given node to the SConsign file.','line_number':218,'multiline':False]['text':' Therefore it takes control over many signals which would end scons process (i.e. SIGINT),','line_number':219,'multiline':False]['text':' we need to make sure that we break out of this loop and free our CVs which the scons','line_number':220,'multiline':False]['text':' main build thread will be waiting on to complete, otherwise that will cause scons to','line_number':221,'multiline':False]['text':' wait forever.','line_number':222,'multiline':False]['text':' this thread should be the only thing pulling off the work queue, so if it was','line_number':235,'multiline':False]['text':' not empty, it must still be not empty when we perform the get. We intend','line_number':236,'multiline':False]['text':' for the get_nowait to raise Empty exception as a hard fail if previously','line_number':237,'multiline':False]['text':' stated assumption was incorrect.','line_number':238,'multiline':False]['text':' If we have a failure always print the bazel output, if','line_number':256,'multiline':False]['text':' bazel succeeded to build, only print output with bazel debug','line_number':257,'multiline':False]['text':' on.','line_number':258,'multiline':False]['text':' Always put the targets we attempt to build into done','line_number':270,'multiline':False]['text':' even if bazel failed to build. If bazel failed to build,','line_number':271,'multiline':False]['text':' scons will report the particular target failed when it goes','line_number':272,'multiline':False]['text':' to copy it out of the bazel tree.','line_number':273,'multiline':False]['text':' NOTE: it would be nice if we had a way to bubble up the particular','line_number':274,'multiline':False]['text':' bazel target log, this would require some way to','line_number':275,'multiline':False]['text':' parse it from bazel logs.','line_number':276,'multiline':False]['text':' The next section of builders are hook builders. These','line_number':305,'multiline':False]['text':' will be standin place holders for the original scons builders, and if bazel build is enabled','line_number':306,'multiline':False]['text':' these simply copy out the target from the underlying bazel build','line_number':307,'multiline':False]['text':' create a json file which contains all the relevant info from this generation','line_number':324,'multiline':False]['text':' that bazel will need to construct the correct command line for any given targets','line_number':325,'multiline':False]['text':' we also store the outputs in the env (the passed env is intended to be','line_number':334,'multiline':False]['text':' the same main env ninja tool is constructed with) so that ninja can','line_number':335,'multiline':False]['text':' use these to contruct a build node for running bazel where bazel list the','line_number':336,'multiline':False]['text':' correct bazel outputs to be copied to the scons tree. We also handle','line_number':337,'multiline':False]['text':' calculating the inputs. This will be the all the inputs of the outs,','line_number':338,'multiline':False]['text':' but and input can not also be an output. If a node is found in both','line_number':339,'multiline':False]['text':' inputs and outputs, remove it from the inputs, as it will be taken care','line_number':340,'multiline':False]['text':' internally by bazel build.','line_number':341,'multiline':False]['text':' This is to be used directly by ninja later during generation of the ninja file','line_number':350,'multiline':False]['text':' Establishes logic for BazelLibrary build rule','line_number':355,'multiline':False]['text':' this should be populated from the sconscript and include list of targets scons','line_number':367,'multiline':False]['text':' indicates it wants to build','line_number':368,'multiline':False]['text':' === Architecture/platform ===','line_number':371,'multiline':False]['text':' Bail if current architecture not supported for Bazel:','line_number':373,'multiline':False]['text':' === Bazelisk ===','line_number':383,'multiline':False]['text':' TODO(SERVER-81038): remove once bazel/bazelisk is self-hosted.','line_number':385,'multiline':False]['text':' === Build settings ===','line_number':394,'multiline':False]['text':' one of "on", "size", "debug"','line_number':403,'multiline':False]['text':' Deprecate tcmalloc-experimental','line_number':405,'multiline':False]['text':' always build this compilation mode as we always build with -g','line_number':423,'multiline':False]['text':' Store the bazel command line flags so scons can check if it should rerun the bazel targets','line_number':434,'multiline':False]['text':' if the bazel command line changes.','line_number':435,'multiline':False]['text':' We always use --compilation_mode debug for now as we always want -g, so assume -dbg location','line_number':438,'multiline':False]['text':' === Builders ===','line_number':446,'multiline':False]['text':' ninja will handle the build so do not launch the bazel batch thread','line_number':458,'multiline':False]