['text':'*************************************************************************','line_number':1,'multiline':True]['text':'                                                                         ','line_number':2,'multiline':True]['text':'  ftconfig.in                                                            ','line_number':3,'multiline':True]['text':'                                                                         ','line_number':4,'multiline':True]['text':'    UNIX-specific configuration file (specification only).               ','line_number':5,'multiline':True]['text':'                                                                         ','line_number':6,'multiline':True]['text':'  Copyright 1996-2015 by                                                 ','line_number':7,'multiline':True]['text':'  David Turner, Robert Wilhelm, and Werner Lemberg.                      ','line_number':8,'multiline':True]['text':'                                                                         ','line_number':9,'multiline':True]['text':'  This file is part of the FreeType project, and may only be used,       ','line_number':10,'multiline':True]['text':'  modified, and distributed under the terms of the FreeType project      ','line_number':11,'multiline':True]['text':'  license, LICENSE.TXT.  By continuing to use, modify, or distribute     ','line_number':12,'multiline':True]['text':'  this file you indicate that you have read the license and              ','line_number':13,'multiline':True]['text':'  understand and accept it fully.                                        ','line_number':14,'multiline':True]['text':'                                                                         ','line_number':15,'multiline':True]['text':'*************************************************************************','line_number':16,'multiline':True]['text':'***********************************************************************','line_number':19,'multiline':True]['text':'                                                                       ','line_number':20,'multiline':True]['text':' This header file contains a number of macro definitions that are used ','line_number':21,'multiline':True]['text':' by the rest of the engine.  Most of the macros here are automatically ','line_number':22,'multiline':True]['text':' determined at compile time, and you should not need to change it to   ','line_number':23,'multiline':True]['text':' port FreeType, except to compile the library with a non-ANSI          ','line_number':24,'multiline':True]['text':' compiler.                                                             ','line_number':25,'multiline':True]['text':'                                                                       ','line_number':26,'multiline':True]['text':' Note however that if some specific modifications are needed, we       ','line_number':27,'multiline':True]['text':' advise you to place a modified copy in your build directory.          ','line_number':28,'multiline':True]['text':'                                                                       ','line_number':29,'multiline':True]['text':' The build directory is usually `builds/<system>', and contains        ','line_number':30,'multiline':True]['text':' system-specific files that are always included first when building    ','line_number':31,'multiline':True]['text':' the library.                                                          ','line_number':32,'multiline':True]['text':'                                                                       ','line_number':33,'multiline':True]['text':'***********************************************************************','line_number':34,'multiline':True]['text':' MESON: based on unix/ftconfig.in with but meson-friendly configuration defines ','line_number':36,'multiline':True]['text':'***********************************************************************','line_number':49,'multiline':True]['text':'                                                                       ','line_number':50,'multiline':True]['text':'               PLATFORM-SPECIFIC CONFIGURATION MACROS                  ','line_number':51,'multiline':True]['text':'                                                                       ','line_number':52,'multiline':True]['text':' These macros can be toggled to suit a specific system.  The current   ','line_number':53,'multiline':True]['text':' ones are defaults used to compile FreeType in an ANSI C environment   ','line_number':54,'multiline':True]['text':' (16bit compilers are also supported).  Copy this file to your own     ','line_number':55,'multiline':True]['text':' `builds/<system>' directory, and edit it to port the engine.          ','line_number':56,'multiline':True]['text':'                                                                       ','line_number':57,'multiline':True]['text':'***********************************************************************','line_number':58,'multiline':True]['text':' There are systems (like the Texas Instruments 'C54x) where a `char' ','line_number':66,'multiline':True]['text':' has 16 bits.  ANSI C says that sizeof(char) is always 1.  Since an  ','line_number':67,'multiline':True]['text':' `int' has 16 bits also for this system, sizeof(int) gives 1 which   ','line_number':68,'multiline':True]['text':' is probably unexpected.                                             ','line_number':69,'multiline':True]['text':'                                                                     ','line_number':70,'multiline':True]['text':' `CHAR_BIT' (defined in limits.h) gives the number of bits in a      ','line_number':71,'multiline':True]['text':' `char' type.                                                        ','line_number':72,'multiline':True]['text':' !FT_USE_AUTOCONF_SIZEOF_TYPES ','line_number':87,'multiline':True]['text':' Following cpp computation of the bit length of int and long ','line_number':89,'multiline':True]['text':' is copied from default include/freetype/config/ftconfig.h.  ','line_number':90,'multiline':True]['text':' If any improvement is required for this file, it should be  ','line_number':91,'multiline':True]['text':' applied to the original header file for the builders that   ','line_number':92,'multiline':True]['text':' do not use configure script.                                ','line_number':93,'multiline':True]['text':' The size of an `int' type.  ','line_number':95,'multiline':True]['text':' The size of a `long' type.  A five-byte `long' (as used e.g. on the ','line_number':106,'multiline':True]['text':' DM642) is recognized but avoided.                                   ','line_number':107,'multiline':True]['text':' !FT_USE_AUTOCONF_SIZEOF_TYPES ','line_number':118,'multiline':True]['text':' FT_UNUSED is a macro used to indicate that a given parameter is not  ','line_number':121,'multiline':True]['text':' used -- this is only used to get rid of unpleasant compiler warnings ','line_number':122,'multiline':True]['text':'***********************************************************************','line_number':128,'multiline':True]['text':'                                                                       ','line_number':129,'multiline':True]['text':'                     AUTOMATIC CONFIGURATION MACROS                    ','line_number':130,'multiline':True]['text':'                                                                       ','line_number':131,'multiline':True]['text':' These macros are computed from the ones defined above.  Don't touch   ','line_number':132,'multiline':True]['text':' their definition, unless you know precisely what you are doing.  No   ','line_number':133,'multiline':True]['text':' porter should need to mess with them.                                 ','line_number':134,'multiline':True]['text':'                                                                       ','line_number':135,'multiline':True]['text':'***********************************************************************','line_number':136,'multiline':True]['text':'***********************************************************************','line_number':139,'multiline':True]['text':'                                                                       ','line_number':140,'multiline':True]['text':' Mac support                                                           ','line_number':141,'multiline':True]['text':'                                                                       ','line_number':142,'multiline':True]['text':'   This is the only necessary change, so it is defined here instead    ','line_number':143,'multiline':True]['text':'   providing a new configuration file.                                 ','line_number':144,'multiline':True]['text':'                                                                       ','line_number':145,'multiline':True]['text':' no Carbon frameworks for 64bit 10.4.x ','line_number':147,'multiline':True]['text':' AvailabilityMacros.h is available since Mac OS X 10.2,        ','line_number':148,'multiline':True]['text':' so guess the system version by maximum errno before inclusion ','line_number':149,'multiline':True]['text':' defined since 10.2 ','line_number':151,'multiline':True]['text':' Classic MacOS compilers ','line_number':160,'multiline':True]['text':' Fix compiler warning with sgi compiler ','line_number':169,'multiline':True]['text':'***********************************************************************','line_number':177,'multiline':True]['text':'                                                                       ','line_number':178,'multiline':True]['text':' <Section>                                                             ','line_number':179,'multiline':True]['text':'    basic_types                                                        ','line_number':180,'multiline':True]['text':'                                                                       ','line_number':181,'multiline':True]['text':'***********************************************************************','line_number':182,'multiline':True]['text':'***********************************************************************','line_number':185,'multiline':True]['text':'                                                                       ','line_number':186,'multiline':True]['text':' <Type>                                                                ','line_number':187,'multiline':True]['text':'    FT_Int16                                                           ','line_number':188,'multiline':True]['text':'                                                                       ','line_number':189,'multiline':True]['text':' <Description>                                                         ','line_number':190,'multiline':True]['text':'    A typedef for a 16bit signed integer type.                         ','line_number':191,'multiline':True]['text':'                                                                       ','line_number':192,'multiline':True]['text':'***********************************************************************','line_number':196,'multiline':True]['text':'                                                                       ','line_number':197,'multiline':True]['text':' <Type>                                                                ','line_number':198,'multiline':True]['text':'    FT_UInt16                                                          ','line_number':199,'multiline':True]['text':'                                                                       ','line_number':200,'multiline':True]['text':' <Description>                                                         ','line_number':201,'multiline':True]['text':'    A typedef for a 16bit unsigned integer type.                       ','line_number':202,'multiline':True]['text':'                                                                       ','line_number':203,'multiline':True]['text':' ','line_number':206,'multiline':True]['text':' this #if 0 ... #endif clause is for documentation purposes ','line_number':209,'multiline':True]['text':'***********************************************************************','line_number':212,'multiline':True]['text':'                                                                       ','line_number':213,'multiline':True]['text':' <Type>                                                                ','line_number':214,'multiline':True]['text':'    FT_Int32                                                           ','line_number':215,'multiline':True]['text':'                                                                       ','line_number':216,'multiline':True]['text':' <Description>                                                         ','line_number':217,'multiline':True]['text':'    A typedef for a 32bit signed integer type.  The size depends on    ','line_number':218,'multiline':True]['text':'    the configuration.                                                 ','line_number':219,'multiline':True]['text':'                                                                       ','line_number':220,'multiline':True]['text':'***********************************************************************','line_number':224,'multiline':True]['text':'                                                                       ','line_number':225,'multiline':True]['text':' <Type>                                                                ','line_number':226,'multiline':True]['text':'    FT_UInt32                                                          ','line_number':227,'multiline':True]['text':'                                                                       ','line_number':228,'multiline':True]['text':'    A typedef for a 32bit unsigned integer type.  The size depends on  ','line_number':229,'multiline':True]['text':'    the configuration.                                                 ','line_number':230,'multiline':True]['text':'                                                                       ','line_number':231,'multiline':True]['text':'***********************************************************************','line_number':235,'multiline':True]['text':'                                                                       ','line_number':236,'multiline':True]['text':' <Type>                                                                ','line_number':237,'multiline':True]['text':'    FT_Int64                                                           ','line_number':238,'multiline':True]['text':'                                                                       ','line_number':239,'multiline':True]['text':'    A typedef for a 64bit signed integer type.  The size depends on    ','line_number':240,'multiline':True]['text':'    the configuration.  Only defined if there is real 64bit support;   ','line_number':241,'multiline':True]['text':'    otherwise, it gets emulated with a structure (if necessary).       ','line_number':242,'multiline':True]['text':'                                                                       ','line_number':243,'multiline':True]['text':'***********************************************************************','line_number':247,'multiline':True]['text':'                                                                       ','line_number':248,'multiline':True]['text':' <Type>                                                                ','line_number':249,'multiline':True]['text':'    FT_UInt64                                                          ','line_number':250,'multiline':True]['text':'                                                                       ','line_number':251,'multiline':True]['text':'    A typedef for a 64bit unsigned integer type.  The size depends on  ','line_number':252,'multiline':True]['text':'    the configuration.  Only defined if there is real 64bit support;   ','line_number':253,'multiline':True]['text':'    otherwise, it gets emulated with a structure (if necessary).       ','line_number':254,'multiline':True]['text':'                                                                       ','line_number':255,'multiline':True]['text':' ','line_number':258,'multiline':True]['text':' look up an integer type that is at least 32 bits ','line_number':277,'multiline':True]['text':' determine whether we have a 64-bit int type for platforms without ','line_number':291,'multiline':True]['text':' Autoconf                                                          ','line_number':292,'multiline':True]['text':' FT_LONG64 must be defined if a 64-bit type is available ','line_number':295,'multiline':True]['text':'***********************************************************************','line_number':300,'multiline':True]['text':'                                                                       ','line_number':301,'multiline':True]['text':' A 64-bit data type may create compilation problems if you compile     ','line_number':302,'multiline':True]['text':' in strict ANSI mode.  To avoid them, we disable other 64-bit data     ','line_number':303,'multiline':True]['text':' types if __STDC__ is defined.  You can however ignore this rule       ','line_number':304,'multiline':True]['text':' by defining the FT_CONFIG_OPTION_FORCE_INT64 configuration macro.     ','line_number':305,'multiline':True]['text':'                                                                       ','line_number':306,'multiline':True]['text':' Visual C++ (and Intel C++) ','line_number':309,'multiline':True]['text':' this compiler provides the __int64 type ','line_number':311,'multiline':True]['text':' Borland C++ ','line_number':316,'multiline':True]['text':' XXXX: We should probably check the value of __BORLANDC__ in order ','line_number':318,'multiline':True]['text':'       to test the compiler version.                               ','line_number':319,'multiline':True]['text':' this compiler provides the __int64 type ','line_number':321,'multiline':True]['text':' Watcom C++ ','line_number':326,'multiline':True]['text':' Watcom doesn't provide 64-bit data types ','line_number':328,'multiline':True]['text':' Metrowerks CodeWarrior ','line_number':330,'multiline':True]['text':' GCC provides the `long long' type ','line_number':338,'multiline':True]['text':' _MSC_VER ','line_number':343,'multiline':True]['text':' FT_SIZEOF_LONG == 8 ','line_number':345,'multiline':True]['text':'***********************************************************************','line_number':353,'multiline':True]['text':'                                                                       ','line_number':354,'multiline':True]['text':' miscellaneous                                                         ','line_number':355,'multiline':True]['text':'                                                                       ','line_number':356,'multiline':True]['text':'***********************************************************************','line_number':357,'multiline':True]['text':' typeof condition taken from gnulib's `intprops.h' header file ','line_number':365,'multiline':True]['text':' empty ','line_number':371,'multiline':True]['text':' FT_MAKE_OPTION_SINGLE_OBJECT ','line_number':390,'multiline':True]['text':' !FT_BASE ','line_number':404,'multiline':True]['text':' !FT_BASE_DEF ','line_number':415,'multiline':True]['text':' !FT_EXPORT ','line_number':426,'multiline':True]['text':' !FT_EXPORT_DEF ','line_number':437,'multiline':True]['text':' !FT_EXPORT_VAR ','line_number':448,'multiline':True]['text':' The following macros are needed to compile the library with a   ','line_number':450,'multiline':True]['text':' C++ compiler and with 16bit compilers.                          ','line_number':451,'multiline':True]['text':'                                                                 ','line_number':452,'multiline':True]['text':' This is special.  Within C++, you must specify `extern "C"' for ','line_number':454,'multiline':True]['text':' functions which are used via function pointers, and you also    ','line_number':455,'multiline':True]['text':' must do that for structures which contain function pointers to  ','line_number':456,'multiline':True]['text':' assure C linkage -- it's not possible to have (local) anonymous ','line_number':457,'multiline':True]['text':' functions which are accessed by (global) function pointers.     ','line_number':458,'multiline':True]['text':'                                                                 ','line_number':459,'multiline':True]['text':'                                                                 ','line_number':460,'multiline':True]['text':' FT_CALLBACK_DEF is used to _define_ a callback function.        ','line_number':461,'multiline':True]['text':'                                                                 ','line_number':462,'multiline':True]['text':' FT_CALLBACK_TABLE is used to _declare_ a constant variable that ','line_number':463,'multiline':True]['text':' contains pointers to callback functions.                        ','line_number':464,'multiline':True]['text':'                                                                 ','line_number':465,'multiline':True]['text':' FT_CALLBACK_TABLE_DEF is used to _define_ a constant variable   ','line_number':466,'multiline':True]['text':' that contains pointers to callback functions.                   ','line_number':467,'multiline':True]['text':'                                                                 ','line_number':468,'multiline':True]['text':'                                                                 ','line_number':469,'multiline':True]['text':' Some 16bit compilers have to redefine these macros to insert    ','line_number':470,'multiline':True]['text':' the infamous `_cdecl' or `__fastcall' declarations.             ','line_number':471,'multiline':True]['text':'                                                                 ','line_number':472,'multiline':True]['text':' FT_CALLBACK_DEF ','line_number':479,'multiline':True]['text':' nothing ','line_number':487,'multiline':True]['text':' FT_CALLBACK_TABLE ','line_number':489,'multiline':True]['text':' FTCONFIG_H_ ','line_number':495,'multiline':True]['text':' END ','line_number':498,'multiline':True]