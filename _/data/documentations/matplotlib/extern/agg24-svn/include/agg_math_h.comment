['text':'----------------------------------------------------------------------------','line_number':1,'multiline':False]['text':' Anti-Grain Geometry - Version 2.4','line_number':2,'multiline':False]['text':' Copyright (C) 2002-2005 Maxim Shemanarev (http://www.antigrain.com)','line_number':3,'multiline':False]['text':'','line_number':4,'multiline':False]['text':' Permission to copy, use, modify, sell and distribute this software ','line_number':5,'multiline':False]['text':' is granted provided this copyright notice appears in all copies. ','line_number':6,'multiline':False]['text':' This software is provided "as is" without express or implied','line_number':7,'multiline':False]['text':' warranty, and with no claim as to its suitability for any purpose.','line_number':8,'multiline':False]['text':'','line_number':9,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':10,'multiline':False]['text':' Contact: mcseem@antigrain.com','line_number':11,'multiline':False]['text':'          mcseemagg@yahoo.com','line_number':12,'multiline':False]['text':'          http://www.antigrain.com','line_number':13,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':14,'multiline':False]['text':' Bessel function (besj) was adapted for use in AGG library by Andy Wilk ','line_number':15,'multiline':False]['text':' Contact: castor.vulgaris@gmail.com','line_number':16,'multiline':False]['text':'----------------------------------------------------------------------------','line_number':17,'multiline':False]['text':'------------------------------------------------------vertex_dist_epsilon','line_number':28,'multiline':False]['text':' Coinciding points maximal distance (Epsilon)','line_number':29,'multiline':False]['text':'-----------------------------------------------------intersection_epsilon','line_number':32,'multiline':False]['text':' See calc_intersection','line_number':33,'multiline':False]['text':'------------------------------------------------------------cross_product','line_number':36,'multiline':False]['text':'--------------------------------------------------------point_in_triangle','line_number':44,'multiline':False]['text':'-----------------------------------------------------------calc_distance','line_number':56,'multiline':False]['text':'--------------------------------------------------------calc_sq_distance','line_number':64,'multiline':False]['text':'------------------------------------------------calc_line_point_distance','line_number':72,'multiline':False]['text':'-------------------------------------------------------calc_line_point_u','line_number':87,'multiline':False]['text':'---------------------------------------------calc_line_point_sq_distance','line_number':106,'multiline':False]['text':'---------------------------------------------calc_line_point_sq_distance','line_number':124,'multiline':False]['text':'-------------------------------------------------------calc_intersection','line_number':135,'multiline':False]['text':'-----------------------------------------------------intersection_exists','line_number':149,'multiline':False]['text':' It's less expensive but you can't control the ','line_number':153,'multiline':False]['text':' boundary conditions: Less or LessEqual','line_number':154,'multiline':False]['text':' It's is more expensive but more flexible ','line_number':164,'multiline':False]['text':' in terms of boundary conditions.','line_number':165,'multiline':False]['text':'--------------------','line_number':166,'multiline':False]['text':'double den  = (x2-x1) * (y4-y3) - (y2-y1) * (x4-x3);','line_number':167,'multiline':False]['text':'if(fabs(den) < intersection_epsilon) return false;','line_number':168,'multiline':False]['text':'double nom1 = (x4-x3) * (y1-y3) - (y4-y3) * (x1-x3);','line_number':169,'multiline':False]['text':'double nom2 = (x2-x1) * (y1-y3) - (y2-y1) * (x1-x3);','line_number':170,'multiline':False]['text':'double ua = nom1 / den;','line_number':171,'multiline':False]['text':'double ub = nom2 / den;','line_number':172,'multiline':False]['text':'return ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0;','line_number':173,'multiline':False]['text':'--------------------------------------------------------calc_orthogonal','line_number':176,'multiline':False]['text':'--------------------------------------------------------dilate_triangle','line_number':189,'multiline':False]['text':'------------------------------------------------------calc_triangle_area','line_number':221,'multiline':False]['text':'-------------------------------------------------------calc_polygon_area','line_number':229,'multiline':False]['text':'------------------------------------------------------------------------','line_number':249,'multiline':False]['text':' Tables for fast sqrt','line_number':250,'multiline':False]['text':'---------------------------------------------------------------fast_sqrt','line_number':255,'multiline':False]['text':'Fast integer Sqrt - really fast: no cycles, divisions or multiplications','line_number':256,'multiline':False]['text':'Disable warning "no return value"','line_number':259,'multiline':False]['text':'For Ix86 family processors this assembler code is used. ','line_number':264,'multiline':False]['text':'The key command here is bsr - determination the number of the most ','line_number':265,'multiline':False]['text':'significant bit of the value. For other processors','line_number':266,'multiline':False]['text':'(and maybe compilers) the pure C "#else" section is used.','line_number':267,'multiline':False]['text':'This code is actually pure C and portable to most ','line_number':288,'multiline':False]['text':'arcitectures including 64bit ones. ','line_number':289,'multiline':False]['text':'The following piece of code is just an emulation of the','line_number':294,'multiline':False]['text':'Ix86 assembler command "bsr" (see above). However on old','line_number':295,'multiline':False]['text':'Intels (like Intel MMX 233MHz) this code is about twice ','line_number':296,'multiline':False]['text':'faster (sic!) then just one "bsr". On PIII and PIV the','line_number':297,'multiline':False]['text':'bsr is optimized quite well.','line_number':298,'multiline':False]['text':'This code calculates the sqrt.','line_number':325,'multiline':False]['text':'--------------------------------------------------------------------besj','line_number':343,'multiline':False]['text':' Function BESJ calculates Bessel function of first kind of order n','line_number':344,'multiline':False]['text':' Arguments:','line_number':345,'multiline':False]['text':'     n - an integer (>=0), the order','line_number':346,'multiline':False]['text':'     x - value at which the Bessel function is required','line_number':347,'multiline':False]['text':'--------------------','line_number':348,'multiline':False]['text':' C++ Mathematical Library','line_number':349,'multiline':False]['text':' Convereted from equivalent FORTRAN library','line_number':350,'multiline':False]['text':' Converetd by Gareth Walker for use by course 392 computational project','line_number':351,'multiline':False]['text':' All functions tested and yield the same results as the corresponding','line_number':352,'multiline':False]['text':' FORTRAN versions.','line_number':353,'multiline':False]['text':'','line_number':354,'multiline':False]['text':' If you have any problems using these functions please report them to','line_number':355,'multiline':False]['text':' M.Muldoon@UMIST.ac.uk','line_number':356,'multiline':False]['text':'','line_number':357,'multiline':False]['text':' Documentation available on the web','line_number':358,'multiline':False]['text':' http://www.ma.umist.ac.uk/mrm/Teaching/392/libs/392.html','line_number':359,'multiline':False]['text':' Version 1.0   8/98','line_number':360,'multiline':False]['text':' 29 October, 1999','line_number':361,'multiline':False]['text':'--------------------','line_number':362,'multiline':False]['text':' Adapted for use in AGG library by Andy Wilk (castor.vulgaris@gmail.com)','line_number':363,'multiline':False]['text':'------------------------------------------------------------------------','line_number':364,'multiline':False]['text':' b1 is the value from the previous iteration','line_number':378,'multiline':False]['text':' Set up a starting order for recurrence','line_number':379,'multiline':False]['text':' Apply recurrence down from curent max order','line_number':391,'multiline':False]